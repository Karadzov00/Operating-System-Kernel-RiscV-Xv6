GAS LISTING /tmp/cckmNpMU.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB52:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB162:
  30              	.LBB163:
  31              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 2


  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp ****     static bool entered;
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  19:src/../h/Riscv.hpp ****     static void popSppSpie();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // read register scause
  22:src/../h/Riscv.hpp ****     static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // write register scause
  25:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // read register sepc
  28:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // write register sepc
  31:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // read register stvec
  34:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // write register stvec
  37:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // read register stval
  40:src/../h/Riscv.hpp ****     static uint64 r_stval();
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     // write register stval
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     enum BitMaskSip
  46:src/../h/Riscv.hpp ****     {
  47:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  48:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  49:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  50:src/../h/Riscv.hpp ****     };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask set register sip
  53:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // mask clear register sip
  56:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // read register sip
  59:src/../h/Riscv.hpp ****     static uint64 r_sip();
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     // write register sip
  62:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/Riscv.hpp ****     {
  66:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
GAS LISTING /tmp/cckmNpMU.s 			page 3


  68:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/Riscv.hpp ****     };
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask set register sstatus
  72:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // mask clear register sstatus
  75:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // read register sstatus
  78:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // write register sstatus
  81:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     // supervisor trap
  84:src/../h/Riscv.hpp ****     static void supervisorTrap();
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp ****     static void TrapConsole();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void initKernel();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** private:
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     // supervisor trap handler
  93:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** //    static void syscallHandler();
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** };
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 102:src/../h/Riscv.hpp **** {
 103:src/../h/Riscv.hpp ****     uint64 volatile scause;
 104:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 105:src/../h/Riscv.hpp ****     return scause;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 114:src/../h/Riscv.hpp **** {
 115:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 116:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 117:src/../h/Riscv.hpp ****     return sepc;
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 4


 125:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 126:src/../h/Riscv.hpp **** {
 127:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 128:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 129:src/../h/Riscv.hpp ****     return stvec;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 135:src/../h/Riscv.hpp **** }
 136:src/../h/Riscv.hpp **** 
 137:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 138:src/../h/Riscv.hpp **** {
 139:src/../h/Riscv.hpp ****     uint64 volatile stval;
 140:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 141:src/../h/Riscv.hpp ****     return stval;
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 160:src/../h/Riscv.hpp **** {
 161:src/../h/Riscv.hpp ****     uint64 volatile sip;
 162:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 163:src/../h/Riscv.hpp ****     return sip;
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 167:src/../h/Riscv.hpp **** {
 168:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 169:src/../h/Riscv.hpp **** }
 170:src/../h/Riscv.hpp **** 
 171:src/../h/Riscv.hpp **** //mask set
 172:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 173:src/../h/Riscv.hpp **** {
 174:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 175:src/../h/Riscv.hpp **** }
 176:src/../h/Riscv.hpp **** 
 177:src/../h/Riscv.hpp **** //mask clear
 178:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  32              		.loc 2 180 5
GAS LISTING /tmp/cckmNpMU.s 			page 5


  33              		.loc 2 180 68 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 180 "src/../h/Riscv.hpp" 1
 181              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE163:
  42              	.LBE162:
  18:src/Riscv.cpp ****     __asm__ volatile ("sret");  //exit privileged regime
  43              		.loc 1 18 5 is_stmt 1
  44              		.loc 1 18 30 is_stmt 0
  45              	#APP
  46              	# 18 "src/Riscv.cpp" 1
  19              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 19 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE52:
  60              		.align	2
  61              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  63              	_ZN5Riscv20handleSupervisorTrapEv:
  64              	.LFB53:
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** bool Riscv::privilege=false;
  22:src/Riscv.cpp **** bool Riscv::entered=false;
  23:src/Riscv.cpp **** 
  24:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  65              		.loc 1 24 35 is_stmt 1
  66              		.cfi_startproc
  67 0028 130101EF 		addi	sp,sp,-272
  68              		.cfi_def_cfa_offset 272
  69 002c 23341110 		sd	ra,264(sp)
  70 0030 23308110 		sd	s0,256(sp)
  71 0034 233C910E 		sd	s1,248(sp)
  72 0038 2338210F 		sd	s2,240(sp)
  73 003c 2334310F 		sd	s3,232(sp)
  74 0040 2330410F 		sd	s4,224(sp)
  75 0044 233C510D 		sd	s5,216(sp)
  76 0048 2338610D 		sd	s6,208(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
  79              		.cfi_offset 9, -24
  80              		.cfi_offset 18, -32
  81              		.cfi_offset 19, -40
  82              		.cfi_offset 20, -48
  83              		.cfi_offset 21, -56
GAS LISTING /tmp/cckmNpMU.s 			page 6


  84              		.cfi_offset 22, -64
  85 004c 13040111 		addi	s0,sp,272
  86              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp ****     uint64 scause = r_scause();
  87              		.loc 1 25 5
  88              	.LBB164:
  89              	.LBB165:
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90              		.loc 2 103 5
 104:src/../h/Riscv.hpp ****     return scause;
  91              		.loc 2 104 5
 104:src/../h/Riscv.hpp ****     return scause;
  92              		.loc 2 104 72 is_stmt 0
  93              	#APP
  94              	# 104 "src/../h/Riscv.hpp" 1
  95              		csrr a5, scause
  96              	# 0 "" 2
  97              	#NO_APP
  98 0054 2338F4EE 		sd	a5,-272(s0)
 105:src/../h/Riscv.hpp **** }
  99              		.loc 2 105 5 is_stmt 1
 105:src/../h/Riscv.hpp **** }
 100              		.loc 2 105 12 is_stmt 0
 101 0058 033704EF 		ld	a4,-272(s0)
 102              	.LVL2:
 103              	.LBE165:
 104              	.LBE164:
  26:src/Riscv.cpp ****     uint64 a0reg;
 105              		.loc 1 26 5 is_stmt 1
  27:src/Riscv.cpp ****     uint64 arg1;
 106              		.loc 1 27 5
  28:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
 107              		.loc 1 28 5
 108              		.loc 1 28 49 is_stmt 0
 109              	#APP
 110              	# 28 "src/Riscv.cpp" 1
  29              	
 111              		mv s1, a0
 112              	# 0 "" 2
 113              	.LVL3:
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
 114              		.loc 1 31 5 is_stmt 1
 115              	#NO_APP
 116              	.LBB166:
 117 0060 9307F0FF 		li	a5,-1
 118 0064 9397F703 		slli	a5,a5,63
 119 0068 93871700 		addi	a5,a5,1
 120 006c 6302F704 		beq	a4,a5,.L28
 121              	.LBE166:
  32:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  33:src/Riscv.cpp ****     }
  34:src/Riscv.cpp ****     else if(!privilege){
 122              		.loc 1 34 10
 123              	.LBB421:
 124              	.LBB167:
 125              		.loc 1 34 13 is_stmt 0
GAS LISTING /tmp/cckmNpMU.s 			page 7


 126 0070 97070000 		lbu	a5,.LANCHOR0
 126      83C70700 
 127              		.loc 1 34 10
 128 0078 63940706 		bnez	a5,.L6
 129              	.LBB168:
  35:src/Riscv.cpp ****         uint64 sepc = r_sepc();
 130              		.loc 1 35 9 is_stmt 1
 131              	.LBB169:
 132              	.LBB170:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 133              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 134              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 135              		.loc 2 116 64 is_stmt 0
 136              	#APP
 137              	# 116 "src/../h/Riscv.hpp" 1
 138              		csrr a5, sepc
 139              	# 0 "" 2
 140              	#NO_APP
 141 0080 233CF4EE 		sd	a5,-264(s0)
 117:src/../h/Riscv.hpp **** }
 142              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 143              		.loc 2 117 12 is_stmt 0
 144 0084 833784EF 		ld	a5,-264(s0)
 145              	.LVL4:
 146              	.LBE170:
 147              	.LBE169:
  36:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 148              		.loc 1 36 9 is_stmt 1
 149              	.LBB171:
 150              	.LBB172:
 180:src/../h/Riscv.hpp **** }
 151              		.loc 2 180 5
 180:src/../h/Riscv.hpp **** }
 152              		.loc 2 180 68 is_stmt 0
 153 0088 13070010 		li	a4,256
 154              	.LVL5:
 155              	#APP
 156              	# 180 "src/../h/Riscv.hpp" 1
 157              		csrc sstatus, a4
 158              	# 0 "" 2
 159              	.LVL6:
 160              	#NO_APP
 161              	.LBE172:
 162              	.LBE171:
  37:src/Riscv.cpp ****         privilege=true;
 163              		.loc 1 37 9 is_stmt 1
 164              		.loc 1 37 18 is_stmt 0
 165 0090 17070000 		lla	a4,.LANCHOR0
 165      13070700 
 166 0098 93061000 		li	a3,1
 167 009c 2300D700 		sb	a3,0(a4)
  38:src/Riscv.cpp ****         entered=true;
 168              		.loc 1 38 9 is_stmt 1
 169              		.loc 1 38 16 is_stmt 0
GAS LISTING /tmp/cckmNpMU.s 			page 8


 170 00a0 A300D700 		sb	a3,1(a4)
  39:src/Riscv.cpp ****         w_sepc(sepc + 4);
 171              		.loc 1 39 9 is_stmt 1
 172              		.loc 1 39 15 is_stmt 0
 173 00a4 93874700 		addi	a5,a5,4
 174              	.LVL7:
 175              	.LBB173:
 176              	.LBB174:
 122:src/../h/Riscv.hpp **** }
 177              		.loc 2 122 5 is_stmt 1
 122:src/../h/Riscv.hpp **** }
 178              		.loc 2 122 65 is_stmt 0
 179              	#APP
 180              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 181              		csrw sepc, a5
 182              	# 0 "" 2
 183              		.loc 2 123 1
 184              	#NO_APP
 185 00ac 6F00C000 		j	.L3
 186              	.LVL8:
 187              	.L28:
 188              	.LBE174:
 189              	.LBE173:
 190              	.LBE168:
 191              	.LBE167:
  32:src/Riscv.cpp ****     }
 192              		.loc 1 32 9 is_stmt 1
 193              	.LBB404:
 194              	.LBB405:
 156:src/../h/Riscv.hpp **** }
 195              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 196              		.loc 2 156 64 is_stmt 0
 197 00b0 93072000 		li	a5,2
 198              	#APP
 199              	# 156 "src/../h/Riscv.hpp" 1
 200              		csrc sip, a5
 201              	# 0 "" 2
 202              	.LVL9:
 203              	#NO_APP
 204              	.L3:
 205              	.LBE405:
 206              	.LBE404:
 207              	.LBE421:
  40:src/Riscv.cpp ****     }
  41:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
  42:src/Riscv.cpp ****         console_handler();
  43:src/Riscv.cpp ****     }
  44:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  45:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****         if(a0reg==0x11){
  49:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  50:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  51:src/Riscv.cpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 9


  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****             _thread::thread_t *arg1;
  54:src/Riscv.cpp ****             _thread::Body arg2;
  55:src/Riscv.cpp ****             uint64 arg3;
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp **** 
  58:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  60:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****             uint64* stack =(uint64*) MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64)
  68:src/Riscv.cpp **** 
  69:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  70:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, stack);    //t je thread_t
  71:src/Riscv.cpp ****             *arg1=t;
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****             uint64 ret;
  74:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  75:src/Riscv.cpp ****             else ret =-1;
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             //return _thread* adress through a0
  78:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp ****             w_sstatus(sstatus);
  81:src/Riscv.cpp ****             w_sepc(sepc);
  82:src/Riscv.cpp ****         }
  83:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  84:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  85:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  86:src/Riscv.cpp ****             //kmem_alloc
  87:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  90:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             //write return value to a0 register
  93:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****             w_sstatus(sstatus);
  96:src/Riscv.cpp ****             w_sepc(sepc);
  97:src/Riscv.cpp ****         }
  98:src/Riscv.cpp ****         else if(a0reg==0x02){
  99:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 100:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 105:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 106:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             w_sstatus(sstatus);
GAS LISTING /tmp/cckmNpMU.s 			page 10


 109:src/Riscv.cpp ****             w_sepc(sepc);
 110:src/Riscv.cpp ****         }
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****         else if(a0reg==0x12){
 113:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 114:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             _thread::running->finished=true;
 117:src/Riscv.cpp ****             _thread::dispatch();
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             w_sstatus(sstatus);
 120:src/Riscv.cpp ****             w_sepc(sepc);
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****         }
 124:src/Riscv.cpp ****         else if(a0reg == 0x13){
 125:src/Riscv.cpp ****             //thread dispatch
 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             _thread::dispatch();
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****             w_sstatus(sstatus);
 133:src/Riscv.cpp ****             w_sepc(sepc);
 134:src/Riscv.cpp ****         }
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         else if(a0reg==0x04){
 137:src/Riscv.cpp ****             //call from yield
 138:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 139:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 142:src/Riscv.cpp ****             _thread::dispatch();
 143:src/Riscv.cpp **** 
 144:src/Riscv.cpp ****             w_sstatus(sstatus);
 145:src/Riscv.cpp ****             w_sepc(sepc);
 146:src/Riscv.cpp ****         }
 147:src/Riscv.cpp ****         else if(a0reg==0x21){
 148:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 149:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 152:src/Riscv.cpp ****            uint64 arg2;
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 155:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 158:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 161:src/Riscv.cpp ****             sem->opened=true;
 162:src/Riscv.cpp ****             *arg1=sem;
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             uint64 ret=0;
 165:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
GAS LISTING /tmp/cckmNpMU.s 			page 11


 166:src/Riscv.cpp ****             else ret=-1;
 167:src/Riscv.cpp **** 
 168:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 169:src/Riscv.cpp **** 
 170:src/Riscv.cpp ****             w_sstatus(sstatus);
 171:src/Riscv.cpp ****             w_sepc(sepc);
 172:src/Riscv.cpp ****         }
 173:src/Riscv.cpp ****         else if(a0reg==0x22){
 174:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 175:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 185:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 186:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 187:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 188:src/Riscv.cpp ****                 t->setDeblocked();
 189:src/Riscv.cpp ****                 sem->val++;
 190:src/Riscv.cpp ****                 Scheduler::put(t);
 191:src/Riscv.cpp ****             }
 192:src/Riscv.cpp ****              sem->opened=false;
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp ****             delete sem;
 195:src/Riscv.cpp **** 
 196:src/Riscv.cpp ****             w_sstatus(sstatus);
 197:src/Riscv.cpp ****             w_sepc(sepc);
 198:src/Riscv.cpp ****         }
 199:src/Riscv.cpp ****         else if(a0reg==0x23){
 200:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 201:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****             uint64 ret;
 210:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****                  ret = arg1->wait();
 213:src/Riscv.cpp **** 
 214:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 215:src/Riscv.cpp **** 
 216:src/Riscv.cpp ****             w_sstatus(sstatus);
 217:src/Riscv.cpp ****             w_sepc(sepc);
 218:src/Riscv.cpp ****         }
 219:src/Riscv.cpp ****         else if(a0reg==0x24){
 220:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 221:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 222:src/Riscv.cpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 12


 223:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             uint64 ret;
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp ****                 arg1->signal();
 232:src/Riscv.cpp ****                 ret=0;
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp **** 
 235:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****             w_sstatus(sstatus);
 238:src/Riscv.cpp ****             w_sepc(sepc);
 239:src/Riscv.cpp ****         }
 240:src/Riscv.cpp ****         else if(a0reg==0x41){
 241:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 242:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp ****             //call method from kernel Console class
 245:src/Riscv.cpp **** 
 246:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::TrapConsole));
 247:src/Riscv.cpp ****             char c = __getc();
 248:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 249:src/Riscv.cpp **** 
 250:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp **** 
 253:src/Riscv.cpp ****             w_sstatus(sstatus);
 254:src/Riscv.cpp ****             w_sepc(sepc);
 255:src/Riscv.cpp ****         }
 256:src/Riscv.cpp ****         else if(a0reg==0x42){
 257:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 258:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 259:src/Riscv.cpp **** 
 260:src/Riscv.cpp ****             char c;
 261:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::TrapConsole));
 266:src/Riscv.cpp ****             __putc(c);
 267:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp ****             w_sstatus(sstatus);
 271:src/Riscv.cpp ****             w_sepc(sepc);
 272:src/Riscv.cpp ****         }
 273:src/Riscv.cpp ****         else{
 274:src/Riscv.cpp ****             // unexpected trap cause
 275:src/Riscv.cpp ****         }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****     }
 278:src/Riscv.cpp **** 
 279:src/Riscv.cpp **** }
GAS LISTING /tmp/cckmNpMU.s 			page 13


 208              		.loc 1 279 1
 209 00b8 83308110 		ld	ra,264(sp)
 210              		.cfi_remember_state
 211              		.cfi_restore 1
 212 00bc 03340110 		ld	s0,256(sp)
 213              		.cfi_restore 8
 214              		.cfi_def_cfa 2, 272
 215 00c0 8334810F 		ld	s1,248(sp)
 216              		.cfi_restore 9
 217 00c4 0339010F 		ld	s2,240(sp)
 218              		.cfi_restore 18
 219 00c8 8339810E 		ld	s3,232(sp)
 220              		.cfi_restore 19
 221 00cc 033A010E 		ld	s4,224(sp)
 222              		.cfi_restore 20
 223 00d0 833A810D 		ld	s5,216(sp)
 224              		.cfi_restore 21
 225 00d4 033B010D 		ld	s6,208(sp)
 226              		.cfi_restore 22
 227 00d8 13010111 		addi	sp,sp,272
 228              		.cfi_def_cfa_offset 0
 229 00dc 67800000 		jr	ra
 230              	.LVL10:
 231              	.L6:
 232              		.cfi_restore_state
  41:src/Riscv.cpp ****         console_handler();
 233              		.loc 1 41 10 is_stmt 1
 234              	.LBB422:
 235              	.LBB406:
 236              	.LBB175:
 237 00e0 9307F0FF 		li	a5,-1
 238 00e4 9397F703 		slli	a5,a5,63
 239 00e8 93879700 		addi	a5,a5,9
 240 00ec 6302F70C 		beq	a4,a5,.L29
 241              	.LBE175:
 242              	.LBE406:
 243              	.LBE422:
  44:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 244              		.loc 1 44 10
 245              	.LBB423:
 246              	.LBB407:
 247              	.LBB390:
 248              	.LBB176:
  44:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 249              		.loc 1 44 45 is_stmt 0
 250 00f0 130787FF 		addi	a4,a4,-8
 251              	.LVL11:
  44:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 252              		.loc 1 44 10
 253 00f4 93071000 		li	a5,1
 254 00f8 E3E0E7FC 		bgtu	a4,a5,.L3
 255              	.LBE176:
 256              	.LBE390:
 257              	.LBE407:
 258              	.LBE423:
  48:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 259              		.loc 1 48 9 is_stmt 1
GAS LISTING /tmp/cckmNpMU.s 			page 14


 260              	.LBB424:
 261              	.LBB408:
 262              	.LBB391:
 263              	.LBB377:
 264              	.LBB177:
 265 00fc 93071001 		li	a5,17
 266 0100 638EF40A 		beq	s1,a5,.L30
 267              	.LVL12:
 268              	.L8:
 269              	.LBE177:
 270              	.LBE377:
 271              	.LBE391:
 272              	.LBE408:
 273              	.LBE424:
  83:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 274              		.loc 1 83 9
 275              	.LBB425:
 276              	.LBB409:
 277              	.LBB392:
 278              	.LBB378:
 279              	.LBB187:
 280 0104 93071000 		li	a5,1
 281 0108 6386F412 		beq	s1,a5,.L31
 282              	.LBE187:
 283              	.LBE378:
 284              	.LBE392:
 285              	.LBE409:
 286              	.LBE425:
  98:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 287              		.loc 1 98 14
 288              	.LBB426:
 289              	.LBB410:
 290              	.LBB393:
 291              	.LBB379:
 292              	.LBB365:
 293              	.LBB188:
 294 010c 93072000 		li	a5,2
 295 0110 6382F416 		beq	s1,a5,.L32
 296              	.LBE188:
 297              	.LBE365:
 298              	.LBE379:
 299              	.LBE393:
 300              	.LBE410:
 301              	.LBE426:
 112:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 302              		.loc 1 112 14
 303              	.LBB427:
 304              	.LBB411:
 305              	.LBB394:
 306              	.LBB380:
 307              	.LBB366:
 308              	.LBB346:
 309              	.LBB189:
 310 0114 93072001 		li	a5,18
 311 0118 638CF418 		beq	s1,a5,.L33
 312              	.LBE189:
 313              	.LBE346:
GAS LISTING /tmp/cckmNpMU.s 			page 15


 314              	.LBE366:
 315              	.LBE380:
 316              	.LBE394:
 317              	.LBE411:
 318              	.LBE427:
 124:src/Riscv.cpp ****             //thread dispatch
 319              		.loc 1 124 14
 320              	.LBB428:
 321              	.LBB412:
 322              	.LBB395:
 323              	.LBB381:
 324              	.LBB367:
 325              	.LBB347:
 326              	.LBB328:
 327              	.LBB190:
 328 011c 93073001 		li	a5,19
 329 0120 638AF41C 		beq	s1,a5,.L34
 330              	.LBE190:
 331              	.LBE328:
 332              	.LBE347:
 333              	.LBE367:
 334              	.LBE381:
 335              	.LBE395:
 336              	.LBE412:
 337              	.LBE428:
 136:src/Riscv.cpp ****             //call from yield
 338              		.loc 1 136 14
 339              	.LBB429:
 340              	.LBB413:
 341              	.LBB396:
 342              	.LBB382:
 343              	.LBB368:
 344              	.LBB348:
 345              	.LBB329:
 346              	.LBB311:
 347              	.LBB191:
 348 0124 93074000 		li	a5,4
 349 0128 638EF41E 		beq	s1,a5,.L35
 350              	.LBE191:
 351              	.LBE311:
 352              	.LBE329:
 353              	.LBE348:
 354              	.LBE368:
 355              	.LBE382:
 356              	.LBE396:
 357              	.LBE413:
 358              	.LBE429:
 147:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 359              		.loc 1 147 14
 360              	.LBB430:
 361              	.LBB414:
 362              	.LBB397:
 363              	.LBB383:
 364              	.LBB369:
 365              	.LBB349:
 366              	.LBB330:
 367              	.LBB312:
GAS LISTING /tmp/cckmNpMU.s 			page 16


 368              	.LBB295:
 369              	.LBB192:
 370 012c 93071002 		li	a5,33
 371 0130 6388F422 		beq	s1,a5,.L36
 372              	.LBE192:
 373              	.LBE295:
 374              	.LBE312:
 375              	.LBE330:
 376              	.LBE349:
 377              	.LBE369:
 378              	.LBE383:
 379              	.LBE397:
 380              	.LBE414:
 381              	.LBE430:
 173:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 382              		.loc 1 173 14
 383              	.LBB431:
 384              	.LBB415:
 385              	.LBB398:
 386              	.LBB384:
 387              	.LBB370:
 388              	.LBB350:
 389              	.LBB331:
 390              	.LBB313:
 391              	.LBB296:
 392              	.LBB280:
 393              	.LBB193:
 394 0134 93072002 		li	a5,34
 395 0138 638CF428 		beq	s1,a5,.L37
 396              	.LBE193:
 397              	.LBE280:
 398              	.LBE296:
 399              	.LBE313:
 400              	.LBE331:
 401              	.LBE350:
 402              	.LBE370:
 403              	.LBE384:
 404              	.LBE398:
 405              	.LBE415:
 406              	.LBE431:
 199:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 407              		.loc 1 199 14
 408              	.LBB432:
 409              	.LBB416:
 410              	.LBB399:
 411              	.LBB385:
 412              	.LBB371:
 413              	.LBB351:
 414              	.LBB332:
 415              	.LBB314:
 416              	.LBB297:
 417              	.LBB281:
 418              	.LBB262:
 419              	.LBB194:
 420 013c 93073002 		li	a5,35
 421 0140 6384F432 		beq	s1,a5,.L38
 422              	.LBE194:
GAS LISTING /tmp/cckmNpMU.s 			page 17


 423              	.LBE262:
 424              	.LBE281:
 425              	.LBE297:
 426              	.LBE314:
 427              	.LBE332:
 428              	.LBE351:
 429              	.LBE371:
 430              	.LBE385:
 431              	.LBE399:
 432              	.LBE416:
 433              	.LBE432:
 219:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 434              		.loc 1 219 14
 435              	.LBB433:
 436              	.LBB417:
 437              	.LBB400:
 438              	.LBB386:
 439              	.LBB372:
 440              	.LBB352:
 441              	.LBB333:
 442              	.LBB315:
 443              	.LBB298:
 444              	.LBB282:
 445              	.LBB263:
 446              	.LBB239:
 447              	.LBB195:
 448 0144 93074002 		li	a5,36
 449 0148 638EF434 		beq	s1,a5,.L39
 450              	.LBE195:
 451              	.LBE239:
 452              	.LBE263:
 453              	.LBE282:
 454              	.LBE298:
 455              	.LBE315:
 456              	.LBE333:
 457              	.LBE352:
 458              	.LBE372:
 459              	.LBE386:
 460              	.LBE400:
 461              	.LBE417:
 462              	.LBE433:
 240:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 463              		.loc 1 240 14
 464              	.LBB434:
 465              	.LBB418:
 466              	.LBB401:
 467              	.LBB387:
 468              	.LBB373:
 469              	.LBB353:
 470              	.LBB334:
 471              	.LBB316:
 472              	.LBB299:
 473              	.LBB283:
 474              	.LBB264:
 475              	.LBB240:
 476              	.LBB227:
 477              	.LBB196:
GAS LISTING /tmp/cckmNpMU.s 			page 18


 478 014c 93071004 		li	a5,65
 479 0150 638AF438 		beq	s1,a5,.L40
 480              	.LBE196:
 481              	.LBE227:
 482              	.LBE240:
 483              	.LBE264:
 484              	.LBE283:
 485              	.LBE299:
 486              	.LBE316:
 487              	.LBE334:
 488              	.LBE353:
 489              	.LBE373:
 490              	.LBE387:
 491              	.LBE401:
 492              	.LBE418:
 493              	.LBE434:
 256:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 494              		.loc 1 256 14
 495              	.LBB435:
 496              	.LBB419:
 497              	.LBB402:
 498              	.LBB388:
 499              	.LBB374:
 500              	.LBB354:
 501              	.LBB335:
 502              	.LBB317:
 503              	.LBB300:
 504              	.LBB284:
 505              	.LBB265:
 506              	.LBB241:
 507              	.LBB228:
 508              	.LBB216:
 509              	.LBB197:
 510 0154 93072004 		li	a5,66
 511 0158 E390F4F6 		bne	s1,a5,.L3
 512              	.LBB198:
 257:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 513              		.loc 1 257 13
 514              	.LBB199:
 515              	.LBB200:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 516              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 517              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 518              		.loc 2 116 64 is_stmt 0
 519              	#APP
 520              	# 116 "src/../h/Riscv.hpp" 1
 521              		csrr a5, sepc
 522              	# 0 "" 2
 523              	#NO_APP
 524 0160 233CF4FA 		sd	a5,-72(s0)
 117:src/../h/Riscv.hpp **** }
 525              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 526              		.loc 2 117 12 is_stmt 0
 527 0164 833484FB 		ld	s1,-72(s0)
GAS LISTING /tmp/cckmNpMU.s 			page 19


 528              	.LVL13:
 529              	.LBE200:
 530              	.LBE199:
 257:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 531              		.loc 1 257 38
 532 0168 93844400 		addi	s1,s1,4
 533              	.LVL14:
 258:src/Riscv.cpp **** 
 534              		.loc 1 258 13 is_stmt 1
 535              	.LBB201:
 536              	.LBB202:
 182:src/../h/Riscv.hpp **** 
 183:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 184:src/../h/Riscv.hpp **** {
 185:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 537              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 538              		.loc 2 186 5
 539              		.loc 2 186 76 is_stmt 0
 540              	#APP
 541              	# 186 "src/../h/Riscv.hpp" 1
 187              	    return sstatus;
 542              		csrr a5, sstatus
 543              	# 0 "" 2
 544              	#NO_APP
 545 0170 2338F4FA 		sd	a5,-80(s0)
 546              		.loc 2 187 5 is_stmt 1
 547              		.loc 2 187 12 is_stmt 0
 548 0174 033904FB 		ld	s2,-80(s0)
 549              	.LVL15:
 550              	.LBE202:
 551              	.LBE201:
 260:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 552              		.loc 1 260 13 is_stmt 1
 261:src/Riscv.cpp **** 
 553              		.loc 1 261 13
 261:src/Riscv.cpp **** 
 554              		.loc 1 261 48 is_stmt 0
 555              	#APP
 556              	# 261 "src/Riscv.cpp" 1
 263:src/Riscv.cpp **** 
 557              		ld a1, 11*8(fp)
 558              	# 0 "" 2
 559              		.loc 1 263 13 is_stmt 1
 263:src/Riscv.cpp **** 
 560              		.loc 1 263 53 is_stmt 0
 561              	# 263 "src/Riscv.cpp" 1
 562              		mv a0, a1
 563              	# 0 "" 2
 564              	#NO_APP
 565 0180 1375F50F 		andi	a0,a0,0xff
 566              	.LVL16:
 265:src/Riscv.cpp ****             __putc(c);
 567              		.loc 1 265 13 is_stmt 1
 265:src/Riscv.cpp ****             __putc(c);
 568              		.loc 1 265 99 is_stmt 0
 569 0184 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
GAS LISTING /tmp/cckmNpMU.s 			page 20


 569      83B70700 
 570              	#APP
 571              	# 265 "src/Riscv.cpp" 1
 266:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 572              		csrw stvec, a5
 573              	# 0 "" 2
 574              		.loc 1 266 13 is_stmt 1
 266:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 575              		.loc 1 266 19 is_stmt 0
 576              	#NO_APP
 577 0190 97000000 		call	__putc@plt
 577      E7800000 
 578              	.LVL17:
 267:src/Riscv.cpp **** 
 579              		.loc 1 267 13 is_stmt 1
 267:src/Riscv.cpp **** 
 580              		.loc 1 267 102 is_stmt 0
 581 0198 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 581      83B70700 
 582              	#APP
 583              	# 267 "src/Riscv.cpp" 1
 270:src/Riscv.cpp ****             w_sepc(sepc);
 584              		csrw stvec, a5
 585              	# 0 "" 2
 586              		.loc 1 270 13 is_stmt 1
 587              	.LVL18:
 588              	#NO_APP
 589              	.LBB203:
 590              	.LBB204:
 188:src/../h/Riscv.hpp **** }
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 191:src/../h/Riscv.hpp **** {
 192:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 591              		.loc 2 192 5
 592              		.loc 2 192 77 is_stmt 0
 593              	#APP
 594              	# 192 "src/../h/Riscv.hpp" 1
 193              	}
 595              		csrw sstatus, s2
 596              	# 0 "" 2
 597              	.LVL19:
 598              	#NO_APP
 599              	.LBE204:
 600              	.LBE203:
 271:src/Riscv.cpp ****         }
 601              		.loc 1 271 13 is_stmt 1
 602              	.LBB205:
 603              	.LBB206:
 122:src/../h/Riscv.hpp **** }
 604              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 605              		.loc 2 122 65 is_stmt 0
 606              	#APP
 607              	# 122 "src/../h/Riscv.hpp" 1
 608              		csrw sepc, s1
 609              	# 0 "" 2
GAS LISTING /tmp/cckmNpMU.s 			page 21


 610              	.LVL20:
 611              	#NO_APP
 612              	.LBE206:
 613              	.LBE205:
 614              	.LBE198:
 615              	.LBE197:
 616              	.LBE216:
 617              	.LBE228:
 618              	.LBE241:
 619              	.LBE265:
 620              	.LBE284:
 621              	.LBE300:
 622              	.LBE317:
 623              	.LBE335:
 624              	.LBE354:
 625              	.LBE374:
 626              	.LBE388:
 627              	.LBE402:
 628              	.LBE419:
 629              	.LBE435:
 630              		.loc 1 279 1
 631 01ac 6FF0DFF0 		j	.L3
 632              	.LVL21:
 633              	.L29:
 634              	.LBB436:
 635              	.LBB420:
 636              	.LBB403:
  42:src/Riscv.cpp ****     }
 637              		.loc 1 42 9 is_stmt 1
  42:src/Riscv.cpp ****     }
 638              		.loc 1 42 24 is_stmt 0
 639 01b0 97000000 		call	console_handler@plt
 639      E7800000 
 640              	.LVL22:
 641 01b8 6FF01FF0 		j	.L3
 642              	.LVL23:
 643              	.L30:
 644              	.LBB389:
 645              	.LBB375:
 646              	.LBB178:
  49:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 647              		.loc 1 49 13 is_stmt 1
 648              	.LBB179:
 649              	.LBB180:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 650              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 651              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 652              		.loc 2 116 64 is_stmt 0
 653              	#APP
 654              	# 116 "src/../h/Riscv.hpp" 1
 655              		csrr a5, sepc
 656              	# 0 "" 2
 657              	#NO_APP
 658 01c0 2334F4F0 		sd	a5,-248(s0)
 117:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cckmNpMU.s 			page 22


 659              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 660              		.loc 2 117 12 is_stmt 0
 661 01c4 033984F0 		ld	s2,-248(s0)
 662              	.LBE180:
 663              	.LBE179:
  49:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 664              		.loc 1 49 38
 665 01c8 13094900 		addi	s2,s2,4
 666              	.LVL24:
  50:src/Riscv.cpp **** 
 667              		.loc 1 50 13 is_stmt 1
 668              	.LBB181:
 669              	.LBB182:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 670              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 671              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 672              		.loc 2 186 76 is_stmt 0
 673              	#APP
 674              	# 186 "src/../h/Riscv.hpp" 1
 675              		csrr a5, sstatus
 676              	# 0 "" 2
 677              	#NO_APP
 678 01d0 2330F4F0 		sd	a5,-256(s0)
 187:src/../h/Riscv.hpp **** }
 679              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 680              		.loc 2 187 12 is_stmt 0
 681 01d4 833904F0 		ld	s3,-256(s0)
 682              	.LVL25:
 683              	.LBE182:
 684              	.LBE181:
  53:src/Riscv.cpp ****             _thread::Body arg2;
 685              		.loc 1 53 13 is_stmt 1
  54:src/Riscv.cpp ****             uint64 arg3;
 686              		.loc 1 54 13
  55:src/Riscv.cpp **** 
 687              		.loc 1 55 13
  58:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 688              		.loc 1 58 13
  58:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 689              		.loc 1 58 48 is_stmt 0
 690              	#APP
 691              	# 58 "src/Riscv.cpp" 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 692              		ld a1, 11*8(fp)
 693              	# 0 "" 2
 694              		.loc 1 59 13 is_stmt 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 695              		.loc 1 59 48 is_stmt 0
 696              	# 59 "src/Riscv.cpp" 1
  60:src/Riscv.cpp **** 
 697              		ld a2, 12*8(fp)
 698              	# 0 "" 2
 699              		.loc 1 60 13 is_stmt 1
GAS LISTING /tmp/cckmNpMU.s 			page 23


  60:src/Riscv.cpp **** 
 700              		.loc 1 60 48 is_stmt 0
 701              	# 60 "src/Riscv.cpp" 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 702              		ld a3, 13*8(fp)
 703              	# 0 "" 2
 704              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 705              		.loc 1 63 56 is_stmt 0
 706              	# 63 "src/Riscv.cpp" 1
 707              		mv s4, a1
 708              	# 0 "" 2
 709              	.LVL26:
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 710              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 711              		.loc 1 64 56 is_stmt 0
 712              	# 64 "src/Riscv.cpp" 1
 713              		mv s5, a2
 714              	# 0 "" 2
 715              	.LVL27:
  65:src/Riscv.cpp **** 
 716              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp **** 
 717              		.loc 1 65 56 is_stmt 0
 718              	# 65 "src/Riscv.cpp" 1
 719              		mv s6, a3
 720              	# 0 "" 2
 721              	.LVL28:
  67:src/Riscv.cpp **** 
 722              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp **** 
 723              		.loc 1 67 65 is_stmt 0
 724              	#NO_APP
 725 01f0 37850000 		li	a0,32768
 726 01f4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 726      E7800000 
 727              	.LVL29:
 728 01fc 13060500 		mv	a2,a0
 729              	.LVL30:
  70:src/Riscv.cpp ****             *arg1=t;
 730              		.loc 1 70 13 is_stmt 1
  70:src/Riscv.cpp ****             *arg1=t;
 731              		.loc 1 70 47 is_stmt 0
 732 0200 93050B00 		mv	a1,s6
 733 0204 13850A00 		mv	a0,s5
 734              	.LVL31:
 735 0208 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 735      E7800000 
 736              	.LVL32:
  71:src/Riscv.cpp **** 
 737              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp **** 
 738              		.loc 1 71 18 is_stmt 0
 739 0210 2330AA00 		sd	a0,0(s4)
  73:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 740              		.loc 1 73 13 is_stmt 1
GAS LISTING /tmp/cckmNpMU.s 			page 24


  74:src/Riscv.cpp ****             else ret =-1;
 741              		.loc 1 74 13
 742 0214 630C0500 		beqz	a0,.L25
  74:src/Riscv.cpp ****             else ret =-1;
 743              		.loc 1 74 31 is_stmt 0
 744 0218 93070000 		li	a5,0
 745              	.L9:
 746              	.LVL33:
  78:src/Riscv.cpp **** 
 747              		.loc 1 78 13 is_stmt 1
  78:src/Riscv.cpp **** 
 748              		.loc 1 78 56 is_stmt 0
 749              	#APP
 750              	# 78 "src/Riscv.cpp" 1
  80:src/Riscv.cpp ****             w_sepc(sepc);
 751              		mv a0, a5
 752              	# 0 "" 2
 753              		.loc 1 80 13 is_stmt 1
 754              	.LVL34:
 755              	#NO_APP
 756              	.LBB183:
 757              	.LBB184:
 192:src/../h/Riscv.hpp **** }
 758              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 759              		.loc 2 192 77 is_stmt 0
 760              	#APP
 761              	# 192 "src/../h/Riscv.hpp" 1
 762              		csrw sstatus, s3
 763              	# 0 "" 2
 764              	.LVL35:
 765              	#NO_APP
 766              	.LBE184:
 767              	.LBE183:
  81:src/Riscv.cpp ****         }
 768              		.loc 1 81 13 is_stmt 1
 769              	.LBB185:
 770              	.LBB186:
 122:src/../h/Riscv.hpp **** }
 771              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 772              		.loc 2 122 65 is_stmt 0
 773              	#APP
 774              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 775              		csrw sepc, s2
 776              	# 0 "" 2
 777              		.loc 2 123 1
 778              	#NO_APP
 779 0228 6FF0DFED 		j	.L8
 780              	.LVL36:
 781              	.L25:
 782              	.LBE186:
 783              	.LBE185:
  75:src/Riscv.cpp **** 
 784              		.loc 1 75 22
 785 022c 9307F0FF 		li	a5,-1
GAS LISTING /tmp/cckmNpMU.s 			page 25


 786 0230 6FF0DFFE 		j	.L9
 787              	.LVL37:
 788              	.L31:
 789              	.LBE178:
 790              	.LBE375:
 791              	.LBB376:
 792              	.LBB355:
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 793              		.loc 1 84 13 is_stmt 1
 794              	.LBB356:
 795              	.LBB357:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 796              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 797              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 798              		.loc 2 116 64 is_stmt 0
 799              	#APP
 800              	# 116 "src/../h/Riscv.hpp" 1
 801              		csrr a5, sepc
 802              	# 0 "" 2
 803              	#NO_APP
 804 0238 233CF4F0 		sd	a5,-232(s0)
 117:src/../h/Riscv.hpp **** }
 805              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 806              		.loc 2 117 12 is_stmt 0
 807 023c 833484F1 		ld	s1,-232(s0)
 808              	.LVL38:
 809              	.LBE357:
 810              	.LBE356:
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 811              		.loc 1 84 38
 812 0240 93844400 		addi	s1,s1,4
 813              	.LVL39:
  85:src/Riscv.cpp ****             //kmem_alloc
 814              		.loc 1 85 13 is_stmt 1
 815              	.LBB358:
 816              	.LBB359:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 817              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 818              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 819              		.loc 2 186 76 is_stmt 0
 820              	#APP
 821              	# 186 "src/../h/Riscv.hpp" 1
 822              		csrr a5, sstatus
 823              	# 0 "" 2
 824              	#NO_APP
 825 0248 2338F4F0 		sd	a5,-240(s0)
 187:src/../h/Riscv.hpp **** }
 826              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 827              		.loc 2 187 12 is_stmt 0
 828 024c 033904F1 		ld	s2,-240(s0)
 829              	.LVL40:
GAS LISTING /tmp/cckmNpMU.s 			page 26


 830              	.LBE359:
 831              	.LBE358:
  87:src/Riscv.cpp **** 
 832              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 833              		.loc 1 87 48 is_stmt 0
 834              	#APP
 835              	# 87 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 836              		ld a0, 11*8(fp)
 837              	# 0 "" 2
 838              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 839              		.loc 1 89 56 is_stmt 0
 840              	# 89 "src/Riscv.cpp" 1
 841              		mv a0, a0
 842              	# 0 "" 2
 843              	.LVL41:
  90:src/Riscv.cpp **** 
 844              		.loc 1 90 13 is_stmt 1
  90:src/Riscv.cpp **** 
 845              		.loc 1 90 61 is_stmt 0
 846              	#NO_APP
 847 0258 13156500 		slli	a0,a0,6
 848              	.LVL42:
 849 025c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 849      E7800000 
 850              	.LVL43:
  93:src/Riscv.cpp **** 
 851              		.loc 1 93 13 is_stmt 1
  93:src/Riscv.cpp **** 
 852              		.loc 1 93 56 is_stmt 0
 853              	#APP
 854              	# 93 "src/Riscv.cpp" 1
  95:src/Riscv.cpp ****             w_sepc(sepc);
 855              		mv a0, a0
 856              	# 0 "" 2
 857              		.loc 1 95 13 is_stmt 1
 858              	.LVL44:
 859              	#NO_APP
 860              	.LBB360:
 861              	.LBB361:
 192:src/../h/Riscv.hpp **** }
 862              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 863              		.loc 2 192 77 is_stmt 0
 864              	#APP
 865              	# 192 "src/../h/Riscv.hpp" 1
 866              		csrw sstatus, s2
 867              	# 0 "" 2
 868              	.LVL45:
 869              	#NO_APP
 870              	.LBE361:
 871              	.LBE360:
  96:src/Riscv.cpp ****         }
 872              		.loc 1 96 13 is_stmt 1
 873              	.LBB362:
GAS LISTING /tmp/cckmNpMU.s 			page 27


 874              	.LBB363:
 122:src/../h/Riscv.hpp **** }
 875              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 876              		.loc 2 122 65 is_stmt 0
 877              	#APP
 878              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 879              		csrw sepc, s1
 880              	# 0 "" 2
 881              		.loc 2 123 1
 882              	#NO_APP
 883 0270 6FF09FE4 		j	.L3
 884              	.LVL46:
 885              	.L32:
 886              	.LBE363:
 887              	.LBE362:
 888              	.LBE355:
 889              	.LBB364:
 890              	.LBB336:
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 891              		.loc 1 99 13 is_stmt 1
 892              	.LBB337:
 893              	.LBB338:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 894              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 895              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 896              		.loc 2 116 64 is_stmt 0
 897              	#APP
 898              	# 116 "src/../h/Riscv.hpp" 1
 899              		csrr a5, sepc
 900              	# 0 "" 2
 901              	#NO_APP
 902 0278 2334F4F2 		sd	a5,-216(s0)
 117:src/../h/Riscv.hpp **** }
 903              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 904              		.loc 2 117 12 is_stmt 0
 905 027c 833484F2 		ld	s1,-216(s0)
 906              	.LVL47:
 907              	.LBE338:
 908              	.LBE337:
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 909              		.loc 1 99 38
 910 0280 93844400 		addi	s1,s1,4
 911              	.LVL48:
 100:src/Riscv.cpp **** 
 912              		.loc 1 100 13 is_stmt 1
 913              	.LBB339:
 914              	.LBB340:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 915              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 916              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cckmNpMU.s 			page 28


 917              		.loc 2 186 76 is_stmt 0
 918              	#APP
 919              	# 186 "src/../h/Riscv.hpp" 1
 920              		csrr a5, sstatus
 921              	# 0 "" 2
 922              	#NO_APP
 923 0288 2330F4F2 		sd	a5,-224(s0)
 187:src/../h/Riscv.hpp **** }
 924              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 925              		.loc 2 187 12 is_stmt 0
 926 028c 033904F2 		ld	s2,-224(s0)
 927              	.LVL49:
 928              	.LBE340:
 929              	.LBE339:
 102:src/Riscv.cpp **** 
 930              		.loc 1 102 13 is_stmt 1
 102:src/Riscv.cpp **** 
 931              		.loc 1 102 48 is_stmt 0
 932              	#APP
 933              	# 102 "src/Riscv.cpp" 1
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 934              		ld a0, 11*8(fp)
 935              	# 0 "" 2
 936              		.loc 1 104 13 is_stmt 1
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 937              		.loc 1 104 56 is_stmt 0
 938              	# 104 "src/Riscv.cpp" 1
 939              		mv a0, a0
 940              	# 0 "" 2
 941              	.LVL50:
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 942              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 943              		.loc 1 105 49 is_stmt 0
 944              	#NO_APP
 945 0298 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 945      E7800000 
 946              	.LVL51:
 106:src/Riscv.cpp **** 
 947              		.loc 1 106 13 is_stmt 1
 106:src/Riscv.cpp **** 
 948              		.loc 1 106 56 is_stmt 0
 949              	#APP
 950              	# 106 "src/Riscv.cpp" 1
 108:src/Riscv.cpp ****             w_sepc(sepc);
 951              		mv a0, a0
 952              	# 0 "" 2
 953              		.loc 1 108 13 is_stmt 1
 954              	.LVL52:
 955              	#NO_APP
 956              	.LBB341:
 957              	.LBB342:
 192:src/../h/Riscv.hpp **** }
 958              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 959              		.loc 2 192 77 is_stmt 0
GAS LISTING /tmp/cckmNpMU.s 			page 29


 960              	#APP
 961              	# 192 "src/../h/Riscv.hpp" 1
 962              		csrw sstatus, s2
 963              	# 0 "" 2
 964              	.LVL53:
 965              	#NO_APP
 966              	.LBE342:
 967              	.LBE341:
 109:src/Riscv.cpp ****         }
 968              		.loc 1 109 13 is_stmt 1
 969              	.LBB343:
 970              	.LBB344:
 122:src/../h/Riscv.hpp **** }
 971              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 972              		.loc 2 122 65 is_stmt 0
 973              	#APP
 974              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 975              		csrw sepc, s1
 976              	# 0 "" 2
 977              		.loc 2 123 1
 978              	#NO_APP
 979 02ac 6FF0DFE0 		j	.L3
 980              	.LVL54:
 981              	.L33:
 982              	.LBE344:
 983              	.LBE343:
 984              	.LBE336:
 985              	.LBB345:
 986              	.LBB318:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 987              		.loc 1 113 13 is_stmt 1
 988              	.LBB319:
 989              	.LBB320:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 990              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 991              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 992              		.loc 2 116 64 is_stmt 0
 993              	#APP
 994              	# 116 "src/../h/Riscv.hpp" 1
 995              		csrr a5, sepc
 996              	# 0 "" 2
 997              	#NO_APP
 998 02b4 233CF4F2 		sd	a5,-200(s0)
 117:src/../h/Riscv.hpp **** }
 999              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1000              		.loc 2 117 12 is_stmt 0
 1001 02b8 833484F3 		ld	s1,-200(s0)
 1002              	.LVL55:
 1003              	.LBE320:
 1004              	.LBE319:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1005              		.loc 1 113 38
GAS LISTING /tmp/cckmNpMU.s 			page 30


 1006 02bc 93844400 		addi	s1,s1,4
 1007              	.LVL56:
 114:src/Riscv.cpp **** 
 1008              		.loc 1 114 13 is_stmt 1
 1009              	.LBB321:
 1010              	.LBB322:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1011              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1012              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1013              		.loc 2 186 76 is_stmt 0
 1014              	#APP
 1015              	# 186 "src/../h/Riscv.hpp" 1
 1016              		csrr a5, sstatus
 1017              	# 0 "" 2
 1018              	#NO_APP
 1019 02c4 2338F4F2 		sd	a5,-208(s0)
 187:src/../h/Riscv.hpp **** }
 1020              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1021              		.loc 2 187 12 is_stmt 0
 1022 02c8 033904F3 		ld	s2,-208(s0)
 1023              	.LVL57:
 1024              	.LBE322:
 1025              	.LBE321:
 116:src/Riscv.cpp ****             _thread::dispatch();
 1026              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp ****             _thread::dispatch();
 1027              		.loc 1 116 31 is_stmt 0
 1028 02cc 97070000 		la	a5,_ZN7_thread7runningE
 1028      83B70700 
 1029 02d4 83B70700 		ld	a5,0(a5)
 116:src/Riscv.cpp ****             _thread::dispatch();
 1030              		.loc 1 116 39
 1031 02d8 13071000 		li	a4,1
 1032 02dc 2384E702 		sb	a4,40(a5)
 117:src/Riscv.cpp **** 
 1033              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp **** 
 1034              		.loc 1 117 30 is_stmt 0
 1035 02e0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1035      E7800000 
 1036              	.LVL58:
 119:src/Riscv.cpp ****             w_sepc(sepc);
 1037              		.loc 1 119 13 is_stmt 1
 1038              	.LBB323:
 1039              	.LBB324:
 192:src/../h/Riscv.hpp **** }
 1040              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1041              		.loc 2 192 77 is_stmt 0
 1042              	#APP
 1043              	# 192 "src/../h/Riscv.hpp" 1
 1044              		csrw sstatus, s2
 1045              	# 0 "" 2
 1046              	.LVL59:
GAS LISTING /tmp/cckmNpMU.s 			page 31


 1047              	#NO_APP
 1048              	.LBE324:
 1049              	.LBE323:
 120:src/Riscv.cpp **** 
 1050              		.loc 1 120 13 is_stmt 1
 1051              	.LBB325:
 1052              	.LBB326:
 122:src/../h/Riscv.hpp **** }
 1053              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1054              		.loc 2 122 65 is_stmt 0
 1055              	#APP
 1056              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1057              		csrw sepc, s1
 1058              	# 0 "" 2
 1059              		.loc 2 123 1
 1060              	#NO_APP
 1061 02f0 6FF09FDC 		j	.L3
 1062              	.LVL60:
 1063              	.L34:
 1064              	.LBE326:
 1065              	.LBE325:
 1066              	.LBE318:
 1067              	.LBB327:
 1068              	.LBB301:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1069              		.loc 1 126 13 is_stmt 1
 1070              	.LBB302:
 1071              	.LBB303:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1072              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1073              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1074              		.loc 2 116 64 is_stmt 0
 1075              	#APP
 1076              	# 116 "src/../h/Riscv.hpp" 1
 1077              		csrr a5, sepc
 1078              	# 0 "" 2
 1079              	#NO_APP
 1080 02f8 2334F4F4 		sd	a5,-184(s0)
 117:src/../h/Riscv.hpp **** }
 1081              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1082              		.loc 2 117 12 is_stmt 0
 1083 02fc 833484F4 		ld	s1,-184(s0)
 1084              	.LVL61:
 1085              	.LBE303:
 1086              	.LBE302:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1087              		.loc 1 126 38
 1088 0300 93844400 		addi	s1,s1,4
 1089              	.LVL62:
 127:src/Riscv.cpp **** 
 1090              		.loc 1 127 13 is_stmt 1
 1091              	.LBB304:
GAS LISTING /tmp/cckmNpMU.s 			page 32


 1092              	.LBB305:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1093              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1094              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1095              		.loc 2 186 76 is_stmt 0
 1096              	#APP
 1097              	# 186 "src/../h/Riscv.hpp" 1
 1098              		csrr a5, sstatus
 1099              	# 0 "" 2
 1100              	#NO_APP
 1101 0308 2330F4F4 		sd	a5,-192(s0)
 187:src/../h/Riscv.hpp **** }
 1102              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1103              		.loc 2 187 12 is_stmt 0
 1104 030c 033904F4 		ld	s2,-192(s0)
 1105              	.LVL63:
 1106              	.LBE305:
 1107              	.LBE304:
 130:src/Riscv.cpp **** 
 1108              		.loc 1 130 13 is_stmt 1
 130:src/Riscv.cpp **** 
 1109              		.loc 1 130 30 is_stmt 0
 1110 0310 97000000 		call	_ZN7_thread8dispatchEv@plt
 1110      E7800000 
 1111              	.LVL64:
 132:src/Riscv.cpp ****             w_sepc(sepc);
 1112              		.loc 1 132 13 is_stmt 1
 1113              	.LBB306:
 1114              	.LBB307:
 192:src/../h/Riscv.hpp **** }
 1115              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1116              		.loc 2 192 77 is_stmt 0
 1117              	#APP
 1118              	# 192 "src/../h/Riscv.hpp" 1
 1119              		csrw sstatus, s2
 1120              	# 0 "" 2
 1121              	.LVL65:
 1122              	#NO_APP
 1123              	.LBE307:
 1124              	.LBE306:
 133:src/Riscv.cpp ****         }
 1125              		.loc 1 133 13 is_stmt 1
 1126              	.LBB308:
 1127              	.LBB309:
 122:src/../h/Riscv.hpp **** }
 1128              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1129              		.loc 2 122 65 is_stmt 0
 1130              	#APP
 1131              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1132              		csrw sepc, s1
 1133              	# 0 "" 2
GAS LISTING /tmp/cckmNpMU.s 			page 33


 1134              		.loc 2 123 1
 1135              	#NO_APP
 1136 0320 6FF09FD9 		j	.L3
 1137              	.LVL66:
 1138              	.L35:
 1139              	.LBE309:
 1140              	.LBE308:
 1141              	.LBE301:
 1142              	.LBB310:
 1143              	.LBB285:
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1144              		.loc 1 138 13 is_stmt 1
 1145              	.LBB286:
 1146              	.LBB287:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1147              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1148              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1149              		.loc 2 116 64 is_stmt 0
 1150              	#APP
 1151              	# 116 "src/../h/Riscv.hpp" 1
 1152              		csrr a5, sepc
 1153              	# 0 "" 2
 1154              	#NO_APP
 1155 0328 233CF4F4 		sd	a5,-168(s0)
 117:src/../h/Riscv.hpp **** }
 1156              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1157              		.loc 2 117 12 is_stmt 0
 1158 032c 833484F5 		ld	s1,-168(s0)
 1159              	.LVL67:
 1160              	.LBE287:
 1161              	.LBE286:
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1162              		.loc 1 138 38
 1163 0330 93844400 		addi	s1,s1,4
 1164              	.LVL68:
 139:src/Riscv.cpp **** 
 1165              		.loc 1 139 13 is_stmt 1
 1166              	.LBB288:
 1167              	.LBB289:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1168              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1169              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1170              		.loc 2 186 76 is_stmt 0
 1171              	#APP
 1172              	# 186 "src/../h/Riscv.hpp" 1
 1173              		csrr a5, sstatus
 1174              	# 0 "" 2
 1175              	#NO_APP
 1176 0338 2338F4F4 		sd	a5,-176(s0)
 187:src/../h/Riscv.hpp **** }
 1177              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cckmNpMU.s 			page 34


 1178              		.loc 2 187 12 is_stmt 0
 1179 033c 033904F5 		ld	s2,-176(s0)
 1180              	.LVL69:
 1181              	.LBE289:
 1182              	.LBE288:
 141:src/Riscv.cpp ****             _thread::dispatch();
 1183              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp ****             _thread::dispatch();
 1184              		.loc 1 141 39 is_stmt 0
 1185 0340 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1185      83B70700 
 1186 0348 23B00700 		sd	zero,0(a5)
 142:src/Riscv.cpp **** 
 1187              		.loc 1 142 13 is_stmt 1
 142:src/Riscv.cpp **** 
 1188              		.loc 1 142 30 is_stmt 0
 1189 034c 97000000 		call	_ZN7_thread8dispatchEv@plt
 1189      E7800000 
 1190              	.LVL70:
 144:src/Riscv.cpp ****             w_sepc(sepc);
 1191              		.loc 1 144 13 is_stmt 1
 1192              	.LBB290:
 1193              	.LBB291:
 192:src/../h/Riscv.hpp **** }
 1194              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1195              		.loc 2 192 77 is_stmt 0
 1196              	#APP
 1197              	# 192 "src/../h/Riscv.hpp" 1
 1198              		csrw sstatus, s2
 1199              	# 0 "" 2
 1200              	.LVL71:
 1201              	#NO_APP
 1202              	.LBE291:
 1203              	.LBE290:
 145:src/Riscv.cpp ****         }
 1204              		.loc 1 145 13 is_stmt 1
 1205              	.LBB292:
 1206              	.LBB293:
 122:src/../h/Riscv.hpp **** }
 1207              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1208              		.loc 2 122 65 is_stmt 0
 1209              	#APP
 1210              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1211              		csrw sepc, s1
 1212              	# 0 "" 2
 1213              		.loc 2 123 1
 1214              	#NO_APP
 1215 035c 6FF0DFD5 		j	.L3
 1216              	.LVL72:
 1217              	.L36:
 1218              	.LBE293:
 1219              	.LBE292:
 1220              	.LBE285:
 1221              	.LBB294:
GAS LISTING /tmp/cckmNpMU.s 			page 35


 1222              	.LBB266:
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1223              		.loc 1 148 13 is_stmt 1
 1224              	.LBB267:
 1225              	.LBB268:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1226              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1227              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1228              		.loc 2 116 64 is_stmt 0
 1229              	#APP
 1230              	# 116 "src/../h/Riscv.hpp" 1
 1231              		csrr a5, sepc
 1232              	# 0 "" 2
 1233              	#NO_APP
 1234 0364 2334F4F6 		sd	a5,-152(s0)
 117:src/../h/Riscv.hpp **** }
 1235              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1236              		.loc 2 117 12 is_stmt 0
 1237 0368 833484F6 		ld	s1,-152(s0)
 1238              	.LVL73:
 1239              	.LBE268:
 1240              	.LBE267:
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1241              		.loc 1 148 38
 1242 036c 93844400 		addi	s1,s1,4
 1243              	.LVL74:
 149:src/Riscv.cpp **** 
 1244              		.loc 1 149 13 is_stmt 1
 1245              	.LBB269:
 1246              	.LBB270:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1247              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1248              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1249              		.loc 2 186 76 is_stmt 0
 1250              	#APP
 1251              	# 186 "src/../h/Riscv.hpp" 1
 1252              		csrr a5, sstatus
 1253              	# 0 "" 2
 1254              	#NO_APP
 1255 0374 2330F4F6 		sd	a5,-160(s0)
 187:src/../h/Riscv.hpp **** }
 1256              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1257              		.loc 2 187 12 is_stmt 0
 1258 0378 033904F6 		ld	s2,-160(s0)
 1259              	.LVL75:
 1260              	.LBE270:
 1261              	.LBE269:
 151:src/Riscv.cpp ****            uint64 arg2;
 1262              		.loc 1 151 12 is_stmt 1
 152:src/Riscv.cpp **** 
 1263              		.loc 1 152 12
GAS LISTING /tmp/cckmNpMU.s 			page 36


 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1264              		.loc 1 154 13
 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1265              		.loc 1 154 48 is_stmt 0
 1266              	#APP
 1267              	# 154 "src/Riscv.cpp" 1
 155:src/Riscv.cpp **** 
 1268              		ld a1, 11*8(fp)
 1269              	# 0 "" 2
 1270              		.loc 1 155 13 is_stmt 1
 155:src/Riscv.cpp **** 
 1271              		.loc 1 155 48 is_stmt 0
 1272              	# 155 "src/Riscv.cpp" 1
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1273              		ld a2, 12*8(fp)
 1274              	# 0 "" 2
 1275              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1276              		.loc 1 157 56 is_stmt 0
 1277              	# 157 "src/Riscv.cpp" 1
 1278              		mv s3, a1
 1279              	# 0 "" 2
 1280              	.LVL76:
 158:src/Riscv.cpp **** 
 1281              		.loc 1 158 13 is_stmt 1
 158:src/Riscv.cpp **** 
 1282              		.loc 1 158 56 is_stmt 0
 1283              	# 158 "src/Riscv.cpp" 1
 1284              		mv s4, a2
 1285              	# 0 "" 2
 1286              	.LVL77:
 160:src/Riscv.cpp ****             sem->opened=true;
 1287              		.loc 1 160 13 is_stmt 1
 160:src/Riscv.cpp ****             sem->opened=true;
 1288              		.loc 1 160 50 is_stmt 0
 1289              	#NO_APP
 1290 038c 13058001 		li	a0,24
 1291 0390 97000000 		call	_ZN10KSemaphorenwEm@plt
 1291      E7800000 
 1292              	.LVL78:
 1293              	.LBB271:
 1294              	.LBB272:
 1295              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
GAS LISTING /tmp/cckmNpMU.s 			page 37


 1296              		.loc 3 14 40
 1297 0398 23224501 		sw	s4,4(a0)
 1298              	.LVL79:
 1299              	.LBB273:
 1300              	.LBB274:
 1301              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1302              		.loc 4 26 29
 1303 039c 23340500 		sd	zero,8(a0)
 1304 03a0 23380500 		sd	zero,16(a0)
 1305              	.LVL80:
 1306              	.LBE274:
 1307              	.LBE273:
 1308              	.LBE272:
 1309              	.LBE271:
 161:src/Riscv.cpp ****             *arg1=sem;
 1310              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp ****             *arg1=sem;
 1311              		.loc 1 161 24 is_stmt 0
 1312 03a4 93071000 		li	a5,1
 1313 03a8 2300F500 		sb	a5,0(a0)
 162:src/Riscv.cpp **** 
 1314              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1315              		.loc 1 162 18 is_stmt 0
 1316 03ac 23B0A900 		sd	a0,0(s3)
 164:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1317              		.loc 1 164 13 is_stmt 1
 1318              	.LVL81:
 165:src/Riscv.cpp ****             else ret=-1;
 1319              		.loc 1 165 13
 1320 03b0 630C0500 		beqz	a0,.L26
GAS LISTING /tmp/cckmNpMU.s 			page 38


 165:src/Riscv.cpp ****             else ret=-1;
 1321              		.loc 1 165 33 is_stmt 0
 1322 03b4 93070000 		li	a5,0
 1323              	.L16:
 1324              	.LVL82:
 168:src/Riscv.cpp **** 
 1325              		.loc 1 168 13 is_stmt 1
 168:src/Riscv.cpp **** 
 1326              		.loc 1 168 56 is_stmt 0
 1327              	#APP
 1328              	# 168 "src/Riscv.cpp" 1
 170:src/Riscv.cpp ****             w_sepc(sepc);
 1329              		mv a0, a5
 1330              	# 0 "" 2
 1331              		.loc 1 170 13 is_stmt 1
 1332              	.LVL83:
 1333              	#NO_APP
 1334              	.LBB275:
 1335              	.LBB276:
 192:src/../h/Riscv.hpp **** }
 1336              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1337              		.loc 2 192 77 is_stmt 0
 1338              	#APP
 1339              	# 192 "src/../h/Riscv.hpp" 1
 1340              		csrw sstatus, s2
 1341              	# 0 "" 2
 1342              	.LVL84:
 1343              	#NO_APP
 1344              	.LBE276:
 1345              	.LBE275:
 171:src/Riscv.cpp ****         }
 1346              		.loc 1 171 13 is_stmt 1
 1347              	.LBB277:
 1348              	.LBB278:
 122:src/../h/Riscv.hpp **** }
 1349              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1350              		.loc 2 122 65 is_stmt 0
 1351              	#APP
 1352              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1353              		csrw sepc, s1
 1354              	# 0 "" 2
 1355              		.loc 2 123 1
 1356              	#NO_APP
 1357 03c4 6FF05FCF 		j	.L3
 1358              	.LVL85:
 1359              	.L26:
 1360              	.LBE278:
 1361              	.LBE277:
 166:src/Riscv.cpp **** 
 1362              		.loc 1 166 21
 1363 03c8 9307F0FF 		li	a5,-1
 1364 03cc 6FF0DFFE 		j	.L16
 1365              	.LVL86:
 1366              	.L37:
GAS LISTING /tmp/cckmNpMU.s 			page 39


 1367              	.LBE266:
 1368              	.LBB279:
 1369              	.LBB242:
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1370              		.loc 1 174 13 is_stmt 1
 1371              	.LBB243:
 1372              	.LBB244:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1373              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1374              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1375              		.loc 2 116 64 is_stmt 0
 1376              	#APP
 1377              	# 116 "src/../h/Riscv.hpp" 1
 1378              		csrr a5, sepc
 1379              	# 0 "" 2
 1380              	#NO_APP
 1381 03d4 233CF4F6 		sd	a5,-136(s0)
 117:src/../h/Riscv.hpp **** }
 1382              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1383              		.loc 2 117 12 is_stmt 0
 1384 03d8 833984F7 		ld	s3,-136(s0)
 1385              	.LBE244:
 1386              	.LBE243:
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1387              		.loc 1 174 38
 1388 03dc 93894900 		addi	s3,s3,4
 1389              	.LVL87:
 175:src/Riscv.cpp **** 
 1390              		.loc 1 175 13 is_stmt 1
 1391              	.LBB245:
 1392              	.LBB246:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1393              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1394              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1395              		.loc 2 186 76 is_stmt 0
 1396              	#APP
 1397              	# 186 "src/../h/Riscv.hpp" 1
 1398              		csrr a5, sstatus
 1399              	# 0 "" 2
 1400              	#NO_APP
 1401 03e4 2338F4F6 		sd	a5,-144(s0)
 187:src/../h/Riscv.hpp **** }
 1402              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1403              		.loc 2 187 12 is_stmt 0
 1404 03e8 033A04F7 		ld	s4,-144(s0)
 1405              	.LVL88:
 1406              	.LBE246:
 1407              	.LBE245:
 177:src/Riscv.cpp **** 
 1408              		.loc 1 177 13 is_stmt 1
 180:src/Riscv.cpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 40


 1409              		.loc 1 180 13
 180:src/Riscv.cpp **** 
 1410              		.loc 1 180 48 is_stmt 0
 1411              	#APP
 1412              	# 180 "src/Riscv.cpp" 1
 182:src/Riscv.cpp **** 
 1413              		ld a1, 11*8(fp)
 1414              	# 0 "" 2
 1415              		.loc 1 182 13 is_stmt 1
 182:src/Riscv.cpp **** 
 1416              		.loc 1 182 56 is_stmt 0
 1417              	# 182 "src/Riscv.cpp" 1
 1418              		mv s1, a1
 1419              	# 0 "" 2
 1420              	.LVL89:
 184:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1421              		.loc 1 184 13 is_stmt 1
 1422              	#NO_APP
 1423 03f4 6F000003 		j	.L20
 1424              	.LVL90:
 1425              	.L19:
 1426              	.LBB247:
 1427              	.LBB248:
 1428              	.LBB249:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
GAS LISTING /tmp/cckmNpMU.s 			page 41


  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1429              		.loc 4 72 12 is_stmt 0
 1430 03f8 03390500 		ld	s2,0(a0)
 1431              	.LVL91:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1432              		.loc 4 73 35
 1433 03fc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1433      E7800000 
 1434              	.LVL92:
 1435              	.LBE249:
 1436              	.LBE248:
 188:src/Riscv.cpp ****                 sem->val++;
 1437              		.loc 1 188 17 is_stmt 1
 1438              	.LBB251:
 1439              	.LBB252:
 1440              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 42


  30:src/../h/_thread.hpp ****     void setDeblocked(){
  31:src/../h/_thread.hpp ****         deblocked = true;
 1441              		.loc 5 31 9
 1442              		.loc 5 31 19 is_stmt 0
 1443 0404 93071000 		li	a5,1
 1444 0408 230CF902 		sb	a5,56(s2)
 1445              	.LVL93:
 1446              	.LBE252:
 1447              	.LBE251:
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1448              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1449              		.loc 1 189 22 is_stmt 0
 1450 040c 83A74400 		lw	a5,4(s1)
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1451              		.loc 1 189 25
 1452 0410 9B871700 		addiw	a5,a5,1
 1453 0414 23A2F400 		sw	a5,4(s1)
 190:src/Riscv.cpp ****             }
 1454              		.loc 1 190 17 is_stmt 1
 190:src/Riscv.cpp ****             }
 1455              		.loc 1 190 31 is_stmt 0
 1456 0418 13050900 		mv	a0,s2
 1457 041c 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1457      E7800000 
 1458              	.LVL94:
 1459              	.L20:
 1460              	.LBE247:
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1461              		.loc 1 186 13 is_stmt 1
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1462              		.loc 1 186 43
 1463              	.LBB254:
 1464              	.LBB255:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1465              		.loc 4 79 14 is_stmt 0
 1466 0424 03B58400 		ld	a0,8(s1)
 1467              		.loc 4 79 9
 1468 0428 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1469              		.loc 4 80 22
 1470 042c 83370500 		ld	a5,0(a0)
 1471              	.LVL95:
 1472              	.LBE255:
 1473              	.LBE254:
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1474              		.loc 1 186 43
 1475 0430 638C0700 		beqz	a5,.L18
 1476              	.LBB256:
 187:src/Riscv.cpp ****                 t->setDeblocked();
 1477              		.loc 1 187 17 is_stmt 1
 1478              	.LVL96:
GAS LISTING /tmp/cckmNpMU.s 			page 43


 1479              	.LBB253:
 1480              	.LBB250:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1481              		.loc 4 69 22 is_stmt 0
 1482 0434 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1483              		.loc 4 69 9
 1484 0438 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1485              		.loc 4 70 9
 1486 043c E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1487              		.loc 4 70 22
 1488 0440 23B80400 		sd	zero,16(s1)
 1489 0444 6FF05FFB 		j	.L19
 1490              	.LVL97:
 1491              	.L18:
 1492              	.LBE250:
 1493              	.LBE253:
 1494              	.LBE256:
 192:src/Riscv.cpp **** 
 1495              		.loc 1 192 14 is_stmt 1
 192:src/Riscv.cpp **** 
 1496              		.loc 1 192 25 is_stmt 0
 1497 0448 23800400 		sb	zero,0(s1)
 194:src/Riscv.cpp **** 
 1498              		.loc 1 194 13 is_stmt 1
 194:src/Riscv.cpp **** 
 1499              		.loc 1 194 23 is_stmt 0
 1500 044c 63880400 		beqz	s1,.L21
 194:src/Riscv.cpp **** 
 1501              		.loc 1 194 20 discriminator 1
 1502 0450 13850400 		mv	a0,s1
 1503 0454 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1503      E7800000 
 1504              	.LVL98:
 1505              	.L21:
 196:src/Riscv.cpp ****             w_sepc(sepc);
 1506              		.loc 1 196 13 is_stmt 1
 1507              	.LBB257:
 1508              	.LBB258:
 192:src/../h/Riscv.hpp **** }
 1509              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1510              		.loc 2 192 77 is_stmt 0
 1511              	#APP
 1512              	# 192 "src/../h/Riscv.hpp" 1
 1513              		csrw sstatus, s4
 1514              	# 0 "" 2
 1515              	.LVL99:
 1516              	#NO_APP
 1517              	.LBE258:
 1518              	.LBE257:
 197:src/Riscv.cpp ****         }
 1519              		.loc 1 197 13 is_stmt 1
 1520              	.LBB259:
 1521              	.LBB260:
GAS LISTING /tmp/cckmNpMU.s 			page 44


 122:src/../h/Riscv.hpp **** }
 1522              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1523              		.loc 2 122 65 is_stmt 0
 1524              	#APP
 1525              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1526              		csrw sepc, s3
 1527              	# 0 "" 2
 1528              		.loc 2 123 1
 1529              	#NO_APP
 1530 0464 6FF05FC5 		j	.L3
 1531              	.LVL100:
 1532              	.L38:
 1533              	.LBE260:
 1534              	.LBE259:
 1535              	.LBE242:
 1536              	.LBB261:
 1537              	.LBB229:
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1538              		.loc 1 200 13 is_stmt 1
 1539              	.LBB230:
 1540              	.LBB231:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1541              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1542              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1543              		.loc 2 116 64 is_stmt 0
 1544              	#APP
 1545              	# 116 "src/../h/Riscv.hpp" 1
 1546              		csrr a5, sepc
 1547              	# 0 "" 2
 1548              	#NO_APP
 1549 046c 2334F4F8 		sd	a5,-120(s0)
 117:src/../h/Riscv.hpp **** }
 1550              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1551              		.loc 2 117 12 is_stmt 0
 1552 0470 833484F8 		ld	s1,-120(s0)
 1553              	.LVL101:
 1554              	.LBE231:
 1555              	.LBE230:
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1556              		.loc 1 200 38
 1557 0474 93844400 		addi	s1,s1,4
 1558              	.LVL102:
 201:src/Riscv.cpp **** 
 1559              		.loc 1 201 13 is_stmt 1
 1560              	.LBB232:
 1561              	.LBB233:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1562              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1563              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1564              		.loc 2 186 76 is_stmt 0
GAS LISTING /tmp/cckmNpMU.s 			page 45


 1565              	#APP
 1566              	# 186 "src/../h/Riscv.hpp" 1
 1567              		csrr a5, sstatus
 1568              	# 0 "" 2
 1569              	#NO_APP
 1570 047c 2330F4F8 		sd	a5,-128(s0)
 187:src/../h/Riscv.hpp **** }
 1571              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1572              		.loc 2 187 12 is_stmt 0
 1573 0480 033904F8 		ld	s2,-128(s0)
 1574              	.LVL103:
 1575              	.LBE233:
 1576              	.LBE232:
 203:src/Riscv.cpp **** 
 1577              		.loc 1 203 13 is_stmt 1
 205:src/Riscv.cpp **** 
 1578              		.loc 1 205 13
 205:src/Riscv.cpp **** 
 1579              		.loc 1 205 48 is_stmt 0
 1580              	#APP
 1581              	# 205 "src/Riscv.cpp" 1
 207:src/Riscv.cpp **** 
 1582              		ld a1, 11*8(fp)
 1583              	# 0 "" 2
 1584              		.loc 1 207 13 is_stmt 1
 207:src/Riscv.cpp **** 
 1585              		.loc 1 207 56 is_stmt 0
 1586              	# 207 "src/Riscv.cpp" 1
 1587              		mv a0, a1
 1588              	# 0 "" 2
 1589              	.LVL104:
 209:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1590              		.loc 1 209 13 is_stmt 1
 212:src/Riscv.cpp **** 
 1591              		.loc 1 212 18
 212:src/Riscv.cpp **** 
 1592              		.loc 1 212 34 is_stmt 0
 1593              	#NO_APP
 1594 048c 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1594      E7800000 
 1595              	.LVL105:
 214:src/Riscv.cpp **** 
 1596              		.loc 1 214 13 is_stmt 1
 214:src/Riscv.cpp **** 
 1597              		.loc 1 214 56 is_stmt 0
 1598              	#APP
 1599              	# 214 "src/Riscv.cpp" 1
 216:src/Riscv.cpp ****             w_sepc(sepc);
 1600              		mv a0, a0
 1601              	# 0 "" 2
 1602              		.loc 1 216 13 is_stmt 1
 1603              	.LVL106:
 1604              	#NO_APP
 1605              	.LBB234:
 1606              	.LBB235:
 192:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cckmNpMU.s 			page 46


 1607              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1608              		.loc 2 192 77 is_stmt 0
 1609              	#APP
 1610              	# 192 "src/../h/Riscv.hpp" 1
 1611              		csrw sstatus, s2
 1612              	# 0 "" 2
 1613              	.LVL107:
 1614              	#NO_APP
 1615              	.LBE235:
 1616              	.LBE234:
 217:src/Riscv.cpp ****         }
 1617              		.loc 1 217 13 is_stmt 1
 1618              	.LBB236:
 1619              	.LBB237:
 122:src/../h/Riscv.hpp **** }
 1620              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1621              		.loc 2 122 65 is_stmt 0
 1622              	#APP
 1623              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1624              		csrw sepc, s1
 1625              	# 0 "" 2
 1626              		.loc 2 123 1
 1627              	#NO_APP
 1628 04a0 6FF09FC1 		j	.L3
 1629              	.LVL108:
 1630              	.L39:
 1631              	.LBE237:
 1632              	.LBE236:
 1633              	.LBE229:
 1634              	.LBB238:
 1635              	.LBB217:
 220:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1636              		.loc 1 220 13 is_stmt 1
 1637              	.LBB218:
 1638              	.LBB219:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1639              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1640              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1641              		.loc 2 116 64 is_stmt 0
 1642              	#APP
 1643              	# 116 "src/../h/Riscv.hpp" 1
 1644              		csrr a5, sepc
 1645              	# 0 "" 2
 1646              	#NO_APP
 1647 04a8 233CF4F8 		sd	a5,-104(s0)
 117:src/../h/Riscv.hpp **** }
 1648              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1649              		.loc 2 117 12 is_stmt 0
 1650 04ac 833484F9 		ld	s1,-104(s0)
 1651              	.LVL109:
 1652              	.LBE219:
GAS LISTING /tmp/cckmNpMU.s 			page 47


 1653              	.LBE218:
 220:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1654              		.loc 1 220 38
 1655 04b0 93844400 		addi	s1,s1,4
 1656              	.LVL110:
 221:src/Riscv.cpp **** 
 1657              		.loc 1 221 13 is_stmt 1
 1658              	.LBB220:
 1659              	.LBB221:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1660              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1661              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1662              		.loc 2 186 76 is_stmt 0
 1663              	#APP
 1664              	# 186 "src/../h/Riscv.hpp" 1
 1665              		csrr a5, sstatus
 1666              	# 0 "" 2
 1667              	#NO_APP
 1668 04b8 2338F4F8 		sd	a5,-112(s0)
 187:src/../h/Riscv.hpp **** }
 1669              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1670              		.loc 2 187 12 is_stmt 0
 1671 04bc 033904F9 		ld	s2,-112(s0)
 1672              	.LVL111:
 1673              	.LBE221:
 1674              	.LBE220:
 223:src/Riscv.cpp **** 
 1675              		.loc 1 223 13 is_stmt 1
 225:src/Riscv.cpp **** 
 1676              		.loc 1 225 13
 225:src/Riscv.cpp **** 
 1677              		.loc 1 225 48 is_stmt 0
 1678              	#APP
 1679              	# 225 "src/Riscv.cpp" 1
 227:src/Riscv.cpp **** 
 1680              		ld a1, 11*8(fp)
 1681              	# 0 "" 2
 1682              		.loc 1 227 13 is_stmt 1
 227:src/Riscv.cpp **** 
 1683              		.loc 1 227 56 is_stmt 0
 1684              	# 227 "src/Riscv.cpp" 1
 1685              		mv a0, a1
 1686              	# 0 "" 2
 1687              	.LVL112:
 229:src/Riscv.cpp **** 
 1688              		.loc 1 229 13 is_stmt 1
 231:src/Riscv.cpp ****                 ret=0;
 1689              		.loc 1 231 17
 231:src/Riscv.cpp ****                 ret=0;
 1690              		.loc 1 231 29 is_stmt 0
 1691              	#NO_APP
 1692 04c8 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1692      E7800000 
 1693              	.LVL113:
GAS LISTING /tmp/cckmNpMU.s 			page 48


 232:src/Riscv.cpp **** 
 1694              		.loc 1 232 17 is_stmt 1
 235:src/Riscv.cpp **** 
 1695              		.loc 1 235 13
 235:src/Riscv.cpp **** 
 1696              		.loc 1 235 56 is_stmt 0
 1697 04d0 93070000 		li	a5,0
 1698              	#APP
 1699              	# 235 "src/Riscv.cpp" 1
 237:src/Riscv.cpp ****             w_sepc(sepc);
 1700              		mv a0, a5
 1701              	# 0 "" 2
 1702              		.loc 1 237 13 is_stmt 1
 1703              	.LVL114:
 1704              	#NO_APP
 1705              	.LBB222:
 1706              	.LBB223:
 192:src/../h/Riscv.hpp **** }
 1707              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1708              		.loc 2 192 77 is_stmt 0
 1709              	#APP
 1710              	# 192 "src/../h/Riscv.hpp" 1
 1711              		csrw sstatus, s2
 1712              	# 0 "" 2
 1713              	.LVL115:
 1714              	#NO_APP
 1715              	.LBE223:
 1716              	.LBE222:
 238:src/Riscv.cpp ****         }
 1717              		.loc 1 238 13 is_stmt 1
 1718              	.LBB224:
 1719              	.LBB225:
 122:src/../h/Riscv.hpp **** }
 1720              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1721              		.loc 2 122 65 is_stmt 0
 1722              	#APP
 1723              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1724              		csrw sepc, s1
 1725              	# 0 "" 2
 1726              		.loc 2 123 1
 1727              	#NO_APP
 1728 04e0 6FF09FBD 		j	.L3
 1729              	.LVL116:
 1730              	.L40:
 1731              	.LBE225:
 1732              	.LBE224:
 1733              	.LBE217:
 1734              	.LBB226:
 1735              	.LBB207:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1736              		.loc 1 241 13 is_stmt 1
 1737              	.LBB208:
 1738              	.LBB209:
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/cckmNpMU.s 			page 49


 1739              		.loc 2 115 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1740              		.loc 2 116 5
 116:src/../h/Riscv.hpp ****     return sepc;
 1741              		.loc 2 116 64 is_stmt 0
 1742              	#APP
 1743              	# 116 "src/../h/Riscv.hpp" 1
 1744              		csrr a5, sepc
 1745              	# 0 "" 2
 1746              	#NO_APP
 1747 04e8 2334F4FA 		sd	a5,-88(s0)
 117:src/../h/Riscv.hpp **** }
 1748              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1749              		.loc 2 117 12 is_stmt 0
 1750 04ec 833484FA 		ld	s1,-88(s0)
 1751              	.LVL117:
 1752              	.LBE209:
 1753              	.LBE208:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1754              		.loc 1 241 38
 1755 04f0 93844400 		addi	s1,s1,4
 1756              	.LVL118:
 242:src/Riscv.cpp **** 
 1757              		.loc 1 242 13 is_stmt 1
 1758              	.LBB210:
 1759              	.LBB211:
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1760              		.loc 2 185 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1761              		.loc 2 186 5
 186:src/../h/Riscv.hpp ****     return sstatus;
 1762              		.loc 2 186 76 is_stmt 0
 1763              	#APP
 1764              	# 186 "src/../h/Riscv.hpp" 1
 1765              		csrr a5, sstatus
 1766              	# 0 "" 2
 1767              	#NO_APP
 1768 04f8 2330F4FA 		sd	a5,-96(s0)
 187:src/../h/Riscv.hpp **** }
 1769              		.loc 2 187 5 is_stmt 1
 187:src/../h/Riscv.hpp **** }
 1770              		.loc 2 187 12 is_stmt 0
 1771 04fc 033904FA 		ld	s2,-96(s0)
 1772              	.LVL119:
 1773              	.LBE211:
 1774              	.LBE210:
 246:src/Riscv.cpp ****             char c = __getc();
 1775              		.loc 1 246 13 is_stmt 1
 246:src/Riscv.cpp ****             char c = __getc();
 1776              		.loc 1 246 99 is_stmt 0
 1777 0500 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1777      83B70700 
 1778              	#APP
 1779              	# 246 "src/Riscv.cpp" 1
 247:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 1780              		csrw stvec, a5
GAS LISTING /tmp/cckmNpMU.s 			page 50


 1781              	# 0 "" 2
 1782              		.loc 1 247 13 is_stmt 1
 247:src/Riscv.cpp ****             __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"((uint64)&Riscv::supervisorTrap
 1783              		.loc 1 247 28 is_stmt 0
 1784              	#NO_APP
 1785 050c 97000000 		call	__getc@plt
 1785      E7800000 
 1786              	.LVL120:
 248:src/Riscv.cpp **** 
 1787              		.loc 1 248 13 is_stmt 1
 248:src/Riscv.cpp **** 
 1788              		.loc 1 248 102 is_stmt 0
 1789 0514 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1789      83B70700 
 1790              	#APP
 1791              	# 248 "src/Riscv.cpp" 1
 250:src/Riscv.cpp **** 
 1792              		csrw stvec, a5
 1793              	# 0 "" 2
 1794              		.loc 1 250 13 is_stmt 1
 250:src/Riscv.cpp **** 
 1795              		.loc 1 250 54 is_stmt 0
 1796              	# 250 "src/Riscv.cpp" 1
 253:src/Riscv.cpp ****             w_sepc(sepc);
 1797              		mv a0, a0
 1798              	# 0 "" 2
 1799              		.loc 1 253 13 is_stmt 1
 1800              	.LVL121:
 1801              	#NO_APP
 1802              	.LBB212:
 1803              	.LBB213:
 192:src/../h/Riscv.hpp **** }
 1804              		.loc 2 192 5
 192:src/../h/Riscv.hpp **** }
 1805              		.loc 2 192 77 is_stmt 0
 1806              	#APP
 1807              	# 192 "src/../h/Riscv.hpp" 1
 1808              		csrw sstatus, s2
 1809              	# 0 "" 2
 1810              	.LVL122:
 1811              	#NO_APP
 1812              	.LBE213:
 1813              	.LBE212:
 254:src/Riscv.cpp ****         }
 1814              		.loc 1 254 13 is_stmt 1
 1815              	.LBB214:
 1816              	.LBB215:
 122:src/../h/Riscv.hpp **** }
 1817              		.loc 2 122 5
 122:src/../h/Riscv.hpp **** }
 1818              		.loc 2 122 65 is_stmt 0
 1819              	#APP
 1820              	# 122 "src/../h/Riscv.hpp" 1
 123:src/../h/Riscv.hpp **** 
 1821              		csrw sepc, s1
 1822              	# 0 "" 2
 1823              		.loc 2 123 1
GAS LISTING /tmp/cckmNpMU.s 			page 51


 1824              	#NO_APP
 1825 052c 6FF0DFB8 		j	.L3
 1826              	.LBE215:
 1827              	.LBE214:
 1828              	.LBE207:
 1829              	.LBE226:
 1830              	.LBE238:
 1831              	.LBE261:
 1832              	.LBE279:
 1833              	.LBE294:
 1834              	.LBE310:
 1835              	.LBE327:
 1836              	.LBE345:
 1837              	.LBE364:
 1838              	.LBE376:
 1839              	.LBE389:
 1840              	.LBE403:
 1841              	.LBE420:
 1842              	.LBE436:
 1843              		.cfi_endproc
 1844              	.LFE53:
 1846              		.align	2
 1847              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1849              	_ZN5Riscv17handleTrapConsoleEv:
 1850              	.LFB54:
 280:src/Riscv.cpp **** 
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1851              		.loc 1 282 33 is_stmt 1
 1852              		.cfi_startproc
 1853 0530 130101FE 		addi	sp,sp,-32
 1854              		.cfi_def_cfa_offset 32
 1855 0534 233C1100 		sd	ra,24(sp)
 1856 0538 23388100 		sd	s0,16(sp)
 1857              		.cfi_offset 1, -8
 1858              		.cfi_offset 8, -16
 1859 053c 13040102 		addi	s0,sp,32
 1860              		.cfi_def_cfa 8, 0
 283:src/Riscv.cpp ****     uint64 scause = r_scause();
 1861              		.loc 1 283 5
 1862              	.LBB437:
 1863              	.LBB438:
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1864              		.loc 2 103 5
 104:src/../h/Riscv.hpp ****     return scause;
 1865              		.loc 2 104 5
 104:src/../h/Riscv.hpp ****     return scause;
 1866              		.loc 2 104 72 is_stmt 0
 1867              	#APP
 1868              	# 104 "src/../h/Riscv.hpp" 1
 1869              		csrr a5, scause
 1870              	# 0 "" 2
 1871              	#NO_APP
 1872 0544 2334F4FE 		sd	a5,-24(s0)
 105:src/../h/Riscv.hpp **** }
 1873              		.loc 2 105 5 is_stmt 1
 105:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cckmNpMU.s 			page 52


 1874              		.loc 2 105 12 is_stmt 0
 1875 0548 033784FE 		ld	a4,-24(s0)
 1876              	.LVL123:
 1877              	.LBE438:
 1878              	.LBE437:
 284:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1879              		.loc 1 284 5 is_stmt 1
 1880 054c 9307F0FF 		li	a5,-1
 1881 0550 9397F703 		slli	a5,a5,63
 1882 0554 93879700 		addi	a5,a5,9
 1883 0558 6302F702 		beq	a4,a5,.L45
 285:src/Riscv.cpp ****         console_handler();
 286:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 287:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1884              		.loc 1 287 12
 1885 055c 9307F0FF 		li	a5,-1
 1886 0560 9397F703 		slli	a5,a5,63
 1887 0564 93871700 		addi	a5,a5,1
 1888 0568 6304F702 		beq	a4,a5,.L46
 1889              	.LVL124:
 1890              	.L41:
 288:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 289:src/Riscv.cpp ****     }
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp **** }
 1891              		.loc 1 291 1 is_stmt 0
 1892 056c 83308101 		ld	ra,24(sp)
 1893              		.cfi_remember_state
 1894              		.cfi_restore 1
 1895 0570 03340101 		ld	s0,16(sp)
 1896              		.cfi_restore 8
 1897              		.cfi_def_cfa 2, 32
 1898 0574 13010102 		addi	sp,sp,32
 1899              		.cfi_def_cfa_offset 0
 1900 0578 67800000 		jr	ra
 1901              	.LVL125:
 1902              	.L45:
 1903              		.cfi_restore_state
 285:src/Riscv.cpp ****         console_handler();
 1904              		.loc 1 285 9 is_stmt 1
 285:src/Riscv.cpp ****         console_handler();
 1905              		.loc 1 285 24 is_stmt 0
 1906 057c 97000000 		call	console_handler@plt
 1906      E7800000 
 1907              	.LVL126:
 286:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1908              		.loc 1 286 9 is_stmt 1
 1909              	.LBB439:
 1910              	.LBB440:
 156:src/../h/Riscv.hpp **** }
 1911              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 1912              		.loc 2 156 64 is_stmt 0
 1913 0584 93070020 		li	a5,512
 1914              	#APP
 1915              	# 156 "src/../h/Riscv.hpp" 1
 157:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckmNpMU.s 			page 53


 1916              		csrc sip, a5
 1917              	# 0 "" 2
 1918              		.loc 2 157 1
 1919              	#NO_APP
 1920 058c 6FF01FFE 		j	.L41
 1921              	.LVL127:
 1922              	.L46:
 1923              	.LBE440:
 1924              	.LBE439:
 288:src/Riscv.cpp ****     }
 1925              		.loc 1 288 9 is_stmt 1
 1926              	.LBB441:
 1927              	.LBB442:
 156:src/../h/Riscv.hpp **** }
 1928              		.loc 2 156 5
 156:src/../h/Riscv.hpp **** }
 1929              		.loc 2 156 64 is_stmt 0
 1930 0590 93072000 		li	a5,2
 1931              	#APP
 1932              	# 156 "src/../h/Riscv.hpp" 1
 1933              		csrc sip, a5
 1934              	# 0 "" 2
 1935              	.LVL128:
 1936              	#NO_APP
 1937              	.LBE442:
 1938              	.LBE441:
 1939              		.loc 1 291 1
 1940 0598 6FF05FFD 		j	.L41
 1941              		.cfi_endproc
 1942              	.LFE54:
 1944              		.globl	_ZN5Riscv7enteredE
 1945              		.globl	_ZN5Riscv9privilegeE
 1946              		.bss
 1947              		.set	.LANCHOR0,. + 0
 1950              	_ZN5Riscv9privilegeE:
 1951 0000 00       		.zero	1
 1954              	_ZN5Riscv7enteredE:
 1955 0001 00       		.zero	1
 1956              		.text
 1957              	.Letext0:
 1958              		.file 6 "src/../h/../lib/hw.h"
 1959              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1960              		.file 8 "src/../h/MemoryAllocator.hpp"
 1961              		.file 9 "src/../h/Scheduler.hpp"
 1962              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/cckmNpMU.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cckmNpMU.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cckmNpMU.s:13     .text:0000000000000000 .L0 
     /tmp/cckmNpMU.s:14     .text:0000000000000000 .L0 
     /tmp/cckmNpMU.s:15     .text:0000000000000004 .L0 
     /tmp/cckmNpMU.s:17     .text:0000000000000008 .L0 
     /tmp/cckmNpMU.s:19     .text:000000000000000c .L0 
     /tmp/cckmNpMU.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/cckmNpMU.s:32     .text:0000000000000010 .L0 
     /tmp/cckmNpMU.s:33     .text:0000000000000010 .L0 
     /tmp/cckmNpMU.s:34     .text:0000000000000010 .L0 
     /tmp/cckmNpMU.s:44     .text:0000000000000018 .L0 
       src/Riscv.cpp:18     .text:0000000000000018 .L0 
     /tmp/cckmNpMU.s:51     .text:000000000000001c .L0 
     /tmp/cckmNpMU.s:52     .text:0000000000000020 .L0 
     /tmp/cckmNpMU.s:53     .text:0000000000000020 .L0 
     /tmp/cckmNpMU.s:55     .text:0000000000000024 .L0 
     /tmp/cckmNpMU.s:57     .text:0000000000000028 .L0 
     /tmp/cckmNpMU.s:63     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cckmNpMU.s:66     .text:0000000000000028 .L0 
     /tmp/cckmNpMU.s:67     .text:0000000000000028 .L0 
     /tmp/cckmNpMU.s:68     .text:000000000000002c .L0 
     /tmp/cckmNpMU.s:77     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:78     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:79     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:80     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:81     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:82     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:83     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:84     .text:000000000000004c .L0 
     /tmp/cckmNpMU.s:86     .text:0000000000000050 .L0 
     /tmp/cckmNpMU.s:90     .text:0000000000000050 .L0 
     /tmp/cckmNpMU.s:91     .text:0000000000000050 .L0 
     /tmp/cckmNpMU.s:92     .text:0000000000000050 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000050 .L0 
     /tmp/cckmNpMU.s:100    .text:0000000000000058 .L0 
     /tmp/cckmNpMU.s:101    .text:0000000000000058 .L0 
     /tmp/cckmNpMU.s:106    .text:000000000000005c .L0 
     /tmp/cckmNpMU.s:107    .text:000000000000005c .L0 
     /tmp/cckmNpMU.s:108    .text:000000000000005c .L0 
       src/Riscv.cpp:28     .text:000000000000005c .L0 
     /tmp/cckmNpMU.s:117    .text:0000000000000060 .L0 
     /tmp/cckmNpMU.s:125    .text:0000000000000070 .L0 
     /tmp/cckmNpMU.s:126    .text:0000000000000070 .L0 
     /tmp/cckmNpMU.s:128    .text:0000000000000078 .L0 
     /tmp/cckmNpMU.s:133    .text:000000000000007c .L0 
     /tmp/cckmNpMU.s:134    .text:000000000000007c .L0 
     /tmp/cckmNpMU.s:135    .text:000000000000007c .L0 
  src/../h/Riscv.hpp:116    .text:000000000000007c .L0 
     /tmp/cckmNpMU.s:143    .text:0000000000000084 .L0 
     /tmp/cckmNpMU.s:144    .text:0000000000000084 .L0 
     /tmp/cckmNpMU.s:151    .text:0000000000000088 .L0 
     /tmp/cckmNpMU.s:152    .text:0000000000000088 .L0 
     /tmp/cckmNpMU.s:153    .text:0000000000000088 .L0 
     /tmp/cckmNpMU.s:164    .text:0000000000000090 .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 55


     /tmp/cckmNpMU.s:165    .text:0000000000000090 .L0 
     /tmp/cckmNpMU.s:169    .text:00000000000000a0 .L0 
     /tmp/cckmNpMU.s:170    .text:00000000000000a0 .L0 
     /tmp/cckmNpMU.s:172    .text:00000000000000a4 .L0 
     /tmp/cckmNpMU.s:173    .text:00000000000000a4 .L0 
     /tmp/cckmNpMU.s:178    .text:00000000000000a8 .L0 
  src/../h/Riscv.hpp:122    .text:00000000000000a8 .L0 
     /tmp/cckmNpMU.s:185    .text:00000000000000ac .L0 
     /tmp/cckmNpMU.s:195    .text:00000000000000b0 .L0 
     /tmp/cckmNpMU.s:196    .text:00000000000000b0 .L0 
     /tmp/cckmNpMU.s:197    .text:00000000000000b0 .L0 
     /tmp/cckmNpMU.s:209    .text:00000000000000b8 .L0 
     /tmp/cckmNpMU.s:210    .text:00000000000000bc .L0 
     /tmp/cckmNpMU.s:211    .text:00000000000000bc .L0 
     /tmp/cckmNpMU.s:213    .text:00000000000000c0 .L0 
     /tmp/cckmNpMU.s:214    .text:00000000000000c0 .L0 
     /tmp/cckmNpMU.s:216    .text:00000000000000c4 .L0 
     /tmp/cckmNpMU.s:218    .text:00000000000000c8 .L0 
     /tmp/cckmNpMU.s:220    .text:00000000000000cc .L0 
     /tmp/cckmNpMU.s:222    .text:00000000000000d0 .L0 
     /tmp/cckmNpMU.s:224    .text:00000000000000d4 .L0 
     /tmp/cckmNpMU.s:226    .text:00000000000000d8 .L0 
     /tmp/cckmNpMU.s:228    .text:00000000000000dc .L0 
     /tmp/cckmNpMU.s:232    .text:00000000000000e0 .L0 
     /tmp/cckmNpMU.s:237    .text:00000000000000e0 .L0 
     /tmp/cckmNpMU.s:249    .text:00000000000000f0 .L0 
     /tmp/cckmNpMU.s:250    .text:00000000000000f0 .L0 
     /tmp/cckmNpMU.s:253    .text:00000000000000f4 .L0 
     /tmp/cckmNpMU.s:265    .text:00000000000000fc .L0 
     /tmp/cckmNpMU.s:280    .text:0000000000000104 .L0 
     /tmp/cckmNpMU.s:294    .text:000000000000010c .L0 
     /tmp/cckmNpMU.s:310    .text:0000000000000114 .L0 
     /tmp/cckmNpMU.s:328    .text:000000000000011c .L0 
     /tmp/cckmNpMU.s:348    .text:0000000000000124 .L0 
     /tmp/cckmNpMU.s:370    .text:000000000000012c .L0 
     /tmp/cckmNpMU.s:394    .text:0000000000000134 .L0 
     /tmp/cckmNpMU.s:420    .text:000000000000013c .L0 
     /tmp/cckmNpMU.s:448    .text:0000000000000144 .L0 
     /tmp/cckmNpMU.s:478    .text:000000000000014c .L0 
     /tmp/cckmNpMU.s:510    .text:0000000000000154 .L0 
     /tmp/cckmNpMU.s:516    .text:000000000000015c .L0 
     /tmp/cckmNpMU.s:517    .text:000000000000015c .L0 
     /tmp/cckmNpMU.s:518    .text:000000000000015c .L0 
  src/../h/Riscv.hpp:116    .text:000000000000015c .L0 
     /tmp/cckmNpMU.s:526    .text:0000000000000164 .L0 
     /tmp/cckmNpMU.s:527    .text:0000000000000164 .L0 
     /tmp/cckmNpMU.s:532    .text:0000000000000168 .L0 
     /tmp/cckmNpMU.s:537    .text:000000000000016c .L0 
     /tmp/cckmNpMU.s:538    .text:000000000000016c .L0 
     /tmp/cckmNpMU.s:539    .text:000000000000016c .L0 
  src/../h/Riscv.hpp:186    .text:000000000000016c .L0 
     /tmp/cckmNpMU.s:547    .text:0000000000000174 .L0 
     /tmp/cckmNpMU.s:548    .text:0000000000000174 .L0 
     /tmp/cckmNpMU.s:553    .text:0000000000000178 .L0 
     /tmp/cckmNpMU.s:554    .text:0000000000000178 .L0 
       src/Riscv.cpp:261    .text:0000000000000178 .L0 
     /tmp/cckmNpMU.s:560    .text:000000000000017c .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 56


       src/Riscv.cpp:263    .text:000000000000017c .L0 
     /tmp/cckmNpMU.s:568    .text:0000000000000184 .L0 
     /tmp/cckmNpMU.s:569    .text:0000000000000184 .L0 
     /tmp/cckmNpMU.s:575    .text:0000000000000190 .L0 
     /tmp/cckmNpMU.s:577    .text:0000000000000190 .L0 
     /tmp/cckmNpMU.s:580    .text:0000000000000198 .L0 
     /tmp/cckmNpMU.s:581    .text:0000000000000198 .L0 
     /tmp/cckmNpMU.s:591    .text:00000000000001a4 .L0 
     /tmp/cckmNpMU.s:592    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:192    .text:00000000000001a4 .L0 
     /tmp/cckmNpMU.s:604    .text:00000000000001a8 .L0 
     /tmp/cckmNpMU.s:605    .text:00000000000001a8 .L0 
  src/../h/Riscv.hpp:122    .text:00000000000001a8 .L0 
     /tmp/cckmNpMU.s:631    .text:00000000000001ac .L0 
     /tmp/cckmNpMU.s:638    .text:00000000000001b0 .L0 
     /tmp/cckmNpMU.s:639    .text:00000000000001b0 .L0 
     /tmp/cckmNpMU.s:650    .text:00000000000001bc .L0 
     /tmp/cckmNpMU.s:651    .text:00000000000001bc .L0 
     /tmp/cckmNpMU.s:652    .text:00000000000001bc .L0 
  src/../h/Riscv.hpp:116    .text:00000000000001bc .L0 
     /tmp/cckmNpMU.s:660    .text:00000000000001c4 .L0 
     /tmp/cckmNpMU.s:661    .text:00000000000001c4 .L0 
     /tmp/cckmNpMU.s:665    .text:00000000000001c8 .L0 
     /tmp/cckmNpMU.s:670    .text:00000000000001cc .L0 
     /tmp/cckmNpMU.s:671    .text:00000000000001cc .L0 
     /tmp/cckmNpMU.s:672    .text:00000000000001cc .L0 
  src/../h/Riscv.hpp:186    .text:00000000000001cc .L0 
     /tmp/cckmNpMU.s:680    .text:00000000000001d4 .L0 
     /tmp/cckmNpMU.s:681    .text:00000000000001d4 .L0 
     /tmp/cckmNpMU.s:686    .text:00000000000001d8 .L0 
     /tmp/cckmNpMU.s:687    .text:00000000000001d8 .L0 
     /tmp/cckmNpMU.s:688    .text:00000000000001d8 .L0 
     /tmp/cckmNpMU.s:689    .text:00000000000001d8 .L0 
       src/Riscv.cpp:58     .text:00000000000001d8 .L0 
     /tmp/cckmNpMU.s:695    .text:00000000000001dc .L0 
       src/Riscv.cpp:59     .text:00000000000001dc .L0 
     /tmp/cckmNpMU.s:700    .text:00000000000001e0 .L0 
       src/Riscv.cpp:60     .text:00000000000001e0 .L0 
     /tmp/cckmNpMU.s:705    .text:00000000000001e4 .L0 
       src/Riscv.cpp:63     .text:00000000000001e4 .L0 
     /tmp/cckmNpMU.s:711    .text:00000000000001e8 .L0 
       src/Riscv.cpp:64     .text:00000000000001e8 .L0 
     /tmp/cckmNpMU.s:717    .text:00000000000001ec .L0 
       src/Riscv.cpp:65     .text:00000000000001ec .L0 
     /tmp/cckmNpMU.s:723    .text:00000000000001f0 .L0 
     /tmp/cckmNpMU.s:725    .text:00000000000001f0 .L0 
     /tmp/cckmNpMU.s:731    .text:0000000000000200 .L0 
     /tmp/cckmNpMU.s:732    .text:0000000000000200 .L0 
     /tmp/cckmNpMU.s:738    .text:0000000000000210 .L0 
     /tmp/cckmNpMU.s:739    .text:0000000000000210 .L0 
     /tmp/cckmNpMU.s:741    .text:0000000000000214 .L0 
     /tmp/cckmNpMU.s:742    .text:0000000000000214 .L0 
     /tmp/cckmNpMU.s:744    .text:0000000000000218 .L0 
     /tmp/cckmNpMU.s:748    .text:000000000000021c .L0 
       src/Riscv.cpp:78     .text:000000000000021c .L0 
     /tmp/cckmNpMU.s:758    .text:0000000000000220 .L0 
     /tmp/cckmNpMU.s:759    .text:0000000000000220 .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 57


  src/../h/Riscv.hpp:192    .text:0000000000000220 .L0 
     /tmp/cckmNpMU.s:771    .text:0000000000000224 .L0 
     /tmp/cckmNpMU.s:772    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000224 .L0 
     /tmp/cckmNpMU.s:779    .text:0000000000000228 .L0 
     /tmp/cckmNpMU.s:785    .text:000000000000022c .L0 
     /tmp/cckmNpMU.s:796    .text:0000000000000234 .L0 
     /tmp/cckmNpMU.s:797    .text:0000000000000234 .L0 
     /tmp/cckmNpMU.s:798    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000234 .L0 
     /tmp/cckmNpMU.s:806    .text:000000000000023c .L0 
     /tmp/cckmNpMU.s:807    .text:000000000000023c .L0 
     /tmp/cckmNpMU.s:812    .text:0000000000000240 .L0 
     /tmp/cckmNpMU.s:817    .text:0000000000000244 .L0 
     /tmp/cckmNpMU.s:818    .text:0000000000000244 .L0 
     /tmp/cckmNpMU.s:819    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000244 .L0 
     /tmp/cckmNpMU.s:827    .text:000000000000024c .L0 
     /tmp/cckmNpMU.s:828    .text:000000000000024c .L0 
     /tmp/cckmNpMU.s:833    .text:0000000000000250 .L0 
       src/Riscv.cpp:87     .text:0000000000000250 .L0 
     /tmp/cckmNpMU.s:839    .text:0000000000000254 .L0 
       src/Riscv.cpp:89     .text:0000000000000254 .L0 
     /tmp/cckmNpMU.s:845    .text:0000000000000258 .L0 
     /tmp/cckmNpMU.s:847    .text:0000000000000258 .L0 
     /tmp/cckmNpMU.s:852    .text:0000000000000264 .L0 
       src/Riscv.cpp:93     .text:0000000000000264 .L0 
     /tmp/cckmNpMU.s:862    .text:0000000000000268 .L0 
     /tmp/cckmNpMU.s:863    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000268 .L0 
     /tmp/cckmNpMU.s:875    .text:000000000000026c .L0 
     /tmp/cckmNpMU.s:876    .text:000000000000026c .L0 
  src/../h/Riscv.hpp:122    .text:000000000000026c .L0 
     /tmp/cckmNpMU.s:883    .text:0000000000000270 .L0 
     /tmp/cckmNpMU.s:894    .text:0000000000000274 .L0 
     /tmp/cckmNpMU.s:895    .text:0000000000000274 .L0 
     /tmp/cckmNpMU.s:896    .text:0000000000000274 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000274 .L0 
     /tmp/cckmNpMU.s:904    .text:000000000000027c .L0 
     /tmp/cckmNpMU.s:905    .text:000000000000027c .L0 
     /tmp/cckmNpMU.s:910    .text:0000000000000280 .L0 
     /tmp/cckmNpMU.s:915    .text:0000000000000284 .L0 
     /tmp/cckmNpMU.s:916    .text:0000000000000284 .L0 
     /tmp/cckmNpMU.s:917    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000284 .L0 
     /tmp/cckmNpMU.s:925    .text:000000000000028c .L0 
     /tmp/cckmNpMU.s:926    .text:000000000000028c .L0 
     /tmp/cckmNpMU.s:931    .text:0000000000000290 .L0 
       src/Riscv.cpp:102    .text:0000000000000290 .L0 
     /tmp/cckmNpMU.s:937    .text:0000000000000294 .L0 
       src/Riscv.cpp:104    .text:0000000000000294 .L0 
     /tmp/cckmNpMU.s:943    .text:0000000000000298 .L0 
     /tmp/cckmNpMU.s:945    .text:0000000000000298 .L0 
     /tmp/cckmNpMU.s:948    .text:00000000000002a0 .L0 
       src/Riscv.cpp:106    .text:00000000000002a0 .L0 
     /tmp/cckmNpMU.s:958    .text:00000000000002a4 .L0 
     /tmp/cckmNpMU.s:959    .text:00000000000002a4 .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 58


  src/../h/Riscv.hpp:192    .text:00000000000002a4 .L0 
     /tmp/cckmNpMU.s:971    .text:00000000000002a8 .L0 
     /tmp/cckmNpMU.s:972    .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:122    .text:00000000000002a8 .L0 
     /tmp/cckmNpMU.s:979    .text:00000000000002ac .L0 
     /tmp/cckmNpMU.s:990    .text:00000000000002b0 .L0 
     /tmp/cckmNpMU.s:991    .text:00000000000002b0 .L0 
     /tmp/cckmNpMU.s:992    .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:116    .text:00000000000002b0 .L0 
     /tmp/cckmNpMU.s:1000   .text:00000000000002b8 .L0 
     /tmp/cckmNpMU.s:1001   .text:00000000000002b8 .L0 
     /tmp/cckmNpMU.s:1006   .text:00000000000002bc .L0 
     /tmp/cckmNpMU.s:1011   .text:00000000000002c0 .L0 
     /tmp/cckmNpMU.s:1012   .text:00000000000002c0 .L0 
     /tmp/cckmNpMU.s:1013   .text:00000000000002c0 .L0 
  src/../h/Riscv.hpp:186    .text:00000000000002c0 .L0 
     /tmp/cckmNpMU.s:1021   .text:00000000000002c8 .L0 
     /tmp/cckmNpMU.s:1022   .text:00000000000002c8 .L0 
     /tmp/cckmNpMU.s:1027   .text:00000000000002cc .L0 
     /tmp/cckmNpMU.s:1028   .text:00000000000002cc .L0 
     /tmp/cckmNpMU.s:1031   .text:00000000000002d8 .L0 
     /tmp/cckmNpMU.s:1034   .text:00000000000002e0 .L0 
     /tmp/cckmNpMU.s:1035   .text:00000000000002e0 .L0 
     /tmp/cckmNpMU.s:1040   .text:00000000000002e8 .L0 
     /tmp/cckmNpMU.s:1041   .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:192    .text:00000000000002e8 .L0 
     /tmp/cckmNpMU.s:1053   .text:00000000000002ec .L0 
     /tmp/cckmNpMU.s:1054   .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:122    .text:00000000000002ec .L0 
     /tmp/cckmNpMU.s:1061   .text:00000000000002f0 .L0 
     /tmp/cckmNpMU.s:1072   .text:00000000000002f4 .L0 
     /tmp/cckmNpMU.s:1073   .text:00000000000002f4 .L0 
     /tmp/cckmNpMU.s:1074   .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:116    .text:00000000000002f4 .L0 
     /tmp/cckmNpMU.s:1082   .text:00000000000002fc .L0 
     /tmp/cckmNpMU.s:1083   .text:00000000000002fc .L0 
     /tmp/cckmNpMU.s:1088   .text:0000000000000300 .L0 
     /tmp/cckmNpMU.s:1093   .text:0000000000000304 .L0 
     /tmp/cckmNpMU.s:1094   .text:0000000000000304 .L0 
     /tmp/cckmNpMU.s:1095   .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000304 .L0 
     /tmp/cckmNpMU.s:1103   .text:000000000000030c .L0 
     /tmp/cckmNpMU.s:1104   .text:000000000000030c .L0 
     /tmp/cckmNpMU.s:1109   .text:0000000000000310 .L0 
     /tmp/cckmNpMU.s:1110   .text:0000000000000310 .L0 
     /tmp/cckmNpMU.s:1115   .text:0000000000000318 .L0 
     /tmp/cckmNpMU.s:1116   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000318 .L0 
     /tmp/cckmNpMU.s:1128   .text:000000000000031c .L0 
     /tmp/cckmNpMU.s:1129   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:122    .text:000000000000031c .L0 
     /tmp/cckmNpMU.s:1136   .text:0000000000000320 .L0 
     /tmp/cckmNpMU.s:1147   .text:0000000000000324 .L0 
     /tmp/cckmNpMU.s:1148   .text:0000000000000324 .L0 
     /tmp/cckmNpMU.s:1149   .text:0000000000000324 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000324 .L0 
     /tmp/cckmNpMU.s:1157   .text:000000000000032c .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 59


     /tmp/cckmNpMU.s:1158   .text:000000000000032c .L0 
     /tmp/cckmNpMU.s:1163   .text:0000000000000330 .L0 
     /tmp/cckmNpMU.s:1168   .text:0000000000000334 .L0 
     /tmp/cckmNpMU.s:1169   .text:0000000000000334 .L0 
     /tmp/cckmNpMU.s:1170   .text:0000000000000334 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000334 .L0 
     /tmp/cckmNpMU.s:1178   .text:000000000000033c .L0 
     /tmp/cckmNpMU.s:1179   .text:000000000000033c .L0 
     /tmp/cckmNpMU.s:1184   .text:0000000000000340 .L0 
     /tmp/cckmNpMU.s:1185   .text:0000000000000340 .L0 
     /tmp/cckmNpMU.s:1188   .text:000000000000034c .L0 
     /tmp/cckmNpMU.s:1189   .text:000000000000034c .L0 
     /tmp/cckmNpMU.s:1194   .text:0000000000000354 .L0 
     /tmp/cckmNpMU.s:1195   .text:0000000000000354 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000354 .L0 
     /tmp/cckmNpMU.s:1207   .text:0000000000000358 .L0 
     /tmp/cckmNpMU.s:1208   .text:0000000000000358 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000358 .L0 
     /tmp/cckmNpMU.s:1215   .text:000000000000035c .L0 
     /tmp/cckmNpMU.s:1226   .text:0000000000000360 .L0 
     /tmp/cckmNpMU.s:1227   .text:0000000000000360 .L0 
     /tmp/cckmNpMU.s:1228   .text:0000000000000360 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000360 .L0 
     /tmp/cckmNpMU.s:1236   .text:0000000000000368 .L0 
     /tmp/cckmNpMU.s:1237   .text:0000000000000368 .L0 
     /tmp/cckmNpMU.s:1242   .text:000000000000036c .L0 
     /tmp/cckmNpMU.s:1247   .text:0000000000000370 .L0 
     /tmp/cckmNpMU.s:1248   .text:0000000000000370 .L0 
     /tmp/cckmNpMU.s:1249   .text:0000000000000370 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000370 .L0 
     /tmp/cckmNpMU.s:1257   .text:0000000000000378 .L0 
     /tmp/cckmNpMU.s:1258   .text:0000000000000378 .L0 
     /tmp/cckmNpMU.s:1263   .text:000000000000037c .L0 
     /tmp/cckmNpMU.s:1264   .text:000000000000037c .L0 
     /tmp/cckmNpMU.s:1265   .text:000000000000037c .L0 
       src/Riscv.cpp:154    .text:000000000000037c .L0 
     /tmp/cckmNpMU.s:1271   .text:0000000000000380 .L0 
       src/Riscv.cpp:155    .text:0000000000000380 .L0 
     /tmp/cckmNpMU.s:1276   .text:0000000000000384 .L0 
       src/Riscv.cpp:157    .text:0000000000000384 .L0 
     /tmp/cckmNpMU.s:1282   .text:0000000000000388 .L0 
       src/Riscv.cpp:158    .text:0000000000000388 .L0 
     /tmp/cckmNpMU.s:1288   .text:000000000000038c .L0 
     /tmp/cckmNpMU.s:1290   .text:000000000000038c .L0 
     /tmp/cckmNpMU.s:1297   .text:0000000000000398 .L0 
     /tmp/cckmNpMU.s:1303   .text:000000000000039c .L0 
     /tmp/cckmNpMU.s:1311   .text:00000000000003a4 .L0 
     /tmp/cckmNpMU.s:1312   .text:00000000000003a4 .L0 
     /tmp/cckmNpMU.s:1315   .text:00000000000003ac .L0 
     /tmp/cckmNpMU.s:1316   .text:00000000000003ac .L0 
     /tmp/cckmNpMU.s:1319   .text:00000000000003b0 .L0 
     /tmp/cckmNpMU.s:1320   .text:00000000000003b0 .L0 
     /tmp/cckmNpMU.s:1322   .text:00000000000003b4 .L0 
     /tmp/cckmNpMU.s:1326   .text:00000000000003b8 .L0 
       src/Riscv.cpp:168    .text:00000000000003b8 .L0 
     /tmp/cckmNpMU.s:1336   .text:00000000000003bc .L0 
     /tmp/cckmNpMU.s:1337   .text:00000000000003bc .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 60


  src/../h/Riscv.hpp:192    .text:00000000000003bc .L0 
     /tmp/cckmNpMU.s:1349   .text:00000000000003c0 .L0 
     /tmp/cckmNpMU.s:1350   .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:122    .text:00000000000003c0 .L0 
     /tmp/cckmNpMU.s:1357   .text:00000000000003c4 .L0 
     /tmp/cckmNpMU.s:1363   .text:00000000000003c8 .L0 
     /tmp/cckmNpMU.s:1373   .text:00000000000003d0 .L0 
     /tmp/cckmNpMU.s:1374   .text:00000000000003d0 .L0 
     /tmp/cckmNpMU.s:1375   .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:116    .text:00000000000003d0 .L0 
     /tmp/cckmNpMU.s:1383   .text:00000000000003d8 .L0 
     /tmp/cckmNpMU.s:1384   .text:00000000000003d8 .L0 
     /tmp/cckmNpMU.s:1388   .text:00000000000003dc .L0 
     /tmp/cckmNpMU.s:1393   .text:00000000000003e0 .L0 
     /tmp/cckmNpMU.s:1394   .text:00000000000003e0 .L0 
     /tmp/cckmNpMU.s:1395   .text:00000000000003e0 .L0 
  src/../h/Riscv.hpp:186    .text:00000000000003e0 .L0 
     /tmp/cckmNpMU.s:1403   .text:00000000000003e8 .L0 
     /tmp/cckmNpMU.s:1404   .text:00000000000003e8 .L0 
     /tmp/cckmNpMU.s:1409   .text:00000000000003ec .L0 
     /tmp/cckmNpMU.s:1410   .text:00000000000003ec .L0 
       src/Riscv.cpp:180    .text:00000000000003ec .L0 
     /tmp/cckmNpMU.s:1416   .text:00000000000003f0 .L0 
       src/Riscv.cpp:182    .text:00000000000003f0 .L0 
     /tmp/cckmNpMU.s:1423   .text:00000000000003f4 .L0 
     /tmp/cckmNpMU.s:1430   .text:00000000000003f8 .L0 
     /tmp/cckmNpMU.s:1433   .text:00000000000003fc .L0 
     /tmp/cckmNpMU.s:1441   .text:0000000000000404 .L0 
     /tmp/cckmNpMU.s:1442   .text:0000000000000404 .L0 
     /tmp/cckmNpMU.s:1443   .text:0000000000000404 .L0 
     /tmp/cckmNpMU.s:1449   .text:000000000000040c .L0 
     /tmp/cckmNpMU.s:1450   .text:000000000000040c .L0 
     /tmp/cckmNpMU.s:1452   .text:0000000000000410 .L0 
     /tmp/cckmNpMU.s:1455   .text:0000000000000418 .L0 
     /tmp/cckmNpMU.s:1456   .text:0000000000000418 .L0 
     /tmp/cckmNpMU.s:1462   .text:0000000000000424 .L0 
     /tmp/cckmNpMU.s:1465   .text:0000000000000424 .L0 
     /tmp/cckmNpMU.s:1466   .text:0000000000000424 .L0 
     /tmp/cckmNpMU.s:1468   .text:0000000000000428 .L0 
     /tmp/cckmNpMU.s:1470   .text:000000000000042c .L0 
     /tmp/cckmNpMU.s:1475   .text:0000000000000430 .L0 
     /tmp/cckmNpMU.s:1481   .text:0000000000000434 .L0 
     /tmp/cckmNpMU.s:1482   .text:0000000000000434 .L0 
     /tmp/cckmNpMU.s:1484   .text:0000000000000438 .L0 
     /tmp/cckmNpMU.s:1486   .text:000000000000043c .L0 
     /tmp/cckmNpMU.s:1488   .text:0000000000000440 .L0 
     /tmp/cckmNpMU.s:1496   .text:0000000000000448 .L0 
     /tmp/cckmNpMU.s:1497   .text:0000000000000448 .L0 
     /tmp/cckmNpMU.s:1499   .text:000000000000044c .L0 
     /tmp/cckmNpMU.s:1500   .text:000000000000044c .L0 
     /tmp/cckmNpMU.s:1502   .text:0000000000000450 .L0 
     /tmp/cckmNpMU.s:1509   .text:000000000000045c .L0 
     /tmp/cckmNpMU.s:1510   .text:000000000000045c .L0 
  src/../h/Riscv.hpp:192    .text:000000000000045c .L0 
     /tmp/cckmNpMU.s:1522   .text:0000000000000460 .L0 
     /tmp/cckmNpMU.s:1523   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000460 .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 61


     /tmp/cckmNpMU.s:1530   .text:0000000000000464 .L0 
     /tmp/cckmNpMU.s:1541   .text:0000000000000468 .L0 
     /tmp/cckmNpMU.s:1542   .text:0000000000000468 .L0 
     /tmp/cckmNpMU.s:1543   .text:0000000000000468 .L0 
  src/../h/Riscv.hpp:116    .text:0000000000000468 .L0 
     /tmp/cckmNpMU.s:1551   .text:0000000000000470 .L0 
     /tmp/cckmNpMU.s:1552   .text:0000000000000470 .L0 
     /tmp/cckmNpMU.s:1557   .text:0000000000000474 .L0 
     /tmp/cckmNpMU.s:1562   .text:0000000000000478 .L0 
     /tmp/cckmNpMU.s:1563   .text:0000000000000478 .L0 
     /tmp/cckmNpMU.s:1564   .text:0000000000000478 .L0 
  src/../h/Riscv.hpp:186    .text:0000000000000478 .L0 
     /tmp/cckmNpMU.s:1572   .text:0000000000000480 .L0 
     /tmp/cckmNpMU.s:1573   .text:0000000000000480 .L0 
     /tmp/cckmNpMU.s:1578   .text:0000000000000484 .L0 
     /tmp/cckmNpMU.s:1579   .text:0000000000000484 .L0 
       src/Riscv.cpp:205    .text:0000000000000484 .L0 
     /tmp/cckmNpMU.s:1585   .text:0000000000000488 .L0 
       src/Riscv.cpp:207    .text:0000000000000488 .L0 
     /tmp/cckmNpMU.s:1591   .text:000000000000048c .L0 
     /tmp/cckmNpMU.s:1592   .text:000000000000048c .L0 
     /tmp/cckmNpMU.s:1594   .text:000000000000048c .L0 
     /tmp/cckmNpMU.s:1597   .text:0000000000000494 .L0 
       src/Riscv.cpp:214    .text:0000000000000494 .L0 
     /tmp/cckmNpMU.s:1607   .text:0000000000000498 .L0 
     /tmp/cckmNpMU.s:1608   .text:0000000000000498 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000498 .L0 
     /tmp/cckmNpMU.s:1620   .text:000000000000049c .L0 
     /tmp/cckmNpMU.s:1621   .text:000000000000049c .L0 
  src/../h/Riscv.hpp:122    .text:000000000000049c .L0 
     /tmp/cckmNpMU.s:1628   .text:00000000000004a0 .L0 
     /tmp/cckmNpMU.s:1639   .text:00000000000004a4 .L0 
     /tmp/cckmNpMU.s:1640   .text:00000000000004a4 .L0 
     /tmp/cckmNpMU.s:1641   .text:00000000000004a4 .L0 
  src/../h/Riscv.hpp:116    .text:00000000000004a4 .L0 
     /tmp/cckmNpMU.s:1649   .text:00000000000004ac .L0 
     /tmp/cckmNpMU.s:1650   .text:00000000000004ac .L0 
     /tmp/cckmNpMU.s:1655   .text:00000000000004b0 .L0 
     /tmp/cckmNpMU.s:1660   .text:00000000000004b4 .L0 
     /tmp/cckmNpMU.s:1661   .text:00000000000004b4 .L0 
     /tmp/cckmNpMU.s:1662   .text:00000000000004b4 .L0 
  src/../h/Riscv.hpp:186    .text:00000000000004b4 .L0 
     /tmp/cckmNpMU.s:1670   .text:00000000000004bc .L0 
     /tmp/cckmNpMU.s:1671   .text:00000000000004bc .L0 
     /tmp/cckmNpMU.s:1676   .text:00000000000004c0 .L0 
     /tmp/cckmNpMU.s:1677   .text:00000000000004c0 .L0 
       src/Riscv.cpp:225    .text:00000000000004c0 .L0 
     /tmp/cckmNpMU.s:1683   .text:00000000000004c4 .L0 
       src/Riscv.cpp:227    .text:00000000000004c4 .L0 
     /tmp/cckmNpMU.s:1689   .text:00000000000004c8 .L0 
     /tmp/cckmNpMU.s:1690   .text:00000000000004c8 .L0 
     /tmp/cckmNpMU.s:1692   .text:00000000000004c8 .L0 
     /tmp/cckmNpMU.s:1695   .text:00000000000004d0 .L0 
     /tmp/cckmNpMU.s:1696   .text:00000000000004d0 .L0 
     /tmp/cckmNpMU.s:1697   .text:00000000000004d0 .L0 
     /tmp/cckmNpMU.s:1707   .text:00000000000004d8 .L0 
     /tmp/cckmNpMU.s:1708   .text:00000000000004d8 .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 62


  src/../h/Riscv.hpp:192    .text:00000000000004d8 .L0 
     /tmp/cckmNpMU.s:1720   .text:00000000000004dc .L0 
     /tmp/cckmNpMU.s:1721   .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:122    .text:00000000000004dc .L0 
     /tmp/cckmNpMU.s:1728   .text:00000000000004e0 .L0 
     /tmp/cckmNpMU.s:1739   .text:00000000000004e4 .L0 
     /tmp/cckmNpMU.s:1740   .text:00000000000004e4 .L0 
     /tmp/cckmNpMU.s:1741   .text:00000000000004e4 .L0 
  src/../h/Riscv.hpp:116    .text:00000000000004e4 .L0 
     /tmp/cckmNpMU.s:1749   .text:00000000000004ec .L0 
     /tmp/cckmNpMU.s:1750   .text:00000000000004ec .L0 
     /tmp/cckmNpMU.s:1755   .text:00000000000004f0 .L0 
     /tmp/cckmNpMU.s:1760   .text:00000000000004f4 .L0 
     /tmp/cckmNpMU.s:1761   .text:00000000000004f4 .L0 
     /tmp/cckmNpMU.s:1762   .text:00000000000004f4 .L0 
  src/../h/Riscv.hpp:186    .text:00000000000004f4 .L0 
     /tmp/cckmNpMU.s:1770   .text:00000000000004fc .L0 
     /tmp/cckmNpMU.s:1771   .text:00000000000004fc .L0 
     /tmp/cckmNpMU.s:1776   .text:0000000000000500 .L0 
     /tmp/cckmNpMU.s:1777   .text:0000000000000500 .L0 
     /tmp/cckmNpMU.s:1783   .text:000000000000050c .L0 
     /tmp/cckmNpMU.s:1785   .text:000000000000050c .L0 
     /tmp/cckmNpMU.s:1788   .text:0000000000000514 .L0 
     /tmp/cckmNpMU.s:1789   .text:0000000000000514 .L0 
     /tmp/cckmNpMU.s:1795   .text:0000000000000520 .L0 
       src/Riscv.cpp:250    .text:0000000000000520 .L0 
     /tmp/cckmNpMU.s:1804   .text:0000000000000524 .L0 
     /tmp/cckmNpMU.s:1805   .text:0000000000000524 .L0 
  src/../h/Riscv.hpp:192    .text:0000000000000524 .L0 
     /tmp/cckmNpMU.s:1817   .text:0000000000000528 .L0 
     /tmp/cckmNpMU.s:1818   .text:0000000000000528 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000528 .L0 
     /tmp/cckmNpMU.s:1825   .text:000000000000052c .L0 
     /tmp/cckmNpMU.s:1843   .text:0000000000000530 .L0 
     /tmp/cckmNpMU.s:1849   .text:0000000000000530 _ZN5Riscv17handleTrapConsoleEv
     /tmp/cckmNpMU.s:1852   .text:0000000000000530 .L0 
     /tmp/cckmNpMU.s:1853   .text:0000000000000530 .L0 
     /tmp/cckmNpMU.s:1854   .text:0000000000000534 .L0 
     /tmp/cckmNpMU.s:1857   .text:000000000000053c .L0 
     /tmp/cckmNpMU.s:1858   .text:000000000000053c .L0 
     /tmp/cckmNpMU.s:1860   .text:0000000000000540 .L0 
     /tmp/cckmNpMU.s:1864   .text:0000000000000540 .L0 
     /tmp/cckmNpMU.s:1865   .text:0000000000000540 .L0 
     /tmp/cckmNpMU.s:1866   .text:0000000000000540 .L0 
  src/../h/Riscv.hpp:104    .text:0000000000000540 .L0 
     /tmp/cckmNpMU.s:1874   .text:0000000000000548 .L0 
     /tmp/cckmNpMU.s:1875   .text:0000000000000548 .L0 
     /tmp/cckmNpMU.s:1880   .text:000000000000054c .L0 
     /tmp/cckmNpMU.s:1885   .text:000000000000055c .L0 
     /tmp/cckmNpMU.s:1892   .text:000000000000056c .L0 
     /tmp/cckmNpMU.s:1893   .text:0000000000000570 .L0 
     /tmp/cckmNpMU.s:1894   .text:0000000000000570 .L0 
     /tmp/cckmNpMU.s:1896   .text:0000000000000574 .L0 
     /tmp/cckmNpMU.s:1897   .text:0000000000000574 .L0 
     /tmp/cckmNpMU.s:1899   .text:0000000000000578 .L0 
     /tmp/cckmNpMU.s:1903   .text:000000000000057c .L0 
     /tmp/cckmNpMU.s:1905   .text:000000000000057c .L0 
GAS LISTING /tmp/cckmNpMU.s 			page 63


     /tmp/cckmNpMU.s:1906   .text:000000000000057c .L0 
     /tmp/cckmNpMU.s:1911   .text:0000000000000584 .L0 
     /tmp/cckmNpMU.s:1912   .text:0000000000000584 .L0 
     /tmp/cckmNpMU.s:1913   .text:0000000000000584 .L0 
     /tmp/cckmNpMU.s:1920   .text:000000000000058c .L0 
     /tmp/cckmNpMU.s:1928   .text:0000000000000590 .L0 
     /tmp/cckmNpMU.s:1929   .text:0000000000000590 .L0 
     /tmp/cckmNpMU.s:1930   .text:0000000000000590 .L0 
     /tmp/cckmNpMU.s:1940   .text:0000000000000598 .L0 
     /tmp/cckmNpMU.s:1941   .text:000000000000059c .L0 
     /tmp/cckmNpMU.s:1954   .bss:0000000000000001 _ZN5Riscv7enteredE
     /tmp/cckmNpMU.s:1950   .bss:0000000000000000 _ZN5Riscv9privilegeE
     /tmp/cckmNpMU.s:1947   .bss:0000000000000000 .LANCHOR0
     /tmp/cckmNpMU.s:1963   .text:000000000000059c .L0 
     /tmp/cckmNpMU.s:126    .text:0000000000000070 .L0 
     /tmp/cckmNpMU.s:165    .text:0000000000000090 .L0 
     /tmp/cckmNpMU.s:569    .text:0000000000000184 .L0 
     /tmp/cckmNpMU.s:581    .text:0000000000000198 .L0 
     /tmp/cckmNpMU.s:1028   .text:00000000000002cc .L0 
     /tmp/cckmNpMU.s:1185   .text:0000000000000340 .L0 
     /tmp/cckmNpMU.s:1777   .text:0000000000000500 .L0 
     /tmp/cckmNpMU.s:1789   .text:0000000000000514 .L0 
     /tmp/cckmNpMU.s:187    .text:00000000000000b0 .L28
     /tmp/cckmNpMU.s:231    .text:00000000000000e0 .L6
     /tmp/cckmNpMU.s:204    .text:00000000000000b8 .L3
     /tmp/cckmNpMU.s:633    .text:00000000000001b0 .L29
     /tmp/cckmNpMU.s:643    .text:00000000000001bc .L30
     /tmp/cckmNpMU.s:788    .text:0000000000000234 .L31
     /tmp/cckmNpMU.s:885    .text:0000000000000274 .L32
     /tmp/cckmNpMU.s:981    .text:00000000000002b0 .L33
     /tmp/cckmNpMU.s:1063   .text:00000000000002f4 .L34
     /tmp/cckmNpMU.s:1138   .text:0000000000000324 .L35
     /tmp/cckmNpMU.s:1217   .text:0000000000000360 .L36
     /tmp/cckmNpMU.s:1366   .text:00000000000003d0 .L37
     /tmp/cckmNpMU.s:1532   .text:0000000000000468 .L38
     /tmp/cckmNpMU.s:1630   .text:00000000000004a4 .L39
     /tmp/cckmNpMU.s:1730   .text:00000000000004e4 .L40
     /tmp/cckmNpMU.s:781    .text:000000000000022c .L25
     /tmp/cckmNpMU.s:268    .text:0000000000000104 .L8
     /tmp/cckmNpMU.s:745    .text:000000000000021c .L9
     /tmp/cckmNpMU.s:1359   .text:00000000000003c8 .L26
     /tmp/cckmNpMU.s:1323   .text:00000000000003b8 .L16
     /tmp/cckmNpMU.s:1459   .text:0000000000000424 .L20
     /tmp/cckmNpMU.s:1491   .text:0000000000000448 .L18
     /tmp/cckmNpMU.s:1425   .text:00000000000003f8 .L19
     /tmp/cckmNpMU.s:1505   .text:000000000000045c .L21
     /tmp/cckmNpMU.s:1902   .text:000000000000057c .L45
     /tmp/cckmNpMU.s:1922   .text:0000000000000590 .L46
     /tmp/cckmNpMU.s:1890   .text:000000000000056c .L41
     /tmp/cckmNpMU.s:5037   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckmNpMU.s:7367   .debug_str:0000000000000b2a .LASF219
     /tmp/cckmNpMU.s:7077   .debug_str:000000000000019a .LASF220
     /tmp/cckmNpMU.s:7229   .debug_str:00000000000006d7 .LASF221
     /tmp/cckmNpMU.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckmNpMU.s:1957   .text:000000000000059c .Letext0
     /tmp/cckmNpMU.s:7015   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckmNpMU.s:7161   .debug_str:0000000000000473 .LASF0
GAS LISTING /tmp/cckmNpMU.s 			page 64


     /tmp/cckmNpMU.s:7205   .debug_str:000000000000062d .LASF1
     /tmp/cckmNpMU.s:7299   .debug_str:000000000000095f .LASF2
     /tmp/cckmNpMU.s:7311   .debug_str:00000000000009cd .LASF4
     /tmp/cckmNpMU.s:7177   .debug_str:00000000000004ea .LASF3
     /tmp/cckmNpMU.s:7031   .debug_str:000000000000005f .LASF5
     /tmp/cckmNpMU.s:7257   .debug_str:00000000000007c2 .LASF6
     /tmp/cckmNpMU.s:7193   .debug_str:00000000000005cb .LASF7
     /tmp/cckmNpMU.s:7127   .debug_str:0000000000000359 .LASF8
     /tmp/cckmNpMU.s:7137   .debug_str:00000000000003a3 .LASF9
     /tmp/cckmNpMU.s:7065   .debug_str:000000000000013e .LASF10
     /tmp/cckmNpMU.s:7115   .debug_str:00000000000002f7 .LASF11
     /tmp/cckmNpMU.s:7079   .debug_str:00000000000001a8 .LASF12
     /tmp/cckmNpMU.s:7063   .debug_str:000000000000012e .LASF13
     /tmp/cckmNpMU.s:7341   .debug_str:0000000000000aa1 .LASF14
     /tmp/cckmNpMU.s:7099   .debug_str:000000000000024b .LASF15
     /tmp/cckmNpMU.s:7331   .debug_str:0000000000000a6b .LASF16
     /tmp/cckmNpMU.s:7419   .debug_str:0000000000000d4f .LASF72
     /tmp/cckmNpMU.s:7279   .debug_str:00000000000008b0 .LASF20
     /tmp/cckmNpMU.s:7211   .debug_str:0000000000000668 .LASF17
     /tmp/cckmNpMU.s:7105   .debug_str:000000000000029f .LASF18
     /tmp/cckmNpMU.s:7435   .debug_str:0000000000000db5 .LASF19
     /tmp/cckmNpMU.s:7403   .debug_str:0000000000000cc7 .LASF21
     /tmp/cckmNpMU.s:7109   .debug_str:00000000000002b3 .LASF22
     /tmp/cckmNpMU.s:7365   .debug_str:0000000000000b1d .LASF23
     /tmp/cckmNpMU.s:7085   .debug_str:00000000000001dd .LASF24
     /tmp/cckmNpMU.s:7325   .debug_str:0000000000000a3d .LASF25
     /tmp/cckmNpMU.s:7133   .debug_str:000000000000037f .LASF26
     /tmp/cckmNpMU.s:7149   .debug_str:000000000000041c .LASF59
     /tmp/cckmNpMU.s:7159   .debug_str:000000000000045b .LASF61
     /tmp/cckmNpMU.s:7395   .debug_str:0000000000000c93 .LASF27
     /tmp/cckmNpMU.s:7385   .debug_str:0000000000000c58 .LASF29
     /tmp/cckmNpMU.s:7293   .debug_str:0000000000000939 .LASF31
     /tmp/cckmNpMU.s:7245   .debug_str:0000000000000757 .LASF33
     /tmp/cckmNpMU.s:7271   .debug_str:0000000000000867 .LASF28
     /tmp/cckmNpMU.s:7273   .debug_str:000000000000086e .LASF30
     /tmp/cckmNpMU.s:7241   .debug_str:000000000000073c .LASF32
     /tmp/cckmNpMU.s:7197   .debug_str:0000000000000600 .LASF34
     /tmp/cckmNpMU.s:7431   .debug_str:0000000000000da1 .LASF35
     /tmp/cckmNpMU.s:7375   .debug_str:0000000000000c0d .LASF36
     /tmp/cckmNpMU.s:7237   .debug_str:000000000000072f .LASF37
     /tmp/cckmNpMU.s:7243   .debug_str:0000000000000743 .LASF38
     /tmp/cckmNpMU.s:7213   .debug_str:0000000000000671 .LASF39
     /tmp/cckmNpMU.s:7277   .debug_str:000000000000089c .LASF40
     /tmp/cckmNpMU.s:7461   .debug_str:0000000000000ea3 .LASF41
     /tmp/cckmNpMU.s:7167   .debug_str:000000000000048b .LASF42
     /tmp/cckmNpMU.s:7337   .debug_str:0000000000000a8d .LASF43
     /tmp/cckmNpMU.s:7315   .debug_str:00000000000009fa .LASF44
     /tmp/cckmNpMU.s:7317   .debug_str:0000000000000a0d .LASF45
     /tmp/cckmNpMU.s:7071   .debug_str:000000000000015c .LASF46
     /tmp/cckmNpMU.s:7095   .debug_str:0000000000000226 .LASF47
     /tmp/cckmNpMU.s:7155   .debug_str:0000000000000434 .LASF48
     /tmp/cckmNpMU.s:7165   .debug_str:0000000000000485 .LASF49
     /tmp/cckmNpMU.s:7087   .debug_str:00000000000001e9 .LASF50
     /tmp/cckmNpMU.s:7033   .debug_str:0000000000000066 .LASF51
     /tmp/cckmNpMU.s:7305   .debug_str:0000000000000983 .LASF52
     /tmp/cckmNpMU.s:7297   .debug_str:0000000000000954 .LASF53
     /tmp/cckmNpMU.s:7453   .debug_str:0000000000000e58 .LASF54
GAS LISTING /tmp/cckmNpMU.s 			page 65


     /tmp/cckmNpMU.s:7423   .debug_str:0000000000000d5a .LASF55
     /tmp/cckmNpMU.s:7439   .debug_str:0000000000000dd1 .LASF56
     /tmp/cckmNpMU.s:7417   .debug_str:0000000000000d45 .LASF57
     /tmp/cckmNpMU.s:7231   .debug_str:0000000000000707 .LASF58
     /tmp/cckmNpMU.s:7429   .debug_str:0000000000000d92 .LASF60
     /tmp/cckmNpMU.s:7135   .debug_str:0000000000000387 .LASF62
     /tmp/cckmNpMU.s:7301   .debug_str:000000000000096d .LASF63
     /tmp/cckmNpMU.s:7455   .debug_str:0000000000000e70 .LASF64
     /tmp/cckmNpMU.s:7107   .debug_str:00000000000002a8 .LASF65
     /tmp/cckmNpMU.s:7123   .debug_str:0000000000000337 .LASF66
     /tmp/cckmNpMU.s:7259   .debug_str:00000000000007d5 .LASF67
     /tmp/cckmNpMU.s:7189   .debug_str:000000000000058c .LASF69
     /tmp/cckmNpMU.s:7295   .debug_str:0000000000000942 .LASF68
     /tmp/cckmNpMU.s:7097   .debug_str:000000000000022c .LASF70
     /tmp/cckmNpMU.s:7223   .debug_str:00000000000006b1 .LASF71
     /tmp/cckmNpMU.s:7427   .debug_str:0000000000000d6e .LASF73
     /tmp/cckmNpMU.s:7413   .debug_str:0000000000000d20 .LASF108
     /tmp/cckmNpMU.s:7203   .debug_str:0000000000000628 .LASF74
     /tmp/cckmNpMU.s:7067   .debug_str:000000000000014d .LASF75
     /tmp/cckmNpMU.s:7039   .debug_str:0000000000000091 .LASF76
     /tmp/cckmNpMU.s:7173   .debug_str:00000000000004af .LASF110
     /tmp/cckmNpMU.s:7335   .debug_str:0000000000000a88 .LASF77
     /tmp/cckmNpMU.s:7239   .debug_str:0000000000000737 .LASF78
     /tmp/cckmNpMU.s:7457   .debug_str:0000000000000e89 .LASF79
     /tmp/cckmNpMU.s:7307   .debug_str:000000000000099b .LASF82
     /tmp/cckmNpMU.s:7113   .debug_str:00000000000002d6 .LASF80
     /tmp/cckmNpMU.s:7303   .debug_str:0000000000000979 .LASF81
     /tmp/cckmNpMU.s:7285   .debug_str:00000000000008e0 .LASF83
     /tmp/cckmNpMU.s:7251   .debug_str:000000000000078f .LASF84
     /tmp/cckmNpMU.s:7043   .debug_str:000000000000009e .LASF85
     /tmp/cckmNpMU.s:7443   .debug_str:0000000000000df7 .LASF86
     /tmp/cckmNpMU.s:7347   .debug_str:0000000000000abd .LASF87
     /tmp/cckmNpMU.s:7057   .debug_str:00000000000000f0 .LASF88
     /tmp/cckmNpMU.s:7397   .debug_str:0000000000000c9c .LASF89
     /tmp/cckmNpMU.s:7101   .debug_str:0000000000000261 .LASF90
     /tmp/cckmNpMU.s:7171   .debug_str:00000000000004a5 .LASF91
     /tmp/cckmNpMU.s:7265   .debug_str:000000000000080e .LASF92
     /tmp/cckmNpMU.s:7361   .debug_str:0000000000000b0d .LASF147
     /tmp/cckmNpMU.s:7183   .debug_str:000000000000053c .LASF93
     /tmp/cckmNpMU.s:7401   .debug_str:0000000000000cab .LASF94
     /tmp/cckmNpMU.s:7037   .debug_str:0000000000000078 .LASF95
     /tmp/cckmNpMU.s:7233   .debug_str:000000000000071d .LASF96
     /tmp/cckmNpMU.s:7379   .debug_str:0000000000000c2b .LASF97
     /tmp/cckmNpMU.s:7283   .debug_str:00000000000008d8 .LASF98
     /tmp/cckmNpMU.s:7125   .debug_str:000000000000034f .LASF99
     /tmp/cckmNpMU.s:7327   .debug_str:0000000000000a47 .LASF100
     /tmp/cckmNpMU.s:7047   .debug_str:00000000000000ab .LASF101
     /tmp/cckmNpMU.s:7447   .debug_str:0000000000000e1d .LASF222
     /tmp/cckmNpMU.s:7187   .debug_str:0000000000000570 .LASF223
     /tmp/cckmNpMU.s:7433   .debug_str:0000000000000da9 .LASF102
     /tmp/cckmNpMU.s:7191   .debug_str:00000000000005ae .LASF103
     /tmp/cckmNpMU.s:7061   .debug_str:0000000000000119 .LASF104
     /tmp/cckmNpMU.s:7309   .debug_str:00000000000009b8 .LASF105
     /tmp/cckmNpMU.s:7463   .debug_str:0000000000000eab .LASF106
     /tmp/cckmNpMU.s:7399   .debug_str:0000000000000ca6 .LASF109
     /tmp/cckmNpMU.s:7201   .debug_str:0000000000000623 .LASF107
     /tmp/cckmNpMU.s:7407   .debug_str:0000000000000cf1 .LASF111
GAS LISTING /tmp/cckmNpMU.s 			page 66


     /tmp/cckmNpMU.s:7373   .debug_str:0000000000000c08 .LASF112
     /tmp/cckmNpMU.s:7255   .debug_str:00000000000007ab .LASF113
     /tmp/cckmNpMU.s:7275   .debug_str:0000000000000881 .LASF114
     /tmp/cckmNpMU.s:7147   .debug_str:0000000000000401 .LASF224
     /tmp/cckmNpMU.s:7227   .debug_str:00000000000006ca .LASF115
     /tmp/cckmNpMU.s:7025   .debug_str:0000000000000033 .LASF116
     /tmp/cckmNpMU.s:7029   .debug_str:000000000000004f .LASF117
     /tmp/cckmNpMU.s:7185   .debug_str:0000000000000558 .LASF118
     /tmp/cckmNpMU.s:7291   .debug_str:0000000000000930 .LASF119
     /tmp/cckmNpMU.s:7451   .debug_str:0000000000000e37 .LASF120
     /tmp/cckmNpMU.s:7217   .debug_str:000000000000068d .LASF121
     /tmp/cckmNpMU.s:7415   .debug_str:0000000000000d25 .LASF122
     /tmp/cckmNpMU.s:7253   .debug_str:000000000000079f .LASF123
     /tmp/cckmNpMU.s:7195   .debug_str:00000000000005de .LASF124
     /tmp/cckmNpMU.s:7465   .debug_str:0000000000000eb9 .LASF125
     /tmp/cckmNpMU.s:7289   .debug_str:0000000000000911 .LASF126
     /tmp/cckmNpMU.s:7323   .debug_str:0000000000000a32 .LASF127
     /tmp/cckmNpMU.s:7117   .debug_str:0000000000000306 .LASF128
     /tmp/cckmNpMU.s:7263   .debug_str:0000000000000805 .LASF129
     /tmp/cckmNpMU.s:7073   .debug_str:000000000000016f .LASF130
     /tmp/cckmNpMU.s:7041   .debug_str:0000000000000096 .LASF131
     /tmp/cckmNpMU.s:7445   .debug_str:0000000000000e16 .LASF132
     /tmp/cckmNpMU.s:7059   .debug_str:0000000000000113 .LASF133
     /tmp/cckmNpMU.s:7051   .debug_str:00000000000000c9 .LASF134
     /tmp/cckmNpMU.s:7019   .debug_str:0000000000000011 .LASF135
     /tmp/cckmNpMU.s:7351   .debug_str:0000000000000ad1 .LASF136
     /tmp/cckmNpMU.s:7343   .debug_str:0000000000000aad .LASF137
     /tmp/cckmNpMU.s:7199   .debug_str:0000000000000613 .LASF138
     /tmp/cckmNpMU.s:7353   .debug_str:0000000000000ad9 .LASF139
     /tmp/cckmNpMU.s:7261   .debug_str:00000000000007ea .LASF140
     /tmp/cckmNpMU.s:7049   .debug_str:00000000000000bd .LASF141
     /tmp/cckmNpMU.s:7405   .debug_str:0000000000000cd6 .LASF142
     /tmp/cckmNpMU.s:7235   .debug_str:0000000000000722 .LASF143
     /tmp/cckmNpMU.s:7089   .debug_str:00000000000001fb .LASF144
     /tmp/cckmNpMU.s:7339   .debug_str:0000000000000a94 .LASF145
     /tmp/cckmNpMU.s:7313   .debug_str:00000000000009d4 .LASF146
     /tmp/cckmNpMU.s:7247   .debug_str:000000000000076c .LASF148
     /tmp/cckmNpMU.s:7209   .debug_str:0000000000000662 .LASF149
     /tmp/cckmNpMU.s:7021   .debug_str:0000000000000019 .LASF150
     /tmp/cckmNpMU.s:7321   .debug_str:0000000000000a25 .LASF151
     /tmp/cckmNpMU.s:7103   .debug_str:0000000000000283 .LASF152
     /tmp/cckmNpMU.s:7359   .debug_str:0000000000000afe .LASF153
     /tmp/cckmNpMU.s:7249   .debug_str:0000000000000771 .LASF154
     /tmp/cckmNpMU.s:7363   .debug_str:0000000000000b15 .LASF155
     /tmp/cckmNpMU.s:7169   .debug_str:000000000000049f .LASF156
     /tmp/cckmNpMU.s:7179   .debug_str:00000000000004fc .LASF157
     /tmp/cckmNpMU.s:7075   .debug_str:000000000000018d .LASF158
     /tmp/cckmNpMU.s:7381   .debug_str:0000000000000c34 .LASF159
     /tmp/cckmNpMU.s:7287   .debug_str:0000000000000901 .LASF160
     /tmp/cckmNpMU.s:7055   .debug_str:00000000000000e0 .LASF161
     /tmp/cckmNpMU.s:7441   .debug_str:0000000000000de7 .LASF162
     /tmp/cckmNpMU.s:7371   .debug_str:0000000000000bf7 .LASF163
     /tmp/cckmNpMU.s:7329   .debug_str:0000000000000a58 .LASF164
     /tmp/cckmNpMU.s:7017   .debug_str:0000000000000000 .LASF165
     /tmp/cckmNpMU.s:7143   .debug_str:00000000000003de .LASF166
     /tmp/cckmNpMU.s:7027   .debug_str:000000000000004a .LASF167
     /tmp/cckmNpMU.s:7449   .debug_str:0000000000000e31 .LASF168
GAS LISTING /tmp/cckmNpMU.s 			page 67


     /tmp/cckmNpMU.s:7383   .debug_str:0000000000000c50 .LASF169
     /tmp/cckmNpMU.s:7377   .debug_str:0000000000000c21 .LASF170
     /tmp/cckmNpMU.s:7349   .debug_str:0000000000000ac8 .LASF171
     /tmp/cckmNpMU.s:7425   .debug_str:0000000000000d64 .LASF172
     /tmp/cckmNpMU.s:7053   .debug_str:00000000000000d2 .LASF173
     /tmp/cckmNpMU.s:7281   .debug_str:00000000000008bb .LASF174
     /tmp/cckmNpMU.s:7081   .debug_str:00000000000001b8 .LASF175
     /tmp/cckmNpMU.s:7181   .debug_str:0000000000000510 .LASF176
     /tmp/cckmNpMU.s:7091   .debug_str:0000000000000218 .LASF177
     /tmp/cckmNpMU.s:7083   .debug_str:00000000000001c6 .LASF178
     /tmp/cckmNpMU.s:7069   .debug_str:0000000000000152 .LASF179
     /tmp/cckmNpMU.s:7207   .debug_str:0000000000000640 .LASF180
     /tmp/cckmNpMU.s:7319   .debug_str:0000000000000a14 .LASF181
     /tmp/cckmNpMU.s:7369   .debug_str:0000000000000bee .LASF182
     /tmp/cckmNpMU.s:7411   .debug_str:0000000000000d19 .LASF183
     /tmp/cckmNpMU.s:7459   .debug_str:0000000000000e9a .LASF184
     /tmp/cckmNpMU.s:7121   .debug_str:000000000000032c .LASF185
     /tmp/cckmNpMU.s:7139   .debug_str:00000000000003b1 .LASF186
     /tmp/cckmNpMU.s:7093   .debug_str:0000000000000221 .LASF187
     /tmp/cckmNpMU.s:7387   .debug_str:0000000000000c6d .LASF188
     /tmp/cckmNpMU.s:7345   .debug_str:0000000000000ab6 .LASF189
     /tmp/cckmNpMU.s:7175   .debug_str:00000000000004d1 .LASF190
     /tmp/cckmNpMU.s:7151   .debug_str:0000000000000427 .LASF191
     /tmp/cckmNpMU.s:7141   .debug_str:00000000000003c5 .LASF192
     /tmp/cckmNpMU.s:7225   .debug_str:00000000000006b6 .LASF193
     /tmp/cckmNpMU.s:7215   .debug_str:0000000000000679 .LASF194
     /tmp/cckmNpMU.s:7157   .debug_str:0000000000000446 .LASF195
     /tmp/cckmNpMU.s:7355   .debug_str:0000000000000ae4 .LASF196
     /tmp/cckmNpMU.s:7035   .debug_str:0000000000000071 .LASF197
     /tmp/cckmNpMU.s:7267   .debug_str:000000000000084b .LASF198
     /tmp/cckmNpMU.s:7129   .debug_str:0000000000000369 .LASF199
     /tmp/cckmNpMU.s:7357   .debug_str:0000000000000af9 .LASF200
     /tmp/cckmNpMU.s:7219   .debug_str:0000000000000695 .LASF201
     /tmp/cckmNpMU.s:7437   .debug_str:0000000000000dbe .LASF202
     /tmp/cckmNpMU.s:7119   .debug_str:0000000000000327 .LASF204
     /tmp/cckmNpMU.s:7163   .debug_str:0000000000000480 .LASF203
     /tmp/cckmNpMU.s:7111   .debug_str:00000000000002bf .LASF212
     /tmp/cckmNpMU.s:1850   .text:0000000000000530 .LFB54
     /tmp/cckmNpMU.s:1942   .text:000000000000059c .LFE54
     /tmp/cckmNpMU.s:7333   .debug_str:0000000000000a81 .LASF205
     /tmp/cckmNpMU.s:6282   .debug_loc:0000000000000000 .LLST81
     /tmp/cckmNpMU.s:1862   .text:0000000000000540 .LBB437
     /tmp/cckmNpMU.s:1878   .text:000000000000054c .LBE437
     /tmp/cckmNpMU.s:1909   .text:0000000000000584 .LBB439
     /tmp/cckmNpMU.s:1924   .text:0000000000000590 .LBE439
     /tmp/cckmNpMU.s:6297   .debug_loc:0000000000000049 .LLST82
     /tmp/cckmNpMU.s:1926   .text:0000000000000590 .LBB441
     /tmp/cckmNpMU.s:1938   .text:0000000000000598 .LBE441
     /tmp/cckmNpMU.s:6306   .debug_loc:000000000000006f .LLST83
     /tmp/cckmNpMU.s:1907   .text:0000000000000584 .LVL126
     /tmp/cckmNpMU.s:64     .text:0000000000000028 .LFB53
     /tmp/cckmNpMU.s:1844   .text:0000000000000530 .LFE53
     /tmp/cckmNpMU.s:6314   .debug_loc:0000000000000093 .LLST1
     /tmp/cckmNpMU.s:7023   .debug_str:000000000000002d .LASF206
     /tmp/cckmNpMU.s:6345   .debug_loc:0000000000000119 .LLST2
     /tmp/cckmNpMU.s:7389   .debug_str:0000000000000c84 .LASF207
     /tmp/cckmNpMU.s:6396   .debug_loc:000000000000020d .LLST3
GAS LISTING /tmp/cckmNpMU.s 			page 68


     /tmp/cckmNpMU.s:129    .text:000000000000007c .LBB168
     /tmp/cckmNpMU.s:190    .text:00000000000000b0 .LBE168
     /tmp/cckmNpMU.s:7421   .debug_str:0000000000000d55 .LASF208
     /tmp/cckmNpMU.s:6407   .debug_loc:0000000000000243 .LLST4
     /tmp/cckmNpMU.s:131    .text:000000000000007c .LBB169
     /tmp/cckmNpMU.s:147    .text:0000000000000088 .LBE169
     /tmp/cckmNpMU.s:149    .text:0000000000000088 .LBB171
     /tmp/cckmNpMU.s:162    .text:0000000000000090 .LBE171
     /tmp/cckmNpMU.s:6420   .debug_loc:000000000000027b .LLST5
     /tmp/cckmNpMU.s:175    .text:00000000000000a8 .LBB173
     /tmp/cckmNpMU.s:189    .text:00000000000000b0 .LBE173
     /tmp/cckmNpMU.s:6429   .debug_loc:00000000000002a1 .LLST6
     /tmp/cckmNpMU.s:646    .text:00000000000001bc .LBB178
     /tmp/cckmNpMU.s:789    .text:0000000000000234 .LBE178
     /tmp/cckmNpMU.s:6436   .debug_loc:00000000000002c4 .LLST7
     /tmp/cckmNpMU.s:7145   .debug_str:00000000000003f9 .LASF209
     /tmp/cckmNpMU.s:6443   .debug_loc:00000000000002e7 .LLST8
     /tmp/cckmNpMU.s:6450   .debug_loc:000000000000030a .LLST9
     /tmp/cckmNpMU.s:7391   .debug_str:0000000000000c89 .LASF210
     /tmp/cckmNpMU.s:6457   .debug_loc:000000000000032d .LLST10
     /tmp/cckmNpMU.s:7393   .debug_str:0000000000000c8e .LASF211
     /tmp/cckmNpMU.s:6464   .debug_loc:0000000000000350 .LLST11
     /tmp/cckmNpMU.s:6471   .debug_loc:0000000000000373 .LLST12
     /tmp/cckmNpMU.s:6482   .debug_loc:00000000000003a9 .LLST13
     /tmp/cckmNpMU.s:6489   .debug_loc:00000000000003cc .LLST14
     /tmp/cckmNpMU.s:648    .text:00000000000001bc .LBB179
     /tmp/cckmNpMU.s:663    .text:00000000000001c8 .LBE179
     /tmp/cckmNpMU.s:668    .text:00000000000001cc .LBB181
     /tmp/cckmNpMU.s:684    .text:00000000000001d8 .LBE181
     /tmp/cckmNpMU.s:756    .text:0000000000000220 .LBB183
     /tmp/cckmNpMU.s:767    .text:0000000000000224 .LBE183
     /tmp/cckmNpMU.s:6496   .debug_loc:00000000000003ef .LLST15
     /tmp/cckmNpMU.s:769    .text:0000000000000224 .LBB185
     /tmp/cckmNpMU.s:783    .text:000000000000022c .LBE185
     /tmp/cckmNpMU.s:6503   .debug_loc:0000000000000412 .LLST16
     /tmp/cckmNpMU.s:727    .text:00000000000001fc .LVL29
     /tmp/cckmNpMU.s:736    .text:0000000000000210 .LVL32
     /tmp/cckmNpMU.s:792    .text:0000000000000234 .LBB355
     /tmp/cckmNpMU.s:888    .text:0000000000000274 .LBE355
     /tmp/cckmNpMU.s:6510   .debug_loc:0000000000000435 .LLST75
     /tmp/cckmNpMU.s:6517   .debug_loc:0000000000000458 .LLST76
     /tmp/cckmNpMU.s:6524   .debug_loc:000000000000047b .LLST77
     /tmp/cckmNpMU.s:794    .text:0000000000000234 .LBB356
     /tmp/cckmNpMU.s:810    .text:0000000000000240 .LBE356
     /tmp/cckmNpMU.s:815    .text:0000000000000244 .LBB358
     /tmp/cckmNpMU.s:831    .text:0000000000000250 .LBE358
     /tmp/cckmNpMU.s:860    .text:0000000000000268 .LBB360
     /tmp/cckmNpMU.s:871    .text:000000000000026c .LBE360
     /tmp/cckmNpMU.s:6531   .debug_loc:000000000000049e .LLST78
     /tmp/cckmNpMU.s:873    .text:000000000000026c .LBB362
     /tmp/cckmNpMU.s:887    .text:0000000000000274 .LBE362
     /tmp/cckmNpMU.s:6538   .debug_loc:00000000000004c1 .LLST79
     /tmp/cckmNpMU.s:850    .text:0000000000000264 .LVL43
     /tmp/cckmNpMU.s:890    .text:0000000000000274 .LBB336
     /tmp/cckmNpMU.s:984    .text:00000000000002b0 .LBE336
     /tmp/cckmNpMU.s:6545   .debug_loc:00000000000004e4 .LLST70
     /tmp/cckmNpMU.s:6552   .debug_loc:0000000000000507 .LLST71
GAS LISTING /tmp/cckmNpMU.s 			page 69


     /tmp/cckmNpMU.s:6559   .debug_loc:000000000000052a .LLST72
     /tmp/cckmNpMU.s:892    .text:0000000000000274 .LBB337
     /tmp/cckmNpMU.s:908    .text:0000000000000280 .LBE337
     /tmp/cckmNpMU.s:913    .text:0000000000000284 .LBB339
     /tmp/cckmNpMU.s:929    .text:0000000000000290 .LBE339
     /tmp/cckmNpMU.s:956    .text:00000000000002a4 .LBB341
     /tmp/cckmNpMU.s:967    .text:00000000000002a8 .LBE341
     /tmp/cckmNpMU.s:6566   .debug_loc:000000000000054d .LLST73
     /tmp/cckmNpMU.s:969    .text:00000000000002a8 .LBB343
     /tmp/cckmNpMU.s:983    .text:00000000000002b0 .LBE343
     /tmp/cckmNpMU.s:6573   .debug_loc:0000000000000570 .LLST74
     /tmp/cckmNpMU.s:946    .text:00000000000002a0 .LVL51
     /tmp/cckmNpMU.s:986    .text:00000000000002b0 .LBB318
     /tmp/cckmNpMU.s:1066   .text:00000000000002f4 .LBE318
     /tmp/cckmNpMU.s:6580   .debug_loc:0000000000000593 .LLST66
     /tmp/cckmNpMU.s:6587   .debug_loc:00000000000005b6 .LLST67
     /tmp/cckmNpMU.s:988    .text:00000000000002b0 .LBB319
     /tmp/cckmNpMU.s:1004   .text:00000000000002bc .LBE319
     /tmp/cckmNpMU.s:1009   .text:00000000000002c0 .LBB321
     /tmp/cckmNpMU.s:1025   .text:00000000000002cc .LBE321
     /tmp/cckmNpMU.s:1038   .text:00000000000002e8 .LBB323
     /tmp/cckmNpMU.s:1049   .text:00000000000002ec .LBE323
     /tmp/cckmNpMU.s:6594   .debug_loc:00000000000005d9 .LLST68
     /tmp/cckmNpMU.s:1051   .text:00000000000002ec .LBB325
     /tmp/cckmNpMU.s:1065   .text:00000000000002f4 .LBE325
     /tmp/cckmNpMU.s:6601   .debug_loc:00000000000005fc .LLST69
     /tmp/cckmNpMU.s:1036   .text:00000000000002e8 .LVL58
     /tmp/cckmNpMU.s:1068   .text:00000000000002f4 .LBB301
     /tmp/cckmNpMU.s:1141   .text:0000000000000324 .LBE301
     /tmp/cckmNpMU.s:6608   .debug_loc:000000000000061f .LLST62
     /tmp/cckmNpMU.s:6615   .debug_loc:0000000000000642 .LLST63
     /tmp/cckmNpMU.s:1070   .text:00000000000002f4 .LBB302
     /tmp/cckmNpMU.s:1086   .text:0000000000000300 .LBE302
     /tmp/cckmNpMU.s:1091   .text:0000000000000304 .LBB304
     /tmp/cckmNpMU.s:1107   .text:0000000000000310 .LBE304
     /tmp/cckmNpMU.s:1113   .text:0000000000000318 .LBB306
     /tmp/cckmNpMU.s:1124   .text:000000000000031c .LBE306
     /tmp/cckmNpMU.s:6622   .debug_loc:0000000000000665 .LLST64
     /tmp/cckmNpMU.s:1126   .text:000000000000031c .LBB308
     /tmp/cckmNpMU.s:1140   .text:0000000000000324 .LBE308
     /tmp/cckmNpMU.s:6629   .debug_loc:0000000000000688 .LLST65
     /tmp/cckmNpMU.s:1111   .text:0000000000000318 .LVL64
     /tmp/cckmNpMU.s:1143   .text:0000000000000324 .LBB285
     /tmp/cckmNpMU.s:1220   .text:0000000000000360 .LBE285
     /tmp/cckmNpMU.s:6636   .debug_loc:00000000000006ab .LLST58
     /tmp/cckmNpMU.s:6643   .debug_loc:00000000000006ce .LLST59
     /tmp/cckmNpMU.s:1145   .text:0000000000000324 .LBB286
     /tmp/cckmNpMU.s:1161   .text:0000000000000330 .LBE286
     /tmp/cckmNpMU.s:1166   .text:0000000000000334 .LBB288
     /tmp/cckmNpMU.s:1182   .text:0000000000000340 .LBE288
     /tmp/cckmNpMU.s:1192   .text:0000000000000354 .LBB290
     /tmp/cckmNpMU.s:1203   .text:0000000000000358 .LBE290
     /tmp/cckmNpMU.s:6650   .debug_loc:00000000000006f1 .LLST60
     /tmp/cckmNpMU.s:1205   .text:0000000000000358 .LBB292
     /tmp/cckmNpMU.s:1219   .text:0000000000000360 .LBE292
     /tmp/cckmNpMU.s:6657   .debug_loc:0000000000000714 .LLST61
     /tmp/cckmNpMU.s:1190   .text:0000000000000354 .LVL70
GAS LISTING /tmp/cckmNpMU.s 			page 70


     /tmp/cckmNpMU.s:1222   .text:0000000000000360 .LBB266
     /tmp/cckmNpMU.s:1367   .text:00000000000003d0 .LBE266
     /tmp/cckmNpMU.s:6664   .debug_loc:0000000000000737 .LLST47
     /tmp/cckmNpMU.s:6671   .debug_loc:000000000000075a .LLST48
     /tmp/cckmNpMU.s:6678   .debug_loc:000000000000077d .LLST49
     /tmp/cckmNpMU.s:6685   .debug_loc:00000000000007a0 .LLST50
     /tmp/cckmNpMU.s:6692   .debug_loc:00000000000007c3 .LLST51
     /tmp/cckmNpMU.s:6699   .debug_loc:00000000000007e6 .LLST52
     /tmp/cckmNpMU.s:1224   .text:0000000000000360 .LBB267
     /tmp/cckmNpMU.s:1240   .text:000000000000036c .LBE267
     /tmp/cckmNpMU.s:1245   .text:0000000000000370 .LBB269
     /tmp/cckmNpMU.s:1261   .text:000000000000037c .LBE269
     /tmp/cckmNpMU.s:1293   .text:0000000000000398 .LBB271
     /tmp/cckmNpMU.s:1309   .text:00000000000003a4 .LBE271
     /tmp/cckmNpMU.s:6716   .debug_loc:0000000000000831 .LLST53
     /tmp/cckmNpMU.s:6723   .debug_loc:0000000000000854 .LLST54
     /tmp/cckmNpMU.s:1299   .text:000000000000039c .LBB273
     /tmp/cckmNpMU.s:1307   .text:00000000000003a4 .LBE273
     /tmp/cckmNpMU.s:6730   .debug_loc:0000000000000877 .LLST55
     /tmp/cckmNpMU.s:1334   .text:00000000000003bc .LBB275
     /tmp/cckmNpMU.s:1345   .text:00000000000003c0 .LBE275
     /tmp/cckmNpMU.s:6739   .debug_loc:000000000000089c .LLST56
     /tmp/cckmNpMU.s:1347   .text:00000000000003c0 .LBB277
     /tmp/cckmNpMU.s:1361   .text:00000000000003c8 .LBE277
     /tmp/cckmNpMU.s:6746   .debug_loc:00000000000008bf .LLST57
     /tmp/cckmNpMU.s:1292   .text:0000000000000398 .LVL78
     /tmp/cckmNpMU.s:1369   .text:00000000000003d0 .LBB242
     /tmp/cckmNpMU.s:1535   .text:0000000000000468 .LBE242
     /tmp/cckmNpMU.s:6753   .debug_loc:00000000000008e2 .LLST35
     /tmp/cckmNpMU.s:6760   .debug_loc:0000000000000905 .LLST36
     /tmp/cckmNpMU.s:6767   .debug_loc:0000000000000928 .LLST37
     /tmp/cckmNpMU.s:7001   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cckmNpMU.s:6774   .debug_loc:000000000000094b .LLST39
     /tmp/cckmNpMU.s:1427   .text:00000000000003f8 .LBB248
     /tmp/cckmNpMU.s:6781   .debug_loc:000000000000096e .LLST40
     /tmp/cckmNpMU.s:6796   .debug_loc:00000000000009a8 .LLST41
     /tmp/cckmNpMU.s:6807   .debug_loc:00000000000009de .LLST42
     /tmp/cckmNpMU.s:1434   .text:0000000000000404 .LVL92
     /tmp/cckmNpMU.s:1438   .text:0000000000000404 .LBB251
     /tmp/cckmNpMU.s:1447   .text:000000000000040c .LBE251
     /tmp/cckmNpMU.s:6814   .debug_loc:0000000000000a01 .LLST43
     /tmp/cckmNpMU.s:1458   .text:0000000000000424 .LVL94
     /tmp/cckmNpMU.s:1371   .text:00000000000003d0 .LBB243
     /tmp/cckmNpMU.s:1386   .text:00000000000003dc .LBE243
     /tmp/cckmNpMU.s:1391   .text:00000000000003e0 .LBB245
     /tmp/cckmNpMU.s:1407   .text:00000000000003ec .LBE245
     /tmp/cckmNpMU.s:1463   .text:0000000000000424 .LBB254
     /tmp/cckmNpMU.s:1473   .text:0000000000000430 .LBE254
     /tmp/cckmNpMU.s:6821   .debug_loc:0000000000000a24 .LLST44
     /tmp/cckmNpMU.s:1507   .text:000000000000045c .LBB257
     /tmp/cckmNpMU.s:1518   .text:0000000000000460 .LBE257
     /tmp/cckmNpMU.s:6830   .debug_loc:0000000000000a49 .LLST45
     /tmp/cckmNpMU.s:1520   .text:0000000000000460 .LBB259
     /tmp/cckmNpMU.s:1534   .text:0000000000000468 .LBE259
     /tmp/cckmNpMU.s:6837   .debug_loc:0000000000000a6c .LLST46
     /tmp/cckmNpMU.s:1504   .text:000000000000045c .LVL98
     /tmp/cckmNpMU.s:1537   .text:0000000000000468 .LBB229
GAS LISTING /tmp/cckmNpMU.s 			page 71


     /tmp/cckmNpMU.s:1633   .text:00000000000004a4 .LBE229
     /tmp/cckmNpMU.s:6844   .debug_loc:0000000000000a8f .LLST29
     /tmp/cckmNpMU.s:6851   .debug_loc:0000000000000ab2 .LLST30
     /tmp/cckmNpMU.s:6858   .debug_loc:0000000000000ad5 .LLST31
     /tmp/cckmNpMU.s:6865   .debug_loc:0000000000000af8 .LLST32
     /tmp/cckmNpMU.s:1539   .text:0000000000000468 .LBB230
     /tmp/cckmNpMU.s:1555   .text:0000000000000474 .LBE230
     /tmp/cckmNpMU.s:1560   .text:0000000000000478 .LBB232
     /tmp/cckmNpMU.s:1576   .text:0000000000000484 .LBE232
     /tmp/cckmNpMU.s:1605   .text:0000000000000498 .LBB234
     /tmp/cckmNpMU.s:1616   .text:000000000000049c .LBE234
     /tmp/cckmNpMU.s:6872   .debug_loc:0000000000000b1b .LLST33
     /tmp/cckmNpMU.s:1618   .text:000000000000049c .LBB236
     /tmp/cckmNpMU.s:1632   .text:00000000000004a4 .LBE236
     /tmp/cckmNpMU.s:6879   .debug_loc:0000000000000b3e .LLST34
     /tmp/cckmNpMU.s:1595   .text:0000000000000494 .LVL105
     /tmp/cckmNpMU.s:1635   .text:00000000000004a4 .LBB217
     /tmp/cckmNpMU.s:1733   .text:00000000000004e4 .LBE217
     /tmp/cckmNpMU.s:6886   .debug_loc:0000000000000b61 .LLST23
     /tmp/cckmNpMU.s:6893   .debug_loc:0000000000000b84 .LLST24
     /tmp/cckmNpMU.s:6900   .debug_loc:0000000000000ba7 .LLST25
     /tmp/cckmNpMU.s:6907   .debug_loc:0000000000000bca .LLST26
     /tmp/cckmNpMU.s:1637   .text:00000000000004a4 .LBB218
     /tmp/cckmNpMU.s:1653   .text:00000000000004b0 .LBE218
     /tmp/cckmNpMU.s:1658   .text:00000000000004b4 .LBB220
     /tmp/cckmNpMU.s:1674   .text:00000000000004c0 .LBE220
     /tmp/cckmNpMU.s:1705   .text:00000000000004d8 .LBB222
     /tmp/cckmNpMU.s:1716   .text:00000000000004dc .LBE222
     /tmp/cckmNpMU.s:6915   .debug_loc:0000000000000bee .LLST27
     /tmp/cckmNpMU.s:1718   .text:00000000000004dc .LBB224
     /tmp/cckmNpMU.s:1732   .text:00000000000004e4 .LBE224
     /tmp/cckmNpMU.s:6922   .debug_loc:0000000000000c11 .LLST28
     /tmp/cckmNpMU.s:1693   .text:00000000000004d0 .LVL113
     /tmp/cckmNpMU.s:1735   .text:00000000000004e4 .LBB207
     /tmp/cckmNpMU.s:1828   .text:0000000000000530 .LBE207
     /tmp/cckmNpMU.s:1737   .text:00000000000004e4 .LBB208
     /tmp/cckmNpMU.s:1753   .text:00000000000004f0 .LBE208
     /tmp/cckmNpMU.s:1758   .text:00000000000004f4 .LBB210
     /tmp/cckmNpMU.s:1774   .text:0000000000000500 .LBE210
     /tmp/cckmNpMU.s:1802   .text:0000000000000524 .LBB212
     /tmp/cckmNpMU.s:1813   .text:0000000000000528 .LBE212
     /tmp/cckmNpMU.s:6929   .debug_loc:0000000000000c34 .LLST22
     /tmp/cckmNpMU.s:1815   .text:0000000000000528 .LBB214
     /tmp/cckmNpMU.s:1827   .text:0000000000000530 .LBE214
     /tmp/cckmNpMU.s:1786   .text:0000000000000514 .LVL120
     /tmp/cckmNpMU.s:512    .text:000000000000015c .LBB198
     /tmp/cckmNpMU.s:614    .text:00000000000001ac .LBE198
     /tmp/cckmNpMU.s:6936   .debug_loc:0000000000000c57 .LLST17
     /tmp/cckmNpMU.s:6943   .debug_loc:0000000000000c7a .LLST18
     /tmp/cckmNpMU.s:6950   .debug_loc:0000000000000c9d .LLST19
     /tmp/cckmNpMU.s:514    .text:000000000000015c .LBB199
     /tmp/cckmNpMU.s:530    .text:0000000000000168 .LBE199
     /tmp/cckmNpMU.s:535    .text:000000000000016c .LBB201
     /tmp/cckmNpMU.s:551    .text:0000000000000178 .LBE201
     /tmp/cckmNpMU.s:589    .text:00000000000001a4 .LBB203
     /tmp/cckmNpMU.s:600    .text:00000000000001a8 .LBE203
     /tmp/cckmNpMU.s:6957   .debug_loc:0000000000000cc0 .LLST20
GAS LISTING /tmp/cckmNpMU.s 			page 72


     /tmp/cckmNpMU.s:602    .text:00000000000001a8 .LBB205
     /tmp/cckmNpMU.s:613    .text:00000000000001ac .LBE205
     /tmp/cckmNpMU.s:6964   .debug_loc:0000000000000ce3 .LLST21
     /tmp/cckmNpMU.s:578    .text:0000000000000198 .LVL17
     /tmp/cckmNpMU.s:88     .text:0000000000000050 .LBB164
     /tmp/cckmNpMU.s:104    .text:000000000000005c .LBE164
     /tmp/cckmNpMU.s:193    .text:00000000000000b0 .LBB404
     /tmp/cckmNpMU.s:206    .text:00000000000000b8 .LBE404
     /tmp/cckmNpMU.s:6971   .debug_loc:0000000000000d06 .LLST80
     /tmp/cckmNpMU.s:640    .text:00000000000001b8 .LVL22
     /tmp/cckmNpMU.s:10     .text:0000000000000000 .LFB52
     /tmp/cckmNpMU.s:58     .text:0000000000000028 .LFE52
     /tmp/cckmNpMU.s:29     .text:0000000000000010 .LBB162
     /tmp/cckmNpMU.s:42     .text:0000000000000018 .LBE162
     /tmp/cckmNpMU.s:6979   .debug_loc:0000000000000d2a .LLST0
     /tmp/cckmNpMU.s:7045   .debug_str:00000000000000a6 .LASF214
     /tmp/cckmNpMU.s:7269   .debug_str:0000000000000853 .LASF213
     /tmp/cckmNpMU.s:7409   .debug_str:0000000000000d14 .LASF215
     /tmp/cckmNpMU.s:7131   .debug_str:000000000000036f .LASF216
     /tmp/cckmNpMU.s:7153   .debug_str:000000000000042d .LASF217
     /tmp/cckmNpMU.s:7221   .debug_str:00000000000006aa .LASF218
     /tmp/cckmNpMU.s:1876   .text:000000000000054c .LVL123
     /tmp/cckmNpMU.s:1889   .text:000000000000056c .LVL124
     /tmp/cckmNpMU.s:1901   .text:000000000000057c .LVL125
     /tmp/cckmNpMU.s:1921   .text:0000000000000590 .LVL127
     /tmp/cckmNpMU.s:1935   .text:0000000000000598 .LVL128
     /tmp/cckmNpMU.s:102    .text:000000000000005c .LVL2
     /tmp/cckmNpMU.s:154    .text:000000000000008c .LVL5
     /tmp/cckmNpMU.s:186    .text:00000000000000b0 .LVL8
     /tmp/cckmNpMU.s:202    .text:00000000000000b8 .LVL9
     /tmp/cckmNpMU.s:230    .text:00000000000000e0 .LVL10
     /tmp/cckmNpMU.s:251    .text:00000000000000f4 .LVL11
     /tmp/cckmNpMU.s:267    .text:0000000000000104 .LVL12
     /tmp/cckmNpMU.s:632    .text:00000000000001b0 .LVL21
     /tmp/cckmNpMU.s:642    .text:00000000000001bc .LVL23
     /tmp/cckmNpMU.s:113    .text:0000000000000060 .LVL3
     /tmp/cckmNpMU.s:528    .text:0000000000000168 .LVL13
     /tmp/cckmNpMU.s:808    .text:0000000000000240 .LVL38
     /tmp/cckmNpMU.s:884    .text:0000000000000274 .LVL46
     /tmp/cckmNpMU.s:906    .text:0000000000000280 .LVL47
     /tmp/cckmNpMU.s:980    .text:00000000000002b0 .LVL54
     /tmp/cckmNpMU.s:1002   .text:00000000000002bc .LVL55
     /tmp/cckmNpMU.s:1062   .text:00000000000002f4 .LVL60
     /tmp/cckmNpMU.s:1084   .text:0000000000000300 .LVL61
     /tmp/cckmNpMU.s:1137   .text:0000000000000324 .LVL66
     /tmp/cckmNpMU.s:1159   .text:0000000000000330 .LVL67
     /tmp/cckmNpMU.s:1216   .text:0000000000000360 .LVL72
     /tmp/cckmNpMU.s:1238   .text:000000000000036c .LVL73
     /tmp/cckmNpMU.s:1365   .text:00000000000003d0 .LVL86
     /tmp/cckmNpMU.s:1420   .text:00000000000003f4 .LVL89
     /tmp/cckmNpMU.s:1531   .text:0000000000000468 .LVL100
     /tmp/cckmNpMU.s:1553   .text:0000000000000474 .LVL101
     /tmp/cckmNpMU.s:1629   .text:00000000000004a4 .LVL108
     /tmp/cckmNpMU.s:1651   .text:00000000000004b0 .LVL109
     /tmp/cckmNpMU.s:1729   .text:00000000000004e4 .LVL116
     /tmp/cckmNpMU.s:1751   .text:00000000000004f0 .LVL117
     /tmp/cckmNpMU.s:843    .text:0000000000000258 .LVL41
GAS LISTING /tmp/cckmNpMU.s 			page 73


     /tmp/cckmNpMU.s:848    .text:000000000000025c .LVL42
     /tmp/cckmNpMU.s:941    .text:0000000000000298 .LVL50
     /tmp/cckmNpMU.s:145    .text:0000000000000088 .LVL4
     /tmp/cckmNpMU.s:174    .text:00000000000000a8 .LVL7
     /tmp/cckmNpMU.s:159    .text:0000000000000090 .LVL6
     /tmp/cckmNpMU.s:666    .text:00000000000001cc .LVL24
     /tmp/cckmNpMU.s:787    .text:0000000000000234 .LVL37
     /tmp/cckmNpMU.s:682    .text:00000000000001d8 .LVL25
     /tmp/cckmNpMU.s:709    .text:00000000000001e8 .LVL26
     /tmp/cckmNpMU.s:715    .text:00000000000001ec .LVL27
     /tmp/cckmNpMU.s:721    .text:00000000000001f0 .LVL28
     /tmp/cckmNpMU.s:729    .text:0000000000000200 .LVL30
     /tmp/cckmNpMU.s:734    .text:0000000000000208 .LVL31
     /tmp/cckmNpMU.s:746    .text:000000000000021c .LVL33
     /tmp/cckmNpMU.s:780    .text:000000000000022c .LVL36
     /tmp/cckmNpMU.s:754    .text:0000000000000220 .LVL34
     /tmp/cckmNpMU.s:764    .text:0000000000000224 .LVL35
     /tmp/cckmNpMU.s:813    .text:0000000000000244 .LVL39
     /tmp/cckmNpMU.s:829    .text:0000000000000250 .LVL40
     /tmp/cckmNpMU.s:858    .text:0000000000000268 .LVL44
     /tmp/cckmNpMU.s:868    .text:000000000000026c .LVL45
     /tmp/cckmNpMU.s:911    .text:0000000000000284 .LVL48
     /tmp/cckmNpMU.s:927    .text:0000000000000290 .LVL49
     /tmp/cckmNpMU.s:954    .text:00000000000002a4 .LVL52
     /tmp/cckmNpMU.s:964    .text:00000000000002a8 .LVL53
     /tmp/cckmNpMU.s:1007   .text:00000000000002c0 .LVL56
     /tmp/cckmNpMU.s:1023   .text:00000000000002cc .LVL57
     /tmp/cckmNpMU.s:1046   .text:00000000000002ec .LVL59
     /tmp/cckmNpMU.s:1089   .text:0000000000000304 .LVL62
     /tmp/cckmNpMU.s:1105   .text:0000000000000310 .LVL63
     /tmp/cckmNpMU.s:1121   .text:000000000000031c .LVL65
     /tmp/cckmNpMU.s:1164   .text:0000000000000334 .LVL68
     /tmp/cckmNpMU.s:1180   .text:0000000000000340 .LVL69
     /tmp/cckmNpMU.s:1200   .text:0000000000000358 .LVL71
     /tmp/cckmNpMU.s:1243   .text:0000000000000370 .LVL74
     /tmp/cckmNpMU.s:1259   .text:000000000000037c .LVL75
     /tmp/cckmNpMU.s:1280   .text:0000000000000388 .LVL76
     /tmp/cckmNpMU.s:1286   .text:000000000000038c .LVL77
     /tmp/cckmNpMU.s:1305   .text:00000000000003a4 .LVL80
     /tmp/cckmNpMU.s:1318   .text:00000000000003b0 .LVL81
     /tmp/cckmNpMU.s:1324   .text:00000000000003b8 .LVL82
     /tmp/cckmNpMU.s:1358   .text:00000000000003c8 .LVL85
     /tmp/cckmNpMU.s:1298   .text:000000000000039c .LVL79
     /tmp/cckmNpMU.s:1332   .text:00000000000003bc .LVL83
     /tmp/cckmNpMU.s:1342   .text:00000000000003c0 .LVL84
     /tmp/cckmNpMU.s:1389   .text:00000000000003e0 .LVL87
     /tmp/cckmNpMU.s:1405   .text:00000000000003ec .LVL88
     /tmp/cckmNpMU.s:1424   .text:00000000000003f8 .LVL90
     /tmp/cckmNpMU.s:1478   .text:0000000000000434 .LVL96
     /tmp/cckmNpMU.s:1490   .text:0000000000000448 .LVL97
     /tmp/cckmNpMU.s:1431   .text:00000000000003fc .LVL91
     /tmp/cckmNpMU.s:1445   .text:000000000000040c .LVL93
     /tmp/cckmNpMU.s:1471   .text:0000000000000430 .LVL95
     /tmp/cckmNpMU.s:1515   .text:0000000000000460 .LVL99
     /tmp/cckmNpMU.s:1558   .text:0000000000000478 .LVL102
     /tmp/cckmNpMU.s:1574   .text:0000000000000484 .LVL103
     /tmp/cckmNpMU.s:1589   .text:000000000000048c .LVL104
GAS LISTING /tmp/cckmNpMU.s 			page 74


     /tmp/cckmNpMU.s:1603   .text:0000000000000498 .LVL106
     /tmp/cckmNpMU.s:1613   .text:000000000000049c .LVL107
     /tmp/cckmNpMU.s:1656   .text:00000000000004b4 .LVL110
     /tmp/cckmNpMU.s:1672   .text:00000000000004c0 .LVL111
     /tmp/cckmNpMU.s:1687   .text:00000000000004c8 .LVL112
     /tmp/cckmNpMU.s:1703   .text:00000000000004d8 .LVL114
     /tmp/cckmNpMU.s:1713   .text:00000000000004dc .LVL115
     /tmp/cckmNpMU.s:1800   .text:0000000000000524 .LVL121
     /tmp/cckmNpMU.s:1810   .text:0000000000000528 .LVL122
     /tmp/cckmNpMU.s:533    .text:000000000000016c .LVL14
     /tmp/cckmNpMU.s:549    .text:0000000000000178 .LVL15
     /tmp/cckmNpMU.s:566    .text:0000000000000184 .LVL16
     /tmp/cckmNpMU.s:587    .text:00000000000001a4 .LVL18
     /tmp/cckmNpMU.s:597    .text:00000000000001a8 .LVL19
     /tmp/cckmNpMU.s:610    .text:00000000000001ac .LVL20
     /tmp/cckmNpMU.s:27     .text:0000000000000010 .LVL0
     /tmp/cckmNpMU.s:39     .text:0000000000000018 .LVL1
     /tmp/cckmNpMU.s:1964   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cckmNpMU.s:1426   .text:00000000000003f8 .LBB247
     /tmp/cckmNpMU.s:1460   .text:0000000000000424 .LBE247
     /tmp/cckmNpMU.s:1476   .text:0000000000000434 .LBB256
     /tmp/cckmNpMU.s:1494   .text:0000000000000448 .LBE256
     /tmp/cckmNpMU.s:1436   .text:0000000000000404 .LBE248
     /tmp/cckmNpMU.s:1479   .text:0000000000000434 .LBB253
     /tmp/cckmNpMU.s:1493   .text:0000000000000448 .LBE253

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN15MemoryAllocator10kmem_allocEm
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
