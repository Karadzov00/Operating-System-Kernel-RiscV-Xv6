GAS LISTING /tmp/ccPN1Qew.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** 
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  13:src/Riscv.cpp **** {
  12              		.loc 1 13 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  14:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 14 5
  21              		.loc 1 14 39 is_stmt 0
  22              	#APP
  23              	# 14 "src/Riscv.cpp" 1
  15              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 15 5 is_stmt 1
  27              		.loc 1 15 30 is_stmt 0
  28              	# 15 "src/Riscv.cpp" 1
  16              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 16 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
GAS LISTING /tmp/ccPN1Qew.s 			page 2


  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB43:
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 18 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F6 		addi	sp,sp,-160
  50              		.cfi_def_cfa_offset 160
  51 0024 233C1108 		sd	ra,152(sp)
  52 0028 23388108 		sd	s0,144(sp)
  53 002c 23349108 		sd	s1,136(sp)
  54 0030 23302109 		sd	s2,128(sp)
  55 0034 233C3107 		sd	s3,120(sp)
  56 0038 23384107 		sd	s4,112(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 1304010A 		addi	s0,sp,160
  64              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 19 5
  66              	.LBB65:
  67              	.LBB66:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
GAS LISTING /tmp/ccPN1Qew.s 			page 3


  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccPN1Qew.s 			page 4


  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 95 5
  71              		.loc 2 95 72 is_stmt 0
  72              	#APP
  73              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F6 		sd	a5,-152(s0)
  78              		.loc 2 96 5 is_stmt 1
  79              		.loc 2 96 12 is_stmt 0
  80 0048 833784F6 		ld	a5,-152(s0)
  81              	.LBE66:
  82              	.LBE65:
  83              		.loc 1 19 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  20:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 20 5 is_stmt 1
  21:src/Riscv.cpp **** //    uint64 arg0;
  22:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 22 5
  23:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 23 5
  89              		.loc 1 23 49 is_stmt 0
  90              	#APP
  91              	# 23 "src/Riscv.cpp" 1
  24              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  25:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  95              		.loc 1 25 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB67:
  98              		.loc 1 25 40 is_stmt 0
  99 0054 9B8787FF 		addiw	a5,a5,-8
 100              	.LVL2:
 101              		.loc 1 25 5
 102 0058 13071000 		li	a4,1
 103 005c 6372F702 		bleu	a5,a4,.L13
 104              	.LVL3:
 105              	.L3:
 106              	.LBE67:
  26:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  27:src/Riscv.cpp **** 
  28:src/Riscv.cpp ****         //call from yield
  29:src/Riscv.cpp ****         if(a0reg==0x04){
GAS LISTING /tmp/ccPN1Qew.s 			page 5


  30:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  31:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  32:src/Riscv.cpp **** 
  33:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
  34:src/Riscv.cpp ****             _thread::dispatch();
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp ****             w_sstatus(sstatus);
  37:src/Riscv.cpp ****             w_sepc(sepc);
  38:src/Riscv.cpp ****         }
  39:src/Riscv.cpp ****         else if(a0reg==0x11){
  40:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  41:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp ****             _thread::thread_t *arg1;
  45:src/Riscv.cpp ****             _thread::Body arg2;
  46:src/Riscv.cpp ****             uint64 arg3;
  47:src/Riscv.cpp ****             uint64 *arg4;
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  50:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  51:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  52:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  53:src/Riscv.cpp **** 
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  56:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  57:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  58:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  61:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  62:src/Riscv.cpp ****             *arg1=t;
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             uint64 ret;
  65:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  66:src/Riscv.cpp ****             else ret =-1;
  67:src/Riscv.cpp **** 
  68:src/Riscv.cpp **** 
  69:src/Riscv.cpp ****             //return _thread* adress through a0
  70:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             w_sstatus(sstatus);
  73:src/Riscv.cpp ****             w_sepc(sepc);
  74:src/Riscv.cpp ****         }
  75:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  76:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  77:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  78:src/Riscv.cpp ****             //kmem_alloc
  79:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  80:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****             //write return value to a0 register
  83:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****             w_sstatus(sstatus);
  86:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/ccPN1Qew.s 			page 6


  87:src/Riscv.cpp ****         }
  88:src/Riscv.cpp ****         else if(a0reg==0x02){
  89:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  90:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  93:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  94:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****             w_sstatus(sstatus);
  97:src/Riscv.cpp ****             w_sepc(sepc);
  98:src/Riscv.cpp ****         }
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****         else if(a0reg==0x12){
 101:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 102:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****             _thread::running->finished=true;
 105:src/Riscv.cpp ****             _thread::yield();
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             w_sstatus(sstatus);
 108:src/Riscv.cpp ****             w_sepc(sepc);
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****         }
 112:src/Riscv.cpp ****         else if(a0reg == 0x13){
 113:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 114:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 117:src/Riscv.cpp ****             _thread::yield();
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             w_sstatus(sstatus);
 120:src/Riscv.cpp ****             w_sepc(sepc);
 121:src/Riscv.cpp ****         }
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp **** 
 125:src/Riscv.cpp ****     }
 126:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 127:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****     }
 130:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 131:src/Riscv.cpp ****     {
 132:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****     }
 135:src/Riscv.cpp ****     else{
 136:src/Riscv.cpp ****         // unexpected trap cause
 137:src/Riscv.cpp ****         //print(scause)
 138:src/Riscv.cpp ****         //print(sepc)
 139:src/Riscv.cpp ****         //print(stval) //trap value
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****     }
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp **** }
GAS LISTING /tmp/ccPN1Qew.s 			page 7


 107              		.loc 1 143 1
 108 0060 83308109 		ld	ra,152(sp)
 109              		.cfi_remember_state
 110              		.cfi_restore 1
 111 0064 03340109 		ld	s0,144(sp)
 112              		.cfi_restore 8
 113              		.cfi_def_cfa 2, 160
 114 0068 83348108 		ld	s1,136(sp)
 115              		.cfi_restore 9
 116 006c 03390108 		ld	s2,128(sp)
 117              		.cfi_restore 18
 118 0070 83398107 		ld	s3,120(sp)
 119              		.cfi_restore 19
 120 0074 033A0107 		ld	s4,112(sp)
 121              		.cfi_restore 20
 122 0078 1301010A 		addi	sp,sp,160
 123              		.cfi_def_cfa_offset 0
 124 007c 67800000 		jr	ra
 125              	.LVL4:
 126              	.L13:
 127              		.cfi_restore_state
  29:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128              		.loc 1 29 9 is_stmt 1
 129              	.LBB140:
 130              	.LBB68:
 131 0080 93074000 		li	a5,4
 132 0084 6384F406 		beq	s1,a5,.L14
 133              	.LBE68:
 134              	.LBE140:
  39:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 135              		.loc 1 39 14
 136              	.LBB141:
 137              	.LBB89:
 138              	.LBB69:
 139 0088 93071001 		li	a5,17
 140 008c 638EF408 		beq	s1,a5,.L15
 141              	.L6:
 142              	.LBE69:
 143              	.LBE89:
 144              	.LBE141:
  75:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 145              		.loc 1 75 9
 146              	.LBB142:
 147              	.LBB90:
 148 0090 93071000 		li	a5,1
 149 0094 638EF40E 		beq	s1,a5,.L16
 150              	.LBE90:
 151              	.LBE142:
  88:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 152              		.loc 1 88 14
 153              	.LBB143:
 154              	.LBB135:
 155              	.LBB91:
 156 0098 93072000 		li	a5,2
 157 009c 6388F412 		beq	s1,a5,.L17
 158              	.LBE91:
 159              	.LBE135:
GAS LISTING /tmp/ccPN1Qew.s 			page 8


 160              	.LBE143:
 100:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 161              		.loc 1 100 14
 162              	.LBB144:
 163              	.LBB136:
 164              	.LBB123:
 165              	.LBB92:
 166 00a0 93072001 		li	a5,18
 167 00a4 6380F416 		beq	s1,a5,.L18
 168              	.LBE92:
 169              	.LBE123:
 170              	.LBE136:
 171              	.LBE144:
 112:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 172              		.loc 1 112 14
 173              	.LBB145:
 174              	.LBB137:
 175              	.LBB124:
 176              	.LBB112:
 177              	.LBB93:
 178 00a8 93073001 		li	a5,19
 179 00ac E39AF4FA 		bne	s1,a5,.L3
 180              	.LBB94:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 181              		.loc 1 113 13
 182              	.LBB95:
 183              	.LBB96:
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 184              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 185              		.loc 2 107 5
 186              		.loc 2 107 64 is_stmt 0
 187              	#APP
 188              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 189              		csrr a5, sepc
 190              	# 0 "" 2
 191              	#NO_APP
 192 00b4 2334F4FC 		sd	a5,-56(s0)
 193              		.loc 2 108 5 is_stmt 1
 194              		.loc 2 108 12 is_stmt 0
 195 00b8 833484FC 		ld	s1,-56(s0)
 196              	.LVL5:
 197              	.LBE96:
 198              	.LBE95:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199              		.loc 1 113 38
 200 00bc 93844400 		addi	s1,s1,4
GAS LISTING /tmp/ccPN1Qew.s 			page 9


 201              	.LVL6:
 114:src/Riscv.cpp **** 
 202              		.loc 1 114 13 is_stmt 1
 203              	.LBB97:
 204              	.LBB98:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccPN1Qew.s 			page 10


 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 205              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 206              		.loc 2 177 5
 207              		.loc 2 177 76 is_stmt 0
 208              	#APP
 209              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 210              		csrr a5, sstatus
 211              	# 0 "" 2
 212              	#NO_APP
 213 00c4 2330F4FC 		sd	a5,-64(s0)
 214              		.loc 2 178 5 is_stmt 1
 215              		.loc 2 178 12 is_stmt 0
 216 00c8 033904FC 		ld	s2,-64(s0)
 217              	.LVL7:
 218              	.LBE98:
 219              	.LBE97:
 116:src/Riscv.cpp ****             _thread::yield();
 220              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp ****             _thread::yield();
 221              		.loc 1 116 39 is_stmt 0
 222 00cc 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 222      83B70700 
 223 00d4 23B00700 		sd	zero,0(a5)
 117:src/Riscv.cpp **** 
 224              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp **** 
 225              		.loc 1 117 27 is_stmt 0
 226 00d8 97000000 		call	_ZN7_thread5yieldEv@plt
 226      E7800000 
 227              	.LVL8:
 119:src/Riscv.cpp ****             w_sepc(sepc);
 228              		.loc 1 119 13 is_stmt 1
 229              	.LBB99:
 230              	.LBB100:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 231              		.loc 2 183 5
GAS LISTING /tmp/ccPN1Qew.s 			page 11


 232              		.loc 2 183 77 is_stmt 0
 233              	#APP
 234              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 235              		csrw sstatus, s2
 236              	# 0 "" 2
 237              	.LVL9:
 238              	#NO_APP
 239              	.LBE100:
 240              	.LBE99:
 120:src/Riscv.cpp ****         }
 241              		.loc 1 120 13 is_stmt 1
 242              	.LBB101:
 243              	.LBB102:
 113:src/../h/Riscv.hpp **** }
 244              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 245              		.loc 2 113 65 is_stmt 0
 246              	#APP
 247              	# 113 "src/../h/Riscv.hpp" 1
 248              		csrw sepc, s1
 249              	# 0 "" 2
 250              	.LVL10:
 251              	#NO_APP
 252              	.LBE102:
 253              	.LBE101:
 254              	.LBE94:
 255              	.LBE93:
 256              	.LBE112:
 257              	.LBE124:
 258              	.LBE137:
 126:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 259              		.loc 1 126 10 is_stmt 1
 130:src/Riscv.cpp ****     {
 260              		.loc 1 130 10
 261              	.LBE145:
 262              		.loc 1 143 1 is_stmt 0
 263 00e8 6FF09FF7 		j	.L3
 264              	.LVL11:
 265              	.L14:
 266              	.LBB146:
 267              	.LBB138:
 268              	.LBB79:
  30:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 269              		.loc 1 30 13 is_stmt 1
 270              	.LBB80:
 271              	.LBB81:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 272              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 273              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 274              		.loc 2 107 64 is_stmt 0
 275              	#APP
 276              	# 107 "src/../h/Riscv.hpp" 1
 277              		csrr a5, sepc
 278              	# 0 "" 2
GAS LISTING /tmp/ccPN1Qew.s 			page 12


 279              	#NO_APP
 280 00f0 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/Riscv.hpp **** }
 281              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 282              		.loc 2 108 12 is_stmt 0
 283 00f4 033984F7 		ld	s2,-136(s0)
 284              	.LBE81:
 285              	.LBE80:
  30:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 286              		.loc 1 30 38
 287 00f8 13094900 		addi	s2,s2,4
 288              	.LVL12:
  31:src/Riscv.cpp **** 
 289              		.loc 1 31 13 is_stmt 1
 290              	.LBB82:
 291              	.LBB83:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 292              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 293              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 294              		.loc 2 177 76 is_stmt 0
 295              	#APP
 296              	# 177 "src/../h/Riscv.hpp" 1
 297              		csrr a5, sstatus
 298              	# 0 "" 2
 299              	#NO_APP
 300 0100 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/Riscv.hpp **** }
 301              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 302              		.loc 2 178 12 is_stmt 0
 303 0104 833904F7 		ld	s3,-144(s0)
 304              	.LVL13:
 305              	.LBE83:
 306              	.LBE82:
  33:src/Riscv.cpp ****             _thread::dispatch();
 307              		.loc 1 33 13 is_stmt 1
  33:src/Riscv.cpp ****             _thread::dispatch();
 308              		.loc 1 33 39 is_stmt 0
 309 0108 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 309      83B70700 
 310 0110 23B00700 		sd	zero,0(a5)
  34:src/Riscv.cpp **** 
 311              		.loc 1 34 13 is_stmt 1
  34:src/Riscv.cpp **** 
 312              		.loc 1 34 30 is_stmt 0
 313 0114 97000000 		call	_ZN7_thread8dispatchEv@plt
 313      E7800000 
 314              	.LVL14:
  36:src/Riscv.cpp ****             w_sepc(sepc);
 315              		.loc 1 36 13 is_stmt 1
 316              	.LBB84:
 317              	.LBB85:
 183:src/../h/Riscv.hpp **** }
 318              		.loc 2 183 5
GAS LISTING /tmp/ccPN1Qew.s 			page 13


 183:src/../h/Riscv.hpp **** }
 319              		.loc 2 183 77 is_stmt 0
 320              	#APP
 321              	# 183 "src/../h/Riscv.hpp" 1
 322              		csrw sstatus, s3
 323              	# 0 "" 2
 324              	.LVL15:
 325              	#NO_APP
 326              	.LBE85:
 327              	.LBE84:
  37:src/Riscv.cpp ****         }
 328              		.loc 1 37 13 is_stmt 1
 329              	.LBB86:
 330              	.LBB87:
 113:src/../h/Riscv.hpp **** }
 331              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 332              		.loc 2 113 65 is_stmt 0
 333              	#APP
 334              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 335              		csrw sepc, s2
 336              	# 0 "" 2
 337              		.loc 2 114 1
 338              	#NO_APP
 339 0124 6FF0DFF6 		j	.L6
 340              	.LVL16:
 341              	.L15:
 342              	.LBE87:
 343              	.LBE86:
 344              	.LBE79:
 345              	.LBB88:
 346              	.LBB70:
  40:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 347              		.loc 1 40 13 is_stmt 1
 348              	.LBB71:
 349              	.LBB72:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 350              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 351              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 352              		.loc 2 107 64 is_stmt 0
 353              	#APP
 354              	# 107 "src/../h/Riscv.hpp" 1
 355              		csrr a5, sepc
 356              	# 0 "" 2
 357              	#NO_APP
 358 012c 2334F4F8 		sd	a5,-120(s0)
 108:src/../h/Riscv.hpp **** }
 359              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 360              		.loc 2 108 12 is_stmt 0
 361 0130 033984F8 		ld	s2,-120(s0)
 362              	.LBE72:
 363              	.LBE71:
  40:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccPN1Qew.s 			page 14


 364              		.loc 1 40 38
 365 0134 13094900 		addi	s2,s2,4
 366              	.LVL17:
  41:src/Riscv.cpp **** 
 367              		.loc 1 41 13 is_stmt 1
 368              	.LBB73:
 369              	.LBB74:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 370              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 371              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 372              		.loc 2 177 76 is_stmt 0
 373              	#APP
 374              	# 177 "src/../h/Riscv.hpp" 1
 375              		csrr a5, sstatus
 376              	# 0 "" 2
 377              	#NO_APP
 378 013c 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/Riscv.hpp **** }
 379              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 380              		.loc 2 178 12 is_stmt 0
 381 0140 833904F8 		ld	s3,-128(s0)
 382              	.LVL18:
 383              	.LBE74:
 384              	.LBE73:
  44:src/Riscv.cpp ****             _thread::Body arg2;
 385              		.loc 1 44 13 is_stmt 1
  45:src/Riscv.cpp ****             uint64 arg3;
 386              		.loc 1 45 13
  46:src/Riscv.cpp ****             uint64 *arg4;
 387              		.loc 1 46 13
  47:src/Riscv.cpp **** 
 388              		.loc 1 47 13
  49:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 389              		.loc 1 49 13
  49:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 390              		.loc 1 49 48 is_stmt 0
 391              	#APP
 392              	# 49 "src/Riscv.cpp" 1
  50:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 393              		ld a1, 11*8(fp)
 394              	# 0 "" 2
 395              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 396              		.loc 1 50 48 is_stmt 0
 397              	# 50 "src/Riscv.cpp" 1
  51:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 398              		ld a2, 12*8(fp)
 399              	# 0 "" 2
 400              		.loc 1 51 13 is_stmt 1
  51:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 401              		.loc 1 51 48 is_stmt 0
 402              	# 51 "src/Riscv.cpp" 1
  52:src/Riscv.cpp **** 
 403              		ld a3, 13*8(fp)
GAS LISTING /tmp/ccPN1Qew.s 			page 15


 404              	# 0 "" 2
 405              		.loc 1 52 13 is_stmt 1
  52:src/Riscv.cpp **** 
 406              		.loc 1 52 48 is_stmt 0
 407              	# 52 "src/Riscv.cpp" 1
  55:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 408              		ld a4, 14*8(fp)
 409              	# 0 "" 2
 410              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 411              		.loc 1 55 56 is_stmt 0
 412              	# 55 "src/Riscv.cpp" 1
 413              		mv s4, a1
 414              	# 0 "" 2
 415              	.LVL19:
  56:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 416              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 417              		.loc 1 56 56 is_stmt 0
 418              	# 56 "src/Riscv.cpp" 1
 419              		mv a0, a2
 420              	# 0 "" 2
 421              	.LVL20:
  57:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 422              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 423              		.loc 1 57 56 is_stmt 0
 424              	# 57 "src/Riscv.cpp" 1
 425              		mv a1, a3
 426              	# 0 "" 2
 427              	.LVL21:
  58:src/Riscv.cpp **** 
 428              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp **** 
 429              		.loc 1 58 56 is_stmt 0
 430              	# 58 "src/Riscv.cpp" 1
 431              		mv a2, a4
 432              	# 0 "" 2
 433              	.LVL22:
  61:src/Riscv.cpp ****             *arg1=t;
 434              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             *arg1=t;
 435              		.loc 1 61 47 is_stmt 0
 436              	#NO_APP
 437 0164 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 437      E7800000 
 438              	.LVL23:
  62:src/Riscv.cpp **** 
 439              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 440              		.loc 1 62 18 is_stmt 0
 441 016c 2330AA00 		sd	a0,0(s4)
  64:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 442              		.loc 1 64 13 is_stmt 1
  65:src/Riscv.cpp ****             else ret =-1;
 443              		.loc 1 65 13
 444 0170 630C0500 		beqz	a0,.L11
GAS LISTING /tmp/ccPN1Qew.s 			page 16


  65:src/Riscv.cpp ****             else ret =-1;
 445              		.loc 1 65 31 is_stmt 0
 446 0174 93070000 		li	a5,0
 447              	.L7:
 448              	.LVL24:
  70:src/Riscv.cpp **** 
 449              		.loc 1 70 13 is_stmt 1
  70:src/Riscv.cpp **** 
 450              		.loc 1 70 56 is_stmt 0
 451              	#APP
 452              	# 70 "src/Riscv.cpp" 1
  72:src/Riscv.cpp ****             w_sepc(sepc);
 453              		mv a0, a5
 454              	# 0 "" 2
 455              		.loc 1 72 13 is_stmt 1
 456              	.LVL25:
 457              	#NO_APP
 458              	.LBB75:
 459              	.LBB76:
 183:src/../h/Riscv.hpp **** }
 460              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 461              		.loc 2 183 77 is_stmt 0
 462              	#APP
 463              	# 183 "src/../h/Riscv.hpp" 1
 464              		csrw sstatus, s3
 465              	# 0 "" 2
 466              	.LVL26:
 467              	#NO_APP
 468              	.LBE76:
 469              	.LBE75:
  73:src/Riscv.cpp ****         }
 470              		.loc 1 73 13 is_stmt 1
 471              	.LBB77:
 472              	.LBB78:
 113:src/../h/Riscv.hpp **** }
 473              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 474              		.loc 2 113 65 is_stmt 0
 475              	#APP
 476              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 477              		csrw sepc, s2
 478              	# 0 "" 2
 479              		.loc 2 114 1
 480              	#NO_APP
 481 0184 6FF0DFF0 		j	.L6
 482              	.LVL27:
 483              	.L11:
 484              	.LBE78:
 485              	.LBE77:
  66:src/Riscv.cpp **** 
 486              		.loc 1 66 22
 487 0188 9307F0FF 		li	a5,-1
 488 018c 6FF0DFFE 		j	.L7
 489              	.LVL28:
 490              	.L16:
GAS LISTING /tmp/ccPN1Qew.s 			page 17


 491              	.LBE70:
 492              	.LBE88:
 493              	.LBE138:
 494              	.LBB139:
 495              	.LBB125:
  76:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 496              		.loc 1 76 13 is_stmt 1
 497              	.LBB126:
 498              	.LBB127:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 499              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 500              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 501              		.loc 2 107 64 is_stmt 0
 502              	#APP
 503              	# 107 "src/../h/Riscv.hpp" 1
 504              		csrr a5, sepc
 505              	# 0 "" 2
 506              	#NO_APP
 507 0194 233CF4F8 		sd	a5,-104(s0)
 108:src/../h/Riscv.hpp **** }
 508              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 509              		.loc 2 108 12 is_stmt 0
 510 0198 833484F9 		ld	s1,-104(s0)
 511              	.LVL29:
 512              	.LBE127:
 513              	.LBE126:
  76:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 514              		.loc 1 76 38
 515 019c 93844400 		addi	s1,s1,4
 516              	.LVL30:
  77:src/Riscv.cpp ****             //kmem_alloc
 517              		.loc 1 77 13 is_stmt 1
 518              	.LBB128:
 519              	.LBB129:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 520              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 521              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 522              		.loc 2 177 76 is_stmt 0
 523              	#APP
 524              	# 177 "src/../h/Riscv.hpp" 1
 525              		csrr a5, sstatus
 526              	# 0 "" 2
 527              	#NO_APP
 528 01a4 2338F4F8 		sd	a5,-112(s0)
 178:src/../h/Riscv.hpp **** }
 529              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 530              		.loc 2 178 12 is_stmt 0
 531 01a8 033904F9 		ld	s2,-112(s0)
 532              	.LVL31:
 533              	.LBE129:
 534              	.LBE128:
GAS LISTING /tmp/ccPN1Qew.s 			page 18


  79:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 535              		.loc 1 79 13 is_stmt 1
  79:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 536              		.loc 1 79 56 is_stmt 0
 537              	#APP
 538              	# 79 "src/Riscv.cpp" 1
 539              		mv a0, a1
 540              	# 0 "" 2
 541              	.LVL32:
  80:src/Riscv.cpp **** 
 542              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp **** 
 543              		.loc 1 80 61 is_stmt 0
 544              	#NO_APP
 545 01b0 13156500 		slli	a0,a0,6
 546              	.LVL33:
 547 01b4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 547      E7800000 
 548              	.LVL34:
  83:src/Riscv.cpp **** 
 549              		.loc 1 83 13 is_stmt 1
  83:src/Riscv.cpp **** 
 550              		.loc 1 83 56 is_stmt 0
 551              	#APP
 552              	# 83 "src/Riscv.cpp" 1
  85:src/Riscv.cpp ****             w_sepc(sepc);
 553              		mv a0, a0
 554              	# 0 "" 2
 555              		.loc 1 85 13 is_stmt 1
 556              	.LVL35:
 557              	#NO_APP
 558              	.LBB130:
 559              	.LBB131:
 183:src/../h/Riscv.hpp **** }
 560              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 561              		.loc 2 183 77 is_stmt 0
 562              	#APP
 563              	# 183 "src/../h/Riscv.hpp" 1
 564              		csrw sstatus, s2
 565              	# 0 "" 2
 566              	.LVL36:
 567              	#NO_APP
 568              	.LBE131:
 569              	.LBE130:
  86:src/Riscv.cpp ****         }
 570              		.loc 1 86 13 is_stmt 1
 571              	.LBB132:
 572              	.LBB133:
 113:src/../h/Riscv.hpp **** }
 573              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 574              		.loc 2 113 65 is_stmt 0
 575              	#APP
 576              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 577              		csrw sepc, s1
GAS LISTING /tmp/ccPN1Qew.s 			page 19


 578              	# 0 "" 2
 579              		.loc 2 114 1
 580              	#NO_APP
 581 01c8 6FF09FE9 		j	.L3
 582              	.LVL37:
 583              	.L17:
 584              	.LBE133:
 585              	.LBE132:
 586              	.LBE125:
 587              	.LBB134:
 588              	.LBB113:
  89:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 589              		.loc 1 89 13 is_stmt 1
 590              	.LBB114:
 591              	.LBB115:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 592              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 593              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 594              		.loc 2 107 64 is_stmt 0
 595              	#APP
 596              	# 107 "src/../h/Riscv.hpp" 1
 597              		csrr a5, sepc
 598              	# 0 "" 2
 599              	#NO_APP
 600 01d0 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/Riscv.hpp **** }
 601              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 602              		.loc 2 108 12 is_stmt 0
 603 01d4 833484FA 		ld	s1,-88(s0)
 604              	.LVL38:
 605              	.LBE115:
 606              	.LBE114:
  89:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 607              		.loc 1 89 38
 608 01d8 93844400 		addi	s1,s1,4
 609              	.LVL39:
  90:src/Riscv.cpp **** 
 610              		.loc 1 90 13 is_stmt 1
 611              	.LBB116:
 612              	.LBB117:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 613              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 614              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 615              		.loc 2 177 76 is_stmt 0
 616              	#APP
 617              	# 177 "src/../h/Riscv.hpp" 1
 618              		csrr a5, sstatus
 619              	# 0 "" 2
 620              	#NO_APP
 621 01e0 2330F4FA 		sd	a5,-96(s0)
 178:src/../h/Riscv.hpp **** }
 622              		.loc 2 178 5 is_stmt 1
GAS LISTING /tmp/ccPN1Qew.s 			page 20


 178:src/../h/Riscv.hpp **** }
 623              		.loc 2 178 12 is_stmt 0
 624 01e4 033904FA 		ld	s2,-96(s0)
 625              	.LVL40:
 626              	.LBE117:
 627              	.LBE116:
  92:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 628              		.loc 1 92 13 is_stmt 1
  92:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 629              		.loc 1 92 56 is_stmt 0
 630              	#APP
 631              	# 92 "src/Riscv.cpp" 1
 632              		mv a0, a1
 633              	# 0 "" 2
 634              	.LVL41:
  93:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 635              		.loc 1 93 13 is_stmt 1
  93:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 636              		.loc 1 93 49 is_stmt 0
 637              	#NO_APP
 638 01ec 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 638      E7800000 
 639              	.LVL42:
  94:src/Riscv.cpp **** 
 640              		.loc 1 94 13 is_stmt 1
  94:src/Riscv.cpp **** 
 641              		.loc 1 94 56 is_stmt 0
 642              	#APP
 643              	# 94 "src/Riscv.cpp" 1
  96:src/Riscv.cpp ****             w_sepc(sepc);
 644              		mv a0, a0
 645              	# 0 "" 2
 646              		.loc 1 96 13 is_stmt 1
 647              	.LVL43:
 648              	#NO_APP
 649              	.LBB118:
 650              	.LBB119:
 183:src/../h/Riscv.hpp **** }
 651              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 652              		.loc 2 183 77 is_stmt 0
 653              	#APP
 654              	# 183 "src/../h/Riscv.hpp" 1
 655              		csrw sstatus, s2
 656              	# 0 "" 2
 657              	.LVL44:
 658              	#NO_APP
 659              	.LBE119:
 660              	.LBE118:
  97:src/Riscv.cpp ****         }
 661              		.loc 1 97 13 is_stmt 1
 662              	.LBB120:
 663              	.LBB121:
 113:src/../h/Riscv.hpp **** }
 664              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 665              		.loc 2 113 65 is_stmt 0
GAS LISTING /tmp/ccPN1Qew.s 			page 21


 666              	#APP
 667              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 668              		csrw sepc, s1
 669              	# 0 "" 2
 670              		.loc 2 114 1
 671              	#NO_APP
 672 0200 6FF01FE6 		j	.L3
 673              	.LVL45:
 674              	.L18:
 675              	.LBE121:
 676              	.LBE120:
 677              	.LBE113:
 678              	.LBB122:
 679              	.LBB103:
 101:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 680              		.loc 1 101 13 is_stmt 1
 681              	.LBB104:
 682              	.LBB105:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 683              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 684              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 685              		.loc 2 107 64 is_stmt 0
 686              	#APP
 687              	# 107 "src/../h/Riscv.hpp" 1
 688              		csrr a5, sepc
 689              	# 0 "" 2
 690              	#NO_APP
 691 0208 233CF4FA 		sd	a5,-72(s0)
 108:src/../h/Riscv.hpp **** }
 692              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 693              		.loc 2 108 12 is_stmt 0
 694 020c 833484FB 		ld	s1,-72(s0)
 695              	.LVL46:
 696              	.LBE105:
 697              	.LBE104:
 101:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 698              		.loc 1 101 38
 699 0210 93844400 		addi	s1,s1,4
 700              	.LVL47:
 102:src/Riscv.cpp **** 
 701              		.loc 1 102 13 is_stmt 1
 702              	.LBB106:
 703              	.LBB107:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 704              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 705              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 706              		.loc 2 177 76 is_stmt 0
 707              	#APP
 708              	# 177 "src/../h/Riscv.hpp" 1
 709              		csrr a5, sstatus
 710              	# 0 "" 2
GAS LISTING /tmp/ccPN1Qew.s 			page 22


 711              	#NO_APP
 712 0218 2338F4FA 		sd	a5,-80(s0)
 178:src/../h/Riscv.hpp **** }
 713              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 714              		.loc 2 178 12 is_stmt 0
 715 021c 033904FB 		ld	s2,-80(s0)
 716              	.LVL48:
 717              	.LBE107:
 718              	.LBE106:
 104:src/Riscv.cpp ****             _thread::yield();
 719              		.loc 1 104 13 is_stmt 1
 104:src/Riscv.cpp ****             _thread::yield();
 720              		.loc 1 104 31 is_stmt 0
 721 0220 97070000 		la	a5,_ZN7_thread7runningE
 721      83B70700 
 722 0228 83B70700 		ld	a5,0(a5)
 104:src/Riscv.cpp ****             _thread::yield();
 723              		.loc 1 104 39
 724 022c 13071000 		li	a4,1
 725 0230 2384E702 		sb	a4,40(a5)
 105:src/Riscv.cpp **** 
 726              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp **** 
 727              		.loc 1 105 27 is_stmt 0
 728 0234 97000000 		call	_ZN7_thread5yieldEv@plt
 728      E7800000 
 729              	.LVL49:
 107:src/Riscv.cpp ****             w_sepc(sepc);
 730              		.loc 1 107 13 is_stmt 1
 731              	.LBB108:
 732              	.LBB109:
 183:src/../h/Riscv.hpp **** }
 733              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 734              		.loc 2 183 77 is_stmt 0
 735              	#APP
 736              	# 183 "src/../h/Riscv.hpp" 1
 737              		csrw sstatus, s2
 738              	# 0 "" 2
 739              	.LVL50:
 740              	#NO_APP
 741              	.LBE109:
 742              	.LBE108:
 108:src/Riscv.cpp **** 
 743              		.loc 1 108 13 is_stmt 1
 744              	.LBB110:
 745              	.LBB111:
 113:src/../h/Riscv.hpp **** }
 746              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 747              		.loc 2 113 65 is_stmt 0
 748              	#APP
 749              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 750              		csrw sepc, s1
 751              	# 0 "" 2
GAS LISTING /tmp/ccPN1Qew.s 			page 23


 752              		.loc 2 114 1
 753              	#NO_APP
 754 0244 6FF0DFE1 		j	.L3
 755              	.LBE111:
 756              	.LBE110:
 757              	.LBE103:
 758              	.LBE122:
 759              	.LBE134:
 760              	.LBE139:
 761              	.LBE146:
 762              		.cfi_endproc
 763              	.LFE43:
 765              	.Letext0:
 766              		.file 3 "src/../h/../lib/hw.h"
 767              		.file 4 "src/../h/MemoryAllocator.hpp"
 768              		.file 5 "src/../h/_thread.hpp"
GAS LISTING /tmp/ccPN1Qew.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccPN1Qew.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccPN1Qew.s:13     .text:0000000000000000 .L0 
     /tmp/ccPN1Qew.s:14     .text:0000000000000000 .L0 
     /tmp/ccPN1Qew.s:15     .text:0000000000000004 .L0 
     /tmp/ccPN1Qew.s:17     .text:0000000000000008 .L0 
     /tmp/ccPN1Qew.s:19     .text:000000000000000c .L0 
     /tmp/ccPN1Qew.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:14     .text:000000000000000c .L0 
     /tmp/ccPN1Qew.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:15     .text:0000000000000010 .L0 
     /tmp/ccPN1Qew.s:33     .text:0000000000000014 .L0 
     /tmp/ccPN1Qew.s:34     .text:0000000000000018 .L0 
     /tmp/ccPN1Qew.s:35     .text:0000000000000018 .L0 
     /tmp/ccPN1Qew.s:37     .text:000000000000001c .L0 
     /tmp/ccPN1Qew.s:39     .text:0000000000000020 .L0 
     /tmp/ccPN1Qew.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccPN1Qew.s:48     .text:0000000000000020 .L0 
     /tmp/ccPN1Qew.s:49     .text:0000000000000020 .L0 
     /tmp/ccPN1Qew.s:50     .text:0000000000000024 .L0 
     /tmp/ccPN1Qew.s:57     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:58     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:59     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:60     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:61     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:62     .text:000000000000003c .L0 
     /tmp/ccPN1Qew.s:64     .text:0000000000000040 .L0 
     /tmp/ccPN1Qew.s:69     .text:0000000000000040 .L0 
     /tmp/ccPN1Qew.s:70     .text:0000000000000040 .L0 
     /tmp/ccPN1Qew.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/ccPN1Qew.s:79     .text:0000000000000048 .L0 
     /tmp/ccPN1Qew.s:80     .text:0000000000000048 .L0 
     /tmp/ccPN1Qew.s:84     .text:000000000000004c .L0 
     /tmp/ccPN1Qew.s:87     .text:0000000000000050 .L0 
     /tmp/ccPN1Qew.s:88     .text:0000000000000050 .L0 
     /tmp/ccPN1Qew.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:23     .text:0000000000000050 .L0 
     /tmp/ccPN1Qew.s:98     .text:0000000000000054 .L0 
     /tmp/ccPN1Qew.s:99     .text:0000000000000054 .L0 
     /tmp/ccPN1Qew.s:102    .text:0000000000000058 .L0 
     /tmp/ccPN1Qew.s:108    .text:0000000000000060 .L0 
     /tmp/ccPN1Qew.s:109    .text:0000000000000064 .L0 
     /tmp/ccPN1Qew.s:110    .text:0000000000000064 .L0 
     /tmp/ccPN1Qew.s:112    .text:0000000000000068 .L0 
     /tmp/ccPN1Qew.s:113    .text:0000000000000068 .L0 
     /tmp/ccPN1Qew.s:115    .text:000000000000006c .L0 
     /tmp/ccPN1Qew.s:117    .text:0000000000000070 .L0 
     /tmp/ccPN1Qew.s:119    .text:0000000000000074 .L0 
     /tmp/ccPN1Qew.s:121    .text:0000000000000078 .L0 
     /tmp/ccPN1Qew.s:123    .text:000000000000007c .L0 
     /tmp/ccPN1Qew.s:127    .text:0000000000000080 .L0 
     /tmp/ccPN1Qew.s:131    .text:0000000000000080 .L0 
     /tmp/ccPN1Qew.s:139    .text:0000000000000088 .L0 
     /tmp/ccPN1Qew.s:148    .text:0000000000000090 .L0 
     /tmp/ccPN1Qew.s:156    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccPN1Qew.s 			page 25


     /tmp/ccPN1Qew.s:166    .text:00000000000000a0 .L0 
     /tmp/ccPN1Qew.s:178    .text:00000000000000a8 .L0 
     /tmp/ccPN1Qew.s:184    .text:00000000000000b0 .L0 
     /tmp/ccPN1Qew.s:185    .text:00000000000000b0 .L0 
     /tmp/ccPN1Qew.s:186    .text:00000000000000b0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000b0 .L0 
     /tmp/ccPN1Qew.s:194    .text:00000000000000b8 .L0 
     /tmp/ccPN1Qew.s:195    .text:00000000000000b8 .L0 
     /tmp/ccPN1Qew.s:200    .text:00000000000000bc .L0 
     /tmp/ccPN1Qew.s:205    .text:00000000000000c0 .L0 
     /tmp/ccPN1Qew.s:206    .text:00000000000000c0 .L0 
     /tmp/ccPN1Qew.s:207    .text:00000000000000c0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000c0 .L0 
     /tmp/ccPN1Qew.s:215    .text:00000000000000c8 .L0 
     /tmp/ccPN1Qew.s:216    .text:00000000000000c8 .L0 
     /tmp/ccPN1Qew.s:221    .text:00000000000000cc .L0 
     /tmp/ccPN1Qew.s:222    .text:00000000000000cc .L0 
     /tmp/ccPN1Qew.s:225    .text:00000000000000d8 .L0 
     /tmp/ccPN1Qew.s:226    .text:00000000000000d8 .L0 
     /tmp/ccPN1Qew.s:231    .text:00000000000000e0 .L0 
     /tmp/ccPN1Qew.s:232    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000000e0 .L0 
     /tmp/ccPN1Qew.s:244    .text:00000000000000e4 .L0 
     /tmp/ccPN1Qew.s:245    .text:00000000000000e4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000000e4 .L0 
     /tmp/ccPN1Qew.s:260    .text:00000000000000e8 .L0 
     /tmp/ccPN1Qew.s:262    .text:00000000000000e8 .L0 
     /tmp/ccPN1Qew.s:263    .text:00000000000000e8 .L0 
     /tmp/ccPN1Qew.s:272    .text:00000000000000ec .L0 
     /tmp/ccPN1Qew.s:273    .text:00000000000000ec .L0 
     /tmp/ccPN1Qew.s:274    .text:00000000000000ec .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000ec .L0 
     /tmp/ccPN1Qew.s:282    .text:00000000000000f4 .L0 
     /tmp/ccPN1Qew.s:283    .text:00000000000000f4 .L0 
     /tmp/ccPN1Qew.s:287    .text:00000000000000f8 .L0 
     /tmp/ccPN1Qew.s:292    .text:00000000000000fc .L0 
     /tmp/ccPN1Qew.s:293    .text:00000000000000fc .L0 
     /tmp/ccPN1Qew.s:294    .text:00000000000000fc .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000fc .L0 
     /tmp/ccPN1Qew.s:302    .text:0000000000000104 .L0 
     /tmp/ccPN1Qew.s:303    .text:0000000000000104 .L0 
     /tmp/ccPN1Qew.s:308    .text:0000000000000108 .L0 
     /tmp/ccPN1Qew.s:309    .text:0000000000000108 .L0 
     /tmp/ccPN1Qew.s:312    .text:0000000000000114 .L0 
     /tmp/ccPN1Qew.s:313    .text:0000000000000114 .L0 
     /tmp/ccPN1Qew.s:318    .text:000000000000011c .L0 
     /tmp/ccPN1Qew.s:319    .text:000000000000011c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000011c .L0 
     /tmp/ccPN1Qew.s:331    .text:0000000000000120 .L0 
     /tmp/ccPN1Qew.s:332    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000120 .L0 
     /tmp/ccPN1Qew.s:339    .text:0000000000000124 .L0 
     /tmp/ccPN1Qew.s:350    .text:0000000000000128 .L0 
     /tmp/ccPN1Qew.s:351    .text:0000000000000128 .L0 
     /tmp/ccPN1Qew.s:352    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000128 .L0 
     /tmp/ccPN1Qew.s:360    .text:0000000000000130 .L0 
GAS LISTING /tmp/ccPN1Qew.s 			page 26


     /tmp/ccPN1Qew.s:361    .text:0000000000000130 .L0 
     /tmp/ccPN1Qew.s:365    .text:0000000000000134 .L0 
     /tmp/ccPN1Qew.s:370    .text:0000000000000138 .L0 
     /tmp/ccPN1Qew.s:371    .text:0000000000000138 .L0 
     /tmp/ccPN1Qew.s:372    .text:0000000000000138 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000138 .L0 
     /tmp/ccPN1Qew.s:380    .text:0000000000000140 .L0 
     /tmp/ccPN1Qew.s:381    .text:0000000000000140 .L0 
     /tmp/ccPN1Qew.s:386    .text:0000000000000144 .L0 
     /tmp/ccPN1Qew.s:387    .text:0000000000000144 .L0 
     /tmp/ccPN1Qew.s:388    .text:0000000000000144 .L0 
     /tmp/ccPN1Qew.s:389    .text:0000000000000144 .L0 
     /tmp/ccPN1Qew.s:390    .text:0000000000000144 .L0 
       src/Riscv.cpp:49     .text:0000000000000144 .L0 
     /tmp/ccPN1Qew.s:396    .text:0000000000000148 .L0 
       src/Riscv.cpp:50     .text:0000000000000148 .L0 
     /tmp/ccPN1Qew.s:401    .text:000000000000014c .L0 
       src/Riscv.cpp:51     .text:000000000000014c .L0 
     /tmp/ccPN1Qew.s:406    .text:0000000000000150 .L0 
       src/Riscv.cpp:52     .text:0000000000000150 .L0 
     /tmp/ccPN1Qew.s:411    .text:0000000000000154 .L0 
       src/Riscv.cpp:55     .text:0000000000000154 .L0 
     /tmp/ccPN1Qew.s:417    .text:0000000000000158 .L0 
       src/Riscv.cpp:56     .text:0000000000000158 .L0 
     /tmp/ccPN1Qew.s:423    .text:000000000000015c .L0 
       src/Riscv.cpp:57     .text:000000000000015c .L0 
     /tmp/ccPN1Qew.s:429    .text:0000000000000160 .L0 
       src/Riscv.cpp:58     .text:0000000000000160 .L0 
     /tmp/ccPN1Qew.s:435    .text:0000000000000164 .L0 
     /tmp/ccPN1Qew.s:437    .text:0000000000000164 .L0 
     /tmp/ccPN1Qew.s:440    .text:000000000000016c .L0 
     /tmp/ccPN1Qew.s:441    .text:000000000000016c .L0 
     /tmp/ccPN1Qew.s:443    .text:0000000000000170 .L0 
     /tmp/ccPN1Qew.s:444    .text:0000000000000170 .L0 
     /tmp/ccPN1Qew.s:446    .text:0000000000000174 .L0 
     /tmp/ccPN1Qew.s:450    .text:0000000000000178 .L0 
       src/Riscv.cpp:70     .text:0000000000000178 .L0 
     /tmp/ccPN1Qew.s:460    .text:000000000000017c .L0 
     /tmp/ccPN1Qew.s:461    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000017c .L0 
     /tmp/ccPN1Qew.s:473    .text:0000000000000180 .L0 
     /tmp/ccPN1Qew.s:474    .text:0000000000000180 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000180 .L0 
     /tmp/ccPN1Qew.s:481    .text:0000000000000184 .L0 
     /tmp/ccPN1Qew.s:487    .text:0000000000000188 .L0 
     /tmp/ccPN1Qew.s:499    .text:0000000000000190 .L0 
     /tmp/ccPN1Qew.s:500    .text:0000000000000190 .L0 
     /tmp/ccPN1Qew.s:501    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000190 .L0 
     /tmp/ccPN1Qew.s:509    .text:0000000000000198 .L0 
     /tmp/ccPN1Qew.s:510    .text:0000000000000198 .L0 
     /tmp/ccPN1Qew.s:515    .text:000000000000019c .L0 
     /tmp/ccPN1Qew.s:520    .text:00000000000001a0 .L0 
     /tmp/ccPN1Qew.s:521    .text:00000000000001a0 .L0 
     /tmp/ccPN1Qew.s:522    .text:00000000000001a0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001a0 .L0 
     /tmp/ccPN1Qew.s:530    .text:00000000000001a8 .L0 
GAS LISTING /tmp/ccPN1Qew.s 			page 27


     /tmp/ccPN1Qew.s:531    .text:00000000000001a8 .L0 
     /tmp/ccPN1Qew.s:536    .text:00000000000001ac .L0 
       src/Riscv.cpp:79     .text:00000000000001ac .L0 
     /tmp/ccPN1Qew.s:543    .text:00000000000001b0 .L0 
     /tmp/ccPN1Qew.s:545    .text:00000000000001b0 .L0 
     /tmp/ccPN1Qew.s:550    .text:00000000000001bc .L0 
       src/Riscv.cpp:83     .text:00000000000001bc .L0 
     /tmp/ccPN1Qew.s:560    .text:00000000000001c0 .L0 
     /tmp/ccPN1Qew.s:561    .text:00000000000001c0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001c0 .L0 
     /tmp/ccPN1Qew.s:573    .text:00000000000001c4 .L0 
     /tmp/ccPN1Qew.s:574    .text:00000000000001c4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001c4 .L0 
     /tmp/ccPN1Qew.s:581    .text:00000000000001c8 .L0 
     /tmp/ccPN1Qew.s:592    .text:00000000000001cc .L0 
     /tmp/ccPN1Qew.s:593    .text:00000000000001cc .L0 
     /tmp/ccPN1Qew.s:594    .text:00000000000001cc .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001cc .L0 
     /tmp/ccPN1Qew.s:602    .text:00000000000001d4 .L0 
     /tmp/ccPN1Qew.s:603    .text:00000000000001d4 .L0 
     /tmp/ccPN1Qew.s:608    .text:00000000000001d8 .L0 
     /tmp/ccPN1Qew.s:613    .text:00000000000001dc .L0 
     /tmp/ccPN1Qew.s:614    .text:00000000000001dc .L0 
     /tmp/ccPN1Qew.s:615    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001dc .L0 
     /tmp/ccPN1Qew.s:623    .text:00000000000001e4 .L0 
     /tmp/ccPN1Qew.s:624    .text:00000000000001e4 .L0 
     /tmp/ccPN1Qew.s:629    .text:00000000000001e8 .L0 
       src/Riscv.cpp:92     .text:00000000000001e8 .L0 
     /tmp/ccPN1Qew.s:636    .text:00000000000001ec .L0 
     /tmp/ccPN1Qew.s:638    .text:00000000000001ec .L0 
     /tmp/ccPN1Qew.s:641    .text:00000000000001f4 .L0 
       src/Riscv.cpp:94     .text:00000000000001f4 .L0 
     /tmp/ccPN1Qew.s:651    .text:00000000000001f8 .L0 
     /tmp/ccPN1Qew.s:652    .text:00000000000001f8 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001f8 .L0 
     /tmp/ccPN1Qew.s:664    .text:00000000000001fc .L0 
     /tmp/ccPN1Qew.s:665    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001fc .L0 
     /tmp/ccPN1Qew.s:672    .text:0000000000000200 .L0 
     /tmp/ccPN1Qew.s:683    .text:0000000000000204 .L0 
     /tmp/ccPN1Qew.s:684    .text:0000000000000204 .L0 
     /tmp/ccPN1Qew.s:685    .text:0000000000000204 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000204 .L0 
     /tmp/ccPN1Qew.s:693    .text:000000000000020c .L0 
     /tmp/ccPN1Qew.s:694    .text:000000000000020c .L0 
     /tmp/ccPN1Qew.s:699    .text:0000000000000210 .L0 
     /tmp/ccPN1Qew.s:704    .text:0000000000000214 .L0 
     /tmp/ccPN1Qew.s:705    .text:0000000000000214 .L0 
     /tmp/ccPN1Qew.s:706    .text:0000000000000214 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000214 .L0 
     /tmp/ccPN1Qew.s:714    .text:000000000000021c .L0 
     /tmp/ccPN1Qew.s:715    .text:000000000000021c .L0 
     /tmp/ccPN1Qew.s:720    .text:0000000000000220 .L0 
     /tmp/ccPN1Qew.s:721    .text:0000000000000220 .L0 
     /tmp/ccPN1Qew.s:724    .text:000000000000022c .L0 
     /tmp/ccPN1Qew.s:727    .text:0000000000000234 .L0 
GAS LISTING /tmp/ccPN1Qew.s 			page 28


     /tmp/ccPN1Qew.s:728    .text:0000000000000234 .L0 
     /tmp/ccPN1Qew.s:733    .text:000000000000023c .L0 
     /tmp/ccPN1Qew.s:734    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000023c .L0 
     /tmp/ccPN1Qew.s:746    .text:0000000000000240 .L0 
     /tmp/ccPN1Qew.s:747    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000240 .L0 
     /tmp/ccPN1Qew.s:754    .text:0000000000000244 .L0 
     /tmp/ccPN1Qew.s:762    .text:0000000000000248 .L0 
     /tmp/ccPN1Qew.s:769    .text:0000000000000248 .L0 
     /tmp/ccPN1Qew.s:222    .text:00000000000000cc .L0 
     /tmp/ccPN1Qew.s:309    .text:0000000000000108 .L0 
     /tmp/ccPN1Qew.s:721    .text:0000000000000220 .L0 
     /tmp/ccPN1Qew.s:126    .text:0000000000000080 .L13
     /tmp/ccPN1Qew.s:265    .text:00000000000000ec .L14
     /tmp/ccPN1Qew.s:341    .text:0000000000000128 .L15
     /tmp/ccPN1Qew.s:490    .text:0000000000000190 .L16
     /tmp/ccPN1Qew.s:583    .text:00000000000001cc .L17
     /tmp/ccPN1Qew.s:674    .text:0000000000000204 .L18
     /tmp/ccPN1Qew.s:105    .text:0000000000000060 .L3
     /tmp/ccPN1Qew.s:141    .text:0000000000000090 .L6
     /tmp/ccPN1Qew.s:483    .text:0000000000000188 .L11
     /tmp/ccPN1Qew.s:447    .text:0000000000000178 .L7
     /tmp/ccPN1Qew.s:2173   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccPN1Qew.s:3487   .debug_str:0000000000000663 .LASF124
     /tmp/ccPN1Qew.s:3387   .debug_str:0000000000000385 .LASF125
     /tmp/ccPN1Qew.s:3285   .debug_str:000000000000007e .LASF126
     /tmp/ccPN1Qew.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccPN1Qew.s:765    .text:0000000000000248 .Letext0
     /tmp/ccPN1Qew.s:3267   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccPN1Qew.s:3305   .debug_str:0000000000000146 .LASF3
     /tmp/ccPN1Qew.s:3403   .debug_str:00000000000003eb .LASF0
     /tmp/ccPN1Qew.s:3423   .debug_str:0000000000000459 .LASF1
     /tmp/ccPN1Qew.s:3389   .debug_str:0000000000000393 .LASF2
     /tmp/ccPN1Qew.s:3359   .debug_str:00000000000002d2 .LASF4
     /tmp/ccPN1Qew.s:3459   .debug_str:0000000000000583 .LASF5
     /tmp/ccPN1Qew.s:3291   .debug_str:00000000000000d9 .LASF6
     /tmp/ccPN1Qew.s:3427   .debug_str:0000000000000473 .LASF7
     /tmp/ccPN1Qew.s:3401   .debug_str:00000000000003d8 .LASF8
     /tmp/ccPN1Qew.s:3503   .debug_str:00000000000007a5 .LASF9
     /tmp/ccPN1Qew.s:3347   .debug_str:000000000000025f .LASF10
     /tmp/ccPN1Qew.s:3435   .debug_str:00000000000004a7 .LASF11
     /tmp/ccPN1Qew.s:3491   .debug_str:0000000000000733 .LASF12
     /tmp/ccPN1Qew.s:3293   .debug_str:00000000000000e0 .LASF13
     /tmp/ccPN1Qew.s:3275   .debug_str:0000000000000034 .LASF14
     /tmp/ccPN1Qew.s:3301   .debug_str:000000000000012a .LASF15
     /tmp/ccPN1Qew.s:3451   .debug_str:000000000000053f .LASF16
     /tmp/ccPN1Qew.s:3311   .debug_str:0000000000000174 .LASF17
     /tmp/ccPN1Qew.s:3419   .debug_str:0000000000000446 .LASF54
     /tmp/ccPN1Qew.s:3447   .debug_str:000000000000050e .LASF50
     /tmp/ccPN1Qew.s:3517   .debug_str:0000000000000815 .LASF52
     /tmp/ccPN1Qew.s:3277   .debug_str:0000000000000044 .LASF18
     /tmp/ccPN1Qew.s:3471   .debug_str:00000000000005d9 .LASF20
     /tmp/ccPN1Qew.s:3323   .debug_str:00000000000001ed .LASF22
     /tmp/ccPN1Qew.s:3321   .debug_str:00000000000001d8 .LASF24
     /tmp/ccPN1Qew.s:3463   .debug_str:00000000000005a6 .LASF19
     /tmp/ccPN1Qew.s:3441   .debug_str:00000000000004ee .LASF21
GAS LISTING /tmp/ccPN1Qew.s 			page 29


     /tmp/ccPN1Qew.s:3485   .debug_str:000000000000065c .LASF23
     /tmp/ccPN1Qew.s:3475   .debug_str:0000000000000606 .LASF25
     /tmp/ccPN1Qew.s:3337   .debug_str:0000000000000242 .LASF26
     /tmp/ccPN1Qew.s:3313   .debug_str:000000000000018a .LASF27
     /tmp/ccPN1Qew.s:3271   .debug_str:0000000000000009 .LASF28
     /tmp/ccPN1Qew.s:3353   .debug_str:00000000000002a0 .LASF29
     /tmp/ccPN1Qew.s:3327   .debug_str:00000000000001fe .LASF30
     /tmp/ccPN1Qew.s:3295   .debug_str:00000000000000f0 .LASF31
     /tmp/ccPN1Qew.s:3523   .debug_str:0000000000000849 .LASF32
     /tmp/ccPN1Qew.s:3329   .debug_str:0000000000000206 .LASF33
     /tmp/ccPN1Qew.s:3405   .debug_str:00000000000003f8 .LASF34
     /tmp/ccPN1Qew.s:3515   .debug_str:0000000000000802 .LASF35
     /tmp/ccPN1Qew.s:3287   .debug_str:00000000000000ae .LASF36
     /tmp/ccPN1Qew.s:3335   .debug_str:000000000000022f .LASF37
     /tmp/ccPN1Qew.s:3345   .debug_str:0000000000000259 .LASF38
     /tmp/ccPN1Qew.s:3483   .debug_str:000000000000064a .LASF39
     /tmp/ccPN1Qew.s:3375   .debug_str:0000000000000337 .LASF40
     /tmp/ccPN1Qew.s:3527   .debug_str:0000000000000861 .LASF41
     /tmp/ccPN1Qew.s:3521   .debug_str:000000000000083e .LASF42
     /tmp/ccPN1Qew.s:3457   .debug_str:000000000000056b .LASF43
     /tmp/ccPN1Qew.s:3369   .debug_str:0000000000000302 .LASF44
     /tmp/ccPN1Qew.s:3473   .debug_str:00000000000005ee .LASF45
     /tmp/ccPN1Qew.s:3299   .debug_str:0000000000000120 .LASF46
     /tmp/ccPN1Qew.s:3355   .debug_str:00000000000002b4 .LASF47
     /tmp/ccPN1Qew.s:3393   .debug_str:00000000000003ad .LASF48
     /tmp/ccPN1Qew.s:3349   .debug_str:000000000000026d .LASF49
     /tmp/ccPN1Qew.s:3465   .debug_str:00000000000005ad .LASF51
     /tmp/ccPN1Qew.s:3297   .debug_str:0000000000000104 .LASF53
     /tmp/ccPN1Qew.s:3507   .debug_str:00000000000007bf .LASF101
     /tmp/ccPN1Qew.s:3373   .debug_str:0000000000000315 .LASF103
     /tmp/ccPN1Qew.s:3385   .debug_str:0000000000000375 .LASF55
     /tmp/ccPN1Qew.s:3489   .debug_str:0000000000000727 .LASF56
     /tmp/ccPN1Qew.s:3289   .debug_str:00000000000000b5 .LASF57
     /tmp/ccPN1Qew.s:3499   .debug_str:000000000000077e .LASF58
     /tmp/ccPN1Qew.s:3273   .debug_str:0000000000000011 .LASF60
     /tmp/ccPN1Qew.s:3505   .debug_str:00000000000007b5 .LASF59
     /tmp/ccPN1Qew.s:3283   .debug_str:000000000000005c .LASF61
     /tmp/ccPN1Qew.s:3501   .debug_str:0000000000000789 .LASF63
     /tmp/ccPN1Qew.s:3397   .debug_str:00000000000003bd .LASF62
     /tmp/ccPN1Qew.s:3509   .debug_str:00000000000007d4 .LASF64
     /tmp/ccPN1Qew.s:3319   .debug_str:00000000000001bf .LASF106
     /tmp/ccPN1Qew.s:3357   .debug_str:00000000000002ca .LASF65
     /tmp/ccPN1Qew.s:3493   .debug_str:0000000000000742 .LASF127
     /tmp/ccPN1Qew.s:3433   .debug_str:00000000000004a1 .LASF66
     /tmp/ccPN1Qew.s:3467   .debug_str:00000000000005bc .LASF67
     /tmp/ccPN1Qew.s:3361   .debug_str:00000000000002d9 .LASF68
     /tmp/ccPN1Qew.s:3281   .debug_str:0000000000000054 .LASF128
     /tmp/ccPN1Qew.s:3497   .debug_str:0000000000000775 .LASF69
     /tmp/ccPN1Qew.s:3431   .debug_str:0000000000000491 .LASF70
     /tmp/ccPN1Qew.s:3429   .debug_str:0000000000000486 .LASF71
     /tmp/ccPN1Qew.s:3315   .debug_str:000000000000019e .LASF72
     /tmp/ccPN1Qew.s:3391   .debug_str:00000000000003a1 .LASF73
     /tmp/ccPN1Qew.s:3307   .debug_str:000000000000014b .LASF74
     /tmp/ccPN1Qew.s:3383   .debug_str:0000000000000368 .LASF75
     /tmp/ccPN1Qew.s:3437   .debug_str:00000000000004b6 .LASF76
     /tmp/ccPN1Qew.s:3421   .debug_str:000000000000044c .LASF77
     /tmp/ccPN1Qew.s:3449   .debug_str:0000000000000519 .LASF78
GAS LISTING /tmp/ccPN1Qew.s 			page 30


     /tmp/ccPN1Qew.s:3445   .debug_str:0000000000000509 .LASF113
     /tmp/ccPN1Qew.s:3453   .debug_str:0000000000000555 .LASF79
     /tmp/ccPN1Qew.s:3481   .debug_str:0000000000000636 .LASF80
     /tmp/ccPN1Qew.s:3317   .debug_str:00000000000001b9 .LASF81
     /tmp/ccPN1Qew.s:3469   .debug_str:00000000000005c5 .LASF82
     /tmp/ccPN1Qew.s:3325   .debug_str:00000000000001f6 .LASF129
     /tmp/ccPN1Qew.s:3477   .debug_str:0000000000000619 .LASF83
     /tmp/ccPN1Qew.s:3379   .debug_str:000000000000034b .LASF84
     /tmp/ccPN1Qew.s:3417   .debug_str:0000000000000439 .LASF85
     /tmp/ccPN1Qew.s:3411   .debug_str:000000000000040e .LASF86
     /tmp/ccPN1Qew.s:3513   .debug_str:00000000000007f5 .LASF87
     /tmp/ccPN1Qew.s:3455   .debug_str:000000000000055b .LASF88
     /tmp/ccPN1Qew.s:3525   .debug_str:0000000000000851 .LASF89
     /tmp/ccPN1Qew.s:3331   .debug_str:000000000000021a .LASF90
     /tmp/ccPN1Qew.s:3303   .debug_str:0000000000000136 .LASF91
     /tmp/ccPN1Qew.s:3519   .debug_str:000000000000082d .LASF92
     /tmp/ccPN1Qew.s:3363   .debug_str:00000000000002e1 .LASF93
     /tmp/ccPN1Qew.s:3399   .debug_str:00000000000003c7 .LASF94
     /tmp/ccPN1Qew.s:3439   .debug_str:00000000000004d3 .LASF95
     /tmp/ccPN1Qew.s:3367   .debug_str:00000000000002fd .LASF96
     /tmp/ccPN1Qew.s:3409   .debug_str:0000000000000408 .LASF97
     /tmp/ccPN1Qew.s:3371   .debug_str:000000000000030d .LASF98
     /tmp/ccPN1Qew.s:3415   .debug_str:000000000000042f .LASF99
     /tmp/ccPN1Qew.s:3365   .debug_str:00000000000002f4 .LASF100
     /tmp/ccPN1Qew.s:3377   .debug_str:000000000000033d .LASF102
     /tmp/ccPN1Qew.s:3351   .debug_str:0000000000000283 .LASF104
     /tmp/ccPN1Qew.s:3309   .debug_str:0000000000000166 .LASF105
     /tmp/ccPN1Qew.s:3495   .debug_str:0000000000000749 .LASF107
     /tmp/ccPN1Qew.s:3407   .debug_str:00000000000003ff .LASF108
     /tmp/ccPN1Qew.s:3479   .debug_str:000000000000061f .LASF109
     /tmp/ccPN1Qew.s:3461   .debug_str:0000000000000595 .LASF110
     /tmp/ccPN1Qew.s:3381   .debug_str:000000000000035f .LASF111
     /tmp/ccPN1Qew.s:3425   .debug_str:000000000000046c .LASF112
     /tmp/ccPN1Qew.s:3269   .debug_str:0000000000000000 .LASF114
     /tmp/ccPN1Qew.s:3333   .debug_str:000000000000022a .LASF115
     /tmp/ccPN1Qew.s:46     .text:0000000000000020 .LFB43
     /tmp/ccPN1Qew.s:763    .text:0000000000000248 .LFE43
     /tmp/ccPN1Qew.s:3279   .debug_str:000000000000004d .LASF116
     /tmp/ccPN1Qew.s:3010   .debug_loc:0000000000000000 .LLST0
     /tmp/ccPN1Qew.s:3395   .debug_str:00000000000003b7 .LASF117
     /tmp/ccPN1Qew.s:3017   .debug_loc:0000000000000023 .LLST1
     /tmp/ccPN1Qew.s:3339   .debug_str:000000000000024a .LASF118
     /tmp/ccPN1Qew.s:3040   .debug_loc:0000000000000092 .LLST2
     /tmp/ccPN1Qew.s:268    .text:00000000000000ec .LBB79
     /tmp/ccPN1Qew.s:344    .text:0000000000000128 .LBE79
     /tmp/ccPN1Qew.s:3413   .debug_str:000000000000042a .LASF119
     /tmp/ccPN1Qew.s:3051   .debug_loc:00000000000000c8 .LLST13
     /tmp/ccPN1Qew.s:3443   .debug_str:0000000000000501 .LASF120
     /tmp/ccPN1Qew.s:3058   .debug_loc:00000000000000eb .LLST14
     /tmp/ccPN1Qew.s:270    .text:00000000000000ec .LBB80
     /tmp/ccPN1Qew.s:285    .text:00000000000000f8 .LBE80
     /tmp/ccPN1Qew.s:290    .text:00000000000000fc .LBB82
     /tmp/ccPN1Qew.s:306    .text:0000000000000108 .LBE82
     /tmp/ccPN1Qew.s:316    .text:000000000000011c .LBB84
     /tmp/ccPN1Qew.s:327    .text:0000000000000120 .LBE84
     /tmp/ccPN1Qew.s:3065   .debug_loc:000000000000010e .LLST15
     /tmp/ccPN1Qew.s:329    .text:0000000000000120 .LBB86
GAS LISTING /tmp/ccPN1Qew.s 			page 31


     /tmp/ccPN1Qew.s:343    .text:0000000000000128 .LBE86
     /tmp/ccPN1Qew.s:3072   .debug_loc:0000000000000131 .LLST16
     /tmp/ccPN1Qew.s:314    .text:000000000000011c .LVL14
     /tmp/ccPN1Qew.s:346    .text:0000000000000128 .LBB70
     /tmp/ccPN1Qew.s:491    .text:0000000000000190 .LBE70
     /tmp/ccPN1Qew.s:3079   .debug_loc:0000000000000154 .LLST3
     /tmp/ccPN1Qew.s:3086   .debug_loc:0000000000000177 .LLST4
     /tmp/ccPN1Qew.s:3093   .debug_loc:000000000000019a .LLST5
     /tmp/ccPN1Qew.s:3341   .debug_str:000000000000024f .LASF121
     /tmp/ccPN1Qew.s:3100   .debug_loc:00000000000001bd .LLST6
     /tmp/ccPN1Qew.s:3343   .debug_str:0000000000000254 .LASF122
     /tmp/ccPN1Qew.s:3107   .debug_loc:00000000000001e0 .LLST7
     /tmp/ccPN1Qew.s:3511   .debug_str:00000000000007f0 .LASF123
     /tmp/ccPN1Qew.s:3114   .debug_loc:0000000000000203 .LLST8
     /tmp/ccPN1Qew.s:3121   .debug_loc:0000000000000226 .LLST9
     /tmp/ccPN1Qew.s:3128   .debug_loc:0000000000000249 .LLST10
     /tmp/ccPN1Qew.s:348    .text:0000000000000128 .LBB71
     /tmp/ccPN1Qew.s:363    .text:0000000000000134 .LBE71
     /tmp/ccPN1Qew.s:368    .text:0000000000000138 .LBB73
     /tmp/ccPN1Qew.s:384    .text:0000000000000144 .LBE73
     /tmp/ccPN1Qew.s:458    .text:000000000000017c .LBB75
     /tmp/ccPN1Qew.s:469    .text:0000000000000180 .LBE75
     /tmp/ccPN1Qew.s:3135   .debug_loc:000000000000026c .LLST11
     /tmp/ccPN1Qew.s:471    .text:0000000000000180 .LBB77
     /tmp/ccPN1Qew.s:485    .text:0000000000000188 .LBE77
     /tmp/ccPN1Qew.s:3142   .debug_loc:000000000000028f .LLST12
     /tmp/ccPN1Qew.s:438    .text:000000000000016c .LVL23
     /tmp/ccPN1Qew.s:495    .text:0000000000000190 .LBB125
     /tmp/ccPN1Qew.s:586    .text:00000000000001cc .LBE125
     /tmp/ccPN1Qew.s:3149   .debug_loc:00000000000002b2 .LLST27
     /tmp/ccPN1Qew.s:3156   .debug_loc:00000000000002d5 .LLST28
     /tmp/ccPN1Qew.s:3163   .debug_loc:00000000000002f8 .LLST29
     /tmp/ccPN1Qew.s:497    .text:0000000000000190 .LBB126
     /tmp/ccPN1Qew.s:513    .text:000000000000019c .LBE126
     /tmp/ccPN1Qew.s:518    .text:00000000000001a0 .LBB128
     /tmp/ccPN1Qew.s:534    .text:00000000000001ac .LBE128
     /tmp/ccPN1Qew.s:558    .text:00000000000001c0 .LBB130
     /tmp/ccPN1Qew.s:569    .text:00000000000001c4 .LBE130
     /tmp/ccPN1Qew.s:3170   .debug_loc:000000000000031b .LLST30
     /tmp/ccPN1Qew.s:571    .text:00000000000001c4 .LBB132
     /tmp/ccPN1Qew.s:585    .text:00000000000001cc .LBE132
     /tmp/ccPN1Qew.s:3177   .debug_loc:000000000000033e .LLST31
     /tmp/ccPN1Qew.s:548    .text:00000000000001bc .LVL34
     /tmp/ccPN1Qew.s:588    .text:00000000000001cc .LBB113
     /tmp/ccPN1Qew.s:677    .text:0000000000000204 .LBE113
     /tmp/ccPN1Qew.s:3184   .debug_loc:0000000000000361 .LLST22
     /tmp/ccPN1Qew.s:3191   .debug_loc:0000000000000384 .LLST23
     /tmp/ccPN1Qew.s:3198   .debug_loc:00000000000003a7 .LLST24
     /tmp/ccPN1Qew.s:590    .text:00000000000001cc .LBB114
     /tmp/ccPN1Qew.s:606    .text:00000000000001d8 .LBE114
     /tmp/ccPN1Qew.s:611    .text:00000000000001dc .LBB116
     /tmp/ccPN1Qew.s:627    .text:00000000000001e8 .LBE116
     /tmp/ccPN1Qew.s:649    .text:00000000000001f8 .LBB118
     /tmp/ccPN1Qew.s:660    .text:00000000000001fc .LBE118
     /tmp/ccPN1Qew.s:3205   .debug_loc:00000000000003ca .LLST25
     /tmp/ccPN1Qew.s:662    .text:00000000000001fc .LBB120
     /tmp/ccPN1Qew.s:676    .text:0000000000000204 .LBE120
GAS LISTING /tmp/ccPN1Qew.s 			page 32


     /tmp/ccPN1Qew.s:3212   .debug_loc:00000000000003ed .LLST26
     /tmp/ccPN1Qew.s:639    .text:00000000000001f4 .LVL42
     /tmp/ccPN1Qew.s:679    .text:0000000000000204 .LBB103
     /tmp/ccPN1Qew.s:757    .text:0000000000000248 .LBE103
     /tmp/ccPN1Qew.s:681    .text:0000000000000204 .LBB104
     /tmp/ccPN1Qew.s:697    .text:0000000000000210 .LBE104
     /tmp/ccPN1Qew.s:702    .text:0000000000000214 .LBB106
     /tmp/ccPN1Qew.s:718    .text:0000000000000220 .LBE106
     /tmp/ccPN1Qew.s:731    .text:000000000000023c .LBB108
     /tmp/ccPN1Qew.s:742    .text:0000000000000240 .LBE108
     /tmp/ccPN1Qew.s:3219   .debug_loc:0000000000000410 .LLST21
     /tmp/ccPN1Qew.s:744    .text:0000000000000240 .LBB110
     /tmp/ccPN1Qew.s:756    .text:0000000000000248 .LBE110
     /tmp/ccPN1Qew.s:729    .text:000000000000023c .LVL49
     /tmp/ccPN1Qew.s:180    .text:00000000000000b0 .LBB94
     /tmp/ccPN1Qew.s:254    .text:00000000000000e8 .LBE94
     /tmp/ccPN1Qew.s:3226   .debug_loc:0000000000000433 .LLST17
     /tmp/ccPN1Qew.s:3233   .debug_loc:0000000000000456 .LLST18
     /tmp/ccPN1Qew.s:182    .text:00000000000000b0 .LBB95
     /tmp/ccPN1Qew.s:198    .text:00000000000000bc .LBE95
     /tmp/ccPN1Qew.s:203    .text:00000000000000c0 .LBB97
     /tmp/ccPN1Qew.s:219    .text:00000000000000cc .LBE97
     /tmp/ccPN1Qew.s:229    .text:00000000000000e0 .LBB99
     /tmp/ccPN1Qew.s:240    .text:00000000000000e4 .LBE99
     /tmp/ccPN1Qew.s:3240   .debug_loc:0000000000000479 .LLST19
     /tmp/ccPN1Qew.s:242    .text:00000000000000e4 .LBB101
     /tmp/ccPN1Qew.s:253    .text:00000000000000e8 .LBE101
     /tmp/ccPN1Qew.s:3247   .debug_loc:000000000000049c .LLST20
     /tmp/ccPN1Qew.s:227    .text:00000000000000e0 .LVL8
     /tmp/ccPN1Qew.s:66     .text:0000000000000040 .LBB65
     /tmp/ccPN1Qew.s:82     .text:000000000000004c .LBE65
     /tmp/ccPN1Qew.s:10     .text:0000000000000000 .LFB42
     /tmp/ccPN1Qew.s:40     .text:0000000000000020 .LFE42
     /tmp/ccPN1Qew.s:85     .text:0000000000000050 .LVL0
     /tmp/ccPN1Qew.s:100    .text:0000000000000058 .LVL2
     /tmp/ccPN1Qew.s:94     .text:0000000000000054 .LVL1
     /tmp/ccPN1Qew.s:104    .text:0000000000000060 .LVL3
     /tmp/ccPN1Qew.s:125    .text:0000000000000080 .LVL4
     /tmp/ccPN1Qew.s:196    .text:00000000000000bc .LVL5
     /tmp/ccPN1Qew.s:264    .text:00000000000000ec .LVL11
     /tmp/ccPN1Qew.s:511    .text:000000000000019c .LVL29
     /tmp/ccPN1Qew.s:582    .text:00000000000001cc .LVL37
     /tmp/ccPN1Qew.s:604    .text:00000000000001d8 .LVL38
     /tmp/ccPN1Qew.s:673    .text:0000000000000204 .LVL45
     /tmp/ccPN1Qew.s:695    .text:0000000000000210 .LVL46
     /tmp/ccPN1Qew.s:541    .text:00000000000001b0 .LVL32
     /tmp/ccPN1Qew.s:546    .text:00000000000001b4 .LVL33
     /tmp/ccPN1Qew.s:634    .text:00000000000001ec .LVL41
     /tmp/ccPN1Qew.s:288    .text:00000000000000fc .LVL12
     /tmp/ccPN1Qew.s:340    .text:0000000000000128 .LVL16
     /tmp/ccPN1Qew.s:304    .text:0000000000000108 .LVL13
     /tmp/ccPN1Qew.s:324    .text:0000000000000120 .LVL15
     /tmp/ccPN1Qew.s:366    .text:0000000000000138 .LVL17
     /tmp/ccPN1Qew.s:489    .text:0000000000000190 .LVL28
     /tmp/ccPN1Qew.s:382    .text:0000000000000144 .LVL18
     /tmp/ccPN1Qew.s:415    .text:0000000000000158 .LVL19
     /tmp/ccPN1Qew.s:421    .text:000000000000015c .LVL20
GAS LISTING /tmp/ccPN1Qew.s 			page 33


     /tmp/ccPN1Qew.s:427    .text:0000000000000160 .LVL21
     /tmp/ccPN1Qew.s:433    .text:0000000000000164 .LVL22
     /tmp/ccPN1Qew.s:448    .text:0000000000000178 .LVL24
     /tmp/ccPN1Qew.s:482    .text:0000000000000188 .LVL27
     /tmp/ccPN1Qew.s:456    .text:000000000000017c .LVL25
     /tmp/ccPN1Qew.s:466    .text:0000000000000180 .LVL26
     /tmp/ccPN1Qew.s:516    .text:00000000000001a0 .LVL30
     /tmp/ccPN1Qew.s:532    .text:00000000000001ac .LVL31
     /tmp/ccPN1Qew.s:556    .text:00000000000001c0 .LVL35
     /tmp/ccPN1Qew.s:566    .text:00000000000001c4 .LVL36
     /tmp/ccPN1Qew.s:609    .text:00000000000001dc .LVL39
     /tmp/ccPN1Qew.s:625    .text:00000000000001e8 .LVL40
     /tmp/ccPN1Qew.s:647    .text:00000000000001f8 .LVL43
     /tmp/ccPN1Qew.s:657    .text:00000000000001fc .LVL44
     /tmp/ccPN1Qew.s:739    .text:0000000000000240 .LVL50
     /tmp/ccPN1Qew.s:201    .text:00000000000000c0 .LVL6
     /tmp/ccPN1Qew.s:217    .text:00000000000000cc .LVL7
     /tmp/ccPN1Qew.s:237    .text:00000000000000e4 .LVL9
     /tmp/ccPN1Qew.s:250    .text:00000000000000e8 .LVL10
     /tmp/ccPN1Qew.s:770    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN7_thread16timeSliceCounterE
_ZN7_thread5yieldEv
_ZN7_thread8dispatchEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
