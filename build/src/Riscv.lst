GAS LISTING /tmp/ccsvpkDT.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB50:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE50:
GAS LISTING /tmp/ccsvpkDT.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB51:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB140:
  67              	.LBB141:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccsvpkDT.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
GAS LISTING /tmp/ccsvpkDT.s 			page 4


  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 95 5
  71              		.loc 2 95 72 is_stmt 0
  72              	#APP
  73              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F0 		sd	a5,-248(s0)
  78              		.loc 2 96 5 is_stmt 1
  79              		.loc 2 96 12 is_stmt 0
  80 0048 833784F0 		ld	a5,-248(s0)
  81              	.LBE141:
  82              	.LBE140:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp **** //    uint64 arg0;
  24:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 24 5
  25:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 25 5
  89              		.loc 1 25 49 is_stmt 0
  90              	#APP
  91              	# 25 "src/Riscv.cpp" 1
  26              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  27:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  95              		.loc 1 27 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB142:
  98              		.loc 1 27 40 is_stmt 0
  99 0054 9B8787FF 		addiw	a5,a5,-8
 100              	.LVL2:
 101              		.loc 1 27 5
 102 0058 13071000 		li	a4,1
 103 005c 6372F702 		bleu	a5,a4,.L25
 104              	.LVL3:
 105              	.L3:
 106              	.LBE142:
  28:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  29:src/Riscv.cpp **** 
GAS LISTING /tmp/ccsvpkDT.s 			page 5


  30:src/Riscv.cpp ****         //call from yield
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp ****         if(a0reg==0x11){
  33:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  34:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp ****             _thread::thread_t *arg1;
  38:src/Riscv.cpp ****             _thread::Body arg2;
  39:src/Riscv.cpp ****             uint64 arg3;
  40:src/Riscv.cpp ****             uint64 *arg4;
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  44:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  45:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  51:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  54:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  55:src/Riscv.cpp ****             *arg1=t;
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp ****             uint64 ret;
  58:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  59:src/Riscv.cpp ****             else ret =-1;
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp ****             //return _thread* adress through a0
  63:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             w_sstatus(sstatus);
  66:src/Riscv.cpp ****             w_sepc(sepc);
  67:src/Riscv.cpp ****         }
  68:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  69:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  70:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  71:src/Riscv.cpp ****             //kmem_alloc
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  73:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             //write return value to a0 register
  76:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  77:src/Riscv.cpp **** 
  78:src/Riscv.cpp ****             w_sstatus(sstatus);
  79:src/Riscv.cpp ****             w_sepc(sepc);
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp ****         else if(a0reg==0x02){
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  86:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
GAS LISTING /tmp/ccsvpkDT.s 			page 6


  87:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             w_sstatus(sstatus);
  90:src/Riscv.cpp ****             w_sepc(sepc);
  91:src/Riscv.cpp ****         }
  92:src/Riscv.cpp **** 
  93:src/Riscv.cpp ****         else if(a0reg==0x12){
  94:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****             _thread::running->finished=true;
  98:src/Riscv.cpp ****             _thread::dispatch();
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             w_sstatus(sstatus);
 101:src/Riscv.cpp ****             w_sepc(sepc);
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****         }
 105:src/Riscv.cpp ****         else if(a0reg == 0x13){
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 121:src/Riscv.cpp ****             _thread::dispatch();
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             w_sstatus(sstatus);
 124:src/Riscv.cpp ****             w_sepc(sepc);
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         else if(a0reg==0x21){
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 131:src/Riscv.cpp ****            uint64 arg2;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 140:src/Riscv.cpp ****             *arg1=sem;
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 ret=0;
 143:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
GAS LISTING /tmp/ccsvpkDT.s 			page 7


 144:src/Riscv.cpp ****             else ret=-1;
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             w_sstatus(sstatus);
 149:src/Riscv.cpp ****             w_sepc(sepc);
 150:src/Riscv.cpp ****         }
 151:src/Riscv.cpp ****         else if(a0reg==0x22){
 152:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 154:src/Riscv.cpp **** 
 155:src/Riscv.cpp ****             KSemaphore::sem_t *arg1; //handle
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             KSemaphore* sem = *arg1;
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 165:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 167:src/Riscv.cpp ****                 t->deblocked=true;
 168:src/Riscv.cpp ****                 sem->val++;
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 170:src/Riscv.cpp ****             }
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             delete sem;
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             w_sstatus(sstatus);
 175:src/Riscv.cpp ****             w_sepc(sepc);
 176:src/Riscv.cpp ****         }
 177:src/Riscv.cpp ****         else if(a0reg==0x23){
 178:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             w_sstatus(sstatus);
 194:src/Riscv.cpp ****             w_sepc(sepc);
 195:src/Riscv.cpp ****         }
 196:src/Riscv.cpp ****         else if(a0reg==0x24){
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
GAS LISTING /tmp/ccsvpkDT.s 			page 8


 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****             arg1->signal();
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****             uint64 ret = 0;
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x41){
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             //call method from kernel Console class
 221:src/Riscv.cpp ****             char c = KConsole::getc();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             w_sstatus(sstatus);
 227:src/Riscv.cpp ****             w_sepc(sepc);
 228:src/Riscv.cpp ****         }
 229:src/Riscv.cpp ****         else if(a0reg==0x42){
 230:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 231:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****             char c;
 234:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             KConsole::putc(c);
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             w_sstatus(sstatus);
 241:src/Riscv.cpp ****             w_sepc(sepc);
 242:src/Riscv.cpp ****         }
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****     }
 246:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 247:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****     }
 250:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 251:src/Riscv.cpp ****     {
 252:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp ****     }
 255:src/Riscv.cpp ****     else{
 256:src/Riscv.cpp ****         // unexpected trap cause
 257:src/Riscv.cpp ****         //print(scause)
GAS LISTING /tmp/ccsvpkDT.s 			page 9


 258:src/Riscv.cpp ****         //print(sepc)
 259:src/Riscv.cpp ****         //print(stval) //trap value
 260:src/Riscv.cpp **** 
 261:src/Riscv.cpp ****     }
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp **** }
 107              		.loc 1 263 1
 108 0060 8330810F 		ld	ra,248(sp)
 109              		.cfi_remember_state
 110              		.cfi_restore 1
 111 0064 0334010F 		ld	s0,240(sp)
 112              		.cfi_restore 8
 113              		.cfi_def_cfa 2, 256
 114 0068 8334810E 		ld	s1,232(sp)
 115              		.cfi_restore 9
 116 006c 0339010E 		ld	s2,224(sp)
 117              		.cfi_restore 18
 118 0070 8339810D 		ld	s3,216(sp)
 119              		.cfi_restore 19
 120 0074 033A010D 		ld	s4,208(sp)
 121              		.cfi_restore 20
 122 0078 13010110 		addi	sp,sp,256
 123              		.cfi_def_cfa_offset 0
 124 007c 67800000 		jr	ra
 125              	.LVL4:
 126              	.L25:
 127              		.cfi_restore_state
  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128              		.loc 1 32 9 is_stmt 1
 129              	.LBB341:
 130              	.LBB143:
 131 0080 93071001 		li	a5,17
 132 0084 638CF408 		beq	s1,a5,.L26
 133              	.L5:
 134              	.LBE143:
 135              	.LBE341:
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 136              		.loc 1 68 9
 137              	.LBB342:
 138              	.LBB153:
 139 0088 93071000 		li	a5,1
 140 008c 638CF40E 		beq	s1,a5,.L27
 141              	.LBE153:
 142              	.LBE342:
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 143              		.loc 1 81 14
 144              	.LBB343:
 145              	.LBB329:
 146              	.LBB154:
 147 0090 93072000 		li	a5,2
 148 0094 6386F412 		beq	s1,a5,.L28
 149              	.LBE154:
 150              	.LBE329:
 151              	.LBE343:
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 152              		.loc 1 93 14
 153              	.LBB344:
GAS LISTING /tmp/ccsvpkDT.s 			page 10


 154              	.LBB330:
 155              	.LBB310:
 156              	.LBB155:
 157 0098 93072001 		li	a5,18
 158 009c 638EF414 		beq	s1,a5,.L29
 159              	.LBE155:
 160              	.LBE310:
 161              	.LBE330:
 162              	.LBE344:
 105:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 163              		.loc 1 105 14
 164              	.LBB345:
 165              	.LBB331:
 166              	.LBB311:
 167              	.LBB292:
 168              	.LBB156:
 169 00a0 93073001 		li	a5,19
 170 00a4 638CF418 		beq	s1,a5,.L30
 171              	.LBE156:
 172              	.LBE292:
 173              	.LBE311:
 174              	.LBE331:
 175              	.LBE345:
 116:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 176              		.loc 1 116 14
 177              	.LBB346:
 178              	.LBB332:
 179              	.LBB312:
 180              	.LBB293:
 181              	.LBB275:
 182              	.LBB157:
 183 00a8 93074000 		li	a5,4
 184 00ac 6380F41C 		beq	s1,a5,.L31
 185              	.LBE157:
 186              	.LBE275:
 187              	.LBE293:
 188              	.LBE312:
 189              	.LBE332:
 190              	.LBE346:
 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 191              		.loc 1 126 14
 192              	.LBB347:
 193              	.LBB333:
 194              	.LBB313:
 195              	.LBB294:
 196              	.LBB276:
 197              	.LBB259:
 198              	.LBB158:
 199 00b0 93071002 		li	a5,33
 200 00b4 638AF41E 		beq	s1,a5,.L32
 201              	.LBE158:
 202              	.LBE259:
 203              	.LBE276:
 204              	.LBE294:
 205              	.LBE313:
 206              	.LBE333:
 207              	.LBE347:
GAS LISTING /tmp/ccsvpkDT.s 			page 11


 151:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 208              		.loc 1 151 14
 209              	.LBB348:
 210              	.LBB334:
 211              	.LBB314:
 212              	.LBB295:
 213              	.LBB277:
 214              	.LBB260:
 215              	.LBB244:
 216              	.LBB159:
 217 00b8 93072002 		li	a5,34
 218 00bc 638AF424 		beq	s1,a5,.L33
 219              	.LBE159:
 220              	.LBE244:
 221              	.LBE260:
 222              	.LBE277:
 223              	.LBE295:
 224              	.LBE314:
 225              	.LBE334:
 226              	.LBE348:
 177:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 227              		.loc 1 177 14
 228              	.LBB349:
 229              	.LBB335:
 230              	.LBB315:
 231              	.LBB296:
 232              	.LBB278:
 233              	.LBB261:
 234              	.LBB245:
 235              	.LBB226:
 236              	.LBB160:
 237 00c0 93073002 		li	a5,35
 238 00c4 6382F42E 		beq	s1,a5,.L34
 239              	.LBE160:
 240              	.LBE226:
 241              	.LBE245:
 242              	.LBE261:
 243              	.LBE278:
 244              	.LBE296:
 245              	.LBE315:
 246              	.LBE335:
 247              	.LBE349:
 196:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 248              		.loc 1 196 14
 249              	.LBB350:
 250              	.LBB336:
 251              	.LBB316:
 252              	.LBB297:
 253              	.LBB279:
 254              	.LBB262:
 255              	.LBB246:
 256              	.LBB227:
 257              	.LBB205:
 258              	.LBB161:
 259 00c8 93074002 		li	a5,36
 260 00cc 638CF430 		beq	s1,a5,.L35
 261              	.LBE161:
GAS LISTING /tmp/ccsvpkDT.s 			page 12


 262              	.LBE205:
 263              	.LBE227:
 264              	.LBE246:
 265              	.LBE262:
 266              	.LBE279:
 267              	.LBE297:
 268              	.LBE316:
 269              	.LBE336:
 270              	.LBE350:
 216:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 271              		.loc 1 216 14
 272              	.LBB351:
 273              	.LBB337:
 274              	.LBB317:
 275              	.LBB298:
 276              	.LBB280:
 277              	.LBB263:
 278              	.LBB247:
 279              	.LBB228:
 280              	.LBB206:
 281              	.LBB193:
 282              	.LBB162:
 283 00d0 93071004 		li	a5,65
 284 00d4 6388F434 		beq	s1,a5,.L36
 285              	.LBE162:
 286              	.LBE193:
 287              	.LBE206:
 288              	.LBE228:
 289              	.LBE247:
 290              	.LBE263:
 291              	.LBE280:
 292              	.LBE298:
 293              	.LBE317:
 294              	.LBE337:
 295              	.LBE351:
 229:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 296              		.loc 1 229 14
 297              	.LBB352:
 298              	.LBB338:
 299              	.LBB318:
 300              	.LBB299:
 301              	.LBB281:
 302              	.LBB264:
 303              	.LBB248:
 304              	.LBB229:
 305              	.LBB207:
 306              	.LBB194:
 307              	.LBB182:
 308              	.LBB163:
 309 00d8 93072004 		li	a5,66
 310 00dc E392F4F8 		bne	s1,a5,.L3
 311              	.LBB164:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 312              		.loc 1 230 13
 313              	.LBB165:
 314              	.LBB166:
  97:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccsvpkDT.s 			page 13


  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 315              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 316              		.loc 2 107 5
 317              		.loc 2 107 64 is_stmt 0
 318              	#APP
 319              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 320              		csrr a5, sepc
 321              	# 0 "" 2
 322              	#NO_APP
 323 00e4 2334F4FC 		sd	a5,-56(s0)
 324              		.loc 2 108 5 is_stmt 1
 325              		.loc 2 108 12 is_stmt 0
 326 00e8 833484FC 		ld	s1,-56(s0)
 327              	.LVL5:
 328              	.LBE166:
 329              	.LBE165:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 330              		.loc 1 230 38
 331 00ec 93844400 		addi	s1,s1,4
 332              	.LVL6:
 231:src/Riscv.cpp **** 
 333              		.loc 1 231 13 is_stmt 1
 334              	.LBB167:
 335              	.LBB168:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
GAS LISTING /tmp/ccsvpkDT.s 			page 14


 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 336              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 337              		.loc 2 177 5
 338              		.loc 2 177 76 is_stmt 0
 339              	#APP
 340              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 341              		csrr a5, sstatus
 342              	# 0 "" 2
 343              	#NO_APP
 344 00f4 2330F4FC 		sd	a5,-64(s0)
 345              		.loc 2 178 5 is_stmt 1
GAS LISTING /tmp/ccsvpkDT.s 			page 15


 346              		.loc 2 178 12 is_stmt 0
 347 00f8 033904FC 		ld	s2,-64(s0)
 348              	.LVL7:
 349              	.LBE168:
 350              	.LBE167:
 233:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 351              		.loc 1 233 13 is_stmt 1
 234:src/Riscv.cpp **** 
 352              		.loc 1 234 13
 234:src/Riscv.cpp **** 
 353              		.loc 1 234 48 is_stmt 0
 354              	#APP
 355              	# 234 "src/Riscv.cpp" 1
 236:src/Riscv.cpp **** 
 356              		ld a1, 11*8(fp)
 357              	# 0 "" 2
 358              		.loc 1 236 13 is_stmt 1
 236:src/Riscv.cpp **** 
 359              		.loc 1 236 53 is_stmt 0
 360              	# 236 "src/Riscv.cpp" 1
 361              		mv a0, a1
 362              	# 0 "" 2
 363              	.LVL8:
 238:src/Riscv.cpp **** 
 364              		.loc 1 238 13 is_stmt 1
 238:src/Riscv.cpp **** 
 365              		.loc 1 238 27 is_stmt 0
 366              	#NO_APP
 367 0104 1375F50F 		andi	a0,a0,0xff
 368 0108 97000000 		call	_ZN8KConsole4putcEc@plt
 368      E7800000 
 369              	.LVL9:
 240:src/Riscv.cpp ****             w_sepc(sepc);
 370              		.loc 1 240 13 is_stmt 1
 371              	.LBB169:
 372              	.LBB170:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 373              		.loc 2 183 5
 374              		.loc 2 183 77 is_stmt 0
 375              	#APP
 376              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 377              		csrw sstatus, s2
 378              	# 0 "" 2
 379              	.LVL10:
 380              	#NO_APP
 381              	.LBE170:
 382              	.LBE169:
 241:src/Riscv.cpp ****         }
 383              		.loc 1 241 13 is_stmt 1
 384              	.LBB171:
 385              	.LBB172:
 113:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccsvpkDT.s 			page 16


 386              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 387              		.loc 2 113 65 is_stmt 0
 388              	#APP
 389              	# 113 "src/../h/Riscv.hpp" 1
 390              		csrw sepc, s1
 391              	# 0 "" 2
 392              	.LVL11:
 393              	#NO_APP
 394              	.LBE172:
 395              	.LBE171:
 396              	.LBE164:
 397              	.LBE163:
 398              	.LBE182:
 399              	.LBE194:
 400              	.LBE207:
 401              	.LBE229:
 402              	.LBE248:
 403              	.LBE264:
 404              	.LBE281:
 405              	.LBE299:
 406              	.LBE318:
 407              	.LBE338:
 246:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 408              		.loc 1 246 10 is_stmt 1
 250:src/Riscv.cpp ****     {
 409              		.loc 1 250 10
 410              	.LBE352:
 411              		.loc 1 263 1 is_stmt 0
 412 0118 6FF09FF4 		j	.L3
 413              	.LVL12:
 414              	.L26:
 415              	.LBB353:
 416              	.LBB339:
 417              	.LBB144:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 418              		.loc 1 33 13 is_stmt 1
 419              	.LBB145:
 420              	.LBB146:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 421              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 422              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 423              		.loc 2 107 64 is_stmt 0
 424              	#APP
 425              	# 107 "src/../h/Riscv.hpp" 1
 426              		csrr a5, sepc
 427              	# 0 "" 2
 428              	#NO_APP
 429 0120 233CF4F0 		sd	a5,-232(s0)
 108:src/../h/Riscv.hpp **** }
 430              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 431              		.loc 2 108 12 is_stmt 0
 432 0124 033984F1 		ld	s2,-232(s0)
 433              	.LBE146:
GAS LISTING /tmp/ccsvpkDT.s 			page 17


 434              	.LBE145:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 435              		.loc 1 33 38
 436 0128 13094900 		addi	s2,s2,4
 437              	.LVL13:
  34:src/Riscv.cpp **** 
 438              		.loc 1 34 13 is_stmt 1
 439              	.LBB147:
 440              	.LBB148:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 441              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 442              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 443              		.loc 2 177 76 is_stmt 0
 444              	#APP
 445              	# 177 "src/../h/Riscv.hpp" 1
 446              		csrr a5, sstatus
 447              	# 0 "" 2
 448              	#NO_APP
 449 0130 2338F4F0 		sd	a5,-240(s0)
 178:src/../h/Riscv.hpp **** }
 450              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 451              		.loc 2 178 12 is_stmt 0
 452 0134 833904F1 		ld	s3,-240(s0)
 453              	.LVL14:
 454              	.LBE148:
 455              	.LBE147:
  37:src/Riscv.cpp ****             _thread::Body arg2;
 456              		.loc 1 37 13 is_stmt 1
  38:src/Riscv.cpp ****             uint64 arg3;
 457              		.loc 1 38 13
  39:src/Riscv.cpp ****             uint64 *arg4;
 458              		.loc 1 39 13
  40:src/Riscv.cpp **** 
 459              		.loc 1 40 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 460              		.loc 1 42 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 461              		.loc 1 42 48 is_stmt 0
 462              	#APP
 463              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 464              		ld a1, 11*8(fp)
 465              	# 0 "" 2
 466              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 467              		.loc 1 43 48 is_stmt 0
 468              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 469              		ld a2, 12*8(fp)
 470              	# 0 "" 2
 471              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 472              		.loc 1 44 48 is_stmt 0
 473              	# 44 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccsvpkDT.s 			page 18


  45:src/Riscv.cpp **** 
 474              		ld a3, 13*8(fp)
 475              	# 0 "" 2
 476              		.loc 1 45 13 is_stmt 1
  45:src/Riscv.cpp **** 
 477              		.loc 1 45 48 is_stmt 0
 478              	# 45 "src/Riscv.cpp" 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 479              		ld a4, 14*8(fp)
 480              	# 0 "" 2
 481              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 482              		.loc 1 48 56 is_stmt 0
 483              	# 48 "src/Riscv.cpp" 1
 484              		mv s4, a1
 485              	# 0 "" 2
 486              	.LVL15:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 487              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 488              		.loc 1 49 56 is_stmt 0
 489              	# 49 "src/Riscv.cpp" 1
 490              		mv a0, a2
 491              	# 0 "" 2
 492              	.LVL16:
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 493              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 494              		.loc 1 50 56 is_stmt 0
 495              	# 50 "src/Riscv.cpp" 1
 496              		mv a1, a3
 497              	# 0 "" 2
 498              	.LVL17:
  51:src/Riscv.cpp **** 
 499              		.loc 1 51 13 is_stmt 1
  51:src/Riscv.cpp **** 
 500              		.loc 1 51 56 is_stmt 0
 501              	# 51 "src/Riscv.cpp" 1
 502              		mv a2, a4
 503              	# 0 "" 2
 504              	.LVL18:
  54:src/Riscv.cpp ****             *arg1=t;
 505              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp ****             *arg1=t;
 506              		.loc 1 54 47 is_stmt 0
 507              	#NO_APP
 508 0158 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 508      E7800000 
 509              	.LVL19:
  55:src/Riscv.cpp **** 
 510              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp **** 
 511              		.loc 1 55 18 is_stmt 0
 512 0160 2330AA00 		sd	a0,0(s4)
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 513              		.loc 1 57 13 is_stmt 1
  58:src/Riscv.cpp ****             else ret =-1;
GAS LISTING /tmp/ccsvpkDT.s 			page 19


 514              		.loc 1 58 13
 515 0164 630C0500 		beqz	a0,.L22
  58:src/Riscv.cpp ****             else ret =-1;
 516              		.loc 1 58 31 is_stmt 0
 517 0168 93070000 		li	a5,0
 518              	.L6:
 519              	.LVL20:
  63:src/Riscv.cpp **** 
 520              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp **** 
 521              		.loc 1 63 56 is_stmt 0
 522              	#APP
 523              	# 63 "src/Riscv.cpp" 1
  65:src/Riscv.cpp ****             w_sepc(sepc);
 524              		mv a0, a5
 525              	# 0 "" 2
 526              		.loc 1 65 13 is_stmt 1
 527              	.LVL21:
 528              	#NO_APP
 529              	.LBB149:
 530              	.LBB150:
 183:src/../h/Riscv.hpp **** }
 531              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 532              		.loc 2 183 77 is_stmt 0
 533              	#APP
 534              	# 183 "src/../h/Riscv.hpp" 1
 535              		csrw sstatus, s3
 536              	# 0 "" 2
 537              	.LVL22:
 538              	#NO_APP
 539              	.LBE150:
 540              	.LBE149:
  66:src/Riscv.cpp ****         }
 541              		.loc 1 66 13 is_stmt 1
 542              	.LBB151:
 543              	.LBB152:
 113:src/../h/Riscv.hpp **** }
 544              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 545              		.loc 2 113 65 is_stmt 0
 546              	#APP
 547              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 548              		csrw sepc, s2
 549              	# 0 "" 2
 550              		.loc 2 114 1
 551              	#NO_APP
 552 0178 6FF01FF1 		j	.L5
 553              	.LVL23:
 554              	.L22:
 555              	.LBE152:
 556              	.LBE151:
  59:src/Riscv.cpp **** 
 557              		.loc 1 59 22
 558 017c 9307F0FF 		li	a5,-1
 559 0180 6FF0DFFE 		j	.L6
GAS LISTING /tmp/ccsvpkDT.s 			page 20


 560              	.LVL24:
 561              	.L27:
 562              	.LBE144:
 563              	.LBE339:
 564              	.LBB340:
 565              	.LBB319:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 566              		.loc 1 69 13 is_stmt 1
 567              	.LBB320:
 568              	.LBB321:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 569              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 570              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 571              		.loc 2 107 64 is_stmt 0
 572              	#APP
 573              	# 107 "src/../h/Riscv.hpp" 1
 574              		csrr a5, sepc
 575              	# 0 "" 2
 576              	#NO_APP
 577 0188 2334F4F2 		sd	a5,-216(s0)
 108:src/../h/Riscv.hpp **** }
 578              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 579              		.loc 2 108 12 is_stmt 0
 580 018c 833484F2 		ld	s1,-216(s0)
 581              	.LVL25:
 582              	.LBE321:
 583              	.LBE320:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 584              		.loc 1 69 38
 585 0190 93844400 		addi	s1,s1,4
 586              	.LVL26:
  70:src/Riscv.cpp ****             //kmem_alloc
 587              		.loc 1 70 13 is_stmt 1
 588              	.LBB322:
 589              	.LBB323:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 590              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 591              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 592              		.loc 2 177 76 is_stmt 0
 593              	#APP
 594              	# 177 "src/../h/Riscv.hpp" 1
 595              		csrr a5, sstatus
 596              	# 0 "" 2
 597              	#NO_APP
 598 0198 2330F4F2 		sd	a5,-224(s0)
 178:src/../h/Riscv.hpp **** }
 599              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 600              		.loc 2 178 12 is_stmt 0
 601 019c 033904F2 		ld	s2,-224(s0)
 602              	.LVL27:
 603              	.LBE323:
GAS LISTING /tmp/ccsvpkDT.s 			page 21


 604              	.LBE322:
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 605              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 606              		.loc 1 72 56 is_stmt 0
 607              	#APP
 608              	# 72 "src/Riscv.cpp" 1
 609              		mv a0, a1
 610              	# 0 "" 2
 611              	.LVL28:
  73:src/Riscv.cpp **** 
 612              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp **** 
 613              		.loc 1 73 61 is_stmt 0
 614              	#NO_APP
 615 01a4 13156500 		slli	a0,a0,6
 616              	.LVL29:
 617 01a8 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 617      E7800000 
 618              	.LVL30:
  76:src/Riscv.cpp **** 
 619              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp **** 
 620              		.loc 1 76 56 is_stmt 0
 621              	#APP
 622              	# 76 "src/Riscv.cpp" 1
  78:src/Riscv.cpp ****             w_sepc(sepc);
 623              		mv a0, a0
 624              	# 0 "" 2
 625              		.loc 1 78 13 is_stmt 1
 626              	.LVL31:
 627              	#NO_APP
 628              	.LBB324:
 629              	.LBB325:
 183:src/../h/Riscv.hpp **** }
 630              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 631              		.loc 2 183 77 is_stmt 0
 632              	#APP
 633              	# 183 "src/../h/Riscv.hpp" 1
 634              		csrw sstatus, s2
 635              	# 0 "" 2
 636              	.LVL32:
 637              	#NO_APP
 638              	.LBE325:
 639              	.LBE324:
  79:src/Riscv.cpp ****         }
 640              		.loc 1 79 13 is_stmt 1
 641              	.LBB326:
 642              	.LBB327:
 113:src/../h/Riscv.hpp **** }
 643              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 644              		.loc 2 113 65 is_stmt 0
 645              	#APP
 646              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccsvpkDT.s 			page 22


 647              		csrw sepc, s1
 648              	# 0 "" 2
 649              		.loc 2 114 1
 650              	#NO_APP
 651 01bc 6FF05FEA 		j	.L3
 652              	.LVL33:
 653              	.L28:
 654              	.LBE327:
 655              	.LBE326:
 656              	.LBE319:
 657              	.LBB328:
 658              	.LBB300:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 659              		.loc 1 82 13 is_stmt 1
 660              	.LBB301:
 661              	.LBB302:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 662              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 663              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 664              		.loc 2 107 64 is_stmt 0
 665              	#APP
 666              	# 107 "src/../h/Riscv.hpp" 1
 667              		csrr a5, sepc
 668              	# 0 "" 2
 669              	#NO_APP
 670 01c4 233CF4F2 		sd	a5,-200(s0)
 108:src/../h/Riscv.hpp **** }
 671              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 672              		.loc 2 108 12 is_stmt 0
 673 01c8 833484F3 		ld	s1,-200(s0)
 674              	.LVL34:
 675              	.LBE302:
 676              	.LBE301:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 677              		.loc 1 82 38
 678 01cc 93844400 		addi	s1,s1,4
 679              	.LVL35:
  83:src/Riscv.cpp **** 
 680              		.loc 1 83 13 is_stmt 1
 681              	.LBB303:
 682              	.LBB304:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 683              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 684              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 685              		.loc 2 177 76 is_stmt 0
 686              	#APP
 687              	# 177 "src/../h/Riscv.hpp" 1
 688              		csrr a5, sstatus
 689              	# 0 "" 2
 690              	#NO_APP
 691 01d4 2338F4F2 		sd	a5,-208(s0)
 178:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccsvpkDT.s 			page 23


 692              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 693              		.loc 2 178 12 is_stmt 0
 694 01d8 033904F3 		ld	s2,-208(s0)
 695              	.LVL36:
 696              	.LBE304:
 697              	.LBE303:
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 698              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 699              		.loc 1 85 56 is_stmt 0
 700              	#APP
 701              	# 85 "src/Riscv.cpp" 1
 702              		mv a0, a1
 703              	# 0 "" 2
 704              	.LVL37:
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 705              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 706              		.loc 1 86 49 is_stmt 0
 707              	#NO_APP
 708 01e0 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 708      E7800000 
 709              	.LVL38:
  87:src/Riscv.cpp **** 
 710              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 711              		.loc 1 87 56 is_stmt 0
 712              	#APP
 713              	# 87 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****             w_sepc(sepc);
 714              		mv a0, a0
 715              	# 0 "" 2
 716              		.loc 1 89 13 is_stmt 1
 717              	.LVL39:
 718              	#NO_APP
 719              	.LBB305:
 720              	.LBB306:
 183:src/../h/Riscv.hpp **** }
 721              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 722              		.loc 2 183 77 is_stmt 0
 723              	#APP
 724              	# 183 "src/../h/Riscv.hpp" 1
 725              		csrw sstatus, s2
 726              	# 0 "" 2
 727              	.LVL40:
 728              	#NO_APP
 729              	.LBE306:
 730              	.LBE305:
  90:src/Riscv.cpp ****         }
 731              		.loc 1 90 13 is_stmt 1
 732              	.LBB307:
 733              	.LBB308:
 113:src/../h/Riscv.hpp **** }
 734              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccsvpkDT.s 			page 24


 735              		.loc 2 113 65 is_stmt 0
 736              	#APP
 737              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 738              		csrw sepc, s1
 739              	# 0 "" 2
 740              		.loc 2 114 1
 741              	#NO_APP
 742 01f4 6FF0DFE6 		j	.L3
 743              	.LVL41:
 744              	.L29:
 745              	.LBE308:
 746              	.LBE307:
 747              	.LBE300:
 748              	.LBB309:
 749              	.LBB282:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 750              		.loc 1 94 13 is_stmt 1
 751              	.LBB283:
 752              	.LBB284:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 753              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 754              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 755              		.loc 2 107 64 is_stmt 0
 756              	#APP
 757              	# 107 "src/../h/Riscv.hpp" 1
 758              		csrr a5, sepc
 759              	# 0 "" 2
 760              	#NO_APP
 761 01fc 2334F4F4 		sd	a5,-184(s0)
 108:src/../h/Riscv.hpp **** }
 762              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 763              		.loc 2 108 12 is_stmt 0
 764 0200 833484F4 		ld	s1,-184(s0)
 765              	.LVL42:
 766              	.LBE284:
 767              	.LBE283:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 768              		.loc 1 94 38
 769 0204 93844400 		addi	s1,s1,4
 770              	.LVL43:
  95:src/Riscv.cpp **** 
 771              		.loc 1 95 13 is_stmt 1
 772              	.LBB285:
 773              	.LBB286:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 774              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 775              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 776              		.loc 2 177 76 is_stmt 0
 777              	#APP
 778              	# 177 "src/../h/Riscv.hpp" 1
 779              		csrr a5, sstatus
GAS LISTING /tmp/ccsvpkDT.s 			page 25


 780              	# 0 "" 2
 781              	#NO_APP
 782 020c 2330F4F4 		sd	a5,-192(s0)
 178:src/../h/Riscv.hpp **** }
 783              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 784              		.loc 2 178 12 is_stmt 0
 785 0210 033904F4 		ld	s2,-192(s0)
 786              	.LVL44:
 787              	.LBE286:
 788              	.LBE285:
  97:src/Riscv.cpp ****             _thread::dispatch();
 789              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp ****             _thread::dispatch();
 790              		.loc 1 97 31 is_stmt 0
 791 0214 97070000 		la	a5,_ZN7_thread7runningE
 791      83B70700 
 792 021c 83B70700 		ld	a5,0(a5)
  97:src/Riscv.cpp ****             _thread::dispatch();
 793              		.loc 1 97 39
 794 0220 13071000 		li	a4,1
 795 0224 2384E702 		sb	a4,40(a5)
  98:src/Riscv.cpp **** 
 796              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp **** 
 797              		.loc 1 98 30 is_stmt 0
 798 0228 97000000 		call	_ZN7_thread8dispatchEv@plt
 798      E7800000 
 799              	.LVL45:
 100:src/Riscv.cpp ****             w_sepc(sepc);
 800              		.loc 1 100 13 is_stmt 1
 801              	.LBB287:
 802              	.LBB288:
 183:src/../h/Riscv.hpp **** }
 803              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 804              		.loc 2 183 77 is_stmt 0
 805              	#APP
 806              	# 183 "src/../h/Riscv.hpp" 1
 807              		csrw sstatus, s2
 808              	# 0 "" 2
 809              	.LVL46:
 810              	#NO_APP
 811              	.LBE288:
 812              	.LBE287:
 101:src/Riscv.cpp **** 
 813              		.loc 1 101 13 is_stmt 1
 814              	.LBB289:
 815              	.LBB290:
 113:src/../h/Riscv.hpp **** }
 816              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 817              		.loc 2 113 65 is_stmt 0
 818              	#APP
 819              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 820              		csrw sepc, s1
GAS LISTING /tmp/ccsvpkDT.s 			page 26


 821              	# 0 "" 2
 822              		.loc 2 114 1
 823              	#NO_APP
 824 0238 6FF09FE2 		j	.L3
 825              	.LVL47:
 826              	.L30:
 827              	.LBE290:
 828              	.LBE289:
 829              	.LBE282:
 830              	.LBB291:
 831              	.LBB265:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 832              		.loc 1 106 13 is_stmt 1
 833              	.LBB266:
 834              	.LBB267:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 835              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 836              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 837              		.loc 2 107 64 is_stmt 0
 838              	#APP
 839              	# 107 "src/../h/Riscv.hpp" 1
 840              		csrr a5, sepc
 841              	# 0 "" 2
 842              	#NO_APP
 843 0240 233CF4F4 		sd	a5,-168(s0)
 108:src/../h/Riscv.hpp **** }
 844              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 845              		.loc 2 108 12 is_stmt 0
 846 0244 833484F5 		ld	s1,-168(s0)
 847              	.LVL48:
 848              	.LBE267:
 849              	.LBE266:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 850              		.loc 1 106 38
 851 0248 93844400 		addi	s1,s1,4
 852              	.LVL49:
 107:src/Riscv.cpp **** 
 853              		.loc 1 107 13 is_stmt 1
 854              	.LBB268:
 855              	.LBB269:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 856              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 857              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 858              		.loc 2 177 76 is_stmt 0
 859              	#APP
 860              	# 177 "src/../h/Riscv.hpp" 1
 861              		csrr a5, sstatus
 862              	# 0 "" 2
 863              	#NO_APP
 864 0250 2338F4F4 		sd	a5,-176(s0)
 178:src/../h/Riscv.hpp **** }
 865              		.loc 2 178 5 is_stmt 1
GAS LISTING /tmp/ccsvpkDT.s 			page 27


 178:src/../h/Riscv.hpp **** }
 866              		.loc 2 178 12 is_stmt 0
 867 0254 033904F5 		ld	s2,-176(s0)
 868              	.LVL50:
 869              	.LBE269:
 870              	.LBE268:
 110:src/Riscv.cpp **** 
 871              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 872              		.loc 1 110 30 is_stmt 0
 873 0258 97000000 		call	_ZN7_thread8dispatchEv@plt
 873      E7800000 
 874              	.LVL51:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 875              		.loc 1 112 13 is_stmt 1
 876              	.LBB270:
 877              	.LBB271:
 183:src/../h/Riscv.hpp **** }
 878              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 879              		.loc 2 183 77 is_stmt 0
 880              	#APP
 881              	# 183 "src/../h/Riscv.hpp" 1
 882              		csrw sstatus, s2
 883              	# 0 "" 2
 884              	.LVL52:
 885              	#NO_APP
 886              	.LBE271:
 887              	.LBE270:
 113:src/Riscv.cpp ****         }
 888              		.loc 1 113 13 is_stmt 1
 889              	.LBB272:
 890              	.LBB273:
 113:src/../h/Riscv.hpp **** }
 891              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 892              		.loc 2 113 65 is_stmt 0
 893              	#APP
 894              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 895              		csrw sepc, s1
 896              	# 0 "" 2
 897              		.loc 2 114 1
 898              	#NO_APP
 899 0268 6FF09FDF 		j	.L3
 900              	.LVL53:
 901              	.L31:
 902              	.LBE273:
 903              	.LBE272:
 904              	.LBE265:
 905              	.LBB274:
 906              	.LBB249:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 907              		.loc 1 117 13 is_stmt 1
 908              	.LBB250:
 909              	.LBB251:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccsvpkDT.s 			page 28


 910              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 911              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 912              		.loc 2 107 64 is_stmt 0
 913              	#APP
 914              	# 107 "src/../h/Riscv.hpp" 1
 915              		csrr a5, sepc
 916              	# 0 "" 2
 917              	#NO_APP
 918 0270 2334F4F6 		sd	a5,-152(s0)
 108:src/../h/Riscv.hpp **** }
 919              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 920              		.loc 2 108 12 is_stmt 0
 921 0274 833484F6 		ld	s1,-152(s0)
 922              	.LVL54:
 923              	.LBE251:
 924              	.LBE250:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 925              		.loc 1 117 38
 926 0278 93844400 		addi	s1,s1,4
 927              	.LVL55:
 118:src/Riscv.cpp **** 
 928              		.loc 1 118 13 is_stmt 1
 929              	.LBB252:
 930              	.LBB253:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 931              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 932              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 933              		.loc 2 177 76 is_stmt 0
 934              	#APP
 935              	# 177 "src/../h/Riscv.hpp" 1
 936              		csrr a5, sstatus
 937              	# 0 "" 2
 938              	#NO_APP
 939 0280 2330F4F6 		sd	a5,-160(s0)
 178:src/../h/Riscv.hpp **** }
 940              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 941              		.loc 2 178 12 is_stmt 0
 942 0284 033904F6 		ld	s2,-160(s0)
 943              	.LVL56:
 944              	.LBE253:
 945              	.LBE252:
 120:src/Riscv.cpp ****             _thread::dispatch();
 946              		.loc 1 120 13 is_stmt 1
 120:src/Riscv.cpp ****             _thread::dispatch();
 947              		.loc 1 120 39 is_stmt 0
 948 0288 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 948      83B70700 
 949 0290 23B00700 		sd	zero,0(a5)
 121:src/Riscv.cpp **** 
 950              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp **** 
GAS LISTING /tmp/ccsvpkDT.s 			page 29


 951              		.loc 1 121 30 is_stmt 0
 952 0294 97000000 		call	_ZN7_thread8dispatchEv@plt
 952      E7800000 
 953              	.LVL57:
 123:src/Riscv.cpp ****             w_sepc(sepc);
 954              		.loc 1 123 13 is_stmt 1
 955              	.LBB254:
 956              	.LBB255:
 183:src/../h/Riscv.hpp **** }
 957              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 958              		.loc 2 183 77 is_stmt 0
 959              	#APP
 960              	# 183 "src/../h/Riscv.hpp" 1
 961              		csrw sstatus, s2
 962              	# 0 "" 2
 963              	.LVL58:
 964              	#NO_APP
 965              	.LBE255:
 966              	.LBE254:
 124:src/Riscv.cpp ****         }
 967              		.loc 1 124 13 is_stmt 1
 968              	.LBB256:
 969              	.LBB257:
 113:src/../h/Riscv.hpp **** }
 970              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 971              		.loc 2 113 65 is_stmt 0
 972              	#APP
 973              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 974              		csrw sepc, s1
 975              	# 0 "" 2
 976              		.loc 2 114 1
 977              	#NO_APP
 978 02a4 6FF0DFDB 		j	.L3
 979              	.LVL59:
 980              	.L32:
 981              	.LBE257:
 982              	.LBE256:
 983              	.LBE249:
 984              	.LBB258:
 985              	.LBB230:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 986              		.loc 1 127 13 is_stmt 1
 987              	.LBB231:
 988              	.LBB232:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 989              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 990              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 991              		.loc 2 107 64 is_stmt 0
 992              	#APP
 993              	# 107 "src/../h/Riscv.hpp" 1
 994              		csrr a5, sepc
 995              	# 0 "" 2
GAS LISTING /tmp/ccsvpkDT.s 			page 30


 996              	#NO_APP
 997 02ac 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/Riscv.hpp **** }
 998              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 999              		.loc 2 108 12 is_stmt 0
 1000 02b0 833484F7 		ld	s1,-136(s0)
 1001              	.LVL60:
 1002              	.LBE232:
 1003              	.LBE231:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1004              		.loc 1 127 38
 1005 02b4 93844400 		addi	s1,s1,4
 1006              	.LVL61:
 128:src/Riscv.cpp **** 
 1007              		.loc 1 128 13 is_stmt 1
 1008              	.LBB233:
 1009              	.LBB234:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1010              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1011              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1012              		.loc 2 177 76 is_stmt 0
 1013              	#APP
 1014              	# 177 "src/../h/Riscv.hpp" 1
 1015              		csrr a5, sstatus
 1016              	# 0 "" 2
 1017              	#NO_APP
 1018 02bc 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/Riscv.hpp **** }
 1019              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1020              		.loc 2 178 12 is_stmt 0
 1021 02c0 033904F7 		ld	s2,-144(s0)
 1022              	.LVL62:
 1023              	.LBE234:
 1024              	.LBE233:
 130:src/Riscv.cpp ****            uint64 arg2;
 1025              		.loc 1 130 12 is_stmt 1
 131:src/Riscv.cpp **** 
 1026              		.loc 1 131 12
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1027              		.loc 1 133 13
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1028              		.loc 1 133 48 is_stmt 0
 1029              	#APP
 1030              	# 133 "src/Riscv.cpp" 1
 134:src/Riscv.cpp **** 
 1031              		ld a1, 11*8(fp)
 1032              	# 0 "" 2
 1033              		.loc 1 134 13 is_stmt 1
 134:src/Riscv.cpp **** 
 1034              		.loc 1 134 48 is_stmt 0
 1035              	# 134 "src/Riscv.cpp" 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1036              		ld a2, 12*8(fp)
GAS LISTING /tmp/ccsvpkDT.s 			page 31


 1037              	# 0 "" 2
 1038              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1039              		.loc 1 136 56 is_stmt 0
 1040              	# 136 "src/Riscv.cpp" 1
 1041              		mv s3, a1
 1042              	# 0 "" 2
 1043              	.LVL63:
 137:src/Riscv.cpp **** 
 1044              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp **** 
 1045              		.loc 1 137 56 is_stmt 0
 1046              	# 137 "src/Riscv.cpp" 1
 1047              		mv s4, a2
 1048              	# 0 "" 2
 1049              	.LVL64:
 139:src/Riscv.cpp ****             *arg1=sem;
 1050              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp ****             *arg1=sem;
 1051              		.loc 1 139 50 is_stmt 0
 1052              	#NO_APP
 1053 02d4 13058001 		li	a0,24
 1054 02d8 97000000 		call	_ZN10KSemaphorenwEm@plt
 1054      E7800000 
 1055              	.LVL65:
 1056              	.LBB235:
 1057              	.LBB236:
 1058              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){}
 1059              		.loc 3 14 40
 1060 02e0 23204501 		sw	s4,0(a0)
 1061              	.LVL66:
 1062              	.LBB237:
 1063              	.LBB238:
 1064              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
GAS LISTING /tmp/ccsvpkDT.s 			page 32


  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1065              		.loc 4 26 29
 1066 02e4 23340500 		sd	zero,8(a0)
 1067 02e8 23380500 		sd	zero,16(a0)
 1068              	.LVL67:
 1069              	.LBE238:
 1070              	.LBE237:
 1071              	.LBE236:
 1072              	.LBE235:
 140:src/Riscv.cpp **** 
 1073              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp **** 
 1074              		.loc 1 140 18 is_stmt 0
 1075 02ec 23B0A900 		sd	a0,0(s3)
 142:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1076              		.loc 1 142 13 is_stmt 1
 1077              	.LVL68:
 143:src/Riscv.cpp ****             else ret=-1;
 1078              		.loc 1 143 13
 1079 02f0 630C0500 		beqz	a0,.L23
 143:src/Riscv.cpp ****             else ret=-1;
 1080              		.loc 1 143 33 is_stmt 0
 1081 02f4 93070000 		li	a5,0
 1082              	.L13:
 1083              	.LVL69:
 146:src/Riscv.cpp **** 
 1084              		.loc 1 146 13 is_stmt 1
 146:src/Riscv.cpp **** 
 1085              		.loc 1 146 56 is_stmt 0
 1086              	#APP
 1087              	# 146 "src/Riscv.cpp" 1
 148:src/Riscv.cpp ****             w_sepc(sepc);
 1088              		mv a0, a5
 1089              	# 0 "" 2
 1090              		.loc 1 148 13 is_stmt 1
 1091              	.LVL70:
 1092              	#NO_APP
 1093              	.LBB239:
 1094              	.LBB240:
 183:src/../h/Riscv.hpp **** }
 1095              		.loc 2 183 5
GAS LISTING /tmp/ccsvpkDT.s 			page 33


 183:src/../h/Riscv.hpp **** }
 1096              		.loc 2 183 77 is_stmt 0
 1097              	#APP
 1098              	# 183 "src/../h/Riscv.hpp" 1
 1099              		csrw sstatus, s2
 1100              	# 0 "" 2
 1101              	.LVL71:
 1102              	#NO_APP
 1103              	.LBE240:
 1104              	.LBE239:
 149:src/Riscv.cpp ****         }
 1105              		.loc 1 149 13 is_stmt 1
 1106              	.LBB241:
 1107              	.LBB242:
 113:src/../h/Riscv.hpp **** }
 1108              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1109              		.loc 2 113 65 is_stmt 0
 1110              	#APP
 1111              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1112              		csrw sepc, s1
 1113              	# 0 "" 2
 1114              		.loc 2 114 1
 1115              	#NO_APP
 1116 0304 6FF0DFD5 		j	.L3
 1117              	.LVL72:
 1118              	.L23:
 1119              	.LBE242:
 1120              	.LBE241:
 144:src/Riscv.cpp **** 
 1121              		.loc 1 144 21
 1122 0308 9307F0FF 		li	a5,-1
 1123 030c 6FF0DFFE 		j	.L13
 1124              	.LVL73:
 1125              	.L33:
 1126              	.LBE230:
 1127              	.LBB243:
 1128              	.LBB208:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1129              		.loc 1 152 13 is_stmt 1
 1130              	.LBB209:
 1131              	.LBB210:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1132              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1133              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1134              		.loc 2 107 64 is_stmt 0
 1135              	#APP
 1136              	# 107 "src/../h/Riscv.hpp" 1
 1137              		csrr a5, sepc
 1138              	# 0 "" 2
 1139              	#NO_APP
 1140 0314 2334F4F8 		sd	a5,-120(s0)
 108:src/../h/Riscv.hpp **** }
 1141              		.loc 2 108 5 is_stmt 1
GAS LISTING /tmp/ccsvpkDT.s 			page 34


 108:src/../h/Riscv.hpp **** }
 1142              		.loc 2 108 12 is_stmt 0
 1143 0318 833984F8 		ld	s3,-120(s0)
 1144              	.LBE210:
 1145              	.LBE209:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1146              		.loc 1 152 38
 1147 031c 93894900 		addi	s3,s3,4
 1148              	.LVL74:
 153:src/Riscv.cpp **** 
 1149              		.loc 1 153 13 is_stmt 1
 1150              	.LBB211:
 1151              	.LBB212:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1152              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1153              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1154              		.loc 2 177 76 is_stmt 0
 1155              	#APP
 1156              	# 177 "src/../h/Riscv.hpp" 1
 1157              		csrr a5, sstatus
 1158              	# 0 "" 2
 1159              	#NO_APP
 1160 0324 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/Riscv.hpp **** }
 1161              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1162              		.loc 2 178 12 is_stmt 0
 1163 0328 033A04F8 		ld	s4,-128(s0)
 1164              	.LVL75:
 1165              	.LBE212:
 1166              	.LBE211:
 155:src/Riscv.cpp **** 
 1167              		.loc 1 155 13 is_stmt 1
 158:src/Riscv.cpp **** 
 1168              		.loc 1 158 13
 158:src/Riscv.cpp **** 
 1169              		.loc 1 158 48 is_stmt 0
 1170              	#APP
 1171              	# 158 "src/Riscv.cpp" 1
 160:src/Riscv.cpp **** 
 1172              		ld a1, 11*8(fp)
 1173              	# 0 "" 2
 1174              		.loc 1 160 13 is_stmt 1
 160:src/Riscv.cpp **** 
 1175              		.loc 1 160 56 is_stmt 0
 1176              	# 160 "src/Riscv.cpp" 1
 1177              		mv a5, a1
 1178              	# 0 "" 2
 1179              	.LVL76:
 162:src/Riscv.cpp **** 
 1180              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1181              		.loc 1 162 25 is_stmt 0
 1182              	#NO_APP
 1183 0334 83B40700 		ld	s1,0(a5)
GAS LISTING /tmp/ccsvpkDT.s 			page 35


 1184              	.LVL77:
 1185 0338 6F000003 		j	.L17
 1186              	.LVL78:
 1187              	.L16:
 1188              	.LBB213:
 1189              	.LBB214:
 1190              	.LBB215:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1191              		.loc 4 72 12
 1192 033c 03390500 		ld	s2,0(a0)
 1193              	.LVL79:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
GAS LISTING /tmp/ccsvpkDT.s 			page 36


 1194              		.loc 4 73 35
 1195 0340 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1195      E7800000 
 1196              	.LVL80:
 1197              	.LBE215:
 1198              	.LBE214:
 167:src/Riscv.cpp ****                 sem->val++;
 1199              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 sem->val++;
 1200              		.loc 1 167 29 is_stmt 0
 1201 0348 93071000 		li	a5,1
 1202 034c 230CF902 		sb	a5,56(s2)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1203              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1204              		.loc 1 168 22 is_stmt 0
 1205 0350 83A70400 		lw	a5,0(s1)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1206              		.loc 1 168 25
 1207 0354 9B871700 		addiw	a5,a5,1
 1208 0358 23A0F400 		sw	a5,0(s1)
 169:src/Riscv.cpp ****             }
 1209              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****             }
 1210              		.loc 1 169 31 is_stmt 0
 1211 035c 13050900 		mv	a0,s2
 1212 0360 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1212      E7800000 
 1213              	.LVL81:
 1214              	.L17:
 1215              	.LBE213:
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1216              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1217              		.loc 1 165 43
 1218              	.LBB218:
 1219              	.LBB219:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1220              		.loc 4 79 14 is_stmt 0
 1221 0368 03B58400 		ld	a0,8(s1)
 1222              		.loc 4 79 9
 1223 036c 63000502 		beqz	a0,.L15
  80:src/../h/List.hpp ****         return head->data;
 1224              		.loc 4 80 22
 1225 0370 83370500 		ld	a5,0(a0)
 1226              	.LVL82:
 1227              	.LBE219:
 1228              	.LBE218:
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1229              		.loc 1 165 43
 1230 0374 638C0700 		beqz	a5,.L15
 1231              	.LBB220:
GAS LISTING /tmp/ccsvpkDT.s 			page 37


 166:src/Riscv.cpp ****                 t->deblocked=true;
 1232              		.loc 1 166 17 is_stmt 1
 1233              	.LVL83:
 1234              	.LBB217:
 1235              	.LBB216:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1236              		.loc 4 69 22 is_stmt 0
 1237 0378 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1238              		.loc 4 69 9
 1239 037c 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1240              		.loc 4 70 9
 1241 0380 E39E07FA 		bnez	a5,.L16
  70:src/../h/List.hpp **** 
 1242              		.loc 4 70 22
 1243 0384 23B80400 		sd	zero,16(s1)
 1244 0388 6FF05FFB 		j	.L16
 1245              	.LVL84:
 1246              	.L15:
 1247              	.LBE216:
 1248              	.LBE217:
 1249              	.LBE220:
 172:src/Riscv.cpp **** 
 1250              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp **** 
 1251              		.loc 1 172 23 is_stmt 0
 1252 038c 63880400 		beqz	s1,.L18
 172:src/Riscv.cpp **** 
 1253              		.loc 1 172 20 discriminator 1
 1254 0390 13850400 		mv	a0,s1
 1255 0394 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1255      E7800000 
 1256              	.LVL85:
 1257              	.L18:
 174:src/Riscv.cpp ****             w_sepc(sepc);
 1258              		.loc 1 174 13 is_stmt 1
 1259              	.LBB221:
 1260              	.LBB222:
 183:src/../h/Riscv.hpp **** }
 1261              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1262              		.loc 2 183 77 is_stmt 0
 1263              	#APP
 1264              	# 183 "src/../h/Riscv.hpp" 1
 1265              		csrw sstatus, s4
 1266              	# 0 "" 2
 1267              	.LVL86:
 1268              	#NO_APP
 1269              	.LBE222:
 1270              	.LBE221:
 175:src/Riscv.cpp ****         }
 1271              		.loc 1 175 13 is_stmt 1
 1272              	.LBB223:
 1273              	.LBB224:
 113:src/../h/Riscv.hpp **** }
 1274              		.loc 2 113 5
GAS LISTING /tmp/ccsvpkDT.s 			page 38


 113:src/../h/Riscv.hpp **** }
 1275              		.loc 2 113 65 is_stmt 0
 1276              	#APP
 1277              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1278              		csrw sepc, s3
 1279              	# 0 "" 2
 1280              		.loc 2 114 1
 1281              	#NO_APP
 1282 03a4 6FF0DFCB 		j	.L3
 1283              	.LVL87:
 1284              	.L34:
 1285              	.LBE224:
 1286              	.LBE223:
 1287              	.LBE208:
 1288              	.LBB225:
 1289              	.LBB195:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1290              		.loc 1 178 13 is_stmt 1
 1291              	.LBB196:
 1292              	.LBB197:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1293              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1294              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1295              		.loc 2 107 64 is_stmt 0
 1296              	#APP
 1297              	# 107 "src/../h/Riscv.hpp" 1
 1298              		csrr a5, sepc
 1299              	# 0 "" 2
 1300              	#NO_APP
 1301 03ac 233CF4F8 		sd	a5,-104(s0)
 108:src/../h/Riscv.hpp **** }
 1302              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1303              		.loc 2 108 12 is_stmt 0
 1304 03b0 833484F9 		ld	s1,-104(s0)
 1305              	.LVL88:
 1306              	.LBE197:
 1307              	.LBE196:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1308              		.loc 1 178 38
 1309 03b4 93844400 		addi	s1,s1,4
 1310              	.LVL89:
 179:src/Riscv.cpp **** 
 1311              		.loc 1 179 13 is_stmt 1
 1312              	.LBB198:
 1313              	.LBB199:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1314              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1315              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1316              		.loc 2 177 76 is_stmt 0
 1317              	#APP
 1318              	# 177 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccsvpkDT.s 			page 39


 1319              		csrr a5, sstatus
 1320              	# 0 "" 2
 1321              	#NO_APP
 1322 03bc 2338F4F8 		sd	a5,-112(s0)
 178:src/../h/Riscv.hpp **** }
 1323              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1324              		.loc 2 178 12 is_stmt 0
 1325 03c0 033904F9 		ld	s2,-112(s0)
 1326              	.LVL90:
 1327              	.LBE199:
 1328              	.LBE198:
 181:src/Riscv.cpp **** 
 1329              		.loc 1 181 13 is_stmt 1
 183:src/Riscv.cpp **** 
 1330              		.loc 1 183 13
 183:src/Riscv.cpp **** 
 1331              		.loc 1 183 48 is_stmt 0
 1332              	#APP
 1333              	# 183 "src/Riscv.cpp" 1
 185:src/Riscv.cpp **** 
 1334              		ld a1, 11*8(fp)
 1335              	# 0 "" 2
 1336              		.loc 1 185 13 is_stmt 1
 185:src/Riscv.cpp **** 
 1337              		.loc 1 185 56 is_stmt 0
 1338              	# 185 "src/Riscv.cpp" 1
 1339              		mv a0, a1
 1340              	# 0 "" 2
 1341              	.LVL91:
 189:src/Riscv.cpp **** 
 1342              		.loc 1 189 13 is_stmt 1
 189:src/Riscv.cpp **** 
 1343              		.loc 1 189 36 is_stmt 0
 1344              	#NO_APP
 1345 03cc 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1345      E7800000 
 1346              	.LVL92:
 191:src/Riscv.cpp **** 
 1347              		.loc 1 191 13 is_stmt 1
 191:src/Riscv.cpp **** 
 1348              		.loc 1 191 56 is_stmt 0
 1349              	#APP
 1350              	# 191 "src/Riscv.cpp" 1
 193:src/Riscv.cpp ****             w_sepc(sepc);
 1351              		mv a0, a0
 1352              	# 0 "" 2
 1353              		.loc 1 193 13 is_stmt 1
 1354              	.LVL93:
 1355              	#NO_APP
 1356              	.LBB200:
 1357              	.LBB201:
 183:src/../h/Riscv.hpp **** }
 1358              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1359              		.loc 2 183 77 is_stmt 0
 1360              	#APP
GAS LISTING /tmp/ccsvpkDT.s 			page 40


 1361              	# 183 "src/../h/Riscv.hpp" 1
 1362              		csrw sstatus, s2
 1363              	# 0 "" 2
 1364              	.LVL94:
 1365              	#NO_APP
 1366              	.LBE201:
 1367              	.LBE200:
 194:src/Riscv.cpp ****         }
 1368              		.loc 1 194 13 is_stmt 1
 1369              	.LBB202:
 1370              	.LBB203:
 113:src/../h/Riscv.hpp **** }
 1371              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1372              		.loc 2 113 65 is_stmt 0
 1373              	#APP
 1374              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1375              		csrw sepc, s1
 1376              	# 0 "" 2
 1377              		.loc 2 114 1
 1378              	#NO_APP
 1379 03e0 6FF01FC8 		j	.L3
 1380              	.LVL95:
 1381              	.L35:
 1382              	.LBE203:
 1383              	.LBE202:
 1384              	.LBE195:
 1385              	.LBB204:
 1386              	.LBB183:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1387              		.loc 1 197 13 is_stmt 1
 1388              	.LBB184:
 1389              	.LBB185:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1390              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1391              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1392              		.loc 2 107 64 is_stmt 0
 1393              	#APP
 1394              	# 107 "src/../h/Riscv.hpp" 1
 1395              		csrr a5, sepc
 1396              	# 0 "" 2
 1397              	#NO_APP
 1398 03e8 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/Riscv.hpp **** }
 1399              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1400              		.loc 2 108 12 is_stmt 0
 1401 03ec 833484FA 		ld	s1,-88(s0)
 1402              	.LVL96:
 1403              	.LBE185:
 1404              	.LBE184:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1405              		.loc 1 197 38
 1406 03f0 93844400 		addi	s1,s1,4
GAS LISTING /tmp/ccsvpkDT.s 			page 41


 1407              	.LVL97:
 198:src/Riscv.cpp **** 
 1408              		.loc 1 198 13 is_stmt 1
 1409              	.LBB186:
 1410              	.LBB187:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1411              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1412              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1413              		.loc 2 177 76 is_stmt 0
 1414              	#APP
 1415              	# 177 "src/../h/Riscv.hpp" 1
 1416              		csrr a5, sstatus
 1417              	# 0 "" 2
 1418              	#NO_APP
 1419 03f8 2330F4FA 		sd	a5,-96(s0)
 178:src/../h/Riscv.hpp **** }
 1420              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1421              		.loc 2 178 12 is_stmt 0
 1422 03fc 033904FA 		ld	s2,-96(s0)
 1423              	.LVL98:
 1424              	.LBE187:
 1425              	.LBE186:
 200:src/Riscv.cpp **** 
 1426              		.loc 1 200 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1427              		.loc 1 202 13
 202:src/Riscv.cpp **** 
 1428              		.loc 1 202 48 is_stmt 0
 1429              	#APP
 1430              	# 202 "src/Riscv.cpp" 1
 204:src/Riscv.cpp **** 
 1431              		ld a1, 11*8(fp)
 1432              	# 0 "" 2
 1433              		.loc 1 204 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1434              		.loc 1 204 56 is_stmt 0
 1435              	# 204 "src/Riscv.cpp" 1
 1436              		mv a0, a1
 1437              	# 0 "" 2
 1438              	.LVL99:
 207:src/Riscv.cpp **** 
 1439              		.loc 1 207 13 is_stmt 1
 207:src/Riscv.cpp **** 
 1440              		.loc 1 207 25 is_stmt 0
 1441              	#NO_APP
 1442 0408 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1442      E7800000 
 1443              	.LVL100:
 209:src/Riscv.cpp **** 
 1444              		.loc 1 209 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1445              		.loc 1 211 13
 211:src/Riscv.cpp **** 
 1446              		.loc 1 211 56 is_stmt 0
GAS LISTING /tmp/ccsvpkDT.s 			page 42


 1447 0410 93070000 		li	a5,0
 1448              	#APP
 1449              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1450              		mv a0, a5
 1451              	# 0 "" 2
 1452              		.loc 1 213 13 is_stmt 1
 1453              	.LVL101:
 1454              	#NO_APP
 1455              	.LBB188:
 1456              	.LBB189:
 183:src/../h/Riscv.hpp **** }
 1457              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1458              		.loc 2 183 77 is_stmt 0
 1459              	#APP
 1460              	# 183 "src/../h/Riscv.hpp" 1
 1461              		csrw sstatus, s2
 1462              	# 0 "" 2
 1463              	.LVL102:
 1464              	#NO_APP
 1465              	.LBE189:
 1466              	.LBE188:
 214:src/Riscv.cpp ****         }
 1467              		.loc 1 214 13 is_stmt 1
 1468              	.LBB190:
 1469              	.LBB191:
 113:src/../h/Riscv.hpp **** }
 1470              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1471              		.loc 2 113 65 is_stmt 0
 1472              	#APP
 1473              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1474              		csrw sepc, s1
 1475              	# 0 "" 2
 1476              		.loc 2 114 1
 1477              	#NO_APP
 1478 0420 6FF01FC4 		j	.L3
 1479              	.LVL103:
 1480              	.L36:
 1481              	.LBE191:
 1482              	.LBE190:
 1483              	.LBE183:
 1484              	.LBB192:
 1485              	.LBB173:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1486              		.loc 1 217 13 is_stmt 1
 1487              	.LBB174:
 1488              	.LBB175:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1489              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1490              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1491              		.loc 2 107 64 is_stmt 0
 1492              	#APP
GAS LISTING /tmp/ccsvpkDT.s 			page 43


 1493              	# 107 "src/../h/Riscv.hpp" 1
 1494              		csrr a5, sepc
 1495              	# 0 "" 2
 1496              	#NO_APP
 1497 0428 233CF4FA 		sd	a5,-72(s0)
 108:src/../h/Riscv.hpp **** }
 1498              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1499              		.loc 2 108 12 is_stmt 0
 1500 042c 833484FB 		ld	s1,-72(s0)
 1501              	.LVL104:
 1502              	.LBE175:
 1503              	.LBE174:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1504              		.loc 1 217 38
 1505 0430 93844400 		addi	s1,s1,4
 1506              	.LVL105:
 218:src/Riscv.cpp **** 
 1507              		.loc 1 218 13 is_stmt 1
 1508              	.LBB176:
 1509              	.LBB177:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1510              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1511              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1512              		.loc 2 177 76 is_stmt 0
 1513              	#APP
 1514              	# 177 "src/../h/Riscv.hpp" 1
 1515              		csrr a5, sstatus
 1516              	# 0 "" 2
 1517              	#NO_APP
 1518 0438 2338F4FA 		sd	a5,-80(s0)
 178:src/../h/Riscv.hpp **** }
 1519              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1520              		.loc 2 178 12 is_stmt 0
 1521 043c 033904FB 		ld	s2,-80(s0)
 1522              	.LVL106:
 1523              	.LBE177:
 1524              	.LBE176:
 221:src/Riscv.cpp **** 
 1525              		.loc 1 221 13 is_stmt 1
 221:src/Riscv.cpp **** 
 1526              		.loc 1 221 36 is_stmt 0
 1527 0440 97000000 		call	_ZN8KConsole4getcEv@plt
 1527      E7800000 
 1528              	.LVL107:
 223:src/Riscv.cpp **** 
 1529              		.loc 1 223 13 is_stmt 1
 223:src/Riscv.cpp **** 
 1530              		.loc 1 223 54 is_stmt 0
 1531              	#APP
 1532              	# 223 "src/Riscv.cpp" 1
 226:src/Riscv.cpp ****             w_sepc(sepc);
 1533              		mv a0, a0
 1534              	# 0 "" 2
GAS LISTING /tmp/ccsvpkDT.s 			page 44


 1535              		.loc 1 226 13 is_stmt 1
 1536              	.LVL108:
 1537              	#NO_APP
 1538              	.LBB178:
 1539              	.LBB179:
 183:src/../h/Riscv.hpp **** }
 1540              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1541              		.loc 2 183 77 is_stmt 0
 1542              	#APP
 1543              	# 183 "src/../h/Riscv.hpp" 1
 1544              		csrw sstatus, s2
 1545              	# 0 "" 2
 1546              	.LVL109:
 1547              	#NO_APP
 1548              	.LBE179:
 1549              	.LBE178:
 227:src/Riscv.cpp ****         }
 1550              		.loc 1 227 13 is_stmt 1
 1551              	.LBB180:
 1552              	.LBB181:
 113:src/../h/Riscv.hpp **** }
 1553              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1554              		.loc 2 113 65 is_stmt 0
 1555              	#APP
 1556              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1557              		csrw sepc, s1
 1558              	# 0 "" 2
 1559              		.loc 2 114 1
 1560              	#NO_APP
 1561 0454 6FF0DFC0 		j	.L3
 1562              	.LBE181:
 1563              	.LBE180:
 1564              	.LBE173:
 1565              	.LBE192:
 1566              	.LBE204:
 1567              	.LBE225:
 1568              	.LBE243:
 1569              	.LBE258:
 1570              	.LBE274:
 1571              	.LBE291:
 1572              	.LBE309:
 1573              	.LBE328:
 1574              	.LBE340:
 1575              	.LBE353:
 1576              		.cfi_endproc
 1577              	.LFE51:
 1579              	.Letext0:
 1580              		.file 5 "src/../h/../lib/hw.h"
 1581              		.file 6 "src/../h/MemoryAllocator.hpp"
 1582              		.file 7 "src/../h/Scheduler.hpp"
 1583              		.file 8 "src/../h/_thread.hpp"
 1584              		.file 9 "src/../h/KConsole.hpp"
GAS LISTING /tmp/ccsvpkDT.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccsvpkDT.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccsvpkDT.s:13     .text:0000000000000000 .L0 
     /tmp/ccsvpkDT.s:14     .text:0000000000000000 .L0 
     /tmp/ccsvpkDT.s:15     .text:0000000000000004 .L0 
     /tmp/ccsvpkDT.s:17     .text:0000000000000008 .L0 
     /tmp/ccsvpkDT.s:19     .text:000000000000000c .L0 
     /tmp/ccsvpkDT.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccsvpkDT.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccsvpkDT.s:33     .text:0000000000000014 .L0 
     /tmp/ccsvpkDT.s:34     .text:0000000000000018 .L0 
     /tmp/ccsvpkDT.s:35     .text:0000000000000018 .L0 
     /tmp/ccsvpkDT.s:37     .text:000000000000001c .L0 
     /tmp/ccsvpkDT.s:39     .text:0000000000000020 .L0 
     /tmp/ccsvpkDT.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccsvpkDT.s:48     .text:0000000000000020 .L0 
     /tmp/ccsvpkDT.s:49     .text:0000000000000020 .L0 
     /tmp/ccsvpkDT.s:50     .text:0000000000000024 .L0 
     /tmp/ccsvpkDT.s:57     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:58     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:59     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:60     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:61     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:62     .text:000000000000003c .L0 
     /tmp/ccsvpkDT.s:64     .text:0000000000000040 .L0 
     /tmp/ccsvpkDT.s:69     .text:0000000000000040 .L0 
     /tmp/ccsvpkDT.s:70     .text:0000000000000040 .L0 
     /tmp/ccsvpkDT.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/ccsvpkDT.s:79     .text:0000000000000048 .L0 
     /tmp/ccsvpkDT.s:80     .text:0000000000000048 .L0 
     /tmp/ccsvpkDT.s:84     .text:000000000000004c .L0 
     /tmp/ccsvpkDT.s:87     .text:0000000000000050 .L0 
     /tmp/ccsvpkDT.s:88     .text:0000000000000050 .L0 
     /tmp/ccsvpkDT.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:25     .text:0000000000000050 .L0 
     /tmp/ccsvpkDT.s:98     .text:0000000000000054 .L0 
     /tmp/ccsvpkDT.s:99     .text:0000000000000054 .L0 
     /tmp/ccsvpkDT.s:102    .text:0000000000000058 .L0 
     /tmp/ccsvpkDT.s:108    .text:0000000000000060 .L0 
     /tmp/ccsvpkDT.s:109    .text:0000000000000064 .L0 
     /tmp/ccsvpkDT.s:110    .text:0000000000000064 .L0 
     /tmp/ccsvpkDT.s:112    .text:0000000000000068 .L0 
     /tmp/ccsvpkDT.s:113    .text:0000000000000068 .L0 
     /tmp/ccsvpkDT.s:115    .text:000000000000006c .L0 
     /tmp/ccsvpkDT.s:117    .text:0000000000000070 .L0 
     /tmp/ccsvpkDT.s:119    .text:0000000000000074 .L0 
     /tmp/ccsvpkDT.s:121    .text:0000000000000078 .L0 
     /tmp/ccsvpkDT.s:123    .text:000000000000007c .L0 
     /tmp/ccsvpkDT.s:127    .text:0000000000000080 .L0 
     /tmp/ccsvpkDT.s:131    .text:0000000000000080 .L0 
     /tmp/ccsvpkDT.s:139    .text:0000000000000088 .L0 
     /tmp/ccsvpkDT.s:147    .text:0000000000000090 .L0 
     /tmp/ccsvpkDT.s:157    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 46


     /tmp/ccsvpkDT.s:169    .text:00000000000000a0 .L0 
     /tmp/ccsvpkDT.s:183    .text:00000000000000a8 .L0 
     /tmp/ccsvpkDT.s:199    .text:00000000000000b0 .L0 
     /tmp/ccsvpkDT.s:217    .text:00000000000000b8 .L0 
     /tmp/ccsvpkDT.s:237    .text:00000000000000c0 .L0 
     /tmp/ccsvpkDT.s:259    .text:00000000000000c8 .L0 
     /tmp/ccsvpkDT.s:283    .text:00000000000000d0 .L0 
     /tmp/ccsvpkDT.s:309    .text:00000000000000d8 .L0 
     /tmp/ccsvpkDT.s:315    .text:00000000000000e0 .L0 
     /tmp/ccsvpkDT.s:316    .text:00000000000000e0 .L0 
     /tmp/ccsvpkDT.s:317    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000e0 .L0 
     /tmp/ccsvpkDT.s:325    .text:00000000000000e8 .L0 
     /tmp/ccsvpkDT.s:326    .text:00000000000000e8 .L0 
     /tmp/ccsvpkDT.s:331    .text:00000000000000ec .L0 
     /tmp/ccsvpkDT.s:336    .text:00000000000000f0 .L0 
     /tmp/ccsvpkDT.s:337    .text:00000000000000f0 .L0 
     /tmp/ccsvpkDT.s:338    .text:00000000000000f0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000f0 .L0 
     /tmp/ccsvpkDT.s:346    .text:00000000000000f8 .L0 
     /tmp/ccsvpkDT.s:347    .text:00000000000000f8 .L0 
     /tmp/ccsvpkDT.s:352    .text:00000000000000fc .L0 
     /tmp/ccsvpkDT.s:353    .text:00000000000000fc .L0 
       src/Riscv.cpp:234    .text:00000000000000fc .L0 
     /tmp/ccsvpkDT.s:359    .text:0000000000000100 .L0 
       src/Riscv.cpp:236    .text:0000000000000100 .L0 
     /tmp/ccsvpkDT.s:365    .text:0000000000000104 .L0 
     /tmp/ccsvpkDT.s:367    .text:0000000000000104 .L0 
     /tmp/ccsvpkDT.s:373    .text:0000000000000110 .L0 
     /tmp/ccsvpkDT.s:374    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000110 .L0 
     /tmp/ccsvpkDT.s:386    .text:0000000000000114 .L0 
     /tmp/ccsvpkDT.s:387    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000114 .L0 
     /tmp/ccsvpkDT.s:409    .text:0000000000000118 .L0 
     /tmp/ccsvpkDT.s:411    .text:0000000000000118 .L0 
     /tmp/ccsvpkDT.s:412    .text:0000000000000118 .L0 
     /tmp/ccsvpkDT.s:421    .text:000000000000011c .L0 
     /tmp/ccsvpkDT.s:422    .text:000000000000011c .L0 
     /tmp/ccsvpkDT.s:423    .text:000000000000011c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000011c .L0 
     /tmp/ccsvpkDT.s:431    .text:0000000000000124 .L0 
     /tmp/ccsvpkDT.s:432    .text:0000000000000124 .L0 
     /tmp/ccsvpkDT.s:436    .text:0000000000000128 .L0 
     /tmp/ccsvpkDT.s:441    .text:000000000000012c .L0 
     /tmp/ccsvpkDT.s:442    .text:000000000000012c .L0 
     /tmp/ccsvpkDT.s:443    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000012c .L0 
     /tmp/ccsvpkDT.s:451    .text:0000000000000134 .L0 
     /tmp/ccsvpkDT.s:452    .text:0000000000000134 .L0 
     /tmp/ccsvpkDT.s:457    .text:0000000000000138 .L0 
     /tmp/ccsvpkDT.s:458    .text:0000000000000138 .L0 
     /tmp/ccsvpkDT.s:459    .text:0000000000000138 .L0 
     /tmp/ccsvpkDT.s:460    .text:0000000000000138 .L0 
     /tmp/ccsvpkDT.s:461    .text:0000000000000138 .L0 
       src/Riscv.cpp:42     .text:0000000000000138 .L0 
     /tmp/ccsvpkDT.s:467    .text:000000000000013c .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 47


       src/Riscv.cpp:43     .text:000000000000013c .L0 
     /tmp/ccsvpkDT.s:472    .text:0000000000000140 .L0 
       src/Riscv.cpp:44     .text:0000000000000140 .L0 
     /tmp/ccsvpkDT.s:477    .text:0000000000000144 .L0 
       src/Riscv.cpp:45     .text:0000000000000144 .L0 
     /tmp/ccsvpkDT.s:482    .text:0000000000000148 .L0 
       src/Riscv.cpp:48     .text:0000000000000148 .L0 
     /tmp/ccsvpkDT.s:488    .text:000000000000014c .L0 
       src/Riscv.cpp:49     .text:000000000000014c .L0 
     /tmp/ccsvpkDT.s:494    .text:0000000000000150 .L0 
       src/Riscv.cpp:50     .text:0000000000000150 .L0 
     /tmp/ccsvpkDT.s:500    .text:0000000000000154 .L0 
       src/Riscv.cpp:51     .text:0000000000000154 .L0 
     /tmp/ccsvpkDT.s:506    .text:0000000000000158 .L0 
     /tmp/ccsvpkDT.s:508    .text:0000000000000158 .L0 
     /tmp/ccsvpkDT.s:511    .text:0000000000000160 .L0 
     /tmp/ccsvpkDT.s:512    .text:0000000000000160 .L0 
     /tmp/ccsvpkDT.s:514    .text:0000000000000164 .L0 
     /tmp/ccsvpkDT.s:515    .text:0000000000000164 .L0 
     /tmp/ccsvpkDT.s:517    .text:0000000000000168 .L0 
     /tmp/ccsvpkDT.s:521    .text:000000000000016c .L0 
       src/Riscv.cpp:63     .text:000000000000016c .L0 
     /tmp/ccsvpkDT.s:531    .text:0000000000000170 .L0 
     /tmp/ccsvpkDT.s:532    .text:0000000000000170 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000170 .L0 
     /tmp/ccsvpkDT.s:544    .text:0000000000000174 .L0 
     /tmp/ccsvpkDT.s:545    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000174 .L0 
     /tmp/ccsvpkDT.s:552    .text:0000000000000178 .L0 
     /tmp/ccsvpkDT.s:558    .text:000000000000017c .L0 
     /tmp/ccsvpkDT.s:569    .text:0000000000000184 .L0 
     /tmp/ccsvpkDT.s:570    .text:0000000000000184 .L0 
     /tmp/ccsvpkDT.s:571    .text:0000000000000184 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000184 .L0 
     /tmp/ccsvpkDT.s:579    .text:000000000000018c .L0 
     /tmp/ccsvpkDT.s:580    .text:000000000000018c .L0 
     /tmp/ccsvpkDT.s:585    .text:0000000000000190 .L0 
     /tmp/ccsvpkDT.s:590    .text:0000000000000194 .L0 
     /tmp/ccsvpkDT.s:591    .text:0000000000000194 .L0 
     /tmp/ccsvpkDT.s:592    .text:0000000000000194 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000194 .L0 
     /tmp/ccsvpkDT.s:600    .text:000000000000019c .L0 
     /tmp/ccsvpkDT.s:601    .text:000000000000019c .L0 
     /tmp/ccsvpkDT.s:606    .text:00000000000001a0 .L0 
       src/Riscv.cpp:72     .text:00000000000001a0 .L0 
     /tmp/ccsvpkDT.s:613    .text:00000000000001a4 .L0 
     /tmp/ccsvpkDT.s:615    .text:00000000000001a4 .L0 
     /tmp/ccsvpkDT.s:620    .text:00000000000001b0 .L0 
       src/Riscv.cpp:76     .text:00000000000001b0 .L0 
     /tmp/ccsvpkDT.s:630    .text:00000000000001b4 .L0 
     /tmp/ccsvpkDT.s:631    .text:00000000000001b4 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001b4 .L0 
     /tmp/ccsvpkDT.s:643    .text:00000000000001b8 .L0 
     /tmp/ccsvpkDT.s:644    .text:00000000000001b8 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001b8 .L0 
     /tmp/ccsvpkDT.s:651    .text:00000000000001bc .L0 
     /tmp/ccsvpkDT.s:662    .text:00000000000001c0 .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 48


     /tmp/ccsvpkDT.s:663    .text:00000000000001c0 .L0 
     /tmp/ccsvpkDT.s:664    .text:00000000000001c0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001c0 .L0 
     /tmp/ccsvpkDT.s:672    .text:00000000000001c8 .L0 
     /tmp/ccsvpkDT.s:673    .text:00000000000001c8 .L0 
     /tmp/ccsvpkDT.s:678    .text:00000000000001cc .L0 
     /tmp/ccsvpkDT.s:683    .text:00000000000001d0 .L0 
     /tmp/ccsvpkDT.s:684    .text:00000000000001d0 .L0 
     /tmp/ccsvpkDT.s:685    .text:00000000000001d0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001d0 .L0 
     /tmp/ccsvpkDT.s:693    .text:00000000000001d8 .L0 
     /tmp/ccsvpkDT.s:694    .text:00000000000001d8 .L0 
     /tmp/ccsvpkDT.s:699    .text:00000000000001dc .L0 
       src/Riscv.cpp:85     .text:00000000000001dc .L0 
     /tmp/ccsvpkDT.s:706    .text:00000000000001e0 .L0 
     /tmp/ccsvpkDT.s:708    .text:00000000000001e0 .L0 
     /tmp/ccsvpkDT.s:711    .text:00000000000001e8 .L0 
       src/Riscv.cpp:87     .text:00000000000001e8 .L0 
     /tmp/ccsvpkDT.s:721    .text:00000000000001ec .L0 
     /tmp/ccsvpkDT.s:722    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001ec .L0 
     /tmp/ccsvpkDT.s:734    .text:00000000000001f0 .L0 
     /tmp/ccsvpkDT.s:735    .text:00000000000001f0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001f0 .L0 
     /tmp/ccsvpkDT.s:742    .text:00000000000001f4 .L0 
     /tmp/ccsvpkDT.s:753    .text:00000000000001f8 .L0 
     /tmp/ccsvpkDT.s:754    .text:00000000000001f8 .L0 
     /tmp/ccsvpkDT.s:755    .text:00000000000001f8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001f8 .L0 
     /tmp/ccsvpkDT.s:763    .text:0000000000000200 .L0 
     /tmp/ccsvpkDT.s:764    .text:0000000000000200 .L0 
     /tmp/ccsvpkDT.s:769    .text:0000000000000204 .L0 
     /tmp/ccsvpkDT.s:774    .text:0000000000000208 .L0 
     /tmp/ccsvpkDT.s:775    .text:0000000000000208 .L0 
     /tmp/ccsvpkDT.s:776    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000208 .L0 
     /tmp/ccsvpkDT.s:784    .text:0000000000000210 .L0 
     /tmp/ccsvpkDT.s:785    .text:0000000000000210 .L0 
     /tmp/ccsvpkDT.s:790    .text:0000000000000214 .L0 
     /tmp/ccsvpkDT.s:791    .text:0000000000000214 .L0 
     /tmp/ccsvpkDT.s:794    .text:0000000000000220 .L0 
     /tmp/ccsvpkDT.s:797    .text:0000000000000228 .L0 
     /tmp/ccsvpkDT.s:798    .text:0000000000000228 .L0 
     /tmp/ccsvpkDT.s:803    .text:0000000000000230 .L0 
     /tmp/ccsvpkDT.s:804    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000230 .L0 
     /tmp/ccsvpkDT.s:816    .text:0000000000000234 .L0 
     /tmp/ccsvpkDT.s:817    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000234 .L0 
     /tmp/ccsvpkDT.s:824    .text:0000000000000238 .L0 
     /tmp/ccsvpkDT.s:835    .text:000000000000023c .L0 
     /tmp/ccsvpkDT.s:836    .text:000000000000023c .L0 
     /tmp/ccsvpkDT.s:837    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000023c .L0 
     /tmp/ccsvpkDT.s:845    .text:0000000000000244 .L0 
     /tmp/ccsvpkDT.s:846    .text:0000000000000244 .L0 
     /tmp/ccsvpkDT.s:851    .text:0000000000000248 .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 49


     /tmp/ccsvpkDT.s:856    .text:000000000000024c .L0 
     /tmp/ccsvpkDT.s:857    .text:000000000000024c .L0 
     /tmp/ccsvpkDT.s:858    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000024c .L0 
     /tmp/ccsvpkDT.s:866    .text:0000000000000254 .L0 
     /tmp/ccsvpkDT.s:867    .text:0000000000000254 .L0 
     /tmp/ccsvpkDT.s:872    .text:0000000000000258 .L0 
     /tmp/ccsvpkDT.s:873    .text:0000000000000258 .L0 
     /tmp/ccsvpkDT.s:878    .text:0000000000000260 .L0 
     /tmp/ccsvpkDT.s:879    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000260 .L0 
     /tmp/ccsvpkDT.s:891    .text:0000000000000264 .L0 
     /tmp/ccsvpkDT.s:892    .text:0000000000000264 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000264 .L0 
     /tmp/ccsvpkDT.s:899    .text:0000000000000268 .L0 
     /tmp/ccsvpkDT.s:910    .text:000000000000026c .L0 
     /tmp/ccsvpkDT.s:911    .text:000000000000026c .L0 
     /tmp/ccsvpkDT.s:912    .text:000000000000026c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000026c .L0 
     /tmp/ccsvpkDT.s:920    .text:0000000000000274 .L0 
     /tmp/ccsvpkDT.s:921    .text:0000000000000274 .L0 
     /tmp/ccsvpkDT.s:926    .text:0000000000000278 .L0 
     /tmp/ccsvpkDT.s:931    .text:000000000000027c .L0 
     /tmp/ccsvpkDT.s:932    .text:000000000000027c .L0 
     /tmp/ccsvpkDT.s:933    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000027c .L0 
     /tmp/ccsvpkDT.s:941    .text:0000000000000284 .L0 
     /tmp/ccsvpkDT.s:942    .text:0000000000000284 .L0 
     /tmp/ccsvpkDT.s:947    .text:0000000000000288 .L0 
     /tmp/ccsvpkDT.s:948    .text:0000000000000288 .L0 
     /tmp/ccsvpkDT.s:951    .text:0000000000000294 .L0 
     /tmp/ccsvpkDT.s:952    .text:0000000000000294 .L0 
     /tmp/ccsvpkDT.s:957    .text:000000000000029c .L0 
     /tmp/ccsvpkDT.s:958    .text:000000000000029c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000029c .L0 
     /tmp/ccsvpkDT.s:970    .text:00000000000002a0 .L0 
     /tmp/ccsvpkDT.s:971    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002a0 .L0 
     /tmp/ccsvpkDT.s:978    .text:00000000000002a4 .L0 
     /tmp/ccsvpkDT.s:989    .text:00000000000002a8 .L0 
     /tmp/ccsvpkDT.s:990    .text:00000000000002a8 .L0 
     /tmp/ccsvpkDT.s:991    .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000002a8 .L0 
     /tmp/ccsvpkDT.s:999    .text:00000000000002b0 .L0 
     /tmp/ccsvpkDT.s:1000   .text:00000000000002b0 .L0 
     /tmp/ccsvpkDT.s:1005   .text:00000000000002b4 .L0 
     /tmp/ccsvpkDT.s:1010   .text:00000000000002b8 .L0 
     /tmp/ccsvpkDT.s:1011   .text:00000000000002b8 .L0 
     /tmp/ccsvpkDT.s:1012   .text:00000000000002b8 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000002b8 .L0 
     /tmp/ccsvpkDT.s:1020   .text:00000000000002c0 .L0 
     /tmp/ccsvpkDT.s:1021   .text:00000000000002c0 .L0 
     /tmp/ccsvpkDT.s:1026   .text:00000000000002c4 .L0 
     /tmp/ccsvpkDT.s:1027   .text:00000000000002c4 .L0 
     /tmp/ccsvpkDT.s:1028   .text:00000000000002c4 .L0 
       src/Riscv.cpp:133    .text:00000000000002c4 .L0 
     /tmp/ccsvpkDT.s:1034   .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 50


       src/Riscv.cpp:134    .text:00000000000002c8 .L0 
     /tmp/ccsvpkDT.s:1039   .text:00000000000002cc .L0 
       src/Riscv.cpp:136    .text:00000000000002cc .L0 
     /tmp/ccsvpkDT.s:1045   .text:00000000000002d0 .L0 
       src/Riscv.cpp:137    .text:00000000000002d0 .L0 
     /tmp/ccsvpkDT.s:1051   .text:00000000000002d4 .L0 
     /tmp/ccsvpkDT.s:1053   .text:00000000000002d4 .L0 
     /tmp/ccsvpkDT.s:1060   .text:00000000000002e0 .L0 
     /tmp/ccsvpkDT.s:1066   .text:00000000000002e4 .L0 
     /tmp/ccsvpkDT.s:1074   .text:00000000000002ec .L0 
     /tmp/ccsvpkDT.s:1075   .text:00000000000002ec .L0 
     /tmp/ccsvpkDT.s:1078   .text:00000000000002f0 .L0 
     /tmp/ccsvpkDT.s:1079   .text:00000000000002f0 .L0 
     /tmp/ccsvpkDT.s:1081   .text:00000000000002f4 .L0 
     /tmp/ccsvpkDT.s:1085   .text:00000000000002f8 .L0 
       src/Riscv.cpp:146    .text:00000000000002f8 .L0 
     /tmp/ccsvpkDT.s:1095   .text:00000000000002fc .L0 
     /tmp/ccsvpkDT.s:1096   .text:00000000000002fc .L0 
  src/../h/Riscv.hpp:183    .text:00000000000002fc .L0 
     /tmp/ccsvpkDT.s:1108   .text:0000000000000300 .L0 
     /tmp/ccsvpkDT.s:1109   .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000300 .L0 
     /tmp/ccsvpkDT.s:1116   .text:0000000000000304 .L0 
     /tmp/ccsvpkDT.s:1122   .text:0000000000000308 .L0 
     /tmp/ccsvpkDT.s:1132   .text:0000000000000310 .L0 
     /tmp/ccsvpkDT.s:1133   .text:0000000000000310 .L0 
     /tmp/ccsvpkDT.s:1134   .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000310 .L0 
     /tmp/ccsvpkDT.s:1142   .text:0000000000000318 .L0 
     /tmp/ccsvpkDT.s:1143   .text:0000000000000318 .L0 
     /tmp/ccsvpkDT.s:1147   .text:000000000000031c .L0 
     /tmp/ccsvpkDT.s:1152   .text:0000000000000320 .L0 
     /tmp/ccsvpkDT.s:1153   .text:0000000000000320 .L0 
     /tmp/ccsvpkDT.s:1154   .text:0000000000000320 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000320 .L0 
     /tmp/ccsvpkDT.s:1162   .text:0000000000000328 .L0 
     /tmp/ccsvpkDT.s:1163   .text:0000000000000328 .L0 
     /tmp/ccsvpkDT.s:1168   .text:000000000000032c .L0 
     /tmp/ccsvpkDT.s:1169   .text:000000000000032c .L0 
       src/Riscv.cpp:158    .text:000000000000032c .L0 
     /tmp/ccsvpkDT.s:1175   .text:0000000000000330 .L0 
       src/Riscv.cpp:160    .text:0000000000000330 .L0 
     /tmp/ccsvpkDT.s:1181   .text:0000000000000334 .L0 
     /tmp/ccsvpkDT.s:1183   .text:0000000000000334 .L0 
     /tmp/ccsvpkDT.s:1192   .text:000000000000033c .L0 
     /tmp/ccsvpkDT.s:1195   .text:0000000000000340 .L0 
     /tmp/ccsvpkDT.s:1200   .text:0000000000000348 .L0 
     /tmp/ccsvpkDT.s:1201   .text:0000000000000348 .L0 
     /tmp/ccsvpkDT.s:1204   .text:0000000000000350 .L0 
     /tmp/ccsvpkDT.s:1205   .text:0000000000000350 .L0 
     /tmp/ccsvpkDT.s:1207   .text:0000000000000354 .L0 
     /tmp/ccsvpkDT.s:1210   .text:000000000000035c .L0 
     /tmp/ccsvpkDT.s:1211   .text:000000000000035c .L0 
     /tmp/ccsvpkDT.s:1217   .text:0000000000000368 .L0 
     /tmp/ccsvpkDT.s:1220   .text:0000000000000368 .L0 
     /tmp/ccsvpkDT.s:1221   .text:0000000000000368 .L0 
     /tmp/ccsvpkDT.s:1223   .text:000000000000036c .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 51


     /tmp/ccsvpkDT.s:1225   .text:0000000000000370 .L0 
     /tmp/ccsvpkDT.s:1230   .text:0000000000000374 .L0 
     /tmp/ccsvpkDT.s:1236   .text:0000000000000378 .L0 
     /tmp/ccsvpkDT.s:1237   .text:0000000000000378 .L0 
     /tmp/ccsvpkDT.s:1239   .text:000000000000037c .L0 
     /tmp/ccsvpkDT.s:1241   .text:0000000000000380 .L0 
     /tmp/ccsvpkDT.s:1243   .text:0000000000000384 .L0 
     /tmp/ccsvpkDT.s:1251   .text:000000000000038c .L0 
     /tmp/ccsvpkDT.s:1252   .text:000000000000038c .L0 
     /tmp/ccsvpkDT.s:1254   .text:0000000000000390 .L0 
     /tmp/ccsvpkDT.s:1261   .text:000000000000039c .L0 
     /tmp/ccsvpkDT.s:1262   .text:000000000000039c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000039c .L0 
     /tmp/ccsvpkDT.s:1274   .text:00000000000003a0 .L0 
     /tmp/ccsvpkDT.s:1275   .text:00000000000003a0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003a0 .L0 
     /tmp/ccsvpkDT.s:1282   .text:00000000000003a4 .L0 
     /tmp/ccsvpkDT.s:1293   .text:00000000000003a8 .L0 
     /tmp/ccsvpkDT.s:1294   .text:00000000000003a8 .L0 
     /tmp/ccsvpkDT.s:1295   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003a8 .L0 
     /tmp/ccsvpkDT.s:1303   .text:00000000000003b0 .L0 
     /tmp/ccsvpkDT.s:1304   .text:00000000000003b0 .L0 
     /tmp/ccsvpkDT.s:1309   .text:00000000000003b4 .L0 
     /tmp/ccsvpkDT.s:1314   .text:00000000000003b8 .L0 
     /tmp/ccsvpkDT.s:1315   .text:00000000000003b8 .L0 
     /tmp/ccsvpkDT.s:1316   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003b8 .L0 
     /tmp/ccsvpkDT.s:1324   .text:00000000000003c0 .L0 
     /tmp/ccsvpkDT.s:1325   .text:00000000000003c0 .L0 
     /tmp/ccsvpkDT.s:1330   .text:00000000000003c4 .L0 
     /tmp/ccsvpkDT.s:1331   .text:00000000000003c4 .L0 
       src/Riscv.cpp:183    .text:00000000000003c4 .L0 
     /tmp/ccsvpkDT.s:1337   .text:00000000000003c8 .L0 
       src/Riscv.cpp:185    .text:00000000000003c8 .L0 
     /tmp/ccsvpkDT.s:1343   .text:00000000000003cc .L0 
     /tmp/ccsvpkDT.s:1345   .text:00000000000003cc .L0 
     /tmp/ccsvpkDT.s:1348   .text:00000000000003d4 .L0 
       src/Riscv.cpp:191    .text:00000000000003d4 .L0 
     /tmp/ccsvpkDT.s:1358   .text:00000000000003d8 .L0 
     /tmp/ccsvpkDT.s:1359   .text:00000000000003d8 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000003d8 .L0 
     /tmp/ccsvpkDT.s:1371   .text:00000000000003dc .L0 
     /tmp/ccsvpkDT.s:1372   .text:00000000000003dc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003dc .L0 
     /tmp/ccsvpkDT.s:1379   .text:00000000000003e0 .L0 
     /tmp/ccsvpkDT.s:1390   .text:00000000000003e4 .L0 
     /tmp/ccsvpkDT.s:1391   .text:00000000000003e4 .L0 
     /tmp/ccsvpkDT.s:1392   .text:00000000000003e4 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003e4 .L0 
     /tmp/ccsvpkDT.s:1400   .text:00000000000003ec .L0 
     /tmp/ccsvpkDT.s:1401   .text:00000000000003ec .L0 
     /tmp/ccsvpkDT.s:1406   .text:00000000000003f0 .L0 
     /tmp/ccsvpkDT.s:1411   .text:00000000000003f4 .L0 
     /tmp/ccsvpkDT.s:1412   .text:00000000000003f4 .L0 
     /tmp/ccsvpkDT.s:1413   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003f4 .L0 
GAS LISTING /tmp/ccsvpkDT.s 			page 52


     /tmp/ccsvpkDT.s:1421   .text:00000000000003fc .L0 
     /tmp/ccsvpkDT.s:1422   .text:00000000000003fc .L0 
     /tmp/ccsvpkDT.s:1427   .text:0000000000000400 .L0 
     /tmp/ccsvpkDT.s:1428   .text:0000000000000400 .L0 
       src/Riscv.cpp:202    .text:0000000000000400 .L0 
     /tmp/ccsvpkDT.s:1434   .text:0000000000000404 .L0 
       src/Riscv.cpp:204    .text:0000000000000404 .L0 
     /tmp/ccsvpkDT.s:1440   .text:0000000000000408 .L0 
     /tmp/ccsvpkDT.s:1442   .text:0000000000000408 .L0 
     /tmp/ccsvpkDT.s:1445   .text:0000000000000410 .L0 
     /tmp/ccsvpkDT.s:1446   .text:0000000000000410 .L0 
     /tmp/ccsvpkDT.s:1447   .text:0000000000000410 .L0 
     /tmp/ccsvpkDT.s:1457   .text:0000000000000418 .L0 
     /tmp/ccsvpkDT.s:1458   .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000418 .L0 
     /tmp/ccsvpkDT.s:1470   .text:000000000000041c .L0 
     /tmp/ccsvpkDT.s:1471   .text:000000000000041c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000041c .L0 
     /tmp/ccsvpkDT.s:1478   .text:0000000000000420 .L0 
     /tmp/ccsvpkDT.s:1489   .text:0000000000000424 .L0 
     /tmp/ccsvpkDT.s:1490   .text:0000000000000424 .L0 
     /tmp/ccsvpkDT.s:1491   .text:0000000000000424 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000424 .L0 
     /tmp/ccsvpkDT.s:1499   .text:000000000000042c .L0 
     /tmp/ccsvpkDT.s:1500   .text:000000000000042c .L0 
     /tmp/ccsvpkDT.s:1505   .text:0000000000000430 .L0 
     /tmp/ccsvpkDT.s:1510   .text:0000000000000434 .L0 
     /tmp/ccsvpkDT.s:1511   .text:0000000000000434 .L0 
     /tmp/ccsvpkDT.s:1512   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000434 .L0 
     /tmp/ccsvpkDT.s:1520   .text:000000000000043c .L0 
     /tmp/ccsvpkDT.s:1521   .text:000000000000043c .L0 
     /tmp/ccsvpkDT.s:1526   .text:0000000000000440 .L0 
     /tmp/ccsvpkDT.s:1527   .text:0000000000000440 .L0 
     /tmp/ccsvpkDT.s:1530   .text:0000000000000448 .L0 
       src/Riscv.cpp:223    .text:0000000000000448 .L0 
     /tmp/ccsvpkDT.s:1540   .text:000000000000044c .L0 
     /tmp/ccsvpkDT.s:1541   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000044c .L0 
     /tmp/ccsvpkDT.s:1553   .text:0000000000000450 .L0 
     /tmp/ccsvpkDT.s:1554   .text:0000000000000450 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000450 .L0 
     /tmp/ccsvpkDT.s:1561   .text:0000000000000454 .L0 
     /tmp/ccsvpkDT.s:1576   .text:0000000000000458 .L0 
     /tmp/ccsvpkDT.s:1585   .text:0000000000000458 .L0 
     /tmp/ccsvpkDT.s:791    .text:0000000000000214 .L0 
     /tmp/ccsvpkDT.s:948    .text:0000000000000288 .L0 
     /tmp/ccsvpkDT.s:126    .text:0000000000000080 .L25
     /tmp/ccsvpkDT.s:414    .text:000000000000011c .L26
     /tmp/ccsvpkDT.s:561    .text:0000000000000184 .L27
     /tmp/ccsvpkDT.s:653    .text:00000000000001c0 .L28
     /tmp/ccsvpkDT.s:744    .text:00000000000001f8 .L29
     /tmp/ccsvpkDT.s:826    .text:000000000000023c .L30
     /tmp/ccsvpkDT.s:901    .text:000000000000026c .L31
     /tmp/ccsvpkDT.s:980    .text:00000000000002a8 .L32
     /tmp/ccsvpkDT.s:1125   .text:0000000000000310 .L33
     /tmp/ccsvpkDT.s:1284   .text:00000000000003a8 .L34
GAS LISTING /tmp/ccsvpkDT.s 			page 53


     /tmp/ccsvpkDT.s:1381   .text:00000000000003e4 .L35
     /tmp/ccsvpkDT.s:1480   .text:0000000000000424 .L36
     /tmp/ccsvpkDT.s:105    .text:0000000000000060 .L3
     /tmp/ccsvpkDT.s:554    .text:000000000000017c .L22
     /tmp/ccsvpkDT.s:133    .text:0000000000000088 .L5
     /tmp/ccsvpkDT.s:518    .text:000000000000016c .L6
     /tmp/ccsvpkDT.s:1118   .text:0000000000000308 .L23
     /tmp/ccsvpkDT.s:1082   .text:00000000000002f8 .L13
     /tmp/ccsvpkDT.s:1214   .text:0000000000000368 .L17
     /tmp/ccsvpkDT.s:1246   .text:000000000000038c .L15
     /tmp/ccsvpkDT.s:1187   .text:000000000000033c .L16
     /tmp/ccsvpkDT.s:1257   .text:000000000000039c .L18
     /tmp/ccsvpkDT.s:4239   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccsvpkDT.s:6248   .debug_str:0000000000000970 .LASF187
     /tmp/ccsvpkDT.s:6006   .debug_str:000000000000018c .LASF188
     /tmp/ccsvpkDT.s:6122   .debug_str:0000000000000593 .LASF189
     /tmp/ccsvpkDT.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccsvpkDT.s:1579   .text:0000000000000458 .Letext0
     /tmp/ccsvpkDT.s:5950   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccsvpkDT.s:6172   .debug_str:000000000000074f .LASF3
     /tmp/ccsvpkDT.s:6064   .debug_str:0000000000000389 .LASF0
     /tmp/ccsvpkDT.s:6100   .debug_str:00000000000004fe .LASF1
     /tmp/ccsvpkDT.s:6186   .debug_str:00000000000007a5 .LASF2
     /tmp/ccsvpkDT.s:6198   .debug_str:000000000000081a .LASF4
     /tmp/ccsvpkDT.s:6076   .debug_str:00000000000003d4 .LASF5
     /tmp/ccsvpkDT.s:5964   .debug_str:0000000000000057 .LASF6
     /tmp/ccsvpkDT.s:6148   .debug_str:0000000000000674 .LASF7
     /tmp/ccsvpkDT.s:6090   .debug_str:00000000000004a1 .LASF8
     /tmp/ccsvpkDT.s:6040   .debug_str:00000000000002ab .LASF9
     /tmp/ccsvpkDT.s:6046   .debug_str:00000000000002dd .LASF10
     /tmp/ccsvpkDT.s:5996   .debug_str:000000000000013a .LASF11
     /tmp/ccsvpkDT.s:6030   .debug_str:0000000000000261 .LASF12
     /tmp/ccsvpkDT.s:6008   .debug_str:000000000000019a .LASF13
     /tmp/ccsvpkDT.s:5994   .debug_str:000000000000012a .LASF14
     /tmp/ccsvpkDT.s:6224   .debug_str:00000000000008d7 .LASF15
     /tmp/ccsvpkDT.s:6024   .debug_str:0000000000000212 .LASF16
     /tmp/ccsvpkDT.s:6214   .debug_str:00000000000008a1 .LASF17
     /tmp/ccsvpkDT.s:6296   .debug_str:0000000000000b8f .LASF54
     /tmp/ccsvpkDT.s:6056   .debug_str:000000000000034e .LASF50
     /tmp/ccsvpkDT.s:6062   .debug_str:0000000000000371 .LASF52
     /tmp/ccsvpkDT.s:6276   .debug_str:0000000000000ae4 .LASF18
     /tmp/ccsvpkDT.s:6264   .debug_str:0000000000000aa4 .LASF20
     /tmp/ccsvpkDT.s:6182   .debug_str:0000000000000791 .LASF22
     /tmp/ccsvpkDT.s:6140   .debug_str:000000000000063e .LASF24
     /tmp/ccsvpkDT.s:6160   .debug_str:00000000000006e0 .LASF19
     /tmp/ccsvpkDT.s:6162   .debug_str:00000000000006e7 .LASF21
     /tmp/ccsvpkDT.s:6136   .debug_str:0000000000000623 .LASF23
     /tmp/ccsvpkDT.s:6094   .debug_str:00000000000004d6 .LASF25
     /tmp/ccsvpkDT.s:6308   .debug_str:0000000000000bc5 .LASF26
     /tmp/ccsvpkDT.s:6254   .debug_str:0000000000000a4e .LASF27
     /tmp/ccsvpkDT.s:6132   .debug_str:0000000000000616 .LASF28
     /tmp/ccsvpkDT.s:6138   .debug_str:000000000000062a .LASF29
     /tmp/ccsvpkDT.s:6106   .debug_str:0000000000000524 .LASF30
     /tmp/ccsvpkDT.s:6166   .debug_str:0000000000000715 .LASF31
     /tmp/ccsvpkDT.s:6336   .debug_str:0000000000000ca3 .LASF32
     /tmp/ccsvpkDT.s:6070   .debug_str:00000000000003a1 .LASF33
     /tmp/ccsvpkDT.s:6220   .debug_str:00000000000008c3 .LASF34
GAS LISTING /tmp/ccsvpkDT.s 			page 54


     /tmp/ccsvpkDT.s:6202   .debug_str:0000000000000847 .LASF35
     /tmp/ccsvpkDT.s:6204   .debug_str:000000000000085a .LASF36
     /tmp/ccsvpkDT.s:6000   .debug_str:000000000000014e .LASF37
     /tmp/ccsvpkDT.s:6022   .debug_str:000000000000020c .LASF38
     /tmp/ccsvpkDT.s:6060   .debug_str:000000000000035f .LASF39
     /tmp/ccsvpkDT.s:6068   .debug_str:000000000000039b .LASF40
     /tmp/ccsvpkDT.s:6014   .debug_str:00000000000001cf .LASF41
     /tmp/ccsvpkDT.s:5966   .debug_str:000000000000005e .LASF42
     /tmp/ccsvpkDT.s:6192   .debug_str:00000000000007d2 .LASF43
     /tmp/ccsvpkDT.s:6184   .debug_str:000000000000079a .LASF44
     /tmp/ccsvpkDT.s:6330   .debug_str:0000000000000c75 .LASF45
     /tmp/ccsvpkDT.s:6300   .debug_str:0000000000000b9a .LASF46
     /tmp/ccsvpkDT.s:6312   .debug_str:0000000000000bd9 .LASF47
     /tmp/ccsvpkDT.s:6294   .debug_str:0000000000000b85 .LASF48
     /tmp/ccsvpkDT.s:6124   .debug_str:00000000000005c3 .LASF49
     /tmp/ccsvpkDT.s:6306   .debug_str:0000000000000bb6 .LASF51
     /tmp/ccsvpkDT.s:6044   .debug_str:00000000000002c1 .LASF53
     /tmp/ccsvpkDT.s:6150   .debug_str:0000000000000687 .LASF133
     /tmp/ccsvpkDT.s:6086   .debug_str:0000000000000462 .LASF135
     /tmp/ccsvpkDT.s:6144   .debug_str:0000000000000658 .LASF55
     /tmp/ccsvpkDT.s:6310   .debug_str:0000000000000bcd .LASF56
     /tmp/ccsvpkDT.s:6126   .debug_str:00000000000005d9 .LASF57
     /tmp/ccsvpkDT.s:6230   .debug_str:00000000000008f3 .LASF58
     /tmp/ccsvpkDT.s:5988   .debug_str:00000000000000ec .LASF60
     /tmp/ccsvpkDT.s:6278   .debug_str:0000000000000aed .LASF59
     /tmp/ccsvpkDT.s:6026   .debug_str:0000000000000228 .LASF61
     /tmp/ccsvpkDT.s:6080   .debug_str:0000000000000412 .LASF63
     /tmp/ccsvpkDT.s:6190   .debug_str:00000000000007c8 .LASF62
     /tmp/ccsvpkDT.s:6282   .debug_str:0000000000000afc .LASF64
     /tmp/ccsvpkDT.s:5968   .debug_str:0000000000000069 .LASF74
     /tmp/ccsvpkDT.s:6038   .debug_str:00000000000002a1 .LASF65
     /tmp/ccsvpkDT.s:6210   .debug_str:000000000000087d .LASF141
     /tmp/ccsvpkDT.s:6318   .debug_str:0000000000000c1b .LASF66
     /tmp/ccsvpkDT.s:6324   .debug_str:0000000000000c3a .LASF190
     /tmp/ccsvpkDT.s:6084   .debug_str:0000000000000446 .LASF191
     /tmp/ccsvpkDT.s:6088   .debug_str:0000000000000484 .LASF67
     /tmp/ccsvpkDT.s:5992   .debug_str:0000000000000115 .LASF68
     /tmp/ccsvpkDT.s:6196   .debug_str:0000000000000805 .LASF69
     /tmp/ccsvpkDT.s:6338   .debug_str:0000000000000cab .LASF70
     /tmp/ccsvpkDT.s:6280   .debug_str:0000000000000af7 .LASF73
     /tmp/ccsvpkDT.s:6098   .debug_str:00000000000004f9 .LASF71
     /tmp/ccsvpkDT.s:5998   .debug_str:0000000000000149 .LASF72
     /tmp/ccsvpkDT.s:6246   .debug_str:000000000000094d .LASF75
     /tmp/ccsvpkDT.s:6218   .debug_str:00000000000008be .LASF76
     /tmp/ccsvpkDT.s:6134   .debug_str:000000000000061e .LASF77
     /tmp/ccsvpkDT.s:6130   .debug_str:0000000000000611 .LASF78
     /tmp/ccsvpkDT.s:6288   .debug_str:0000000000000b47 .LASF79
     /tmp/ccsvpkDT.s:6164   .debug_str:00000000000006fa .LASF80
     /tmp/ccsvpkDT.s:6054   .debug_str:0000000000000333 .LASF192
     /tmp/ccsvpkDT.s:6332   .debug_str:0000000000000c8d .LASF81
     /tmp/ccsvpkDT.s:5958   .debug_str:000000000000002b .LASF82
     /tmp/ccsvpkDT.s:5962   .debug_str:0000000000000047 .LASF83
     /tmp/ccsvpkDT.s:6082   .debug_str:000000000000042e .LASF84
     /tmp/ccsvpkDT.s:6180   .debug_str:0000000000000788 .LASF85
     /tmp/ccsvpkDT.s:6328   .debug_str:0000000000000c54 .LASF86
     /tmp/ccsvpkDT.s:6110   .debug_str:0000000000000540 .LASF87
     /tmp/ccsvpkDT.s:6292   .debug_str:0000000000000b65 .LASF88
GAS LISTING /tmp/ccsvpkDT.s 			page 55


     /tmp/ccsvpkDT.s:6146   .debug_str:0000000000000668 .LASF89
     /tmp/ccsvpkDT.s:6092   .debug_str:00000000000004b4 .LASF90
     /tmp/ccsvpkDT.s:6340   .debug_str:0000000000000cb9 .LASF91
     /tmp/ccsvpkDT.s:6178   .debug_str:0000000000000769 .LASF92
     /tmp/ccsvpkDT.s:6208   .debug_str:0000000000000872 .LASF93
     /tmp/ccsvpkDT.s:6032   .debug_str:0000000000000270 .LASF94
     /tmp/ccsvpkDT.s:6168   .debug_str:0000000000000729 .LASF95
     /tmp/ccsvpkDT.s:6002   .debug_str:0000000000000161 .LASF96
     /tmp/ccsvpkDT.s:5970   .debug_str:0000000000000082 .LASF97
     /tmp/ccsvpkDT.s:6320   .debug_str:0000000000000c2d .LASF193
     /tmp/ccsvpkDT.s:5990   .debug_str:000000000000010f .LASF98
     /tmp/ccsvpkDT.s:5982   .debug_str:00000000000000c5 .LASF99
     /tmp/ccsvpkDT.s:6116   .debug_str:0000000000000572 .LASF100
     /tmp/ccsvpkDT.s:6234   .debug_str:0000000000000907 .LASF101
     /tmp/ccsvpkDT.s:6226   .debug_str:00000000000008e3 .LASF102
     /tmp/ccsvpkDT.s:6096   .debug_str:00000000000004e9 .LASF103
     /tmp/ccsvpkDT.s:6236   .debug_str:000000000000090f .LASF104
     /tmp/ccsvpkDT.s:6194   .debug_str:00000000000007ea .LASF105
     /tmp/ccsvpkDT.s:5976   .debug_str:00000000000000a3 .LASF106
     /tmp/ccsvpkDT.s:6286   .debug_str:0000000000000b2c .LASF107
     /tmp/ccsvpkDT.s:6104   .debug_str:0000000000000517 .LASF108
     /tmp/ccsvpkDT.s:6016   .debug_str:00000000000001e1 .LASF109
     /tmp/ccsvpkDT.s:6222   .debug_str:00000000000008ca .LASF110
     /tmp/ccsvpkDT.s:6200   .debug_str:0000000000000821 .LASF111
     /tmp/ccsvpkDT.s:6142   .debug_str:0000000000000653 .LASF145
     /tmp/ccsvpkDT.s:6102   .debug_str:0000000000000511 .LASF112
     /tmp/ccsvpkDT.s:5954   .debug_str:0000000000000011 .LASF113
     /tmp/ccsvpkDT.s:6322   .debug_str:0000000000000c34 .LASF114
     /tmp/ccsvpkDT.s:6156   .debug_str:00000000000006b8 .LASF115
     /tmp/ccsvpkDT.s:6244   .debug_str:0000000000000945 .LASF194
     /tmp/ccsvpkDT.s:6072   .debug_str:00000000000003b5 .LASF116
     /tmp/ccsvpkDT.s:6284   .debug_str:0000000000000b18 .LASF117
     /tmp/ccsvpkDT.s:6004   .debug_str:000000000000017f .LASF118
     /tmp/ccsvpkDT.s:6260   .debug_str:0000000000000a80 .LASF119
     /tmp/ccsvpkDT.s:6176   .debug_str:0000000000000759 .LASF120
     /tmp/ccsvpkDT.s:5986   .debug_str:00000000000000dc .LASF121
     /tmp/ccsvpkDT.s:6316   .debug_str:0000000000000c0b .LASF122
     /tmp/ccsvpkDT.s:6252   .debug_str:0000000000000a3d .LASF123
     /tmp/ccsvpkDT.s:6212   .debug_str:000000000000088e .LASF124
     /tmp/ccsvpkDT.s:5952   .debug_str:0000000000000000 .LASF125
     /tmp/ccsvpkDT.s:6052   .debug_str:0000000000000318 .LASF126
     /tmp/ccsvpkDT.s:5960   .debug_str:0000000000000042 .LASF127
     /tmp/ccsvpkDT.s:6326   .debug_str:0000000000000c4e .LASF128
     /tmp/ccsvpkDT.s:6262   .debug_str:0000000000000a9c .LASF129
     /tmp/ccsvpkDT.s:6258   .debug_str:0000000000000a76 .LASF130
     /tmp/ccsvpkDT.s:6232   .debug_str:00000000000008fe .LASF131
     /tmp/ccsvpkDT.s:6304   .debug_str:0000000000000bac .LASF132
     /tmp/ccsvpkDT.s:5984   .debug_str:00000000000000ce .LASF134
     /tmp/ccsvpkDT.s:6170   .debug_str:0000000000000732 .LASF136
     /tmp/ccsvpkDT.s:6010   .debug_str:00000000000001aa .LASF137
     /tmp/ccsvpkDT.s:6078   .debug_str:00000000000003e6 .LASF138
     /tmp/ccsvpkDT.s:6018   .debug_str:00000000000001fe .LASF139
     /tmp/ccsvpkDT.s:6012   .debug_str:00000000000001b8 .LASF140
     /tmp/ccsvpkDT.s:6206   .debug_str:0000000000000861 .LASF142
     /tmp/ccsvpkDT.s:6250   .debug_str:0000000000000a34 .LASF143
     /tmp/ccsvpkDT.s:6290   .debug_str:0000000000000b5e .LASF144
     /tmp/ccsvpkDT.s:6334   .debug_str:0000000000000c9a .LASF146
GAS LISTING /tmp/ccsvpkDT.s 			page 56


     /tmp/ccsvpkDT.s:6174   .debug_str:0000000000000754 .LASF147
     /tmp/ccsvpkDT.s:6036   .debug_str:0000000000000296 .LASF148
     /tmp/ccsvpkDT.s:6048   .debug_str:00000000000002eb .LASF149
     /tmp/ccsvpkDT.s:6020   .debug_str:0000000000000207 .LASF150
     /tmp/ccsvpkDT.s:6266   .debug_str:0000000000000ab9 .LASF151
     /tmp/ccsvpkDT.s:6228   .debug_str:00000000000008ec .LASF152
     /tmp/ccsvpkDT.s:6074   .debug_str:00000000000003bb .LASF153
     /tmp/ccsvpkDT.s:6058   .debug_str:0000000000000359 .LASF154
     /tmp/ccsvpkDT.s:6050   .debug_str:00000000000002ff .LASF155
     /tmp/ccsvpkDT.s:6118   .debug_str:000000000000057a .LASF156
     /tmp/ccsvpkDT.s:6108   .debug_str:000000000000052c .LASF157
     /tmp/ccsvpkDT.s:6188   .debug_str:00000000000007b3 .LASF158
     /tmp/ccsvpkDT.s:6238   .debug_str:000000000000091a .LASF159
     /tmp/ccsvpkDT.s:6154   .debug_str:00000000000006b0 .LASF160
     /tmp/ccsvpkDT.s:6042   .debug_str:00000000000002bb .LASF161
     /tmp/ccsvpkDT.s:6112   .debug_str:0000000000000548 .LASF162
     /tmp/ccsvpkDT.s:6314   .debug_str:0000000000000bef .LASF163
     /tmp/ccsvpkDT.s:6120   .debug_str:000000000000058e .LASF164
     /tmp/ccsvpkDT.s:6128   .debug_str:00000000000005fd .LASF165
     /tmp/ccsvpkDT.s:6066   .debug_str:0000000000000396 .LASF166
     /tmp/ccsvpkDT.s:5972   .debug_str:000000000000008a .LASF167
     /tmp/ccsvpkDT.s:5980   .debug_str:00000000000000b4 .LASF168
     /tmp/ccsvpkDT.s:6114   .debug_str:0000000000000551 .LASF169
     /tmp/ccsvpkDT.s:6256   .debug_str:0000000000000a62 .LASF170
     /tmp/ccsvpkDT.s:6152   .debug_str:000000000000069c .LASF171
     /tmp/ccsvpkDT.s:6242   .debug_str:0000000000000934 .LASF172
     /tmp/ccsvpkDT.s:6240   .debug_str:000000000000092f .LASF173
     /tmp/ccsvpkDT.s:6034   .debug_str:0000000000000291 .LASF175
     /tmp/ccsvpkDT.s:5978   .debug_str:00000000000000af .LASF174
     /tmp/ccsvpkDT.s:6028   .debug_str:000000000000024a .LASF184
     /tmp/ccsvpkDT.s:46     .text:0000000000000020 .LFB51
     /tmp/ccsvpkDT.s:1577   .text:0000000000000458 .LFE51
     /tmp/ccsvpkDT.s:6216   .debug_str:00000000000008b7 .LASF176
     /tmp/ccsvpkDT.s:5323   .debug_loc:0000000000000000 .LLST0
     /tmp/ccsvpkDT.s:5956   .debug_str:0000000000000025 .LASF177
     /tmp/ccsvpkDT.s:5330   .debug_loc:0000000000000023 .LLST1
     /tmp/ccsvpkDT.s:6268   .debug_str:0000000000000ad0 .LASF178
     /tmp/ccsvpkDT.s:5381   .debug_loc:0000000000000117 .LLST2
     /tmp/ccsvpkDT.s:417    .text:000000000000011c .LBB144
     /tmp/ccsvpkDT.s:562    .text:0000000000000184 .LBE144
     /tmp/ccsvpkDT.s:6298   .debug_str:0000000000000b95 .LASF179
     /tmp/ccsvpkDT.s:5392   .debug_loc:000000000000014d .LLST3
     /tmp/ccsvpkDT.s:6302   .debug_str:0000000000000ba4 .LASF180
     /tmp/ccsvpkDT.s:5399   .debug_loc:0000000000000170 .LLST4
     /tmp/ccsvpkDT.s:5406   .debug_loc:0000000000000193 .LLST5
     /tmp/ccsvpkDT.s:6270   .debug_str:0000000000000ad5 .LASF181
     /tmp/ccsvpkDT.s:5413   .debug_loc:00000000000001b6 .LLST6
     /tmp/ccsvpkDT.s:6272   .debug_str:0000000000000ada .LASF182
     /tmp/ccsvpkDT.s:5420   .debug_loc:00000000000001d9 .LLST7
     /tmp/ccsvpkDT.s:6274   .debug_str:0000000000000adf .LASF183
     /tmp/ccsvpkDT.s:5427   .debug_loc:00000000000001fc .LLST8
     /tmp/ccsvpkDT.s:5434   .debug_loc:000000000000021f .LLST9
     /tmp/ccsvpkDT.s:5441   .debug_loc:0000000000000242 .LLST10
     /tmp/ccsvpkDT.s:419    .text:000000000000011c .LBB145
     /tmp/ccsvpkDT.s:434    .text:0000000000000128 .LBE145
     /tmp/ccsvpkDT.s:439    .text:000000000000012c .LBB147
     /tmp/ccsvpkDT.s:455    .text:0000000000000138 .LBE147
GAS LISTING /tmp/ccsvpkDT.s 			page 57


     /tmp/ccsvpkDT.s:529    .text:0000000000000170 .LBB149
     /tmp/ccsvpkDT.s:540    .text:0000000000000174 .LBE149
     /tmp/ccsvpkDT.s:5448   .debug_loc:0000000000000265 .LLST11
     /tmp/ccsvpkDT.s:542    .text:0000000000000174 .LBB151
     /tmp/ccsvpkDT.s:556    .text:000000000000017c .LBE151
     /tmp/ccsvpkDT.s:5455   .debug_loc:0000000000000288 .LLST12
     /tmp/ccsvpkDT.s:509    .text:0000000000000160 .LVL19
     /tmp/ccsvpkDT.s:565    .text:0000000000000184 .LBB319
     /tmp/ccsvpkDT.s:656    .text:00000000000001c0 .LBE319
     /tmp/ccsvpkDT.s:5462   .debug_loc:00000000000002ab .LLST70
     /tmp/ccsvpkDT.s:5469   .debug_loc:00000000000002ce .LLST71
     /tmp/ccsvpkDT.s:5476   .debug_loc:00000000000002f1 .LLST72
     /tmp/ccsvpkDT.s:567    .text:0000000000000184 .LBB320
     /tmp/ccsvpkDT.s:583    .text:0000000000000190 .LBE320
     /tmp/ccsvpkDT.s:588    .text:0000000000000194 .LBB322
     /tmp/ccsvpkDT.s:604    .text:00000000000001a0 .LBE322
     /tmp/ccsvpkDT.s:628    .text:00000000000001b4 .LBB324
     /tmp/ccsvpkDT.s:639    .text:00000000000001b8 .LBE324
     /tmp/ccsvpkDT.s:5483   .debug_loc:0000000000000314 .LLST73
     /tmp/ccsvpkDT.s:641    .text:00000000000001b8 .LBB326
     /tmp/ccsvpkDT.s:655    .text:00000000000001c0 .LBE326
     /tmp/ccsvpkDT.s:5490   .debug_loc:0000000000000337 .LLST74
     /tmp/ccsvpkDT.s:618    .text:00000000000001b0 .LVL30
     /tmp/ccsvpkDT.s:658    .text:00000000000001c0 .LBB300
     /tmp/ccsvpkDT.s:747    .text:00000000000001f8 .LBE300
     /tmp/ccsvpkDT.s:5497   .debug_loc:000000000000035a .LLST65
     /tmp/ccsvpkDT.s:5504   .debug_loc:000000000000037d .LLST66
     /tmp/ccsvpkDT.s:5511   .debug_loc:00000000000003a0 .LLST67
     /tmp/ccsvpkDT.s:660    .text:00000000000001c0 .LBB301
     /tmp/ccsvpkDT.s:676    .text:00000000000001cc .LBE301
     /tmp/ccsvpkDT.s:681    .text:00000000000001d0 .LBB303
     /tmp/ccsvpkDT.s:697    .text:00000000000001dc .LBE303
     /tmp/ccsvpkDT.s:719    .text:00000000000001ec .LBB305
     /tmp/ccsvpkDT.s:730    .text:00000000000001f0 .LBE305
     /tmp/ccsvpkDT.s:5518   .debug_loc:00000000000003c3 .LLST68
     /tmp/ccsvpkDT.s:732    .text:00000000000001f0 .LBB307
     /tmp/ccsvpkDT.s:746    .text:00000000000001f8 .LBE307
     /tmp/ccsvpkDT.s:5525   .debug_loc:00000000000003e6 .LLST69
     /tmp/ccsvpkDT.s:709    .text:00000000000001e8 .LVL38
     /tmp/ccsvpkDT.s:749    .text:00000000000001f8 .LBB282
     /tmp/ccsvpkDT.s:829    .text:000000000000023c .LBE282
     /tmp/ccsvpkDT.s:5532   .debug_loc:0000000000000409 .LLST61
     /tmp/ccsvpkDT.s:5539   .debug_loc:000000000000042c .LLST62
     /tmp/ccsvpkDT.s:751    .text:00000000000001f8 .LBB283
     /tmp/ccsvpkDT.s:767    .text:0000000000000204 .LBE283
     /tmp/ccsvpkDT.s:772    .text:0000000000000208 .LBB285
     /tmp/ccsvpkDT.s:788    .text:0000000000000214 .LBE285
     /tmp/ccsvpkDT.s:801    .text:0000000000000230 .LBB287
     /tmp/ccsvpkDT.s:812    .text:0000000000000234 .LBE287
     /tmp/ccsvpkDT.s:5546   .debug_loc:000000000000044f .LLST63
     /tmp/ccsvpkDT.s:814    .text:0000000000000234 .LBB289
     /tmp/ccsvpkDT.s:828    .text:000000000000023c .LBE289
     /tmp/ccsvpkDT.s:5553   .debug_loc:0000000000000472 .LLST64
     /tmp/ccsvpkDT.s:799    .text:0000000000000230 .LVL45
     /tmp/ccsvpkDT.s:831    .text:000000000000023c .LBB265
     /tmp/ccsvpkDT.s:904    .text:000000000000026c .LBE265
     /tmp/ccsvpkDT.s:5560   .debug_loc:0000000000000495 .LLST57
GAS LISTING /tmp/ccsvpkDT.s 			page 58


     /tmp/ccsvpkDT.s:5567   .debug_loc:00000000000004b8 .LLST58
     /tmp/ccsvpkDT.s:833    .text:000000000000023c .LBB266
     /tmp/ccsvpkDT.s:849    .text:0000000000000248 .LBE266
     /tmp/ccsvpkDT.s:854    .text:000000000000024c .LBB268
     /tmp/ccsvpkDT.s:870    .text:0000000000000258 .LBE268
     /tmp/ccsvpkDT.s:876    .text:0000000000000260 .LBB270
     /tmp/ccsvpkDT.s:887    .text:0000000000000264 .LBE270
     /tmp/ccsvpkDT.s:5574   .debug_loc:00000000000004db .LLST59
     /tmp/ccsvpkDT.s:889    .text:0000000000000264 .LBB272
     /tmp/ccsvpkDT.s:903    .text:000000000000026c .LBE272
     /tmp/ccsvpkDT.s:5581   .debug_loc:00000000000004fe .LLST60
     /tmp/ccsvpkDT.s:874    .text:0000000000000260 .LVL51
     /tmp/ccsvpkDT.s:906    .text:000000000000026c .LBB249
     /tmp/ccsvpkDT.s:983    .text:00000000000002a8 .LBE249
     /tmp/ccsvpkDT.s:5588   .debug_loc:0000000000000521 .LLST53
     /tmp/ccsvpkDT.s:5595   .debug_loc:0000000000000544 .LLST54
     /tmp/ccsvpkDT.s:908    .text:000000000000026c .LBB250
     /tmp/ccsvpkDT.s:924    .text:0000000000000278 .LBE250
     /tmp/ccsvpkDT.s:929    .text:000000000000027c .LBB252
     /tmp/ccsvpkDT.s:945    .text:0000000000000288 .LBE252
     /tmp/ccsvpkDT.s:955    .text:000000000000029c .LBB254
     /tmp/ccsvpkDT.s:966    .text:00000000000002a0 .LBE254
     /tmp/ccsvpkDT.s:5602   .debug_loc:0000000000000567 .LLST55
     /tmp/ccsvpkDT.s:968    .text:00000000000002a0 .LBB256
     /tmp/ccsvpkDT.s:982    .text:00000000000002a8 .LBE256
     /tmp/ccsvpkDT.s:5609   .debug_loc:000000000000058a .LLST56
     /tmp/ccsvpkDT.s:953    .text:000000000000029c .LVL57
     /tmp/ccsvpkDT.s:985    .text:00000000000002a8 .LBB230
     /tmp/ccsvpkDT.s:1126   .text:0000000000000310 .LBE230
     /tmp/ccsvpkDT.s:5616   .debug_loc:00000000000005ad .LLST42
     /tmp/ccsvpkDT.s:5623   .debug_loc:00000000000005d0 .LLST43
     /tmp/ccsvpkDT.s:5630   .debug_loc:00000000000005f3 .LLST44
     /tmp/ccsvpkDT.s:5637   .debug_loc:0000000000000616 .LLST45
     /tmp/ccsvpkDT.s:5644   .debug_loc:0000000000000639 .LLST46
     /tmp/ccsvpkDT.s:5651   .debug_loc:000000000000065c .LLST47
     /tmp/ccsvpkDT.s:987    .text:00000000000002a8 .LBB231
     /tmp/ccsvpkDT.s:1003   .text:00000000000002b4 .LBE231
     /tmp/ccsvpkDT.s:1008   .text:00000000000002b8 .LBB233
     /tmp/ccsvpkDT.s:1024   .text:00000000000002c4 .LBE233
     /tmp/ccsvpkDT.s:1056   .text:00000000000002e0 .LBB235
     /tmp/ccsvpkDT.s:1072   .text:00000000000002ec .LBE235
     /tmp/ccsvpkDT.s:5668   .debug_loc:00000000000006a7 .LLST48
     /tmp/ccsvpkDT.s:5675   .debug_loc:00000000000006ca .LLST49
     /tmp/ccsvpkDT.s:1062   .text:00000000000002e4 .LBB237
     /tmp/ccsvpkDT.s:1070   .text:00000000000002ec .LBE237
     /tmp/ccsvpkDT.s:5682   .debug_loc:00000000000006ed .LLST50
     /tmp/ccsvpkDT.s:1093   .text:00000000000002fc .LBB239
     /tmp/ccsvpkDT.s:1104   .text:0000000000000300 .LBE239
     /tmp/ccsvpkDT.s:5691   .debug_loc:0000000000000712 .LLST51
     /tmp/ccsvpkDT.s:1106   .text:0000000000000300 .LBB241
     /tmp/ccsvpkDT.s:1120   .text:0000000000000308 .LBE241
     /tmp/ccsvpkDT.s:5698   .debug_loc:0000000000000735 .LLST52
     /tmp/ccsvpkDT.s:1055   .text:00000000000002e0 .LVL65
     /tmp/ccsvpkDT.s:1128   .text:0000000000000310 .LBB208
     /tmp/ccsvpkDT.s:1287   .text:00000000000003a8 .LBE208
     /tmp/ccsvpkDT.s:5705   .debug_loc:0000000000000758 .LLST31
     /tmp/ccsvpkDT.s:5712   .debug_loc:000000000000077b .LLST32
GAS LISTING /tmp/ccsvpkDT.s 			page 59


     /tmp/ccsvpkDT.s:5719   .debug_loc:000000000000079e .LLST33
     /tmp/ccsvpkDT.s:5726   .debug_loc:00000000000007c1 .LLST34
     /tmp/ccsvpkDT.s:5936   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccsvpkDT.s:5733   .debug_loc:00000000000007e4 .LLST35
     /tmp/ccsvpkDT.s:1189   .text:000000000000033c .LBB214
     /tmp/ccsvpkDT.s:5740   .debug_loc:0000000000000807 .LLST36
     /tmp/ccsvpkDT.s:5755   .debug_loc:0000000000000841 .LLST37
     /tmp/ccsvpkDT.s:5766   .debug_loc:0000000000000877 .LLST38
     /tmp/ccsvpkDT.s:1196   .text:0000000000000348 .LVL80
     /tmp/ccsvpkDT.s:1213   .text:0000000000000368 .LVL81
     /tmp/ccsvpkDT.s:1130   .text:0000000000000310 .LBB209
     /tmp/ccsvpkDT.s:1145   .text:000000000000031c .LBE209
     /tmp/ccsvpkDT.s:1150   .text:0000000000000320 .LBB211
     /tmp/ccsvpkDT.s:1166   .text:000000000000032c .LBE211
     /tmp/ccsvpkDT.s:1218   .text:0000000000000368 .LBB218
     /tmp/ccsvpkDT.s:1228   .text:0000000000000374 .LBE218
     /tmp/ccsvpkDT.s:5773   .debug_loc:000000000000089a .LLST39
     /tmp/ccsvpkDT.s:1259   .text:000000000000039c .LBB221
     /tmp/ccsvpkDT.s:1270   .text:00000000000003a0 .LBE221
     /tmp/ccsvpkDT.s:5782   .debug_loc:00000000000008bf .LLST40
     /tmp/ccsvpkDT.s:1272   .text:00000000000003a0 .LBB223
     /tmp/ccsvpkDT.s:1286   .text:00000000000003a8 .LBE223
     /tmp/ccsvpkDT.s:5789   .debug_loc:00000000000008e2 .LLST41
     /tmp/ccsvpkDT.s:1256   .text:000000000000039c .LVL85
     /tmp/ccsvpkDT.s:1289   .text:00000000000003a8 .LBB195
     /tmp/ccsvpkDT.s:1384   .text:00000000000003e4 .LBE195
     /tmp/ccsvpkDT.s:5796   .debug_loc:0000000000000905 .LLST25
     /tmp/ccsvpkDT.s:5803   .debug_loc:0000000000000928 .LLST26
     /tmp/ccsvpkDT.s:5810   .debug_loc:000000000000094b .LLST27
     /tmp/ccsvpkDT.s:5817   .debug_loc:000000000000096e .LLST28
     /tmp/ccsvpkDT.s:1291   .text:00000000000003a8 .LBB196
     /tmp/ccsvpkDT.s:1307   .text:00000000000003b4 .LBE196
     /tmp/ccsvpkDT.s:1312   .text:00000000000003b8 .LBB198
     /tmp/ccsvpkDT.s:1328   .text:00000000000003c4 .LBE198
     /tmp/ccsvpkDT.s:1356   .text:00000000000003d8 .LBB200
     /tmp/ccsvpkDT.s:1367   .text:00000000000003dc .LBE200
     /tmp/ccsvpkDT.s:5824   .debug_loc:0000000000000991 .LLST29
     /tmp/ccsvpkDT.s:1369   .text:00000000000003dc .LBB202
     /tmp/ccsvpkDT.s:1383   .text:00000000000003e4 .LBE202
     /tmp/ccsvpkDT.s:5831   .debug_loc:00000000000009b4 .LLST30
     /tmp/ccsvpkDT.s:1346   .text:00000000000003d4 .LVL92
     /tmp/ccsvpkDT.s:1386   .text:00000000000003e4 .LBB183
     /tmp/ccsvpkDT.s:1483   .text:0000000000000424 .LBE183
     /tmp/ccsvpkDT.s:5838   .debug_loc:00000000000009d7 .LLST19
     /tmp/ccsvpkDT.s:5845   .debug_loc:00000000000009fa .LLST20
     /tmp/ccsvpkDT.s:5852   .debug_loc:0000000000000a1d .LLST21
     /tmp/ccsvpkDT.s:5859   .debug_loc:0000000000000a40 .LLST22
     /tmp/ccsvpkDT.s:1388   .text:00000000000003e4 .LBB184
     /tmp/ccsvpkDT.s:1404   .text:00000000000003f0 .LBE184
     /tmp/ccsvpkDT.s:1409   .text:00000000000003f4 .LBB186
     /tmp/ccsvpkDT.s:1425   .text:0000000000000400 .LBE186
     /tmp/ccsvpkDT.s:1455   .text:0000000000000418 .LBB188
     /tmp/ccsvpkDT.s:1466   .text:000000000000041c .LBE188
     /tmp/ccsvpkDT.s:5867   .debug_loc:0000000000000a64 .LLST23
     /tmp/ccsvpkDT.s:1468   .text:000000000000041c .LBB190
     /tmp/ccsvpkDT.s:1482   .text:0000000000000424 .LBE190
     /tmp/ccsvpkDT.s:5874   .debug_loc:0000000000000a87 .LLST24
GAS LISTING /tmp/ccsvpkDT.s 			page 60


     /tmp/ccsvpkDT.s:1443   .text:0000000000000410 .LVL100
     /tmp/ccsvpkDT.s:1485   .text:0000000000000424 .LBB173
     /tmp/ccsvpkDT.s:1564   .text:0000000000000458 .LBE173
     /tmp/ccsvpkDT.s:1487   .text:0000000000000424 .LBB174
     /tmp/ccsvpkDT.s:1503   .text:0000000000000430 .LBE174
     /tmp/ccsvpkDT.s:1508   .text:0000000000000434 .LBB176
     /tmp/ccsvpkDT.s:1524   .text:0000000000000440 .LBE176
     /tmp/ccsvpkDT.s:1538   .text:000000000000044c .LBB178
     /tmp/ccsvpkDT.s:1549   .text:0000000000000450 .LBE178
     /tmp/ccsvpkDT.s:5881   .debug_loc:0000000000000aaa .LLST18
     /tmp/ccsvpkDT.s:1551   .text:0000000000000450 .LBB180
     /tmp/ccsvpkDT.s:1563   .text:0000000000000458 .LBE180
     /tmp/ccsvpkDT.s:1528   .text:0000000000000448 .LVL107
     /tmp/ccsvpkDT.s:311    .text:00000000000000e0 .LBB164
     /tmp/ccsvpkDT.s:396    .text:0000000000000118 .LBE164
     /tmp/ccsvpkDT.s:5888   .debug_loc:0000000000000acd .LLST13
     /tmp/ccsvpkDT.s:5895   .debug_loc:0000000000000af0 .LLST14
     /tmp/ccsvpkDT.s:5902   .debug_loc:0000000000000b13 .LLST15
     /tmp/ccsvpkDT.s:313    .text:00000000000000e0 .LBB165
     /tmp/ccsvpkDT.s:329    .text:00000000000000ec .LBE165
     /tmp/ccsvpkDT.s:334    .text:00000000000000f0 .LBB167
     /tmp/ccsvpkDT.s:350    .text:00000000000000fc .LBE167
     /tmp/ccsvpkDT.s:371    .text:0000000000000110 .LBB169
     /tmp/ccsvpkDT.s:382    .text:0000000000000114 .LBE169
     /tmp/ccsvpkDT.s:5909   .debug_loc:0000000000000b36 .LLST16
     /tmp/ccsvpkDT.s:384    .text:0000000000000114 .LBB171
     /tmp/ccsvpkDT.s:395    .text:0000000000000118 .LBE171
     /tmp/ccsvpkDT.s:5916   .debug_loc:0000000000000b59 .LLST17
     /tmp/ccsvpkDT.s:369    .text:0000000000000110 .LVL9
     /tmp/ccsvpkDT.s:66     .text:0000000000000040 .LBB140
     /tmp/ccsvpkDT.s:82     .text:000000000000004c .LBE140
     /tmp/ccsvpkDT.s:10     .text:0000000000000000 .LFB50
     /tmp/ccsvpkDT.s:40     .text:0000000000000020 .LFE50
     /tmp/ccsvpkDT.s:5974   .debug_str:000000000000009e .LASF186
     /tmp/ccsvpkDT.s:6158   .debug_str:00000000000006cc .LASF185
     /tmp/ccsvpkDT.s:85     .text:0000000000000050 .LVL0
     /tmp/ccsvpkDT.s:100    .text:0000000000000058 .LVL2
     /tmp/ccsvpkDT.s:94     .text:0000000000000054 .LVL1
     /tmp/ccsvpkDT.s:104    .text:0000000000000060 .LVL3
     /tmp/ccsvpkDT.s:125    .text:0000000000000080 .LVL4
     /tmp/ccsvpkDT.s:327    .text:00000000000000ec .LVL5
     /tmp/ccsvpkDT.s:413    .text:000000000000011c .LVL12
     /tmp/ccsvpkDT.s:581    .text:0000000000000190 .LVL25
     /tmp/ccsvpkDT.s:652    .text:00000000000001c0 .LVL33
     /tmp/ccsvpkDT.s:674    .text:00000000000001cc .LVL34
     /tmp/ccsvpkDT.s:743    .text:00000000000001f8 .LVL41
     /tmp/ccsvpkDT.s:765    .text:0000000000000204 .LVL42
     /tmp/ccsvpkDT.s:825    .text:000000000000023c .LVL47
     /tmp/ccsvpkDT.s:847    .text:0000000000000248 .LVL48
     /tmp/ccsvpkDT.s:900    .text:000000000000026c .LVL53
     /tmp/ccsvpkDT.s:922    .text:0000000000000278 .LVL54
     /tmp/ccsvpkDT.s:979    .text:00000000000002a8 .LVL59
     /tmp/ccsvpkDT.s:1001   .text:00000000000002b4 .LVL60
     /tmp/ccsvpkDT.s:1124   .text:0000000000000310 .LVL73
     /tmp/ccsvpkDT.s:1184   .text:0000000000000338 .LVL77
     /tmp/ccsvpkDT.s:1283   .text:00000000000003a8 .LVL87
     /tmp/ccsvpkDT.s:1305   .text:00000000000003b4 .LVL88
GAS LISTING /tmp/ccsvpkDT.s 			page 61


     /tmp/ccsvpkDT.s:1380   .text:00000000000003e4 .LVL95
     /tmp/ccsvpkDT.s:1402   .text:00000000000003f0 .LVL96
     /tmp/ccsvpkDT.s:1479   .text:0000000000000424 .LVL103
     /tmp/ccsvpkDT.s:1501   .text:0000000000000430 .LVL104
     /tmp/ccsvpkDT.s:611    .text:00000000000001a4 .LVL28
     /tmp/ccsvpkDT.s:616    .text:00000000000001a8 .LVL29
     /tmp/ccsvpkDT.s:704    .text:00000000000001e0 .LVL37
     /tmp/ccsvpkDT.s:437    .text:000000000000012c .LVL13
     /tmp/ccsvpkDT.s:560    .text:0000000000000184 .LVL24
     /tmp/ccsvpkDT.s:453    .text:0000000000000138 .LVL14
     /tmp/ccsvpkDT.s:486    .text:000000000000014c .LVL15
     /tmp/ccsvpkDT.s:492    .text:0000000000000150 .LVL16
     /tmp/ccsvpkDT.s:498    .text:0000000000000154 .LVL17
     /tmp/ccsvpkDT.s:504    .text:0000000000000158 .LVL18
     /tmp/ccsvpkDT.s:519    .text:000000000000016c .LVL20
     /tmp/ccsvpkDT.s:553    .text:000000000000017c .LVL23
     /tmp/ccsvpkDT.s:527    .text:0000000000000170 .LVL21
     /tmp/ccsvpkDT.s:537    .text:0000000000000174 .LVL22
     /tmp/ccsvpkDT.s:586    .text:0000000000000194 .LVL26
     /tmp/ccsvpkDT.s:602    .text:00000000000001a0 .LVL27
     /tmp/ccsvpkDT.s:626    .text:00000000000001b4 .LVL31
     /tmp/ccsvpkDT.s:636    .text:00000000000001b8 .LVL32
     /tmp/ccsvpkDT.s:679    .text:00000000000001d0 .LVL35
     /tmp/ccsvpkDT.s:695    .text:00000000000001dc .LVL36
     /tmp/ccsvpkDT.s:717    .text:00000000000001ec .LVL39
     /tmp/ccsvpkDT.s:727    .text:00000000000001f0 .LVL40
     /tmp/ccsvpkDT.s:770    .text:0000000000000208 .LVL43
     /tmp/ccsvpkDT.s:786    .text:0000000000000214 .LVL44
     /tmp/ccsvpkDT.s:809    .text:0000000000000234 .LVL46
     /tmp/ccsvpkDT.s:852    .text:000000000000024c .LVL49
     /tmp/ccsvpkDT.s:868    .text:0000000000000258 .LVL50
     /tmp/ccsvpkDT.s:884    .text:0000000000000264 .LVL52
     /tmp/ccsvpkDT.s:927    .text:000000000000027c .LVL55
     /tmp/ccsvpkDT.s:943    .text:0000000000000288 .LVL56
     /tmp/ccsvpkDT.s:963    .text:00000000000002a0 .LVL58
     /tmp/ccsvpkDT.s:1006   .text:00000000000002b8 .LVL61
     /tmp/ccsvpkDT.s:1022   .text:00000000000002c4 .LVL62
     /tmp/ccsvpkDT.s:1043   .text:00000000000002d0 .LVL63
     /tmp/ccsvpkDT.s:1049   .text:00000000000002d4 .LVL64
     /tmp/ccsvpkDT.s:1068   .text:00000000000002ec .LVL67
     /tmp/ccsvpkDT.s:1077   .text:00000000000002f0 .LVL68
     /tmp/ccsvpkDT.s:1083   .text:00000000000002f8 .LVL69
     /tmp/ccsvpkDT.s:1117   .text:0000000000000308 .LVL72
     /tmp/ccsvpkDT.s:1061   .text:00000000000002e4 .LVL66
     /tmp/ccsvpkDT.s:1091   .text:00000000000002fc .LVL70
     /tmp/ccsvpkDT.s:1101   .text:0000000000000300 .LVL71
     /tmp/ccsvpkDT.s:1148   .text:0000000000000320 .LVL74
     /tmp/ccsvpkDT.s:1164   .text:000000000000032c .LVL75
     /tmp/ccsvpkDT.s:1179   .text:0000000000000334 .LVL76
     /tmp/ccsvpkDT.s:1186   .text:000000000000033c .LVL78
     /tmp/ccsvpkDT.s:1233   .text:0000000000000378 .LVL83
     /tmp/ccsvpkDT.s:1245   .text:000000000000038c .LVL84
     /tmp/ccsvpkDT.s:1193   .text:0000000000000340 .LVL79
     /tmp/ccsvpkDT.s:1226   .text:0000000000000374 .LVL82
     /tmp/ccsvpkDT.s:1267   .text:00000000000003a0 .LVL86
     /tmp/ccsvpkDT.s:1310   .text:00000000000003b8 .LVL89
     /tmp/ccsvpkDT.s:1326   .text:00000000000003c4 .LVL90
GAS LISTING /tmp/ccsvpkDT.s 			page 62


     /tmp/ccsvpkDT.s:1341   .text:00000000000003cc .LVL91
     /tmp/ccsvpkDT.s:1354   .text:00000000000003d8 .LVL93
     /tmp/ccsvpkDT.s:1364   .text:00000000000003dc .LVL94
     /tmp/ccsvpkDT.s:1407   .text:00000000000003f4 .LVL97
     /tmp/ccsvpkDT.s:1423   .text:0000000000000400 .LVL98
     /tmp/ccsvpkDT.s:1438   .text:0000000000000408 .LVL99
     /tmp/ccsvpkDT.s:1453   .text:0000000000000418 .LVL101
     /tmp/ccsvpkDT.s:1463   .text:000000000000041c .LVL102
     /tmp/ccsvpkDT.s:1536   .text:000000000000044c .LVL108
     /tmp/ccsvpkDT.s:1546   .text:0000000000000450 .LVL109
     /tmp/ccsvpkDT.s:332    .text:00000000000000f0 .LVL6
     /tmp/ccsvpkDT.s:348    .text:00000000000000fc .LVL7
     /tmp/ccsvpkDT.s:363    .text:0000000000000104 .LVL8
     /tmp/ccsvpkDT.s:379    .text:0000000000000114 .LVL10
     /tmp/ccsvpkDT.s:392    .text:0000000000000118 .LVL11
     /tmp/ccsvpkDT.s:1586   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccsvpkDT.s:1188   .text:000000000000033c .LBB213
     /tmp/ccsvpkDT.s:1215   .text:0000000000000368 .LBE213
     /tmp/ccsvpkDT.s:1231   .text:0000000000000378 .LBB220
     /tmp/ccsvpkDT.s:1249   .text:000000000000038c .LBE220
     /tmp/ccsvpkDT.s:1198   .text:0000000000000348 .LBE214
     /tmp/ccsvpkDT.s:1234   .text:0000000000000378 .LBB217
     /tmp/ccsvpkDT.s:1248   .text:000000000000038c .LBE217

UNDEFINED SYMBOLS
_ZN8KConsole4putcEc
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN8KConsole4getcEv
