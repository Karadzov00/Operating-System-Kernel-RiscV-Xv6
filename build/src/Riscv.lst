GAS LISTING /tmp/ccvcuV9K.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB178:
  30              	.LBB179:
  31              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccvcuV9K.s 			page 2


  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/Riscv.hpp ****     static void popSppSpie();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     // read register scause
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     // write register scause
  24:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     // read register sepc
  27:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     // write register sepc
  30:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     // read register stvec
  33:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     // write register stvec
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     // read register stval
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     // write register stval
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     // mask set register sip
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     // mask clear register sip
  55:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     // read register sip
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     // write register sip
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/ccvcuV9K.s 			page 3


  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // mask set register sstatus
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // mask clear register sstatus
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     // read register sstatus
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     // write register sstatus
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     // supervisor trap
  83:src/../h/Riscv.hpp ****     static void supervisorTrap();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void TrapConsole();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void initKernel();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     // supervisor trap handler
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** //    static void syscallHandler();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     uint64 volatile scause;
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 104:src/../h/Riscv.hpp ****     return scause;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/Riscv.hpp **** {
 109:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/Riscv.hpp **** {
 114:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 116:src/../h/Riscv.hpp ****     return sepc;
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/Riscv.hpp **** {
 121:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
GAS LISTING /tmp/ccvcuV9K.s 			page 4


 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/Riscv.hpp **** {
 133:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/Riscv.hpp **** {
 138:src/../h/Riscv.hpp ****     uint64 volatile stval;
 139:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/Riscv.hpp ****     return stval;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/Riscv.hpp **** {
 155:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sip;
 161:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/Riscv.hpp ****     return sip;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** //mask set
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** //mask clear
 177:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 178:src/../h/Riscv.hpp **** {
 179:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  32              		.loc 2 179 5
  33              		.loc 2 179 68 is_stmt 0
GAS LISTING /tmp/ccvcuV9K.s 			page 5


  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 179 "src/../h/Riscv.hpp" 1
 180              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE179:
  42              	.LBE178:
  18:src/Riscv.cpp ****     __asm__ volatile ("sret");  //exit privileged regime
  43              		.loc 1 18 5 is_stmt 1
  44              		.loc 1 18 30 is_stmt 0
  45              	#APP
  46              	# 18 "src/Riscv.cpp" 1
  19              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 19 1
  50              	#NO_APP
  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE54:
  60              		.align	2
  61              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  63              	_ZN5Riscv20handleSupervisorTrapEv:
  64              	.LFB55:
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** bool Riscv::privilege=false;
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  65              		.loc 1 23 35 is_stmt 1
  66              		.cfi_startproc
  67 0028 130101F0 		addi	sp,sp,-256
  68              		.cfi_def_cfa_offset 256
  69 002c 233C110E 		sd	ra,248(sp)
  70 0030 2338810E 		sd	s0,240(sp)
  71 0034 2334910E 		sd	s1,232(sp)
  72 0038 2330210F 		sd	s2,224(sp)
  73 003c 233C310D 		sd	s3,216(sp)
  74 0040 2338410D 		sd	s4,208(sp)
  75              		.cfi_offset 1, -8
  76              		.cfi_offset 8, -16
  77              		.cfi_offset 9, -24
  78              		.cfi_offset 18, -32
  79              		.cfi_offset 19, -40
  80              		.cfi_offset 20, -48
  81 0044 13040110 		addi	s0,sp,256
  82              		.cfi_def_cfa 8, 0
  24:src/Riscv.cpp ****     uint64 scause = r_scause();
  83              		.loc 1 24 5
  84              	.LBB180:
GAS LISTING /tmp/ccvcuV9K.s 			page 6


  85              	.LBB181:
 102:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  86              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return scause;
  87              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return scause;
  88              		.loc 2 103 72 is_stmt 0
  89              	#APP
  90              	# 103 "src/../h/Riscv.hpp" 1
  91              		csrr a5, scause
  92              	# 0 "" 2
  93              	#NO_APP
  94 004c 2330F4F0 		sd	a5,-256(s0)
 104:src/../h/Riscv.hpp **** }
  95              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
  96              		.loc 2 104 12 is_stmt 0
  97 0050 033704F0 		ld	a4,-256(s0)
  98              	.LVL2:
  99              	.LBE181:
 100              	.LBE180:
  25:src/Riscv.cpp ****     uint64 a0reg;
 101              		.loc 1 25 5 is_stmt 1
  26:src/Riscv.cpp ****     uint64 arg1;
 102              		.loc 1 26 5
  27:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
 103              		.loc 1 27 5
 104              		.loc 1 27 49 is_stmt 0
 105              	#APP
 106              	# 27 "src/Riscv.cpp" 1
  28              	
 107              		mv s1, a0
 108              	# 0 "" 2
 109              	.LVL3:
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
 110              		.loc 1 31 5 is_stmt 1
 111              	#NO_APP
 112              	.LBB182:
 113 0058 9307F0FF 		li	a5,-1
 114 005c 9397F703 		slli	a5,a5,63
 115 0060 93871700 		addi	a5,a5,1
 116 0064 630EF702 		beq	a4,a5,.L32
 117              	.LBE182:
  32:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  33:src/Riscv.cpp ****     }
  34:src/Riscv.cpp ****     else if(!privilege){
 118              		.loc 1 34 10
 119              	.LBB453:
 120              	.LBB183:
 121              		.loc 1 34 13 is_stmt 0
 122 0068 97070000 		lbu	a5,.LANCHOR0
 122      83C70700 
 123              		.loc 1 34 10
 124 0070 639C0704 		bnez	a5,.L6
 125              	.LBB184:
GAS LISTING /tmp/ccvcuV9K.s 			page 7


  35:src/Riscv.cpp ****         uint64 sepc = r_sepc();
 126              		.loc 1 35 9 is_stmt 1
 127              	.LBB185:
 128              	.LBB186:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 129              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 130              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 131              		.loc 2 115 64 is_stmt 0
 132              	#APP
 133              	# 115 "src/../h/Riscv.hpp" 1
 134              		csrr a5, sepc
 135              	# 0 "" 2
 136              	#NO_APP
 137 0078 2334F4F0 		sd	a5,-248(s0)
 116:src/../h/Riscv.hpp **** }
 138              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 139              		.loc 2 116 12 is_stmt 0
 140 007c 833784F0 		ld	a5,-248(s0)
 141              	.LVL4:
 142              	.LBE186:
 143              	.LBE185:
  36:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 144              		.loc 1 36 9 is_stmt 1
 145              	.LBB187:
 146              	.LBB188:
 179:src/../h/Riscv.hpp **** }
 147              		.loc 2 179 5
 179:src/../h/Riscv.hpp **** }
 148              		.loc 2 179 68 is_stmt 0
 149 0080 13070010 		li	a4,256
 150              	.LVL5:
 151              	#APP
 152              	# 179 "src/../h/Riscv.hpp" 1
 153              		csrc sstatus, a4
 154              	# 0 "" 2
 155              	.LVL6:
 156              	#NO_APP
 157              	.LBE188:
 158              	.LBE187:
  37:src/Riscv.cpp ****         privilege=true;
 159              		.loc 1 37 9 is_stmt 1
 160              		.loc 1 37 18 is_stmt 0
 161 0088 13071000 		li	a4,1
 162 008c 97060000 		sb	a4,.LANCHOR0,a3
 162      2380E600 
  38:src/Riscv.cpp ****         w_sepc(sepc + 4);
 163              		.loc 1 38 9 is_stmt 1
 164              		.loc 1 38 15 is_stmt 0
 165 0094 93874700 		addi	a5,a5,4
 166              	.LVL7:
 167              	.LBB189:
 168              	.LBB190:
 121:src/../h/Riscv.hpp **** }
 169              		.loc 2 121 5 is_stmt 1
GAS LISTING /tmp/ccvcuV9K.s 			page 8


 121:src/../h/Riscv.hpp **** }
 170              		.loc 2 121 65 is_stmt 0
 171              	#APP
 172              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 173              		csrw sepc, a5
 174              	# 0 "" 2
 175              		.loc 2 122 1
 176              	#NO_APP
 177 009c 6F00C000 		j	.L3
 178              	.LVL8:
 179              	.L32:
 180              	.LBE190:
 181              	.LBE189:
 182              	.LBE184:
 183              	.LBE183:
  32:src/Riscv.cpp ****     }
 184              		.loc 1 32 9 is_stmt 1
 185              	.LBB436:
 186              	.LBB437:
 155:src/../h/Riscv.hpp **** }
 187              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 188              		.loc 2 155 64 is_stmt 0
 189 00a0 93072000 		li	a5,2
 190              	#APP
 191              	# 155 "src/../h/Riscv.hpp" 1
 192              		csrc sip, a5
 193              	# 0 "" 2
 194              	.LVL9:
 195              	#NO_APP
 196              	.L3:
 197              	.LBE437:
 198              	.LBE436:
 199              	.LBE453:
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
  41:src/Riscv.cpp ****         console_handler();
  42:src/Riscv.cpp ****     }
  43:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  44:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp ****         //call from yield
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****         if(a0reg==0x11){
  49:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  50:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****             _thread::thread_t *arg1;
  54:src/Riscv.cpp ****             _thread::Body arg2;
  55:src/Riscv.cpp ****             uint64 arg3;
  56:src/Riscv.cpp ****             uint64 *arg4;
  57:src/Riscv.cpp **** 
  58:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  60:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
GAS LISTING /tmp/ccvcuV9K.s 			page 9


  61:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  66:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  67:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  68:src/Riscv.cpp **** 
  69:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  70:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  71:src/Riscv.cpp ****             *arg1=t;
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****             uint64 ret;
  74:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  75:src/Riscv.cpp ****             else ret =-1;
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             //return _thread* adress through a0
  78:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp ****             w_sstatus(sstatus);
  81:src/Riscv.cpp ****             w_sepc(sepc);
  82:src/Riscv.cpp ****         }
  83:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  84:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  85:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  86:src/Riscv.cpp ****             //kmem_alloc
  87:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  90:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             //write return value to a0 register
  93:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****             w_sstatus(sstatus);
  96:src/Riscv.cpp ****             w_sepc(sepc);
  97:src/Riscv.cpp ****         }
  98:src/Riscv.cpp ****         else if(a0reg==0x02){
  99:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 100:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 105:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 106:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****             w_sstatus(sstatus);
 109:src/Riscv.cpp ****             w_sepc(sepc);
 110:src/Riscv.cpp ****         }
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****         else if(a0reg==0x12){
 113:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 114:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             _thread::running->finished=true;
 117:src/Riscv.cpp ****             _thread::dispatch();
GAS LISTING /tmp/ccvcuV9K.s 			page 10


 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             w_sstatus(sstatus);
 120:src/Riscv.cpp ****             w_sepc(sepc);
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****         }
 124:src/Riscv.cpp ****         else if(a0reg == 0x13){
 125:src/Riscv.cpp ****             //thread dispatch
 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****             _thread::dispatch();
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****             w_sstatus(sstatus);
 133:src/Riscv.cpp ****             w_sepc(sepc);
 134:src/Riscv.cpp ****         }
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****         else if(a0reg==0x04){
 137:src/Riscv.cpp ****             //call from yield
 138:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 139:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 142:src/Riscv.cpp ****             _thread::dispatch();
 143:src/Riscv.cpp **** 
 144:src/Riscv.cpp ****             w_sstatus(sstatus);
 145:src/Riscv.cpp ****             w_sepc(sepc);
 146:src/Riscv.cpp ****         }
 147:src/Riscv.cpp ****         else if(a0reg==0x21){
 148:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 149:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 152:src/Riscv.cpp ****            uint64 arg2;
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 155:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 158:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 161:src/Riscv.cpp ****             sem->open();
 162:src/Riscv.cpp ****             *arg1=sem;
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             uint64 ret=0;
 165:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 166:src/Riscv.cpp ****             else ret=-1;
 167:src/Riscv.cpp **** 
 168:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 169:src/Riscv.cpp **** 
 170:src/Riscv.cpp ****             w_sstatus(sstatus);
 171:src/Riscv.cpp ****             w_sepc(sepc);
 172:src/Riscv.cpp ****         }
 173:src/Riscv.cpp ****         else if(a0reg==0x22){
 174:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
GAS LISTING /tmp/ccvcuV9K.s 			page 11


 175:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 185:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 186:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 187:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 188:src/Riscv.cpp ****                 t->setDeblocked();
 189:src/Riscv.cpp ****                 sem->val++;
 190:src/Riscv.cpp ****                 Scheduler::put(t);
 191:src/Riscv.cpp ****             }
 192:src/Riscv.cpp ****              sem->close();
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp ****             delete sem;
 195:src/Riscv.cpp **** 
 196:src/Riscv.cpp ****             w_sstatus(sstatus);
 197:src/Riscv.cpp ****             w_sepc(sepc);
 198:src/Riscv.cpp ****         }
 199:src/Riscv.cpp ****         else if(a0reg==0x23){
 200:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 201:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****             uint64 ret;
 210:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 211:src/Riscv.cpp ****             if(arg1->isOpened()) {
 212:src/Riscv.cpp ****                  ret = arg1->wait();
 213:src/Riscv.cpp ****             }
 214:src/Riscv.cpp ****             else{
 215:src/Riscv.cpp ****                 ret=-1;
 216:src/Riscv.cpp ****             }
 217:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 218:src/Riscv.cpp **** 
 219:src/Riscv.cpp ****             w_sstatus(sstatus);
 220:src/Riscv.cpp ****             w_sepc(sepc);
 221:src/Riscv.cpp ****         }
 222:src/Riscv.cpp ****         else if(a0reg==0x24){
 223:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 224:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 231:src/Riscv.cpp **** 
GAS LISTING /tmp/ccvcuV9K.s 			page 12


 232:src/Riscv.cpp ****             uint64 ret;
 233:src/Riscv.cpp ****             if(arg1->isOpened()) {
 234:src/Riscv.cpp ****                 arg1->signal();
 235:src/Riscv.cpp ****                 ret=0;
 236:src/Riscv.cpp ****             }
 237:src/Riscv.cpp ****             else{
 238:src/Riscv.cpp ****                 ret = -1;
 239:src/Riscv.cpp ****             }
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 242:src/Riscv.cpp **** 
 243:src/Riscv.cpp ****             w_sstatus(sstatus);
 244:src/Riscv.cpp ****             w_sepc(sepc);
 245:src/Riscv.cpp ****         }
 246:src/Riscv.cpp ****         else if(a0reg==0x41){
 247:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 248:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 249:src/Riscv.cpp **** 
 250:src/Riscv.cpp ****             //call method from kernel Console class
 251:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 252:src/Riscv.cpp ****             char c = __getc();
 253:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 254:src/Riscv.cpp **** 
 255:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 256:src/Riscv.cpp **** 
 257:src/Riscv.cpp **** 
 258:src/Riscv.cpp ****             w_sstatus(sstatus);
 259:src/Riscv.cpp ****             w_sepc(sepc);
 260:src/Riscv.cpp ****         }
 261:src/Riscv.cpp ****         else if(a0reg==0x42){
 262:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 263:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             char c;
 266:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 271:src/Riscv.cpp ****             __putc(c);
 272:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 273:src/Riscv.cpp **** 
 274:src/Riscv.cpp ****             w_sstatus(sstatus);
 275:src/Riscv.cpp ****             w_sepc(sepc);
 276:src/Riscv.cpp ****         }
 277:src/Riscv.cpp ****         else{
 278:src/Riscv.cpp ****             // unexpected trap cause
 279:src/Riscv.cpp ****         }
 280:src/Riscv.cpp **** 
 281:src/Riscv.cpp ****     }
 282:src/Riscv.cpp **** 
 283:src/Riscv.cpp **** }
 200              		.loc 1 283 1
 201 00a8 8330810F 		ld	ra,248(sp)
 202              		.cfi_remember_state
 203              		.cfi_restore 1
 204 00ac 0334010F 		ld	s0,240(sp)
GAS LISTING /tmp/ccvcuV9K.s 			page 13


 205              		.cfi_restore 8
 206              		.cfi_def_cfa 2, 256
 207 00b0 8334810E 		ld	s1,232(sp)
 208              		.cfi_restore 9
 209 00b4 0339010E 		ld	s2,224(sp)
 210              		.cfi_restore 18
 211 00b8 8339810D 		ld	s3,216(sp)
 212              		.cfi_restore 19
 213 00bc 033A010D 		ld	s4,208(sp)
 214              		.cfi_restore 20
 215 00c0 13010110 		addi	sp,sp,256
 216              		.cfi_def_cfa_offset 0
 217 00c4 67800000 		jr	ra
 218              	.LVL10:
 219              	.L6:
 220              		.cfi_restore_state
  40:src/Riscv.cpp ****         console_handler();
 221              		.loc 1 40 10 is_stmt 1
 222              	.LBB454:
 223              	.LBB438:
 224              	.LBB191:
 225 00c8 9307F0FF 		li	a5,-1
 226 00cc 9397F703 		slli	a5,a5,63
 227 00d0 93879700 		addi	a5,a5,9
 228 00d4 6302F70C 		beq	a4,a5,.L33
 229              	.LBE191:
 230              	.LBE438:
 231              	.LBE454:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 232              		.loc 1 43 10
 233              	.LBB455:
 234              	.LBB439:
 235              	.LBB422:
 236              	.LBB192:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 237              		.loc 1 43 45 is_stmt 0
 238 00d8 130787FF 		addi	a4,a4,-8
 239              	.LVL11:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 240              		.loc 1 43 10
 241 00dc 93071000 		li	a5,1
 242 00e0 E3E4E7FC 		bgtu	a4,a5,.L3
 243              	.LBE192:
 244              	.LBE422:
 245              	.LBE439:
 246              	.LBE455:
  48:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 247              		.loc 1 48 9 is_stmt 1
 248              	.LBB456:
 249              	.LBB440:
 250              	.LBB423:
 251              	.LBB409:
 252              	.LBB193:
 253 00e4 93071001 		li	a5,17
 254 00e8 638EF40A 		beq	s1,a5,.L34
 255              	.LVL12:
 256              	.L8:
GAS LISTING /tmp/ccvcuV9K.s 			page 14


 257              	.LBE193:
 258              	.LBE409:
 259              	.LBE423:
 260              	.LBE440:
 261              	.LBE456:
  83:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 262              		.loc 1 83 9
 263              	.LBB457:
 264              	.LBB441:
 265              	.LBB424:
 266              	.LBB410:
 267              	.LBB203:
 268 00ec 93071000 		li	a5,1
 269 00f0 638EF410 		beq	s1,a5,.L35
 270              	.LBE203:
 271              	.LBE410:
 272              	.LBE424:
 273              	.LBE441:
 274              	.LBE457:
  98:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 275              		.loc 1 98 14
 276              	.LBB458:
 277              	.LBB442:
 278              	.LBB425:
 279              	.LBB411:
 280              	.LBB397:
 281              	.LBB204:
 282 00f4 93072000 		li	a5,2
 283 00f8 638AF414 		beq	s1,a5,.L36
 284              	.LBE204:
 285              	.LBE397:
 286              	.LBE411:
 287              	.LBE425:
 288              	.LBE442:
 289              	.LBE458:
 112:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 290              		.loc 1 112 14
 291              	.LBB459:
 292              	.LBB443:
 293              	.LBB426:
 294              	.LBB412:
 295              	.LBB398:
 296              	.LBB378:
 297              	.LBB205:
 298 00fc 93072001 		li	a5,18
 299 0100 6384F418 		beq	s1,a5,.L37
 300              	.LBE205:
 301              	.LBE378:
 302              	.LBE398:
 303              	.LBE412:
 304              	.LBE426:
 305              	.LBE443:
 306              	.LBE459:
 124:src/Riscv.cpp ****             //thread dispatch
 307              		.loc 1 124 14
 308              	.LBB460:
 309              	.LBB444:
GAS LISTING /tmp/ccvcuV9K.s 			page 15


 310              	.LBB427:
 311              	.LBB413:
 312              	.LBB399:
 313              	.LBB379:
 314              	.LBB360:
 315              	.LBB206:
 316 0104 93073001 		li	a5,19
 317 0108 6382F41C 		beq	s1,a5,.L38
 318              	.LBE206:
 319              	.LBE360:
 320              	.LBE379:
 321              	.LBE399:
 322              	.LBE413:
 323              	.LBE427:
 324              	.LBE444:
 325              	.LBE460:
 136:src/Riscv.cpp ****             //call from yield
 326              		.loc 1 136 14
 327              	.LBB461:
 328              	.LBB445:
 329              	.LBB428:
 330              	.LBB414:
 331              	.LBB400:
 332              	.LBB380:
 333              	.LBB361:
 334              	.LBB343:
 335              	.LBB207:
 336 010c 93074000 		li	a5,4
 337 0110 6386F41E 		beq	s1,a5,.L39
 338              	.LBE207:
 339              	.LBE343:
 340              	.LBE361:
 341              	.LBE380:
 342              	.LBE400:
 343              	.LBE414:
 344              	.LBE428:
 345              	.LBE445:
 346              	.LBE461:
 147:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 347              		.loc 1 147 14
 348              	.LBB462:
 349              	.LBB446:
 350              	.LBB429:
 351              	.LBB415:
 352              	.LBB401:
 353              	.LBB381:
 354              	.LBB362:
 355              	.LBB344:
 356              	.LBB327:
 357              	.LBB208:
 358 0114 93071002 		li	a5,33
 359 0118 6380F422 		beq	s1,a5,.L40
 360              	.LBE208:
 361              	.LBE327:
 362              	.LBE344:
 363              	.LBE362:
 364              	.LBE381:
GAS LISTING /tmp/ccvcuV9K.s 			page 16


 365              	.LBE401:
 366              	.LBE415:
 367              	.LBE429:
 368              	.LBE446:
 369              	.LBE462:
 173:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 370              		.loc 1 173 14
 371              	.LBB463:
 372              	.LBB447:
 373              	.LBB430:
 374              	.LBB416:
 375              	.LBB402:
 376              	.LBB382:
 377              	.LBB363:
 378              	.LBB345:
 379              	.LBB328:
 380              	.LBB312:
 381              	.LBB209:
 382 011c 93072002 		li	a5,34
 383 0120 6384F428 		beq	s1,a5,.L41
 384              	.LBE209:
 385              	.LBE312:
 386              	.LBE328:
 387              	.LBE345:
 388              	.LBE363:
 389              	.LBE382:
 390              	.LBE402:
 391              	.LBE416:
 392              	.LBE430:
 393              	.LBE447:
 394              	.LBE463:
 199:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 395              		.loc 1 199 14
 396              	.LBB464:
 397              	.LBB448:
 398              	.LBB431:
 399              	.LBB417:
 400              	.LBB403:
 401              	.LBB383:
 402              	.LBB364:
 403              	.LBB346:
 404              	.LBB329:
 405              	.LBB313:
 406              	.LBB292:
 407              	.LBB210:
 408 0124 93073002 		li	a5,35
 409 0128 638CF430 		beq	s1,a5,.L42
 410              	.LBE210:
 411              	.LBE292:
 412              	.LBE313:
 413              	.LBE329:
 414              	.LBE346:
 415              	.LBE364:
 416              	.LBE383:
 417              	.LBE403:
 418              	.LBE417:
 419              	.LBE431:
GAS LISTING /tmp/ccvcuV9K.s 			page 17


 420              	.LBE448:
 421              	.LBE464:
 222:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 422              		.loc 1 222 14
 423              	.LBB465:
 424              	.LBB449:
 425              	.LBB432:
 426              	.LBB418:
 427              	.LBB404:
 428              	.LBB384:
 429              	.LBB365:
 430              	.LBB347:
 431              	.LBB330:
 432              	.LBB314:
 433              	.LBB293:
 434              	.LBB267:
 435              	.LBB211:
 436 012c 93074002 		li	a5,36
 437 0130 638EF434 		beq	s1,a5,.L43
 438              	.LBE211:
 439              	.LBE267:
 440              	.LBE293:
 441              	.LBE314:
 442              	.LBE330:
 443              	.LBE347:
 444              	.LBE365:
 445              	.LBE384:
 446              	.LBE404:
 447              	.LBE418:
 448              	.LBE432:
 449              	.LBE449:
 450              	.LBE465:
 246:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 451              		.loc 1 246 14
 452              	.LBB466:
 453              	.LBB450:
 454              	.LBB433:
 455              	.LBB419:
 456              	.LBB405:
 457              	.LBB385:
 458              	.LBB366:
 459              	.LBB348:
 460              	.LBB331:
 461              	.LBB315:
 462              	.LBB294:
 463              	.LBB268:
 464              	.LBB253:
 465              	.LBB212:
 466 0134 93071004 		li	a5,65
 467 0138 6382F43A 		beq	s1,a5,.L44
 468              	.LBE212:
 469              	.LBE253:
 470              	.LBE268:
 471              	.LBE294:
 472              	.LBE315:
 473              	.LBE331:
 474              	.LBE348:
GAS LISTING /tmp/ccvcuV9K.s 			page 18


 475              	.LBE366:
 476              	.LBE385:
 477              	.LBE405:
 478              	.LBE419:
 479              	.LBE433:
 480              	.LBE450:
 481              	.LBE466:
 261:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 482              		.loc 1 261 14
 483              	.LBB467:
 484              	.LBB451:
 485              	.LBB434:
 486              	.LBB420:
 487              	.LBB406:
 488              	.LBB386:
 489              	.LBB367:
 490              	.LBB349:
 491              	.LBB332:
 492              	.LBB316:
 493              	.LBB295:
 494              	.LBB269:
 495              	.LBB254:
 496              	.LBB240:
 497              	.LBB213:
 498 013c 93072004 		li	a5,66
 499 0140 E394F4F6 		bne	s1,a5,.L3
 500              	.LBB214:
 262:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 501              		.loc 1 262 13
 502              	.LBB215:
 503              	.LBB216:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 504              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 505              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 506              		.loc 2 115 64 is_stmt 0
 507              	#APP
 508              	# 115 "src/../h/Riscv.hpp" 1
 509              		csrr a5, sepc
 510              	# 0 "" 2
 511              	#NO_APP
 512 0148 2334F4FC 		sd	a5,-56(s0)
 116:src/../h/Riscv.hpp **** }
 513              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 514              		.loc 2 116 12 is_stmt 0
 515 014c 833484FC 		ld	s1,-56(s0)
 516              	.LVL13:
 517              	.LBE216:
 518              	.LBE215:
 262:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 519              		.loc 1 262 38
 520 0150 93844400 		addi	s1,s1,4
 521              	.LVL14:
 263:src/Riscv.cpp **** 
 522              		.loc 1 263 13 is_stmt 1
GAS LISTING /tmp/ccvcuV9K.s 			page 19


 523              	.LBB217:
 524              	.LBB218:
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 183:src/../h/Riscv.hpp **** {
 184:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 525              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 526              		.loc 2 185 5
 527              		.loc 2 185 76 is_stmt 0
 528              	#APP
 529              	# 185 "src/../h/Riscv.hpp" 1
 186              	    return sstatus;
 530              		csrr a5, sstatus
 531              	# 0 "" 2
 532              	#NO_APP
 533 0158 2330F4FC 		sd	a5,-64(s0)
 534              		.loc 2 186 5 is_stmt 1
 535              		.loc 2 186 12 is_stmt 0
 536 015c 033904FC 		ld	s2,-64(s0)
 537              	.LVL15:
 538              	.LBE218:
 539              	.LBE217:
 265:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 540              		.loc 1 265 13 is_stmt 1
 266:src/Riscv.cpp **** 
 541              		.loc 1 266 13
 266:src/Riscv.cpp **** 
 542              		.loc 1 266 48 is_stmt 0
 543              	#APP
 544              	# 266 "src/Riscv.cpp" 1
 268:src/Riscv.cpp **** 
 545              		ld a1, 11*8(fp)
 546              	# 0 "" 2
 547              		.loc 1 268 13 is_stmt 1
 268:src/Riscv.cpp **** 
 548              		.loc 1 268 53 is_stmt 0
 549              	# 268 "src/Riscv.cpp" 1
 550              		mv a0, a1
 551              	# 0 "" 2
 552              	#NO_APP
 553 0168 1375F50F 		andi	a0,a0,0xff
 554              	.LVL16:
 270:src/Riscv.cpp ****             __putc(c);
 555              		.loc 1 270 13 is_stmt 1
 270:src/Riscv.cpp ****             __putc(c);
 556              		.loc 1 270 27 is_stmt 0
 557 016c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 557      83B70700 
 558              	.LVL17:
 559              	.LBB219:
 560              	.LBB220:
 133:src/../h/Riscv.hpp **** }
 561              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 562              		.loc 2 133 69 is_stmt 0
 563              	#APP
GAS LISTING /tmp/ccvcuV9K.s 			page 20


 564              	# 133 "src/../h/Riscv.hpp" 1
 565              		csrw stvec, a5
 566              	# 0 "" 2
 567              	.LVL18:
 568              	#NO_APP
 569              	.LBE220:
 570              	.LBE219:
 271:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 571              		.loc 1 271 13 is_stmt 1
 271:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 572              		.loc 1 271 19 is_stmt 0
 573 0178 97000000 		call	__putc@plt
 573      E7800000 
 574              	.LVL19:
 272:src/Riscv.cpp **** 
 575              		.loc 1 272 13 is_stmt 1
 272:src/Riscv.cpp **** 
 576              		.loc 1 272 27 is_stmt 0
 577 0180 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 577      83B70700 
 578              	.LVL20:
 579              	.LBB221:
 580              	.LBB222:
 133:src/../h/Riscv.hpp **** }
 581              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 582              		.loc 2 133 69 is_stmt 0
 583              	#APP
 584              	# 133 "src/../h/Riscv.hpp" 1
 585              		csrw stvec, a5
 586              	# 0 "" 2
 587              	.LVL21:
 588              	#NO_APP
 589              	.LBE222:
 590              	.LBE221:
 274:src/Riscv.cpp ****             w_sepc(sepc);
 591              		.loc 1 274 13 is_stmt 1
 592              	.LBB223:
 593              	.LBB224:
 187:src/../h/Riscv.hpp **** }
 188:src/../h/Riscv.hpp **** 
 189:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 190:src/../h/Riscv.hpp **** {
 191:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 594              		.loc 2 191 5
 595              		.loc 2 191 77 is_stmt 0
 596              	#APP
 597              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 598              		csrw sstatus, s2
 599              	# 0 "" 2
 600              	.LVL22:
 601              	#NO_APP
 602              	.LBE224:
 603              	.LBE223:
 275:src/Riscv.cpp ****         }
 604              		.loc 1 275 13 is_stmt 1
GAS LISTING /tmp/ccvcuV9K.s 			page 21


 605              	.LBB225:
 606              	.LBB226:
 121:src/../h/Riscv.hpp **** }
 607              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 608              		.loc 2 121 65 is_stmt 0
 609              	#APP
 610              	# 121 "src/../h/Riscv.hpp" 1
 611              		csrw sepc, s1
 612              	# 0 "" 2
 613              	.LVL23:
 614              	#NO_APP
 615              	.LBE226:
 616              	.LBE225:
 617              	.LBE214:
 618              	.LBE213:
 619              	.LBE240:
 620              	.LBE254:
 621              	.LBE269:
 622              	.LBE295:
 623              	.LBE316:
 624              	.LBE332:
 625              	.LBE349:
 626              	.LBE367:
 627              	.LBE386:
 628              	.LBE406:
 629              	.LBE420:
 630              	.LBE434:
 631              	.LBE451:
 632              	.LBE467:
 633              		.loc 1 283 1
 634 0194 6FF05FF1 		j	.L3
 635              	.LVL24:
 636              	.L33:
 637              	.LBB468:
 638              	.LBB452:
 639              	.LBB435:
  41:src/Riscv.cpp ****     }
 640              		.loc 1 41 9 is_stmt 1
  41:src/Riscv.cpp ****     }
 641              		.loc 1 41 24 is_stmt 0
 642 0198 97000000 		call	console_handler@plt
 642      E7800000 
 643              	.LVL25:
 644 01a0 6FF09FF0 		j	.L3
 645              	.LVL26:
 646              	.L34:
 647              	.LBB421:
 648              	.LBB407:
 649              	.LBB194:
  49:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 650              		.loc 1 49 13 is_stmt 1
 651              	.LBB195:
 652              	.LBB196:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 653              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccvcuV9K.s 			page 22


 654              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 655              		.loc 2 115 64 is_stmt 0
 656              	#APP
 657              	# 115 "src/../h/Riscv.hpp" 1
 658              		csrr a5, sepc
 659              	# 0 "" 2
 660              	#NO_APP
 661 01a8 233CF4F0 		sd	a5,-232(s0)
 116:src/../h/Riscv.hpp **** }
 662              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 663              		.loc 2 116 12 is_stmt 0
 664 01ac 033984F1 		ld	s2,-232(s0)
 665              	.LBE196:
 666              	.LBE195:
  49:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 667              		.loc 1 49 38
 668 01b0 13094900 		addi	s2,s2,4
 669              	.LVL27:
  50:src/Riscv.cpp **** 
 670              		.loc 1 50 13 is_stmt 1
 671              	.LBB197:
 672              	.LBB198:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 673              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 674              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 675              		.loc 2 185 76 is_stmt 0
 676              	#APP
 677              	# 185 "src/../h/Riscv.hpp" 1
 678              		csrr a5, sstatus
 679              	# 0 "" 2
 680              	#NO_APP
 681 01b8 2338F4F0 		sd	a5,-240(s0)
 186:src/../h/Riscv.hpp **** }
 682              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 683              		.loc 2 186 12 is_stmt 0
 684 01bc 833904F1 		ld	s3,-240(s0)
 685              	.LVL28:
 686              	.LBE198:
 687              	.LBE197:
  53:src/Riscv.cpp ****             _thread::Body arg2;
 688              		.loc 1 53 13 is_stmt 1
  54:src/Riscv.cpp ****             uint64 arg3;
 689              		.loc 1 54 13
  55:src/Riscv.cpp ****             uint64 *arg4;
 690              		.loc 1 55 13
  56:src/Riscv.cpp **** 
 691              		.loc 1 56 13
  58:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 692              		.loc 1 58 13
  58:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 693              		.loc 1 58 48 is_stmt 0
 694              	#APP
GAS LISTING /tmp/ccvcuV9K.s 			page 23


 695              	# 58 "src/Riscv.cpp" 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 696              		ld a1, 11*8(fp)
 697              	# 0 "" 2
 698              		.loc 1 59 13 is_stmt 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 699              		.loc 1 59 48 is_stmt 0
 700              	# 59 "src/Riscv.cpp" 1
  60:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 701              		ld a2, 12*8(fp)
 702              	# 0 "" 2
 703              		.loc 1 60 13 is_stmt 1
  60:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 704              		.loc 1 60 48 is_stmt 0
 705              	# 60 "src/Riscv.cpp" 1
  61:src/Riscv.cpp **** 
 706              		ld a3, 13*8(fp)
 707              	# 0 "" 2
 708              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp **** 
 709              		.loc 1 61 48 is_stmt 0
 710              	# 61 "src/Riscv.cpp" 1
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 711              		ld a4, 14*8(fp)
 712              	# 0 "" 2
 713              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 714              		.loc 1 64 56 is_stmt 0
 715              	# 64 "src/Riscv.cpp" 1
 716              		mv s4, a1
 717              	# 0 "" 2
 718              	.LVL29:
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 719              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 720              		.loc 1 65 56 is_stmt 0
 721              	# 65 "src/Riscv.cpp" 1
 722              		mv a0, a2
 723              	# 0 "" 2
 724              	.LVL30:
  66:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 725              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 726              		.loc 1 66 56 is_stmt 0
 727              	# 66 "src/Riscv.cpp" 1
 728              		mv a1, a3
 729              	# 0 "" 2
 730              	.LVL31:
  67:src/Riscv.cpp **** 
 731              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp **** 
 732              		.loc 1 67 56 is_stmt 0
 733              	# 67 "src/Riscv.cpp" 1
 734              		mv a2, a4
 735              	# 0 "" 2
 736              	.LVL32:
  70:src/Riscv.cpp ****             *arg1=t;
GAS LISTING /tmp/ccvcuV9K.s 			page 24


 737              		.loc 1 70 13 is_stmt 1
  70:src/Riscv.cpp ****             *arg1=t;
 738              		.loc 1 70 47 is_stmt 0
 739              	#NO_APP
 740 01e0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 740      E7800000 
 741              	.LVL33:
  71:src/Riscv.cpp **** 
 742              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp **** 
 743              		.loc 1 71 18 is_stmt 0
 744 01e8 2330AA00 		sd	a0,0(s4)
  73:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 745              		.loc 1 73 13 is_stmt 1
  74:src/Riscv.cpp ****             else ret =-1;
 746              		.loc 1 74 13
 747 01ec 630C0500 		beqz	a0,.L27
  74:src/Riscv.cpp ****             else ret =-1;
 748              		.loc 1 74 31 is_stmt 0
 749 01f0 93070000 		li	a5,0
 750              	.L9:
 751              	.LVL34:
  78:src/Riscv.cpp **** 
 752              		.loc 1 78 13 is_stmt 1
  78:src/Riscv.cpp **** 
 753              		.loc 1 78 56 is_stmt 0
 754              	#APP
 755              	# 78 "src/Riscv.cpp" 1
  80:src/Riscv.cpp ****             w_sepc(sepc);
 756              		mv a0, a5
 757              	# 0 "" 2
 758              		.loc 1 80 13 is_stmt 1
 759              	.LVL35:
 760              	#NO_APP
 761              	.LBB199:
 762              	.LBB200:
 191:src/../h/Riscv.hpp **** }
 763              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 764              		.loc 2 191 77 is_stmt 0
 765              	#APP
 766              	# 191 "src/../h/Riscv.hpp" 1
 767              		csrw sstatus, s3
 768              	# 0 "" 2
 769              	.LVL36:
 770              	#NO_APP
 771              	.LBE200:
 772              	.LBE199:
  81:src/Riscv.cpp ****         }
 773              		.loc 1 81 13 is_stmt 1
 774              	.LBB201:
 775              	.LBB202:
 121:src/../h/Riscv.hpp **** }
 776              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 777              		.loc 2 121 65 is_stmt 0
 778              	#APP
GAS LISTING /tmp/ccvcuV9K.s 			page 25


 779              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 780              		csrw sepc, s2
 781              	# 0 "" 2
 782              		.loc 2 122 1
 783              	#NO_APP
 784 0200 6FF0DFEE 		j	.L8
 785              	.LVL37:
 786              	.L27:
 787              	.LBE202:
 788              	.LBE201:
  75:src/Riscv.cpp **** 
 789              		.loc 1 75 22
 790 0204 9307F0FF 		li	a5,-1
 791 0208 6FF0DFFE 		j	.L9
 792              	.LVL38:
 793              	.L35:
 794              	.LBE194:
 795              	.LBE407:
 796              	.LBB408:
 797              	.LBB387:
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 798              		.loc 1 84 13 is_stmt 1
 799              	.LBB388:
 800              	.LBB389:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 801              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 802              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 803              		.loc 2 115 64 is_stmt 0
 804              	#APP
 805              	# 115 "src/../h/Riscv.hpp" 1
 806              		csrr a5, sepc
 807              	# 0 "" 2
 808              	#NO_APP
 809 0210 2334F4F2 		sd	a5,-216(s0)
 116:src/../h/Riscv.hpp **** }
 810              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 811              		.loc 2 116 12 is_stmt 0
 812 0214 833484F2 		ld	s1,-216(s0)
 813              	.LVL39:
 814              	.LBE389:
 815              	.LBE388:
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 816              		.loc 1 84 38
 817 0218 93844400 		addi	s1,s1,4
 818              	.LVL40:
  85:src/Riscv.cpp ****             //kmem_alloc
 819              		.loc 1 85 13 is_stmt 1
 820              	.LBB390:
 821              	.LBB391:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 822              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 823              		.loc 2 185 5
GAS LISTING /tmp/ccvcuV9K.s 			page 26


 185:src/../h/Riscv.hpp ****     return sstatus;
 824              		.loc 2 185 76 is_stmt 0
 825              	#APP
 826              	# 185 "src/../h/Riscv.hpp" 1
 827              		csrr a5, sstatus
 828              	# 0 "" 2
 829              	#NO_APP
 830 0220 2330F4F2 		sd	a5,-224(s0)
 186:src/../h/Riscv.hpp **** }
 831              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 832              		.loc 2 186 12 is_stmt 0
 833 0224 033904F2 		ld	s2,-224(s0)
 834              	.LVL41:
 835              	.LBE391:
 836              	.LBE390:
  87:src/Riscv.cpp **** 
 837              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 838              		.loc 1 87 48 is_stmt 0
 839              	#APP
 840              	# 87 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 841              		ld a0, 11*8(fp)
 842              	# 0 "" 2
 843              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 844              		.loc 1 89 56 is_stmt 0
 845              	# 89 "src/Riscv.cpp" 1
 846              		mv a0, a0
 847              	# 0 "" 2
 848              	.LVL42:
  90:src/Riscv.cpp **** 
 849              		.loc 1 90 13 is_stmt 1
  90:src/Riscv.cpp **** 
 850              		.loc 1 90 61 is_stmt 0
 851              	#NO_APP
 852 0230 13156500 		slli	a0,a0,6
 853              	.LVL43:
 854 0234 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 854      E7800000 
 855              	.LVL44:
  93:src/Riscv.cpp **** 
 856              		.loc 1 93 13 is_stmt 1
  93:src/Riscv.cpp **** 
 857              		.loc 1 93 56 is_stmt 0
 858              	#APP
 859              	# 93 "src/Riscv.cpp" 1
  95:src/Riscv.cpp ****             w_sepc(sepc);
 860              		mv a0, a0
 861              	# 0 "" 2
 862              		.loc 1 95 13 is_stmt 1
 863              	.LVL45:
 864              	#NO_APP
 865              	.LBB392:
 866              	.LBB393:
 191:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccvcuV9K.s 			page 27


 867              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 868              		.loc 2 191 77 is_stmt 0
 869              	#APP
 870              	# 191 "src/../h/Riscv.hpp" 1
 871              		csrw sstatus, s2
 872              	# 0 "" 2
 873              	.LVL46:
 874              	#NO_APP
 875              	.LBE393:
 876              	.LBE392:
  96:src/Riscv.cpp ****         }
 877              		.loc 1 96 13 is_stmt 1
 878              	.LBB394:
 879              	.LBB395:
 121:src/../h/Riscv.hpp **** }
 880              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 881              		.loc 2 121 65 is_stmt 0
 882              	#APP
 883              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 884              		csrw sepc, s1
 885              	# 0 "" 2
 886              		.loc 2 122 1
 887              	#NO_APP
 888 0248 6FF01FE6 		j	.L3
 889              	.LVL47:
 890              	.L36:
 891              	.LBE395:
 892              	.LBE394:
 893              	.LBE387:
 894              	.LBB396:
 895              	.LBB368:
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 896              		.loc 1 99 13 is_stmt 1
 897              	.LBB369:
 898              	.LBB370:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 899              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 900              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 901              		.loc 2 115 64 is_stmt 0
 902              	#APP
 903              	# 115 "src/../h/Riscv.hpp" 1
 904              		csrr a5, sepc
 905              	# 0 "" 2
 906              	#NO_APP
 907 0250 233CF4F2 		sd	a5,-200(s0)
 116:src/../h/Riscv.hpp **** }
 908              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 909              		.loc 2 116 12 is_stmt 0
 910 0254 833484F3 		ld	s1,-200(s0)
 911              	.LVL48:
 912              	.LBE370:
GAS LISTING /tmp/ccvcuV9K.s 			page 28


 913              	.LBE369:
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 914              		.loc 1 99 38
 915 0258 93844400 		addi	s1,s1,4
 916              	.LVL49:
 100:src/Riscv.cpp **** 
 917              		.loc 1 100 13 is_stmt 1
 918              	.LBB371:
 919              	.LBB372:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 920              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 921              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 922              		.loc 2 185 76 is_stmt 0
 923              	#APP
 924              	# 185 "src/../h/Riscv.hpp" 1
 925              		csrr a5, sstatus
 926              	# 0 "" 2
 927              	#NO_APP
 928 0260 2338F4F2 		sd	a5,-208(s0)
 186:src/../h/Riscv.hpp **** }
 929              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 930              		.loc 2 186 12 is_stmt 0
 931 0264 033904F3 		ld	s2,-208(s0)
 932              	.LVL50:
 933              	.LBE372:
 934              	.LBE371:
 102:src/Riscv.cpp **** 
 935              		.loc 1 102 13 is_stmt 1
 102:src/Riscv.cpp **** 
 936              		.loc 1 102 48 is_stmt 0
 937              	#APP
 938              	# 102 "src/Riscv.cpp" 1
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 939              		ld a0, 11*8(fp)
 940              	# 0 "" 2
 941              		.loc 1 104 13 is_stmt 1
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 942              		.loc 1 104 56 is_stmt 0
 943              	# 104 "src/Riscv.cpp" 1
 944              		mv a0, a0
 945              	# 0 "" 2
 946              	.LVL51:
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 947              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 948              		.loc 1 105 49 is_stmt 0
 949              	#NO_APP
 950 0270 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 950      E7800000 
 951              	.LVL52:
 106:src/Riscv.cpp **** 
 952              		.loc 1 106 13 is_stmt 1
 106:src/Riscv.cpp **** 
 953              		.loc 1 106 56 is_stmt 0
GAS LISTING /tmp/ccvcuV9K.s 			page 29


 954              	#APP
 955              	# 106 "src/Riscv.cpp" 1
 108:src/Riscv.cpp ****             w_sepc(sepc);
 956              		mv a0, a0
 957              	# 0 "" 2
 958              		.loc 1 108 13 is_stmt 1
 959              	.LVL53:
 960              	#NO_APP
 961              	.LBB373:
 962              	.LBB374:
 191:src/../h/Riscv.hpp **** }
 963              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 964              		.loc 2 191 77 is_stmt 0
 965              	#APP
 966              	# 191 "src/../h/Riscv.hpp" 1
 967              		csrw sstatus, s2
 968              	# 0 "" 2
 969              	.LVL54:
 970              	#NO_APP
 971              	.LBE374:
 972              	.LBE373:
 109:src/Riscv.cpp ****         }
 973              		.loc 1 109 13 is_stmt 1
 974              	.LBB375:
 975              	.LBB376:
 121:src/../h/Riscv.hpp **** }
 976              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 977              		.loc 2 121 65 is_stmt 0
 978              	#APP
 979              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 980              		csrw sepc, s1
 981              	# 0 "" 2
 982              		.loc 2 122 1
 983              	#NO_APP
 984 0284 6FF05FE2 		j	.L3
 985              	.LVL55:
 986              	.L37:
 987              	.LBE376:
 988              	.LBE375:
 989              	.LBE368:
 990              	.LBB377:
 991              	.LBB350:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 992              		.loc 1 113 13 is_stmt 1
 993              	.LBB351:
 994              	.LBB352:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 995              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 996              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 997              		.loc 2 115 64 is_stmt 0
 998              	#APP
 999              	# 115 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccvcuV9K.s 			page 30


 1000              		csrr a5, sepc
 1001              	# 0 "" 2
 1002              	#NO_APP
 1003 028c 2334F4F4 		sd	a5,-184(s0)
 116:src/../h/Riscv.hpp **** }
 1004              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1005              		.loc 2 116 12 is_stmt 0
 1006 0290 833484F4 		ld	s1,-184(s0)
 1007              	.LVL56:
 1008              	.LBE352:
 1009              	.LBE351:
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1010              		.loc 1 113 38
 1011 0294 93844400 		addi	s1,s1,4
 1012              	.LVL57:
 114:src/Riscv.cpp **** 
 1013              		.loc 1 114 13 is_stmt 1
 1014              	.LBB353:
 1015              	.LBB354:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1016              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1017              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1018              		.loc 2 185 76 is_stmt 0
 1019              	#APP
 1020              	# 185 "src/../h/Riscv.hpp" 1
 1021              		csrr a5, sstatus
 1022              	# 0 "" 2
 1023              	#NO_APP
 1024 029c 2330F4F4 		sd	a5,-192(s0)
 186:src/../h/Riscv.hpp **** }
 1025              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1026              		.loc 2 186 12 is_stmt 0
 1027 02a0 033904F4 		ld	s2,-192(s0)
 1028              	.LVL58:
 1029              	.LBE354:
 1030              	.LBE353:
 116:src/Riscv.cpp ****             _thread::dispatch();
 1031              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp ****             _thread::dispatch();
 1032              		.loc 1 116 31 is_stmt 0
 1033 02a4 97070000 		la	a5,_ZN7_thread7runningE
 1033      83B70700 
 1034 02ac 83B70700 		ld	a5,0(a5)
 116:src/Riscv.cpp ****             _thread::dispatch();
 1035              		.loc 1 116 39
 1036 02b0 13071000 		li	a4,1
 1037 02b4 2384E702 		sb	a4,40(a5)
 117:src/Riscv.cpp **** 
 1038              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp **** 
 1039              		.loc 1 117 30 is_stmt 0
 1040 02b8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1040      E7800000 
GAS LISTING /tmp/ccvcuV9K.s 			page 31


 1041              	.LVL59:
 119:src/Riscv.cpp ****             w_sepc(sepc);
 1042              		.loc 1 119 13 is_stmt 1
 1043              	.LBB355:
 1044              	.LBB356:
 191:src/../h/Riscv.hpp **** }
 1045              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1046              		.loc 2 191 77 is_stmt 0
 1047              	#APP
 1048              	# 191 "src/../h/Riscv.hpp" 1
 1049              		csrw sstatus, s2
 1050              	# 0 "" 2
 1051              	.LVL60:
 1052              	#NO_APP
 1053              	.LBE356:
 1054              	.LBE355:
 120:src/Riscv.cpp **** 
 1055              		.loc 1 120 13 is_stmt 1
 1056              	.LBB357:
 1057              	.LBB358:
 121:src/../h/Riscv.hpp **** }
 1058              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1059              		.loc 2 121 65 is_stmt 0
 1060              	#APP
 1061              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1062              		csrw sepc, s1
 1063              	# 0 "" 2
 1064              		.loc 2 122 1
 1065              	#NO_APP
 1066 02c8 6FF01FDE 		j	.L3
 1067              	.LVL61:
 1068              	.L38:
 1069              	.LBE358:
 1070              	.LBE357:
 1071              	.LBE350:
 1072              	.LBB359:
 1073              	.LBB333:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1074              		.loc 1 126 13 is_stmt 1
 1075              	.LBB334:
 1076              	.LBB335:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1077              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1078              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1079              		.loc 2 115 64 is_stmt 0
 1080              	#APP
 1081              	# 115 "src/../h/Riscv.hpp" 1
 1082              		csrr a5, sepc
 1083              	# 0 "" 2
 1084              	#NO_APP
 1085 02d0 233CF4F4 		sd	a5,-168(s0)
 116:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccvcuV9K.s 			page 32


 1086              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1087              		.loc 2 116 12 is_stmt 0
 1088 02d4 833484F5 		ld	s1,-168(s0)
 1089              	.LVL62:
 1090              	.LBE335:
 1091              	.LBE334:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1092              		.loc 1 126 38
 1093 02d8 93844400 		addi	s1,s1,4
 1094              	.LVL63:
 127:src/Riscv.cpp **** 
 1095              		.loc 1 127 13 is_stmt 1
 1096              	.LBB336:
 1097              	.LBB337:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1098              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1099              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1100              		.loc 2 185 76 is_stmt 0
 1101              	#APP
 1102              	# 185 "src/../h/Riscv.hpp" 1
 1103              		csrr a5, sstatus
 1104              	# 0 "" 2
 1105              	#NO_APP
 1106 02e0 2338F4F4 		sd	a5,-176(s0)
 186:src/../h/Riscv.hpp **** }
 1107              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1108              		.loc 2 186 12 is_stmt 0
 1109 02e4 033904F5 		ld	s2,-176(s0)
 1110              	.LVL64:
 1111              	.LBE337:
 1112              	.LBE336:
 130:src/Riscv.cpp **** 
 1113              		.loc 1 130 13 is_stmt 1
 130:src/Riscv.cpp **** 
 1114              		.loc 1 130 30 is_stmt 0
 1115 02e8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1115      E7800000 
 1116              	.LVL65:
 132:src/Riscv.cpp ****             w_sepc(sepc);
 1117              		.loc 1 132 13 is_stmt 1
 1118              	.LBB338:
 1119              	.LBB339:
 191:src/../h/Riscv.hpp **** }
 1120              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1121              		.loc 2 191 77 is_stmt 0
 1122              	#APP
 1123              	# 191 "src/../h/Riscv.hpp" 1
 1124              		csrw sstatus, s2
 1125              	# 0 "" 2
 1126              	.LVL66:
 1127              	#NO_APP
 1128              	.LBE339:
GAS LISTING /tmp/ccvcuV9K.s 			page 33


 1129              	.LBE338:
 133:src/Riscv.cpp ****         }
 1130              		.loc 1 133 13 is_stmt 1
 1131              	.LBB340:
 1132              	.LBB341:
 121:src/../h/Riscv.hpp **** }
 1133              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1134              		.loc 2 121 65 is_stmt 0
 1135              	#APP
 1136              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1137              		csrw sepc, s1
 1138              	# 0 "" 2
 1139              		.loc 2 122 1
 1140              	#NO_APP
 1141 02f8 6FF01FDB 		j	.L3
 1142              	.LVL67:
 1143              	.L39:
 1144              	.LBE341:
 1145              	.LBE340:
 1146              	.LBE333:
 1147              	.LBB342:
 1148              	.LBB317:
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1149              		.loc 1 138 13 is_stmt 1
 1150              	.LBB318:
 1151              	.LBB319:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1152              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1153              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1154              		.loc 2 115 64 is_stmt 0
 1155              	#APP
 1156              	# 115 "src/../h/Riscv.hpp" 1
 1157              		csrr a5, sepc
 1158              	# 0 "" 2
 1159              	#NO_APP
 1160 0300 2334F4F6 		sd	a5,-152(s0)
 116:src/../h/Riscv.hpp **** }
 1161              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1162              		.loc 2 116 12 is_stmt 0
 1163 0304 833484F6 		ld	s1,-152(s0)
 1164              	.LVL68:
 1165              	.LBE319:
 1166              	.LBE318:
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1167              		.loc 1 138 38
 1168 0308 93844400 		addi	s1,s1,4
 1169              	.LVL69:
 139:src/Riscv.cpp **** 
 1170              		.loc 1 139 13 is_stmt 1
 1171              	.LBB320:
 1172              	.LBB321:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/ccvcuV9K.s 			page 34


 1173              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1174              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1175              		.loc 2 185 76 is_stmt 0
 1176              	#APP
 1177              	# 185 "src/../h/Riscv.hpp" 1
 1178              		csrr a5, sstatus
 1179              	# 0 "" 2
 1180              	#NO_APP
 1181 0310 2330F4F6 		sd	a5,-160(s0)
 186:src/../h/Riscv.hpp **** }
 1182              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1183              		.loc 2 186 12 is_stmt 0
 1184 0314 033904F6 		ld	s2,-160(s0)
 1185              	.LVL70:
 1186              	.LBE321:
 1187              	.LBE320:
 141:src/Riscv.cpp ****             _thread::dispatch();
 1188              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp ****             _thread::dispatch();
 1189              		.loc 1 141 39 is_stmt 0
 1190 0318 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1190      83B70700 
 1191 0320 23B00700 		sd	zero,0(a5)
 142:src/Riscv.cpp **** 
 1192              		.loc 1 142 13 is_stmt 1
 142:src/Riscv.cpp **** 
 1193              		.loc 1 142 30 is_stmt 0
 1194 0324 97000000 		call	_ZN7_thread8dispatchEv@plt
 1194      E7800000 
 1195              	.LVL71:
 144:src/Riscv.cpp ****             w_sepc(sepc);
 1196              		.loc 1 144 13 is_stmt 1
 1197              	.LBB322:
 1198              	.LBB323:
 191:src/../h/Riscv.hpp **** }
 1199              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1200              		.loc 2 191 77 is_stmt 0
 1201              	#APP
 1202              	# 191 "src/../h/Riscv.hpp" 1
 1203              		csrw sstatus, s2
 1204              	# 0 "" 2
 1205              	.LVL72:
 1206              	#NO_APP
 1207              	.LBE323:
 1208              	.LBE322:
 145:src/Riscv.cpp ****         }
 1209              		.loc 1 145 13 is_stmt 1
 1210              	.LBB324:
 1211              	.LBB325:
 121:src/../h/Riscv.hpp **** }
 1212              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1213              		.loc 2 121 65 is_stmt 0
GAS LISTING /tmp/ccvcuV9K.s 			page 35


 1214              	#APP
 1215              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1216              		csrw sepc, s1
 1217              	# 0 "" 2
 1218              		.loc 2 122 1
 1219              	#NO_APP
 1220 0334 6FF05FD7 		j	.L3
 1221              	.LVL73:
 1222              	.L40:
 1223              	.LBE325:
 1224              	.LBE324:
 1225              	.LBE317:
 1226              	.LBB326:
 1227              	.LBB296:
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1228              		.loc 1 148 13 is_stmt 1
 1229              	.LBB297:
 1230              	.LBB298:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1231              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1232              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1233              		.loc 2 115 64 is_stmt 0
 1234              	#APP
 1235              	# 115 "src/../h/Riscv.hpp" 1
 1236              		csrr a5, sepc
 1237              	# 0 "" 2
 1238              	#NO_APP
 1239 033c 233CF4F6 		sd	a5,-136(s0)
 116:src/../h/Riscv.hpp **** }
 1240              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1241              		.loc 2 116 12 is_stmt 0
 1242 0340 833484F7 		ld	s1,-136(s0)
 1243              	.LVL74:
 1244              	.LBE298:
 1245              	.LBE297:
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1246              		.loc 1 148 38
 1247 0344 93844400 		addi	s1,s1,4
 1248              	.LVL75:
 149:src/Riscv.cpp **** 
 1249              		.loc 1 149 13 is_stmt 1
 1250              	.LBB299:
 1251              	.LBB300:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1252              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1253              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1254              		.loc 2 185 76 is_stmt 0
 1255              	#APP
 1256              	# 185 "src/../h/Riscv.hpp" 1
 1257              		csrr a5, sstatus
 1258              	# 0 "" 2
GAS LISTING /tmp/ccvcuV9K.s 			page 36


 1259              	#NO_APP
 1260 034c 2338F4F6 		sd	a5,-144(s0)
 186:src/../h/Riscv.hpp **** }
 1261              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1262              		.loc 2 186 12 is_stmt 0
 1263 0350 033904F7 		ld	s2,-144(s0)
 1264              	.LVL76:
 1265              	.LBE300:
 1266              	.LBE299:
 151:src/Riscv.cpp ****            uint64 arg2;
 1267              		.loc 1 151 12 is_stmt 1
 152:src/Riscv.cpp **** 
 1268              		.loc 1 152 12
 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1269              		.loc 1 154 13
 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1270              		.loc 1 154 48 is_stmt 0
 1271              	#APP
 1272              	# 154 "src/Riscv.cpp" 1
 155:src/Riscv.cpp **** 
 1273              		ld a1, 11*8(fp)
 1274              	# 0 "" 2
 1275              		.loc 1 155 13 is_stmt 1
 155:src/Riscv.cpp **** 
 1276              		.loc 1 155 48 is_stmt 0
 1277              	# 155 "src/Riscv.cpp" 1
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1278              		ld a2, 12*8(fp)
 1279              	# 0 "" 2
 1280              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1281              		.loc 1 157 56 is_stmt 0
 1282              	# 157 "src/Riscv.cpp" 1
 1283              		mv s3, a1
 1284              	# 0 "" 2
 1285              	.LVL77:
 158:src/Riscv.cpp **** 
 1286              		.loc 1 158 13 is_stmt 1
 158:src/Riscv.cpp **** 
 1287              		.loc 1 158 56 is_stmt 0
 1288              	# 158 "src/Riscv.cpp" 1
 1289              		mv s4, a2
 1290              	# 0 "" 2
 1291              	.LVL78:
 160:src/Riscv.cpp ****             sem->open();
 1292              		.loc 1 160 13 is_stmt 1
 160:src/Riscv.cpp ****             sem->open();
 1293              		.loc 1 160 50 is_stmt 0
 1294              	#NO_APP
 1295 0364 13050002 		li	a0,32
 1296 0368 97000000 		call	_ZN10KSemaphorenwEm@plt
 1296      E7800000 
 1297              	.LVL79:
 1298              	.LBB301:
 1299              	.LBB302:
 1300              		.file 3 "src/../h/KSemaphore.hpp"
GAS LISTING /tmp/ccvcuV9K.s 			page 37


   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1301              		.loc 3 14 40
 1302 0370 23204501 		sw	s4,0(a0)
 1303              	.LVL80:
 1304              	.LBB303:
 1305              	.LBB304:
 1306              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1307              		.loc 4 26 29
 1308 0374 23340500 		sd	zero,8(a0)
 1309 0378 23380500 		sd	zero,16(a0)
 1310              	.LVL81:
 1311              	.LBE304:
 1312              	.LBE303:
 1313              	.LBE302:
 1314              	.LBE301:
 161:src/Riscv.cpp ****             *arg1=sem;
 1315              		.loc 1 161 13 is_stmt 1
 1316              	.LBB305:
GAS LISTING /tmp/ccvcuV9K.s 			page 38


 1317              	.LBB306:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1318              		.loc 3 35 9
 1319              		.loc 3 35 15 is_stmt 0
 1320 037c 93071000 		li	a5,1
 1321 0380 230CF500 		sb	a5,24(a0)
 1322              	.LVL82:
 1323              	.LBE306:
 1324              	.LBE305:
 162:src/Riscv.cpp **** 
 1325              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1326              		.loc 1 162 18 is_stmt 0
 1327 0384 23B0A900 		sd	a0,0(s3)
 164:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1328              		.loc 1 164 13 is_stmt 1
 1329              	.LVL83:
 165:src/Riscv.cpp ****             else ret=-1;
 1330              		.loc 1 165 13
 1331 0388 630C0500 		beqz	a0,.L28
 165:src/Riscv.cpp ****             else ret=-1;
 1332              		.loc 1 165 33 is_stmt 0
 1333 038c 93070000 		li	a5,0
 1334              	.L16:
 1335              	.LVL84:
 168:src/Riscv.cpp **** 
 1336              		.loc 1 168 13 is_stmt 1
 168:src/Riscv.cpp **** 
 1337              		.loc 1 168 56 is_stmt 0
 1338              	#APP
 1339              	# 168 "src/Riscv.cpp" 1
 170:src/Riscv.cpp ****             w_sepc(sepc);
 1340              		mv a0, a5
 1341              	# 0 "" 2
 1342              		.loc 1 170 13 is_stmt 1
 1343              	.LVL85:
 1344              	#NO_APP
GAS LISTING /tmp/ccvcuV9K.s 			page 39


 1345              	.LBB307:
 1346              	.LBB308:
 191:src/../h/Riscv.hpp **** }
 1347              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1348              		.loc 2 191 77 is_stmt 0
 1349              	#APP
 1350              	# 191 "src/../h/Riscv.hpp" 1
 1351              		csrw sstatus, s2
 1352              	# 0 "" 2
 1353              	.LVL86:
 1354              	#NO_APP
 1355              	.LBE308:
 1356              	.LBE307:
 171:src/Riscv.cpp ****         }
 1357              		.loc 1 171 13 is_stmt 1
 1358              	.LBB309:
 1359              	.LBB310:
 121:src/../h/Riscv.hpp **** }
 1360              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1361              		.loc 2 121 65 is_stmt 0
 1362              	#APP
 1363              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1364              		csrw sepc, s1
 1365              	# 0 "" 2
 1366              		.loc 2 122 1
 1367              	#NO_APP
 1368 039c 6FF0DFD0 		j	.L3
 1369              	.LVL87:
 1370              	.L28:
 1371              	.LBE310:
 1372              	.LBE309:
 166:src/Riscv.cpp **** 
 1373              		.loc 1 166 21
 1374 03a0 9307F0FF 		li	a5,-1
 1375 03a4 6FF0DFFE 		j	.L16
 1376              	.LVL88:
 1377              	.L41:
 1378              	.LBE296:
 1379              	.LBB311:
 1380              	.LBB270:
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1381              		.loc 1 174 13 is_stmt 1
 1382              	.LBB271:
 1383              	.LBB272:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1384              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1385              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1386              		.loc 2 115 64 is_stmt 0
 1387              	#APP
 1388              	# 115 "src/../h/Riscv.hpp" 1
 1389              		csrr a5, sepc
 1390              	# 0 "" 2
GAS LISTING /tmp/ccvcuV9K.s 			page 40


 1391              	#NO_APP
 1392 03ac 2334F4F8 		sd	a5,-120(s0)
 116:src/../h/Riscv.hpp **** }
 1393              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1394              		.loc 2 116 12 is_stmt 0
 1395 03b0 833984F8 		ld	s3,-120(s0)
 1396              	.LBE272:
 1397              	.LBE271:
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1398              		.loc 1 174 38
 1399 03b4 93894900 		addi	s3,s3,4
 1400              	.LVL89:
 175:src/Riscv.cpp **** 
 1401              		.loc 1 175 13 is_stmt 1
 1402              	.LBB273:
 1403              	.LBB274:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1404              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1405              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1406              		.loc 2 185 76 is_stmt 0
 1407              	#APP
 1408              	# 185 "src/../h/Riscv.hpp" 1
 1409              		csrr a5, sstatus
 1410              	# 0 "" 2
 1411              	#NO_APP
 1412 03bc 2330F4F8 		sd	a5,-128(s0)
 186:src/../h/Riscv.hpp **** }
 1413              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1414              		.loc 2 186 12 is_stmt 0
 1415 03c0 033A04F8 		ld	s4,-128(s0)
 1416              	.LVL90:
 1417              	.LBE274:
 1418              	.LBE273:
 177:src/Riscv.cpp **** 
 1419              		.loc 1 177 13 is_stmt 1
 180:src/Riscv.cpp **** 
 1420              		.loc 1 180 13
 180:src/Riscv.cpp **** 
 1421              		.loc 1 180 48 is_stmt 0
 1422              	#APP
 1423              	# 180 "src/Riscv.cpp" 1
 182:src/Riscv.cpp **** 
 1424              		ld a1, 11*8(fp)
 1425              	# 0 "" 2
 1426              		.loc 1 182 13 is_stmt 1
 182:src/Riscv.cpp **** 
 1427              		.loc 1 182 56 is_stmt 0
 1428              	# 182 "src/Riscv.cpp" 1
 1429              		mv s1, a1
 1430              	# 0 "" 2
 1431              	.LVL91:
 184:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1432              		.loc 1 184 13 is_stmt 1
GAS LISTING /tmp/ccvcuV9K.s 			page 41


 1433              	#NO_APP
 1434 03cc 6F000003 		j	.L20
 1435              	.LVL92:
 1436              	.L19:
 1437              	.LBB275:
 1438              	.LBB276:
 1439              	.LBB277:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1440              		.loc 4 72 12 is_stmt 0
 1441 03d0 03390500 		ld	s2,0(a0)
 1442              	.LVL93:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
GAS LISTING /tmp/ccvcuV9K.s 			page 42


 1443              		.loc 4 73 35
 1444 03d4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1444      E7800000 
 1445              	.LVL94:
 1446              	.LBE277:
 1447              	.LBE276:
 188:src/Riscv.cpp ****                 sem->val++;
 1448              		.loc 1 188 17 is_stmt 1
 1449              	.LBB279:
 1450              	.LBB280:
 1451              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1452              		.loc 5 35 9
 1453              		.loc 5 35 19 is_stmt 0
 1454 03dc 93071000 		li	a5,1
 1455 03e0 230CF902 		sb	a5,56(s2)
 1456              	.LVL95:
 1457              	.LBE280:
 1458              	.LBE279:
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1459              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1460              		.loc 1 189 22 is_stmt 0
GAS LISTING /tmp/ccvcuV9K.s 			page 43


 1461 03e4 83A70400 		lw	a5,0(s1)
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 1462              		.loc 1 189 25
 1463 03e8 9B871700 		addiw	a5,a5,1
 1464 03ec 23A0F400 		sw	a5,0(s1)
 190:src/Riscv.cpp ****             }
 1465              		.loc 1 190 17 is_stmt 1
 190:src/Riscv.cpp ****             }
 1466              		.loc 1 190 31 is_stmt 0
 1467 03f0 13050900 		mv	a0,s2
 1468 03f4 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1468      E7800000 
 1469              	.LVL96:
 1470              	.L20:
 1471              	.LBE275:
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1472              		.loc 1 186 13 is_stmt 1
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1473              		.loc 1 186 43
 1474              	.LBB282:
 1475              	.LBB283:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1476              		.loc 4 79 14 is_stmt 0
 1477 03fc 03B58400 		ld	a0,8(s1)
 1478              		.loc 4 79 9
 1479 0400 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1480              		.loc 4 80 22
 1481 0404 83370500 		ld	a5,0(a0)
 1482              	.LVL97:
 1483              	.LBE283:
 1484              	.LBE282:
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1485              		.loc 1 186 43
 1486 0408 638C0700 		beqz	a5,.L18
 1487              	.LBB284:
 187:src/Riscv.cpp ****                 t->setDeblocked();
 1488              		.loc 1 187 17 is_stmt 1
 1489              	.LVL98:
 1490              	.LBB281:
 1491              	.LBB278:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1492              		.loc 4 69 22 is_stmt 0
 1493 040c 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1494              		.loc 4 69 9
 1495 0410 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1496              		.loc 4 70 9
 1497 0414 E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1498              		.loc 4 70 22
GAS LISTING /tmp/ccvcuV9K.s 			page 44


 1499 0418 23B80400 		sd	zero,16(s1)
 1500 041c 6FF05FFB 		j	.L19
 1501              	.LVL99:
 1502              	.L18:
 1503              	.LBE278:
 1504              	.LBE281:
 1505              	.LBE284:
 192:src/Riscv.cpp **** 
 1506              		.loc 1 192 14 is_stmt 1
 1507              	.LBB285:
 1508              	.LBB286:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1509              		.loc 3 38 9
 1510              		.loc 3 38 16 is_stmt 0
 1511 0420 238C0400 		sb	zero,24(s1)
 1512              	.LVL100:
 1513              	.LBE286:
 1514              	.LBE285:
 194:src/Riscv.cpp **** 
 1515              		.loc 1 194 13 is_stmt 1
 194:src/Riscv.cpp **** 
 1516              		.loc 1 194 23 is_stmt 0
 1517 0424 63880400 		beqz	s1,.L21
 194:src/Riscv.cpp **** 
 1518              		.loc 1 194 20 discriminator 1
 1519 0428 13850400 		mv	a0,s1
 1520 042c 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1520      E7800000 
 1521              	.LVL101:
 1522              	.L21:
 196:src/Riscv.cpp ****             w_sepc(sepc);
 1523              		.loc 1 196 13 is_stmt 1
 1524              	.LBB287:
 1525              	.LBB288:
 191:src/../h/Riscv.hpp **** }
 1526              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1527              		.loc 2 191 77 is_stmt 0
 1528              	#APP
 1529              	# 191 "src/../h/Riscv.hpp" 1
 1530              		csrw sstatus, s4
 1531              	# 0 "" 2
 1532              	.LVL102:
 1533              	#NO_APP
 1534              	.LBE288:
 1535              	.LBE287:
 197:src/Riscv.cpp ****         }
 1536              		.loc 1 197 13 is_stmt 1
 1537              	.LBB289:
 1538              	.LBB290:
 121:src/../h/Riscv.hpp **** }
 1539              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1540              		.loc 2 121 65 is_stmt 0
 1541              	#APP
GAS LISTING /tmp/ccvcuV9K.s 			page 45


 1542              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1543              		csrw sepc, s3
 1544              	# 0 "" 2
 1545              		.loc 2 122 1
 1546              	#NO_APP
 1547 043c 6FF0DFC6 		j	.L3
 1548              	.LVL103:
 1549              	.L42:
 1550              	.LBE290:
 1551              	.LBE289:
 1552              	.LBE270:
 1553              	.LBB291:
 1554              	.LBB255:
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1555              		.loc 1 200 13 is_stmt 1
 1556              	.LBB256:
 1557              	.LBB257:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1558              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1559              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1560              		.loc 2 115 64 is_stmt 0
 1561              	#APP
 1562              	# 115 "src/../h/Riscv.hpp" 1
 1563              		csrr a5, sepc
 1564              	# 0 "" 2
 1565              	#NO_APP
 1566 0444 233CF4F8 		sd	a5,-104(s0)
 116:src/../h/Riscv.hpp **** }
 1567              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1568              		.loc 2 116 12 is_stmt 0
 1569 0448 833484F9 		ld	s1,-104(s0)
 1570              	.LVL104:
 1571              	.LBE257:
 1572              	.LBE256:
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1573              		.loc 1 200 38
 1574 044c 93844400 		addi	s1,s1,4
 1575              	.LVL105:
 201:src/Riscv.cpp **** 
 1576              		.loc 1 201 13 is_stmt 1
 1577              	.LBB258:
 1578              	.LBB259:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1579              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1580              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1581              		.loc 2 185 76 is_stmt 0
 1582              	#APP
 1583              	# 185 "src/../h/Riscv.hpp" 1
 1584              		csrr a5, sstatus
 1585              	# 0 "" 2
 1586              	#NO_APP
GAS LISTING /tmp/ccvcuV9K.s 			page 46


 1587 0454 2338F4F8 		sd	a5,-112(s0)
 186:src/../h/Riscv.hpp **** }
 1588              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1589              		.loc 2 186 12 is_stmt 0
 1590 0458 033904F9 		ld	s2,-112(s0)
 1591              	.LVL106:
 1592              	.LBE259:
 1593              	.LBE258:
 203:src/Riscv.cpp **** 
 1594              		.loc 1 203 13 is_stmt 1
 205:src/Riscv.cpp **** 
 1595              		.loc 1 205 13
 205:src/Riscv.cpp **** 
 1596              		.loc 1 205 48 is_stmt 0
 1597              	#APP
 1598              	# 205 "src/Riscv.cpp" 1
 207:src/Riscv.cpp **** 
 1599              		ld a1, 11*8(fp)
 1600              	# 0 "" 2
 1601              		.loc 1 207 13 is_stmt 1
 207:src/Riscv.cpp **** 
 1602              		.loc 1 207 56 is_stmt 0
 1603              	# 207 "src/Riscv.cpp" 1
 1604              		mv a0, a1
 1605              	# 0 "" 2
 1606              	.LVL107:
 209:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1607              		.loc 1 209 13 is_stmt 1
 211:src/Riscv.cpp ****                  ret = arg1->wait();
 1608              		.loc 1 211 13
 1609              	#NO_APP
 1610              	.LBB260:
 1611              	.LBB261:
  32:src/../h/KSemaphore.hpp **** 
 1612              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1613              		.loc 3 32 28 is_stmt 0
 1614 0464 83478501 		lbu	a5,24(a0)
 1615              	.LVL108:
 1616              	.LBE261:
 1617              	.LBE260:
 211:src/Riscv.cpp ****                  ret = arg1->wait();
 1618              		.loc 1 211 13
 1619 0468 639C0700 		bnez	a5,.L45
 215:src/Riscv.cpp ****             }
 1620              		.loc 1 215 20
 1621 046c 1305F0FF 		li	a0,-1
 1622              	.LVL109:
 1623              	.L23:
 217:src/Riscv.cpp **** 
 1624              		.loc 1 217 13 is_stmt 1
 217:src/Riscv.cpp **** 
 1625              		.loc 1 217 56 is_stmt 0
 1626              	#APP
 1627              	# 217 "src/Riscv.cpp" 1
 219:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/ccvcuV9K.s 			page 47


 1628              		mv a0, a0
 1629              	# 0 "" 2
 1630              		.loc 1 219 13 is_stmt 1
 1631              	.LVL110:
 1632              	#NO_APP
 1633              	.LBB262:
 1634              	.LBB263:
 191:src/../h/Riscv.hpp **** }
 1635              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1636              		.loc 2 191 77 is_stmt 0
 1637              	#APP
 1638              	# 191 "src/../h/Riscv.hpp" 1
 1639              		csrw sstatus, s2
 1640              	# 0 "" 2
 1641              	.LVL111:
 1642              	#NO_APP
 1643              	.LBE263:
 1644              	.LBE262:
 220:src/Riscv.cpp ****         }
 1645              		.loc 1 220 13 is_stmt 1
 1646              	.LBB264:
 1647              	.LBB265:
 121:src/../h/Riscv.hpp **** }
 1648              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1649              		.loc 2 121 65 is_stmt 0
 1650              	#APP
 1651              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1652              		csrw sepc, s1
 1653              	# 0 "" 2
 1654              		.loc 2 122 1
 1655              	#NO_APP
 1656 047c 6FF0DFC2 		j	.L3
 1657              	.LVL112:
 1658              	.L45:
 1659              	.LBE265:
 1660              	.LBE264:
 212:src/Riscv.cpp ****             }
 1661              		.loc 1 212 18 is_stmt 1
 212:src/Riscv.cpp ****             }
 1662              		.loc 1 212 34 is_stmt 0
 1663 0480 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1663      E7800000 
 1664              	.LVL113:
 1665 0488 6FF09FFE 		j	.L23
 1666              	.LVL114:
 1667              	.L43:
 1668              	.LBE255:
 1669              	.LBB266:
 1670              	.LBB241:
 223:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1671              		.loc 1 223 13 is_stmt 1
 1672              	.LBB242:
 1673              	.LBB243:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccvcuV9K.s 			page 48


 1674              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1675              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1676              		.loc 2 115 64 is_stmt 0
 1677              	#APP
 1678              	# 115 "src/../h/Riscv.hpp" 1
 1679              		csrr a5, sepc
 1680              	# 0 "" 2
 1681              	#NO_APP
 1682 0490 2334F4FA 		sd	a5,-88(s0)
 116:src/../h/Riscv.hpp **** }
 1683              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1684              		.loc 2 116 12 is_stmt 0
 1685 0494 833484FA 		ld	s1,-88(s0)
 1686              	.LVL115:
 1687              	.LBE243:
 1688              	.LBE242:
 223:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1689              		.loc 1 223 38
 1690 0498 93844400 		addi	s1,s1,4
 1691              	.LVL116:
 224:src/Riscv.cpp **** 
 1692              		.loc 1 224 13 is_stmt 1
 1693              	.LBB244:
 1694              	.LBB245:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1695              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1696              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1697              		.loc 2 185 76 is_stmt 0
 1698              	#APP
 1699              	# 185 "src/../h/Riscv.hpp" 1
 1700              		csrr a5, sstatus
 1701              	# 0 "" 2
 1702              	#NO_APP
 1703 04a0 2330F4FA 		sd	a5,-96(s0)
 186:src/../h/Riscv.hpp **** }
 1704              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1705              		.loc 2 186 12 is_stmt 0
 1706 04a4 033904FA 		ld	s2,-96(s0)
 1707              	.LVL117:
 1708              	.LBE245:
 1709              	.LBE244:
 226:src/Riscv.cpp **** 
 1710              		.loc 1 226 13 is_stmt 1
 228:src/Riscv.cpp **** 
 1711              		.loc 1 228 13
 228:src/Riscv.cpp **** 
 1712              		.loc 1 228 48 is_stmt 0
 1713              	#APP
 1714              	# 228 "src/Riscv.cpp" 1
 230:src/Riscv.cpp **** 
 1715              		ld a1, 11*8(fp)
GAS LISTING /tmp/ccvcuV9K.s 			page 49


 1716              	# 0 "" 2
 1717              		.loc 1 230 13 is_stmt 1
 230:src/Riscv.cpp **** 
 1718              		.loc 1 230 56 is_stmt 0
 1719              	# 230 "src/Riscv.cpp" 1
 1720              		mv a0, a1
 1721              	# 0 "" 2
 1722              	.LVL118:
 232:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1723              		.loc 1 232 13 is_stmt 1
 233:src/Riscv.cpp ****                 arg1->signal();
 1724              		.loc 1 233 13
 1725              	#NO_APP
 1726              	.LBB246:
 1727              	.LBB247:
  32:src/../h/KSemaphore.hpp **** 
 1728              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1729              		.loc 3 32 28 is_stmt 0
 1730 04b0 83478501 		lbu	a5,24(a0)
 1731              	.LVL119:
 1732              	.LBE247:
 1733              	.LBE246:
 233:src/Riscv.cpp ****                 arg1->signal();
 1734              		.loc 1 233 13
 1735 04b4 639C0700 		bnez	a5,.L46
 238:src/Riscv.cpp ****             }
 1736              		.loc 1 238 21
 1737 04b8 9307F0FF 		li	a5,-1
 1738              	.LVL120:
 1739              	.L25:
 241:src/Riscv.cpp **** 
 1740              		.loc 1 241 13 is_stmt 1
 241:src/Riscv.cpp **** 
 1741              		.loc 1 241 56 is_stmt 0
 1742              	#APP
 1743              	# 241 "src/Riscv.cpp" 1
 243:src/Riscv.cpp ****             w_sepc(sepc);
 1744              		mv a0, a5
 1745              	# 0 "" 2
 1746              		.loc 1 243 13 is_stmt 1
 1747              	.LVL121:
 1748              	#NO_APP
 1749              	.LBB248:
 1750              	.LBB249:
 191:src/../h/Riscv.hpp **** }
 1751              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1752              		.loc 2 191 77 is_stmt 0
 1753              	#APP
 1754              	# 191 "src/../h/Riscv.hpp" 1
 1755              		csrw sstatus, s2
 1756              	# 0 "" 2
 1757              	.LVL122:
 1758              	#NO_APP
 1759              	.LBE249:
 1760              	.LBE248:
GAS LISTING /tmp/ccvcuV9K.s 			page 50


 244:src/Riscv.cpp ****         }
 1761              		.loc 1 244 13 is_stmt 1
 1762              	.LBB250:
 1763              	.LBB251:
 121:src/../h/Riscv.hpp **** }
 1764              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1765              		.loc 2 121 65 is_stmt 0
 1766              	#APP
 1767              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1768              		csrw sepc, s1
 1769              	# 0 "" 2
 1770              		.loc 2 122 1
 1771              	#NO_APP
 1772 04c8 6FF01FBE 		j	.L3
 1773              	.LVL123:
 1774              	.L46:
 1775              	.LBE251:
 1776              	.LBE250:
 234:src/Riscv.cpp ****                 ret=0;
 1777              		.loc 1 234 17 is_stmt 1
 234:src/Riscv.cpp ****                 ret=0;
 1778              		.loc 1 234 29 is_stmt 0
 1779 04cc 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1779      E7800000 
 1780              	.LVL124:
 235:src/Riscv.cpp ****             }
 1781              		.loc 1 235 17 is_stmt 1
 235:src/Riscv.cpp ****             }
 1782              		.loc 1 235 20 is_stmt 0
 1783 04d4 93070000 		li	a5,0
 1784 04d8 6FF05FFE 		j	.L25
 1785              	.LVL125:
 1786              	.L44:
 1787              	.LBE241:
 1788              	.LBB252:
 1789              	.LBB227:
 247:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1790              		.loc 1 247 13 is_stmt 1
 1791              	.LBB228:
 1792              	.LBB229:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1793              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1794              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1795              		.loc 2 115 64 is_stmt 0
 1796              	#APP
 1797              	# 115 "src/../h/Riscv.hpp" 1
 1798              		csrr a5, sepc
 1799              	# 0 "" 2
 1800              	#NO_APP
 1801 04e0 233CF4FA 		sd	a5,-72(s0)
 116:src/../h/Riscv.hpp **** }
 1802              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccvcuV9K.s 			page 51


 1803              		.loc 2 116 12 is_stmt 0
 1804 04e4 833484FB 		ld	s1,-72(s0)
 1805              	.LVL126:
 1806              	.LBE229:
 1807              	.LBE228:
 247:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1808              		.loc 1 247 38
 1809 04e8 93844400 		addi	s1,s1,4
 1810              	.LVL127:
 248:src/Riscv.cpp **** 
 1811              		.loc 1 248 13 is_stmt 1
 1812              	.LBB230:
 1813              	.LBB231:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1814              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1815              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1816              		.loc 2 185 76 is_stmt 0
 1817              	#APP
 1818              	# 185 "src/../h/Riscv.hpp" 1
 1819              		csrr a5, sstatus
 1820              	# 0 "" 2
 1821              	#NO_APP
 1822 04f0 2338F4FA 		sd	a5,-80(s0)
 186:src/../h/Riscv.hpp **** }
 1823              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1824              		.loc 2 186 12 is_stmt 0
 1825 04f4 033904FB 		ld	s2,-80(s0)
 1826              	.LVL128:
 1827              	.LBE231:
 1828              	.LBE230:
 251:src/Riscv.cpp ****             char c = __getc();
 1829              		.loc 1 251 13 is_stmt 1
 251:src/Riscv.cpp ****             char c = __getc();
 1830              		.loc 1 251 27 is_stmt 0
 1831 04f8 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1831      83B70700 
 1832              	.LVL129:
 1833              	.LBB232:
 1834              	.LBB233:
 133:src/../h/Riscv.hpp **** }
 1835              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1836              		.loc 2 133 69 is_stmt 0
 1837              	#APP
 1838              	# 133 "src/../h/Riscv.hpp" 1
 1839              		csrw stvec, a5
 1840              	# 0 "" 2
 1841              	.LVL130:
 1842              	#NO_APP
 1843              	.LBE233:
 1844              	.LBE232:
 252:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1845              		.loc 1 252 13 is_stmt 1
 252:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
GAS LISTING /tmp/ccvcuV9K.s 			page 52


 1846              		.loc 1 252 28 is_stmt 0
 1847 0504 97000000 		call	__getc@plt
 1847      E7800000 
 1848              	.LVL131:
 253:src/Riscv.cpp **** 
 1849              		.loc 1 253 13 is_stmt 1
 253:src/Riscv.cpp **** 
 1850              		.loc 1 253 27 is_stmt 0
 1851 050c 17070000 		la	a4,_ZN5Riscv14supervisorTrapEv
 1851      03370700 
 1852              	.LVL132:
 1853              	.LBB234:
 1854              	.LBB235:
 133:src/../h/Riscv.hpp **** }
 1855              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1856              		.loc 2 133 69 is_stmt 0
 1857              	#APP
 1858              	# 133 "src/../h/Riscv.hpp" 1
 1859              		csrw stvec, a4
 1860              	# 0 "" 2
 1861              	.LVL133:
 1862              	#NO_APP
 1863              	.LBE235:
 1864              	.LBE234:
 255:src/Riscv.cpp **** 
 1865              		.loc 1 255 13 is_stmt 1
 255:src/Riscv.cpp **** 
 1866              		.loc 1 255 54 is_stmt 0
 1867              	#APP
 1868              	# 255 "src/Riscv.cpp" 1
 258:src/Riscv.cpp ****             w_sepc(sepc);
 1869              		mv a0, a0
 1870              	# 0 "" 2
 1871              		.loc 1 258 13 is_stmt 1
 1872              	.LVL134:
 1873              	#NO_APP
 1874              	.LBB236:
 1875              	.LBB237:
 191:src/../h/Riscv.hpp **** }
 1876              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1877              		.loc 2 191 77 is_stmt 0
 1878              	#APP
 1879              	# 191 "src/../h/Riscv.hpp" 1
 1880              		csrw sstatus, s2
 1881              	# 0 "" 2
 1882              	.LVL135:
 1883              	#NO_APP
 1884              	.LBE237:
 1885              	.LBE236:
 259:src/Riscv.cpp ****         }
 1886              		.loc 1 259 13 is_stmt 1
 1887              	.LBB238:
 1888              	.LBB239:
 121:src/../h/Riscv.hpp **** }
 1889              		.loc 2 121 5
GAS LISTING /tmp/ccvcuV9K.s 			page 53


 121:src/../h/Riscv.hpp **** }
 1890              		.loc 2 121 65 is_stmt 0
 1891              	#APP
 1892              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1893              		csrw sepc, s1
 1894              	# 0 "" 2
 1895              		.loc 2 122 1
 1896              	#NO_APP
 1897 0524 6FF05FB8 		j	.L3
 1898              	.LBE239:
 1899              	.LBE238:
 1900              	.LBE227:
 1901              	.LBE252:
 1902              	.LBE266:
 1903              	.LBE291:
 1904              	.LBE311:
 1905              	.LBE326:
 1906              	.LBE342:
 1907              	.LBE359:
 1908              	.LBE377:
 1909              	.LBE396:
 1910              	.LBE408:
 1911              	.LBE421:
 1912              	.LBE435:
 1913              	.LBE452:
 1914              	.LBE468:
 1915              		.cfi_endproc
 1916              	.LFE55:
 1918              		.align	2
 1919              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1921              	_ZN5Riscv17handleTrapConsoleEv:
 1922              	.LFB56:
 284:src/Riscv.cpp **** 
 285:src/Riscv.cpp **** 
 286:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1923              		.loc 1 286 33 is_stmt 1
 1924              		.cfi_startproc
 1925 0528 130101FE 		addi	sp,sp,-32
 1926              		.cfi_def_cfa_offset 32
 1927 052c 233C1100 		sd	ra,24(sp)
 1928 0530 23388100 		sd	s0,16(sp)
 1929              		.cfi_offset 1, -8
 1930              		.cfi_offset 8, -16
 1931 0534 13040102 		addi	s0,sp,32
 1932              		.cfi_def_cfa 8, 0
 287:src/Riscv.cpp ****     uint64 scause = r_scause();
 1933              		.loc 1 287 5
 1934              	.LBB469:
 1935              	.LBB470:
 102:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1936              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return scause;
 1937              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return scause;
 1938              		.loc 2 103 72 is_stmt 0
 1939              	#APP
GAS LISTING /tmp/ccvcuV9K.s 			page 54


 1940              	# 103 "src/../h/Riscv.hpp" 1
 1941              		csrr a5, scause
 1942              	# 0 "" 2
 1943              	#NO_APP
 1944 053c 2334F4FE 		sd	a5,-24(s0)
 104:src/../h/Riscv.hpp **** }
 1945              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 1946              		.loc 2 104 12 is_stmt 0
 1947 0540 033784FE 		ld	a4,-24(s0)
 1948              	.LVL136:
 1949              	.LBE470:
 1950              	.LBE469:
 288:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1951              		.loc 1 288 5 is_stmt 1
 1952 0544 9307F0FF 		li	a5,-1
 1953 0548 9397F703 		slli	a5,a5,63
 1954 054c 93879700 		addi	a5,a5,9
 1955 0550 6302F702 		beq	a4,a5,.L51
 289:src/Riscv.cpp ****         console_handler();
 290:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 291:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1956              		.loc 1 291 12
 1957 0554 9307F0FF 		li	a5,-1
 1958 0558 9397F703 		slli	a5,a5,63
 1959 055c 93871700 		addi	a5,a5,1
 1960 0560 6304F702 		beq	a4,a5,.L52
 1961              	.LVL137:
 1962              	.L47:
 292:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 293:src/Riscv.cpp ****     }
 294:src/Riscv.cpp **** 
 295:src/Riscv.cpp **** }
 1963              		.loc 1 295 1 is_stmt 0
 1964 0564 83308101 		ld	ra,24(sp)
 1965              		.cfi_remember_state
 1966              		.cfi_restore 1
 1967 0568 03340101 		ld	s0,16(sp)
 1968              		.cfi_restore 8
 1969              		.cfi_def_cfa 2, 32
 1970 056c 13010102 		addi	sp,sp,32
 1971              		.cfi_def_cfa_offset 0
 1972 0570 67800000 		jr	ra
 1973              	.LVL138:
 1974              	.L51:
 1975              		.cfi_restore_state
 289:src/Riscv.cpp ****         console_handler();
 1976              		.loc 1 289 9 is_stmt 1
 289:src/Riscv.cpp ****         console_handler();
 1977              		.loc 1 289 24 is_stmt 0
 1978 0574 97000000 		call	console_handler@plt
 1978      E7800000 
 1979              	.LVL139:
 290:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1980              		.loc 1 290 9 is_stmt 1
 1981              	.LBB471:
 1982              	.LBB472:
GAS LISTING /tmp/ccvcuV9K.s 			page 55


 155:src/../h/Riscv.hpp **** }
 1983              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1984              		.loc 2 155 64 is_stmt 0
 1985 057c 93070020 		li	a5,512
 1986              	#APP
 1987              	# 155 "src/../h/Riscv.hpp" 1
 156:src/../h/Riscv.hpp **** 
 1988              		csrc sip, a5
 1989              	# 0 "" 2
 1990              		.loc 2 156 1
 1991              	#NO_APP
 1992 0584 6FF01FFE 		j	.L47
 1993              	.LVL140:
 1994              	.L52:
 1995              	.LBE472:
 1996              	.LBE471:
 292:src/Riscv.cpp ****     }
 1997              		.loc 1 292 9 is_stmt 1
 1998              	.LBB473:
 1999              	.LBB474:
 155:src/../h/Riscv.hpp **** }
 2000              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 2001              		.loc 2 155 64 is_stmt 0
 2002 0588 93072000 		li	a5,2
 2003              	#APP
 2004              	# 155 "src/../h/Riscv.hpp" 1
 2005              		csrc sip, a5
 2006              	# 0 "" 2
 2007              	.LVL141:
 2008              	#NO_APP
 2009              	.LBE474:
 2010              	.LBE473:
 2011              		.loc 1 295 1
 2012 0590 6FF05FFD 		j	.L47
 2013              		.cfi_endproc
 2014              	.LFE56:
 2016              		.globl	_ZN5Riscv9privilegeE
 2017              		.bss
 2018              		.set	.LANCHOR0,. + 0
 2021              	_ZN5Riscv9privilegeE:
 2022 0000 00       		.zero	1
 2023              		.text
 2024              	.Letext0:
 2025              		.file 6 "src/../h/../lib/hw.h"
 2026              		.file 7 "src/../h/DoublyLinkedList.hpp"
 2027              		.file 8 "src/../h/MemoryAllocator.hpp"
 2028              		.file 9 "src/../h/Scheduler.hpp"
 2029              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccvcuV9K.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccvcuV9K.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccvcuV9K.s:13     .text:0000000000000000 .L0 
     /tmp/ccvcuV9K.s:14     .text:0000000000000000 .L0 
     /tmp/ccvcuV9K.s:15     .text:0000000000000004 .L0 
     /tmp/ccvcuV9K.s:17     .text:0000000000000008 .L0 
     /tmp/ccvcuV9K.s:19     .text:000000000000000c .L0 
     /tmp/ccvcuV9K.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccvcuV9K.s:32     .text:0000000000000010 .L0 
     /tmp/ccvcuV9K.s:33     .text:0000000000000010 .L0 
     /tmp/ccvcuV9K.s:34     .text:0000000000000010 .L0 
     /tmp/ccvcuV9K.s:44     .text:0000000000000018 .L0 
       src/Riscv.cpp:18     .text:0000000000000018 .L0 
     /tmp/ccvcuV9K.s:51     .text:000000000000001c .L0 
     /tmp/ccvcuV9K.s:52     .text:0000000000000020 .L0 
     /tmp/ccvcuV9K.s:53     .text:0000000000000020 .L0 
     /tmp/ccvcuV9K.s:55     .text:0000000000000024 .L0 
     /tmp/ccvcuV9K.s:57     .text:0000000000000028 .L0 
     /tmp/ccvcuV9K.s:63     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccvcuV9K.s:66     .text:0000000000000028 .L0 
     /tmp/ccvcuV9K.s:67     .text:0000000000000028 .L0 
     /tmp/ccvcuV9K.s:68     .text:000000000000002c .L0 
     /tmp/ccvcuV9K.s:75     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:76     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:77     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:78     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:79     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:80     .text:0000000000000044 .L0 
     /tmp/ccvcuV9K.s:82     .text:0000000000000048 .L0 
     /tmp/ccvcuV9K.s:86     .text:0000000000000048 .L0 
     /tmp/ccvcuV9K.s:87     .text:0000000000000048 .L0 
     /tmp/ccvcuV9K.s:88     .text:0000000000000048 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000048 .L0 
     /tmp/ccvcuV9K.s:96     .text:0000000000000050 .L0 
     /tmp/ccvcuV9K.s:97     .text:0000000000000050 .L0 
     /tmp/ccvcuV9K.s:102    .text:0000000000000054 .L0 
     /tmp/ccvcuV9K.s:103    .text:0000000000000054 .L0 
     /tmp/ccvcuV9K.s:104    .text:0000000000000054 .L0 
       src/Riscv.cpp:27     .text:0000000000000054 .L0 
     /tmp/ccvcuV9K.s:113    .text:0000000000000058 .L0 
     /tmp/ccvcuV9K.s:121    .text:0000000000000068 .L0 
     /tmp/ccvcuV9K.s:122    .text:0000000000000068 .L0 
     /tmp/ccvcuV9K.s:124    .text:0000000000000070 .L0 
     /tmp/ccvcuV9K.s:129    .text:0000000000000074 .L0 
     /tmp/ccvcuV9K.s:130    .text:0000000000000074 .L0 
     /tmp/ccvcuV9K.s:131    .text:0000000000000074 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000074 .L0 
     /tmp/ccvcuV9K.s:139    .text:000000000000007c .L0 
     /tmp/ccvcuV9K.s:140    .text:000000000000007c .L0 
     /tmp/ccvcuV9K.s:147    .text:0000000000000080 .L0 
     /tmp/ccvcuV9K.s:148    .text:0000000000000080 .L0 
     /tmp/ccvcuV9K.s:149    .text:0000000000000080 .L0 
     /tmp/ccvcuV9K.s:160    .text:0000000000000088 .L0 
     /tmp/ccvcuV9K.s:161    .text:0000000000000088 .L0 
     /tmp/ccvcuV9K.s:164    .text:0000000000000094 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 57


     /tmp/ccvcuV9K.s:165    .text:0000000000000094 .L0 
     /tmp/ccvcuV9K.s:170    .text:0000000000000098 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000098 .L0 
     /tmp/ccvcuV9K.s:177    .text:000000000000009c .L0 
     /tmp/ccvcuV9K.s:187    .text:00000000000000a0 .L0 
     /tmp/ccvcuV9K.s:188    .text:00000000000000a0 .L0 
     /tmp/ccvcuV9K.s:189    .text:00000000000000a0 .L0 
     /tmp/ccvcuV9K.s:201    .text:00000000000000a8 .L0 
     /tmp/ccvcuV9K.s:202    .text:00000000000000ac .L0 
     /tmp/ccvcuV9K.s:203    .text:00000000000000ac .L0 
     /tmp/ccvcuV9K.s:205    .text:00000000000000b0 .L0 
     /tmp/ccvcuV9K.s:206    .text:00000000000000b0 .L0 
     /tmp/ccvcuV9K.s:208    .text:00000000000000b4 .L0 
     /tmp/ccvcuV9K.s:210    .text:00000000000000b8 .L0 
     /tmp/ccvcuV9K.s:212    .text:00000000000000bc .L0 
     /tmp/ccvcuV9K.s:214    .text:00000000000000c0 .L0 
     /tmp/ccvcuV9K.s:216    .text:00000000000000c4 .L0 
     /tmp/ccvcuV9K.s:220    .text:00000000000000c8 .L0 
     /tmp/ccvcuV9K.s:225    .text:00000000000000c8 .L0 
     /tmp/ccvcuV9K.s:237    .text:00000000000000d8 .L0 
     /tmp/ccvcuV9K.s:238    .text:00000000000000d8 .L0 
     /tmp/ccvcuV9K.s:241    .text:00000000000000dc .L0 
     /tmp/ccvcuV9K.s:253    .text:00000000000000e4 .L0 
     /tmp/ccvcuV9K.s:268    .text:00000000000000ec .L0 
     /tmp/ccvcuV9K.s:282    .text:00000000000000f4 .L0 
     /tmp/ccvcuV9K.s:298    .text:00000000000000fc .L0 
     /tmp/ccvcuV9K.s:316    .text:0000000000000104 .L0 
     /tmp/ccvcuV9K.s:336    .text:000000000000010c .L0 
     /tmp/ccvcuV9K.s:358    .text:0000000000000114 .L0 
     /tmp/ccvcuV9K.s:382    .text:000000000000011c .L0 
     /tmp/ccvcuV9K.s:408    .text:0000000000000124 .L0 
     /tmp/ccvcuV9K.s:436    .text:000000000000012c .L0 
     /tmp/ccvcuV9K.s:466    .text:0000000000000134 .L0 
     /tmp/ccvcuV9K.s:498    .text:000000000000013c .L0 
     /tmp/ccvcuV9K.s:504    .text:0000000000000144 .L0 
     /tmp/ccvcuV9K.s:505    .text:0000000000000144 .L0 
     /tmp/ccvcuV9K.s:506    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000144 .L0 
     /tmp/ccvcuV9K.s:514    .text:000000000000014c .L0 
     /tmp/ccvcuV9K.s:515    .text:000000000000014c .L0 
     /tmp/ccvcuV9K.s:520    .text:0000000000000150 .L0 
     /tmp/ccvcuV9K.s:525    .text:0000000000000154 .L0 
     /tmp/ccvcuV9K.s:526    .text:0000000000000154 .L0 
     /tmp/ccvcuV9K.s:527    .text:0000000000000154 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000154 .L0 
     /tmp/ccvcuV9K.s:535    .text:000000000000015c .L0 
     /tmp/ccvcuV9K.s:536    .text:000000000000015c .L0 
     /tmp/ccvcuV9K.s:541    .text:0000000000000160 .L0 
     /tmp/ccvcuV9K.s:542    .text:0000000000000160 .L0 
       src/Riscv.cpp:266    .text:0000000000000160 .L0 
     /tmp/ccvcuV9K.s:548    .text:0000000000000164 .L0 
       src/Riscv.cpp:268    .text:0000000000000164 .L0 
     /tmp/ccvcuV9K.s:556    .text:000000000000016c .L0 
     /tmp/ccvcuV9K.s:557    .text:000000000000016c .L0 
     /tmp/ccvcuV9K.s:562    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000174 .L0 
     /tmp/ccvcuV9K.s:572    .text:0000000000000178 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 58


     /tmp/ccvcuV9K.s:573    .text:0000000000000178 .L0 
     /tmp/ccvcuV9K.s:576    .text:0000000000000180 .L0 
     /tmp/ccvcuV9K.s:577    .text:0000000000000180 .L0 
     /tmp/ccvcuV9K.s:582    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000188 .L0 
     /tmp/ccvcuV9K.s:594    .text:000000000000018c .L0 
     /tmp/ccvcuV9K.s:595    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000018c .L0 
     /tmp/ccvcuV9K.s:607    .text:0000000000000190 .L0 
     /tmp/ccvcuV9K.s:608    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000190 .L0 
     /tmp/ccvcuV9K.s:634    .text:0000000000000194 .L0 
     /tmp/ccvcuV9K.s:641    .text:0000000000000198 .L0 
     /tmp/ccvcuV9K.s:642    .text:0000000000000198 .L0 
     /tmp/ccvcuV9K.s:653    .text:00000000000001a4 .L0 
     /tmp/ccvcuV9K.s:654    .text:00000000000001a4 .L0 
     /tmp/ccvcuV9K.s:655    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000001a4 .L0 
     /tmp/ccvcuV9K.s:663    .text:00000000000001ac .L0 
     /tmp/ccvcuV9K.s:664    .text:00000000000001ac .L0 
     /tmp/ccvcuV9K.s:668    .text:00000000000001b0 .L0 
     /tmp/ccvcuV9K.s:673    .text:00000000000001b4 .L0 
     /tmp/ccvcuV9K.s:674    .text:00000000000001b4 .L0 
     /tmp/ccvcuV9K.s:675    .text:00000000000001b4 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000001b4 .L0 
     /tmp/ccvcuV9K.s:683    .text:00000000000001bc .L0 
     /tmp/ccvcuV9K.s:684    .text:00000000000001bc .L0 
     /tmp/ccvcuV9K.s:689    .text:00000000000001c0 .L0 
     /tmp/ccvcuV9K.s:690    .text:00000000000001c0 .L0 
     /tmp/ccvcuV9K.s:691    .text:00000000000001c0 .L0 
     /tmp/ccvcuV9K.s:692    .text:00000000000001c0 .L0 
     /tmp/ccvcuV9K.s:693    .text:00000000000001c0 .L0 
       src/Riscv.cpp:58     .text:00000000000001c0 .L0 
     /tmp/ccvcuV9K.s:699    .text:00000000000001c4 .L0 
       src/Riscv.cpp:59     .text:00000000000001c4 .L0 
     /tmp/ccvcuV9K.s:704    .text:00000000000001c8 .L0 
       src/Riscv.cpp:60     .text:00000000000001c8 .L0 
     /tmp/ccvcuV9K.s:709    .text:00000000000001cc .L0 
       src/Riscv.cpp:61     .text:00000000000001cc .L0 
     /tmp/ccvcuV9K.s:714    .text:00000000000001d0 .L0 
       src/Riscv.cpp:64     .text:00000000000001d0 .L0 
     /tmp/ccvcuV9K.s:720    .text:00000000000001d4 .L0 
       src/Riscv.cpp:65     .text:00000000000001d4 .L0 
     /tmp/ccvcuV9K.s:726    .text:00000000000001d8 .L0 
       src/Riscv.cpp:66     .text:00000000000001d8 .L0 
     /tmp/ccvcuV9K.s:732    .text:00000000000001dc .L0 
       src/Riscv.cpp:67     .text:00000000000001dc .L0 
     /tmp/ccvcuV9K.s:738    .text:00000000000001e0 .L0 
     /tmp/ccvcuV9K.s:740    .text:00000000000001e0 .L0 
     /tmp/ccvcuV9K.s:743    .text:00000000000001e8 .L0 
     /tmp/ccvcuV9K.s:744    .text:00000000000001e8 .L0 
     /tmp/ccvcuV9K.s:746    .text:00000000000001ec .L0 
     /tmp/ccvcuV9K.s:747    .text:00000000000001ec .L0 
     /tmp/ccvcuV9K.s:749    .text:00000000000001f0 .L0 
     /tmp/ccvcuV9K.s:753    .text:00000000000001f4 .L0 
       src/Riscv.cpp:78     .text:00000000000001f4 .L0 
     /tmp/ccvcuV9K.s:763    .text:00000000000001f8 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 59


     /tmp/ccvcuV9K.s:764    .text:00000000000001f8 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000001f8 .L0 
     /tmp/ccvcuV9K.s:776    .text:00000000000001fc .L0 
     /tmp/ccvcuV9K.s:777    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:121    .text:00000000000001fc .L0 
     /tmp/ccvcuV9K.s:784    .text:0000000000000200 .L0 
     /tmp/ccvcuV9K.s:790    .text:0000000000000204 .L0 
     /tmp/ccvcuV9K.s:801    .text:000000000000020c .L0 
     /tmp/ccvcuV9K.s:802    .text:000000000000020c .L0 
     /tmp/ccvcuV9K.s:803    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000020c .L0 
     /tmp/ccvcuV9K.s:811    .text:0000000000000214 .L0 
     /tmp/ccvcuV9K.s:812    .text:0000000000000214 .L0 
     /tmp/ccvcuV9K.s:817    .text:0000000000000218 .L0 
     /tmp/ccvcuV9K.s:822    .text:000000000000021c .L0 
     /tmp/ccvcuV9K.s:823    .text:000000000000021c .L0 
     /tmp/ccvcuV9K.s:824    .text:000000000000021c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000021c .L0 
     /tmp/ccvcuV9K.s:832    .text:0000000000000224 .L0 
     /tmp/ccvcuV9K.s:833    .text:0000000000000224 .L0 
     /tmp/ccvcuV9K.s:838    .text:0000000000000228 .L0 
       src/Riscv.cpp:87     .text:0000000000000228 .L0 
     /tmp/ccvcuV9K.s:844    .text:000000000000022c .L0 
       src/Riscv.cpp:89     .text:000000000000022c .L0 
     /tmp/ccvcuV9K.s:850    .text:0000000000000230 .L0 
     /tmp/ccvcuV9K.s:852    .text:0000000000000230 .L0 
     /tmp/ccvcuV9K.s:857    .text:000000000000023c .L0 
       src/Riscv.cpp:93     .text:000000000000023c .L0 
     /tmp/ccvcuV9K.s:867    .text:0000000000000240 .L0 
     /tmp/ccvcuV9K.s:868    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000240 .L0 
     /tmp/ccvcuV9K.s:880    .text:0000000000000244 .L0 
     /tmp/ccvcuV9K.s:881    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000244 .L0 
     /tmp/ccvcuV9K.s:888    .text:0000000000000248 .L0 
     /tmp/ccvcuV9K.s:899    .text:000000000000024c .L0 
     /tmp/ccvcuV9K.s:900    .text:000000000000024c .L0 
     /tmp/ccvcuV9K.s:901    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000024c .L0 
     /tmp/ccvcuV9K.s:909    .text:0000000000000254 .L0 
     /tmp/ccvcuV9K.s:910    .text:0000000000000254 .L0 
     /tmp/ccvcuV9K.s:915    .text:0000000000000258 .L0 
     /tmp/ccvcuV9K.s:920    .text:000000000000025c .L0 
     /tmp/ccvcuV9K.s:921    .text:000000000000025c .L0 
     /tmp/ccvcuV9K.s:922    .text:000000000000025c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000025c .L0 
     /tmp/ccvcuV9K.s:930    .text:0000000000000264 .L0 
     /tmp/ccvcuV9K.s:931    .text:0000000000000264 .L0 
     /tmp/ccvcuV9K.s:936    .text:0000000000000268 .L0 
       src/Riscv.cpp:102    .text:0000000000000268 .L0 
     /tmp/ccvcuV9K.s:942    .text:000000000000026c .L0 
       src/Riscv.cpp:104    .text:000000000000026c .L0 
     /tmp/ccvcuV9K.s:948    .text:0000000000000270 .L0 
     /tmp/ccvcuV9K.s:950    .text:0000000000000270 .L0 
     /tmp/ccvcuV9K.s:953    .text:0000000000000278 .L0 
       src/Riscv.cpp:106    .text:0000000000000278 .L0 
     /tmp/ccvcuV9K.s:963    .text:000000000000027c .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 60


     /tmp/ccvcuV9K.s:964    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000027c .L0 
     /tmp/ccvcuV9K.s:976    .text:0000000000000280 .L0 
     /tmp/ccvcuV9K.s:977    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000280 .L0 
     /tmp/ccvcuV9K.s:984    .text:0000000000000284 .L0 
     /tmp/ccvcuV9K.s:995    .text:0000000000000288 .L0 
     /tmp/ccvcuV9K.s:996    .text:0000000000000288 .L0 
     /tmp/ccvcuV9K.s:997    .text:0000000000000288 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000288 .L0 
     /tmp/ccvcuV9K.s:1005   .text:0000000000000290 .L0 
     /tmp/ccvcuV9K.s:1006   .text:0000000000000290 .L0 
     /tmp/ccvcuV9K.s:1011   .text:0000000000000294 .L0 
     /tmp/ccvcuV9K.s:1016   .text:0000000000000298 .L0 
     /tmp/ccvcuV9K.s:1017   .text:0000000000000298 .L0 
     /tmp/ccvcuV9K.s:1018   .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000298 .L0 
     /tmp/ccvcuV9K.s:1026   .text:00000000000002a0 .L0 
     /tmp/ccvcuV9K.s:1027   .text:00000000000002a0 .L0 
     /tmp/ccvcuV9K.s:1032   .text:00000000000002a4 .L0 
     /tmp/ccvcuV9K.s:1033   .text:00000000000002a4 .L0 
     /tmp/ccvcuV9K.s:1036   .text:00000000000002b0 .L0 
     /tmp/ccvcuV9K.s:1039   .text:00000000000002b8 .L0 
     /tmp/ccvcuV9K.s:1040   .text:00000000000002b8 .L0 
     /tmp/ccvcuV9K.s:1045   .text:00000000000002c0 .L0 
     /tmp/ccvcuV9K.s:1046   .text:00000000000002c0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002c0 .L0 
     /tmp/ccvcuV9K.s:1058   .text:00000000000002c4 .L0 
     /tmp/ccvcuV9K.s:1059   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002c4 .L0 
     /tmp/ccvcuV9K.s:1066   .text:00000000000002c8 .L0 
     /tmp/ccvcuV9K.s:1077   .text:00000000000002cc .L0 
     /tmp/ccvcuV9K.s:1078   .text:00000000000002cc .L0 
     /tmp/ccvcuV9K.s:1079   .text:00000000000002cc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002cc .L0 
     /tmp/ccvcuV9K.s:1087   .text:00000000000002d4 .L0 
     /tmp/ccvcuV9K.s:1088   .text:00000000000002d4 .L0 
     /tmp/ccvcuV9K.s:1093   .text:00000000000002d8 .L0 
     /tmp/ccvcuV9K.s:1098   .text:00000000000002dc .L0 
     /tmp/ccvcuV9K.s:1099   .text:00000000000002dc .L0 
     /tmp/ccvcuV9K.s:1100   .text:00000000000002dc .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002dc .L0 
     /tmp/ccvcuV9K.s:1108   .text:00000000000002e4 .L0 
     /tmp/ccvcuV9K.s:1109   .text:00000000000002e4 .L0 
     /tmp/ccvcuV9K.s:1114   .text:00000000000002e8 .L0 
     /tmp/ccvcuV9K.s:1115   .text:00000000000002e8 .L0 
     /tmp/ccvcuV9K.s:1120   .text:00000000000002f0 .L0 
     /tmp/ccvcuV9K.s:1121   .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002f0 .L0 
     /tmp/ccvcuV9K.s:1133   .text:00000000000002f4 .L0 
     /tmp/ccvcuV9K.s:1134   .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002f4 .L0 
     /tmp/ccvcuV9K.s:1141   .text:00000000000002f8 .L0 
     /tmp/ccvcuV9K.s:1152   .text:00000000000002fc .L0 
     /tmp/ccvcuV9K.s:1153   .text:00000000000002fc .L0 
     /tmp/ccvcuV9K.s:1154   .text:00000000000002fc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002fc .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 61


     /tmp/ccvcuV9K.s:1162   .text:0000000000000304 .L0 
     /tmp/ccvcuV9K.s:1163   .text:0000000000000304 .L0 
     /tmp/ccvcuV9K.s:1168   .text:0000000000000308 .L0 
     /tmp/ccvcuV9K.s:1173   .text:000000000000030c .L0 
     /tmp/ccvcuV9K.s:1174   .text:000000000000030c .L0 
     /tmp/ccvcuV9K.s:1175   .text:000000000000030c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000030c .L0 
     /tmp/ccvcuV9K.s:1183   .text:0000000000000314 .L0 
     /tmp/ccvcuV9K.s:1184   .text:0000000000000314 .L0 
     /tmp/ccvcuV9K.s:1189   .text:0000000000000318 .L0 
     /tmp/ccvcuV9K.s:1190   .text:0000000000000318 .L0 
     /tmp/ccvcuV9K.s:1193   .text:0000000000000324 .L0 
     /tmp/ccvcuV9K.s:1194   .text:0000000000000324 .L0 
     /tmp/ccvcuV9K.s:1199   .text:000000000000032c .L0 
     /tmp/ccvcuV9K.s:1200   .text:000000000000032c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000032c .L0 
     /tmp/ccvcuV9K.s:1212   .text:0000000000000330 .L0 
     /tmp/ccvcuV9K.s:1213   .text:0000000000000330 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000330 .L0 
     /tmp/ccvcuV9K.s:1220   .text:0000000000000334 .L0 
     /tmp/ccvcuV9K.s:1231   .text:0000000000000338 .L0 
     /tmp/ccvcuV9K.s:1232   .text:0000000000000338 .L0 
     /tmp/ccvcuV9K.s:1233   .text:0000000000000338 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000338 .L0 
     /tmp/ccvcuV9K.s:1241   .text:0000000000000340 .L0 
     /tmp/ccvcuV9K.s:1242   .text:0000000000000340 .L0 
     /tmp/ccvcuV9K.s:1247   .text:0000000000000344 .L0 
     /tmp/ccvcuV9K.s:1252   .text:0000000000000348 .L0 
     /tmp/ccvcuV9K.s:1253   .text:0000000000000348 .L0 
     /tmp/ccvcuV9K.s:1254   .text:0000000000000348 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000348 .L0 
     /tmp/ccvcuV9K.s:1262   .text:0000000000000350 .L0 
     /tmp/ccvcuV9K.s:1263   .text:0000000000000350 .L0 
     /tmp/ccvcuV9K.s:1268   .text:0000000000000354 .L0 
     /tmp/ccvcuV9K.s:1269   .text:0000000000000354 .L0 
     /tmp/ccvcuV9K.s:1270   .text:0000000000000354 .L0 
       src/Riscv.cpp:154    .text:0000000000000354 .L0 
     /tmp/ccvcuV9K.s:1276   .text:0000000000000358 .L0 
       src/Riscv.cpp:155    .text:0000000000000358 .L0 
     /tmp/ccvcuV9K.s:1281   .text:000000000000035c .L0 
       src/Riscv.cpp:157    .text:000000000000035c .L0 
     /tmp/ccvcuV9K.s:1287   .text:0000000000000360 .L0 
       src/Riscv.cpp:158    .text:0000000000000360 .L0 
     /tmp/ccvcuV9K.s:1293   .text:0000000000000364 .L0 
     /tmp/ccvcuV9K.s:1295   .text:0000000000000364 .L0 
     /tmp/ccvcuV9K.s:1302   .text:0000000000000370 .L0 
     /tmp/ccvcuV9K.s:1308   .text:0000000000000374 .L0 
     /tmp/ccvcuV9K.s:1318   .text:000000000000037c .L0 
     /tmp/ccvcuV9K.s:1319   .text:000000000000037c .L0 
     /tmp/ccvcuV9K.s:1320   .text:000000000000037c .L0 
     /tmp/ccvcuV9K.s:1326   .text:0000000000000384 .L0 
     /tmp/ccvcuV9K.s:1327   .text:0000000000000384 .L0 
     /tmp/ccvcuV9K.s:1330   .text:0000000000000388 .L0 
     /tmp/ccvcuV9K.s:1331   .text:0000000000000388 .L0 
     /tmp/ccvcuV9K.s:1333   .text:000000000000038c .L0 
     /tmp/ccvcuV9K.s:1337   .text:0000000000000390 .L0 
       src/Riscv.cpp:168    .text:0000000000000390 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 62


     /tmp/ccvcuV9K.s:1347   .text:0000000000000394 .L0 
     /tmp/ccvcuV9K.s:1348   .text:0000000000000394 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000394 .L0 
     /tmp/ccvcuV9K.s:1360   .text:0000000000000398 .L0 
     /tmp/ccvcuV9K.s:1361   .text:0000000000000398 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000398 .L0 
     /tmp/ccvcuV9K.s:1368   .text:000000000000039c .L0 
     /tmp/ccvcuV9K.s:1374   .text:00000000000003a0 .L0 
     /tmp/ccvcuV9K.s:1384   .text:00000000000003a8 .L0 
     /tmp/ccvcuV9K.s:1385   .text:00000000000003a8 .L0 
     /tmp/ccvcuV9K.s:1386   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000003a8 .L0 
     /tmp/ccvcuV9K.s:1394   .text:00000000000003b0 .L0 
     /tmp/ccvcuV9K.s:1395   .text:00000000000003b0 .L0 
     /tmp/ccvcuV9K.s:1399   .text:00000000000003b4 .L0 
     /tmp/ccvcuV9K.s:1404   .text:00000000000003b8 .L0 
     /tmp/ccvcuV9K.s:1405   .text:00000000000003b8 .L0 
     /tmp/ccvcuV9K.s:1406   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000003b8 .L0 
     /tmp/ccvcuV9K.s:1414   .text:00000000000003c0 .L0 
     /tmp/ccvcuV9K.s:1415   .text:00000000000003c0 .L0 
     /tmp/ccvcuV9K.s:1420   .text:00000000000003c4 .L0 
     /tmp/ccvcuV9K.s:1421   .text:00000000000003c4 .L0 
       src/Riscv.cpp:180    .text:00000000000003c4 .L0 
     /tmp/ccvcuV9K.s:1427   .text:00000000000003c8 .L0 
       src/Riscv.cpp:182    .text:00000000000003c8 .L0 
     /tmp/ccvcuV9K.s:1434   .text:00000000000003cc .L0 
     /tmp/ccvcuV9K.s:1441   .text:00000000000003d0 .L0 
     /tmp/ccvcuV9K.s:1444   .text:00000000000003d4 .L0 
     /tmp/ccvcuV9K.s:1452   .text:00000000000003dc .L0 
     /tmp/ccvcuV9K.s:1453   .text:00000000000003dc .L0 
     /tmp/ccvcuV9K.s:1454   .text:00000000000003dc .L0 
     /tmp/ccvcuV9K.s:1460   .text:00000000000003e4 .L0 
     /tmp/ccvcuV9K.s:1461   .text:00000000000003e4 .L0 
     /tmp/ccvcuV9K.s:1463   .text:00000000000003e8 .L0 
     /tmp/ccvcuV9K.s:1466   .text:00000000000003f0 .L0 
     /tmp/ccvcuV9K.s:1467   .text:00000000000003f0 .L0 
     /tmp/ccvcuV9K.s:1473   .text:00000000000003fc .L0 
     /tmp/ccvcuV9K.s:1476   .text:00000000000003fc .L0 
     /tmp/ccvcuV9K.s:1477   .text:00000000000003fc .L0 
     /tmp/ccvcuV9K.s:1479   .text:0000000000000400 .L0 
     /tmp/ccvcuV9K.s:1481   .text:0000000000000404 .L0 
     /tmp/ccvcuV9K.s:1486   .text:0000000000000408 .L0 
     /tmp/ccvcuV9K.s:1492   .text:000000000000040c .L0 
     /tmp/ccvcuV9K.s:1493   .text:000000000000040c .L0 
     /tmp/ccvcuV9K.s:1495   .text:0000000000000410 .L0 
     /tmp/ccvcuV9K.s:1497   .text:0000000000000414 .L0 
     /tmp/ccvcuV9K.s:1499   .text:0000000000000418 .L0 
     /tmp/ccvcuV9K.s:1509   .text:0000000000000420 .L0 
     /tmp/ccvcuV9K.s:1510   .text:0000000000000420 .L0 
     /tmp/ccvcuV9K.s:1511   .text:0000000000000420 .L0 
     /tmp/ccvcuV9K.s:1516   .text:0000000000000424 .L0 
     /tmp/ccvcuV9K.s:1517   .text:0000000000000424 .L0 
     /tmp/ccvcuV9K.s:1519   .text:0000000000000428 .L0 
     /tmp/ccvcuV9K.s:1526   .text:0000000000000434 .L0 
     /tmp/ccvcuV9K.s:1527   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000434 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 63


     /tmp/ccvcuV9K.s:1539   .text:0000000000000438 .L0 
     /tmp/ccvcuV9K.s:1540   .text:0000000000000438 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000438 .L0 
     /tmp/ccvcuV9K.s:1547   .text:000000000000043c .L0 
     /tmp/ccvcuV9K.s:1558   .text:0000000000000440 .L0 
     /tmp/ccvcuV9K.s:1559   .text:0000000000000440 .L0 
     /tmp/ccvcuV9K.s:1560   .text:0000000000000440 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000440 .L0 
     /tmp/ccvcuV9K.s:1568   .text:0000000000000448 .L0 
     /tmp/ccvcuV9K.s:1569   .text:0000000000000448 .L0 
     /tmp/ccvcuV9K.s:1574   .text:000000000000044c .L0 
     /tmp/ccvcuV9K.s:1579   .text:0000000000000450 .L0 
     /tmp/ccvcuV9K.s:1580   .text:0000000000000450 .L0 
     /tmp/ccvcuV9K.s:1581   .text:0000000000000450 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000450 .L0 
     /tmp/ccvcuV9K.s:1589   .text:0000000000000458 .L0 
     /tmp/ccvcuV9K.s:1590   .text:0000000000000458 .L0 
     /tmp/ccvcuV9K.s:1595   .text:000000000000045c .L0 
     /tmp/ccvcuV9K.s:1596   .text:000000000000045c .L0 
       src/Riscv.cpp:205    .text:000000000000045c .L0 
     /tmp/ccvcuV9K.s:1602   .text:0000000000000460 .L0 
       src/Riscv.cpp:207    .text:0000000000000460 .L0 
     /tmp/ccvcuV9K.s:1608   .text:0000000000000464 .L0 
     /tmp/ccvcuV9K.s:1612   .text:0000000000000464 .L0 
     /tmp/ccvcuV9K.s:1613   .text:0000000000000464 .L0 
     /tmp/ccvcuV9K.s:1614   .text:0000000000000464 .L0 
     /tmp/ccvcuV9K.s:1619   .text:0000000000000468 .L0 
     /tmp/ccvcuV9K.s:1621   .text:000000000000046c .L0 
     /tmp/ccvcuV9K.s:1625   .text:0000000000000470 .L0 
       src/Riscv.cpp:217    .text:0000000000000470 .L0 
     /tmp/ccvcuV9K.s:1635   .text:0000000000000474 .L0 
     /tmp/ccvcuV9K.s:1636   .text:0000000000000474 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000474 .L0 
     /tmp/ccvcuV9K.s:1648   .text:0000000000000478 .L0 
     /tmp/ccvcuV9K.s:1649   .text:0000000000000478 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000478 .L0 
     /tmp/ccvcuV9K.s:1656   .text:000000000000047c .L0 
     /tmp/ccvcuV9K.s:1662   .text:0000000000000480 .L0 
     /tmp/ccvcuV9K.s:1663   .text:0000000000000480 .L0 
     /tmp/ccvcuV9K.s:1674   .text:000000000000048c .L0 
     /tmp/ccvcuV9K.s:1675   .text:000000000000048c .L0 
     /tmp/ccvcuV9K.s:1676   .text:000000000000048c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000048c .L0 
     /tmp/ccvcuV9K.s:1684   .text:0000000000000494 .L0 
     /tmp/ccvcuV9K.s:1685   .text:0000000000000494 .L0 
     /tmp/ccvcuV9K.s:1690   .text:0000000000000498 .L0 
     /tmp/ccvcuV9K.s:1695   .text:000000000000049c .L0 
     /tmp/ccvcuV9K.s:1696   .text:000000000000049c .L0 
     /tmp/ccvcuV9K.s:1697   .text:000000000000049c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000049c .L0 
     /tmp/ccvcuV9K.s:1705   .text:00000000000004a4 .L0 
     /tmp/ccvcuV9K.s:1706   .text:00000000000004a4 .L0 
     /tmp/ccvcuV9K.s:1711   .text:00000000000004a8 .L0 
     /tmp/ccvcuV9K.s:1712   .text:00000000000004a8 .L0 
       src/Riscv.cpp:228    .text:00000000000004a8 .L0 
     /tmp/ccvcuV9K.s:1718   .text:00000000000004ac .L0 
       src/Riscv.cpp:230    .text:00000000000004ac .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 64


     /tmp/ccvcuV9K.s:1724   .text:00000000000004b0 .L0 
     /tmp/ccvcuV9K.s:1728   .text:00000000000004b0 .L0 
     /tmp/ccvcuV9K.s:1729   .text:00000000000004b0 .L0 
     /tmp/ccvcuV9K.s:1730   .text:00000000000004b0 .L0 
     /tmp/ccvcuV9K.s:1735   .text:00000000000004b4 .L0 
     /tmp/ccvcuV9K.s:1737   .text:00000000000004b8 .L0 
     /tmp/ccvcuV9K.s:1741   .text:00000000000004bc .L0 
       src/Riscv.cpp:241    .text:00000000000004bc .L0 
     /tmp/ccvcuV9K.s:1751   .text:00000000000004c0 .L0 
     /tmp/ccvcuV9K.s:1752   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000004c0 .L0 
     /tmp/ccvcuV9K.s:1764   .text:00000000000004c4 .L0 
     /tmp/ccvcuV9K.s:1765   .text:00000000000004c4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000004c4 .L0 
     /tmp/ccvcuV9K.s:1772   .text:00000000000004c8 .L0 
     /tmp/ccvcuV9K.s:1778   .text:00000000000004cc .L0 
     /tmp/ccvcuV9K.s:1779   .text:00000000000004cc .L0 
     /tmp/ccvcuV9K.s:1782   .text:00000000000004d4 .L0 
     /tmp/ccvcuV9K.s:1783   .text:00000000000004d4 .L0 
     /tmp/ccvcuV9K.s:1793   .text:00000000000004dc .L0 
     /tmp/ccvcuV9K.s:1794   .text:00000000000004dc .L0 
     /tmp/ccvcuV9K.s:1795   .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000004dc .L0 
     /tmp/ccvcuV9K.s:1803   .text:00000000000004e4 .L0 
     /tmp/ccvcuV9K.s:1804   .text:00000000000004e4 .L0 
     /tmp/ccvcuV9K.s:1809   .text:00000000000004e8 .L0 
     /tmp/ccvcuV9K.s:1814   .text:00000000000004ec .L0 
     /tmp/ccvcuV9K.s:1815   .text:00000000000004ec .L0 
     /tmp/ccvcuV9K.s:1816   .text:00000000000004ec .L0 
  src/../h/Riscv.hpp:185    .text:00000000000004ec .L0 
     /tmp/ccvcuV9K.s:1824   .text:00000000000004f4 .L0 
     /tmp/ccvcuV9K.s:1825   .text:00000000000004f4 .L0 
     /tmp/ccvcuV9K.s:1830   .text:00000000000004f8 .L0 
     /tmp/ccvcuV9K.s:1831   .text:00000000000004f8 .L0 
     /tmp/ccvcuV9K.s:1836   .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000500 .L0 
     /tmp/ccvcuV9K.s:1846   .text:0000000000000504 .L0 
     /tmp/ccvcuV9K.s:1847   .text:0000000000000504 .L0 
     /tmp/ccvcuV9K.s:1850   .text:000000000000050c .L0 
     /tmp/ccvcuV9K.s:1851   .text:000000000000050c .L0 
     /tmp/ccvcuV9K.s:1856   .text:0000000000000514 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000514 .L0 
     /tmp/ccvcuV9K.s:1866   .text:0000000000000518 .L0 
       src/Riscv.cpp:255    .text:0000000000000518 .L0 
     /tmp/ccvcuV9K.s:1876   .text:000000000000051c .L0 
     /tmp/ccvcuV9K.s:1877   .text:000000000000051c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000051c .L0 
     /tmp/ccvcuV9K.s:1889   .text:0000000000000520 .L0 
     /tmp/ccvcuV9K.s:1890   .text:0000000000000520 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000520 .L0 
     /tmp/ccvcuV9K.s:1897   .text:0000000000000524 .L0 
     /tmp/ccvcuV9K.s:1915   .text:0000000000000528 .L0 
     /tmp/ccvcuV9K.s:1921   .text:0000000000000528 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccvcuV9K.s:1924   .text:0000000000000528 .L0 
     /tmp/ccvcuV9K.s:1925   .text:0000000000000528 .L0 
     /tmp/ccvcuV9K.s:1926   .text:000000000000052c .L0 
     /tmp/ccvcuV9K.s:1929   .text:0000000000000534 .L0 
GAS LISTING /tmp/ccvcuV9K.s 			page 65


     /tmp/ccvcuV9K.s:1930   .text:0000000000000534 .L0 
     /tmp/ccvcuV9K.s:1932   .text:0000000000000538 .L0 
     /tmp/ccvcuV9K.s:1936   .text:0000000000000538 .L0 
     /tmp/ccvcuV9K.s:1937   .text:0000000000000538 .L0 
     /tmp/ccvcuV9K.s:1938   .text:0000000000000538 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000538 .L0 
     /tmp/ccvcuV9K.s:1946   .text:0000000000000540 .L0 
     /tmp/ccvcuV9K.s:1947   .text:0000000000000540 .L0 
     /tmp/ccvcuV9K.s:1952   .text:0000000000000544 .L0 
     /tmp/ccvcuV9K.s:1957   .text:0000000000000554 .L0 
     /tmp/ccvcuV9K.s:1964   .text:0000000000000564 .L0 
     /tmp/ccvcuV9K.s:1965   .text:0000000000000568 .L0 
     /tmp/ccvcuV9K.s:1966   .text:0000000000000568 .L0 
     /tmp/ccvcuV9K.s:1968   .text:000000000000056c .L0 
     /tmp/ccvcuV9K.s:1969   .text:000000000000056c .L0 
     /tmp/ccvcuV9K.s:1971   .text:0000000000000570 .L0 
     /tmp/ccvcuV9K.s:1975   .text:0000000000000574 .L0 
     /tmp/ccvcuV9K.s:1977   .text:0000000000000574 .L0 
     /tmp/ccvcuV9K.s:1978   .text:0000000000000574 .L0 
     /tmp/ccvcuV9K.s:1983   .text:000000000000057c .L0 
     /tmp/ccvcuV9K.s:1984   .text:000000000000057c .L0 
     /tmp/ccvcuV9K.s:1985   .text:000000000000057c .L0 
     /tmp/ccvcuV9K.s:1992   .text:0000000000000584 .L0 
     /tmp/ccvcuV9K.s:2000   .text:0000000000000588 .L0 
     /tmp/ccvcuV9K.s:2001   .text:0000000000000588 .L0 
     /tmp/ccvcuV9K.s:2002   .text:0000000000000588 .L0 
     /tmp/ccvcuV9K.s:2012   .text:0000000000000590 .L0 
     /tmp/ccvcuV9K.s:2013   .text:0000000000000594 .L0 
     /tmp/ccvcuV9K.s:2021   .bss:0000000000000000 _ZN5Riscv9privilegeE
     /tmp/ccvcuV9K.s:2018   .bss:0000000000000000 .LANCHOR0
     /tmp/ccvcuV9K.s:2030   .text:0000000000000594 .L0 
     /tmp/ccvcuV9K.s:122    .text:0000000000000068 .L0 
     /tmp/ccvcuV9K.s:162    .text:000000000000008c .L0 
     /tmp/ccvcuV9K.s:557    .text:000000000000016c .L0 
     /tmp/ccvcuV9K.s:577    .text:0000000000000180 .L0 
     /tmp/ccvcuV9K.s:1033   .text:00000000000002a4 .L0 
     /tmp/ccvcuV9K.s:1190   .text:0000000000000318 .L0 
     /tmp/ccvcuV9K.s:1831   .text:00000000000004f8 .L0 
     /tmp/ccvcuV9K.s:1851   .text:000000000000050c .L0 
     /tmp/ccvcuV9K.s:179    .text:00000000000000a0 .L32
     /tmp/ccvcuV9K.s:219    .text:00000000000000c8 .L6
     /tmp/ccvcuV9K.s:196    .text:00000000000000a8 .L3
     /tmp/ccvcuV9K.s:636    .text:0000000000000198 .L33
     /tmp/ccvcuV9K.s:646    .text:00000000000001a4 .L34
     /tmp/ccvcuV9K.s:793    .text:000000000000020c .L35
     /tmp/ccvcuV9K.s:890    .text:000000000000024c .L36
     /tmp/ccvcuV9K.s:986    .text:0000000000000288 .L37
     /tmp/ccvcuV9K.s:1068   .text:00000000000002cc .L38
     /tmp/ccvcuV9K.s:1143   .text:00000000000002fc .L39
     /tmp/ccvcuV9K.s:1222   .text:0000000000000338 .L40
     /tmp/ccvcuV9K.s:1377   .text:00000000000003a8 .L41
     /tmp/ccvcuV9K.s:1549   .text:0000000000000440 .L42
     /tmp/ccvcuV9K.s:1667   .text:000000000000048c .L43
     /tmp/ccvcuV9K.s:1786   .text:00000000000004dc .L44
     /tmp/ccvcuV9K.s:786    .text:0000000000000204 .L27
     /tmp/ccvcuV9K.s:256    .text:00000000000000ec .L8
     /tmp/ccvcuV9K.s:750    .text:00000000000001f4 .L9
GAS LISTING /tmp/ccvcuV9K.s 			page 66


     /tmp/ccvcuV9K.s:1370   .text:00000000000003a0 .L28
     /tmp/ccvcuV9K.s:1334   .text:0000000000000390 .L16
     /tmp/ccvcuV9K.s:1470   .text:00000000000003fc .L20
     /tmp/ccvcuV9K.s:1502   .text:0000000000000420 .L18
     /tmp/ccvcuV9K.s:1436   .text:00000000000003d0 .L19
     /tmp/ccvcuV9K.s:1522   .text:0000000000000434 .L21
     /tmp/ccvcuV9K.s:1658   .text:0000000000000480 .L45
     /tmp/ccvcuV9K.s:1623   .text:0000000000000470 .L23
     /tmp/ccvcuV9K.s:1774   .text:00000000000004cc .L46
     /tmp/ccvcuV9K.s:1739   .text:00000000000004bc .L25
     /tmp/ccvcuV9K.s:1974   .text:0000000000000574 .L51
     /tmp/ccvcuV9K.s:1994   .text:0000000000000588 .L52
     /tmp/ccvcuV9K.s:1962   .text:0000000000000564 .L47
     /tmp/ccvcuV9K.s:5246   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccvcuV9K.s:7619   .debug_str:0000000000000b9b .LASF225
     /tmp/ccvcuV9K.s:7313   .debug_str:0000000000000198 .LASF226
     /tmp/ccvcuV9K.s:7469   .debug_str:00000000000006db .LASF227
     /tmp/ccvcuV9K.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccvcuV9K.s:2024   .text:0000000000000594 .Letext0
     /tmp/ccvcuV9K.s:7253   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccvcuV9K.s:7401   .debug_str:0000000000000491 .LASF0
     /tmp/ccvcuV9K.s:7445   .debug_str:000000000000064b .LASF1
     /tmp/ccvcuV9K.s:7547   .debug_str:00000000000009a8 .LASF2
     /tmp/ccvcuV9K.s:7559   .debug_str:0000000000000a16 .LASF4
     /tmp/ccvcuV9K.s:7417   .debug_str:0000000000000508 .LASF3
     /tmp/ccvcuV9K.s:7267   .debug_str:0000000000000057 .LASF5
     /tmp/ccvcuV9K.s:7501   .debug_str:00000000000007ef .LASF6
     /tmp/ccvcuV9K.s:7433   .debug_str:00000000000005e9 .LASF7
     /tmp/ccvcuV9K.s:7367   .debug_str:0000000000000376 .LASF8
     /tmp/ccvcuV9K.s:7375   .debug_str:00000000000003b8 .LASF9
     /tmp/ccvcuV9K.s:7299   .debug_str:0000000000000122 .LASF10
     /tmp/ccvcuV9K.s:7355   .debug_str:0000000000000314 .LASF11
     /tmp/ccvcuV9K.s:7315   .debug_str:00000000000001a6 .LASF12
     /tmp/ccvcuV9K.s:7297   .debug_str:0000000000000112 .LASF13
     /tmp/ccvcuV9K.s:7589   .debug_str:0000000000000aea .LASF14
     /tmp/ccvcuV9K.s:7337   .debug_str:0000000000000250 .LASF15
     /tmp/ccvcuV9K.s:7579   .debug_str:0000000000000ab4 .LASF16
     /tmp/ccvcuV9K.s:7671   .debug_str:0000000000000dc7 .LASF70
     /tmp/ccvcuV9K.s:7527   .debug_str:00000000000008f9 .LASF20
     /tmp/ccvcuV9K.s:7449   .debug_str:0000000000000664 .LASF17
     /tmp/ccvcuV9K.s:7343   .debug_str:00000000000002a4 .LASF18
     /tmp/ccvcuV9K.s:7687   .debug_str:0000000000000e2d .LASF19
     /tmp/ccvcuV9K.s:7655   .debug_str:0000000000000d3f .LASF21
     /tmp/ccvcuV9K.s:7347   .debug_str:00000000000002b8 .LASF22
     /tmp/ccvcuV9K.s:7617   .debug_str:0000000000000b8e .LASF23
     /tmp/ccvcuV9K.s:7323   .debug_str:00000000000001e2 .LASF24
     /tmp/ccvcuV9K.s:7573   .debug_str:0000000000000a86 .LASF156
     /tmp/ccvcuV9K.s:7387   .debug_str:0000000000000431 .LASF57
     /tmp/ccvcuV9K.s:7399   .debug_str:0000000000000479 .LASF59
     /tmp/ccvcuV9K.s:7647   .debug_str:0000000000000d0b .LASF25
     /tmp/ccvcuV9K.s:7635   .debug_str:0000000000000ccb .LASF27
     /tmp/ccvcuV9K.s:7541   .debug_str:0000000000000982 .LASF29
     /tmp/ccvcuV9K.s:7489   .debug_str:0000000000000784 .LASF31
     /tmp/ccvcuV9K.s:7519   .debug_str:00000000000008b0 .LASF26
     /tmp/ccvcuV9K.s:7521   .debug_str:00000000000008b7 .LASF28
     /tmp/ccvcuV9K.s:7483   .debug_str:0000000000000764 .LASF30
     /tmp/ccvcuV9K.s:7437   .debug_str:000000000000061e .LASF32
GAS LISTING /tmp/ccvcuV9K.s 			page 67


     /tmp/ccvcuV9K.s:7683   .debug_str:0000000000000e19 .LASF33
     /tmp/ccvcuV9K.s:7625   .debug_str:0000000000000c80 .LASF34
     /tmp/ccvcuV9K.s:7479   .debug_str:0000000000000757 .LASF35
     /tmp/ccvcuV9K.s:7487   .debug_str:0000000000000770 .LASF36
     /tmp/ccvcuV9K.s:7451   .debug_str:000000000000066d .LASF37
     /tmp/ccvcuV9K.s:7525   .debug_str:00000000000008e5 .LASF38
     /tmp/ccvcuV9K.s:7713   .debug_str:0000000000000f01 .LASF39
     /tmp/ccvcuV9K.s:7407   .debug_str:00000000000004a9 .LASF40
     /tmp/ccvcuV9K.s:7585   .debug_str:0000000000000ad6 .LASF41
     /tmp/ccvcuV9K.s:7563   .debug_str:0000000000000a43 .LASF42
     /tmp/ccvcuV9K.s:7565   .debug_str:0000000000000a56 .LASF43
     /tmp/ccvcuV9K.s:7303   .debug_str:0000000000000136 .LASF44
     /tmp/ccvcuV9K.s:7333   .debug_str:000000000000022b .LASF45
     /tmp/ccvcuV9K.s:7395   .debug_str:0000000000000452 .LASF46
     /tmp/ccvcuV9K.s:7405   .debug_str:00000000000004a3 .LASF47
     /tmp/ccvcuV9K.s:7325   .debug_str:00000000000001ee .LASF48
     /tmp/ccvcuV9K.s:7269   .debug_str:000000000000005e .LASF49
     /tmp/ccvcuV9K.s:7553   .debug_str:00000000000009cc .LASF50
     /tmp/ccvcuV9K.s:7545   .debug_str:000000000000099d .LASF51
     /tmp/ccvcuV9K.s:7705   .debug_str:0000000000000eb6 .LASF52
     /tmp/ccvcuV9K.s:7675   .debug_str:0000000000000dd2 .LASF53
     /tmp/ccvcuV9K.s:7689   .debug_str:0000000000000e36 .LASF54
     /tmp/ccvcuV9K.s:7669   .debug_str:0000000000000dbd .LASF55
     /tmp/ccvcuV9K.s:7471   .debug_str:000000000000070b .LASF56
     /tmp/ccvcuV9K.s:7681   .debug_str:0000000000000e0a .LASF58
     /tmp/ccvcuV9K.s:7373   .debug_str:000000000000039c .LASF60
     /tmp/ccvcuV9K.s:7549   .debug_str:00000000000009b6 .LASF61
     /tmp/ccvcuV9K.s:7707   .debug_str:0000000000000ece .LASF62
     /tmp/ccvcuV9K.s:7345   .debug_str:00000000000002ad .LASF63
     /tmp/ccvcuV9K.s:7363   .debug_str:0000000000000354 .LASF64
     /tmp/ccvcuV9K.s:7503   .debug_str:0000000000000802 .LASF65
     /tmp/ccvcuV9K.s:7429   .debug_str:00000000000005aa .LASF67
     /tmp/ccvcuV9K.s:7543   .debug_str:000000000000098b .LASF66
     /tmp/ccvcuV9K.s:7335   .debug_str:0000000000000231 .LASF68
     /tmp/ccvcuV9K.s:7463   .debug_str:00000000000006b5 .LASF69
     /tmp/ccvcuV9K.s:7679   .debug_str:0000000000000de6 .LASF71
     /tmp/ccvcuV9K.s:7665   .debug_str:0000000000000d98 .LASF105
     /tmp/ccvcuV9K.s:7443   .debug_str:0000000000000646 .LASF72
     /tmp/ccvcuV9K.s:7301   .debug_str:0000000000000131 .LASF73
     /tmp/ccvcuV9K.s:7277   .debug_str:000000000000008f .LASF74
     /tmp/ccvcuV9K.s:7413   .debug_str:00000000000004cd .LASF107
     /tmp/ccvcuV9K.s:7583   .debug_str:0000000000000ad1 .LASF75
     /tmp/ccvcuV9K.s:7481   .debug_str:000000000000075f .LASF76
     /tmp/ccvcuV9K.s:7709   .debug_str:0000000000000ee7 .LASF77
     /tmp/ccvcuV9K.s:7555   .debug_str:00000000000009e4 .LASF80
     /tmp/ccvcuV9K.s:7351   .debug_str:00000000000002db .LASF78
     /tmp/ccvcuV9K.s:7551   .debug_str:00000000000009c2 .LASF79
     /tmp/ccvcuV9K.s:7533   .debug_str:0000000000000929 .LASF81
     /tmp/ccvcuV9K.s:7495   .debug_str:00000000000007bc .LASF82
     /tmp/ccvcuV9K.s:7685   .debug_str:0000000000000e21 .LASF83
     /tmp/ccvcuV9K.s:7473   .debug_str:0000000000000721 .LASF84
     /tmp/ccvcuV9K.s:7597   .debug_str:0000000000000b17 .LASF85
     /tmp/ccvcuV9K.s:7291   .debug_str:00000000000000d4 .LASF86
     /tmp/ccvcuV9K.s:7649   .debug_str:0000000000000d14 .LASF87
     /tmp/ccvcuV9K.s:7339   .debug_str:0000000000000266 .LASF88
     /tmp/ccvcuV9K.s:7411   .debug_str:00000000000004c3 .LASF89
     /tmp/ccvcuV9K.s:7511   .debug_str:0000000000000843 .LASF90
GAS LISTING /tmp/ccvcuV9K.s 			page 68


     /tmp/ccvcuV9K.s:7613   .debug_str:0000000000000b7e .LASF144
     /tmp/ccvcuV9K.s:7423   .debug_str:000000000000055a .LASF91
     /tmp/ccvcuV9K.s:7653   .debug_str:0000000000000d23 .LASF92
     /tmp/ccvcuV9K.s:7275   .debug_str:0000000000000076 .LASF93
     /tmp/ccvcuV9K.s:7309   .debug_str:0000000000000182 .LASF94
     /tmp/ccvcuV9K.s:7629   .debug_str:0000000000000c9e .LASF95
     /tmp/ccvcuV9K.s:7531   .debug_str:0000000000000921 .LASF96
     /tmp/ccvcuV9K.s:7365   .debug_str:000000000000036c .LASF97
     /tmp/ccvcuV9K.s:7575   .debug_str:0000000000000a90 .LASF98
     /tmp/ccvcuV9K.s:7693   .debug_str:0000000000000e5c .LASF99
     /tmp/ccvcuV9K.s:7699   .debug_str:0000000000000e7b .LASF228
     /tmp/ccvcuV9K.s:7427   .debug_str:000000000000058e .LASF229
     /tmp/ccvcuV9K.s:7431   .debug_str:00000000000005cc .LASF100
     /tmp/ccvcuV9K.s:7295   .debug_str:00000000000000fd .LASF101
     /tmp/ccvcuV9K.s:7557   .debug_str:0000000000000a01 .LASF102
     /tmp/ccvcuV9K.s:7715   .debug_str:0000000000000f09 .LASF103
     /tmp/ccvcuV9K.s:7651   .debug_str:0000000000000d1e .LASF106
     /tmp/ccvcuV9K.s:7441   .debug_str:0000000000000641 .LASF104
     /tmp/ccvcuV9K.s:7659   .debug_str:0000000000000d69 .LASF108
     /tmp/ccvcuV9K.s:7475   .debug_str:0000000000000745 .LASF109
     /tmp/ccvcuV9K.s:7499   .debug_str:00000000000007d8 .LASF110
     /tmp/ccvcuV9K.s:7523   .debug_str:00000000000008ca .LASF111
     /tmp/ccvcuV9K.s:7385   .debug_str:0000000000000416 .LASF230
     /tmp/ccvcuV9K.s:7467   .debug_str:00000000000006ce .LASF112
     /tmp/ccvcuV9K.s:7261   .debug_str:000000000000002b .LASF113
     /tmp/ccvcuV9K.s:7265   .debug_str:0000000000000047 .LASF114
     /tmp/ccvcuV9K.s:7425   .debug_str:0000000000000576 .LASF115
     /tmp/ccvcuV9K.s:7539   .debug_str:0000000000000979 .LASF116
     /tmp/ccvcuV9K.s:7703   .debug_str:0000000000000e95 .LASF117
     /tmp/ccvcuV9K.s:7457   .debug_str:000000000000068f .LASF118
     /tmp/ccvcuV9K.s:7667   .debug_str:0000000000000d9d .LASF119
     /tmp/ccvcuV9K.s:7497   .debug_str:00000000000007cc .LASF120
     /tmp/ccvcuV9K.s:7435   .debug_str:00000000000005fc .LASF121
     /tmp/ccvcuV9K.s:7717   .debug_str:0000000000000f17 .LASF122
     /tmp/ccvcuV9K.s:7537   .debug_str:000000000000095a .LASF123
     /tmp/ccvcuV9K.s:7571   .debug_str:0000000000000a7b .LASF124
     /tmp/ccvcuV9K.s:7357   .debug_str:0000000000000323 .LASF125
     /tmp/ccvcuV9K.s:7509   .debug_str:000000000000083a .LASF126
     /tmp/ccvcuV9K.s:7305   .debug_str:0000000000000149 .LASF127
     /tmp/ccvcuV9K.s:7279   .debug_str:0000000000000094 .LASF128
     /tmp/ccvcuV9K.s:7695   .debug_str:0000000000000e6e .LASF129
     /tmp/ccvcuV9K.s:7293   .debug_str:00000000000000f7 .LASF130
     /tmp/ccvcuV9K.s:7285   .debug_str:00000000000000ad .LASF131
     /tmp/ccvcuV9K.s:7505   .debug_str:0000000000000817 .LASF132
     /tmp/ccvcuV9K.s:7601   .debug_str:0000000000000b2b .LASF133
     /tmp/ccvcuV9K.s:7593   .debug_str:0000000000000b07 .LASF134
     /tmp/ccvcuV9K.s:7439   .debug_str:0000000000000631 .LASF135
     /tmp/ccvcuV9K.s:7603   .debug_str:0000000000000b33 .LASF136
     /tmp/ccvcuV9K.s:7507   .debug_str:000000000000081f .LASF137
     /tmp/ccvcuV9K.s:7283   .debug_str:00000000000000a1 .LASF138
     /tmp/ccvcuV9K.s:7657   .debug_str:0000000000000d4e .LASF139
     /tmp/ccvcuV9K.s:7477   .debug_str:000000000000074a .LASF140
     /tmp/ccvcuV9K.s:7327   .debug_str:0000000000000200 .LASF141
     /tmp/ccvcuV9K.s:7587   .debug_str:0000000000000add .LASF142
     /tmp/ccvcuV9K.s:7561   .debug_str:0000000000000a1d .LASF143
     /tmp/ccvcuV9K.s:7491   .debug_str:0000000000000799 .LASF145
     /tmp/ccvcuV9K.s:7447   .debug_str:000000000000065e .LASF146
GAS LISTING /tmp/ccvcuV9K.s 			page 69


     /tmp/ccvcuV9K.s:7257   .debug_str:0000000000000011 .LASF147
     /tmp/ccvcuV9K.s:7697   .debug_str:0000000000000e75 .LASF148
     /tmp/ccvcuV9K.s:7515   .debug_str:0000000000000888 .LASF149
     /tmp/ccvcuV9K.s:7461   .debug_str:00000000000006ac .LASF150
     /tmp/ccvcuV9K.s:7623   .debug_str:0000000000000c68 .LASF151
     /tmp/ccvcuV9K.s:7569   .debug_str:0000000000000a6e .LASF152
     /tmp/ccvcuV9K.s:7341   .debug_str:0000000000000288 .LASF153
     /tmp/ccvcuV9K.s:7609   .debug_str:0000000000000b58 .LASF154
     /tmp/ccvcuV9K.s:7493   .debug_str:000000000000079e .LASF155
     /tmp/ccvcuV9K.s:7615   .debug_str:0000000000000b86 .LASF157
     /tmp/ccvcuV9K.s:7409   .debug_str:00000000000004bd .LASF158
     /tmp/ccvcuV9K.s:7419   .debug_str:000000000000051a .LASF159
     /tmp/ccvcuV9K.s:7311   .debug_str:000000000000018b .LASF160
     /tmp/ccvcuV9K.s:7631   .debug_str:0000000000000ca7 .LASF161
     /tmp/ccvcuV9K.s:7535   .debug_str:000000000000094a .LASF162
     /tmp/ccvcuV9K.s:7289   .debug_str:00000000000000c4 .LASF163
     /tmp/ccvcuV9K.s:7691   .debug_str:0000000000000e4c .LASF164
     /tmp/ccvcuV9K.s:7591   .debug_str:0000000000000af6 .LASF165
     /tmp/ccvcuV9K.s:7577   .debug_str:0000000000000aa1 .LASF166
     /tmp/ccvcuV9K.s:7255   .debug_str:0000000000000000 .LASF167
     /tmp/ccvcuV9K.s:7381   .debug_str:00000000000003f3 .LASF168
     /tmp/ccvcuV9K.s:7263   .debug_str:0000000000000042 .LASF169
     /tmp/ccvcuV9K.s:7701   .debug_str:0000000000000e8f .LASF170
     /tmp/ccvcuV9K.s:7633   .debug_str:0000000000000cc3 .LASF171
     /tmp/ccvcuV9K.s:7627   .debug_str:0000000000000c94 .LASF172
     /tmp/ccvcuV9K.s:7599   .debug_str:0000000000000b22 .LASF173
     /tmp/ccvcuV9K.s:7677   .debug_str:0000000000000ddc .LASF174
     /tmp/ccvcuV9K.s:7287   .debug_str:00000000000000b6 .LASF175
     /tmp/ccvcuV9K.s:7529   .debug_str:0000000000000904 .LASF176
     /tmp/ccvcuV9K.s:7317   .debug_str:00000000000001b6 .LASF177
     /tmp/ccvcuV9K.s:7421   .debug_str:000000000000052e .LASF178
     /tmp/ccvcuV9K.s:7329   .debug_str:000000000000021d .LASF179
     /tmp/ccvcuV9K.s:7321   .debug_str:00000000000001cb .LASF180
     /tmp/ccvcuV9K.s:7567   .debug_str:0000000000000a5d .LASF181
     /tmp/ccvcuV9K.s:7621   .debug_str:0000000000000c5f .LASF182
     /tmp/ccvcuV9K.s:7663   .debug_str:0000000000000d91 .LASF183
     /tmp/ccvcuV9K.s:7711   .debug_str:0000000000000ef8 .LASF184
     /tmp/ccvcuV9K.s:7361   .debug_str:0000000000000349 .LASF185
     /tmp/ccvcuV9K.s:7377   .debug_str:00000000000003c6 .LASF186
     /tmp/ccvcuV9K.s:7331   .debug_str:0000000000000226 .LASF187
     /tmp/ccvcuV9K.s:7637   .debug_str:0000000000000ce0 .LASF188
     /tmp/ccvcuV9K.s:7595   .debug_str:0000000000000b10 .LASF189
     /tmp/ccvcuV9K.s:7415   .debug_str:00000000000004ef .LASF190
     /tmp/ccvcuV9K.s:7391   .debug_str:0000000000000445 .LASF191
     /tmp/ccvcuV9K.s:7379   .debug_str:00000000000003da .LASF192
     /tmp/ccvcuV9K.s:7465   .debug_str:00000000000006ba .LASF193
     /tmp/ccvcuV9K.s:7455   .debug_str:000000000000067b .LASF194
     /tmp/ccvcuV9K.s:7397   .debug_str:0000000000000464 .LASF195
     /tmp/ccvcuV9K.s:7605   .debug_str:0000000000000b3e .LASF196
     /tmp/ccvcuV9K.s:7389   .debug_str:000000000000043c .LASF197
     /tmp/ccvcuV9K.s:7307   .debug_str:0000000000000167 .LASF198
     /tmp/ccvcuV9K.s:7485   .debug_str:000000000000076b .LASF199
     /tmp/ccvcuV9K.s:7611   .debug_str:0000000000000b67 .LASF200
     /tmp/ccvcuV9K.s:7273   .debug_str:0000000000000070 .LASF201
     /tmp/ccvcuV9K.s:7353   .debug_str:00000000000002fc .LASF202
     /tmp/ccvcuV9K.s:7513   .debug_str:0000000000000880 .LASF203
     /tmp/ccvcuV9K.s:7271   .debug_str:0000000000000069 .LASF204
GAS LISTING /tmp/ccvcuV9K.s 			page 70


     /tmp/ccvcuV9K.s:7369   .debug_str:0000000000000386 .LASF205
     /tmp/ccvcuV9K.s:7607   .debug_str:0000000000000b53 .LASF206
     /tmp/ccvcuV9K.s:7459   .debug_str:0000000000000697 .LASF231
     /tmp/ccvcuV9K.s:7359   .debug_str:0000000000000344 .LASF208
     /tmp/ccvcuV9K.s:7403   .debug_str:000000000000049e .LASF207
     /tmp/ccvcuV9K.s:7349   .debug_str:00000000000002c4 .LASF217
     /tmp/ccvcuV9K.s:1922   .text:0000000000000528 .LFB56
     /tmp/ccvcuV9K.s:2014   .text:0000000000000594 .LFE56
     /tmp/ccvcuV9K.s:7581   .debug_str:0000000000000aca .LASF209
     /tmp/ccvcuV9K.s:6480   .debug_loc:0000000000000000 .LLST85
     /tmp/ccvcuV9K.s:1934   .text:0000000000000538 .LBB469
     /tmp/ccvcuV9K.s:1950   .text:0000000000000544 .LBE469
     /tmp/ccvcuV9K.s:1981   .text:000000000000057c .LBB471
     /tmp/ccvcuV9K.s:1996   .text:0000000000000588 .LBE471
     /tmp/ccvcuV9K.s:6495   .debug_loc:0000000000000049 .LLST86
     /tmp/ccvcuV9K.s:1998   .text:0000000000000588 .LBB473
     /tmp/ccvcuV9K.s:2010   .text:0000000000000590 .LBE473
     /tmp/ccvcuV9K.s:6504   .debug_loc:000000000000006f .LLST87
     /tmp/ccvcuV9K.s:1979   .text:000000000000057c .LVL139
     /tmp/ccvcuV9K.s:64     .text:0000000000000028 .LFB55
     /tmp/ccvcuV9K.s:1916   .text:0000000000000528 .LFE55
     /tmp/ccvcuV9K.s:6512   .debug_loc:0000000000000093 .LLST1
     /tmp/ccvcuV9K.s:7259   .debug_str:0000000000000025 .LASF210
     /tmp/ccvcuV9K.s:6543   .debug_loc:0000000000000119 .LLST2
     /tmp/ccvcuV9K.s:7639   .debug_str:0000000000000cf7 .LASF211
     /tmp/ccvcuV9K.s:6594   .debug_loc:000000000000020d .LLST3
     /tmp/ccvcuV9K.s:125    .text:0000000000000074 .LBB184
     /tmp/ccvcuV9K.s:182    .text:00000000000000a0 .LBE184
     /tmp/ccvcuV9K.s:7673   .debug_str:0000000000000dcd .LASF212
     /tmp/ccvcuV9K.s:6605   .debug_loc:0000000000000243 .LLST4
     /tmp/ccvcuV9K.s:127    .text:0000000000000074 .LBB185
     /tmp/ccvcuV9K.s:143    .text:0000000000000080 .LBE185
     /tmp/ccvcuV9K.s:145    .text:0000000000000080 .LBB187
     /tmp/ccvcuV9K.s:158    .text:0000000000000088 .LBE187
     /tmp/ccvcuV9K.s:6618   .debug_loc:000000000000027b .LLST5
     /tmp/ccvcuV9K.s:167    .text:0000000000000098 .LBB189
     /tmp/ccvcuV9K.s:181    .text:00000000000000a0 .LBE189
     /tmp/ccvcuV9K.s:6627   .debug_loc:00000000000002a1 .LLST6
     /tmp/ccvcuV9K.s:649    .text:00000000000001a4 .LBB194
     /tmp/ccvcuV9K.s:794    .text:000000000000020c .LBE194
     /tmp/ccvcuV9K.s:6634   .debug_loc:00000000000002c4 .LLST7
     /tmp/ccvcuV9K.s:7383   .debug_str:000000000000040e .LASF213
     /tmp/ccvcuV9K.s:6641   .debug_loc:00000000000002e7 .LLST8
     /tmp/ccvcuV9K.s:6648   .debug_loc:000000000000030a .LLST9
     /tmp/ccvcuV9K.s:7641   .debug_str:0000000000000cfc .LASF214
     /tmp/ccvcuV9K.s:6655   .debug_loc:000000000000032d .LLST10
     /tmp/ccvcuV9K.s:7643   .debug_str:0000000000000d01 .LASF215
     /tmp/ccvcuV9K.s:6662   .debug_loc:0000000000000350 .LLST11
     /tmp/ccvcuV9K.s:7645   .debug_str:0000000000000d06 .LASF216
     /tmp/ccvcuV9K.s:6669   .debug_loc:0000000000000373 .LLST12
     /tmp/ccvcuV9K.s:6676   .debug_loc:0000000000000396 .LLST13
     /tmp/ccvcuV9K.s:6683   .debug_loc:00000000000003b9 .LLST14
     /tmp/ccvcuV9K.s:651    .text:00000000000001a4 .LBB195
     /tmp/ccvcuV9K.s:666    .text:00000000000001b0 .LBE195
     /tmp/ccvcuV9K.s:671    .text:00000000000001b4 .LBB197
     /tmp/ccvcuV9K.s:687    .text:00000000000001c0 .LBE197
     /tmp/ccvcuV9K.s:761    .text:00000000000001f8 .LBB199
GAS LISTING /tmp/ccvcuV9K.s 			page 71


     /tmp/ccvcuV9K.s:772    .text:00000000000001fc .LBE199
     /tmp/ccvcuV9K.s:6690   .debug_loc:00000000000003dc .LLST15
     /tmp/ccvcuV9K.s:774    .text:00000000000001fc .LBB201
     /tmp/ccvcuV9K.s:788    .text:0000000000000204 .LBE201
     /tmp/ccvcuV9K.s:6697   .debug_loc:00000000000003ff .LLST16
     /tmp/ccvcuV9K.s:741    .text:00000000000001e8 .LVL33
     /tmp/ccvcuV9K.s:797    .text:000000000000020c .LBB387
     /tmp/ccvcuV9K.s:893    .text:000000000000024c .LBE387
     /tmp/ccvcuV9K.s:6704   .debug_loc:0000000000000422 .LLST79
     /tmp/ccvcuV9K.s:6711   .debug_loc:0000000000000445 .LLST80
     /tmp/ccvcuV9K.s:6718   .debug_loc:0000000000000468 .LLST81
     /tmp/ccvcuV9K.s:799    .text:000000000000020c .LBB388
     /tmp/ccvcuV9K.s:815    .text:0000000000000218 .LBE388
     /tmp/ccvcuV9K.s:820    .text:000000000000021c .LBB390
     /tmp/ccvcuV9K.s:836    .text:0000000000000228 .LBE390
     /tmp/ccvcuV9K.s:865    .text:0000000000000240 .LBB392
     /tmp/ccvcuV9K.s:876    .text:0000000000000244 .LBE392
     /tmp/ccvcuV9K.s:6725   .debug_loc:000000000000048b .LLST82
     /tmp/ccvcuV9K.s:878    .text:0000000000000244 .LBB394
     /tmp/ccvcuV9K.s:892    .text:000000000000024c .LBE394
     /tmp/ccvcuV9K.s:6732   .debug_loc:00000000000004ae .LLST83
     /tmp/ccvcuV9K.s:855    .text:000000000000023c .LVL44
     /tmp/ccvcuV9K.s:895    .text:000000000000024c .LBB368
     /tmp/ccvcuV9K.s:989    .text:0000000000000288 .LBE368
     /tmp/ccvcuV9K.s:6739   .debug_loc:00000000000004d1 .LLST74
     /tmp/ccvcuV9K.s:6746   .debug_loc:00000000000004f4 .LLST75
     /tmp/ccvcuV9K.s:6753   .debug_loc:0000000000000517 .LLST76
     /tmp/ccvcuV9K.s:897    .text:000000000000024c .LBB369
     /tmp/ccvcuV9K.s:913    .text:0000000000000258 .LBE369
     /tmp/ccvcuV9K.s:918    .text:000000000000025c .LBB371
     /tmp/ccvcuV9K.s:934    .text:0000000000000268 .LBE371
     /tmp/ccvcuV9K.s:961    .text:000000000000027c .LBB373
     /tmp/ccvcuV9K.s:972    .text:0000000000000280 .LBE373
     /tmp/ccvcuV9K.s:6760   .debug_loc:000000000000053a .LLST77
     /tmp/ccvcuV9K.s:974    .text:0000000000000280 .LBB375
     /tmp/ccvcuV9K.s:988    .text:0000000000000288 .LBE375
     /tmp/ccvcuV9K.s:6767   .debug_loc:000000000000055d .LLST78
     /tmp/ccvcuV9K.s:951    .text:0000000000000278 .LVL52
     /tmp/ccvcuV9K.s:991    .text:0000000000000288 .LBB350
     /tmp/ccvcuV9K.s:1071   .text:00000000000002cc .LBE350
     /tmp/ccvcuV9K.s:6774   .debug_loc:0000000000000580 .LLST70
     /tmp/ccvcuV9K.s:6781   .debug_loc:00000000000005a3 .LLST71
     /tmp/ccvcuV9K.s:993    .text:0000000000000288 .LBB351
     /tmp/ccvcuV9K.s:1009   .text:0000000000000294 .LBE351
     /tmp/ccvcuV9K.s:1014   .text:0000000000000298 .LBB353
     /tmp/ccvcuV9K.s:1030   .text:00000000000002a4 .LBE353
     /tmp/ccvcuV9K.s:1043   .text:00000000000002c0 .LBB355
     /tmp/ccvcuV9K.s:1054   .text:00000000000002c4 .LBE355
     /tmp/ccvcuV9K.s:6788   .debug_loc:00000000000005c6 .LLST72
     /tmp/ccvcuV9K.s:1056   .text:00000000000002c4 .LBB357
     /tmp/ccvcuV9K.s:1070   .text:00000000000002cc .LBE357
     /tmp/ccvcuV9K.s:6795   .debug_loc:00000000000005e9 .LLST73
     /tmp/ccvcuV9K.s:1041   .text:00000000000002c0 .LVL59
     /tmp/ccvcuV9K.s:1073   .text:00000000000002cc .LBB333
     /tmp/ccvcuV9K.s:1146   .text:00000000000002fc .LBE333
     /tmp/ccvcuV9K.s:6802   .debug_loc:000000000000060c .LLST66
     /tmp/ccvcuV9K.s:6809   .debug_loc:000000000000062f .LLST67
GAS LISTING /tmp/ccvcuV9K.s 			page 72


     /tmp/ccvcuV9K.s:1075   .text:00000000000002cc .LBB334
     /tmp/ccvcuV9K.s:1091   .text:00000000000002d8 .LBE334
     /tmp/ccvcuV9K.s:1096   .text:00000000000002dc .LBB336
     /tmp/ccvcuV9K.s:1112   .text:00000000000002e8 .LBE336
     /tmp/ccvcuV9K.s:1118   .text:00000000000002f0 .LBB338
     /tmp/ccvcuV9K.s:1129   .text:00000000000002f4 .LBE338
     /tmp/ccvcuV9K.s:6816   .debug_loc:0000000000000652 .LLST68
     /tmp/ccvcuV9K.s:1131   .text:00000000000002f4 .LBB340
     /tmp/ccvcuV9K.s:1145   .text:00000000000002fc .LBE340
     /tmp/ccvcuV9K.s:6823   .debug_loc:0000000000000675 .LLST69
     /tmp/ccvcuV9K.s:1116   .text:00000000000002f0 .LVL65
     /tmp/ccvcuV9K.s:1148   .text:00000000000002fc .LBB317
     /tmp/ccvcuV9K.s:1225   .text:0000000000000338 .LBE317
     /tmp/ccvcuV9K.s:6830   .debug_loc:0000000000000698 .LLST62
     /tmp/ccvcuV9K.s:6837   .debug_loc:00000000000006bb .LLST63
     /tmp/ccvcuV9K.s:1150   .text:00000000000002fc .LBB318
     /tmp/ccvcuV9K.s:1166   .text:0000000000000308 .LBE318
     /tmp/ccvcuV9K.s:1171   .text:000000000000030c .LBB320
     /tmp/ccvcuV9K.s:1187   .text:0000000000000318 .LBE320
     /tmp/ccvcuV9K.s:1197   .text:000000000000032c .LBB322
     /tmp/ccvcuV9K.s:1208   .text:0000000000000330 .LBE322
     /tmp/ccvcuV9K.s:6844   .debug_loc:00000000000006de .LLST64
     /tmp/ccvcuV9K.s:1210   .text:0000000000000330 .LBB324
     /tmp/ccvcuV9K.s:1224   .text:0000000000000338 .LBE324
     /tmp/ccvcuV9K.s:6851   .debug_loc:0000000000000701 .LLST65
     /tmp/ccvcuV9K.s:1195   .text:000000000000032c .LVL71
     /tmp/ccvcuV9K.s:1227   .text:0000000000000338 .LBB296
     /tmp/ccvcuV9K.s:1378   .text:00000000000003a8 .LBE296
     /tmp/ccvcuV9K.s:6858   .debug_loc:0000000000000724 .LLST50
     /tmp/ccvcuV9K.s:6865   .debug_loc:0000000000000747 .LLST51
     /tmp/ccvcuV9K.s:6872   .debug_loc:000000000000076a .LLST52
     /tmp/ccvcuV9K.s:6879   .debug_loc:000000000000078d .LLST53
     /tmp/ccvcuV9K.s:6886   .debug_loc:00000000000007b0 .LLST54
     /tmp/ccvcuV9K.s:6893   .debug_loc:00000000000007d3 .LLST55
     /tmp/ccvcuV9K.s:1229   .text:0000000000000338 .LBB297
     /tmp/ccvcuV9K.s:1245   .text:0000000000000344 .LBE297
     /tmp/ccvcuV9K.s:1250   .text:0000000000000348 .LBB299
     /tmp/ccvcuV9K.s:1266   .text:0000000000000354 .LBE299
     /tmp/ccvcuV9K.s:1298   .text:0000000000000370 .LBB301
     /tmp/ccvcuV9K.s:1314   .text:000000000000037c .LBE301
     /tmp/ccvcuV9K.s:6910   .debug_loc:000000000000081e .LLST56
     /tmp/ccvcuV9K.s:6917   .debug_loc:0000000000000841 .LLST57
     /tmp/ccvcuV9K.s:1304   .text:0000000000000374 .LBB303
     /tmp/ccvcuV9K.s:1312   .text:000000000000037c .LBE303
     /tmp/ccvcuV9K.s:6924   .debug_loc:0000000000000864 .LLST58
     /tmp/ccvcuV9K.s:1316   .text:000000000000037c .LBB305
     /tmp/ccvcuV9K.s:1324   .text:0000000000000384 .LBE305
     /tmp/ccvcuV9K.s:6933   .debug_loc:0000000000000889 .LLST59
     /tmp/ccvcuV9K.s:1345   .text:0000000000000394 .LBB307
     /tmp/ccvcuV9K.s:1356   .text:0000000000000398 .LBE307
     /tmp/ccvcuV9K.s:6940   .debug_loc:00000000000008ac .LLST60
     /tmp/ccvcuV9K.s:1358   .text:0000000000000398 .LBB309
     /tmp/ccvcuV9K.s:1372   .text:00000000000003a0 .LBE309
     /tmp/ccvcuV9K.s:6947   .debug_loc:00000000000008cf .LLST61
     /tmp/ccvcuV9K.s:1297   .text:0000000000000370 .LVL79
     /tmp/ccvcuV9K.s:1380   .text:00000000000003a8 .LBB270
     /tmp/ccvcuV9K.s:1552   .text:0000000000000440 .LBE270
GAS LISTING /tmp/ccvcuV9K.s 			page 73


     /tmp/ccvcuV9K.s:6954   .debug_loc:00000000000008f2 .LLST37
     /tmp/ccvcuV9K.s:6961   .debug_loc:0000000000000915 .LLST38
     /tmp/ccvcuV9K.s:6968   .debug_loc:0000000000000938 .LLST39
     /tmp/ccvcuV9K.s:7239   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccvcuV9K.s:6975   .debug_loc:000000000000095b .LLST41
     /tmp/ccvcuV9K.s:1438   .text:00000000000003d0 .LBB276
     /tmp/ccvcuV9K.s:6982   .debug_loc:000000000000097e .LLST42
     /tmp/ccvcuV9K.s:6997   .debug_loc:00000000000009b8 .LLST43
     /tmp/ccvcuV9K.s:7008   .debug_loc:00000000000009ee .LLST44
     /tmp/ccvcuV9K.s:1445   .text:00000000000003dc .LVL94
     /tmp/ccvcuV9K.s:1449   .text:00000000000003dc .LBB279
     /tmp/ccvcuV9K.s:1458   .text:00000000000003e4 .LBE279
     /tmp/ccvcuV9K.s:7015   .debug_loc:0000000000000a11 .LLST45
     /tmp/ccvcuV9K.s:1469   .text:00000000000003fc .LVL96
     /tmp/ccvcuV9K.s:1382   .text:00000000000003a8 .LBB271
     /tmp/ccvcuV9K.s:1397   .text:00000000000003b4 .LBE271
     /tmp/ccvcuV9K.s:1402   .text:00000000000003b8 .LBB273
     /tmp/ccvcuV9K.s:1418   .text:00000000000003c4 .LBE273
     /tmp/ccvcuV9K.s:1474   .text:00000000000003fc .LBB282
     /tmp/ccvcuV9K.s:1484   .text:0000000000000408 .LBE282
     /tmp/ccvcuV9K.s:7022   .debug_loc:0000000000000a34 .LLST46
     /tmp/ccvcuV9K.s:1507   .text:0000000000000420 .LBB285
     /tmp/ccvcuV9K.s:1514   .text:0000000000000424 .LBE285
     /tmp/ccvcuV9K.s:7031   .debug_loc:0000000000000a59 .LLST47
     /tmp/ccvcuV9K.s:1524   .text:0000000000000434 .LBB287
     /tmp/ccvcuV9K.s:1535   .text:0000000000000438 .LBE287
     /tmp/ccvcuV9K.s:7038   .debug_loc:0000000000000a7c .LLST48
     /tmp/ccvcuV9K.s:1537   .text:0000000000000438 .LBB289
     /tmp/ccvcuV9K.s:1551   .text:0000000000000440 .LBE289
     /tmp/ccvcuV9K.s:7045   .debug_loc:0000000000000a9f .LLST49
     /tmp/ccvcuV9K.s:1521   .text:0000000000000434 .LVL101
     /tmp/ccvcuV9K.s:1554   .text:0000000000000440 .LBB255
     /tmp/ccvcuV9K.s:1668   .text:000000000000048c .LBE255
     /tmp/ccvcuV9K.s:7052   .debug_loc:0000000000000ac2 .LLST30
     /tmp/ccvcuV9K.s:7059   .debug_loc:0000000000000ae5 .LLST31
     /tmp/ccvcuV9K.s:7066   .debug_loc:0000000000000b08 .LLST32
     /tmp/ccvcuV9K.s:7077   .debug_loc:0000000000000b3e .LLST33
     /tmp/ccvcuV9K.s:1556   .text:0000000000000440 .LBB256
     /tmp/ccvcuV9K.s:1572   .text:000000000000044c .LBE256
     /tmp/ccvcuV9K.s:1577   .text:0000000000000450 .LBB258
     /tmp/ccvcuV9K.s:1593   .text:000000000000045c .LBE258
     /tmp/ccvcuV9K.s:1610   .text:0000000000000464 .LBB260
     /tmp/ccvcuV9K.s:1617   .text:0000000000000468 .LBE260
     /tmp/ccvcuV9K.s:7088   .debug_loc:0000000000000b74 .LLST34
     /tmp/ccvcuV9K.s:1633   .text:0000000000000474 .LBB262
     /tmp/ccvcuV9K.s:1644   .text:0000000000000478 .LBE262
     /tmp/ccvcuV9K.s:7095   .debug_loc:0000000000000b97 .LLST35
     /tmp/ccvcuV9K.s:1646   .text:0000000000000478 .LBB264
     /tmp/ccvcuV9K.s:1660   .text:0000000000000480 .LBE264
     /tmp/ccvcuV9K.s:7102   .debug_loc:0000000000000bba .LLST36
     /tmp/ccvcuV9K.s:1664   .text:0000000000000488 .LVL113
     /tmp/ccvcuV9K.s:1670   .text:000000000000048c .LBB241
     /tmp/ccvcuV9K.s:1787   .text:00000000000004dc .LBE241
     /tmp/ccvcuV9K.s:7109   .debug_loc:0000000000000bdd .LLST23
     /tmp/ccvcuV9K.s:7116   .debug_loc:0000000000000c00 .LLST24
     /tmp/ccvcuV9K.s:7123   .debug_loc:0000000000000c23 .LLST25
     /tmp/ccvcuV9K.s:7134   .debug_loc:0000000000000c59 .LLST26
GAS LISTING /tmp/ccvcuV9K.s 			page 74


     /tmp/ccvcuV9K.s:1672   .text:000000000000048c .LBB242
     /tmp/ccvcuV9K.s:1688   .text:0000000000000498 .LBE242
     /tmp/ccvcuV9K.s:1693   .text:000000000000049c .LBB244
     /tmp/ccvcuV9K.s:1709   .text:00000000000004a8 .LBE244
     /tmp/ccvcuV9K.s:1726   .text:00000000000004b0 .LBB246
     /tmp/ccvcuV9K.s:1733   .text:00000000000004b4 .LBE246
     /tmp/ccvcuV9K.s:7146   .debug_loc:0000000000000c90 .LLST27
     /tmp/ccvcuV9K.s:1749   .text:00000000000004c0 .LBB248
     /tmp/ccvcuV9K.s:1760   .text:00000000000004c4 .LBE248
     /tmp/ccvcuV9K.s:7153   .debug_loc:0000000000000cb3 .LLST28
     /tmp/ccvcuV9K.s:1762   .text:00000000000004c4 .LBB250
     /tmp/ccvcuV9K.s:1776   .text:00000000000004cc .LBE250
     /tmp/ccvcuV9K.s:7160   .debug_loc:0000000000000cd6 .LLST29
     /tmp/ccvcuV9K.s:1780   .text:00000000000004d4 .LVL124
     /tmp/ccvcuV9K.s:1789   .text:00000000000004dc .LBB227
     /tmp/ccvcuV9K.s:1900   .text:0000000000000528 .LBE227
     /tmp/ccvcuV9K.s:1791   .text:00000000000004dc .LBB228
     /tmp/ccvcuV9K.s:1807   .text:00000000000004e8 .LBE228
     /tmp/ccvcuV9K.s:1812   .text:00000000000004ec .LBB230
     /tmp/ccvcuV9K.s:1828   .text:00000000000004f8 .LBE230
     /tmp/ccvcuV9K.s:1833   .text:0000000000000500 .LBB232
     /tmp/ccvcuV9K.s:1844   .text:0000000000000504 .LBE232
     /tmp/ccvcuV9K.s:1853   .text:0000000000000514 .LBB234
     /tmp/ccvcuV9K.s:1864   .text:0000000000000518 .LBE234
     /tmp/ccvcuV9K.s:1874   .text:000000000000051c .LBB236
     /tmp/ccvcuV9K.s:1885   .text:0000000000000520 .LBE236
     /tmp/ccvcuV9K.s:7167   .debug_loc:0000000000000cf9 .LLST22
     /tmp/ccvcuV9K.s:1887   .text:0000000000000520 .LBB238
     /tmp/ccvcuV9K.s:1899   .text:0000000000000528 .LBE238
     /tmp/ccvcuV9K.s:1848   .text:000000000000050c .LVL131
     /tmp/ccvcuV9K.s:500    .text:0000000000000144 .LBB214
     /tmp/ccvcuV9K.s:617    .text:0000000000000194 .LBE214
     /tmp/ccvcuV9K.s:7174   .debug_loc:0000000000000d1c .LLST17
     /tmp/ccvcuV9K.s:7181   .debug_loc:0000000000000d3f .LLST18
     /tmp/ccvcuV9K.s:7188   .debug_loc:0000000000000d62 .LLST19
     /tmp/ccvcuV9K.s:502    .text:0000000000000144 .LBB215
     /tmp/ccvcuV9K.s:518    .text:0000000000000150 .LBE215
     /tmp/ccvcuV9K.s:523    .text:0000000000000154 .LBB217
     /tmp/ccvcuV9K.s:539    .text:0000000000000160 .LBE217
     /tmp/ccvcuV9K.s:559    .text:0000000000000174 .LBB219
     /tmp/ccvcuV9K.s:570    .text:0000000000000178 .LBE219
     /tmp/ccvcuV9K.s:579    .text:0000000000000188 .LBB221
     /tmp/ccvcuV9K.s:590    .text:000000000000018c .LBE221
     /tmp/ccvcuV9K.s:592    .text:000000000000018c .LBB223
     /tmp/ccvcuV9K.s:603    .text:0000000000000190 .LBE223
     /tmp/ccvcuV9K.s:7195   .debug_loc:0000000000000d85 .LLST20
     /tmp/ccvcuV9K.s:605    .text:0000000000000190 .LBB225
     /tmp/ccvcuV9K.s:616    .text:0000000000000194 .LBE225
     /tmp/ccvcuV9K.s:7202   .debug_loc:0000000000000da8 .LLST21
     /tmp/ccvcuV9K.s:574    .text:0000000000000180 .LVL19
     /tmp/ccvcuV9K.s:84     .text:0000000000000048 .LBB180
     /tmp/ccvcuV9K.s:100    .text:0000000000000054 .LBE180
     /tmp/ccvcuV9K.s:185    .text:00000000000000a0 .LBB436
     /tmp/ccvcuV9K.s:198    .text:00000000000000a8 .LBE436
     /tmp/ccvcuV9K.s:7209   .debug_loc:0000000000000dcb .LLST84
     /tmp/ccvcuV9K.s:643    .text:00000000000001a0 .LVL25
     /tmp/ccvcuV9K.s:10     .text:0000000000000000 .LFB54
GAS LISTING /tmp/ccvcuV9K.s 			page 75


     /tmp/ccvcuV9K.s:58     .text:0000000000000028 .LFE54
     /tmp/ccvcuV9K.s:29     .text:0000000000000010 .LBB178
     /tmp/ccvcuV9K.s:42     .text:0000000000000018 .LBE178
     /tmp/ccvcuV9K.s:7217   .debug_loc:0000000000000def .LLST0
     /tmp/ccvcuV9K.s:7281   .debug_str:000000000000009c .LASF219
     /tmp/ccvcuV9K.s:7517   .debug_str:000000000000089c .LASF218
     /tmp/ccvcuV9K.s:7661   .debug_str:0000000000000d8c .LASF220
     /tmp/ccvcuV9K.s:7453   .debug_str:0000000000000675 .LASF221
     /tmp/ccvcuV9K.s:7371   .debug_str:000000000000038c .LASF222
     /tmp/ccvcuV9K.s:7393   .debug_str:000000000000044b .LASF223
     /tmp/ccvcuV9K.s:7319   .debug_str:00000000000001c4 .LASF224
     /tmp/ccvcuV9K.s:1948   .text:0000000000000544 .LVL136
     /tmp/ccvcuV9K.s:1961   .text:0000000000000564 .LVL137
     /tmp/ccvcuV9K.s:1973   .text:0000000000000574 .LVL138
     /tmp/ccvcuV9K.s:1993   .text:0000000000000588 .LVL140
     /tmp/ccvcuV9K.s:2007   .text:0000000000000590 .LVL141
     /tmp/ccvcuV9K.s:98     .text:0000000000000054 .LVL2
     /tmp/ccvcuV9K.s:150    .text:0000000000000084 .LVL5
     /tmp/ccvcuV9K.s:178    .text:00000000000000a0 .LVL8
     /tmp/ccvcuV9K.s:194    .text:00000000000000a8 .LVL9
     /tmp/ccvcuV9K.s:218    .text:00000000000000c8 .LVL10
     /tmp/ccvcuV9K.s:239    .text:00000000000000dc .LVL11
     /tmp/ccvcuV9K.s:255    .text:00000000000000ec .LVL12
     /tmp/ccvcuV9K.s:635    .text:0000000000000198 .LVL24
     /tmp/ccvcuV9K.s:645    .text:00000000000001a4 .LVL26
     /tmp/ccvcuV9K.s:109    .text:0000000000000058 .LVL3
     /tmp/ccvcuV9K.s:516    .text:0000000000000150 .LVL13
     /tmp/ccvcuV9K.s:813    .text:0000000000000218 .LVL39
     /tmp/ccvcuV9K.s:889    .text:000000000000024c .LVL47
     /tmp/ccvcuV9K.s:911    .text:0000000000000258 .LVL48
     /tmp/ccvcuV9K.s:985    .text:0000000000000288 .LVL55
     /tmp/ccvcuV9K.s:1007   .text:0000000000000294 .LVL56
     /tmp/ccvcuV9K.s:1067   .text:00000000000002cc .LVL61
     /tmp/ccvcuV9K.s:1089   .text:00000000000002d8 .LVL62
     /tmp/ccvcuV9K.s:1142   .text:00000000000002fc .LVL67
     /tmp/ccvcuV9K.s:1164   .text:0000000000000308 .LVL68
     /tmp/ccvcuV9K.s:1221   .text:0000000000000338 .LVL73
     /tmp/ccvcuV9K.s:1243   .text:0000000000000344 .LVL74
     /tmp/ccvcuV9K.s:1376   .text:00000000000003a8 .LVL88
     /tmp/ccvcuV9K.s:1431   .text:00000000000003cc .LVL91
     /tmp/ccvcuV9K.s:1548   .text:0000000000000440 .LVL103
     /tmp/ccvcuV9K.s:1570   .text:000000000000044c .LVL104
     /tmp/ccvcuV9K.s:1666   .text:000000000000048c .LVL114
     /tmp/ccvcuV9K.s:1686   .text:0000000000000498 .LVL115
     /tmp/ccvcuV9K.s:1785   .text:00000000000004dc .LVL125
     /tmp/ccvcuV9K.s:1805   .text:00000000000004e8 .LVL126
     /tmp/ccvcuV9K.s:848    .text:0000000000000230 .LVL42
     /tmp/ccvcuV9K.s:853    .text:0000000000000234 .LVL43
     /tmp/ccvcuV9K.s:946    .text:0000000000000270 .LVL51
     /tmp/ccvcuV9K.s:141    .text:0000000000000080 .LVL4
     /tmp/ccvcuV9K.s:166    .text:0000000000000098 .LVL7
     /tmp/ccvcuV9K.s:155    .text:0000000000000088 .LVL6
     /tmp/ccvcuV9K.s:669    .text:00000000000001b4 .LVL27
     /tmp/ccvcuV9K.s:792    .text:000000000000020c .LVL38
     /tmp/ccvcuV9K.s:685    .text:00000000000001c0 .LVL28
     /tmp/ccvcuV9K.s:718    .text:00000000000001d4 .LVL29
     /tmp/ccvcuV9K.s:724    .text:00000000000001d8 .LVL30
GAS LISTING /tmp/ccvcuV9K.s 			page 76


     /tmp/ccvcuV9K.s:730    .text:00000000000001dc .LVL31
     /tmp/ccvcuV9K.s:736    .text:00000000000001e0 .LVL32
     /tmp/ccvcuV9K.s:751    .text:00000000000001f4 .LVL34
     /tmp/ccvcuV9K.s:785    .text:0000000000000204 .LVL37
     /tmp/ccvcuV9K.s:759    .text:00000000000001f8 .LVL35
     /tmp/ccvcuV9K.s:769    .text:00000000000001fc .LVL36
     /tmp/ccvcuV9K.s:818    .text:000000000000021c .LVL40
     /tmp/ccvcuV9K.s:834    .text:0000000000000228 .LVL41
     /tmp/ccvcuV9K.s:863    .text:0000000000000240 .LVL45
     /tmp/ccvcuV9K.s:873    .text:0000000000000244 .LVL46
     /tmp/ccvcuV9K.s:916    .text:000000000000025c .LVL49
     /tmp/ccvcuV9K.s:932    .text:0000000000000268 .LVL50
     /tmp/ccvcuV9K.s:959    .text:000000000000027c .LVL53
     /tmp/ccvcuV9K.s:969    .text:0000000000000280 .LVL54
     /tmp/ccvcuV9K.s:1012   .text:0000000000000298 .LVL57
     /tmp/ccvcuV9K.s:1028   .text:00000000000002a4 .LVL58
     /tmp/ccvcuV9K.s:1051   .text:00000000000002c4 .LVL60
     /tmp/ccvcuV9K.s:1094   .text:00000000000002dc .LVL63
     /tmp/ccvcuV9K.s:1110   .text:00000000000002e8 .LVL64
     /tmp/ccvcuV9K.s:1126   .text:00000000000002f4 .LVL66
     /tmp/ccvcuV9K.s:1169   .text:000000000000030c .LVL69
     /tmp/ccvcuV9K.s:1185   .text:0000000000000318 .LVL70
     /tmp/ccvcuV9K.s:1205   .text:0000000000000330 .LVL72
     /tmp/ccvcuV9K.s:1248   .text:0000000000000348 .LVL75
     /tmp/ccvcuV9K.s:1264   .text:0000000000000354 .LVL76
     /tmp/ccvcuV9K.s:1285   .text:0000000000000360 .LVL77
     /tmp/ccvcuV9K.s:1291   .text:0000000000000364 .LVL78
     /tmp/ccvcuV9K.s:1310   .text:000000000000037c .LVL81
     /tmp/ccvcuV9K.s:1329   .text:0000000000000388 .LVL83
     /tmp/ccvcuV9K.s:1335   .text:0000000000000390 .LVL84
     /tmp/ccvcuV9K.s:1369   .text:00000000000003a0 .LVL87
     /tmp/ccvcuV9K.s:1303   .text:0000000000000374 .LVL80
     /tmp/ccvcuV9K.s:1322   .text:0000000000000384 .LVL82
     /tmp/ccvcuV9K.s:1343   .text:0000000000000394 .LVL85
     /tmp/ccvcuV9K.s:1353   .text:0000000000000398 .LVL86
     /tmp/ccvcuV9K.s:1400   .text:00000000000003b8 .LVL89
     /tmp/ccvcuV9K.s:1416   .text:00000000000003c4 .LVL90
     /tmp/ccvcuV9K.s:1435   .text:00000000000003d0 .LVL92
     /tmp/ccvcuV9K.s:1489   .text:000000000000040c .LVL98
     /tmp/ccvcuV9K.s:1501   .text:0000000000000420 .LVL99
     /tmp/ccvcuV9K.s:1442   .text:00000000000003d4 .LVL93
     /tmp/ccvcuV9K.s:1456   .text:00000000000003e4 .LVL95
     /tmp/ccvcuV9K.s:1482   .text:0000000000000408 .LVL97
     /tmp/ccvcuV9K.s:1512   .text:0000000000000424 .LVL100
     /tmp/ccvcuV9K.s:1532   .text:0000000000000438 .LVL102
     /tmp/ccvcuV9K.s:1575   .text:0000000000000450 .LVL105
     /tmp/ccvcuV9K.s:1591   .text:000000000000045c .LVL106
     /tmp/ccvcuV9K.s:1606   .text:0000000000000464 .LVL107
     /tmp/ccvcuV9K.s:1622   .text:0000000000000470 .LVL109
     /tmp/ccvcuV9K.s:1657   .text:0000000000000480 .LVL112
     /tmp/ccvcuV9K.s:1615   .text:0000000000000468 .LVL108
     /tmp/ccvcuV9K.s:1631   .text:0000000000000474 .LVL110
     /tmp/ccvcuV9K.s:1641   .text:0000000000000478 .LVL111
     /tmp/ccvcuV9K.s:1691   .text:000000000000049c .LVL116
     /tmp/ccvcuV9K.s:1707   .text:00000000000004a8 .LVL117
     /tmp/ccvcuV9K.s:1722   .text:00000000000004b0 .LVL118
     /tmp/ccvcuV9K.s:1738   .text:00000000000004bc .LVL120
GAS LISTING /tmp/ccvcuV9K.s 			page 77


     /tmp/ccvcuV9K.s:1773   .text:00000000000004cc .LVL123
     /tmp/ccvcuV9K.s:1731   .text:00000000000004b4 .LVL119
     /tmp/ccvcuV9K.s:1747   .text:00000000000004c0 .LVL121
     /tmp/ccvcuV9K.s:1757   .text:00000000000004c4 .LVL122
     /tmp/ccvcuV9K.s:1872   .text:000000000000051c .LVL134
     /tmp/ccvcuV9K.s:1882   .text:0000000000000520 .LVL135
     /tmp/ccvcuV9K.s:521    .text:0000000000000154 .LVL14
     /tmp/ccvcuV9K.s:537    .text:0000000000000160 .LVL15
     /tmp/ccvcuV9K.s:554    .text:000000000000016c .LVL16
     /tmp/ccvcuV9K.s:587    .text:000000000000018c .LVL21
     /tmp/ccvcuV9K.s:600    .text:0000000000000190 .LVL22
     /tmp/ccvcuV9K.s:613    .text:0000000000000194 .LVL23
     /tmp/ccvcuV9K.s:27     .text:0000000000000010 .LVL0
     /tmp/ccvcuV9K.s:39     .text:0000000000000018 .LVL1
     /tmp/ccvcuV9K.s:2031   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccvcuV9K.s:1437   .text:00000000000003d0 .LBB275
     /tmp/ccvcuV9K.s:1471   .text:00000000000003fc .LBE275
     /tmp/ccvcuV9K.s:1487   .text:000000000000040c .LBB284
     /tmp/ccvcuV9K.s:1505   .text:0000000000000420 .LBE284
     /tmp/ccvcuV9K.s:1447   .text:00000000000003dc .LBE276
     /tmp/ccvcuV9K.s:1490   .text:000000000000040c .LBB281
     /tmp/ccvcuV9K.s:1504   .text:0000000000000420 .LBE281

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
