GAS LISTING /tmp/cc3y761g.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/cc3y761g.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** bool Riscv::privilege=false;
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 22 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  23:src/Riscv.cpp ****     uint64 scause = r_scause();
  65              		.loc 1 23 5
  66              	.LBB176:
  67              	.LBB177:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/Riscv.hpp ****     static void popSppSpie();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     // read register scause
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     // write register scause
  24:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     // read register sepc
GAS LISTING /tmp/cc3y761g.s 			page 3


  27:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     // write register sepc
  30:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     // read register stvec
  33:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     // write register stvec
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     // read register stval
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     // write register stval
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     // mask set register sip
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     // mask clear register sip
  55:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     // read register sip
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     // write register sip
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // mask set register sstatus
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // mask clear register sstatus
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     // read register sstatus
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     // write register sstatus
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     // supervisor trap
  83:src/../h/Riscv.hpp ****     static void supervisorTrap();
GAS LISTING /tmp/cc3y761g.s 			page 4


  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void TrapConsole();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void initKernel();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     // supervisor trap handler
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** //    static void syscallHandler();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 103 5
  71              		.loc 2 103 72 is_stmt 0
  72              	#APP
  73              	# 103 "src/../h/Riscv.hpp" 1
 104              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2330F4F0 		sd	a5,-256(s0)
  78              		.loc 2 104 5 is_stmt 1
  79              		.loc 2 104 12 is_stmt 0
  80 0048 033704F0 		ld	a4,-256(s0)
  81              	.LVL0:
  82              	.LBE177:
  83              	.LBE176:
  24:src/Riscv.cpp ****     uint64 a0reg;
  84              		.loc 1 24 5 is_stmt 1
  25:src/Riscv.cpp ****     uint64 arg1;
  85              		.loc 1 25 5
  26:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  86              		.loc 1 26 5
  87              		.loc 1 26 49 is_stmt 0
  88              	#APP
  89              	# 26 "src/Riscv.cpp" 1
  27              	
  90              		mv s1, a0
  91              	# 0 "" 2
  92              	.LVL1:
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  93              		.loc 1 30 5 is_stmt 1
  94              	#NO_APP
  95              	.LBB178:
  96 0050 9307F0FF 		li	a5,-1
  97 0054 9397F703 		slli	a5,a5,63
GAS LISTING /tmp/cc3y761g.s 			page 5


  98 0058 93871700 		addi	a5,a5,1
  99 005c 630EF702 		beq	a4,a5,.L32
 100              	.LBE178:
  31:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  32:src/Riscv.cpp ****     }
  33:src/Riscv.cpp **** //    else if(scause == 0x0000000000000009UL){
  34:src/Riscv.cpp **** //        uint64 sepc = r_sepc();
  35:src/Riscv.cpp **** //        mc_sstatus(SSTATUS_SPP);
  36:src/Riscv.cpp **** //
  37:src/Riscv.cpp **** //        w_sepc(sepc + 4);
  38:src/Riscv.cpp **** //
  39:src/Riscv.cpp **** //
  40:src/Riscv.cpp **** //    }
  41:src/Riscv.cpp ****     else if(privilege==false){
 101              		.loc 1 41 10
 102              	.LBB449:
 103              	.LBB179:
 104              		.loc 1 41 22 is_stmt 0
 105 0060 97070000 		lbu	a5,.LANCHOR0
 105      83C70700 
 106              		.loc 1 41 10
 107 0068 639C0704 		bnez	a5,.L6
 108              	.LBB180:
  42:src/Riscv.cpp ****         uint64 sepc = r_sepc();
 109              		.loc 1 42 9 is_stmt 1
 110              	.LBB181:
 111              	.LBB182:
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/Riscv.hpp **** {
 109:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/Riscv.hpp **** {
 114:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 112              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 113              		.loc 2 115 5
 114              		.loc 2 115 64 is_stmt 0
 115              	#APP
 116              	# 115 "src/../h/Riscv.hpp" 1
 116              	    return sepc;
 117              		csrr a5, sepc
 118              	# 0 "" 2
 119              	#NO_APP
 120 0070 2334F4F0 		sd	a5,-248(s0)
 121              		.loc 2 116 5 is_stmt 1
 122              		.loc 2 116 12 is_stmt 0
 123 0074 833784F0 		ld	a5,-248(s0)
 124              	.LVL2:
 125              	.LBE182:
 126              	.LBE181:
  43:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 127              		.loc 1 43 9 is_stmt 1
 128              	.LBB183:
GAS LISTING /tmp/cc3y761g.s 			page 6


 129              	.LBB184:
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/Riscv.hpp **** {
 121:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/Riscv.hpp **** {
 133:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/Riscv.hpp **** {
 138:src/../h/Riscv.hpp ****     uint64 volatile stval;
 139:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/Riscv.hpp ****     return stval;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/Riscv.hpp **** {
 155:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sip;
 161:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/Riscv.hpp ****     return sip;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** //mask set
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 172:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/cc3y761g.s 			page 7


 173:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** //mask clear
 177:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 178:src/../h/Riscv.hpp **** {
 179:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 130              		.loc 2 179 5
 131              		.loc 2 179 68 is_stmt 0
 132 0078 13070010 		li	a4,256
 133              	.LVL3:
 134              	#APP
 135              	# 179 "src/../h/Riscv.hpp" 1
 180              	}
 136              		csrc sstatus, a4
 137              	# 0 "" 2
 138              	.LVL4:
 139              	#NO_APP
 140              	.LBE184:
 141              	.LBE183:
  44:src/Riscv.cpp ****         privilege=true;
 142              		.loc 1 44 9 is_stmt 1
 143              		.loc 1 44 18 is_stmt 0
 144 0080 13071000 		li	a4,1
 145 0084 97060000 		sb	a4,.LANCHOR0,a3
 145      2380E600 
  45:src/Riscv.cpp ****         w_sepc(sepc + 4);
 146              		.loc 1 45 9 is_stmt 1
 147              		.loc 1 45 15 is_stmt 0
 148 008c 93874700 		addi	a5,a5,4
 149              	.LVL5:
 150              	.LBB185:
 151              	.LBB186:
 121:src/../h/Riscv.hpp **** }
 152              		.loc 2 121 5 is_stmt 1
 121:src/../h/Riscv.hpp **** }
 153              		.loc 2 121 65 is_stmt 0
 154              	#APP
 155              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 156              		csrw sepc, a5
 157              	# 0 "" 2
 158              		.loc 2 122 1
 159              	#NO_APP
 160 0094 6F00C000 		j	.L3
 161              	.LVL6:
 162              	.L32:
 163              	.LBE186:
 164              	.LBE185:
 165              	.LBE180:
 166              	.LBE179:
  31:src/Riscv.cpp ****     }
 167              		.loc 1 31 9 is_stmt 1
 168              	.LBB432:
 169              	.LBB433:
 155:src/../h/Riscv.hpp **** }
 170              		.loc 2 155 5
GAS LISTING /tmp/cc3y761g.s 			page 8


 155:src/../h/Riscv.hpp **** }
 171              		.loc 2 155 64 is_stmt 0
 172 0098 93072000 		li	a5,2
 173              	#APP
 174              	# 155 "src/../h/Riscv.hpp" 1
 175              		csrc sip, a5
 176              	# 0 "" 2
 177              	.LVL7:
 178              	#NO_APP
 179              	.L3:
 180              	.LBE433:
 181              	.LBE432:
 182              	.LBE449:
  46:src/Riscv.cpp ****     }
  47:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
  48:src/Riscv.cpp ****         console_handler();
  49:src/Riscv.cpp ****     }
  50:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  51:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****         //call from yield
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****         if(a0reg==0x11){
  56:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  57:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  58:src/Riscv.cpp **** 
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp ****             _thread::thread_t *arg1;
  61:src/Riscv.cpp ****             _thread::Body arg2;
  62:src/Riscv.cpp ****             uint64 arg3;
  63:src/Riscv.cpp ****             uint64 *arg4;
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  66:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  67:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  68:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  69:src/Riscv.cpp **** 
  70:src/Riscv.cpp **** 
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  73:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  74:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  75:src/Riscv.cpp **** 
  76:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  77:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  78:src/Riscv.cpp ****             *arg1=t;
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp ****             uint64 ret;
  81:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  82:src/Riscv.cpp ****             else ret =-1;
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****             //return _thread* adress through a0
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             w_sstatus(sstatus);
  89:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/cc3y761g.s 			page 9


  90:src/Riscv.cpp ****         }
  91:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  92:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  94:src/Riscv.cpp ****             //kmem_alloc
  95:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  98:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             //write return value to a0 register
 101:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****             w_sstatus(sstatus);
 104:src/Riscv.cpp ****             w_sepc(sepc);
 105:src/Riscv.cpp ****         }
 106:src/Riscv.cpp ****         else if(a0reg==0x02){
 107:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 108:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 113:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 114:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             w_sstatus(sstatus);
 117:src/Riscv.cpp ****             w_sepc(sepc);
 118:src/Riscv.cpp ****         }
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****         else if(a0reg==0x12){
 121:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 122:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             _thread::running->finished=true;
 125:src/Riscv.cpp ****             _thread::dispatch();
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             w_sstatus(sstatus);
 128:src/Riscv.cpp ****             w_sepc(sepc);
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****         }
 132:src/Riscv.cpp ****         else if(a0reg == 0x13){
 133:src/Riscv.cpp ****             //thread dispatch
 134:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 135:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             _thread::dispatch();
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             w_sstatus(sstatus);
 141:src/Riscv.cpp ****             w_sepc(sepc);
 142:src/Riscv.cpp ****         }
 143:src/Riscv.cpp **** 
 144:src/Riscv.cpp ****         else if(a0reg==0x04){
 145:src/Riscv.cpp ****             //call from yield
 146:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
GAS LISTING /tmp/cc3y761g.s 			page 10


 147:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 150:src/Riscv.cpp ****             _thread::dispatch();
 151:src/Riscv.cpp **** 
 152:src/Riscv.cpp ****             w_sstatus(sstatus);
 153:src/Riscv.cpp ****             w_sepc(sepc);
 154:src/Riscv.cpp ****         }
 155:src/Riscv.cpp ****         else if(a0reg==0x21){
 156:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 157:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 160:src/Riscv.cpp ****            uint64 arg2;
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 163:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 164:src/Riscv.cpp **** 
 165:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 166:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 167:src/Riscv.cpp **** 
 168:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 169:src/Riscv.cpp ****             sem->open();
 170:src/Riscv.cpp ****             *arg1=sem;
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             uint64 ret=0;
 173:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 174:src/Riscv.cpp ****             else ret=-1;
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****             w_sstatus(sstatus);
 179:src/Riscv.cpp ****             w_sepc(sepc);
 180:src/Riscv.cpp ****         }
 181:src/Riscv.cpp ****         else if(a0reg==0x22){
 182:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 183:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 193:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 194:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 195:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 196:src/Riscv.cpp ****                 t->setDeblocked();
 197:src/Riscv.cpp ****                 sem->val++;
 198:src/Riscv.cpp ****                 Scheduler::put(t);
 199:src/Riscv.cpp ****             }
 200:src/Riscv.cpp ****              sem->close();
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             delete sem;
 203:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3y761g.s 			page 11


 204:src/Riscv.cpp ****             w_sstatus(sstatus);
 205:src/Riscv.cpp ****             w_sepc(sepc);
 206:src/Riscv.cpp ****         }
 207:src/Riscv.cpp ****         else if(a0reg==0x23){
 208:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 209:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 214:src/Riscv.cpp **** 
 215:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp ****             uint64 ret;
 218:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 219:src/Riscv.cpp ****             if(arg1->isOpened()) {
 220:src/Riscv.cpp ****                  ret = arg1->wait();
 221:src/Riscv.cpp ****             }
 222:src/Riscv.cpp ****             else{
 223:src/Riscv.cpp ****                 ret=-1;
 224:src/Riscv.cpp ****             }
 225:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****             w_sstatus(sstatus);
 228:src/Riscv.cpp ****             w_sepc(sepc);
 229:src/Riscv.cpp ****         }
 230:src/Riscv.cpp ****         else if(a0reg==0x24){
 231:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 232:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             uint64 ret;
 241:src/Riscv.cpp ****             if(arg1->isOpened()) {
 242:src/Riscv.cpp ****                 arg1->signal();
 243:src/Riscv.cpp ****                 ret=0;
 244:src/Riscv.cpp ****             }
 245:src/Riscv.cpp ****             else{
 246:src/Riscv.cpp ****                 ret = -1;
 247:src/Riscv.cpp ****             }
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 250:src/Riscv.cpp **** 
 251:src/Riscv.cpp ****             w_sstatus(sstatus);
 252:src/Riscv.cpp ****             w_sepc(sepc);
 253:src/Riscv.cpp ****         }
 254:src/Riscv.cpp ****         else if(a0reg==0x41){
 255:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 256:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 257:src/Riscv.cpp **** 
 258:src/Riscv.cpp ****             //call method from kernel Console class
 259:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 260:src/Riscv.cpp ****             char c = __getc();
GAS LISTING /tmp/cc3y761g.s 			page 12


 261:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp **** 
 266:src/Riscv.cpp ****             w_sstatus(sstatus);
 267:src/Riscv.cpp ****             w_sepc(sepc);
 268:src/Riscv.cpp ****         }
 269:src/Riscv.cpp ****         else if(a0reg==0x42){
 270:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 271:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****             char c;
 274:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 275:src/Riscv.cpp **** 
 276:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 277:src/Riscv.cpp **** 
 278:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 279:src/Riscv.cpp ****             __putc(c);
 280:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp ****             w_sstatus(sstatus);
 283:src/Riscv.cpp ****             w_sepc(sepc);
 284:src/Riscv.cpp ****         }
 285:src/Riscv.cpp ****         else{
 286:src/Riscv.cpp ****             // unexpected trap cause
 287:src/Riscv.cpp ****         }
 288:src/Riscv.cpp **** 
 289:src/Riscv.cpp ****     }
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp **** }
 183              		.loc 1 291 1
 184 00a0 8330810F 		ld	ra,248(sp)
 185              		.cfi_remember_state
 186              		.cfi_restore 1
 187 00a4 0334010F 		ld	s0,240(sp)
 188              		.cfi_restore 8
 189              		.cfi_def_cfa 2, 256
 190 00a8 8334810E 		ld	s1,232(sp)
 191              		.cfi_restore 9
 192 00ac 0339010E 		ld	s2,224(sp)
 193              		.cfi_restore 18
 194 00b0 8339810D 		ld	s3,216(sp)
 195              		.cfi_restore 19
 196 00b4 033A010D 		ld	s4,208(sp)
 197              		.cfi_restore 20
 198 00b8 13010110 		addi	sp,sp,256
 199              		.cfi_def_cfa_offset 0
 200 00bc 67800000 		jr	ra
 201              	.LVL8:
 202              	.L6:
 203              		.cfi_restore_state
  47:src/Riscv.cpp ****         console_handler();
 204              		.loc 1 47 10 is_stmt 1
 205              	.LBB450:
 206              	.LBB434:
 207              	.LBB187:
GAS LISTING /tmp/cc3y761g.s 			page 13


 208 00c0 9307F0FF 		li	a5,-1
 209 00c4 9397F703 		slli	a5,a5,63
 210 00c8 93879700 		addi	a5,a5,9
 211 00cc 6302F70C 		beq	a4,a5,.L33
 212              	.LBE187:
 213              	.LBE434:
 214              	.LBE450:
  50:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 215              		.loc 1 50 10
 216              	.LBB451:
 217              	.LBB435:
 218              	.LBB418:
 219              	.LBB188:
  50:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 220              		.loc 1 50 45 is_stmt 0
 221 00d0 130787FF 		addi	a4,a4,-8
 222              	.LVL9:
  50:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 223              		.loc 1 50 10
 224 00d4 93071000 		li	a5,1
 225 00d8 E3E4E7FC 		bgtu	a4,a5,.L3
 226              	.LBE188:
 227              	.LBE418:
 228              	.LBE435:
 229              	.LBE451:
  55:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 230              		.loc 1 55 9 is_stmt 1
 231              	.LBB452:
 232              	.LBB436:
 233              	.LBB419:
 234              	.LBB405:
 235              	.LBB189:
 236 00dc 93071001 		li	a5,17
 237 00e0 638EF40A 		beq	s1,a5,.L34
 238              	.LVL10:
 239              	.L8:
 240              	.LBE189:
 241              	.LBE405:
 242              	.LBE419:
 243              	.LBE436:
 244              	.LBE452:
  91:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 245              		.loc 1 91 9
 246              	.LBB453:
 247              	.LBB437:
 248              	.LBB420:
 249              	.LBB406:
 250              	.LBB199:
 251 00e4 93071000 		li	a5,1
 252 00e8 638EF410 		beq	s1,a5,.L35
 253              	.LBE199:
 254              	.LBE406:
 255              	.LBE420:
 256              	.LBE437:
 257              	.LBE453:
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 258              		.loc 1 106 14
GAS LISTING /tmp/cc3y761g.s 			page 14


 259              	.LBB454:
 260              	.LBB438:
 261              	.LBB421:
 262              	.LBB407:
 263              	.LBB393:
 264              	.LBB200:
 265 00ec 93072000 		li	a5,2
 266 00f0 638AF414 		beq	s1,a5,.L36
 267              	.LBE200:
 268              	.LBE393:
 269              	.LBE407:
 270              	.LBE421:
 271              	.LBE438:
 272              	.LBE454:
 120:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 273              		.loc 1 120 14
 274              	.LBB455:
 275              	.LBB439:
 276              	.LBB422:
 277              	.LBB408:
 278              	.LBB394:
 279              	.LBB374:
 280              	.LBB201:
 281 00f4 93072001 		li	a5,18
 282 00f8 6384F418 		beq	s1,a5,.L37
 283              	.LBE201:
 284              	.LBE374:
 285              	.LBE394:
 286              	.LBE408:
 287              	.LBE422:
 288              	.LBE439:
 289              	.LBE455:
 132:src/Riscv.cpp ****             //thread dispatch
 290              		.loc 1 132 14
 291              	.LBB456:
 292              	.LBB440:
 293              	.LBB423:
 294              	.LBB409:
 295              	.LBB395:
 296              	.LBB375:
 297              	.LBB356:
 298              	.LBB202:
 299 00fc 93073001 		li	a5,19
 300 0100 6382F41C 		beq	s1,a5,.L38
 301              	.LBE202:
 302              	.LBE356:
 303              	.LBE375:
 304              	.LBE395:
 305              	.LBE409:
 306              	.LBE423:
 307              	.LBE440:
 308              	.LBE456:
 144:src/Riscv.cpp ****             //call from yield
 309              		.loc 1 144 14
 310              	.LBB457:
 311              	.LBB441:
 312              	.LBB424:
GAS LISTING /tmp/cc3y761g.s 			page 15


 313              	.LBB410:
 314              	.LBB396:
 315              	.LBB376:
 316              	.LBB357:
 317              	.LBB339:
 318              	.LBB203:
 319 0104 93074000 		li	a5,4
 320 0108 6386F41E 		beq	s1,a5,.L39
 321              	.LBE203:
 322              	.LBE339:
 323              	.LBE357:
 324              	.LBE376:
 325              	.LBE396:
 326              	.LBE410:
 327              	.LBE424:
 328              	.LBE441:
 329              	.LBE457:
 155:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 330              		.loc 1 155 14
 331              	.LBB458:
 332              	.LBB442:
 333              	.LBB425:
 334              	.LBB411:
 335              	.LBB397:
 336              	.LBB377:
 337              	.LBB358:
 338              	.LBB340:
 339              	.LBB323:
 340              	.LBB204:
 341 010c 93071002 		li	a5,33
 342 0110 6380F422 		beq	s1,a5,.L40
 343              	.LBE204:
 344              	.LBE323:
 345              	.LBE340:
 346              	.LBE358:
 347              	.LBE377:
 348              	.LBE397:
 349              	.LBE411:
 350              	.LBE425:
 351              	.LBE442:
 352              	.LBE458:
 181:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 353              		.loc 1 181 14
 354              	.LBB459:
 355              	.LBB443:
 356              	.LBB426:
 357              	.LBB412:
 358              	.LBB398:
 359              	.LBB378:
 360              	.LBB359:
 361              	.LBB341:
 362              	.LBB324:
 363              	.LBB308:
 364              	.LBB205:
 365 0114 93072002 		li	a5,34
 366 0118 6384F428 		beq	s1,a5,.L41
 367              	.LBE205:
GAS LISTING /tmp/cc3y761g.s 			page 16


 368              	.LBE308:
 369              	.LBE324:
 370              	.LBE341:
 371              	.LBE359:
 372              	.LBE378:
 373              	.LBE398:
 374              	.LBE412:
 375              	.LBE426:
 376              	.LBE443:
 377              	.LBE459:
 207:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 378              		.loc 1 207 14
 379              	.LBB460:
 380              	.LBB444:
 381              	.LBB427:
 382              	.LBB413:
 383              	.LBB399:
 384              	.LBB379:
 385              	.LBB360:
 386              	.LBB342:
 387              	.LBB325:
 388              	.LBB309:
 389              	.LBB288:
 390              	.LBB206:
 391 011c 93073002 		li	a5,35
 392 0120 638CF430 		beq	s1,a5,.L42
 393              	.LBE206:
 394              	.LBE288:
 395              	.LBE309:
 396              	.LBE325:
 397              	.LBE342:
 398              	.LBE360:
 399              	.LBE379:
 400              	.LBE399:
 401              	.LBE413:
 402              	.LBE427:
 403              	.LBE444:
 404              	.LBE460:
 230:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 405              		.loc 1 230 14
 406              	.LBB461:
 407              	.LBB445:
 408              	.LBB428:
 409              	.LBB414:
 410              	.LBB400:
 411              	.LBB380:
 412              	.LBB361:
 413              	.LBB343:
 414              	.LBB326:
 415              	.LBB310:
 416              	.LBB289:
 417              	.LBB263:
 418              	.LBB207:
 419 0124 93074002 		li	a5,36
 420 0128 638EF434 		beq	s1,a5,.L43
 421              	.LBE207:
 422              	.LBE263:
GAS LISTING /tmp/cc3y761g.s 			page 17


 423              	.LBE289:
 424              	.LBE310:
 425              	.LBE326:
 426              	.LBE343:
 427              	.LBE361:
 428              	.LBE380:
 429              	.LBE400:
 430              	.LBE414:
 431              	.LBE428:
 432              	.LBE445:
 433              	.LBE461:
 254:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 434              		.loc 1 254 14
 435              	.LBB462:
 436              	.LBB446:
 437              	.LBB429:
 438              	.LBB415:
 439              	.LBB401:
 440              	.LBB381:
 441              	.LBB362:
 442              	.LBB344:
 443              	.LBB327:
 444              	.LBB311:
 445              	.LBB290:
 446              	.LBB264:
 447              	.LBB249:
 448              	.LBB208:
 449 012c 93071004 		li	a5,65
 450 0130 6382F43A 		beq	s1,a5,.L44
 451              	.LBE208:
 452              	.LBE249:
 453              	.LBE264:
 454              	.LBE290:
 455              	.LBE311:
 456              	.LBE327:
 457              	.LBE344:
 458              	.LBE362:
 459              	.LBE381:
 460              	.LBE401:
 461              	.LBE415:
 462              	.LBE429:
 463              	.LBE446:
 464              	.LBE462:
 269:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 465              		.loc 1 269 14
 466              	.LBB463:
 467              	.LBB447:
 468              	.LBB430:
 469              	.LBB416:
 470              	.LBB402:
 471              	.LBB382:
 472              	.LBB363:
 473              	.LBB345:
 474              	.LBB328:
 475              	.LBB312:
 476              	.LBB291:
 477              	.LBB265:
GAS LISTING /tmp/cc3y761g.s 			page 18


 478              	.LBB250:
 479              	.LBB236:
 480              	.LBB209:
 481 0134 93072004 		li	a5,66
 482 0138 E394F4F6 		bne	s1,a5,.L3
 483              	.LBB210:
 270:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 484              		.loc 1 270 13
 485              	.LBB211:
 486              	.LBB212:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 487              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 488              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 489              		.loc 2 115 64 is_stmt 0
 490              	#APP
 491              	# 115 "src/../h/Riscv.hpp" 1
 492              		csrr a5, sepc
 493              	# 0 "" 2
 494              	#NO_APP
 495 0140 2334F4FC 		sd	a5,-56(s0)
 116:src/../h/Riscv.hpp **** }
 496              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 497              		.loc 2 116 12 is_stmt 0
 498 0144 833484FC 		ld	s1,-56(s0)
 499              	.LVL11:
 500              	.LBE212:
 501              	.LBE211:
 270:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 502              		.loc 1 270 38
 503 0148 93844400 		addi	s1,s1,4
 504              	.LVL12:
 271:src/Riscv.cpp **** 
 505              		.loc 1 271 13 is_stmt 1
 506              	.LBB213:
 507              	.LBB214:
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 183:src/../h/Riscv.hpp **** {
 184:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 508              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 509              		.loc 2 185 5
 510              		.loc 2 185 76 is_stmt 0
 511              	#APP
 512              	# 185 "src/../h/Riscv.hpp" 1
 186              	    return sstatus;
 513              		csrr a5, sstatus
 514              	# 0 "" 2
 515              	#NO_APP
 516 0150 2330F4FC 		sd	a5,-64(s0)
 517              		.loc 2 186 5 is_stmt 1
 518              		.loc 2 186 12 is_stmt 0
 519 0154 033904FC 		ld	s2,-64(s0)
 520              	.LVL13:
GAS LISTING /tmp/cc3y761g.s 			page 19


 521              	.LBE214:
 522              	.LBE213:
 273:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 523              		.loc 1 273 13 is_stmt 1
 274:src/Riscv.cpp **** 
 524              		.loc 1 274 13
 274:src/Riscv.cpp **** 
 525              		.loc 1 274 48 is_stmt 0
 526              	#APP
 527              	# 274 "src/Riscv.cpp" 1
 276:src/Riscv.cpp **** 
 528              		ld a1, 11*8(fp)
 529              	# 0 "" 2
 530              		.loc 1 276 13 is_stmt 1
 276:src/Riscv.cpp **** 
 531              		.loc 1 276 53 is_stmt 0
 532              	# 276 "src/Riscv.cpp" 1
 533              		mv a0, a1
 534              	# 0 "" 2
 535              	#NO_APP
 536 0160 1375F50F 		andi	a0,a0,0xff
 537              	.LVL14:
 278:src/Riscv.cpp ****             __putc(c);
 538              		.loc 1 278 13 is_stmt 1
 278:src/Riscv.cpp ****             __putc(c);
 539              		.loc 1 278 27 is_stmt 0
 540 0164 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 540      83B70700 
 541              	.LVL15:
 542              	.LBB215:
 543              	.LBB216:
 133:src/../h/Riscv.hpp **** }
 544              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 545              		.loc 2 133 69 is_stmt 0
 546              	#APP
 547              	# 133 "src/../h/Riscv.hpp" 1
 548              		csrw stvec, a5
 549              	# 0 "" 2
 550              	.LVL16:
 551              	#NO_APP
 552              	.LBE216:
 553              	.LBE215:
 279:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 554              		.loc 1 279 13 is_stmt 1
 279:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 555              		.loc 1 279 19 is_stmt 0
 556 0170 97000000 		call	__putc@plt
 556      E7800000 
 557              	.LVL17:
 280:src/Riscv.cpp **** 
 558              		.loc 1 280 13 is_stmt 1
 280:src/Riscv.cpp **** 
 559              		.loc 1 280 27 is_stmt 0
 560 0178 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 560      83B70700 
 561              	.LVL18:
GAS LISTING /tmp/cc3y761g.s 			page 20


 562              	.LBB217:
 563              	.LBB218:
 133:src/../h/Riscv.hpp **** }
 564              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 565              		.loc 2 133 69 is_stmt 0
 566              	#APP
 567              	# 133 "src/../h/Riscv.hpp" 1
 568              		csrw stvec, a5
 569              	# 0 "" 2
 570              	.LVL19:
 571              	#NO_APP
 572              	.LBE218:
 573              	.LBE217:
 282:src/Riscv.cpp ****             w_sepc(sepc);
 574              		.loc 1 282 13 is_stmt 1
 575              	.LBB219:
 576              	.LBB220:
 187:src/../h/Riscv.hpp **** }
 188:src/../h/Riscv.hpp **** 
 189:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 190:src/../h/Riscv.hpp **** {
 191:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 577              		.loc 2 191 5
 578              		.loc 2 191 77 is_stmt 0
 579              	#APP
 580              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 581              		csrw sstatus, s2
 582              	# 0 "" 2
 583              	.LVL20:
 584              	#NO_APP
 585              	.LBE220:
 586              	.LBE219:
 283:src/Riscv.cpp ****         }
 587              		.loc 1 283 13 is_stmt 1
 588              	.LBB221:
 589              	.LBB222:
 121:src/../h/Riscv.hpp **** }
 590              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 591              		.loc 2 121 65 is_stmt 0
 592              	#APP
 593              	# 121 "src/../h/Riscv.hpp" 1
 594              		csrw sepc, s1
 595              	# 0 "" 2
 596              	.LVL21:
 597              	#NO_APP
 598              	.LBE222:
 599              	.LBE221:
 600              	.LBE210:
 601              	.LBE209:
 602              	.LBE236:
 603              	.LBE250:
 604              	.LBE265:
 605              	.LBE291:
 606              	.LBE312:
GAS LISTING /tmp/cc3y761g.s 			page 21


 607              	.LBE328:
 608              	.LBE345:
 609              	.LBE363:
 610              	.LBE382:
 611              	.LBE402:
 612              	.LBE416:
 613              	.LBE430:
 614              	.LBE447:
 615              	.LBE463:
 616              		.loc 1 291 1
 617 018c 6FF05FF1 		j	.L3
 618              	.LVL22:
 619              	.L33:
 620              	.LBB464:
 621              	.LBB448:
 622              	.LBB431:
  48:src/Riscv.cpp ****     }
 623              		.loc 1 48 9 is_stmt 1
  48:src/Riscv.cpp ****     }
 624              		.loc 1 48 24 is_stmt 0
 625 0190 97000000 		call	console_handler@plt
 625      E7800000 
 626              	.LVL23:
 627 0198 6FF09FF0 		j	.L3
 628              	.LVL24:
 629              	.L34:
 630              	.LBB417:
 631              	.LBB403:
 632              	.LBB190:
  56:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 633              		.loc 1 56 13 is_stmt 1
 634              	.LBB191:
 635              	.LBB192:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 636              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 637              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 638              		.loc 2 115 64 is_stmt 0
 639              	#APP
 640              	# 115 "src/../h/Riscv.hpp" 1
 641              		csrr a5, sepc
 642              	# 0 "" 2
 643              	#NO_APP
 644 01a0 233CF4F0 		sd	a5,-232(s0)
 116:src/../h/Riscv.hpp **** }
 645              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 646              		.loc 2 116 12 is_stmt 0
 647 01a4 033984F1 		ld	s2,-232(s0)
 648              	.LBE192:
 649              	.LBE191:
  56:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 650              		.loc 1 56 38
 651 01a8 13094900 		addi	s2,s2,4
 652              	.LVL25:
  57:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3y761g.s 			page 22


 653              		.loc 1 57 13 is_stmt 1
 654              	.LBB193:
 655              	.LBB194:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 656              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 657              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 658              		.loc 2 185 76 is_stmt 0
 659              	#APP
 660              	# 185 "src/../h/Riscv.hpp" 1
 661              		csrr a5, sstatus
 662              	# 0 "" 2
 663              	#NO_APP
 664 01b0 2338F4F0 		sd	a5,-240(s0)
 186:src/../h/Riscv.hpp **** }
 665              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 666              		.loc 2 186 12 is_stmt 0
 667 01b4 833904F1 		ld	s3,-240(s0)
 668              	.LVL26:
 669              	.LBE194:
 670              	.LBE193:
  60:src/Riscv.cpp ****             _thread::Body arg2;
 671              		.loc 1 60 13 is_stmt 1
  61:src/Riscv.cpp ****             uint64 arg3;
 672              		.loc 1 61 13
  62:src/Riscv.cpp ****             uint64 *arg4;
 673              		.loc 1 62 13
  63:src/Riscv.cpp **** 
 674              		.loc 1 63 13
  65:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 675              		.loc 1 65 13
  65:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 676              		.loc 1 65 48 is_stmt 0
 677              	#APP
 678              	# 65 "src/Riscv.cpp" 1
  66:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 679              		ld a1, 11*8(fp)
 680              	# 0 "" 2
 681              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 682              		.loc 1 66 48 is_stmt 0
 683              	# 66 "src/Riscv.cpp" 1
  67:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 684              		ld a2, 12*8(fp)
 685              	# 0 "" 2
 686              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 687              		.loc 1 67 48 is_stmt 0
 688              	# 67 "src/Riscv.cpp" 1
  68:src/Riscv.cpp **** 
 689              		ld a3, 13*8(fp)
 690              	# 0 "" 2
 691              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp **** 
 692              		.loc 1 68 48 is_stmt 0
GAS LISTING /tmp/cc3y761g.s 			page 23


 693              	# 68 "src/Riscv.cpp" 1
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 694              		ld a4, 14*8(fp)
 695              	# 0 "" 2
 696              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 697              		.loc 1 71 56 is_stmt 0
 698              	# 71 "src/Riscv.cpp" 1
 699              		mv s4, a1
 700              	# 0 "" 2
 701              	.LVL27:
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 702              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 703              		.loc 1 72 56 is_stmt 0
 704              	# 72 "src/Riscv.cpp" 1
 705              		mv a0, a2
 706              	# 0 "" 2
 707              	.LVL28:
  73:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 708              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 709              		.loc 1 73 56 is_stmt 0
 710              	# 73 "src/Riscv.cpp" 1
 711              		mv a1, a3
 712              	# 0 "" 2
 713              	.LVL29:
  74:src/Riscv.cpp **** 
 714              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp **** 
 715              		.loc 1 74 56 is_stmt 0
 716              	# 74 "src/Riscv.cpp" 1
 717              		mv a2, a4
 718              	# 0 "" 2
 719              	.LVL30:
  77:src/Riscv.cpp ****             *arg1=t;
 720              		.loc 1 77 13 is_stmt 1
  77:src/Riscv.cpp ****             *arg1=t;
 721              		.loc 1 77 47 is_stmt 0
 722              	#NO_APP
 723 01d8 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 723      E7800000 
 724              	.LVL31:
  78:src/Riscv.cpp **** 
 725              		.loc 1 78 13 is_stmt 1
  78:src/Riscv.cpp **** 
 726              		.loc 1 78 18 is_stmt 0
 727 01e0 2330AA00 		sd	a0,0(s4)
  80:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 728              		.loc 1 80 13 is_stmt 1
  81:src/Riscv.cpp ****             else ret =-1;
 729              		.loc 1 81 13
 730 01e4 630C0500 		beqz	a0,.L27
  81:src/Riscv.cpp ****             else ret =-1;
 731              		.loc 1 81 31 is_stmt 0
 732 01e8 93070000 		li	a5,0
 733              	.L9:
GAS LISTING /tmp/cc3y761g.s 			page 24


 734              	.LVL32:
  86:src/Riscv.cpp **** 
 735              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 736              		.loc 1 86 56 is_stmt 0
 737              	#APP
 738              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             w_sepc(sepc);
 739              		mv a0, a5
 740              	# 0 "" 2
 741              		.loc 1 88 13 is_stmt 1
 742              	.LVL33:
 743              	#NO_APP
 744              	.LBB195:
 745              	.LBB196:
 191:src/../h/Riscv.hpp **** }
 746              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 747              		.loc 2 191 77 is_stmt 0
 748              	#APP
 749              	# 191 "src/../h/Riscv.hpp" 1
 750              		csrw sstatus, s3
 751              	# 0 "" 2
 752              	.LVL34:
 753              	#NO_APP
 754              	.LBE196:
 755              	.LBE195:
  89:src/Riscv.cpp ****         }
 756              		.loc 1 89 13 is_stmt 1
 757              	.LBB197:
 758              	.LBB198:
 121:src/../h/Riscv.hpp **** }
 759              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 760              		.loc 2 121 65 is_stmt 0
 761              	#APP
 762              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 763              		csrw sepc, s2
 764              	# 0 "" 2
 765              		.loc 2 122 1
 766              	#NO_APP
 767 01f8 6FF0DFEE 		j	.L8
 768              	.LVL35:
 769              	.L27:
 770              	.LBE198:
 771              	.LBE197:
  82:src/Riscv.cpp **** 
 772              		.loc 1 82 22
 773 01fc 9307F0FF 		li	a5,-1
 774 0200 6FF0DFFE 		j	.L9
 775              	.LVL36:
 776              	.L35:
 777              	.LBE190:
 778              	.LBE403:
 779              	.LBB404:
 780              	.LBB383:
GAS LISTING /tmp/cc3y761g.s 			page 25


  92:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 781              		.loc 1 92 13 is_stmt 1
 782              	.LBB384:
 783              	.LBB385:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 784              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 785              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 786              		.loc 2 115 64 is_stmt 0
 787              	#APP
 788              	# 115 "src/../h/Riscv.hpp" 1
 789              		csrr a5, sepc
 790              	# 0 "" 2
 791              	#NO_APP
 792 0208 2334F4F2 		sd	a5,-216(s0)
 116:src/../h/Riscv.hpp **** }
 793              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 794              		.loc 2 116 12 is_stmt 0
 795 020c 833484F2 		ld	s1,-216(s0)
 796              	.LVL37:
 797              	.LBE385:
 798              	.LBE384:
  92:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 799              		.loc 1 92 38
 800 0210 93844400 		addi	s1,s1,4
 801              	.LVL38:
  93:src/Riscv.cpp ****             //kmem_alloc
 802              		.loc 1 93 13 is_stmt 1
 803              	.LBB386:
 804              	.LBB387:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 805              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 806              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 807              		.loc 2 185 76 is_stmt 0
 808              	#APP
 809              	# 185 "src/../h/Riscv.hpp" 1
 810              		csrr a5, sstatus
 811              	# 0 "" 2
 812              	#NO_APP
 813 0218 2330F4F2 		sd	a5,-224(s0)
 186:src/../h/Riscv.hpp **** }
 814              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 815              		.loc 2 186 12 is_stmt 0
 816 021c 033904F2 		ld	s2,-224(s0)
 817              	.LVL39:
 818              	.LBE387:
 819              	.LBE386:
  95:src/Riscv.cpp **** 
 820              		.loc 1 95 13 is_stmt 1
  95:src/Riscv.cpp **** 
 821              		.loc 1 95 48 is_stmt 0
 822              	#APP
GAS LISTING /tmp/cc3y761g.s 			page 26


 823              	# 95 "src/Riscv.cpp" 1
  97:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 824              		ld a0, 11*8(fp)
 825              	# 0 "" 2
 826              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 827              		.loc 1 97 56 is_stmt 0
 828              	# 97 "src/Riscv.cpp" 1
 829              		mv a0, a0
 830              	# 0 "" 2
 831              	.LVL40:
  98:src/Riscv.cpp **** 
 832              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp **** 
 833              		.loc 1 98 61 is_stmt 0
 834              	#NO_APP
 835 0228 13156500 		slli	a0,a0,6
 836              	.LVL41:
 837 022c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 837      E7800000 
 838              	.LVL42:
 101:src/Riscv.cpp **** 
 839              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp **** 
 840              		.loc 1 101 56 is_stmt 0
 841              	#APP
 842              	# 101 "src/Riscv.cpp" 1
 103:src/Riscv.cpp ****             w_sepc(sepc);
 843              		mv a0, a0
 844              	# 0 "" 2
 845              		.loc 1 103 13 is_stmt 1
 846              	.LVL43:
 847              	#NO_APP
 848              	.LBB388:
 849              	.LBB389:
 191:src/../h/Riscv.hpp **** }
 850              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 851              		.loc 2 191 77 is_stmt 0
 852              	#APP
 853              	# 191 "src/../h/Riscv.hpp" 1
 854              		csrw sstatus, s2
 855              	# 0 "" 2
 856              	.LVL44:
 857              	#NO_APP
 858              	.LBE389:
 859              	.LBE388:
 104:src/Riscv.cpp ****         }
 860              		.loc 1 104 13 is_stmt 1
 861              	.LBB390:
 862              	.LBB391:
 121:src/../h/Riscv.hpp **** }
 863              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 864              		.loc 2 121 65 is_stmt 0
 865              	#APP
 866              	# 121 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cc3y761g.s 			page 27


 122:src/../h/Riscv.hpp **** 
 867              		csrw sepc, s1
 868              	# 0 "" 2
 869              		.loc 2 122 1
 870              	#NO_APP
 871 0240 6FF01FE6 		j	.L3
 872              	.LVL45:
 873              	.L36:
 874              	.LBE391:
 875              	.LBE390:
 876              	.LBE383:
 877              	.LBB392:
 878              	.LBB364:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 879              		.loc 1 107 13 is_stmt 1
 880              	.LBB365:
 881              	.LBB366:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 882              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 883              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 884              		.loc 2 115 64 is_stmt 0
 885              	#APP
 886              	# 115 "src/../h/Riscv.hpp" 1
 887              		csrr a5, sepc
 888              	# 0 "" 2
 889              	#NO_APP
 890 0248 233CF4F2 		sd	a5,-200(s0)
 116:src/../h/Riscv.hpp **** }
 891              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 892              		.loc 2 116 12 is_stmt 0
 893 024c 833484F3 		ld	s1,-200(s0)
 894              	.LVL46:
 895              	.LBE366:
 896              	.LBE365:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 897              		.loc 1 107 38
 898 0250 93844400 		addi	s1,s1,4
 899              	.LVL47:
 108:src/Riscv.cpp **** 
 900              		.loc 1 108 13 is_stmt 1
 901              	.LBB367:
 902              	.LBB368:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 903              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 904              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 905              		.loc 2 185 76 is_stmt 0
 906              	#APP
 907              	# 185 "src/../h/Riscv.hpp" 1
 908              		csrr a5, sstatus
 909              	# 0 "" 2
 910              	#NO_APP
 911 0258 2338F4F2 		sd	a5,-208(s0)
GAS LISTING /tmp/cc3y761g.s 			page 28


 186:src/../h/Riscv.hpp **** }
 912              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 913              		.loc 2 186 12 is_stmt 0
 914 025c 033904F3 		ld	s2,-208(s0)
 915              	.LVL48:
 916              	.LBE368:
 917              	.LBE367:
 110:src/Riscv.cpp **** 
 918              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 919              		.loc 1 110 48 is_stmt 0
 920              	#APP
 921              	# 110 "src/Riscv.cpp" 1
 112:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 922              		ld a0, 11*8(fp)
 923              	# 0 "" 2
 924              		.loc 1 112 13 is_stmt 1
 112:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 925              		.loc 1 112 56 is_stmt 0
 926              	# 112 "src/Riscv.cpp" 1
 927              		mv a0, a0
 928              	# 0 "" 2
 929              	.LVL49:
 113:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 930              		.loc 1 113 13 is_stmt 1
 113:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 931              		.loc 1 113 49 is_stmt 0
 932              	#NO_APP
 933 0268 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 933      E7800000 
 934              	.LVL50:
 114:src/Riscv.cpp **** 
 935              		.loc 1 114 13 is_stmt 1
 114:src/Riscv.cpp **** 
 936              		.loc 1 114 56 is_stmt 0
 937              	#APP
 938              	# 114 "src/Riscv.cpp" 1
 116:src/Riscv.cpp ****             w_sepc(sepc);
 939              		mv a0, a0
 940              	# 0 "" 2
 941              		.loc 1 116 13 is_stmt 1
 942              	.LVL51:
 943              	#NO_APP
 944              	.LBB369:
 945              	.LBB370:
 191:src/../h/Riscv.hpp **** }
 946              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 947              		.loc 2 191 77 is_stmt 0
 948              	#APP
 949              	# 191 "src/../h/Riscv.hpp" 1
 950              		csrw sstatus, s2
 951              	# 0 "" 2
 952              	.LVL52:
 953              	#NO_APP
 954              	.LBE370:
GAS LISTING /tmp/cc3y761g.s 			page 29


 955              	.LBE369:
 117:src/Riscv.cpp ****         }
 956              		.loc 1 117 13 is_stmt 1
 957              	.LBB371:
 958              	.LBB372:
 121:src/../h/Riscv.hpp **** }
 959              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 960              		.loc 2 121 65 is_stmt 0
 961              	#APP
 962              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 963              		csrw sepc, s1
 964              	# 0 "" 2
 965              		.loc 2 122 1
 966              	#NO_APP
 967 027c 6FF05FE2 		j	.L3
 968              	.LVL53:
 969              	.L37:
 970              	.LBE372:
 971              	.LBE371:
 972              	.LBE364:
 973              	.LBB373:
 974              	.LBB346:
 121:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 975              		.loc 1 121 13 is_stmt 1
 976              	.LBB347:
 977              	.LBB348:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 978              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 979              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 980              		.loc 2 115 64 is_stmt 0
 981              	#APP
 982              	# 115 "src/../h/Riscv.hpp" 1
 983              		csrr a5, sepc
 984              	# 0 "" 2
 985              	#NO_APP
 986 0284 2334F4F4 		sd	a5,-184(s0)
 116:src/../h/Riscv.hpp **** }
 987              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 988              		.loc 2 116 12 is_stmt 0
 989 0288 833484F4 		ld	s1,-184(s0)
 990              	.LVL54:
 991              	.LBE348:
 992              	.LBE347:
 121:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 993              		.loc 1 121 38
 994 028c 93844400 		addi	s1,s1,4
 995              	.LVL55:
 122:src/Riscv.cpp **** 
 996              		.loc 1 122 13 is_stmt 1
 997              	.LBB349:
 998              	.LBB350:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/cc3y761g.s 			page 30


 999              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1000              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1001              		.loc 2 185 76 is_stmt 0
 1002              	#APP
 1003              	# 185 "src/../h/Riscv.hpp" 1
 1004              		csrr a5, sstatus
 1005              	# 0 "" 2
 1006              	#NO_APP
 1007 0294 2330F4F4 		sd	a5,-192(s0)
 186:src/../h/Riscv.hpp **** }
 1008              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1009              		.loc 2 186 12 is_stmt 0
 1010 0298 033904F4 		ld	s2,-192(s0)
 1011              	.LVL56:
 1012              	.LBE350:
 1013              	.LBE349:
 124:src/Riscv.cpp ****             _thread::dispatch();
 1014              		.loc 1 124 13 is_stmt 1
 124:src/Riscv.cpp ****             _thread::dispatch();
 1015              		.loc 1 124 31 is_stmt 0
 1016 029c 97070000 		la	a5,_ZN7_thread7runningE
 1016      83B70700 
 1017 02a4 83B70700 		ld	a5,0(a5)
 124:src/Riscv.cpp ****             _thread::dispatch();
 1018              		.loc 1 124 39
 1019 02a8 13071000 		li	a4,1
 1020 02ac 2384E702 		sb	a4,40(a5)
 125:src/Riscv.cpp **** 
 1021              		.loc 1 125 13 is_stmt 1
 125:src/Riscv.cpp **** 
 1022              		.loc 1 125 30 is_stmt 0
 1023 02b0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1023      E7800000 
 1024              	.LVL57:
 127:src/Riscv.cpp ****             w_sepc(sepc);
 1025              		.loc 1 127 13 is_stmt 1
 1026              	.LBB351:
 1027              	.LBB352:
 191:src/../h/Riscv.hpp **** }
 1028              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1029              		.loc 2 191 77 is_stmt 0
 1030              	#APP
 1031              	# 191 "src/../h/Riscv.hpp" 1
 1032              		csrw sstatus, s2
 1033              	# 0 "" 2
 1034              	.LVL58:
 1035              	#NO_APP
 1036              	.LBE352:
 1037              	.LBE351:
 128:src/Riscv.cpp **** 
 1038              		.loc 1 128 13 is_stmt 1
 1039              	.LBB353:
 1040              	.LBB354:
GAS LISTING /tmp/cc3y761g.s 			page 31


 121:src/../h/Riscv.hpp **** }
 1041              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1042              		.loc 2 121 65 is_stmt 0
 1043              	#APP
 1044              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1045              		csrw sepc, s1
 1046              	# 0 "" 2
 1047              		.loc 2 122 1
 1048              	#NO_APP
 1049 02c0 6FF01FDE 		j	.L3
 1050              	.LVL59:
 1051              	.L38:
 1052              	.LBE354:
 1053              	.LBE353:
 1054              	.LBE346:
 1055              	.LBB355:
 1056              	.LBB329:
 134:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1057              		.loc 1 134 13 is_stmt 1
 1058              	.LBB330:
 1059              	.LBB331:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1060              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1061              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1062              		.loc 2 115 64 is_stmt 0
 1063              	#APP
 1064              	# 115 "src/../h/Riscv.hpp" 1
 1065              		csrr a5, sepc
 1066              	# 0 "" 2
 1067              	#NO_APP
 1068 02c8 233CF4F4 		sd	a5,-168(s0)
 116:src/../h/Riscv.hpp **** }
 1069              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1070              		.loc 2 116 12 is_stmt 0
 1071 02cc 833484F5 		ld	s1,-168(s0)
 1072              	.LVL60:
 1073              	.LBE331:
 1074              	.LBE330:
 134:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1075              		.loc 1 134 38
 1076 02d0 93844400 		addi	s1,s1,4
 1077              	.LVL61:
 135:src/Riscv.cpp **** 
 1078              		.loc 1 135 13 is_stmt 1
 1079              	.LBB332:
 1080              	.LBB333:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1081              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1082              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1083              		.loc 2 185 76 is_stmt 0
GAS LISTING /tmp/cc3y761g.s 			page 32


 1084              	#APP
 1085              	# 185 "src/../h/Riscv.hpp" 1
 1086              		csrr a5, sstatus
 1087              	# 0 "" 2
 1088              	#NO_APP
 1089 02d8 2338F4F4 		sd	a5,-176(s0)
 186:src/../h/Riscv.hpp **** }
 1090              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1091              		.loc 2 186 12 is_stmt 0
 1092 02dc 033904F5 		ld	s2,-176(s0)
 1093              	.LVL62:
 1094              	.LBE333:
 1095              	.LBE332:
 138:src/Riscv.cpp **** 
 1096              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp **** 
 1097              		.loc 1 138 30 is_stmt 0
 1098 02e0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1098      E7800000 
 1099              	.LVL63:
 140:src/Riscv.cpp ****             w_sepc(sepc);
 1100              		.loc 1 140 13 is_stmt 1
 1101              	.LBB334:
 1102              	.LBB335:
 191:src/../h/Riscv.hpp **** }
 1103              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1104              		.loc 2 191 77 is_stmt 0
 1105              	#APP
 1106              	# 191 "src/../h/Riscv.hpp" 1
 1107              		csrw sstatus, s2
 1108              	# 0 "" 2
 1109              	.LVL64:
 1110              	#NO_APP
 1111              	.LBE335:
 1112              	.LBE334:
 141:src/Riscv.cpp ****         }
 1113              		.loc 1 141 13 is_stmt 1
 1114              	.LBB336:
 1115              	.LBB337:
 121:src/../h/Riscv.hpp **** }
 1116              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1117              		.loc 2 121 65 is_stmt 0
 1118              	#APP
 1119              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1120              		csrw sepc, s1
 1121              	# 0 "" 2
 1122              		.loc 2 122 1
 1123              	#NO_APP
 1124 02f0 6FF01FDB 		j	.L3
 1125              	.LVL65:
 1126              	.L39:
 1127              	.LBE337:
 1128              	.LBE336:
GAS LISTING /tmp/cc3y761g.s 			page 33


 1129              	.LBE329:
 1130              	.LBB338:
 1131              	.LBB313:
 146:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1132              		.loc 1 146 13 is_stmt 1
 1133              	.LBB314:
 1134              	.LBB315:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1135              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1136              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1137              		.loc 2 115 64 is_stmt 0
 1138              	#APP
 1139              	# 115 "src/../h/Riscv.hpp" 1
 1140              		csrr a5, sepc
 1141              	# 0 "" 2
 1142              	#NO_APP
 1143 02f8 2334F4F6 		sd	a5,-152(s0)
 116:src/../h/Riscv.hpp **** }
 1144              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1145              		.loc 2 116 12 is_stmt 0
 1146 02fc 833484F6 		ld	s1,-152(s0)
 1147              	.LVL66:
 1148              	.LBE315:
 1149              	.LBE314:
 146:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1150              		.loc 1 146 38
 1151 0300 93844400 		addi	s1,s1,4
 1152              	.LVL67:
 147:src/Riscv.cpp **** 
 1153              		.loc 1 147 13 is_stmt 1
 1154              	.LBB316:
 1155              	.LBB317:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1156              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1157              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1158              		.loc 2 185 76 is_stmt 0
 1159              	#APP
 1160              	# 185 "src/../h/Riscv.hpp" 1
 1161              		csrr a5, sstatus
 1162              	# 0 "" 2
 1163              	#NO_APP
 1164 0308 2330F4F6 		sd	a5,-160(s0)
 186:src/../h/Riscv.hpp **** }
 1165              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1166              		.loc 2 186 12 is_stmt 0
 1167 030c 033904F6 		ld	s2,-160(s0)
 1168              	.LVL68:
 1169              	.LBE317:
 1170              	.LBE316:
 149:src/Riscv.cpp ****             _thread::dispatch();
 1171              		.loc 1 149 13 is_stmt 1
GAS LISTING /tmp/cc3y761g.s 			page 34


 149:src/Riscv.cpp ****             _thread::dispatch();
 1172              		.loc 1 149 39 is_stmt 0
 1173 0310 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1173      83B70700 
 1174 0318 23B00700 		sd	zero,0(a5)
 150:src/Riscv.cpp **** 
 1175              		.loc 1 150 13 is_stmt 1
 150:src/Riscv.cpp **** 
 1176              		.loc 1 150 30 is_stmt 0
 1177 031c 97000000 		call	_ZN7_thread8dispatchEv@plt
 1177      E7800000 
 1178              	.LVL69:
 152:src/Riscv.cpp ****             w_sepc(sepc);
 1179              		.loc 1 152 13 is_stmt 1
 1180              	.LBB318:
 1181              	.LBB319:
 191:src/../h/Riscv.hpp **** }
 1182              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1183              		.loc 2 191 77 is_stmt 0
 1184              	#APP
 1185              	# 191 "src/../h/Riscv.hpp" 1
 1186              		csrw sstatus, s2
 1187              	# 0 "" 2
 1188              	.LVL70:
 1189              	#NO_APP
 1190              	.LBE319:
 1191              	.LBE318:
 153:src/Riscv.cpp ****         }
 1192              		.loc 1 153 13 is_stmt 1
 1193              	.LBB320:
 1194              	.LBB321:
 121:src/../h/Riscv.hpp **** }
 1195              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1196              		.loc 2 121 65 is_stmt 0
 1197              	#APP
 1198              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1199              		csrw sepc, s1
 1200              	# 0 "" 2
 1201              		.loc 2 122 1
 1202              	#NO_APP
 1203 032c 6FF05FD7 		j	.L3
 1204              	.LVL71:
 1205              	.L40:
 1206              	.LBE321:
 1207              	.LBE320:
 1208              	.LBE313:
 1209              	.LBB322:
 1210              	.LBB292:
 156:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1211              		.loc 1 156 13 is_stmt 1
 1212              	.LBB293:
 1213              	.LBB294:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1214              		.loc 2 114 5
GAS LISTING /tmp/cc3y761g.s 			page 35


 115:src/../h/Riscv.hpp ****     return sepc;
 1215              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1216              		.loc 2 115 64 is_stmt 0
 1217              	#APP
 1218              	# 115 "src/../h/Riscv.hpp" 1
 1219              		csrr a5, sepc
 1220              	# 0 "" 2
 1221              	#NO_APP
 1222 0334 233CF4F6 		sd	a5,-136(s0)
 116:src/../h/Riscv.hpp **** }
 1223              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1224              		.loc 2 116 12 is_stmt 0
 1225 0338 833484F7 		ld	s1,-136(s0)
 1226              	.LVL72:
 1227              	.LBE294:
 1228              	.LBE293:
 156:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1229              		.loc 1 156 38
 1230 033c 93844400 		addi	s1,s1,4
 1231              	.LVL73:
 157:src/Riscv.cpp **** 
 1232              		.loc 1 157 13 is_stmt 1
 1233              	.LBB295:
 1234              	.LBB296:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1235              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1236              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1237              		.loc 2 185 76 is_stmt 0
 1238              	#APP
 1239              	# 185 "src/../h/Riscv.hpp" 1
 1240              		csrr a5, sstatus
 1241              	# 0 "" 2
 1242              	#NO_APP
 1243 0344 2338F4F6 		sd	a5,-144(s0)
 186:src/../h/Riscv.hpp **** }
 1244              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1245              		.loc 2 186 12 is_stmt 0
 1246 0348 033904F7 		ld	s2,-144(s0)
 1247              	.LVL74:
 1248              	.LBE296:
 1249              	.LBE295:
 159:src/Riscv.cpp ****            uint64 arg2;
 1250              		.loc 1 159 12 is_stmt 1
 160:src/Riscv.cpp **** 
 1251              		.loc 1 160 12
 162:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1252              		.loc 1 162 13
 162:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1253              		.loc 1 162 48 is_stmt 0
 1254              	#APP
 1255              	# 162 "src/Riscv.cpp" 1
 163:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3y761g.s 			page 36


 1256              		ld a1, 11*8(fp)
 1257              	# 0 "" 2
 1258              		.loc 1 163 13 is_stmt 1
 163:src/Riscv.cpp **** 
 1259              		.loc 1 163 48 is_stmt 0
 1260              	# 163 "src/Riscv.cpp" 1
 165:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1261              		ld a2, 12*8(fp)
 1262              	# 0 "" 2
 1263              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1264              		.loc 1 165 56 is_stmt 0
 1265              	# 165 "src/Riscv.cpp" 1
 1266              		mv s3, a1
 1267              	# 0 "" 2
 1268              	.LVL75:
 166:src/Riscv.cpp **** 
 1269              		.loc 1 166 13 is_stmt 1
 166:src/Riscv.cpp **** 
 1270              		.loc 1 166 56 is_stmt 0
 1271              	# 166 "src/Riscv.cpp" 1
 1272              		mv s4, a2
 1273              	# 0 "" 2
 1274              	.LVL76:
 168:src/Riscv.cpp ****             sem->open();
 1275              		.loc 1 168 13 is_stmt 1
 168:src/Riscv.cpp ****             sem->open();
 1276              		.loc 1 168 50 is_stmt 0
 1277              	#NO_APP
 1278 035c 13050002 		li	a0,32
 1279 0360 97000000 		call	_ZN10KSemaphorenwEm@plt
 1279      E7800000 
 1280              	.LVL77:
 1281              	.LBB297:
 1282              	.LBB298:
 1283              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1284              		.loc 3 14 40
 1285 0368 23204501 		sw	s4,0(a0)
 1286              	.LVL78:
 1287              	.LBB299:
 1288              	.LBB300:
 1289              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
GAS LISTING /tmp/cc3y761g.s 			page 37


   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1290              		.loc 4 26 29
 1291 036c 23340500 		sd	zero,8(a0)
 1292 0370 23380500 		sd	zero,16(a0)
 1293              	.LVL79:
 1294              	.LBE300:
 1295              	.LBE299:
 1296              	.LBE298:
 1297              	.LBE297:
 169:src/Riscv.cpp ****             *arg1=sem;
 1298              		.loc 1 169 13 is_stmt 1
 1299              	.LBB301:
 1300              	.LBB302:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
GAS LISTING /tmp/cc3y761g.s 			page 38


  35:src/../h/KSemaphore.hpp ****         opened=true;
 1301              		.loc 3 35 9
 1302              		.loc 3 35 15 is_stmt 0
 1303 0374 93071000 		li	a5,1
 1304 0378 230CF500 		sb	a5,24(a0)
 1305              	.LVL80:
 1306              	.LBE302:
 1307              	.LBE301:
 170:src/Riscv.cpp **** 
 1308              		.loc 1 170 13 is_stmt 1
 170:src/Riscv.cpp **** 
 1309              		.loc 1 170 18 is_stmt 0
 1310 037c 23B0A900 		sd	a0,0(s3)
 172:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1311              		.loc 1 172 13 is_stmt 1
 1312              	.LVL81:
 173:src/Riscv.cpp ****             else ret=-1;
 1313              		.loc 1 173 13
 1314 0380 630C0500 		beqz	a0,.L28
 173:src/Riscv.cpp ****             else ret=-1;
 1315              		.loc 1 173 33 is_stmt 0
 1316 0384 93070000 		li	a5,0
 1317              	.L16:
 1318              	.LVL82:
 176:src/Riscv.cpp **** 
 1319              		.loc 1 176 13 is_stmt 1
 176:src/Riscv.cpp **** 
 1320              		.loc 1 176 56 is_stmt 0
 1321              	#APP
 1322              	# 176 "src/Riscv.cpp" 1
 178:src/Riscv.cpp ****             w_sepc(sepc);
 1323              		mv a0, a5
 1324              	# 0 "" 2
 1325              		.loc 1 178 13 is_stmt 1
 1326              	.LVL83:
 1327              	#NO_APP
 1328              	.LBB303:
 1329              	.LBB304:
 191:src/../h/Riscv.hpp **** }
 1330              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1331              		.loc 2 191 77 is_stmt 0
 1332              	#APP
 1333              	# 191 "src/../h/Riscv.hpp" 1
 1334              		csrw sstatus, s2
 1335              	# 0 "" 2
 1336              	.LVL84:
 1337              	#NO_APP
 1338              	.LBE304:
 1339              	.LBE303:
 179:src/Riscv.cpp ****         }
 1340              		.loc 1 179 13 is_stmt 1
 1341              	.LBB305:
 1342              	.LBB306:
 121:src/../h/Riscv.hpp **** }
 1343              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc3y761g.s 			page 39


 1344              		.loc 2 121 65 is_stmt 0
 1345              	#APP
 1346              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1347              		csrw sepc, s1
 1348              	# 0 "" 2
 1349              		.loc 2 122 1
 1350              	#NO_APP
 1351 0394 6FF0DFD0 		j	.L3
 1352              	.LVL85:
 1353              	.L28:
 1354              	.LBE306:
 1355              	.LBE305:
 174:src/Riscv.cpp **** 
 1356              		.loc 1 174 21
 1357 0398 9307F0FF 		li	a5,-1
 1358 039c 6FF0DFFE 		j	.L16
 1359              	.LVL86:
 1360              	.L41:
 1361              	.LBE292:
 1362              	.LBB307:
 1363              	.LBB266:
 182:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1364              		.loc 1 182 13 is_stmt 1
 1365              	.LBB267:
 1366              	.LBB268:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1367              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1368              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1369              		.loc 2 115 64 is_stmt 0
 1370              	#APP
 1371              	# 115 "src/../h/Riscv.hpp" 1
 1372              		csrr a5, sepc
 1373              	# 0 "" 2
 1374              	#NO_APP
 1375 03a4 2334F4F8 		sd	a5,-120(s0)
 116:src/../h/Riscv.hpp **** }
 1376              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1377              		.loc 2 116 12 is_stmt 0
 1378 03a8 833984F8 		ld	s3,-120(s0)
 1379              	.LBE268:
 1380              	.LBE267:
 182:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1381              		.loc 1 182 38
 1382 03ac 93894900 		addi	s3,s3,4
 1383              	.LVL87:
 183:src/Riscv.cpp **** 
 1384              		.loc 1 183 13 is_stmt 1
 1385              	.LBB269:
 1386              	.LBB270:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1387              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1388              		.loc 2 185 5
GAS LISTING /tmp/cc3y761g.s 			page 40


 185:src/../h/Riscv.hpp ****     return sstatus;
 1389              		.loc 2 185 76 is_stmt 0
 1390              	#APP
 1391              	# 185 "src/../h/Riscv.hpp" 1
 1392              		csrr a5, sstatus
 1393              	# 0 "" 2
 1394              	#NO_APP
 1395 03b4 2330F4F8 		sd	a5,-128(s0)
 186:src/../h/Riscv.hpp **** }
 1396              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1397              		.loc 2 186 12 is_stmt 0
 1398 03b8 033A04F8 		ld	s4,-128(s0)
 1399              	.LVL88:
 1400              	.LBE270:
 1401              	.LBE269:
 185:src/Riscv.cpp **** 
 1402              		.loc 1 185 13 is_stmt 1
 188:src/Riscv.cpp **** 
 1403              		.loc 1 188 13
 188:src/Riscv.cpp **** 
 1404              		.loc 1 188 48 is_stmt 0
 1405              	#APP
 1406              	# 188 "src/Riscv.cpp" 1
 190:src/Riscv.cpp **** 
 1407              		ld a1, 11*8(fp)
 1408              	# 0 "" 2
 1409              		.loc 1 190 13 is_stmt 1
 190:src/Riscv.cpp **** 
 1410              		.loc 1 190 56 is_stmt 0
 1411              	# 190 "src/Riscv.cpp" 1
 1412              		mv s1, a1
 1413              	# 0 "" 2
 1414              	.LVL89:
 192:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1415              		.loc 1 192 13 is_stmt 1
 1416              	#NO_APP
 1417 03c4 6F000003 		j	.L20
 1418              	.LVL90:
 1419              	.L19:
 1420              	.LBB271:
 1421              	.LBB272:
 1422              	.LBB273:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
GAS LISTING /tmp/cc3y761g.s 			page 41


  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1423              		.loc 4 72 12 is_stmt 0
 1424 03c8 03390500 		ld	s2,0(a0)
 1425              	.LVL91:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1426              		.loc 4 73 35
 1427 03cc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1427      E7800000 
 1428              	.LVL92:
 1429              	.LBE273:
 1430              	.LBE272:
 196:src/Riscv.cpp ****                 sem->val++;
 1431              		.loc 1 196 17 is_stmt 1
 1432              	.LBB275:
 1433              	.LBB276:
 1434              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
GAS LISTING /tmp/cc3y761g.s 			page 42


  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1435              		.loc 5 35 9
 1436              		.loc 5 35 19 is_stmt 0
 1437 03d4 93071000 		li	a5,1
 1438 03d8 230CF902 		sb	a5,56(s2)
 1439              	.LVL93:
 1440              	.LBE276:
 1441              	.LBE275:
 197:src/Riscv.cpp ****                 Scheduler::put(t);
 1442              		.loc 1 197 17 is_stmt 1
 197:src/Riscv.cpp ****                 Scheduler::put(t);
 1443              		.loc 1 197 22 is_stmt 0
 1444 03dc 83A70400 		lw	a5,0(s1)
 197:src/Riscv.cpp ****                 Scheduler::put(t);
 1445              		.loc 1 197 25
 1446 03e0 9B871700 		addiw	a5,a5,1
 1447 03e4 23A0F400 		sw	a5,0(s1)
 198:src/Riscv.cpp ****             }
 1448              		.loc 1 198 17 is_stmt 1
 198:src/Riscv.cpp ****             }
 1449              		.loc 1 198 31 is_stmt 0
 1450 03e8 13050900 		mv	a0,s2
 1451 03ec 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1451      E7800000 
 1452              	.LVL94:
 1453              	.L20:
 1454              	.LBE271:
 194:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1455              		.loc 1 194 13 is_stmt 1
 194:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1456              		.loc 1 194 43
 1457              	.LBB278:
 1458              	.LBB279:
GAS LISTING /tmp/cc3y761g.s 			page 43


  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1459              		.loc 4 79 14 is_stmt 0
 1460 03f4 03B58400 		ld	a0,8(s1)
 1461              		.loc 4 79 9
 1462 03f8 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1463              		.loc 4 80 22
 1464 03fc 83370500 		ld	a5,0(a0)
 1465              	.LVL95:
 1466              	.LBE279:
 1467              	.LBE278:
 194:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1468              		.loc 1 194 43
 1469 0400 638C0700 		beqz	a5,.L18
 1470              	.LBB280:
 195:src/Riscv.cpp ****                 t->setDeblocked();
 1471              		.loc 1 195 17 is_stmt 1
 1472              	.LVL96:
 1473              	.LBB277:
 1474              	.LBB274:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1475              		.loc 4 69 22 is_stmt 0
 1476 0404 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1477              		.loc 4 69 9
 1478 0408 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1479              		.loc 4 70 9
 1480 040c E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1481              		.loc 4 70 22
 1482 0410 23B80400 		sd	zero,16(s1)
 1483 0414 6FF05FFB 		j	.L19
 1484              	.LVL97:
 1485              	.L18:
 1486              	.LBE274:
 1487              	.LBE277:
 1488              	.LBE280:
 200:src/Riscv.cpp **** 
 1489              		.loc 1 200 14 is_stmt 1
 1490              	.LBB281:
 1491              	.LBB282:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1492              		.loc 3 38 9
 1493              		.loc 3 38 16 is_stmt 0
 1494 0418 238C0400 		sb	zero,24(s1)
 1495              	.LVL98:
 1496              	.LBE282:
 1497              	.LBE281:
 202:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3y761g.s 			page 44


 1498              		.loc 1 202 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1499              		.loc 1 202 23 is_stmt 0
 1500 041c 63880400 		beqz	s1,.L21
 202:src/Riscv.cpp **** 
 1501              		.loc 1 202 20 discriminator 1
 1502 0420 13850400 		mv	a0,s1
 1503 0424 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1503      E7800000 
 1504              	.LVL99:
 1505              	.L21:
 204:src/Riscv.cpp ****             w_sepc(sepc);
 1506              		.loc 1 204 13 is_stmt 1
 1507              	.LBB283:
 1508              	.LBB284:
 191:src/../h/Riscv.hpp **** }
 1509              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1510              		.loc 2 191 77 is_stmt 0
 1511              	#APP
 1512              	# 191 "src/../h/Riscv.hpp" 1
 1513              		csrw sstatus, s4
 1514              	# 0 "" 2
 1515              	.LVL100:
 1516              	#NO_APP
 1517              	.LBE284:
 1518              	.LBE283:
 205:src/Riscv.cpp ****         }
 1519              		.loc 1 205 13 is_stmt 1
 1520              	.LBB285:
 1521              	.LBB286:
 121:src/../h/Riscv.hpp **** }
 1522              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1523              		.loc 2 121 65 is_stmt 0
 1524              	#APP
 1525              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1526              		csrw sepc, s3
 1527              	# 0 "" 2
 1528              		.loc 2 122 1
 1529              	#NO_APP
 1530 0434 6FF0DFC6 		j	.L3
 1531              	.LVL101:
 1532              	.L42:
 1533              	.LBE286:
 1534              	.LBE285:
 1535              	.LBE266:
 1536              	.LBB287:
 1537              	.LBB251:
 208:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1538              		.loc 1 208 13 is_stmt 1
 1539              	.LBB252:
 1540              	.LBB253:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1541              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/cc3y761g.s 			page 45


 1542              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1543              		.loc 2 115 64 is_stmt 0
 1544              	#APP
 1545              	# 115 "src/../h/Riscv.hpp" 1
 1546              		csrr a5, sepc
 1547              	# 0 "" 2
 1548              	#NO_APP
 1549 043c 233CF4F8 		sd	a5,-104(s0)
 116:src/../h/Riscv.hpp **** }
 1550              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1551              		.loc 2 116 12 is_stmt 0
 1552 0440 833484F9 		ld	s1,-104(s0)
 1553              	.LVL102:
 1554              	.LBE253:
 1555              	.LBE252:
 208:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1556              		.loc 1 208 38
 1557 0444 93844400 		addi	s1,s1,4
 1558              	.LVL103:
 209:src/Riscv.cpp **** 
 1559              		.loc 1 209 13 is_stmt 1
 1560              	.LBB254:
 1561              	.LBB255:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1562              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1563              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1564              		.loc 2 185 76 is_stmt 0
 1565              	#APP
 1566              	# 185 "src/../h/Riscv.hpp" 1
 1567              		csrr a5, sstatus
 1568              	# 0 "" 2
 1569              	#NO_APP
 1570 044c 2338F4F8 		sd	a5,-112(s0)
 186:src/../h/Riscv.hpp **** }
 1571              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1572              		.loc 2 186 12 is_stmt 0
 1573 0450 033904F9 		ld	s2,-112(s0)
 1574              	.LVL104:
 1575              	.LBE255:
 1576              	.LBE254:
 211:src/Riscv.cpp **** 
 1577              		.loc 1 211 13 is_stmt 1
 213:src/Riscv.cpp **** 
 1578              		.loc 1 213 13
 213:src/Riscv.cpp **** 
 1579              		.loc 1 213 48 is_stmt 0
 1580              	#APP
 1581              	# 213 "src/Riscv.cpp" 1
 215:src/Riscv.cpp **** 
 1582              		ld a1, 11*8(fp)
 1583              	# 0 "" 2
 1584              		.loc 1 215 13 is_stmt 1
GAS LISTING /tmp/cc3y761g.s 			page 46


 215:src/Riscv.cpp **** 
 1585              		.loc 1 215 56 is_stmt 0
 1586              	# 215 "src/Riscv.cpp" 1
 1587              		mv a0, a1
 1588              	# 0 "" 2
 1589              	.LVL105:
 217:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1590              		.loc 1 217 13 is_stmt 1
 219:src/Riscv.cpp ****                  ret = arg1->wait();
 1591              		.loc 1 219 13
 1592              	#NO_APP
 1593              	.LBB256:
 1594              	.LBB257:
  32:src/../h/KSemaphore.hpp **** 
 1595              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1596              		.loc 3 32 28 is_stmt 0
 1597 045c 83478501 		lbu	a5,24(a0)
 1598              	.LVL106:
 1599              	.LBE257:
 1600              	.LBE256:
 219:src/Riscv.cpp ****                  ret = arg1->wait();
 1601              		.loc 1 219 13
 1602 0460 639C0700 		bnez	a5,.L45
 223:src/Riscv.cpp ****             }
 1603              		.loc 1 223 20
 1604 0464 1305F0FF 		li	a0,-1
 1605              	.LVL107:
 1606              	.L23:
 225:src/Riscv.cpp **** 
 1607              		.loc 1 225 13 is_stmt 1
 225:src/Riscv.cpp **** 
 1608              		.loc 1 225 56 is_stmt 0
 1609              	#APP
 1610              	# 225 "src/Riscv.cpp" 1
 227:src/Riscv.cpp ****             w_sepc(sepc);
 1611              		mv a0, a0
 1612              	# 0 "" 2
 1613              		.loc 1 227 13 is_stmt 1
 1614              	.LVL108:
 1615              	#NO_APP
 1616              	.LBB258:
 1617              	.LBB259:
 191:src/../h/Riscv.hpp **** }
 1618              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1619              		.loc 2 191 77 is_stmt 0
 1620              	#APP
 1621              	# 191 "src/../h/Riscv.hpp" 1
 1622              		csrw sstatus, s2
 1623              	# 0 "" 2
 1624              	.LVL109:
 1625              	#NO_APP
 1626              	.LBE259:
 1627              	.LBE258:
 228:src/Riscv.cpp ****         }
 1628              		.loc 1 228 13 is_stmt 1
GAS LISTING /tmp/cc3y761g.s 			page 47


 1629              	.LBB260:
 1630              	.LBB261:
 121:src/../h/Riscv.hpp **** }
 1631              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1632              		.loc 2 121 65 is_stmt 0
 1633              	#APP
 1634              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1635              		csrw sepc, s1
 1636              	# 0 "" 2
 1637              		.loc 2 122 1
 1638              	#NO_APP
 1639 0474 6FF0DFC2 		j	.L3
 1640              	.LVL110:
 1641              	.L45:
 1642              	.LBE261:
 1643              	.LBE260:
 220:src/Riscv.cpp ****             }
 1644              		.loc 1 220 18 is_stmt 1
 220:src/Riscv.cpp ****             }
 1645              		.loc 1 220 34 is_stmt 0
 1646 0478 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1646      E7800000 
 1647              	.LVL111:
 1648 0480 6FF09FFE 		j	.L23
 1649              	.LVL112:
 1650              	.L43:
 1651              	.LBE251:
 1652              	.LBB262:
 1653              	.LBB237:
 231:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1654              		.loc 1 231 13 is_stmt 1
 1655              	.LBB238:
 1656              	.LBB239:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1657              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1658              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1659              		.loc 2 115 64 is_stmt 0
 1660              	#APP
 1661              	# 115 "src/../h/Riscv.hpp" 1
 1662              		csrr a5, sepc
 1663              	# 0 "" 2
 1664              	#NO_APP
 1665 0488 2334F4FA 		sd	a5,-88(s0)
 116:src/../h/Riscv.hpp **** }
 1666              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1667              		.loc 2 116 12 is_stmt 0
 1668 048c 833484FA 		ld	s1,-88(s0)
 1669              	.LVL113:
 1670              	.LBE239:
 1671              	.LBE238:
 231:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1672              		.loc 1 231 38
GAS LISTING /tmp/cc3y761g.s 			page 48


 1673 0490 93844400 		addi	s1,s1,4
 1674              	.LVL114:
 232:src/Riscv.cpp **** 
 1675              		.loc 1 232 13 is_stmt 1
 1676              	.LBB240:
 1677              	.LBB241:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1678              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1679              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1680              		.loc 2 185 76 is_stmt 0
 1681              	#APP
 1682              	# 185 "src/../h/Riscv.hpp" 1
 1683              		csrr a5, sstatus
 1684              	# 0 "" 2
 1685              	#NO_APP
 1686 0498 2330F4FA 		sd	a5,-96(s0)
 186:src/../h/Riscv.hpp **** }
 1687              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1688              		.loc 2 186 12 is_stmt 0
 1689 049c 033904FA 		ld	s2,-96(s0)
 1690              	.LVL115:
 1691              	.LBE241:
 1692              	.LBE240:
 234:src/Riscv.cpp **** 
 1693              		.loc 1 234 13 is_stmt 1
 236:src/Riscv.cpp **** 
 1694              		.loc 1 236 13
 236:src/Riscv.cpp **** 
 1695              		.loc 1 236 48 is_stmt 0
 1696              	#APP
 1697              	# 236 "src/Riscv.cpp" 1
 238:src/Riscv.cpp **** 
 1698              		ld a1, 11*8(fp)
 1699              	# 0 "" 2
 1700              		.loc 1 238 13 is_stmt 1
 238:src/Riscv.cpp **** 
 1701              		.loc 1 238 56 is_stmt 0
 1702              	# 238 "src/Riscv.cpp" 1
 1703              		mv a0, a1
 1704              	# 0 "" 2
 1705              	.LVL116:
 240:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1706              		.loc 1 240 13 is_stmt 1
 241:src/Riscv.cpp ****                 arg1->signal();
 1707              		.loc 1 241 13
 1708              	#NO_APP
 1709              	.LBB242:
 1710              	.LBB243:
  32:src/../h/KSemaphore.hpp **** 
 1711              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1712              		.loc 3 32 28 is_stmt 0
 1713 04a8 83478501 		lbu	a5,24(a0)
 1714              	.LVL117:
GAS LISTING /tmp/cc3y761g.s 			page 49


 1715              	.LBE243:
 1716              	.LBE242:
 241:src/Riscv.cpp ****                 arg1->signal();
 1717              		.loc 1 241 13
 1718 04ac 639C0700 		bnez	a5,.L46
 246:src/Riscv.cpp ****             }
 1719              		.loc 1 246 21
 1720 04b0 9307F0FF 		li	a5,-1
 1721              	.LVL118:
 1722              	.L25:
 249:src/Riscv.cpp **** 
 1723              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp **** 
 1724              		.loc 1 249 56 is_stmt 0
 1725              	#APP
 1726              	# 249 "src/Riscv.cpp" 1
 251:src/Riscv.cpp ****             w_sepc(sepc);
 1727              		mv a0, a5
 1728              	# 0 "" 2
 1729              		.loc 1 251 13 is_stmt 1
 1730              	.LVL119:
 1731              	#NO_APP
 1732              	.LBB244:
 1733              	.LBB245:
 191:src/../h/Riscv.hpp **** }
 1734              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1735              		.loc 2 191 77 is_stmt 0
 1736              	#APP
 1737              	# 191 "src/../h/Riscv.hpp" 1
 1738              		csrw sstatus, s2
 1739              	# 0 "" 2
 1740              	.LVL120:
 1741              	#NO_APP
 1742              	.LBE245:
 1743              	.LBE244:
 252:src/Riscv.cpp ****         }
 1744              		.loc 1 252 13 is_stmt 1
 1745              	.LBB246:
 1746              	.LBB247:
 121:src/../h/Riscv.hpp **** }
 1747              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1748              		.loc 2 121 65 is_stmt 0
 1749              	#APP
 1750              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1751              		csrw sepc, s1
 1752              	# 0 "" 2
 1753              		.loc 2 122 1
 1754              	#NO_APP
 1755 04c0 6FF01FBE 		j	.L3
 1756              	.LVL121:
 1757              	.L46:
 1758              	.LBE247:
 1759              	.LBE246:
 242:src/Riscv.cpp ****                 ret=0;
GAS LISTING /tmp/cc3y761g.s 			page 50


 1760              		.loc 1 242 17 is_stmt 1
 242:src/Riscv.cpp ****                 ret=0;
 1761              		.loc 1 242 29 is_stmt 0
 1762 04c4 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1762      E7800000 
 1763              	.LVL122:
 243:src/Riscv.cpp ****             }
 1764              		.loc 1 243 17 is_stmt 1
 243:src/Riscv.cpp ****             }
 1765              		.loc 1 243 20 is_stmt 0
 1766 04cc 93070000 		li	a5,0
 1767 04d0 6FF05FFE 		j	.L25
 1768              	.LVL123:
 1769              	.L44:
 1770              	.LBE237:
 1771              	.LBB248:
 1772              	.LBB223:
 255:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1773              		.loc 1 255 13 is_stmt 1
 1774              	.LBB224:
 1775              	.LBB225:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1776              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1777              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1778              		.loc 2 115 64 is_stmt 0
 1779              	#APP
 1780              	# 115 "src/../h/Riscv.hpp" 1
 1781              		csrr a5, sepc
 1782              	# 0 "" 2
 1783              	#NO_APP
 1784 04d8 233CF4FA 		sd	a5,-72(s0)
 116:src/../h/Riscv.hpp **** }
 1785              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1786              		.loc 2 116 12 is_stmt 0
 1787 04dc 833484FB 		ld	s1,-72(s0)
 1788              	.LVL124:
 1789              	.LBE225:
 1790              	.LBE224:
 255:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1791              		.loc 1 255 38
 1792 04e0 93844400 		addi	s1,s1,4
 1793              	.LVL125:
 256:src/Riscv.cpp **** 
 1794              		.loc 1 256 13 is_stmt 1
 1795              	.LBB226:
 1796              	.LBB227:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1797              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1798              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1799              		.loc 2 185 76 is_stmt 0
 1800              	#APP
 1801              	# 185 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cc3y761g.s 			page 51


 1802              		csrr a5, sstatus
 1803              	# 0 "" 2
 1804              	#NO_APP
 1805 04e8 2338F4FA 		sd	a5,-80(s0)
 186:src/../h/Riscv.hpp **** }
 1806              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1807              		.loc 2 186 12 is_stmt 0
 1808 04ec 033904FB 		ld	s2,-80(s0)
 1809              	.LVL126:
 1810              	.LBE227:
 1811              	.LBE226:
 259:src/Riscv.cpp ****             char c = __getc();
 1812              		.loc 1 259 13 is_stmt 1
 259:src/Riscv.cpp ****             char c = __getc();
 1813              		.loc 1 259 27 is_stmt 0
 1814 04f0 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1814      83B70700 
 1815              	.LVL127:
 1816              	.LBB228:
 1817              	.LBB229:
 133:src/../h/Riscv.hpp **** }
 1818              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1819              		.loc 2 133 69 is_stmt 0
 1820              	#APP
 1821              	# 133 "src/../h/Riscv.hpp" 1
 1822              		csrw stvec, a5
 1823              	# 0 "" 2
 1824              	.LVL128:
 1825              	#NO_APP
 1826              	.LBE229:
 1827              	.LBE228:
 260:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1828              		.loc 1 260 13 is_stmt 1
 260:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1829              		.loc 1 260 28 is_stmt 0
 1830 04fc 97000000 		call	__getc@plt
 1830      E7800000 
 1831              	.LVL129:
 261:src/Riscv.cpp **** 
 1832              		.loc 1 261 13 is_stmt 1
 261:src/Riscv.cpp **** 
 1833              		.loc 1 261 27 is_stmt 0
 1834 0504 17070000 		la	a4,_ZN5Riscv14supervisorTrapEv
 1834      03370700 
 1835              	.LVL130:
 1836              	.LBB230:
 1837              	.LBB231:
 133:src/../h/Riscv.hpp **** }
 1838              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1839              		.loc 2 133 69 is_stmt 0
 1840              	#APP
 1841              	# 133 "src/../h/Riscv.hpp" 1
 1842              		csrw stvec, a4
 1843              	# 0 "" 2
GAS LISTING /tmp/cc3y761g.s 			page 52


 1844              	.LVL131:
 1845              	#NO_APP
 1846              	.LBE231:
 1847              	.LBE230:
 263:src/Riscv.cpp **** 
 1848              		.loc 1 263 13 is_stmt 1
 263:src/Riscv.cpp **** 
 1849              		.loc 1 263 54 is_stmt 0
 1850              	#APP
 1851              	# 263 "src/Riscv.cpp" 1
 266:src/Riscv.cpp ****             w_sepc(sepc);
 1852              		mv a0, a0
 1853              	# 0 "" 2
 1854              		.loc 1 266 13 is_stmt 1
 1855              	.LVL132:
 1856              	#NO_APP
 1857              	.LBB232:
 1858              	.LBB233:
 191:src/../h/Riscv.hpp **** }
 1859              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1860              		.loc 2 191 77 is_stmt 0
 1861              	#APP
 1862              	# 191 "src/../h/Riscv.hpp" 1
 1863              		csrw sstatus, s2
 1864              	# 0 "" 2
 1865              	.LVL133:
 1866              	#NO_APP
 1867              	.LBE233:
 1868              	.LBE232:
 267:src/Riscv.cpp ****         }
 1869              		.loc 1 267 13 is_stmt 1
 1870              	.LBB234:
 1871              	.LBB235:
 121:src/../h/Riscv.hpp **** }
 1872              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1873              		.loc 2 121 65 is_stmt 0
 1874              	#APP
 1875              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1876              		csrw sepc, s1
 1877              	# 0 "" 2
 1878              		.loc 2 122 1
 1879              	#NO_APP
 1880 051c 6FF05FB8 		j	.L3
 1881              	.LBE235:
 1882              	.LBE234:
 1883              	.LBE223:
 1884              	.LBE248:
 1885              	.LBE262:
 1886              	.LBE287:
 1887              	.LBE307:
 1888              	.LBE322:
 1889              	.LBE338:
 1890              	.LBE355:
 1891              	.LBE373:
GAS LISTING /tmp/cc3y761g.s 			page 53


 1892              	.LBE392:
 1893              	.LBE404:
 1894              	.LBE417:
 1895              	.LBE431:
 1896              	.LBE448:
 1897              	.LBE464:
 1898              		.cfi_endproc
 1899              	.LFE55:
 1901              		.align	2
 1902              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1904              	_ZN5Riscv17handleTrapConsoleEv:
 1905              	.LFB56:
 292:src/Riscv.cpp **** 
 293:src/Riscv.cpp **** 
 294:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1906              		.loc 1 294 33 is_stmt 1
 1907              		.cfi_startproc
 1908 0520 130101FE 		addi	sp,sp,-32
 1909              		.cfi_def_cfa_offset 32
 1910 0524 233C1100 		sd	ra,24(sp)
 1911 0528 23388100 		sd	s0,16(sp)
 1912              		.cfi_offset 1, -8
 1913              		.cfi_offset 8, -16
 1914 052c 13040102 		addi	s0,sp,32
 1915              		.cfi_def_cfa 8, 0
 295:src/Riscv.cpp ****     uint64 scause = r_scause();
 1916              		.loc 1 295 5
 1917              	.LBB465:
 1918              	.LBB466:
 102:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1919              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return scause;
 1920              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return scause;
 1921              		.loc 2 103 72 is_stmt 0
 1922              	#APP
 1923              	# 103 "src/../h/Riscv.hpp" 1
 1924              		csrr a5, scause
 1925              	# 0 "" 2
 1926              	#NO_APP
 1927 0534 2334F4FE 		sd	a5,-24(s0)
 104:src/../h/Riscv.hpp **** }
 1928              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 1929              		.loc 2 104 12 is_stmt 0
 1930 0538 033784FE 		ld	a4,-24(s0)
 1931              	.LVL134:
 1932              	.LBE466:
 1933              	.LBE465:
 296:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1934              		.loc 1 296 5 is_stmt 1
 1935 053c 9307F0FF 		li	a5,-1
 1936 0540 9397F703 		slli	a5,a5,63
 1937 0544 93879700 		addi	a5,a5,9
 1938 0548 6302F702 		beq	a4,a5,.L51
 297:src/Riscv.cpp ****         console_handler();
 298:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
GAS LISTING /tmp/cc3y761g.s 			page 54


 299:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1939              		.loc 1 299 12
 1940 054c 9307F0FF 		li	a5,-1
 1941 0550 9397F703 		slli	a5,a5,63
 1942 0554 93871700 		addi	a5,a5,1
 1943 0558 6304F702 		beq	a4,a5,.L52
 1944              	.LVL135:
 1945              	.L47:
 300:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 301:src/Riscv.cpp ****     }
 302:src/Riscv.cpp **** 
 303:src/Riscv.cpp **** }
 1946              		.loc 1 303 1 is_stmt 0
 1947 055c 83308101 		ld	ra,24(sp)
 1948              		.cfi_remember_state
 1949              		.cfi_restore 1
 1950 0560 03340101 		ld	s0,16(sp)
 1951              		.cfi_restore 8
 1952              		.cfi_def_cfa 2, 32
 1953 0564 13010102 		addi	sp,sp,32
 1954              		.cfi_def_cfa_offset 0
 1955 0568 67800000 		jr	ra
 1956              	.LVL136:
 1957              	.L51:
 1958              		.cfi_restore_state
 297:src/Riscv.cpp ****         console_handler();
 1959              		.loc 1 297 9 is_stmt 1
 297:src/Riscv.cpp ****         console_handler();
 1960              		.loc 1 297 24 is_stmt 0
 1961 056c 97000000 		call	console_handler@plt
 1961      E7800000 
 1962              	.LVL137:
 298:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1963              		.loc 1 298 9 is_stmt 1
 1964              	.LBB467:
 1965              	.LBB468:
 155:src/../h/Riscv.hpp **** }
 1966              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1967              		.loc 2 155 64 is_stmt 0
 1968 0574 93070020 		li	a5,512
 1969              	#APP
 1970              	# 155 "src/../h/Riscv.hpp" 1
 156:src/../h/Riscv.hpp **** 
 1971              		csrc sip, a5
 1972              	# 0 "" 2
 1973              		.loc 2 156 1
 1974              	#NO_APP
 1975 057c 6FF01FFE 		j	.L47
 1976              	.LVL138:
 1977              	.L52:
 1978              	.LBE468:
 1979              	.LBE467:
 300:src/Riscv.cpp ****     }
 1980              		.loc 1 300 9 is_stmt 1
 1981              	.LBB469:
 1982              	.LBB470:
GAS LISTING /tmp/cc3y761g.s 			page 55


 155:src/../h/Riscv.hpp **** }
 1983              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1984              		.loc 2 155 64 is_stmt 0
 1985 0580 93072000 		li	a5,2
 1986              	#APP
 1987              	# 155 "src/../h/Riscv.hpp" 1
 1988              		csrc sip, a5
 1989              	# 0 "" 2
 1990              	.LVL139:
 1991              	#NO_APP
 1992              	.LBE470:
 1993              	.LBE469:
 1994              		.loc 1 303 1
 1995 0588 6FF05FFD 		j	.L47
 1996              		.cfi_endproc
 1997              	.LFE56:
 1999              		.align	2
 2000              		.globl	_ZN5Riscv10initKernelEv
 2002              	_ZN5Riscv10initKernelEv:
 2003              	.LFB57:
 304:src/Riscv.cpp **** 
 305:src/Riscv.cpp **** void Riscv::initKernel() {
 2004              		.loc 1 305 26 is_stmt 1
 2005              		.cfi_startproc
 2006 058c 130101FE 		addi	sp,sp,-32
 2007              		.cfi_def_cfa_offset 32
 2008 0590 233C1100 		sd	ra,24(sp)
 2009 0594 23388100 		sd	s0,16(sp)
 2010 0598 23349100 		sd	s1,8(sp)
 2011              		.cfi_offset 1, -8
 2012              		.cfi_offset 8, -16
 2013              		.cfi_offset 9, -24
 2014 059c 13040102 		addi	s0,sp,32
 2015              		.cfi_def_cfa 8, 0
 306:src/Riscv.cpp ****     _thread* main = (_thread*)MemoryAllocator::kmem_alloc(sizeof(_thread));
 2016              		.loc 1 306 5
 2017              		.loc 1 306 58 is_stmt 0
 2018 05a0 13050005 		li	a0,80
 2019 05a4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 2019      E7800000 
 2020              	.LVL140:
 2021 05ac 93040500 		mv	s1,a0
 2022              	.LVL141:
 307:src/Riscv.cpp ****     _thread::running=main;
 2023              		.loc 1 307 5 is_stmt 1
 2024              		.loc 1 307 21 is_stmt 0
 2025 05b0 97070000 		la	a5,_ZN7_thread7runningE
 2025      83B70700 
 2026 05b8 23B0A700 		sd	a0,0(a5)
 308:src/Riscv.cpp ****     uint64 * stack = (uint64*)MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
 2027              		.loc 1 308 5 is_stmt 1
 2028              		.loc 1 308 58 is_stmt 0
 2029 05bc 37850000 		li	a0,32768
 2030 05c0 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 2030      E7800000 
 2031              	.LVL142:
GAS LISTING /tmp/cc3y761g.s 			page 56


 2032 05c8 93050500 		mv	a1,a0
 2033              	.LVL143:
 309:src/Riscv.cpp ****     main->setStack(stack);
 2034              		.loc 1 309 5 is_stmt 1
 2035              		.loc 1 309 19 is_stmt 0
 2036 05cc 13850400 		mv	a0,s1
 2037              	.LVL144:
 2038 05d0 97000000 		call	_ZN7_thread8setStackEPm@plt
 2038      E7800000 
 2039              	.LVL145:
 310:src/Riscv.cpp **** //    __asm__ volatile("ecall");
 311:src/Riscv.cpp **** }...
 2040              		.loc 1 311 1
 2041 05d8 83308101 		ld	ra,24(sp)
 2042              		.cfi_restore 1
 2043 05dc 03340101 		ld	s0,16(sp)
 2044              		.cfi_restore 8
 2045              		.cfi_def_cfa 2, 32
 2046 05e0 83348100 		ld	s1,8(sp)
 2047              		.cfi_restore 9
 2048              	.LVL146:
 2049 05e4 13010102 		addi	sp,sp,32
 2050              		.cfi_def_cfa_offset 0
 2051 05e8 67800000 		jr	ra
 2052              		.cfi_endproc
 2053              	.LFE57:
 2055              		.globl	_ZN5Riscv9privilegeE
 2056              		.bss
 2057              		.set	.LANCHOR0,. + 0
 2060              	_ZN5Riscv9privilegeE:
 2061 0000 00       		.zero	1
 2062              		.text
 2063              	.Letext0:
 2064              		.file 6 "src/../h/../lib/hw.h"
 2065              		.file 7 "src/../h/DoublyLinkedList.hpp"
 2066              		.file 8 "src/../h/MemoryAllocator.hpp"
 2067              		.file 9 "src/../h/Scheduler.hpp"
 2068              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/cc3y761g.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc3y761g.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3y761g.s:13     .text:0000000000000000 .L0 
     /tmp/cc3y761g.s:14     .text:0000000000000000 .L0 
     /tmp/cc3y761g.s:15     .text:0000000000000004 .L0 
     /tmp/cc3y761g.s:17     .text:0000000000000008 .L0 
     /tmp/cc3y761g.s:19     .text:000000000000000c .L0 
     /tmp/cc3y761g.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/cc3y761g.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/cc3y761g.s:33     .text:0000000000000014 .L0 
     /tmp/cc3y761g.s:34     .text:0000000000000018 .L0 
     /tmp/cc3y761g.s:35     .text:0000000000000018 .L0 
     /tmp/cc3y761g.s:37     .text:000000000000001c .L0 
     /tmp/cc3y761g.s:39     .text:0000000000000020 .L0 
     /tmp/cc3y761g.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3y761g.s:48     .text:0000000000000020 .L0 
     /tmp/cc3y761g.s:49     .text:0000000000000020 .L0 
     /tmp/cc3y761g.s:50     .text:0000000000000024 .L0 
     /tmp/cc3y761g.s:57     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:58     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:59     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:60     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:61     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:62     .text:000000000000003c .L0 
     /tmp/cc3y761g.s:64     .text:0000000000000040 .L0 
     /tmp/cc3y761g.s:69     .text:0000000000000040 .L0 
     /tmp/cc3y761g.s:70     .text:0000000000000040 .L0 
     /tmp/cc3y761g.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000040 .L0 
     /tmp/cc3y761g.s:79     .text:0000000000000048 .L0 
     /tmp/cc3y761g.s:80     .text:0000000000000048 .L0 
     /tmp/cc3y761g.s:85     .text:000000000000004c .L0 
     /tmp/cc3y761g.s:86     .text:000000000000004c .L0 
     /tmp/cc3y761g.s:87     .text:000000000000004c .L0 
       src/Riscv.cpp:26     .text:000000000000004c .L0 
     /tmp/cc3y761g.s:96     .text:0000000000000050 .L0 
     /tmp/cc3y761g.s:104    .text:0000000000000060 .L0 
     /tmp/cc3y761g.s:105    .text:0000000000000060 .L0 
     /tmp/cc3y761g.s:107    .text:0000000000000068 .L0 
     /tmp/cc3y761g.s:112    .text:000000000000006c .L0 
     /tmp/cc3y761g.s:113    .text:000000000000006c .L0 
     /tmp/cc3y761g.s:114    .text:000000000000006c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000006c .L0 
     /tmp/cc3y761g.s:122    .text:0000000000000074 .L0 
     /tmp/cc3y761g.s:123    .text:0000000000000074 .L0 
     /tmp/cc3y761g.s:130    .text:0000000000000078 .L0 
     /tmp/cc3y761g.s:131    .text:0000000000000078 .L0 
     /tmp/cc3y761g.s:132    .text:0000000000000078 .L0 
     /tmp/cc3y761g.s:143    .text:0000000000000080 .L0 
     /tmp/cc3y761g.s:144    .text:0000000000000080 .L0 
     /tmp/cc3y761g.s:147    .text:000000000000008c .L0 
     /tmp/cc3y761g.s:148    .text:000000000000008c .L0 
     /tmp/cc3y761g.s:153    .text:0000000000000090 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000090 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 58


     /tmp/cc3y761g.s:160    .text:0000000000000094 .L0 
     /tmp/cc3y761g.s:170    .text:0000000000000098 .L0 
     /tmp/cc3y761g.s:171    .text:0000000000000098 .L0 
     /tmp/cc3y761g.s:172    .text:0000000000000098 .L0 
     /tmp/cc3y761g.s:184    .text:00000000000000a0 .L0 
     /tmp/cc3y761g.s:185    .text:00000000000000a4 .L0 
     /tmp/cc3y761g.s:186    .text:00000000000000a4 .L0 
     /tmp/cc3y761g.s:188    .text:00000000000000a8 .L0 
     /tmp/cc3y761g.s:189    .text:00000000000000a8 .L0 
     /tmp/cc3y761g.s:191    .text:00000000000000ac .L0 
     /tmp/cc3y761g.s:193    .text:00000000000000b0 .L0 
     /tmp/cc3y761g.s:195    .text:00000000000000b4 .L0 
     /tmp/cc3y761g.s:197    .text:00000000000000b8 .L0 
     /tmp/cc3y761g.s:199    .text:00000000000000bc .L0 
     /tmp/cc3y761g.s:203    .text:00000000000000c0 .L0 
     /tmp/cc3y761g.s:208    .text:00000000000000c0 .L0 
     /tmp/cc3y761g.s:220    .text:00000000000000d0 .L0 
     /tmp/cc3y761g.s:221    .text:00000000000000d0 .L0 
     /tmp/cc3y761g.s:224    .text:00000000000000d4 .L0 
     /tmp/cc3y761g.s:236    .text:00000000000000dc .L0 
     /tmp/cc3y761g.s:251    .text:00000000000000e4 .L0 
     /tmp/cc3y761g.s:265    .text:00000000000000ec .L0 
     /tmp/cc3y761g.s:281    .text:00000000000000f4 .L0 
     /tmp/cc3y761g.s:299    .text:00000000000000fc .L0 
     /tmp/cc3y761g.s:319    .text:0000000000000104 .L0 
     /tmp/cc3y761g.s:341    .text:000000000000010c .L0 
     /tmp/cc3y761g.s:365    .text:0000000000000114 .L0 
     /tmp/cc3y761g.s:391    .text:000000000000011c .L0 
     /tmp/cc3y761g.s:419    .text:0000000000000124 .L0 
     /tmp/cc3y761g.s:449    .text:000000000000012c .L0 
     /tmp/cc3y761g.s:481    .text:0000000000000134 .L0 
     /tmp/cc3y761g.s:487    .text:000000000000013c .L0 
     /tmp/cc3y761g.s:488    .text:000000000000013c .L0 
     /tmp/cc3y761g.s:489    .text:000000000000013c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000013c .L0 
     /tmp/cc3y761g.s:497    .text:0000000000000144 .L0 
     /tmp/cc3y761g.s:498    .text:0000000000000144 .L0 
     /tmp/cc3y761g.s:503    .text:0000000000000148 .L0 
     /tmp/cc3y761g.s:508    .text:000000000000014c .L0 
     /tmp/cc3y761g.s:509    .text:000000000000014c .L0 
     /tmp/cc3y761g.s:510    .text:000000000000014c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000014c .L0 
     /tmp/cc3y761g.s:518    .text:0000000000000154 .L0 
     /tmp/cc3y761g.s:519    .text:0000000000000154 .L0 
     /tmp/cc3y761g.s:524    .text:0000000000000158 .L0 
     /tmp/cc3y761g.s:525    .text:0000000000000158 .L0 
       src/Riscv.cpp:274    .text:0000000000000158 .L0 
     /tmp/cc3y761g.s:531    .text:000000000000015c .L0 
       src/Riscv.cpp:276    .text:000000000000015c .L0 
     /tmp/cc3y761g.s:539    .text:0000000000000164 .L0 
     /tmp/cc3y761g.s:540    .text:0000000000000164 .L0 
     /tmp/cc3y761g.s:545    .text:000000000000016c .L0 
  src/../h/Riscv.hpp:133    .text:000000000000016c .L0 
     /tmp/cc3y761g.s:555    .text:0000000000000170 .L0 
     /tmp/cc3y761g.s:556    .text:0000000000000170 .L0 
     /tmp/cc3y761g.s:559    .text:0000000000000178 .L0 
     /tmp/cc3y761g.s:560    .text:0000000000000178 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 59


     /tmp/cc3y761g.s:565    .text:0000000000000180 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000180 .L0 
     /tmp/cc3y761g.s:577    .text:0000000000000184 .L0 
     /tmp/cc3y761g.s:578    .text:0000000000000184 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000184 .L0 
     /tmp/cc3y761g.s:590    .text:0000000000000188 .L0 
     /tmp/cc3y761g.s:591    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000188 .L0 
     /tmp/cc3y761g.s:617    .text:000000000000018c .L0 
     /tmp/cc3y761g.s:624    .text:0000000000000190 .L0 
     /tmp/cc3y761g.s:625    .text:0000000000000190 .L0 
     /tmp/cc3y761g.s:636    .text:000000000000019c .L0 
     /tmp/cc3y761g.s:637    .text:000000000000019c .L0 
     /tmp/cc3y761g.s:638    .text:000000000000019c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000019c .L0 
     /tmp/cc3y761g.s:646    .text:00000000000001a4 .L0 
     /tmp/cc3y761g.s:647    .text:00000000000001a4 .L0 
     /tmp/cc3y761g.s:651    .text:00000000000001a8 .L0 
     /tmp/cc3y761g.s:656    .text:00000000000001ac .L0 
     /tmp/cc3y761g.s:657    .text:00000000000001ac .L0 
     /tmp/cc3y761g.s:658    .text:00000000000001ac .L0 
  src/../h/Riscv.hpp:185    .text:00000000000001ac .L0 
     /tmp/cc3y761g.s:666    .text:00000000000001b4 .L0 
     /tmp/cc3y761g.s:667    .text:00000000000001b4 .L0 
     /tmp/cc3y761g.s:672    .text:00000000000001b8 .L0 
     /tmp/cc3y761g.s:673    .text:00000000000001b8 .L0 
     /tmp/cc3y761g.s:674    .text:00000000000001b8 .L0 
     /tmp/cc3y761g.s:675    .text:00000000000001b8 .L0 
     /tmp/cc3y761g.s:676    .text:00000000000001b8 .L0 
       src/Riscv.cpp:65     .text:00000000000001b8 .L0 
     /tmp/cc3y761g.s:682    .text:00000000000001bc .L0 
       src/Riscv.cpp:66     .text:00000000000001bc .L0 
     /tmp/cc3y761g.s:687    .text:00000000000001c0 .L0 
       src/Riscv.cpp:67     .text:00000000000001c0 .L0 
     /tmp/cc3y761g.s:692    .text:00000000000001c4 .L0 
       src/Riscv.cpp:68     .text:00000000000001c4 .L0 
     /tmp/cc3y761g.s:697    .text:00000000000001c8 .L0 
       src/Riscv.cpp:71     .text:00000000000001c8 .L0 
     /tmp/cc3y761g.s:703    .text:00000000000001cc .L0 
       src/Riscv.cpp:72     .text:00000000000001cc .L0 
     /tmp/cc3y761g.s:709    .text:00000000000001d0 .L0 
       src/Riscv.cpp:73     .text:00000000000001d0 .L0 
     /tmp/cc3y761g.s:715    .text:00000000000001d4 .L0 
       src/Riscv.cpp:74     .text:00000000000001d4 .L0 
     /tmp/cc3y761g.s:721    .text:00000000000001d8 .L0 
     /tmp/cc3y761g.s:723    .text:00000000000001d8 .L0 
     /tmp/cc3y761g.s:726    .text:00000000000001e0 .L0 
     /tmp/cc3y761g.s:727    .text:00000000000001e0 .L0 
     /tmp/cc3y761g.s:729    .text:00000000000001e4 .L0 
     /tmp/cc3y761g.s:730    .text:00000000000001e4 .L0 
     /tmp/cc3y761g.s:732    .text:00000000000001e8 .L0 
     /tmp/cc3y761g.s:736    .text:00000000000001ec .L0 
       src/Riscv.cpp:86     .text:00000000000001ec .L0 
     /tmp/cc3y761g.s:746    .text:00000000000001f0 .L0 
     /tmp/cc3y761g.s:747    .text:00000000000001f0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000001f0 .L0 
     /tmp/cc3y761g.s:759    .text:00000000000001f4 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 60


     /tmp/cc3y761g.s:760    .text:00000000000001f4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000001f4 .L0 
     /tmp/cc3y761g.s:767    .text:00000000000001f8 .L0 
     /tmp/cc3y761g.s:773    .text:00000000000001fc .L0 
     /tmp/cc3y761g.s:784    .text:0000000000000204 .L0 
     /tmp/cc3y761g.s:785    .text:0000000000000204 .L0 
     /tmp/cc3y761g.s:786    .text:0000000000000204 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000204 .L0 
     /tmp/cc3y761g.s:794    .text:000000000000020c .L0 
     /tmp/cc3y761g.s:795    .text:000000000000020c .L0 
     /tmp/cc3y761g.s:800    .text:0000000000000210 .L0 
     /tmp/cc3y761g.s:805    .text:0000000000000214 .L0 
     /tmp/cc3y761g.s:806    .text:0000000000000214 .L0 
     /tmp/cc3y761g.s:807    .text:0000000000000214 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000214 .L0 
     /tmp/cc3y761g.s:815    .text:000000000000021c .L0 
     /tmp/cc3y761g.s:816    .text:000000000000021c .L0 
     /tmp/cc3y761g.s:821    .text:0000000000000220 .L0 
       src/Riscv.cpp:95     .text:0000000000000220 .L0 
     /tmp/cc3y761g.s:827    .text:0000000000000224 .L0 
       src/Riscv.cpp:97     .text:0000000000000224 .L0 
     /tmp/cc3y761g.s:833    .text:0000000000000228 .L0 
     /tmp/cc3y761g.s:835    .text:0000000000000228 .L0 
     /tmp/cc3y761g.s:840    .text:0000000000000234 .L0 
       src/Riscv.cpp:101    .text:0000000000000234 .L0 
     /tmp/cc3y761g.s:850    .text:0000000000000238 .L0 
     /tmp/cc3y761g.s:851    .text:0000000000000238 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000238 .L0 
     /tmp/cc3y761g.s:863    .text:000000000000023c .L0 
     /tmp/cc3y761g.s:864    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:121    .text:000000000000023c .L0 
     /tmp/cc3y761g.s:871    .text:0000000000000240 .L0 
     /tmp/cc3y761g.s:882    .text:0000000000000244 .L0 
     /tmp/cc3y761g.s:883    .text:0000000000000244 .L0 
     /tmp/cc3y761g.s:884    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000244 .L0 
     /tmp/cc3y761g.s:892    .text:000000000000024c .L0 
     /tmp/cc3y761g.s:893    .text:000000000000024c .L0 
     /tmp/cc3y761g.s:898    .text:0000000000000250 .L0 
     /tmp/cc3y761g.s:903    .text:0000000000000254 .L0 
     /tmp/cc3y761g.s:904    .text:0000000000000254 .L0 
     /tmp/cc3y761g.s:905    .text:0000000000000254 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000254 .L0 
     /tmp/cc3y761g.s:913    .text:000000000000025c .L0 
     /tmp/cc3y761g.s:914    .text:000000000000025c .L0 
     /tmp/cc3y761g.s:919    .text:0000000000000260 .L0 
       src/Riscv.cpp:110    .text:0000000000000260 .L0 
     /tmp/cc3y761g.s:925    .text:0000000000000264 .L0 
       src/Riscv.cpp:112    .text:0000000000000264 .L0 
     /tmp/cc3y761g.s:931    .text:0000000000000268 .L0 
     /tmp/cc3y761g.s:933    .text:0000000000000268 .L0 
     /tmp/cc3y761g.s:936    .text:0000000000000270 .L0 
       src/Riscv.cpp:114    .text:0000000000000270 .L0 
     /tmp/cc3y761g.s:946    .text:0000000000000274 .L0 
     /tmp/cc3y761g.s:947    .text:0000000000000274 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000274 .L0 
     /tmp/cc3y761g.s:959    .text:0000000000000278 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 61


     /tmp/cc3y761g.s:960    .text:0000000000000278 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000278 .L0 
     /tmp/cc3y761g.s:967    .text:000000000000027c .L0 
     /tmp/cc3y761g.s:978    .text:0000000000000280 .L0 
     /tmp/cc3y761g.s:979    .text:0000000000000280 .L0 
     /tmp/cc3y761g.s:980    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000280 .L0 
     /tmp/cc3y761g.s:988    .text:0000000000000288 .L0 
     /tmp/cc3y761g.s:989    .text:0000000000000288 .L0 
     /tmp/cc3y761g.s:994    .text:000000000000028c .L0 
     /tmp/cc3y761g.s:999    .text:0000000000000290 .L0 
     /tmp/cc3y761g.s:1000   .text:0000000000000290 .L0 
     /tmp/cc3y761g.s:1001   .text:0000000000000290 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000290 .L0 
     /tmp/cc3y761g.s:1009   .text:0000000000000298 .L0 
     /tmp/cc3y761g.s:1010   .text:0000000000000298 .L0 
     /tmp/cc3y761g.s:1015   .text:000000000000029c .L0 
     /tmp/cc3y761g.s:1016   .text:000000000000029c .L0 
     /tmp/cc3y761g.s:1019   .text:00000000000002a8 .L0 
     /tmp/cc3y761g.s:1022   .text:00000000000002b0 .L0 
     /tmp/cc3y761g.s:1023   .text:00000000000002b0 .L0 
     /tmp/cc3y761g.s:1028   .text:00000000000002b8 .L0 
     /tmp/cc3y761g.s:1029   .text:00000000000002b8 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002b8 .L0 
     /tmp/cc3y761g.s:1041   .text:00000000000002bc .L0 
     /tmp/cc3y761g.s:1042   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002bc .L0 
     /tmp/cc3y761g.s:1049   .text:00000000000002c0 .L0 
     /tmp/cc3y761g.s:1060   .text:00000000000002c4 .L0 
     /tmp/cc3y761g.s:1061   .text:00000000000002c4 .L0 
     /tmp/cc3y761g.s:1062   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002c4 .L0 
     /tmp/cc3y761g.s:1070   .text:00000000000002cc .L0 
     /tmp/cc3y761g.s:1071   .text:00000000000002cc .L0 
     /tmp/cc3y761g.s:1076   .text:00000000000002d0 .L0 
     /tmp/cc3y761g.s:1081   .text:00000000000002d4 .L0 
     /tmp/cc3y761g.s:1082   .text:00000000000002d4 .L0 
     /tmp/cc3y761g.s:1083   .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002d4 .L0 
     /tmp/cc3y761g.s:1091   .text:00000000000002dc .L0 
     /tmp/cc3y761g.s:1092   .text:00000000000002dc .L0 
     /tmp/cc3y761g.s:1097   .text:00000000000002e0 .L0 
     /tmp/cc3y761g.s:1098   .text:00000000000002e0 .L0 
     /tmp/cc3y761g.s:1103   .text:00000000000002e8 .L0 
     /tmp/cc3y761g.s:1104   .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002e8 .L0 
     /tmp/cc3y761g.s:1116   .text:00000000000002ec .L0 
     /tmp/cc3y761g.s:1117   .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002ec .L0 
     /tmp/cc3y761g.s:1124   .text:00000000000002f0 .L0 
     /tmp/cc3y761g.s:1135   .text:00000000000002f4 .L0 
     /tmp/cc3y761g.s:1136   .text:00000000000002f4 .L0 
     /tmp/cc3y761g.s:1137   .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002f4 .L0 
     /tmp/cc3y761g.s:1145   .text:00000000000002fc .L0 
     /tmp/cc3y761g.s:1146   .text:00000000000002fc .L0 
     /tmp/cc3y761g.s:1151   .text:0000000000000300 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 62


     /tmp/cc3y761g.s:1156   .text:0000000000000304 .L0 
     /tmp/cc3y761g.s:1157   .text:0000000000000304 .L0 
     /tmp/cc3y761g.s:1158   .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000304 .L0 
     /tmp/cc3y761g.s:1166   .text:000000000000030c .L0 
     /tmp/cc3y761g.s:1167   .text:000000000000030c .L0 
     /tmp/cc3y761g.s:1172   .text:0000000000000310 .L0 
     /tmp/cc3y761g.s:1173   .text:0000000000000310 .L0 
     /tmp/cc3y761g.s:1176   .text:000000000000031c .L0 
     /tmp/cc3y761g.s:1177   .text:000000000000031c .L0 
     /tmp/cc3y761g.s:1182   .text:0000000000000324 .L0 
     /tmp/cc3y761g.s:1183   .text:0000000000000324 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000324 .L0 
     /tmp/cc3y761g.s:1195   .text:0000000000000328 .L0 
     /tmp/cc3y761g.s:1196   .text:0000000000000328 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000328 .L0 
     /tmp/cc3y761g.s:1203   .text:000000000000032c .L0 
     /tmp/cc3y761g.s:1214   .text:0000000000000330 .L0 
     /tmp/cc3y761g.s:1215   .text:0000000000000330 .L0 
     /tmp/cc3y761g.s:1216   .text:0000000000000330 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000330 .L0 
     /tmp/cc3y761g.s:1224   .text:0000000000000338 .L0 
     /tmp/cc3y761g.s:1225   .text:0000000000000338 .L0 
     /tmp/cc3y761g.s:1230   .text:000000000000033c .L0 
     /tmp/cc3y761g.s:1235   .text:0000000000000340 .L0 
     /tmp/cc3y761g.s:1236   .text:0000000000000340 .L0 
     /tmp/cc3y761g.s:1237   .text:0000000000000340 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000340 .L0 
     /tmp/cc3y761g.s:1245   .text:0000000000000348 .L0 
     /tmp/cc3y761g.s:1246   .text:0000000000000348 .L0 
     /tmp/cc3y761g.s:1251   .text:000000000000034c .L0 
     /tmp/cc3y761g.s:1252   .text:000000000000034c .L0 
     /tmp/cc3y761g.s:1253   .text:000000000000034c .L0 
       src/Riscv.cpp:162    .text:000000000000034c .L0 
     /tmp/cc3y761g.s:1259   .text:0000000000000350 .L0 
       src/Riscv.cpp:163    .text:0000000000000350 .L0 
     /tmp/cc3y761g.s:1264   .text:0000000000000354 .L0 
       src/Riscv.cpp:165    .text:0000000000000354 .L0 
     /tmp/cc3y761g.s:1270   .text:0000000000000358 .L0 
       src/Riscv.cpp:166    .text:0000000000000358 .L0 
     /tmp/cc3y761g.s:1276   .text:000000000000035c .L0 
     /tmp/cc3y761g.s:1278   .text:000000000000035c .L0 
     /tmp/cc3y761g.s:1285   .text:0000000000000368 .L0 
     /tmp/cc3y761g.s:1291   .text:000000000000036c .L0 
     /tmp/cc3y761g.s:1301   .text:0000000000000374 .L0 
     /tmp/cc3y761g.s:1302   .text:0000000000000374 .L0 
     /tmp/cc3y761g.s:1303   .text:0000000000000374 .L0 
     /tmp/cc3y761g.s:1309   .text:000000000000037c .L0 
     /tmp/cc3y761g.s:1310   .text:000000000000037c .L0 
     /tmp/cc3y761g.s:1313   .text:0000000000000380 .L0 
     /tmp/cc3y761g.s:1314   .text:0000000000000380 .L0 
     /tmp/cc3y761g.s:1316   .text:0000000000000384 .L0 
     /tmp/cc3y761g.s:1320   .text:0000000000000388 .L0 
       src/Riscv.cpp:176    .text:0000000000000388 .L0 
     /tmp/cc3y761g.s:1330   .text:000000000000038c .L0 
     /tmp/cc3y761g.s:1331   .text:000000000000038c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000038c .L0 
GAS LISTING /tmp/cc3y761g.s 			page 63


     /tmp/cc3y761g.s:1343   .text:0000000000000390 .L0 
     /tmp/cc3y761g.s:1344   .text:0000000000000390 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000390 .L0 
     /tmp/cc3y761g.s:1351   .text:0000000000000394 .L0 
     /tmp/cc3y761g.s:1357   .text:0000000000000398 .L0 
     /tmp/cc3y761g.s:1367   .text:00000000000003a0 .L0 
     /tmp/cc3y761g.s:1368   .text:00000000000003a0 .L0 
     /tmp/cc3y761g.s:1369   .text:00000000000003a0 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000003a0 .L0 
     /tmp/cc3y761g.s:1377   .text:00000000000003a8 .L0 
     /tmp/cc3y761g.s:1378   .text:00000000000003a8 .L0 
     /tmp/cc3y761g.s:1382   .text:00000000000003ac .L0 
     /tmp/cc3y761g.s:1387   .text:00000000000003b0 .L0 
     /tmp/cc3y761g.s:1388   .text:00000000000003b0 .L0 
     /tmp/cc3y761g.s:1389   .text:00000000000003b0 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000003b0 .L0 
     /tmp/cc3y761g.s:1397   .text:00000000000003b8 .L0 
     /tmp/cc3y761g.s:1398   .text:00000000000003b8 .L0 
     /tmp/cc3y761g.s:1403   .text:00000000000003bc .L0 
     /tmp/cc3y761g.s:1404   .text:00000000000003bc .L0 
       src/Riscv.cpp:188    .text:00000000000003bc .L0 
     /tmp/cc3y761g.s:1410   .text:00000000000003c0 .L0 
       src/Riscv.cpp:190    .text:00000000000003c0 .L0 
     /tmp/cc3y761g.s:1417   .text:00000000000003c4 .L0 
     /tmp/cc3y761g.s:1424   .text:00000000000003c8 .L0 
     /tmp/cc3y761g.s:1427   .text:00000000000003cc .L0 
     /tmp/cc3y761g.s:1435   .text:00000000000003d4 .L0 
     /tmp/cc3y761g.s:1436   .text:00000000000003d4 .L0 
     /tmp/cc3y761g.s:1437   .text:00000000000003d4 .L0 
     /tmp/cc3y761g.s:1443   .text:00000000000003dc .L0 
     /tmp/cc3y761g.s:1444   .text:00000000000003dc .L0 
     /tmp/cc3y761g.s:1446   .text:00000000000003e0 .L0 
     /tmp/cc3y761g.s:1449   .text:00000000000003e8 .L0 
     /tmp/cc3y761g.s:1450   .text:00000000000003e8 .L0 
     /tmp/cc3y761g.s:1456   .text:00000000000003f4 .L0 
     /tmp/cc3y761g.s:1459   .text:00000000000003f4 .L0 
     /tmp/cc3y761g.s:1460   .text:00000000000003f4 .L0 
     /tmp/cc3y761g.s:1462   .text:00000000000003f8 .L0 
     /tmp/cc3y761g.s:1464   .text:00000000000003fc .L0 
     /tmp/cc3y761g.s:1469   .text:0000000000000400 .L0 
     /tmp/cc3y761g.s:1475   .text:0000000000000404 .L0 
     /tmp/cc3y761g.s:1476   .text:0000000000000404 .L0 
     /tmp/cc3y761g.s:1478   .text:0000000000000408 .L0 
     /tmp/cc3y761g.s:1480   .text:000000000000040c .L0 
     /tmp/cc3y761g.s:1482   .text:0000000000000410 .L0 
     /tmp/cc3y761g.s:1492   .text:0000000000000418 .L0 
     /tmp/cc3y761g.s:1493   .text:0000000000000418 .L0 
     /tmp/cc3y761g.s:1494   .text:0000000000000418 .L0 
     /tmp/cc3y761g.s:1499   .text:000000000000041c .L0 
     /tmp/cc3y761g.s:1500   .text:000000000000041c .L0 
     /tmp/cc3y761g.s:1502   .text:0000000000000420 .L0 
     /tmp/cc3y761g.s:1509   .text:000000000000042c .L0 
     /tmp/cc3y761g.s:1510   .text:000000000000042c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000042c .L0 
     /tmp/cc3y761g.s:1522   .text:0000000000000430 .L0 
     /tmp/cc3y761g.s:1523   .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000430 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 64


     /tmp/cc3y761g.s:1530   .text:0000000000000434 .L0 
     /tmp/cc3y761g.s:1541   .text:0000000000000438 .L0 
     /tmp/cc3y761g.s:1542   .text:0000000000000438 .L0 
     /tmp/cc3y761g.s:1543   .text:0000000000000438 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000438 .L0 
     /tmp/cc3y761g.s:1551   .text:0000000000000440 .L0 
     /tmp/cc3y761g.s:1552   .text:0000000000000440 .L0 
     /tmp/cc3y761g.s:1557   .text:0000000000000444 .L0 
     /tmp/cc3y761g.s:1562   .text:0000000000000448 .L0 
     /tmp/cc3y761g.s:1563   .text:0000000000000448 .L0 
     /tmp/cc3y761g.s:1564   .text:0000000000000448 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000448 .L0 
     /tmp/cc3y761g.s:1572   .text:0000000000000450 .L0 
     /tmp/cc3y761g.s:1573   .text:0000000000000450 .L0 
     /tmp/cc3y761g.s:1578   .text:0000000000000454 .L0 
     /tmp/cc3y761g.s:1579   .text:0000000000000454 .L0 
       src/Riscv.cpp:213    .text:0000000000000454 .L0 
     /tmp/cc3y761g.s:1585   .text:0000000000000458 .L0 
       src/Riscv.cpp:215    .text:0000000000000458 .L0 
     /tmp/cc3y761g.s:1591   .text:000000000000045c .L0 
     /tmp/cc3y761g.s:1595   .text:000000000000045c .L0 
     /tmp/cc3y761g.s:1596   .text:000000000000045c .L0 
     /tmp/cc3y761g.s:1597   .text:000000000000045c .L0 
     /tmp/cc3y761g.s:1602   .text:0000000000000460 .L0 
     /tmp/cc3y761g.s:1604   .text:0000000000000464 .L0 
     /tmp/cc3y761g.s:1608   .text:0000000000000468 .L0 
       src/Riscv.cpp:225    .text:0000000000000468 .L0 
     /tmp/cc3y761g.s:1618   .text:000000000000046c .L0 
     /tmp/cc3y761g.s:1619   .text:000000000000046c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000046c .L0 
     /tmp/cc3y761g.s:1631   .text:0000000000000470 .L0 
     /tmp/cc3y761g.s:1632   .text:0000000000000470 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000470 .L0 
     /tmp/cc3y761g.s:1639   .text:0000000000000474 .L0 
     /tmp/cc3y761g.s:1645   .text:0000000000000478 .L0 
     /tmp/cc3y761g.s:1646   .text:0000000000000478 .L0 
     /tmp/cc3y761g.s:1657   .text:0000000000000484 .L0 
     /tmp/cc3y761g.s:1658   .text:0000000000000484 .L0 
     /tmp/cc3y761g.s:1659   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000484 .L0 
     /tmp/cc3y761g.s:1667   .text:000000000000048c .L0 
     /tmp/cc3y761g.s:1668   .text:000000000000048c .L0 
     /tmp/cc3y761g.s:1673   .text:0000000000000490 .L0 
     /tmp/cc3y761g.s:1678   .text:0000000000000494 .L0 
     /tmp/cc3y761g.s:1679   .text:0000000000000494 .L0 
     /tmp/cc3y761g.s:1680   .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000494 .L0 
     /tmp/cc3y761g.s:1688   .text:000000000000049c .L0 
     /tmp/cc3y761g.s:1689   .text:000000000000049c .L0 
     /tmp/cc3y761g.s:1694   .text:00000000000004a0 .L0 
     /tmp/cc3y761g.s:1695   .text:00000000000004a0 .L0 
       src/Riscv.cpp:236    .text:00000000000004a0 .L0 
     /tmp/cc3y761g.s:1701   .text:00000000000004a4 .L0 
       src/Riscv.cpp:238    .text:00000000000004a4 .L0 
     /tmp/cc3y761g.s:1707   .text:00000000000004a8 .L0 
     /tmp/cc3y761g.s:1711   .text:00000000000004a8 .L0 
     /tmp/cc3y761g.s:1712   .text:00000000000004a8 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 65


     /tmp/cc3y761g.s:1713   .text:00000000000004a8 .L0 
     /tmp/cc3y761g.s:1718   .text:00000000000004ac .L0 
     /tmp/cc3y761g.s:1720   .text:00000000000004b0 .L0 
     /tmp/cc3y761g.s:1724   .text:00000000000004b4 .L0 
       src/Riscv.cpp:249    .text:00000000000004b4 .L0 
     /tmp/cc3y761g.s:1734   .text:00000000000004b8 .L0 
     /tmp/cc3y761g.s:1735   .text:00000000000004b8 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000004b8 .L0 
     /tmp/cc3y761g.s:1747   .text:00000000000004bc .L0 
     /tmp/cc3y761g.s:1748   .text:00000000000004bc .L0 
  src/../h/Riscv.hpp:121    .text:00000000000004bc .L0 
     /tmp/cc3y761g.s:1755   .text:00000000000004c0 .L0 
     /tmp/cc3y761g.s:1761   .text:00000000000004c4 .L0 
     /tmp/cc3y761g.s:1762   .text:00000000000004c4 .L0 
     /tmp/cc3y761g.s:1765   .text:00000000000004cc .L0 
     /tmp/cc3y761g.s:1766   .text:00000000000004cc .L0 
     /tmp/cc3y761g.s:1776   .text:00000000000004d4 .L0 
     /tmp/cc3y761g.s:1777   .text:00000000000004d4 .L0 
     /tmp/cc3y761g.s:1778   .text:00000000000004d4 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000004d4 .L0 
     /tmp/cc3y761g.s:1786   .text:00000000000004dc .L0 
     /tmp/cc3y761g.s:1787   .text:00000000000004dc .L0 
     /tmp/cc3y761g.s:1792   .text:00000000000004e0 .L0 
     /tmp/cc3y761g.s:1797   .text:00000000000004e4 .L0 
     /tmp/cc3y761g.s:1798   .text:00000000000004e4 .L0 
     /tmp/cc3y761g.s:1799   .text:00000000000004e4 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000004e4 .L0 
     /tmp/cc3y761g.s:1807   .text:00000000000004ec .L0 
     /tmp/cc3y761g.s:1808   .text:00000000000004ec .L0 
     /tmp/cc3y761g.s:1813   .text:00000000000004f0 .L0 
     /tmp/cc3y761g.s:1814   .text:00000000000004f0 .L0 
     /tmp/cc3y761g.s:1819   .text:00000000000004f8 .L0 
  src/../h/Riscv.hpp:133    .text:00000000000004f8 .L0 
     /tmp/cc3y761g.s:1829   .text:00000000000004fc .L0 
     /tmp/cc3y761g.s:1830   .text:00000000000004fc .L0 
     /tmp/cc3y761g.s:1833   .text:0000000000000504 .L0 
     /tmp/cc3y761g.s:1834   .text:0000000000000504 .L0 
     /tmp/cc3y761g.s:1839   .text:000000000000050c .L0 
  src/../h/Riscv.hpp:133    .text:000000000000050c .L0 
     /tmp/cc3y761g.s:1849   .text:0000000000000510 .L0 
       src/Riscv.cpp:263    .text:0000000000000510 .L0 
     /tmp/cc3y761g.s:1859   .text:0000000000000514 .L0 
     /tmp/cc3y761g.s:1860   .text:0000000000000514 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000514 .L0 
     /tmp/cc3y761g.s:1872   .text:0000000000000518 .L0 
     /tmp/cc3y761g.s:1873   .text:0000000000000518 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000518 .L0 
     /tmp/cc3y761g.s:1880   .text:000000000000051c .L0 
     /tmp/cc3y761g.s:1898   .text:0000000000000520 .L0 
     /tmp/cc3y761g.s:1904   .text:0000000000000520 _ZN5Riscv17handleTrapConsoleEv
     /tmp/cc3y761g.s:1907   .text:0000000000000520 .L0 
     /tmp/cc3y761g.s:1908   .text:0000000000000520 .L0 
     /tmp/cc3y761g.s:1909   .text:0000000000000524 .L0 
     /tmp/cc3y761g.s:1912   .text:000000000000052c .L0 
     /tmp/cc3y761g.s:1913   .text:000000000000052c .L0 
     /tmp/cc3y761g.s:1915   .text:0000000000000530 .L0 
     /tmp/cc3y761g.s:1919   .text:0000000000000530 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 66


     /tmp/cc3y761g.s:1920   .text:0000000000000530 .L0 
     /tmp/cc3y761g.s:1921   .text:0000000000000530 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000530 .L0 
     /tmp/cc3y761g.s:1929   .text:0000000000000538 .L0 
     /tmp/cc3y761g.s:1930   .text:0000000000000538 .L0 
     /tmp/cc3y761g.s:1935   .text:000000000000053c .L0 
     /tmp/cc3y761g.s:1940   .text:000000000000054c .L0 
     /tmp/cc3y761g.s:1947   .text:000000000000055c .L0 
     /tmp/cc3y761g.s:1948   .text:0000000000000560 .L0 
     /tmp/cc3y761g.s:1949   .text:0000000000000560 .L0 
     /tmp/cc3y761g.s:1951   .text:0000000000000564 .L0 
     /tmp/cc3y761g.s:1952   .text:0000000000000564 .L0 
     /tmp/cc3y761g.s:1954   .text:0000000000000568 .L0 
     /tmp/cc3y761g.s:1958   .text:000000000000056c .L0 
     /tmp/cc3y761g.s:1960   .text:000000000000056c .L0 
     /tmp/cc3y761g.s:1961   .text:000000000000056c .L0 
     /tmp/cc3y761g.s:1966   .text:0000000000000574 .L0 
     /tmp/cc3y761g.s:1967   .text:0000000000000574 .L0 
     /tmp/cc3y761g.s:1968   .text:0000000000000574 .L0 
     /tmp/cc3y761g.s:1975   .text:000000000000057c .L0 
     /tmp/cc3y761g.s:1983   .text:0000000000000580 .L0 
     /tmp/cc3y761g.s:1984   .text:0000000000000580 .L0 
     /tmp/cc3y761g.s:1985   .text:0000000000000580 .L0 
     /tmp/cc3y761g.s:1995   .text:0000000000000588 .L0 
     /tmp/cc3y761g.s:1996   .text:000000000000058c .L0 
     /tmp/cc3y761g.s:2002   .text:000000000000058c _ZN5Riscv10initKernelEv
     /tmp/cc3y761g.s:2005   .text:000000000000058c .L0 
     /tmp/cc3y761g.s:2006   .text:000000000000058c .L0 
     /tmp/cc3y761g.s:2007   .text:0000000000000590 .L0 
     /tmp/cc3y761g.s:2011   .text:000000000000059c .L0 
     /tmp/cc3y761g.s:2012   .text:000000000000059c .L0 
     /tmp/cc3y761g.s:2013   .text:000000000000059c .L0 
     /tmp/cc3y761g.s:2015   .text:00000000000005a0 .L0 
     /tmp/cc3y761g.s:2017   .text:00000000000005a0 .L0 
     /tmp/cc3y761g.s:2018   .text:00000000000005a0 .L0 
     /tmp/cc3y761g.s:2024   .text:00000000000005b0 .L0 
     /tmp/cc3y761g.s:2025   .text:00000000000005b0 .L0 
     /tmp/cc3y761g.s:2028   .text:00000000000005bc .L0 
     /tmp/cc3y761g.s:2029   .text:00000000000005bc .L0 
     /tmp/cc3y761g.s:2035   .text:00000000000005cc .L0 
     /tmp/cc3y761g.s:2036   .text:00000000000005cc .L0 
     /tmp/cc3y761g.s:2041   .text:00000000000005d8 .L0 
     /tmp/cc3y761g.s:2042   .text:00000000000005dc .L0 
     /tmp/cc3y761g.s:2044   .text:00000000000005e0 .L0 
     /tmp/cc3y761g.s:2045   .text:00000000000005e0 .L0 
     /tmp/cc3y761g.s:2047   .text:00000000000005e4 .L0 
     /tmp/cc3y761g.s:2050   .text:00000000000005e8 .L0 
     /tmp/cc3y761g.s:2052   .text:00000000000005ec .L0 
     /tmp/cc3y761g.s:2060   .bss:0000000000000000 _ZN5Riscv9privilegeE
     /tmp/cc3y761g.s:2057   .bss:0000000000000000 .LANCHOR0
     /tmp/cc3y761g.s:2069   .text:00000000000005ec .L0 
     /tmp/cc3y761g.s:105    .text:0000000000000060 .L0 
     /tmp/cc3y761g.s:145    .text:0000000000000084 .L0 
     /tmp/cc3y761g.s:540    .text:0000000000000164 .L0 
     /tmp/cc3y761g.s:560    .text:0000000000000178 .L0 
     /tmp/cc3y761g.s:1016   .text:000000000000029c .L0 
     /tmp/cc3y761g.s:1173   .text:0000000000000310 .L0 
GAS LISTING /tmp/cc3y761g.s 			page 67


     /tmp/cc3y761g.s:1814   .text:00000000000004f0 .L0 
     /tmp/cc3y761g.s:1834   .text:0000000000000504 .L0 
     /tmp/cc3y761g.s:2025   .text:00000000000005b0 .L0 
     /tmp/cc3y761g.s:162    .text:0000000000000098 .L32
     /tmp/cc3y761g.s:202    .text:00000000000000c0 .L6
     /tmp/cc3y761g.s:179    .text:00000000000000a0 .L3
     /tmp/cc3y761g.s:619    .text:0000000000000190 .L33
     /tmp/cc3y761g.s:629    .text:000000000000019c .L34
     /tmp/cc3y761g.s:776    .text:0000000000000204 .L35
     /tmp/cc3y761g.s:873    .text:0000000000000244 .L36
     /tmp/cc3y761g.s:969    .text:0000000000000280 .L37
     /tmp/cc3y761g.s:1051   .text:00000000000002c4 .L38
     /tmp/cc3y761g.s:1126   .text:00000000000002f4 .L39
     /tmp/cc3y761g.s:1205   .text:0000000000000330 .L40
     /tmp/cc3y761g.s:1360   .text:00000000000003a0 .L41
     /tmp/cc3y761g.s:1532   .text:0000000000000438 .L42
     /tmp/cc3y761g.s:1650   .text:0000000000000484 .L43
     /tmp/cc3y761g.s:1769   .text:00000000000004d4 .L44
     /tmp/cc3y761g.s:769    .text:00000000000001fc .L27
     /tmp/cc3y761g.s:239    .text:00000000000000e4 .L8
     /tmp/cc3y761g.s:733    .text:00000000000001ec .L9
     /tmp/cc3y761g.s:1353   .text:0000000000000398 .L28
     /tmp/cc3y761g.s:1317   .text:0000000000000388 .L16
     /tmp/cc3y761g.s:1453   .text:00000000000003f4 .L20
     /tmp/cc3y761g.s:1485   .text:0000000000000418 .L18
     /tmp/cc3y761g.s:1419   .text:00000000000003c8 .L19
     /tmp/cc3y761g.s:1505   .text:000000000000042c .L21
     /tmp/cc3y761g.s:1641   .text:0000000000000478 .L45
     /tmp/cc3y761g.s:1606   .text:0000000000000468 .L23
     /tmp/cc3y761g.s:1757   .text:00000000000004c4 .L46
     /tmp/cc3y761g.s:1722   .text:00000000000004b4 .L25
     /tmp/cc3y761g.s:1957   .text:000000000000056c .L51
     /tmp/cc3y761g.s:1977   .text:0000000000000580 .L52
     /tmp/cc3y761g.s:1945   .text:000000000000055c .L47
     /tmp/cc3y761g.s:5329   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3y761g.s:7762   .debug_str:0000000000000ba0 .LASF226
     /tmp/cc3y761g.s:7454   .debug_str:0000000000000198 .LASF227
     /tmp/cc3y761g.s:7610   .debug_str:00000000000006db .LASF228
     /tmp/cc3y761g.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3y761g.s:2063   .text:00000000000005ec .Letext0
     /tmp/cc3y761g.s:7394   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3y761g.s:7542   .debug_str:0000000000000491 .LASF0
     /tmp/cc3y761g.s:7586   .debug_str:000000000000064b .LASF1
     /tmp/cc3y761g.s:7690   .debug_str:00000000000009ad .LASF2
     /tmp/cc3y761g.s:7702   .debug_str:0000000000000a1b .LASF4
     /tmp/cc3y761g.s:7558   .debug_str:0000000000000508 .LASF3
     /tmp/cc3y761g.s:7408   .debug_str:0000000000000057 .LASF5
     /tmp/cc3y761g.s:7644   .debug_str:00000000000007f4 .LASF6
     /tmp/cc3y761g.s:7574   .debug_str:00000000000005e9 .LASF7
     /tmp/cc3y761g.s:7508   .debug_str:0000000000000376 .LASF8
     /tmp/cc3y761g.s:7516   .debug_str:00000000000003b8 .LASF9
     /tmp/cc3y761g.s:7440   .debug_str:0000000000000122 .LASF10
     /tmp/cc3y761g.s:7496   .debug_str:0000000000000314 .LASF11
     /tmp/cc3y761g.s:7456   .debug_str:00000000000001a6 .LASF12
     /tmp/cc3y761g.s:7438   .debug_str:0000000000000112 .LASF13
     /tmp/cc3y761g.s:7732   .debug_str:0000000000000aef .LASF14
     /tmp/cc3y761g.s:7478   .debug_str:0000000000000250 .LASF15
GAS LISTING /tmp/cc3y761g.s 			page 68


     /tmp/cc3y761g.s:7722   .debug_str:0000000000000ab9 .LASF16
     /tmp/cc3y761g.s:7814   .debug_str:0000000000000dcc .LASF70
     /tmp/cc3y761g.s:7670   .debug_str:00000000000008fe .LASF20
     /tmp/cc3y761g.s:7590   .debug_str:0000000000000664 .LASF17
     /tmp/cc3y761g.s:7484   .debug_str:00000000000002a4 .LASF18
     /tmp/cc3y761g.s:7830   .debug_str:0000000000000e32 .LASF19
     /tmp/cc3y761g.s:7798   .debug_str:0000000000000d44 .LASF21
     /tmp/cc3y761g.s:7488   .debug_str:00000000000002b8 .LASF22
     /tmp/cc3y761g.s:7760   .debug_str:0000000000000b93 .LASF23
     /tmp/cc3y761g.s:7464   .debug_str:00000000000001e2 .LASF24
     /tmp/cc3y761g.s:7716   .debug_str:0000000000000a8b .LASF156
     /tmp/cc3y761g.s:7528   .debug_str:0000000000000431 .LASF57
     /tmp/cc3y761g.s:7540   .debug_str:0000000000000479 .LASF59
     /tmp/cc3y761g.s:7790   .debug_str:0000000000000d10 .LASF25
     /tmp/cc3y761g.s:7778   .debug_str:0000000000000cd0 .LASF27
     /tmp/cc3y761g.s:7684   .debug_str:0000000000000987 .LASF29
     /tmp/cc3y761g.s:7630   .debug_str:0000000000000784 .LASF31
     /tmp/cc3y761g.s:7662   .debug_str:00000000000008b5 .LASF26
     /tmp/cc3y761g.s:7664   .debug_str:00000000000008bc .LASF28
     /tmp/cc3y761g.s:7624   .debug_str:0000000000000764 .LASF30
     /tmp/cc3y761g.s:7578   .debug_str:000000000000061e .LASF32
     /tmp/cc3y761g.s:7826   .debug_str:0000000000000e1e .LASF33
     /tmp/cc3y761g.s:7768   .debug_str:0000000000000c85 .LASF34
     /tmp/cc3y761g.s:7620   .debug_str:0000000000000757 .LASF35
     /tmp/cc3y761g.s:7628   .debug_str:0000000000000770 .LASF36
     /tmp/cc3y761g.s:7592   .debug_str:000000000000066d .LASF37
     /tmp/cc3y761g.s:7668   .debug_str:00000000000008ea .LASF38
     /tmp/cc3y761g.s:7856   .debug_str:0000000000000f06 .LASF39
     /tmp/cc3y761g.s:7548   .debug_str:00000000000004a9 .LASF40
     /tmp/cc3y761g.s:7728   .debug_str:0000000000000adb .LASF41
     /tmp/cc3y761g.s:7706   .debug_str:0000000000000a48 .LASF42
     /tmp/cc3y761g.s:7708   .debug_str:0000000000000a5b .LASF43
     /tmp/cc3y761g.s:7444   .debug_str:0000000000000136 .LASF44
     /tmp/cc3y761g.s:7474   .debug_str:000000000000022b .LASF45
     /tmp/cc3y761g.s:7536   .debug_str:0000000000000452 .LASF46
     /tmp/cc3y761g.s:7546   .debug_str:00000000000004a3 .LASF47
     /tmp/cc3y761g.s:7466   .debug_str:00000000000001ee .LASF48
     /tmp/cc3y761g.s:7410   .debug_str:000000000000005e .LASF49
     /tmp/cc3y761g.s:7696   .debug_str:00000000000009d1 .LASF50
     /tmp/cc3y761g.s:7688   .debug_str:00000000000009a2 .LASF51
     /tmp/cc3y761g.s:7848   .debug_str:0000000000000ebb .LASF52
     /tmp/cc3y761g.s:7818   .debug_str:0000000000000dd7 .LASF53
     /tmp/cc3y761g.s:7832   .debug_str:0000000000000e3b .LASF54
     /tmp/cc3y761g.s:7812   .debug_str:0000000000000dc2 .LASF55
     /tmp/cc3y761g.s:7612   .debug_str:000000000000070b .LASF56
     /tmp/cc3y761g.s:7824   .debug_str:0000000000000e0f .LASF58
     /tmp/cc3y761g.s:7514   .debug_str:000000000000039c .LASF60
     /tmp/cc3y761g.s:7692   .debug_str:00000000000009bb .LASF61
     /tmp/cc3y761g.s:7850   .debug_str:0000000000000ed3 .LASF62
     /tmp/cc3y761g.s:7486   .debug_str:00000000000002ad .LASF63
     /tmp/cc3y761g.s:7504   .debug_str:0000000000000354 .LASF64
     /tmp/cc3y761g.s:7646   .debug_str:0000000000000807 .LASF65
     /tmp/cc3y761g.s:7570   .debug_str:00000000000005aa .LASF67
     /tmp/cc3y761g.s:7686   .debug_str:0000000000000990 .LASF66
     /tmp/cc3y761g.s:7476   .debug_str:0000000000000231 .LASF68
     /tmp/cc3y761g.s:7604   .debug_str:00000000000006b5 .LASF69
     /tmp/cc3y761g.s:7822   .debug_str:0000000000000deb .LASF71
GAS LISTING /tmp/cc3y761g.s 			page 69


     /tmp/cc3y761g.s:7808   .debug_str:0000000000000d9d .LASF105
     /tmp/cc3y761g.s:7584   .debug_str:0000000000000646 .LASF72
     /tmp/cc3y761g.s:7442   .debug_str:0000000000000131 .LASF73
     /tmp/cc3y761g.s:7418   .debug_str:000000000000008f .LASF74
     /tmp/cc3y761g.s:7554   .debug_str:00000000000004cd .LASF107
     /tmp/cc3y761g.s:7726   .debug_str:0000000000000ad6 .LASF75
     /tmp/cc3y761g.s:7622   .debug_str:000000000000075f .LASF76
     /tmp/cc3y761g.s:7852   .debug_str:0000000000000eec .LASF77
     /tmp/cc3y761g.s:7698   .debug_str:00000000000009e9 .LASF80
     /tmp/cc3y761g.s:7492   .debug_str:00000000000002db .LASF78
     /tmp/cc3y761g.s:7694   .debug_str:00000000000009c7 .LASF79
     /tmp/cc3y761g.s:7676   .debug_str:000000000000092e .LASF81
     /tmp/cc3y761g.s:7638   .debug_str:00000000000007c1 .LASF82
     /tmp/cc3y761g.s:7828   .debug_str:0000000000000e26 .LASF83
     /tmp/cc3y761g.s:7614   .debug_str:0000000000000721 .LASF84
     /tmp/cc3y761g.s:7740   .debug_str:0000000000000b1c .LASF85
     /tmp/cc3y761g.s:7432   .debug_str:00000000000000d4 .LASF86
     /tmp/cc3y761g.s:7792   .debug_str:0000000000000d19 .LASF87
     /tmp/cc3y761g.s:7480   .debug_str:0000000000000266 .LASF88
     /tmp/cc3y761g.s:7552   .debug_str:00000000000004c3 .LASF89
     /tmp/cc3y761g.s:7654   .debug_str:0000000000000848 .LASF90
     /tmp/cc3y761g.s:7756   .debug_str:0000000000000b83 .LASF144
     /tmp/cc3y761g.s:7564   .debug_str:000000000000055a .LASF91
     /tmp/cc3y761g.s:7796   .debug_str:0000000000000d28 .LASF92
     /tmp/cc3y761g.s:7416   .debug_str:0000000000000076 .LASF93
     /tmp/cc3y761g.s:7450   .debug_str:0000000000000182 .LASF94
     /tmp/cc3y761g.s:7772   .debug_str:0000000000000ca3 .LASF95
     /tmp/cc3y761g.s:7674   .debug_str:0000000000000926 .LASF96
     /tmp/cc3y761g.s:7506   .debug_str:000000000000036c .LASF97
     /tmp/cc3y761g.s:7718   .debug_str:0000000000000a95 .LASF98
     /tmp/cc3y761g.s:7836   .debug_str:0000000000000e61 .LASF99
     /tmp/cc3y761g.s:7842   .debug_str:0000000000000e80 .LASF229
     /tmp/cc3y761g.s:7568   .debug_str:000000000000058e .LASF230
     /tmp/cc3y761g.s:7572   .debug_str:00000000000005cc .LASF100
     /tmp/cc3y761g.s:7436   .debug_str:00000000000000fd .LASF101
     /tmp/cc3y761g.s:7700   .debug_str:0000000000000a06 .LASF102
     /tmp/cc3y761g.s:7858   .debug_str:0000000000000f0e .LASF103
     /tmp/cc3y761g.s:7794   .debug_str:0000000000000d23 .LASF106
     /tmp/cc3y761g.s:7582   .debug_str:0000000000000641 .LASF104
     /tmp/cc3y761g.s:7802   .debug_str:0000000000000d6e .LASF108
     /tmp/cc3y761g.s:7616   .debug_str:0000000000000745 .LASF109
     /tmp/cc3y761g.s:7642   .debug_str:00000000000007dd .LASF110
     /tmp/cc3y761g.s:7666   .debug_str:00000000000008cf .LASF111
     /tmp/cc3y761g.s:7526   .debug_str:0000000000000416 .LASF231
     /tmp/cc3y761g.s:7608   .debug_str:00000000000006ce .LASF112
     /tmp/cc3y761g.s:7402   .debug_str:000000000000002b .LASF113
     /tmp/cc3y761g.s:7406   .debug_str:0000000000000047 .LASF114
     /tmp/cc3y761g.s:7566   .debug_str:0000000000000576 .LASF115
     /tmp/cc3y761g.s:7682   .debug_str:000000000000097e .LASF116
     /tmp/cc3y761g.s:7846   .debug_str:0000000000000e9a .LASF117
     /tmp/cc3y761g.s:7598   .debug_str:000000000000068f .LASF118
     /tmp/cc3y761g.s:7810   .debug_str:0000000000000da2 .LASF119
     /tmp/cc3y761g.s:7640   .debug_str:00000000000007d1 .LASF120
     /tmp/cc3y761g.s:7576   .debug_str:00000000000005fc .LASF121
     /tmp/cc3y761g.s:7860   .debug_str:0000000000000f1c .LASF122
     /tmp/cc3y761g.s:7680   .debug_str:000000000000095f .LASF123
     /tmp/cc3y761g.s:7714   .debug_str:0000000000000a80 .LASF124
GAS LISTING /tmp/cc3y761g.s 			page 70


     /tmp/cc3y761g.s:7498   .debug_str:0000000000000323 .LASF125
     /tmp/cc3y761g.s:7652   .debug_str:000000000000083f .LASF126
     /tmp/cc3y761g.s:7446   .debug_str:0000000000000149 .LASF127
     /tmp/cc3y761g.s:7420   .debug_str:0000000000000094 .LASF128
     /tmp/cc3y761g.s:7838   .debug_str:0000000000000e73 .LASF129
     /tmp/cc3y761g.s:7434   .debug_str:00000000000000f7 .LASF130
     /tmp/cc3y761g.s:7426   .debug_str:00000000000000ad .LASF131
     /tmp/cc3y761g.s:7648   .debug_str:000000000000081c .LASF132
     /tmp/cc3y761g.s:7744   .debug_str:0000000000000b30 .LASF133
     /tmp/cc3y761g.s:7736   .debug_str:0000000000000b0c .LASF134
     /tmp/cc3y761g.s:7580   .debug_str:0000000000000631 .LASF135
     /tmp/cc3y761g.s:7746   .debug_str:0000000000000b38 .LASF136
     /tmp/cc3y761g.s:7650   .debug_str:0000000000000824 .LASF137
     /tmp/cc3y761g.s:7424   .debug_str:00000000000000a1 .LASF138
     /tmp/cc3y761g.s:7800   .debug_str:0000000000000d53 .LASF139
     /tmp/cc3y761g.s:7618   .debug_str:000000000000074a .LASF140
     /tmp/cc3y761g.s:7468   .debug_str:0000000000000200 .LASF141
     /tmp/cc3y761g.s:7730   .debug_str:0000000000000ae2 .LASF142
     /tmp/cc3y761g.s:7704   .debug_str:0000000000000a22 .LASF143
     /tmp/cc3y761g.s:7634   .debug_str:000000000000079e .LASF145
     /tmp/cc3y761g.s:7588   .debug_str:000000000000065e .LASF146
     /tmp/cc3y761g.s:7398   .debug_str:0000000000000011 .LASF147
     /tmp/cc3y761g.s:7840   .debug_str:0000000000000e7a .LASF148
     /tmp/cc3y761g.s:7658   .debug_str:000000000000088d .LASF149
     /tmp/cc3y761g.s:7602   .debug_str:00000000000006ac .LASF150
     /tmp/cc3y761g.s:7766   .debug_str:0000000000000c6d .LASF151
     /tmp/cc3y761g.s:7712   .debug_str:0000000000000a73 .LASF152
     /tmp/cc3y761g.s:7482   .debug_str:0000000000000288 .LASF153
     /tmp/cc3y761g.s:7752   .debug_str:0000000000000b5d .LASF154
     /tmp/cc3y761g.s:7636   .debug_str:00000000000007a3 .LASF155
     /tmp/cc3y761g.s:7758   .debug_str:0000000000000b8b .LASF157
     /tmp/cc3y761g.s:7550   .debug_str:00000000000004bd .LASF158
     /tmp/cc3y761g.s:7560   .debug_str:000000000000051a .LASF159
     /tmp/cc3y761g.s:7452   .debug_str:000000000000018b .LASF160
     /tmp/cc3y761g.s:7774   .debug_str:0000000000000cac .LASF161
     /tmp/cc3y761g.s:7678   .debug_str:000000000000094f .LASF162
     /tmp/cc3y761g.s:7430   .debug_str:00000000000000c4 .LASF163
     /tmp/cc3y761g.s:7834   .debug_str:0000000000000e51 .LASF164
     /tmp/cc3y761g.s:7734   .debug_str:0000000000000afb .LASF165
     /tmp/cc3y761g.s:7720   .debug_str:0000000000000aa6 .LASF166
     /tmp/cc3y761g.s:7396   .debug_str:0000000000000000 .LASF167
     /tmp/cc3y761g.s:7522   .debug_str:00000000000003f3 .LASF168
     /tmp/cc3y761g.s:7404   .debug_str:0000000000000042 .LASF169
     /tmp/cc3y761g.s:7844   .debug_str:0000000000000e94 .LASF170
     /tmp/cc3y761g.s:7776   .debug_str:0000000000000cc8 .LASF171
     /tmp/cc3y761g.s:7770   .debug_str:0000000000000c99 .LASF172
     /tmp/cc3y761g.s:7742   .debug_str:0000000000000b27 .LASF173
     /tmp/cc3y761g.s:7820   .debug_str:0000000000000de1 .LASF174
     /tmp/cc3y761g.s:7428   .debug_str:00000000000000b6 .LASF175
     /tmp/cc3y761g.s:7672   .debug_str:0000000000000909 .LASF176
     /tmp/cc3y761g.s:7458   .debug_str:00000000000001b6 .LASF177
     /tmp/cc3y761g.s:7562   .debug_str:000000000000052e .LASF178
     /tmp/cc3y761g.s:7470   .debug_str:000000000000021d .LASF179
     /tmp/cc3y761g.s:7462   .debug_str:00000000000001cb .LASF180
     /tmp/cc3y761g.s:7710   .debug_str:0000000000000a62 .LASF181
     /tmp/cc3y761g.s:7764   .debug_str:0000000000000c64 .LASF182
     /tmp/cc3y761g.s:7806   .debug_str:0000000000000d96 .LASF183
GAS LISTING /tmp/cc3y761g.s 			page 71


     /tmp/cc3y761g.s:7854   .debug_str:0000000000000efd .LASF184
     /tmp/cc3y761g.s:7502   .debug_str:0000000000000349 .LASF185
     /tmp/cc3y761g.s:7518   .debug_str:00000000000003c6 .LASF186
     /tmp/cc3y761g.s:7472   .debug_str:0000000000000226 .LASF187
     /tmp/cc3y761g.s:7780   .debug_str:0000000000000ce5 .LASF188
     /tmp/cc3y761g.s:7738   .debug_str:0000000000000b15 .LASF189
     /tmp/cc3y761g.s:7556   .debug_str:00000000000004ef .LASF190
     /tmp/cc3y761g.s:7532   .debug_str:0000000000000445 .LASF191
     /tmp/cc3y761g.s:7520   .debug_str:00000000000003da .LASF192
     /tmp/cc3y761g.s:7606   .debug_str:00000000000006ba .LASF193
     /tmp/cc3y761g.s:7596   .debug_str:000000000000067b .LASF194
     /tmp/cc3y761g.s:7538   .debug_str:0000000000000464 .LASF195
     /tmp/cc3y761g.s:7748   .debug_str:0000000000000b43 .LASF196
     /tmp/cc3y761g.s:7530   .debug_str:000000000000043c .LASF197
     /tmp/cc3y761g.s:7448   .debug_str:0000000000000167 .LASF198
     /tmp/cc3y761g.s:7626   .debug_str:000000000000076b .LASF199
     /tmp/cc3y761g.s:7754   .debug_str:0000000000000b6c .LASF200
     /tmp/cc3y761g.s:7414   .debug_str:0000000000000070 .LASF201
     /tmp/cc3y761g.s:7494   .debug_str:00000000000002fc .LASF202
     /tmp/cc3y761g.s:7656   .debug_str:0000000000000885 .LASF203
     /tmp/cc3y761g.s:7412   .debug_str:0000000000000069 .LASF204
     /tmp/cc3y761g.s:7510   .debug_str:0000000000000386 .LASF205
     /tmp/cc3y761g.s:7750   .debug_str:0000000000000b58 .LASF206
     /tmp/cc3y761g.s:7600   .debug_str:0000000000000697 .LASF232
     /tmp/cc3y761g.s:7500   .debug_str:0000000000000344 .LASF208
     /tmp/cc3y761g.s:7544   .debug_str:000000000000049e .LASF207
     /tmp/cc3y761g.s:7490   .debug_str:00000000000002c4 .LASF218
     /tmp/cc3y761g.s:2003   .text:000000000000058c .LFB57
     /tmp/cc3y761g.s:2053   .text:00000000000005ec .LFE57
     /tmp/cc3y761g.s:7632   .debug_str:0000000000000799 .LASF209
     /tmp/cc3y761g.s:6612   .debug_loc:0000000000000000 .LLST87
     /tmp/cc3y761g.s:6619   .debug_loc:0000000000000023 .LLST88
     /tmp/cc3y761g.s:2020   .text:00000000000005ac .LVL140
     /tmp/cc3y761g.s:2031   .text:00000000000005c8 .LVL142
     /tmp/cc3y761g.s:2039   .text:00000000000005d8 .LVL145
     /tmp/cc3y761g.s:1905   .text:0000000000000520 .LFB56
     /tmp/cc3y761g.s:1997   .text:000000000000058c .LFE56
     /tmp/cc3y761g.s:7724   .debug_str:0000000000000acf .LASF210
     /tmp/cc3y761g.s:6630   .debug_loc:0000000000000059 .LLST84
     /tmp/cc3y761g.s:1917   .text:0000000000000530 .LBB465
     /tmp/cc3y761g.s:1933   .text:000000000000053c .LBE465
     /tmp/cc3y761g.s:1964   .text:0000000000000574 .LBB467
     /tmp/cc3y761g.s:1979   .text:0000000000000580 .LBE467
     /tmp/cc3y761g.s:6645   .debug_loc:00000000000000a2 .LLST85
     /tmp/cc3y761g.s:1981   .text:0000000000000580 .LBB469
     /tmp/cc3y761g.s:1993   .text:0000000000000588 .LBE469
     /tmp/cc3y761g.s:6654   .debug_loc:00000000000000c8 .LLST86
     /tmp/cc3y761g.s:1962   .text:0000000000000574 .LVL137
     /tmp/cc3y761g.s:46     .text:0000000000000020 .LFB55
     /tmp/cc3y761g.s:1899   .text:0000000000000520 .LFE55
     /tmp/cc3y761g.s:6662   .debug_loc:00000000000000ec .LLST0
     /tmp/cc3y761g.s:7400   .debug_str:0000000000000025 .LASF211
     /tmp/cc3y761g.s:6693   .debug_loc:0000000000000172 .LLST1
     /tmp/cc3y761g.s:7782   .debug_str:0000000000000cfc .LASF212
     /tmp/cc3y761g.s:6744   .debug_loc:0000000000000266 .LLST2
     /tmp/cc3y761g.s:108    .text:000000000000006c .LBB180
     /tmp/cc3y761g.s:165    .text:0000000000000098 .LBE180
GAS LISTING /tmp/cc3y761g.s 			page 72


     /tmp/cc3y761g.s:7816   .debug_str:0000000000000dd2 .LASF213
     /tmp/cc3y761g.s:6755   .debug_loc:000000000000029c .LLST3
     /tmp/cc3y761g.s:110    .text:000000000000006c .LBB181
     /tmp/cc3y761g.s:126    .text:0000000000000078 .LBE181
     /tmp/cc3y761g.s:128    .text:0000000000000078 .LBB183
     /tmp/cc3y761g.s:141    .text:0000000000000080 .LBE183
     /tmp/cc3y761g.s:6768   .debug_loc:00000000000002d4 .LLST4
     /tmp/cc3y761g.s:150    .text:0000000000000090 .LBB185
     /tmp/cc3y761g.s:164    .text:0000000000000098 .LBE185
     /tmp/cc3y761g.s:6777   .debug_loc:00000000000002fa .LLST5
     /tmp/cc3y761g.s:632    .text:000000000000019c .LBB190
     /tmp/cc3y761g.s:777    .text:0000000000000204 .LBE190
     /tmp/cc3y761g.s:6784   .debug_loc:000000000000031d .LLST6
     /tmp/cc3y761g.s:7524   .debug_str:000000000000040e .LASF214
     /tmp/cc3y761g.s:6791   .debug_loc:0000000000000340 .LLST7
     /tmp/cc3y761g.s:6798   .debug_loc:0000000000000363 .LLST8
     /tmp/cc3y761g.s:7784   .debug_str:0000000000000d01 .LASF215
     /tmp/cc3y761g.s:6805   .debug_loc:0000000000000386 .LLST9
     /tmp/cc3y761g.s:7786   .debug_str:0000000000000d06 .LASF216
     /tmp/cc3y761g.s:6812   .debug_loc:00000000000003a9 .LLST10
     /tmp/cc3y761g.s:7788   .debug_str:0000000000000d0b .LASF217
     /tmp/cc3y761g.s:6819   .debug_loc:00000000000003cc .LLST11
     /tmp/cc3y761g.s:6826   .debug_loc:00000000000003ef .LLST12
     /tmp/cc3y761g.s:6833   .debug_loc:0000000000000412 .LLST13
     /tmp/cc3y761g.s:634    .text:000000000000019c .LBB191
     /tmp/cc3y761g.s:649    .text:00000000000001a8 .LBE191
     /tmp/cc3y761g.s:654    .text:00000000000001ac .LBB193
     /tmp/cc3y761g.s:670    .text:00000000000001b8 .LBE193
     /tmp/cc3y761g.s:744    .text:00000000000001f0 .LBB195
     /tmp/cc3y761g.s:755    .text:00000000000001f4 .LBE195
     /tmp/cc3y761g.s:6840   .debug_loc:0000000000000435 .LLST14
     /tmp/cc3y761g.s:757    .text:00000000000001f4 .LBB197
     /tmp/cc3y761g.s:771    .text:00000000000001fc .LBE197
     /tmp/cc3y761g.s:6847   .debug_loc:0000000000000458 .LLST15
     /tmp/cc3y761g.s:724    .text:00000000000001e0 .LVL31
     /tmp/cc3y761g.s:780    .text:0000000000000204 .LBB383
     /tmp/cc3y761g.s:876    .text:0000000000000244 .LBE383
     /tmp/cc3y761g.s:6854   .debug_loc:000000000000047b .LLST78
     /tmp/cc3y761g.s:6861   .debug_loc:000000000000049e .LLST79
     /tmp/cc3y761g.s:6868   .debug_loc:00000000000004c1 .LLST80
     /tmp/cc3y761g.s:782    .text:0000000000000204 .LBB384
     /tmp/cc3y761g.s:798    .text:0000000000000210 .LBE384
     /tmp/cc3y761g.s:803    .text:0000000000000214 .LBB386
     /tmp/cc3y761g.s:819    .text:0000000000000220 .LBE386
     /tmp/cc3y761g.s:848    .text:0000000000000238 .LBB388
     /tmp/cc3y761g.s:859    .text:000000000000023c .LBE388
     /tmp/cc3y761g.s:6875   .debug_loc:00000000000004e4 .LLST81
     /tmp/cc3y761g.s:861    .text:000000000000023c .LBB390
     /tmp/cc3y761g.s:875    .text:0000000000000244 .LBE390
     /tmp/cc3y761g.s:6882   .debug_loc:0000000000000507 .LLST82
     /tmp/cc3y761g.s:838    .text:0000000000000234 .LVL42
     /tmp/cc3y761g.s:878    .text:0000000000000244 .LBB364
     /tmp/cc3y761g.s:972    .text:0000000000000280 .LBE364
     /tmp/cc3y761g.s:6889   .debug_loc:000000000000052a .LLST73
     /tmp/cc3y761g.s:6896   .debug_loc:000000000000054d .LLST74
     /tmp/cc3y761g.s:6903   .debug_loc:0000000000000570 .LLST75
     /tmp/cc3y761g.s:880    .text:0000000000000244 .LBB365
GAS LISTING /tmp/cc3y761g.s 			page 73


     /tmp/cc3y761g.s:896    .text:0000000000000250 .LBE365
     /tmp/cc3y761g.s:901    .text:0000000000000254 .LBB367
     /tmp/cc3y761g.s:917    .text:0000000000000260 .LBE367
     /tmp/cc3y761g.s:944    .text:0000000000000274 .LBB369
     /tmp/cc3y761g.s:955    .text:0000000000000278 .LBE369
     /tmp/cc3y761g.s:6910   .debug_loc:0000000000000593 .LLST76
     /tmp/cc3y761g.s:957    .text:0000000000000278 .LBB371
     /tmp/cc3y761g.s:971    .text:0000000000000280 .LBE371
     /tmp/cc3y761g.s:6917   .debug_loc:00000000000005b6 .LLST77
     /tmp/cc3y761g.s:934    .text:0000000000000270 .LVL50
     /tmp/cc3y761g.s:974    .text:0000000000000280 .LBB346
     /tmp/cc3y761g.s:1054   .text:00000000000002c4 .LBE346
     /tmp/cc3y761g.s:6924   .debug_loc:00000000000005d9 .LLST69
     /tmp/cc3y761g.s:6931   .debug_loc:00000000000005fc .LLST70
     /tmp/cc3y761g.s:976    .text:0000000000000280 .LBB347
     /tmp/cc3y761g.s:992    .text:000000000000028c .LBE347
     /tmp/cc3y761g.s:997    .text:0000000000000290 .LBB349
     /tmp/cc3y761g.s:1013   .text:000000000000029c .LBE349
     /tmp/cc3y761g.s:1026   .text:00000000000002b8 .LBB351
     /tmp/cc3y761g.s:1037   .text:00000000000002bc .LBE351
     /tmp/cc3y761g.s:6938   .debug_loc:000000000000061f .LLST71
     /tmp/cc3y761g.s:1039   .text:00000000000002bc .LBB353
     /tmp/cc3y761g.s:1053   .text:00000000000002c4 .LBE353
     /tmp/cc3y761g.s:6945   .debug_loc:0000000000000642 .LLST72
     /tmp/cc3y761g.s:1024   .text:00000000000002b8 .LVL57
     /tmp/cc3y761g.s:1056   .text:00000000000002c4 .LBB329
     /tmp/cc3y761g.s:1129   .text:00000000000002f4 .LBE329
     /tmp/cc3y761g.s:6952   .debug_loc:0000000000000665 .LLST65
     /tmp/cc3y761g.s:6959   .debug_loc:0000000000000688 .LLST66
     /tmp/cc3y761g.s:1058   .text:00000000000002c4 .LBB330
     /tmp/cc3y761g.s:1074   .text:00000000000002d0 .LBE330
     /tmp/cc3y761g.s:1079   .text:00000000000002d4 .LBB332
     /tmp/cc3y761g.s:1095   .text:00000000000002e0 .LBE332
     /tmp/cc3y761g.s:1101   .text:00000000000002e8 .LBB334
     /tmp/cc3y761g.s:1112   .text:00000000000002ec .LBE334
     /tmp/cc3y761g.s:6966   .debug_loc:00000000000006ab .LLST67
     /tmp/cc3y761g.s:1114   .text:00000000000002ec .LBB336
     /tmp/cc3y761g.s:1128   .text:00000000000002f4 .LBE336
     /tmp/cc3y761g.s:6973   .debug_loc:00000000000006ce .LLST68
     /tmp/cc3y761g.s:1099   .text:00000000000002e8 .LVL63
     /tmp/cc3y761g.s:1131   .text:00000000000002f4 .LBB313
     /tmp/cc3y761g.s:1208   .text:0000000000000330 .LBE313
     /tmp/cc3y761g.s:6980   .debug_loc:00000000000006f1 .LLST61
     /tmp/cc3y761g.s:6987   .debug_loc:0000000000000714 .LLST62
     /tmp/cc3y761g.s:1133   .text:00000000000002f4 .LBB314
     /tmp/cc3y761g.s:1149   .text:0000000000000300 .LBE314
     /tmp/cc3y761g.s:1154   .text:0000000000000304 .LBB316
     /tmp/cc3y761g.s:1170   .text:0000000000000310 .LBE316
     /tmp/cc3y761g.s:1180   .text:0000000000000324 .LBB318
     /tmp/cc3y761g.s:1191   .text:0000000000000328 .LBE318
     /tmp/cc3y761g.s:6994   .debug_loc:0000000000000737 .LLST63
     /tmp/cc3y761g.s:1193   .text:0000000000000328 .LBB320
     /tmp/cc3y761g.s:1207   .text:0000000000000330 .LBE320
     /tmp/cc3y761g.s:7001   .debug_loc:000000000000075a .LLST64
     /tmp/cc3y761g.s:1178   .text:0000000000000324 .LVL69
     /tmp/cc3y761g.s:1210   .text:0000000000000330 .LBB292
     /tmp/cc3y761g.s:1361   .text:00000000000003a0 .LBE292
GAS LISTING /tmp/cc3y761g.s 			page 74


     /tmp/cc3y761g.s:7008   .debug_loc:000000000000077d .LLST49
     /tmp/cc3y761g.s:7015   .debug_loc:00000000000007a0 .LLST50
     /tmp/cc3y761g.s:7022   .debug_loc:00000000000007c3 .LLST51
     /tmp/cc3y761g.s:7029   .debug_loc:00000000000007e6 .LLST52
     /tmp/cc3y761g.s:7036   .debug_loc:0000000000000809 .LLST53
     /tmp/cc3y761g.s:7043   .debug_loc:000000000000082c .LLST54
     /tmp/cc3y761g.s:1212   .text:0000000000000330 .LBB293
     /tmp/cc3y761g.s:1228   .text:000000000000033c .LBE293
     /tmp/cc3y761g.s:1233   .text:0000000000000340 .LBB295
     /tmp/cc3y761g.s:1249   .text:000000000000034c .LBE295
     /tmp/cc3y761g.s:1281   .text:0000000000000368 .LBB297
     /tmp/cc3y761g.s:1297   .text:0000000000000374 .LBE297
     /tmp/cc3y761g.s:7060   .debug_loc:0000000000000877 .LLST55
     /tmp/cc3y761g.s:7067   .debug_loc:000000000000089a .LLST56
     /tmp/cc3y761g.s:1287   .text:000000000000036c .LBB299
     /tmp/cc3y761g.s:1295   .text:0000000000000374 .LBE299
     /tmp/cc3y761g.s:7074   .debug_loc:00000000000008bd .LLST57
     /tmp/cc3y761g.s:1299   .text:0000000000000374 .LBB301
     /tmp/cc3y761g.s:1307   .text:000000000000037c .LBE301
     /tmp/cc3y761g.s:7083   .debug_loc:00000000000008e2 .LLST58
     /tmp/cc3y761g.s:1328   .text:000000000000038c .LBB303
     /tmp/cc3y761g.s:1339   .text:0000000000000390 .LBE303
     /tmp/cc3y761g.s:7090   .debug_loc:0000000000000905 .LLST59
     /tmp/cc3y761g.s:1341   .text:0000000000000390 .LBB305
     /tmp/cc3y761g.s:1355   .text:0000000000000398 .LBE305
     /tmp/cc3y761g.s:7097   .debug_loc:0000000000000928 .LLST60
     /tmp/cc3y761g.s:1280   .text:0000000000000368 .LVL77
     /tmp/cc3y761g.s:1363   .text:00000000000003a0 .LBB266
     /tmp/cc3y761g.s:1535   .text:0000000000000438 .LBE266
     /tmp/cc3y761g.s:7104   .debug_loc:000000000000094b .LLST36
     /tmp/cc3y761g.s:7111   .debug_loc:000000000000096e .LLST37
     /tmp/cc3y761g.s:7118   .debug_loc:0000000000000991 .LLST38
     /tmp/cc3y761g.s:7380   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3y761g.s:7125   .debug_loc:00000000000009b4 .LLST40
     /tmp/cc3y761g.s:1421   .text:00000000000003c8 .LBB272
     /tmp/cc3y761g.s:7132   .debug_loc:00000000000009d7 .LLST41
     /tmp/cc3y761g.s:7147   .debug_loc:0000000000000a11 .LLST42
     /tmp/cc3y761g.s:7158   .debug_loc:0000000000000a47 .LLST43
     /tmp/cc3y761g.s:1428   .text:00000000000003d4 .LVL92
     /tmp/cc3y761g.s:1432   .text:00000000000003d4 .LBB275
     /tmp/cc3y761g.s:1441   .text:00000000000003dc .LBE275
     /tmp/cc3y761g.s:7165   .debug_loc:0000000000000a6a .LLST44
     /tmp/cc3y761g.s:1452   .text:00000000000003f4 .LVL94
     /tmp/cc3y761g.s:1365   .text:00000000000003a0 .LBB267
     /tmp/cc3y761g.s:1380   .text:00000000000003ac .LBE267
     /tmp/cc3y761g.s:1385   .text:00000000000003b0 .LBB269
     /tmp/cc3y761g.s:1401   .text:00000000000003bc .LBE269
     /tmp/cc3y761g.s:1457   .text:00000000000003f4 .LBB278
     /tmp/cc3y761g.s:1467   .text:0000000000000400 .LBE278
     /tmp/cc3y761g.s:7172   .debug_loc:0000000000000a8d .LLST45
     /tmp/cc3y761g.s:1490   .text:0000000000000418 .LBB281
     /tmp/cc3y761g.s:1497   .text:000000000000041c .LBE281
     /tmp/cc3y761g.s:7181   .debug_loc:0000000000000ab2 .LLST46
     /tmp/cc3y761g.s:1507   .text:000000000000042c .LBB283
     /tmp/cc3y761g.s:1518   .text:0000000000000430 .LBE283
     /tmp/cc3y761g.s:7188   .debug_loc:0000000000000ad5 .LLST47
     /tmp/cc3y761g.s:1520   .text:0000000000000430 .LBB285
GAS LISTING /tmp/cc3y761g.s 			page 75


     /tmp/cc3y761g.s:1534   .text:0000000000000438 .LBE285
     /tmp/cc3y761g.s:7195   .debug_loc:0000000000000af8 .LLST48
     /tmp/cc3y761g.s:1504   .text:000000000000042c .LVL99
     /tmp/cc3y761g.s:1537   .text:0000000000000438 .LBB251
     /tmp/cc3y761g.s:1651   .text:0000000000000484 .LBE251
     /tmp/cc3y761g.s:7202   .debug_loc:0000000000000b1b .LLST29
     /tmp/cc3y761g.s:7209   .debug_loc:0000000000000b3e .LLST30
     /tmp/cc3y761g.s:7216   .debug_loc:0000000000000b61 .LLST31
     /tmp/cc3y761g.s:7227   .debug_loc:0000000000000b97 .LLST32
     /tmp/cc3y761g.s:1539   .text:0000000000000438 .LBB252
     /tmp/cc3y761g.s:1555   .text:0000000000000444 .LBE252
     /tmp/cc3y761g.s:1560   .text:0000000000000448 .LBB254
     /tmp/cc3y761g.s:1576   .text:0000000000000454 .LBE254
     /tmp/cc3y761g.s:1593   .text:000000000000045c .LBB256
     /tmp/cc3y761g.s:1600   .text:0000000000000460 .LBE256
     /tmp/cc3y761g.s:7238   .debug_loc:0000000000000bcd .LLST33
     /tmp/cc3y761g.s:1616   .text:000000000000046c .LBB258
     /tmp/cc3y761g.s:1627   .text:0000000000000470 .LBE258
     /tmp/cc3y761g.s:7245   .debug_loc:0000000000000bf0 .LLST34
     /tmp/cc3y761g.s:1629   .text:0000000000000470 .LBB260
     /tmp/cc3y761g.s:1643   .text:0000000000000478 .LBE260
     /tmp/cc3y761g.s:7252   .debug_loc:0000000000000c13 .LLST35
     /tmp/cc3y761g.s:1647   .text:0000000000000480 .LVL111
     /tmp/cc3y761g.s:1653   .text:0000000000000484 .LBB237
     /tmp/cc3y761g.s:1770   .text:00000000000004d4 .LBE237
     /tmp/cc3y761g.s:7259   .debug_loc:0000000000000c36 .LLST22
     /tmp/cc3y761g.s:7266   .debug_loc:0000000000000c59 .LLST23
     /tmp/cc3y761g.s:7273   .debug_loc:0000000000000c7c .LLST24
     /tmp/cc3y761g.s:7284   .debug_loc:0000000000000cb2 .LLST25
     /tmp/cc3y761g.s:1655   .text:0000000000000484 .LBB238
     /tmp/cc3y761g.s:1671   .text:0000000000000490 .LBE238
     /tmp/cc3y761g.s:1676   .text:0000000000000494 .LBB240
     /tmp/cc3y761g.s:1692   .text:00000000000004a0 .LBE240
     /tmp/cc3y761g.s:1709   .text:00000000000004a8 .LBB242
     /tmp/cc3y761g.s:1716   .text:00000000000004ac .LBE242
     /tmp/cc3y761g.s:7296   .debug_loc:0000000000000ce9 .LLST26
     /tmp/cc3y761g.s:1732   .text:00000000000004b8 .LBB244
     /tmp/cc3y761g.s:1743   .text:00000000000004bc .LBE244
     /tmp/cc3y761g.s:7303   .debug_loc:0000000000000d0c .LLST27
     /tmp/cc3y761g.s:1745   .text:00000000000004bc .LBB246
     /tmp/cc3y761g.s:1759   .text:00000000000004c4 .LBE246
     /tmp/cc3y761g.s:7310   .debug_loc:0000000000000d2f .LLST28
     /tmp/cc3y761g.s:1763   .text:00000000000004cc .LVL122
     /tmp/cc3y761g.s:1772   .text:00000000000004d4 .LBB223
     /tmp/cc3y761g.s:1883   .text:0000000000000520 .LBE223
     /tmp/cc3y761g.s:1774   .text:00000000000004d4 .LBB224
     /tmp/cc3y761g.s:1790   .text:00000000000004e0 .LBE224
     /tmp/cc3y761g.s:1795   .text:00000000000004e4 .LBB226
     /tmp/cc3y761g.s:1811   .text:00000000000004f0 .LBE226
     /tmp/cc3y761g.s:1816   .text:00000000000004f8 .LBB228
     /tmp/cc3y761g.s:1827   .text:00000000000004fc .LBE228
     /tmp/cc3y761g.s:1836   .text:000000000000050c .LBB230
     /tmp/cc3y761g.s:1847   .text:0000000000000510 .LBE230
     /tmp/cc3y761g.s:1857   .text:0000000000000514 .LBB232
     /tmp/cc3y761g.s:1868   .text:0000000000000518 .LBE232
     /tmp/cc3y761g.s:7317   .debug_loc:0000000000000d52 .LLST21
     /tmp/cc3y761g.s:1870   .text:0000000000000518 .LBB234
GAS LISTING /tmp/cc3y761g.s 			page 76


     /tmp/cc3y761g.s:1882   .text:0000000000000520 .LBE234
     /tmp/cc3y761g.s:1831   .text:0000000000000504 .LVL129
     /tmp/cc3y761g.s:483    .text:000000000000013c .LBB210
     /tmp/cc3y761g.s:600    .text:000000000000018c .LBE210
     /tmp/cc3y761g.s:7324   .debug_loc:0000000000000d75 .LLST16
     /tmp/cc3y761g.s:7331   .debug_loc:0000000000000d98 .LLST17
     /tmp/cc3y761g.s:7338   .debug_loc:0000000000000dbb .LLST18
     /tmp/cc3y761g.s:485    .text:000000000000013c .LBB211
     /tmp/cc3y761g.s:501    .text:0000000000000148 .LBE211
     /tmp/cc3y761g.s:506    .text:000000000000014c .LBB213
     /tmp/cc3y761g.s:522    .text:0000000000000158 .LBE213
     /tmp/cc3y761g.s:542    .text:000000000000016c .LBB215
     /tmp/cc3y761g.s:553    .text:0000000000000170 .LBE215
     /tmp/cc3y761g.s:562    .text:0000000000000180 .LBB217
     /tmp/cc3y761g.s:573    .text:0000000000000184 .LBE217
     /tmp/cc3y761g.s:575    .text:0000000000000184 .LBB219
     /tmp/cc3y761g.s:586    .text:0000000000000188 .LBE219
     /tmp/cc3y761g.s:7345   .debug_loc:0000000000000dde .LLST19
     /tmp/cc3y761g.s:588    .text:0000000000000188 .LBB221
     /tmp/cc3y761g.s:599    .text:000000000000018c .LBE221
     /tmp/cc3y761g.s:7352   .debug_loc:0000000000000e01 .LLST20
     /tmp/cc3y761g.s:557    .text:0000000000000178 .LVL17
     /tmp/cc3y761g.s:66     .text:0000000000000040 .LBB176
     /tmp/cc3y761g.s:83     .text:000000000000004c .LBE176
     /tmp/cc3y761g.s:168    .text:0000000000000098 .LBB432
     /tmp/cc3y761g.s:181    .text:00000000000000a0 .LBE432
     /tmp/cc3y761g.s:7359   .debug_loc:0000000000000e24 .LLST83
     /tmp/cc3y761g.s:626    .text:0000000000000198 .LVL23
     /tmp/cc3y761g.s:10     .text:0000000000000000 .LFB54
     /tmp/cc3y761g.s:40     .text:0000000000000020 .LFE54
     /tmp/cc3y761g.s:7422   .debug_str:000000000000009c .LASF220
     /tmp/cc3y761g.s:7660   .debug_str:00000000000008a1 .LASF219
     /tmp/cc3y761g.s:7804   .debug_str:0000000000000d91 .LASF221
     /tmp/cc3y761g.s:7594   .debug_str:0000000000000675 .LASF222
     /tmp/cc3y761g.s:7512   .debug_str:000000000000038c .LASF223
     /tmp/cc3y761g.s:7534   .debug_str:000000000000044b .LASF224
     /tmp/cc3y761g.s:7460   .debug_str:00000000000001c4 .LASF225
     /tmp/cc3y761g.s:2022   .text:00000000000005b0 .LVL141
     /tmp/cc3y761g.s:2048   .text:00000000000005e4 .LVL146
     /tmp/cc3y761g.s:2033   .text:00000000000005cc .LVL143
     /tmp/cc3y761g.s:2037   .text:00000000000005d0 .LVL144
     /tmp/cc3y761g.s:1931   .text:000000000000053c .LVL134
     /tmp/cc3y761g.s:1944   .text:000000000000055c .LVL135
     /tmp/cc3y761g.s:1956   .text:000000000000056c .LVL136
     /tmp/cc3y761g.s:1976   .text:0000000000000580 .LVL138
     /tmp/cc3y761g.s:1990   .text:0000000000000588 .LVL139
     /tmp/cc3y761g.s:81     .text:000000000000004c .LVL0
     /tmp/cc3y761g.s:133    .text:000000000000007c .LVL3
     /tmp/cc3y761g.s:161    .text:0000000000000098 .LVL6
     /tmp/cc3y761g.s:177    .text:00000000000000a0 .LVL7
     /tmp/cc3y761g.s:201    .text:00000000000000c0 .LVL8
     /tmp/cc3y761g.s:222    .text:00000000000000d4 .LVL9
     /tmp/cc3y761g.s:238    .text:00000000000000e4 .LVL10
     /tmp/cc3y761g.s:618    .text:0000000000000190 .LVL22
     /tmp/cc3y761g.s:628    .text:000000000000019c .LVL24
     /tmp/cc3y761g.s:92     .text:0000000000000050 .LVL1
     /tmp/cc3y761g.s:499    .text:0000000000000148 .LVL11
GAS LISTING /tmp/cc3y761g.s 			page 77


     /tmp/cc3y761g.s:796    .text:0000000000000210 .LVL37
     /tmp/cc3y761g.s:872    .text:0000000000000244 .LVL45
     /tmp/cc3y761g.s:894    .text:0000000000000250 .LVL46
     /tmp/cc3y761g.s:968    .text:0000000000000280 .LVL53
     /tmp/cc3y761g.s:990    .text:000000000000028c .LVL54
     /tmp/cc3y761g.s:1050   .text:00000000000002c4 .LVL59
     /tmp/cc3y761g.s:1072   .text:00000000000002d0 .LVL60
     /tmp/cc3y761g.s:1125   .text:00000000000002f4 .LVL65
     /tmp/cc3y761g.s:1147   .text:0000000000000300 .LVL66
     /tmp/cc3y761g.s:1204   .text:0000000000000330 .LVL71
     /tmp/cc3y761g.s:1226   .text:000000000000033c .LVL72
     /tmp/cc3y761g.s:1359   .text:00000000000003a0 .LVL86
     /tmp/cc3y761g.s:1414   .text:00000000000003c4 .LVL89
     /tmp/cc3y761g.s:1531   .text:0000000000000438 .LVL101
     /tmp/cc3y761g.s:1553   .text:0000000000000444 .LVL102
     /tmp/cc3y761g.s:1649   .text:0000000000000484 .LVL112
     /tmp/cc3y761g.s:1669   .text:0000000000000490 .LVL113
     /tmp/cc3y761g.s:1768   .text:00000000000004d4 .LVL123
     /tmp/cc3y761g.s:1788   .text:00000000000004e0 .LVL124
     /tmp/cc3y761g.s:831    .text:0000000000000228 .LVL40
     /tmp/cc3y761g.s:836    .text:000000000000022c .LVL41
     /tmp/cc3y761g.s:929    .text:0000000000000268 .LVL49
     /tmp/cc3y761g.s:124    .text:0000000000000078 .LVL2
     /tmp/cc3y761g.s:149    .text:0000000000000090 .LVL5
     /tmp/cc3y761g.s:138    .text:0000000000000080 .LVL4
     /tmp/cc3y761g.s:652    .text:00000000000001ac .LVL25
     /tmp/cc3y761g.s:775    .text:0000000000000204 .LVL36
     /tmp/cc3y761g.s:668    .text:00000000000001b8 .LVL26
     /tmp/cc3y761g.s:701    .text:00000000000001cc .LVL27
     /tmp/cc3y761g.s:707    .text:00000000000001d0 .LVL28
     /tmp/cc3y761g.s:713    .text:00000000000001d4 .LVL29
     /tmp/cc3y761g.s:719    .text:00000000000001d8 .LVL30
     /tmp/cc3y761g.s:734    .text:00000000000001ec .LVL32
     /tmp/cc3y761g.s:768    .text:00000000000001fc .LVL35
     /tmp/cc3y761g.s:742    .text:00000000000001f0 .LVL33
     /tmp/cc3y761g.s:752    .text:00000000000001f4 .LVL34
     /tmp/cc3y761g.s:801    .text:0000000000000214 .LVL38
     /tmp/cc3y761g.s:817    .text:0000000000000220 .LVL39
     /tmp/cc3y761g.s:846    .text:0000000000000238 .LVL43
     /tmp/cc3y761g.s:856    .text:000000000000023c .LVL44
     /tmp/cc3y761g.s:899    .text:0000000000000254 .LVL47
     /tmp/cc3y761g.s:915    .text:0000000000000260 .LVL48
     /tmp/cc3y761g.s:942    .text:0000000000000274 .LVL51
     /tmp/cc3y761g.s:952    .text:0000000000000278 .LVL52
     /tmp/cc3y761g.s:995    .text:0000000000000290 .LVL55
     /tmp/cc3y761g.s:1011   .text:000000000000029c .LVL56
     /tmp/cc3y761g.s:1034   .text:00000000000002bc .LVL58
     /tmp/cc3y761g.s:1077   .text:00000000000002d4 .LVL61
     /tmp/cc3y761g.s:1093   .text:00000000000002e0 .LVL62
     /tmp/cc3y761g.s:1109   .text:00000000000002ec .LVL64
     /tmp/cc3y761g.s:1152   .text:0000000000000304 .LVL67
     /tmp/cc3y761g.s:1168   .text:0000000000000310 .LVL68
     /tmp/cc3y761g.s:1188   .text:0000000000000328 .LVL70
     /tmp/cc3y761g.s:1231   .text:0000000000000340 .LVL73
     /tmp/cc3y761g.s:1247   .text:000000000000034c .LVL74
     /tmp/cc3y761g.s:1268   .text:0000000000000358 .LVL75
     /tmp/cc3y761g.s:1274   .text:000000000000035c .LVL76
GAS LISTING /tmp/cc3y761g.s 			page 78


     /tmp/cc3y761g.s:1293   .text:0000000000000374 .LVL79
     /tmp/cc3y761g.s:1312   .text:0000000000000380 .LVL81
     /tmp/cc3y761g.s:1318   .text:0000000000000388 .LVL82
     /tmp/cc3y761g.s:1352   .text:0000000000000398 .LVL85
     /tmp/cc3y761g.s:1286   .text:000000000000036c .LVL78
     /tmp/cc3y761g.s:1305   .text:000000000000037c .LVL80
     /tmp/cc3y761g.s:1326   .text:000000000000038c .LVL83
     /tmp/cc3y761g.s:1336   .text:0000000000000390 .LVL84
     /tmp/cc3y761g.s:1383   .text:00000000000003b0 .LVL87
     /tmp/cc3y761g.s:1399   .text:00000000000003bc .LVL88
     /tmp/cc3y761g.s:1418   .text:00000000000003c8 .LVL90
     /tmp/cc3y761g.s:1472   .text:0000000000000404 .LVL96
     /tmp/cc3y761g.s:1484   .text:0000000000000418 .LVL97
     /tmp/cc3y761g.s:1425   .text:00000000000003cc .LVL91
     /tmp/cc3y761g.s:1439   .text:00000000000003dc .LVL93
     /tmp/cc3y761g.s:1465   .text:0000000000000400 .LVL95
     /tmp/cc3y761g.s:1495   .text:000000000000041c .LVL98
     /tmp/cc3y761g.s:1515   .text:0000000000000430 .LVL100
     /tmp/cc3y761g.s:1558   .text:0000000000000448 .LVL103
     /tmp/cc3y761g.s:1574   .text:0000000000000454 .LVL104
     /tmp/cc3y761g.s:1589   .text:000000000000045c .LVL105
     /tmp/cc3y761g.s:1605   .text:0000000000000468 .LVL107
     /tmp/cc3y761g.s:1640   .text:0000000000000478 .LVL110
     /tmp/cc3y761g.s:1598   .text:0000000000000460 .LVL106
     /tmp/cc3y761g.s:1614   .text:000000000000046c .LVL108
     /tmp/cc3y761g.s:1624   .text:0000000000000470 .LVL109
     /tmp/cc3y761g.s:1674   .text:0000000000000494 .LVL114
     /tmp/cc3y761g.s:1690   .text:00000000000004a0 .LVL115
     /tmp/cc3y761g.s:1705   .text:00000000000004a8 .LVL116
     /tmp/cc3y761g.s:1721   .text:00000000000004b4 .LVL118
     /tmp/cc3y761g.s:1756   .text:00000000000004c4 .LVL121
     /tmp/cc3y761g.s:1714   .text:00000000000004ac .LVL117
     /tmp/cc3y761g.s:1730   .text:00000000000004b8 .LVL119
     /tmp/cc3y761g.s:1740   .text:00000000000004bc .LVL120
     /tmp/cc3y761g.s:1855   .text:0000000000000514 .LVL132
     /tmp/cc3y761g.s:1865   .text:0000000000000518 .LVL133
     /tmp/cc3y761g.s:504    .text:000000000000014c .LVL12
     /tmp/cc3y761g.s:520    .text:0000000000000158 .LVL13
     /tmp/cc3y761g.s:537    .text:0000000000000164 .LVL14
     /tmp/cc3y761g.s:570    .text:0000000000000184 .LVL19
     /tmp/cc3y761g.s:583    .text:0000000000000188 .LVL20
     /tmp/cc3y761g.s:596    .text:000000000000018c .LVL21
     /tmp/cc3y761g.s:2070   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3y761g.s:1420   .text:00000000000003c8 .LBB271
     /tmp/cc3y761g.s:1454   .text:00000000000003f4 .LBE271
     /tmp/cc3y761g.s:1470   .text:0000000000000404 .LBB280
     /tmp/cc3y761g.s:1488   .text:0000000000000418 .LBE280
     /tmp/cc3y761g.s:1430   .text:00000000000003d4 .LBE272
     /tmp/cc3y761g.s:1473   .text:0000000000000404 .LBB277
     /tmp/cc3y761g.s:1487   .text:0000000000000418 .LBE277

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
GAS LISTING /tmp/cc3y761g.s 			page 79


_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
_ZN7_thread8setStackEPm
