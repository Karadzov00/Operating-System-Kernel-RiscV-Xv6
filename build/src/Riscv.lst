GAS LISTING /tmp/cc3WCdlM.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/cc3WCdlM.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101EF 		addi	sp,sp,-272
  50              		.cfi_def_cfa_offset 272
  51 0024 23341110 		sd	ra,264(sp)
  52 0028 23308110 		sd	s0,256(sp)
  53 002c 233C910E 		sd	s1,248(sp)
  54 0030 2338210F 		sd	s2,240(sp)
  55 0034 2334310F 		sd	s3,232(sp)
  56 0038 2330410F 		sd	s4,224(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040111 		addi	s0,sp,272
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB174:
  67              	.LBB175:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/cc3WCdlM.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/cc3WCdlM.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 233CF4EE 		sd	a5,-264(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 833784EF 		ld	a5,-264(s0)
  81              	.LBE175:
  82              	.LBE174:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 24 5
  89              		.loc 1 24 49 is_stmt 0
  90              	#APP
  91              	# 24 "src/Riscv.cpp" 1
  25              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  95              		.loc 1 27 5 is_stmt 1
  28:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  29:src/Riscv.cpp ****     }
  30:src/Riscv.cpp ****     else if(scause == 0x0000000000000008UL){
  96              		.loc 1 30 10
  97              	#NO_APP
  98              	.LBB176:
  99 0054 13078000 		li	a4,8
 100 0058 6386E702 		beq	a5,a4,.L30
 101              	.LBE176:
GAS LISTING /tmp/cc3WCdlM.s 			page 5


  31:src/Riscv.cpp ****         uint64 sepc = r_sepc();
  32:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp ****         w_sepc(sepc + 4);
  35:src/Riscv.cpp ****         w_sstatus(sstatus);
  36:src/Riscv.cpp ****     }
  37:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
 102              		.loc 1 37 10
  38:src/Riscv.cpp ****         console_handler();
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else if (scause == 0x0000000000000009UL){
 103              		.loc 1 40 10
 104              	.LBB416:
 105              	.LBB177:
 106 005c 13079000 		li	a4,9
 107 0060 6388E704 		beq	a5,a4,.L31
 108              	.LVL2:
 109              	.L3:
 110              	.LBE177:
 111              	.LBE416:
  41:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp ****         //call from yield
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp ****         if(a0reg==0x11){
  46:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  47:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****             _thread::thread_t *arg1;
  51:src/Riscv.cpp ****             _thread::Body arg2;
  52:src/Riscv.cpp ****             uint64 arg3;
  53:src/Riscv.cpp ****             uint64 *arg4;
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  57:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  58:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  65:src/Riscv.cpp **** 
  66:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  67:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  68:src/Riscv.cpp ****             *arg1=t;
  69:src/Riscv.cpp **** 
  70:src/Riscv.cpp ****             uint64 ret;
  71:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  72:src/Riscv.cpp ****             else ret =-1;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             //return _thread* adress through a0
  76:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  77:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 6


  78:src/Riscv.cpp ****             w_sstatus(sstatus);
  79:src/Riscv.cpp ****             w_sepc(sepc);
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  84:src/Riscv.cpp ****             //kmem_alloc
  85:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             //write return value to a0 register
  89:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****             w_sstatus(sstatus);
  92:src/Riscv.cpp ****             w_sepc(sepc);
  93:src/Riscv.cpp ****         }
  94:src/Riscv.cpp ****         else if(a0reg==0x02){
  95:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  99:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 100:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             w_sstatus(sstatus);
 103:src/Riscv.cpp ****             w_sepc(sepc);
 104:src/Riscv.cpp ****         }
 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****         else if(a0reg==0x12){
 107:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 108:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::running->finished=true;
 111:src/Riscv.cpp ****             _thread::dispatch();
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             w_sstatus(sstatus);
 114:src/Riscv.cpp ****             w_sepc(sepc);
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****         }
 118:src/Riscv.cpp ****         else if(a0reg == 0x13){
 119:src/Riscv.cpp ****             //thread dispatch
 120:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 121:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             _thread::dispatch();
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp ****             w_sstatus(sstatus);
 127:src/Riscv.cpp ****             w_sepc(sepc);
 128:src/Riscv.cpp ****         }
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         else if(a0reg==0x04){
 131:src/Riscv.cpp ****             //call from yield
 132:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 133:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 134:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 7


 135:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 136:src/Riscv.cpp ****             _thread::dispatch();
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             w_sstatus(sstatus);
 139:src/Riscv.cpp ****             w_sepc(sepc);
 140:src/Riscv.cpp ****         }
 141:src/Riscv.cpp ****         else if(a0reg==0x21){
 142:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 143:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 146:src/Riscv.cpp ****            uint64 arg2;
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 149:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 152:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 155:src/Riscv.cpp ****             sem->open();
 156:src/Riscv.cpp ****             *arg1=sem;
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             uint64 ret=0;
 159:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 160:src/Riscv.cpp ****             else ret=-1;
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             w_sstatus(sstatus);
 165:src/Riscv.cpp ****             w_sepc(sepc);
 166:src/Riscv.cpp ****         }
 167:src/Riscv.cpp ****         else if(a0reg==0x22){
 168:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 169:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 179:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 180:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 181:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 182:src/Riscv.cpp ****                 t->setDeblocked();
 183:src/Riscv.cpp ****                 sem->val++;
 184:src/Riscv.cpp ****                 Scheduler::put(t);
 185:src/Riscv.cpp ****             }
 186:src/Riscv.cpp ****              sem->close();
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****             delete sem;
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp ****             w_sstatus(sstatus);
 191:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/cc3WCdlM.s 			page 8


 192:src/Riscv.cpp ****         }
 193:src/Riscv.cpp ****         else if(a0reg==0x23){
 194:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 195:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****             uint64 ret;
 204:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 205:src/Riscv.cpp ****             if(arg1->isOpened()) {
 206:src/Riscv.cpp ****                  ret = arg1->wait();
 207:src/Riscv.cpp ****             }
 208:src/Riscv.cpp ****             else{
 209:src/Riscv.cpp ****                 ret=-1;
 210:src/Riscv.cpp ****             }
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x24){
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 223:src/Riscv.cpp **** 
 224:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             uint64 ret;
 227:src/Riscv.cpp ****             if(arg1->isOpened()) {
 228:src/Riscv.cpp ****                 arg1->signal();
 229:src/Riscv.cpp ****                 ret=0;
 230:src/Riscv.cpp ****             }
 231:src/Riscv.cpp ****             else{
 232:src/Riscv.cpp ****                 ret = -1;
 233:src/Riscv.cpp ****             }
 234:src/Riscv.cpp **** 
 235:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****             w_sstatus(sstatus);
 238:src/Riscv.cpp ****             w_sepc(sepc);
 239:src/Riscv.cpp ****         }
 240:src/Riscv.cpp ****         else if(a0reg==0x41){
 241:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 242:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp ****             //call method from kernel Console class
 245:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 246:src/Riscv.cpp ****             char c = __getc();
 247:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 248:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 9


 249:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 250:src/Riscv.cpp **** 
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp ****             w_sstatus(sstatus);
 253:src/Riscv.cpp ****             w_sepc(sepc);
 254:src/Riscv.cpp ****         }
 255:src/Riscv.cpp ****         else if(a0reg==0x42){
 256:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 257:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp ****             char c;
 260:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 261:src/Riscv.cpp **** 
 262:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 265:src/Riscv.cpp ****             __putc(c);
 266:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****             w_sstatus(sstatus);
 269:src/Riscv.cpp ****             w_sepc(sepc);
 270:src/Riscv.cpp ****         }
 271:src/Riscv.cpp ****         else{
 272:src/Riscv.cpp ****             // unexpected trap cause
 273:src/Riscv.cpp ****         }
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****     }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp **** }
 112              		.loc 1 277 1 is_stmt 0
 113 0064 83308110 		ld	ra,264(sp)
 114              		.cfi_remember_state
 115              		.cfi_restore 1
 116 0068 03340110 		ld	s0,256(sp)
 117              		.cfi_restore 8
 118              		.cfi_def_cfa 2, 272
 119 006c 8334810F 		ld	s1,248(sp)
 120              		.cfi_restore 9
 121 0070 0339010F 		ld	s2,240(sp)
 122              		.cfi_restore 18
 123 0074 8339810E 		ld	s3,232(sp)
 124              		.cfi_restore 19
 125 0078 033A010E 		ld	s4,224(sp)
 126              		.cfi_restore 20
 127 007c 13010111 		addi	sp,sp,272
 128              		.cfi_def_cfa_offset 0
 129 0080 67800000 		jr	ra
 130              	.LVL3:
 131              	.L30:
 132              		.cfi_restore_state
 133              	.LBB417:
 134              	.LBB394:
  31:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 135              		.loc 1 31 9 is_stmt 1
 136              	.LBB395:
 137              	.LBB396:
 101:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc3WCdlM.s 			page 10


 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 138              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 139              		.loc 2 111 5
 140              		.loc 2 111 64 is_stmt 0
 141              	#APP
 142              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 143              		csrr a5, sepc
 144              	# 0 "" 2
 145              	.LVL4:
 146              	#NO_APP
 147 0088 2334F4F0 		sd	a5,-248(s0)
 148              		.loc 2 112 5 is_stmt 1
 149              		.loc 2 112 12 is_stmt 0
 150 008c 033784F0 		ld	a4,-248(s0)
 151              	.LVL5:
 152              	.LBE396:
 153              	.LBE395:
  32:src/Riscv.cpp **** 
 154              		.loc 1 32 9 is_stmt 1
 155              	.LBB397:
 156              	.LBB398:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 11


 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 157              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 158              		.loc 2 181 5
 159              		.loc 2 181 76 is_stmt 0
 160              	#APP
 161              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 162              		csrr a5, sstatus
 163              	# 0 "" 2
 164              	#NO_APP
 165 0094 2330F4F0 		sd	a5,-256(s0)
 166              		.loc 2 182 5 is_stmt 1
 167              		.loc 2 182 12 is_stmt 0
 168 0098 833704F0 		ld	a5,-256(s0)
 169              	.LBE398:
GAS LISTING /tmp/cc3WCdlM.s 			page 12


 170              	.LBE397:
  32:src/Riscv.cpp **** 
 171              		.loc 1 32 53
 172 009c 93F7F7EF 		andi	a5,a5,-257
 173              	.LVL6:
  34:src/Riscv.cpp ****         w_sstatus(sstatus);
 174              		.loc 1 34 9 is_stmt 1
  34:src/Riscv.cpp ****         w_sstatus(sstatus);
 175              		.loc 1 34 15 is_stmt 0
 176 00a0 13074700 		addi	a4,a4,4
 177              	.LVL7:
 178              	.LBB399:
 179              	.LBB400:
 117:src/../h/Riscv.hpp **** }
 180              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 181              		.loc 2 117 65 is_stmt 0
 182              	#APP
 183              	# 117 "src/../h/Riscv.hpp" 1
 184              		csrw sepc, a4
 185              	# 0 "" 2
 186              	.LVL8:
 187              	#NO_APP
 188              	.LBE400:
 189              	.LBE399:
  35:src/Riscv.cpp ****     }
 190              		.loc 1 35 9 is_stmt 1
 191              	.LBB401:
 192              	.LBB402:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 193              		.loc 2 187 5
 194              		.loc 2 187 77 is_stmt 0
 195              	#APP
 196              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 197              		csrw sstatus, a5
 198              	# 0 "" 2
 199              		.loc 2 188 1
 200              	#NO_APP
 201 00ac 6FF09FFB 		j	.L3
 202              	.LVL9:
 203              	.L31:
 204              	.LBE402:
 205              	.LBE401:
 206              	.LBE394:
 207              	.LBE417:
  45:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 208              		.loc 1 45 9 is_stmt 1
 209              	.LBB418:
 210              	.LBB403:
 211              	.LBB178:
 212 00b0 93071001 		li	a5,17
 213              	.LVL10:
GAS LISTING /tmp/cc3WCdlM.s 			page 13


 214 00b4 6388F40A 		beq	s1,a5,.L32
 215              	.L6:
 216              	.LBE178:
 217              	.LBE403:
 218              	.LBE418:
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 219              		.loc 1 81 9
 220              	.LBB419:
 221              	.LBB404:
 222              	.LBB188:
 223 00b8 93071000 		li	a5,1
 224 00bc 6388F410 		beq	s1,a5,.L33
 225              	.LBE188:
 226              	.LBE404:
 227              	.LBE419:
  94:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 228              		.loc 1 94 14
 229              	.LBB420:
 230              	.LBB405:
 231              	.LBB382:
 232              	.LBB189:
 233 00c0 93072000 		li	a5,2
 234 00c4 6382F414 		beq	s1,a5,.L34
 235              	.LBE189:
 236              	.LBE382:
 237              	.LBE405:
 238              	.LBE420:
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 239              		.loc 1 106 14
 240              	.LBB421:
 241              	.LBB406:
 242              	.LBB383:
 243              	.LBB363:
 244              	.LBB190:
 245 00c8 93072001 		li	a5,18
 246 00cc 638AF416 		beq	s1,a5,.L35
 247              	.LBE190:
 248              	.LBE363:
 249              	.LBE383:
 250              	.LBE406:
 251              	.LBE421:
 118:src/Riscv.cpp ****             //thread dispatch
 252              		.loc 1 118 14
 253              	.LBB422:
 254              	.LBB407:
 255              	.LBB384:
 256              	.LBB364:
 257              	.LBB345:
 258              	.LBB191:
 259 00d0 93073001 		li	a5,19
 260 00d4 6388F41A 		beq	s1,a5,.L36
 261              	.LBE191:
 262              	.LBE345:
 263              	.LBE364:
 264              	.LBE384:
 265              	.LBE407:
 266              	.LBE422:
GAS LISTING /tmp/cc3WCdlM.s 			page 14


 130:src/Riscv.cpp ****             //call from yield
 267              		.loc 1 130 14
 268              	.LBB423:
 269              	.LBB408:
 270              	.LBB385:
 271              	.LBB365:
 272              	.LBB346:
 273              	.LBB328:
 274              	.LBB192:
 275 00d8 93074000 		li	a5,4
 276 00dc 638CF41C 		beq	s1,a5,.L37
 277              	.LBE192:
 278              	.LBE328:
 279              	.LBE346:
 280              	.LBE365:
 281              	.LBE385:
 282              	.LBE408:
 283              	.LBE423:
 141:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 284              		.loc 1 141 14
 285              	.LBB424:
 286              	.LBB409:
 287              	.LBB386:
 288              	.LBB366:
 289              	.LBB347:
 290              	.LBB329:
 291              	.LBB312:
 292              	.LBB193:
 293 00e0 93071002 		li	a5,33
 294 00e4 6386F420 		beq	s1,a5,.L38
 295              	.LBE193:
 296              	.LBE312:
 297              	.LBE329:
 298              	.LBE347:
 299              	.LBE366:
 300              	.LBE386:
 301              	.LBE409:
 302              	.LBE424:
 167:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 303              		.loc 1 167 14
 304              	.LBB425:
 305              	.LBB410:
 306              	.LBB387:
 307              	.LBB367:
 308              	.LBB348:
 309              	.LBB330:
 310              	.LBB313:
 311              	.LBB297:
 312              	.LBB194:
 313 00e8 93072002 		li	a5,34
 314 00ec 638AF426 		beq	s1,a5,.L39
 315              	.LBE194:
 316              	.LBE297:
 317              	.LBE313:
 318              	.LBE330:
 319              	.LBE348:
 320              	.LBE367:
GAS LISTING /tmp/cc3WCdlM.s 			page 15


 321              	.LBE387:
 322              	.LBE410:
 323              	.LBE425:
 193:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 324              		.loc 1 193 14
 325              	.LBB426:
 326              	.LBB411:
 327              	.LBB388:
 328              	.LBB368:
 329              	.LBB349:
 330              	.LBB331:
 331              	.LBB314:
 332              	.LBB298:
 333              	.LBB277:
 334              	.LBB195:
 335 00f0 93073002 		li	a5,35
 336 00f4 6382F430 		beq	s1,a5,.L40
 337              	.LBE195:
 338              	.LBE277:
 339              	.LBE298:
 340              	.LBE314:
 341              	.LBE331:
 342              	.LBE349:
 343              	.LBE368:
 344              	.LBE388:
 345              	.LBE411:
 346              	.LBE426:
 216:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 347              		.loc 1 216 14
 348              	.LBB427:
 349              	.LBB412:
 350              	.LBB389:
 351              	.LBB369:
 352              	.LBB350:
 353              	.LBB332:
 354              	.LBB315:
 355              	.LBB299:
 356              	.LBB278:
 357              	.LBB252:
 358              	.LBB196:
 359 00f8 93074002 		li	a5,36
 360 00fc 6384F434 		beq	s1,a5,.L41
 361              	.LBE196:
 362              	.LBE252:
 363              	.LBE278:
 364              	.LBE299:
 365              	.LBE315:
 366              	.LBE332:
 367              	.LBE350:
 368              	.LBE369:
 369              	.LBE389:
 370              	.LBE412:
 371              	.LBE427:
 240:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 372              		.loc 1 240 14
 373              	.LBB428:
 374              	.LBB413:
GAS LISTING /tmp/cc3WCdlM.s 			page 16


 375              	.LBB390:
 376              	.LBB370:
 377              	.LBB351:
 378              	.LBB333:
 379              	.LBB316:
 380              	.LBB300:
 381              	.LBB279:
 382              	.LBB253:
 383              	.LBB238:
 384              	.LBB197:
 385 0100 93071004 		li	a5,65
 386 0104 6388F438 		beq	s1,a5,.L42
 387              	.LBE197:
 388              	.LBE238:
 389              	.LBE253:
 390              	.LBE279:
 391              	.LBE300:
 392              	.LBE316:
 393              	.LBE333:
 394              	.LBE351:
 395              	.LBE370:
 396              	.LBE390:
 397              	.LBE413:
 398              	.LBE428:
 255:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 399              		.loc 1 255 14
 400              	.LBB429:
 401              	.LBB414:
 402              	.LBB391:
 403              	.LBB371:
 404              	.LBB352:
 405              	.LBB334:
 406              	.LBB317:
 407              	.LBB301:
 408              	.LBB280:
 409              	.LBB254:
 410              	.LBB239:
 411              	.LBB225:
 412              	.LBB198:
 413 0108 93072004 		li	a5,66
 414 010c E39CF4F4 		bne	s1,a5,.L3
 415              	.LBB199:
 256:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 416              		.loc 1 256 13
 417              	.LBB200:
 418              	.LBB201:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 419              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 420              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 421              		.loc 2 111 64 is_stmt 0
 422              	#APP
 423              	# 111 "src/../h/Riscv.hpp" 1
 424              		csrr a5, sepc
 425              	# 0 "" 2
 426              	#NO_APP
GAS LISTING /tmp/cc3WCdlM.s 			page 17


 427 0114 2334F4FC 		sd	a5,-56(s0)
 112:src/../h/Riscv.hpp **** }
 428              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 429              		.loc 2 112 12 is_stmt 0
 430 0118 833484FC 		ld	s1,-56(s0)
 431              	.LVL11:
 432              	.LBE201:
 433              	.LBE200:
 256:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 434              		.loc 1 256 38
 435 011c 93844400 		addi	s1,s1,4
 436              	.LVL12:
 257:src/Riscv.cpp **** 
 437              		.loc 1 257 13 is_stmt 1
 438              	.LBB202:
 439              	.LBB203:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 440              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 441              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 442              		.loc 2 181 76 is_stmt 0
 443              	#APP
 444              	# 181 "src/../h/Riscv.hpp" 1
 445              		csrr a5, sstatus
 446              	# 0 "" 2
 447              	#NO_APP
 448 0124 2330F4FC 		sd	a5,-64(s0)
 182:src/../h/Riscv.hpp **** }
 449              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 450              		.loc 2 182 12 is_stmt 0
 451 0128 033904FC 		ld	s2,-64(s0)
 452              	.LVL13:
 453              	.LBE203:
 454              	.LBE202:
 259:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 455              		.loc 1 259 13 is_stmt 1
 260:src/Riscv.cpp **** 
 456              		.loc 1 260 13
 260:src/Riscv.cpp **** 
 457              		.loc 1 260 48 is_stmt 0
 458              	#APP
 459              	# 260 "src/Riscv.cpp" 1
 262:src/Riscv.cpp **** 
 460              		ld a1, 11*8(fp)
 461              	# 0 "" 2
 462              		.loc 1 262 13 is_stmt 1
 262:src/Riscv.cpp **** 
 463              		.loc 1 262 53 is_stmt 0
 464              	# 262 "src/Riscv.cpp" 1
 465              		mv a0, a1
 466              	# 0 "" 2
 467              	#NO_APP
 468 0134 1375F50F 		andi	a0,a0,0xff
 469              	.LVL14:
GAS LISTING /tmp/cc3WCdlM.s 			page 18


 264:src/Riscv.cpp ****             __putc(c);
 470              		.loc 1 264 13 is_stmt 1
 264:src/Riscv.cpp ****             __putc(c);
 471              		.loc 1 264 27 is_stmt 0
 472 0138 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 472      83B70700 
 473              	.LVL15:
 474              	.LBB204:
 475              	.LBB205:
 129:src/../h/Riscv.hpp **** }
 476              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 477              		.loc 2 129 69 is_stmt 0
 478              	#APP
 479              	# 129 "src/../h/Riscv.hpp" 1
 480              		csrw stvec, a5
 481              	# 0 "" 2
 482              	.LVL16:
 483              	#NO_APP
 484              	.LBE205:
 485              	.LBE204:
 265:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 486              		.loc 1 265 13 is_stmt 1
 265:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 487              		.loc 1 265 19 is_stmt 0
 488 0144 97000000 		call	__putc@plt
 488      E7800000 
 489              	.LVL17:
 266:src/Riscv.cpp **** 
 490              		.loc 1 266 13 is_stmt 1
 266:src/Riscv.cpp **** 
 491              		.loc 1 266 27 is_stmt 0
 492 014c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 492      83B70700 
 493              	.LVL18:
 494              	.LBB206:
 495              	.LBB207:
 129:src/../h/Riscv.hpp **** }
 496              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 497              		.loc 2 129 69 is_stmt 0
 498              	#APP
 499              	# 129 "src/../h/Riscv.hpp" 1
 500              		csrw stvec, a5
 501              	# 0 "" 2
 502              	.LVL19:
 503              	#NO_APP
 504              	.LBE207:
 505              	.LBE206:
 268:src/Riscv.cpp ****             w_sepc(sepc);
 506              		.loc 1 268 13 is_stmt 1
 507              	.LBB208:
 508              	.LBB209:
 187:src/../h/Riscv.hpp **** }
 509              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 510              		.loc 2 187 77 is_stmt 0
GAS LISTING /tmp/cc3WCdlM.s 			page 19


 511              	#APP
 512              	# 187 "src/../h/Riscv.hpp" 1
 513              		csrw sstatus, s2
 514              	# 0 "" 2
 515              	.LVL20:
 516              	#NO_APP
 517              	.LBE209:
 518              	.LBE208:
 269:src/Riscv.cpp ****         }
 519              		.loc 1 269 13 is_stmt 1
 520              	.LBB210:
 521              	.LBB211:
 117:src/../h/Riscv.hpp **** }
 522              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 523              		.loc 2 117 65 is_stmt 0
 524              	#APP
 525              	# 117 "src/../h/Riscv.hpp" 1
 526              		csrw sepc, s1
 527              	# 0 "" 2
 528              	.LVL21:
 529              	#NO_APP
 530              	.LBE211:
 531              	.LBE210:
 532              	.LBE199:
 533              	.LBE198:
 534              	.LBE225:
 535              	.LBE239:
 536              	.LBE254:
 537              	.LBE280:
 538              	.LBE301:
 539              	.LBE317:
 540              	.LBE334:
 541              	.LBE352:
 542              	.LBE371:
 543              	.LBE391:
 544              	.LBE414:
 545              	.LBE429:
 546              		.loc 1 277 1
 547 0160 6FF05FF0 		j	.L3
 548              	.LVL22:
 549              	.L32:
 550              	.LBB430:
 551              	.LBB415:
 552              	.LBB392:
 553              	.LBB179:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 554              		.loc 1 46 13 is_stmt 1
 555              	.LBB180:
 556              	.LBB181:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 557              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 558              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 559              		.loc 2 111 64 is_stmt 0
 560              	#APP
GAS LISTING /tmp/cc3WCdlM.s 			page 20


 561              	# 111 "src/../h/Riscv.hpp" 1
 562              		csrr a5, sepc
 563              	# 0 "" 2
 564              	#NO_APP
 565 0168 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 566              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 567              		.loc 2 112 12 is_stmt 0
 568 016c 033984F1 		ld	s2,-232(s0)
 569              	.LBE181:
 570              	.LBE180:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 571              		.loc 1 46 38
 572 0170 13094900 		addi	s2,s2,4
 573              	.LVL23:
  47:src/Riscv.cpp **** 
 574              		.loc 1 47 13 is_stmt 1
 575              	.LBB182:
 576              	.LBB183:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 577              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 578              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 579              		.loc 2 181 76 is_stmt 0
 580              	#APP
 581              	# 181 "src/../h/Riscv.hpp" 1
 582              		csrr a5, sstatus
 583              	# 0 "" 2
 584              	#NO_APP
 585 0178 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 586              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 587              		.loc 2 182 12 is_stmt 0
 588 017c 833904F1 		ld	s3,-240(s0)
 589              	.LVL24:
 590              	.LBE183:
 591              	.LBE182:
  50:src/Riscv.cpp ****             _thread::Body arg2;
 592              		.loc 1 50 13 is_stmt 1
  51:src/Riscv.cpp ****             uint64 arg3;
 593              		.loc 1 51 13
  52:src/Riscv.cpp ****             uint64 *arg4;
 594              		.loc 1 52 13
  53:src/Riscv.cpp **** 
 595              		.loc 1 53 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 596              		.loc 1 55 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 597              		.loc 1 55 48 is_stmt 0
 598              	#APP
 599              	# 55 "src/Riscv.cpp" 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 600              		ld a1, 11*8(fp)
 601              	# 0 "" 2
GAS LISTING /tmp/cc3WCdlM.s 			page 21


 602              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 603              		.loc 1 56 48 is_stmt 0
 604              	# 56 "src/Riscv.cpp" 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 605              		ld a2, 12*8(fp)
 606              	# 0 "" 2
 607              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 608              		.loc 1 57 48 is_stmt 0
 609              	# 57 "src/Riscv.cpp" 1
  58:src/Riscv.cpp **** 
 610              		ld a3, 13*8(fp)
 611              	# 0 "" 2
 612              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp **** 
 613              		.loc 1 58 48 is_stmt 0
 614              	# 58 "src/Riscv.cpp" 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 615              		ld a4, 14*8(fp)
 616              	# 0 "" 2
 617              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 618              		.loc 1 61 56 is_stmt 0
 619              	# 61 "src/Riscv.cpp" 1
 620              		mv s4, a1
 621              	# 0 "" 2
 622              	.LVL25:
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 623              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 624              		.loc 1 62 56 is_stmt 0
 625              	# 62 "src/Riscv.cpp" 1
 626              		mv a0, a2
 627              	# 0 "" 2
 628              	.LVL26:
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 629              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 630              		.loc 1 63 56 is_stmt 0
 631              	# 63 "src/Riscv.cpp" 1
 632              		mv a1, a3
 633              	# 0 "" 2
 634              	.LVL27:
  64:src/Riscv.cpp **** 
 635              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp **** 
 636              		.loc 1 64 56 is_stmt 0
 637              	# 64 "src/Riscv.cpp" 1
 638              		mv a2, a4
 639              	# 0 "" 2
 640              	.LVL28:
  67:src/Riscv.cpp ****             *arg1=t;
 641              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp ****             *arg1=t;
 642              		.loc 1 67 47 is_stmt 0
 643              	#NO_APP
GAS LISTING /tmp/cc3WCdlM.s 			page 22


 644 01a0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 644      E7800000 
 645              	.LVL29:
  68:src/Riscv.cpp **** 
 646              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp **** 
 647              		.loc 1 68 18 is_stmt 0
 648 01a8 2330AA00 		sd	a0,0(s4)
  70:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 649              		.loc 1 70 13 is_stmt 1
  71:src/Riscv.cpp ****             else ret =-1;
 650              		.loc 1 71 13
 651 01ac 630C0500 		beqz	a0,.L25
  71:src/Riscv.cpp ****             else ret =-1;
 652              		.loc 1 71 31 is_stmt 0
 653 01b0 93070000 		li	a5,0
 654              	.L7:
 655              	.LVL30:
  76:src/Riscv.cpp **** 
 656              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp **** 
 657              		.loc 1 76 56 is_stmt 0
 658              	#APP
 659              	# 76 "src/Riscv.cpp" 1
  78:src/Riscv.cpp ****             w_sepc(sepc);
 660              		mv a0, a5
 661              	# 0 "" 2
 662              		.loc 1 78 13 is_stmt 1
 663              	.LVL31:
 664              	#NO_APP
 665              	.LBB184:
 666              	.LBB185:
 187:src/../h/Riscv.hpp **** }
 667              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 668              		.loc 2 187 77 is_stmt 0
 669              	#APP
 670              	# 187 "src/../h/Riscv.hpp" 1
 671              		csrw sstatus, s3
 672              	# 0 "" 2
 673              	.LVL32:
 674              	#NO_APP
 675              	.LBE185:
 676              	.LBE184:
  79:src/Riscv.cpp ****         }
 677              		.loc 1 79 13 is_stmt 1
 678              	.LBB186:
 679              	.LBB187:
 117:src/../h/Riscv.hpp **** }
 680              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 681              		.loc 2 117 65 is_stmt 0
 682              	#APP
 683              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 684              		csrw sepc, s2
 685              	# 0 "" 2
GAS LISTING /tmp/cc3WCdlM.s 			page 23


 686              		.loc 2 118 1
 687              	#NO_APP
 688 01c0 6FF09FEF 		j	.L6
 689              	.LVL33:
 690              	.L25:
 691              	.LBE187:
 692              	.LBE186:
  72:src/Riscv.cpp **** 
 693              		.loc 1 72 22
 694 01c4 9307F0FF 		li	a5,-1
 695 01c8 6FF0DFFE 		j	.L7
 696              	.LVL34:
 697              	.L33:
 698              	.LBE179:
 699              	.LBE392:
 700              	.LBB393:
 701              	.LBB372:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 702              		.loc 1 82 13 is_stmt 1
 703              	.LBB373:
 704              	.LBB374:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 705              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 706              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 707              		.loc 2 111 64 is_stmt 0
 708              	#APP
 709              	# 111 "src/../h/Riscv.hpp" 1
 710              		csrr a5, sepc
 711              	# 0 "" 2
 712              	#NO_APP
 713 01d0 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 714              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 715              		.loc 2 112 12 is_stmt 0
 716 01d4 833484F2 		ld	s1,-216(s0)
 717              	.LVL35:
 718              	.LBE374:
 719              	.LBE373:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 720              		.loc 1 82 38
 721 01d8 93844400 		addi	s1,s1,4
 722              	.LVL36:
  83:src/Riscv.cpp ****             //kmem_alloc
 723              		.loc 1 83 13 is_stmt 1
 724              	.LBB375:
 725              	.LBB376:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 726              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 727              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 728              		.loc 2 181 76 is_stmt 0
 729              	#APP
 730              	# 181 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cc3WCdlM.s 			page 24


 731              		csrr a5, sstatus
 732              	# 0 "" 2
 733              	#NO_APP
 734 01e0 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 735              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 736              		.loc 2 182 12 is_stmt 0
 737 01e4 033904F2 		ld	s2,-224(s0)
 738              	.LVL37:
 739              	.LBE376:
 740              	.LBE375:
  85:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 741              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 742              		.loc 1 85 56 is_stmt 0
 743              	#APP
 744              	# 85 "src/Riscv.cpp" 1
 745              		mv a0, a1
 746              	# 0 "" 2
 747              	.LVL38:
  86:src/Riscv.cpp **** 
 748              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 749              		.loc 1 86 61 is_stmt 0
 750              	#NO_APP
 751 01ec 13156500 		slli	a0,a0,6
 752              	.LVL39:
 753 01f0 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 753      E7800000 
 754              	.LVL40:
  89:src/Riscv.cpp **** 
 755              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp **** 
 756              		.loc 1 89 56 is_stmt 0
 757              	#APP
 758              	# 89 "src/Riscv.cpp" 1
  91:src/Riscv.cpp ****             w_sepc(sepc);
 759              		mv a0, a0
 760              	# 0 "" 2
 761              		.loc 1 91 13 is_stmt 1
 762              	.LVL41:
 763              	#NO_APP
 764              	.LBB377:
 765              	.LBB378:
 187:src/../h/Riscv.hpp **** }
 766              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 767              		.loc 2 187 77 is_stmt 0
 768              	#APP
 769              	# 187 "src/../h/Riscv.hpp" 1
 770              		csrw sstatus, s2
 771              	# 0 "" 2
 772              	.LVL42:
 773              	#NO_APP
 774              	.LBE378:
 775              	.LBE377:
GAS LISTING /tmp/cc3WCdlM.s 			page 25


  92:src/Riscv.cpp ****         }
 776              		.loc 1 92 13 is_stmt 1
 777              	.LBB379:
 778              	.LBB380:
 117:src/../h/Riscv.hpp **** }
 779              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 780              		.loc 2 117 65 is_stmt 0
 781              	#APP
 782              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 783              		csrw sepc, s1
 784              	# 0 "" 2
 785              		.loc 2 118 1
 786              	#NO_APP
 787 0204 6FF01FE6 		j	.L3
 788              	.LVL43:
 789              	.L34:
 790              	.LBE380:
 791              	.LBE379:
 792              	.LBE372:
 793              	.LBB381:
 794              	.LBB353:
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 795              		.loc 1 95 13 is_stmt 1
 796              	.LBB354:
 797              	.LBB355:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 798              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 799              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 800              		.loc 2 111 64 is_stmt 0
 801              	#APP
 802              	# 111 "src/../h/Riscv.hpp" 1
 803              		csrr a5, sepc
 804              	# 0 "" 2
 805              	#NO_APP
 806 020c 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 807              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 808              		.loc 2 112 12 is_stmt 0
 809 0210 833484F3 		ld	s1,-200(s0)
 810              	.LVL44:
 811              	.LBE355:
 812              	.LBE354:
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 813              		.loc 1 95 38
 814 0214 93844400 		addi	s1,s1,4
 815              	.LVL45:
  96:src/Riscv.cpp **** 
 816              		.loc 1 96 13 is_stmt 1
 817              	.LBB356:
 818              	.LBB357:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 819              		.loc 2 180 5
GAS LISTING /tmp/cc3WCdlM.s 			page 26


 181:src/../h/Riscv.hpp ****     return sstatus;
 820              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 821              		.loc 2 181 76 is_stmt 0
 822              	#APP
 823              	# 181 "src/../h/Riscv.hpp" 1
 824              		csrr a5, sstatus
 825              	# 0 "" 2
 826              	#NO_APP
 827 021c 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 828              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 829              		.loc 2 182 12 is_stmt 0
 830 0220 033904F3 		ld	s2,-208(s0)
 831              	.LVL46:
 832              	.LBE357:
 833              	.LBE356:
  98:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 834              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 835              		.loc 1 98 56 is_stmt 0
 836              	#APP
 837              	# 98 "src/Riscv.cpp" 1
 838              		mv a0, a1
 839              	# 0 "" 2
 840              	.LVL47:
  99:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 841              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 842              		.loc 1 99 49 is_stmt 0
 843              	#NO_APP
 844 0228 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 844      E7800000 
 845              	.LVL48:
 100:src/Riscv.cpp **** 
 846              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 847              		.loc 1 100 56 is_stmt 0
 848              	#APP
 849              	# 100 "src/Riscv.cpp" 1
 102:src/Riscv.cpp ****             w_sepc(sepc);
 850              		mv a0, a0
 851              	# 0 "" 2
 852              		.loc 1 102 13 is_stmt 1
 853              	.LVL49:
 854              	#NO_APP
 855              	.LBB358:
 856              	.LBB359:
 187:src/../h/Riscv.hpp **** }
 857              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 858              		.loc 2 187 77 is_stmt 0
 859              	#APP
 860              	# 187 "src/../h/Riscv.hpp" 1
 861              		csrw sstatus, s2
 862              	# 0 "" 2
GAS LISTING /tmp/cc3WCdlM.s 			page 27


 863              	.LVL50:
 864              	#NO_APP
 865              	.LBE359:
 866              	.LBE358:
 103:src/Riscv.cpp ****         }
 867              		.loc 1 103 13 is_stmt 1
 868              	.LBB360:
 869              	.LBB361:
 117:src/../h/Riscv.hpp **** }
 870              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 871              		.loc 2 117 65 is_stmt 0
 872              	#APP
 873              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 874              		csrw sepc, s1
 875              	# 0 "" 2
 876              		.loc 2 118 1
 877              	#NO_APP
 878 023c 6FF09FE2 		j	.L3
 879              	.LVL51:
 880              	.L35:
 881              	.LBE361:
 882              	.LBE360:
 883              	.LBE353:
 884              	.LBB362:
 885              	.LBB335:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 886              		.loc 1 107 13 is_stmt 1
 887              	.LBB336:
 888              	.LBB337:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 889              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 890              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 891              		.loc 2 111 64 is_stmt 0
 892              	#APP
 893              	# 111 "src/../h/Riscv.hpp" 1
 894              		csrr a5, sepc
 895              	# 0 "" 2
 896              	#NO_APP
 897 0244 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 898              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 899              		.loc 2 112 12 is_stmt 0
 900 0248 833484F4 		ld	s1,-184(s0)
 901              	.LVL52:
 902              	.LBE337:
 903              	.LBE336:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 904              		.loc 1 107 38
 905 024c 93844400 		addi	s1,s1,4
 906              	.LVL53:
 108:src/Riscv.cpp **** 
 907              		.loc 1 108 13 is_stmt 1
GAS LISTING /tmp/cc3WCdlM.s 			page 28


 908              	.LBB338:
 909              	.LBB339:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 910              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 911              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 912              		.loc 2 181 76 is_stmt 0
 913              	#APP
 914              	# 181 "src/../h/Riscv.hpp" 1
 915              		csrr a5, sstatus
 916              	# 0 "" 2
 917              	#NO_APP
 918 0254 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 919              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 920              		.loc 2 182 12 is_stmt 0
 921 0258 033904F4 		ld	s2,-192(s0)
 922              	.LVL54:
 923              	.LBE339:
 924              	.LBE338:
 110:src/Riscv.cpp ****             _thread::dispatch();
 925              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp ****             _thread::dispatch();
 926              		.loc 1 110 31 is_stmt 0
 927 025c 97070000 		la	a5,_ZN7_thread7runningE
 927      83B70700 
 928 0264 83B70700 		ld	a5,0(a5)
 110:src/Riscv.cpp ****             _thread::dispatch();
 929              		.loc 1 110 39
 930 0268 13071000 		li	a4,1
 931 026c 2384E702 		sb	a4,40(a5)
 111:src/Riscv.cpp **** 
 932              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp **** 
 933              		.loc 1 111 30 is_stmt 0
 934 0270 97000000 		call	_ZN7_thread8dispatchEv@plt
 934      E7800000 
 935              	.LVL55:
 113:src/Riscv.cpp ****             w_sepc(sepc);
 936              		.loc 1 113 13 is_stmt 1
 937              	.LBB340:
 938              	.LBB341:
 187:src/../h/Riscv.hpp **** }
 939              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 940              		.loc 2 187 77 is_stmt 0
 941              	#APP
 942              	# 187 "src/../h/Riscv.hpp" 1
 943              		csrw sstatus, s2
 944              	# 0 "" 2
 945              	.LVL56:
 946              	#NO_APP
 947              	.LBE341:
 948              	.LBE340:
 114:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 29


 949              		.loc 1 114 13 is_stmt 1
 950              	.LBB342:
 951              	.LBB343:
 117:src/../h/Riscv.hpp **** }
 952              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 953              		.loc 2 117 65 is_stmt 0
 954              	#APP
 955              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 956              		csrw sepc, s1
 957              	# 0 "" 2
 958              		.loc 2 118 1
 959              	#NO_APP
 960 0280 6FF05FDE 		j	.L3
 961              	.LVL57:
 962              	.L36:
 963              	.LBE343:
 964              	.LBE342:
 965              	.LBE335:
 966              	.LBB344:
 967              	.LBB318:
 120:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 968              		.loc 1 120 13 is_stmt 1
 969              	.LBB319:
 970              	.LBB320:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 971              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 972              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 973              		.loc 2 111 64 is_stmt 0
 974              	#APP
 975              	# 111 "src/../h/Riscv.hpp" 1
 976              		csrr a5, sepc
 977              	# 0 "" 2
 978              	#NO_APP
 979 0288 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 980              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 981              		.loc 2 112 12 is_stmt 0
 982 028c 833484F5 		ld	s1,-168(s0)
 983              	.LVL58:
 984              	.LBE320:
 985              	.LBE319:
 120:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 986              		.loc 1 120 38
 987 0290 93844400 		addi	s1,s1,4
 988              	.LVL59:
 121:src/Riscv.cpp **** 
 989              		.loc 1 121 13 is_stmt 1
 990              	.LBB321:
 991              	.LBB322:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 992              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cc3WCdlM.s 			page 30


 993              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 994              		.loc 2 181 76 is_stmt 0
 995              	#APP
 996              	# 181 "src/../h/Riscv.hpp" 1
 997              		csrr a5, sstatus
 998              	# 0 "" 2
 999              	#NO_APP
 1000 0298 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 1001              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1002              		.loc 2 182 12 is_stmt 0
 1003 029c 033904F5 		ld	s2,-176(s0)
 1004              	.LVL60:
 1005              	.LBE322:
 1006              	.LBE321:
 124:src/Riscv.cpp **** 
 1007              		.loc 1 124 13 is_stmt 1
 124:src/Riscv.cpp **** 
 1008              		.loc 1 124 30 is_stmt 0
 1009 02a0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1009      E7800000 
 1010              	.LVL61:
 126:src/Riscv.cpp ****             w_sepc(sepc);
 1011              		.loc 1 126 13 is_stmt 1
 1012              	.LBB323:
 1013              	.LBB324:
 187:src/../h/Riscv.hpp **** }
 1014              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1015              		.loc 2 187 77 is_stmt 0
 1016              	#APP
 1017              	# 187 "src/../h/Riscv.hpp" 1
 1018              		csrw sstatus, s2
 1019              	# 0 "" 2
 1020              	.LVL62:
 1021              	#NO_APP
 1022              	.LBE324:
 1023              	.LBE323:
 127:src/Riscv.cpp ****         }
 1024              		.loc 1 127 13 is_stmt 1
 1025              	.LBB325:
 1026              	.LBB326:
 117:src/../h/Riscv.hpp **** }
 1027              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1028              		.loc 2 117 65 is_stmt 0
 1029              	#APP
 1030              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1031              		csrw sepc, s1
 1032              	# 0 "" 2
 1033              		.loc 2 118 1
 1034              	#NO_APP
 1035 02b0 6FF05FDB 		j	.L3
 1036              	.LVL63:
GAS LISTING /tmp/cc3WCdlM.s 			page 31


 1037              	.L37:
 1038              	.LBE326:
 1039              	.LBE325:
 1040              	.LBE318:
 1041              	.LBB327:
 1042              	.LBB302:
 132:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1043              		.loc 1 132 13 is_stmt 1
 1044              	.LBB303:
 1045              	.LBB304:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1046              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1047              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1048              		.loc 2 111 64 is_stmt 0
 1049              	#APP
 1050              	# 111 "src/../h/Riscv.hpp" 1
 1051              		csrr a5, sepc
 1052              	# 0 "" 2
 1053              	#NO_APP
 1054 02b8 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 1055              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1056              		.loc 2 112 12 is_stmt 0
 1057 02bc 833484F6 		ld	s1,-152(s0)
 1058              	.LVL64:
 1059              	.LBE304:
 1060              	.LBE303:
 132:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1061              		.loc 1 132 38
 1062 02c0 93844400 		addi	s1,s1,4
 1063              	.LVL65:
 133:src/Riscv.cpp **** 
 1064              		.loc 1 133 13 is_stmt 1
 1065              	.LBB305:
 1066              	.LBB306:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1067              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1068              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1069              		.loc 2 181 76 is_stmt 0
 1070              	#APP
 1071              	# 181 "src/../h/Riscv.hpp" 1
 1072              		csrr a5, sstatus
 1073              	# 0 "" 2
 1074              	#NO_APP
 1075 02c8 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 1076              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1077              		.loc 2 182 12 is_stmt 0
 1078 02cc 033904F6 		ld	s2,-160(s0)
 1079              	.LVL66:
 1080              	.LBE306:
GAS LISTING /tmp/cc3WCdlM.s 			page 32


 1081              	.LBE305:
 135:src/Riscv.cpp ****             _thread::dispatch();
 1082              		.loc 1 135 13 is_stmt 1
 135:src/Riscv.cpp ****             _thread::dispatch();
 1083              		.loc 1 135 39 is_stmt 0
 1084 02d0 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1084      83B70700 
 1085 02d8 23B00700 		sd	zero,0(a5)
 136:src/Riscv.cpp **** 
 1086              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp **** 
 1087              		.loc 1 136 30 is_stmt 0
 1088 02dc 97000000 		call	_ZN7_thread8dispatchEv@plt
 1088      E7800000 
 1089              	.LVL67:
 138:src/Riscv.cpp ****             w_sepc(sepc);
 1090              		.loc 1 138 13 is_stmt 1
 1091              	.LBB307:
 1092              	.LBB308:
 187:src/../h/Riscv.hpp **** }
 1093              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1094              		.loc 2 187 77 is_stmt 0
 1095              	#APP
 1096              	# 187 "src/../h/Riscv.hpp" 1
 1097              		csrw sstatus, s2
 1098              	# 0 "" 2
 1099              	.LVL68:
 1100              	#NO_APP
 1101              	.LBE308:
 1102              	.LBE307:
 139:src/Riscv.cpp ****         }
 1103              		.loc 1 139 13 is_stmt 1
 1104              	.LBB309:
 1105              	.LBB310:
 117:src/../h/Riscv.hpp **** }
 1106              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1107              		.loc 2 117 65 is_stmt 0
 1108              	#APP
 1109              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1110              		csrw sepc, s1
 1111              	# 0 "" 2
 1112              		.loc 2 118 1
 1113              	#NO_APP
 1114 02ec 6FF09FD7 		j	.L3
 1115              	.LVL69:
 1116              	.L38:
 1117              	.LBE310:
 1118              	.LBE309:
 1119              	.LBE302:
 1120              	.LBB311:
 1121              	.LBB281:
 142:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1122              		.loc 1 142 13 is_stmt 1
 1123              	.LBB282:
GAS LISTING /tmp/cc3WCdlM.s 			page 33


 1124              	.LBB283:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1125              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1126              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1127              		.loc 2 111 64 is_stmt 0
 1128              	#APP
 1129              	# 111 "src/../h/Riscv.hpp" 1
 1130              		csrr a5, sepc
 1131              	# 0 "" 2
 1132              	#NO_APP
 1133 02f4 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1134              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1135              		.loc 2 112 12 is_stmt 0
 1136 02f8 833484F7 		ld	s1,-136(s0)
 1137              	.LVL70:
 1138              	.LBE283:
 1139              	.LBE282:
 142:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1140              		.loc 1 142 38
 1141 02fc 93844400 		addi	s1,s1,4
 1142              	.LVL71:
 143:src/Riscv.cpp **** 
 1143              		.loc 1 143 13 is_stmt 1
 1144              	.LBB284:
 1145              	.LBB285:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1146              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1147              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1148              		.loc 2 181 76 is_stmt 0
 1149              	#APP
 1150              	# 181 "src/../h/Riscv.hpp" 1
 1151              		csrr a5, sstatus
 1152              	# 0 "" 2
 1153              	#NO_APP
 1154 0304 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1155              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1156              		.loc 2 182 12 is_stmt 0
 1157 0308 033904F7 		ld	s2,-144(s0)
 1158              	.LVL72:
 1159              	.LBE285:
 1160              	.LBE284:
 145:src/Riscv.cpp ****            uint64 arg2;
 1161              		.loc 1 145 12 is_stmt 1
 146:src/Riscv.cpp **** 
 1162              		.loc 1 146 12
 148:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1163              		.loc 1 148 13
 148:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1164              		.loc 1 148 48 is_stmt 0
GAS LISTING /tmp/cc3WCdlM.s 			page 34


 1165              	#APP
 1166              	# 148 "src/Riscv.cpp" 1
 149:src/Riscv.cpp **** 
 1167              		ld a1, 11*8(fp)
 1168              	# 0 "" 2
 1169              		.loc 1 149 13 is_stmt 1
 149:src/Riscv.cpp **** 
 1170              		.loc 1 149 48 is_stmt 0
 1171              	# 149 "src/Riscv.cpp" 1
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1172              		ld a2, 12*8(fp)
 1173              	# 0 "" 2
 1174              		.loc 1 151 13 is_stmt 1
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1175              		.loc 1 151 56 is_stmt 0
 1176              	# 151 "src/Riscv.cpp" 1
 1177              		mv s3, a1
 1178              	# 0 "" 2
 1179              	.LVL73:
 152:src/Riscv.cpp **** 
 1180              		.loc 1 152 13 is_stmt 1
 152:src/Riscv.cpp **** 
 1181              		.loc 1 152 56 is_stmt 0
 1182              	# 152 "src/Riscv.cpp" 1
 1183              		mv s4, a2
 1184              	# 0 "" 2
 1185              	.LVL74:
 154:src/Riscv.cpp ****             sem->open();
 1186              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp ****             sem->open();
 1187              		.loc 1 154 50 is_stmt 0
 1188              	#NO_APP
 1189 031c 13050002 		li	a0,32
 1190 0320 97000000 		call	_ZN10KSemaphorenwEm@plt
 1190      E7800000 
 1191              	.LVL75:
 1192              	.LBB286:
 1193              	.LBB287:
 1194              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1195              		.loc 3 14 40
 1196 0328 23204501 		sw	s4,0(a0)
 1197              	.LVL76:
 1198              	.LBB288:
GAS LISTING /tmp/cc3WCdlM.s 			page 35


 1199              	.LBB289:
 1200              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1201              		.loc 4 26 29
 1202 032c 23340500 		sd	zero,8(a0)
 1203 0330 23380500 		sd	zero,16(a0)
 1204              	.LVL77:
 1205              	.LBE289:
 1206              	.LBE288:
 1207              	.LBE287:
 1208              	.LBE286:
 155:src/Riscv.cpp ****             *arg1=sem;
 1209              		.loc 1 155 13 is_stmt 1
 1210              	.LBB290:
 1211              	.LBB291:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 36


  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1212              		.loc 3 35 9
 1213              		.loc 3 35 15 is_stmt 0
 1214 0334 93071000 		li	a5,1
 1215 0338 230CF500 		sb	a5,24(a0)
 1216              	.LVL78:
 1217              	.LBE291:
 1218              	.LBE290:
 156:src/Riscv.cpp **** 
 1219              		.loc 1 156 13 is_stmt 1
 156:src/Riscv.cpp **** 
 1220              		.loc 1 156 18 is_stmt 0
 1221 033c 23B0A900 		sd	a0,0(s3)
 158:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1222              		.loc 1 158 13 is_stmt 1
 1223              	.LVL79:
 159:src/Riscv.cpp ****             else ret=-1;
 1224              		.loc 1 159 13
 1225 0340 630C0500 		beqz	a0,.L26
 159:src/Riscv.cpp ****             else ret=-1;
 1226              		.loc 1 159 33 is_stmt 0
 1227 0344 93070000 		li	a5,0
 1228              	.L14:
 1229              	.LVL80:
 162:src/Riscv.cpp **** 
 1230              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1231              		.loc 1 162 56 is_stmt 0
 1232              	#APP
 1233              	# 162 "src/Riscv.cpp" 1
 164:src/Riscv.cpp ****             w_sepc(sepc);
 1234              		mv a0, a5
 1235              	# 0 "" 2
 1236              		.loc 1 164 13 is_stmt 1
 1237              	.LVL81:
 1238              	#NO_APP
 1239              	.LBB292:
 1240              	.LBB293:
 187:src/../h/Riscv.hpp **** }
 1241              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1242              		.loc 2 187 77 is_stmt 0
 1243              	#APP
 1244              	# 187 "src/../h/Riscv.hpp" 1
 1245              		csrw sstatus, s2
 1246              	# 0 "" 2
 1247              	.LVL82:
 1248              	#NO_APP
 1249              	.LBE293:
 1250              	.LBE292:
 165:src/Riscv.cpp ****         }
 1251              		.loc 1 165 13 is_stmt 1
 1252              	.LBB294:
 1253              	.LBB295:
GAS LISTING /tmp/cc3WCdlM.s 			page 37


 117:src/../h/Riscv.hpp **** }
 1254              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1255              		.loc 2 117 65 is_stmt 0
 1256              	#APP
 1257              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1258              		csrw sepc, s1
 1259              	# 0 "" 2
 1260              		.loc 2 118 1
 1261              	#NO_APP
 1262 0354 6FF01FD1 		j	.L3
 1263              	.LVL83:
 1264              	.L26:
 1265              	.LBE295:
 1266              	.LBE294:
 160:src/Riscv.cpp **** 
 1267              		.loc 1 160 21
 1268 0358 9307F0FF 		li	a5,-1
 1269 035c 6FF0DFFE 		j	.L14
 1270              	.LVL84:
 1271              	.L39:
 1272              	.LBE281:
 1273              	.LBB296:
 1274              	.LBB255:
 168:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1275              		.loc 1 168 13 is_stmt 1
 1276              	.LBB256:
 1277              	.LBB257:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1278              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1279              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1280              		.loc 2 111 64 is_stmt 0
 1281              	#APP
 1282              	# 111 "src/../h/Riscv.hpp" 1
 1283              		csrr a5, sepc
 1284              	# 0 "" 2
 1285              	#NO_APP
 1286 0364 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1287              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1288              		.loc 2 112 12 is_stmt 0
 1289 0368 833984F8 		ld	s3,-120(s0)
 1290              	.LBE257:
 1291              	.LBE256:
 168:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1292              		.loc 1 168 38
 1293 036c 93894900 		addi	s3,s3,4
 1294              	.LVL85:
 169:src/Riscv.cpp **** 
 1295              		.loc 1 169 13 is_stmt 1
 1296              	.LBB258:
 1297              	.LBB259:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/cc3WCdlM.s 			page 38


 1298              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1299              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1300              		.loc 2 181 76 is_stmt 0
 1301              	#APP
 1302              	# 181 "src/../h/Riscv.hpp" 1
 1303              		csrr a5, sstatus
 1304              	# 0 "" 2
 1305              	#NO_APP
 1306 0374 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1307              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1308              		.loc 2 182 12 is_stmt 0
 1309 0378 033A04F8 		ld	s4,-128(s0)
 1310              	.LVL86:
 1311              	.LBE259:
 1312              	.LBE258:
 171:src/Riscv.cpp **** 
 1313              		.loc 1 171 13 is_stmt 1
 174:src/Riscv.cpp **** 
 1314              		.loc 1 174 13
 174:src/Riscv.cpp **** 
 1315              		.loc 1 174 48 is_stmt 0
 1316              	#APP
 1317              	# 174 "src/Riscv.cpp" 1
 176:src/Riscv.cpp **** 
 1318              		ld a1, 11*8(fp)
 1319              	# 0 "" 2
 1320              		.loc 1 176 13 is_stmt 1
 176:src/Riscv.cpp **** 
 1321              		.loc 1 176 56 is_stmt 0
 1322              	# 176 "src/Riscv.cpp" 1
 1323              		mv s1, a1
 1324              	# 0 "" 2
 1325              	.LVL87:
 178:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1326              		.loc 1 178 13 is_stmt 1
 1327              	#NO_APP
 1328 0384 6F004003 		j	.L18
 1329              	.LVL88:
 1330              	.L43:
 1331              	.LBB260:
 1332              	.LBB261:
 1333              	.LBB262:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
GAS LISTING /tmp/cc3WCdlM.s 			page 39


  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1334              		.loc 4 70 22 is_stmt 0
 1335 0388 23B80400 		sd	zero,16(s1)
 1336              	.L17:
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1337              		.loc 4 72 12
 1338 038c 03390500 		ld	s2,0(a0)
 1339              	.LVL89:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1340              		.loc 4 73 35
 1341 0390 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1341      E7800000 
 1342              	.LVL90:
 1343              	.LBE262:
 1344              	.LBE261:
 182:src/Riscv.cpp ****                 sem->val++;
 1345              		.loc 1 182 17 is_stmt 1
 1346              	.LBB264:
 1347              	.LBB265:
 1348              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 40


   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1349              		.loc 5 35 9
 1350              		.loc 5 35 19 is_stmt 0
 1351 0398 93071000 		li	a5,1
 1352 039c 230CF902 		sb	a5,56(s2)
 1353              	.LVL91:
 1354              	.LBE265:
 1355              	.LBE264:
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1356              		.loc 1 183 17 is_stmt 1
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1357              		.loc 1 183 22 is_stmt 0
 1358 03a0 83A70400 		lw	a5,0(s1)
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1359              		.loc 1 183 25
 1360 03a4 9B871700 		addiw	a5,a5,1
 1361 03a8 23A0F400 		sw	a5,0(s1)
 184:src/Riscv.cpp ****             }
 1362              		.loc 1 184 17 is_stmt 1
 184:src/Riscv.cpp ****             }
 1363              		.loc 1 184 31 is_stmt 0
 1364 03ac 13050900 		mv	a0,s2
 1365 03b0 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1365      E7800000 
 1366              	.LVL92:
 1367              	.L18:
 1368              	.LBE260:
GAS LISTING /tmp/cc3WCdlM.s 			page 41


 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1369              		.loc 1 180 13 is_stmt 1
 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1370              		.loc 1 180 43
 1371              	.LBB267:
 1372              	.LBB268:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1373              		.loc 4 79 14 is_stmt 0
 1374 03b8 03B58400 		ld	a0,8(s1)
 1375              		.loc 4 79 9
 1376 03bc 630E0500 		beqz	a0,.L16
  80:src/../h/List.hpp ****         return head->data;
 1377              		.loc 4 80 22
 1378 03c0 83370500 		ld	a5,0(a0)
 1379              	.LVL93:
 1380              	.LBE268:
 1381              	.LBE267:
 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1382              		.loc 1 180 43
 1383 03c4 638A0700 		beqz	a5,.L16
 1384              	.LBB269:
 181:src/Riscv.cpp ****                 t->setDeblocked();
 1385              		.loc 1 181 17 is_stmt 1
 1386              	.LVL94:
 1387              	.LBB266:
 1388              	.LBB263:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1389              		.loc 4 69 22 is_stmt 0
 1390 03c8 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1391              		.loc 4 69 9
 1392 03cc 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1393              		.loc 4 70 9
 1394 03d0 E39E07FA 		bnez	a5,.L17
 1395 03d4 6FF05FFB 		j	.L43
 1396              	.LVL95:
 1397              	.L16:
 1398              	.LBE263:
 1399              	.LBE266:
 1400              	.LBE269:
 186:src/Riscv.cpp **** 
 1401              		.loc 1 186 14 is_stmt 1
 1402              	.LBB270:
 1403              	.LBB271:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1404              		.loc 3 38 9
 1405              		.loc 3 38 16 is_stmt 0
 1406 03d8 238C0400 		sb	zero,24(s1)
 1407              	.LVL96:
GAS LISTING /tmp/cc3WCdlM.s 			page 42


 1408              	.LBE271:
 1409              	.LBE270:
 188:src/Riscv.cpp **** 
 1410              		.loc 1 188 13 is_stmt 1
 188:src/Riscv.cpp **** 
 1411              		.loc 1 188 23 is_stmt 0
 1412 03dc 63880400 		beqz	s1,.L19
 188:src/Riscv.cpp **** 
 1413              		.loc 1 188 20 discriminator 1
 1414 03e0 13850400 		mv	a0,s1
 1415 03e4 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1415      E7800000 
 1416              	.LVL97:
 1417              	.L19:
 190:src/Riscv.cpp ****             w_sepc(sepc);
 1418              		.loc 1 190 13 is_stmt 1
 1419              	.LBB272:
 1420              	.LBB273:
 187:src/../h/Riscv.hpp **** }
 1421              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1422              		.loc 2 187 77 is_stmt 0
 1423              	#APP
 1424              	# 187 "src/../h/Riscv.hpp" 1
 1425              		csrw sstatus, s4
 1426              	# 0 "" 2
 1427              	.LVL98:
 1428              	#NO_APP
 1429              	.LBE273:
 1430              	.LBE272:
 191:src/Riscv.cpp ****         }
 1431              		.loc 1 191 13 is_stmt 1
 1432              	.LBB274:
 1433              	.LBB275:
 117:src/../h/Riscv.hpp **** }
 1434              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1435              		.loc 2 117 65 is_stmt 0
 1436              	#APP
 1437              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1438              		csrw sepc, s3
 1439              	# 0 "" 2
 1440              		.loc 2 118 1
 1441              	#NO_APP
 1442 03f4 6FF01FC7 		j	.L3
 1443              	.LVL99:
 1444              	.L40:
 1445              	.LBE275:
 1446              	.LBE274:
 1447              	.LBE255:
 1448              	.LBB276:
 1449              	.LBB240:
 194:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1450              		.loc 1 194 13 is_stmt 1
 1451              	.LBB241:
 1452              	.LBB242:
GAS LISTING /tmp/cc3WCdlM.s 			page 43


 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1453              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1454              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1455              		.loc 2 111 64 is_stmt 0
 1456              	#APP
 1457              	# 111 "src/../h/Riscv.hpp" 1
 1458              		csrr a5, sepc
 1459              	# 0 "" 2
 1460              	#NO_APP
 1461 03fc 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1462              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1463              		.loc 2 112 12 is_stmt 0
 1464 0400 833484F9 		ld	s1,-104(s0)
 1465              	.LVL100:
 1466              	.LBE242:
 1467              	.LBE241:
 194:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1468              		.loc 1 194 38
 1469 0404 93844400 		addi	s1,s1,4
 1470              	.LVL101:
 195:src/Riscv.cpp **** 
 1471              		.loc 1 195 13 is_stmt 1
 1472              	.LBB243:
 1473              	.LBB244:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1474              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1475              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1476              		.loc 2 181 76 is_stmt 0
 1477              	#APP
 1478              	# 181 "src/../h/Riscv.hpp" 1
 1479              		csrr a5, sstatus
 1480              	# 0 "" 2
 1481              	#NO_APP
 1482 040c 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1483              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1484              		.loc 2 182 12 is_stmt 0
 1485 0410 033904F9 		ld	s2,-112(s0)
 1486              	.LVL102:
 1487              	.LBE244:
 1488              	.LBE243:
 197:src/Riscv.cpp **** 
 1489              		.loc 1 197 13 is_stmt 1
 199:src/Riscv.cpp **** 
 1490              		.loc 1 199 13
 199:src/Riscv.cpp **** 
 1491              		.loc 1 199 48 is_stmt 0
 1492              	#APP
 1493              	# 199 "src/Riscv.cpp" 1
 201:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 44


 1494              		ld a1, 11*8(fp)
 1495              	# 0 "" 2
 1496              		.loc 1 201 13 is_stmt 1
 201:src/Riscv.cpp **** 
 1497              		.loc 1 201 56 is_stmt 0
 1498              	# 201 "src/Riscv.cpp" 1
 1499              		mv a0, a1
 1500              	# 0 "" 2
 1501              	.LVL103:
 203:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1502              		.loc 1 203 13 is_stmt 1
 205:src/Riscv.cpp ****                  ret = arg1->wait();
 1503              		.loc 1 205 13
 1504              	#NO_APP
 1505              	.LBB245:
 1506              	.LBB246:
  32:src/../h/KSemaphore.hpp **** 
 1507              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1508              		.loc 3 32 28 is_stmt 0
 1509 041c 83478501 		lbu	a5,24(a0)
 1510              	.LVL104:
 1511              	.LBE246:
 1512              	.LBE245:
 205:src/Riscv.cpp ****                  ret = arg1->wait();
 1513              		.loc 1 205 13
 1514 0420 639C0700 		bnez	a5,.L44
 209:src/Riscv.cpp ****             }
 1515              		.loc 1 209 20
 1516 0424 1305F0FF 		li	a0,-1
 1517              	.LVL105:
 1518              	.L21:
 211:src/Riscv.cpp **** 
 1519              		.loc 1 211 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1520              		.loc 1 211 56 is_stmt 0
 1521              	#APP
 1522              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1523              		mv a0, a0
 1524              	# 0 "" 2
 1525              		.loc 1 213 13 is_stmt 1
 1526              	.LVL106:
 1527              	#NO_APP
 1528              	.LBB247:
 1529              	.LBB248:
 187:src/../h/Riscv.hpp **** }
 1530              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1531              		.loc 2 187 77 is_stmt 0
 1532              	#APP
 1533              	# 187 "src/../h/Riscv.hpp" 1
 1534              		csrw sstatus, s2
 1535              	# 0 "" 2
 1536              	.LVL107:
 1537              	#NO_APP
 1538              	.LBE248:
GAS LISTING /tmp/cc3WCdlM.s 			page 45


 1539              	.LBE247:
 214:src/Riscv.cpp ****         }
 1540              		.loc 1 214 13 is_stmt 1
 1541              	.LBB249:
 1542              	.LBB250:
 117:src/../h/Riscv.hpp **** }
 1543              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1544              		.loc 2 117 65 is_stmt 0
 1545              	#APP
 1546              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1547              		csrw sepc, s1
 1548              	# 0 "" 2
 1549              		.loc 2 118 1
 1550              	#NO_APP
 1551 0434 6FF01FC3 		j	.L3
 1552              	.LVL108:
 1553              	.L44:
 1554              	.LBE250:
 1555              	.LBE249:
 206:src/Riscv.cpp ****             }
 1556              		.loc 1 206 18 is_stmt 1
 206:src/Riscv.cpp ****             }
 1557              		.loc 1 206 34 is_stmt 0
 1558 0438 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1558      E7800000 
 1559              	.LVL109:
 1560 0440 6FF09FFE 		j	.L21
 1561              	.LVL110:
 1562              	.L41:
 1563              	.LBE240:
 1564              	.LBB251:
 1565              	.LBB226:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1566              		.loc 1 217 13 is_stmt 1
 1567              	.LBB227:
 1568              	.LBB228:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1569              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1570              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1571              		.loc 2 111 64 is_stmt 0
 1572              	#APP
 1573              	# 111 "src/../h/Riscv.hpp" 1
 1574              		csrr a5, sepc
 1575              	# 0 "" 2
 1576              	#NO_APP
 1577 0448 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1578              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1579              		.loc 2 112 12 is_stmt 0
 1580 044c 833484FA 		ld	s1,-88(s0)
 1581              	.LVL111:
 1582              	.LBE228:
GAS LISTING /tmp/cc3WCdlM.s 			page 46


 1583              	.LBE227:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1584              		.loc 1 217 38
 1585 0450 93844400 		addi	s1,s1,4
 1586              	.LVL112:
 218:src/Riscv.cpp **** 
 1587              		.loc 1 218 13 is_stmt 1
 1588              	.LBB229:
 1589              	.LBB230:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1590              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1591              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1592              		.loc 2 181 76 is_stmt 0
 1593              	#APP
 1594              	# 181 "src/../h/Riscv.hpp" 1
 1595              		csrr a5, sstatus
 1596              	# 0 "" 2
 1597              	#NO_APP
 1598 0458 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1599              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1600              		.loc 2 182 12 is_stmt 0
 1601 045c 033904FA 		ld	s2,-96(s0)
 1602              	.LVL113:
 1603              	.LBE230:
 1604              	.LBE229:
 220:src/Riscv.cpp **** 
 1605              		.loc 1 220 13 is_stmt 1
 222:src/Riscv.cpp **** 
 1606              		.loc 1 222 13
 222:src/Riscv.cpp **** 
 1607              		.loc 1 222 48 is_stmt 0
 1608              	#APP
 1609              	# 222 "src/Riscv.cpp" 1
 224:src/Riscv.cpp **** 
 1610              		ld a1, 11*8(fp)
 1611              	# 0 "" 2
 1612              		.loc 1 224 13 is_stmt 1
 224:src/Riscv.cpp **** 
 1613              		.loc 1 224 56 is_stmt 0
 1614              	# 224 "src/Riscv.cpp" 1
 1615              		mv a0, a1
 1616              	# 0 "" 2
 1617              	.LVL114:
 226:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1618              		.loc 1 226 13 is_stmt 1
 227:src/Riscv.cpp ****                 arg1->signal();
 1619              		.loc 1 227 13
 1620              	#NO_APP
 1621              	.LBB231:
 1622              	.LBB232:
  32:src/../h/KSemaphore.hpp **** 
 1623              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
GAS LISTING /tmp/cc3WCdlM.s 			page 47


 1624              		.loc 3 32 28 is_stmt 0
 1625 0468 83478501 		lbu	a5,24(a0)
 1626              	.LVL115:
 1627              	.LBE232:
 1628              	.LBE231:
 227:src/Riscv.cpp ****                 arg1->signal();
 1629              		.loc 1 227 13
 1630 046c 639C0700 		bnez	a5,.L45
 232:src/Riscv.cpp ****             }
 1631              		.loc 1 232 21
 1632 0470 9307F0FF 		li	a5,-1
 1633              	.LVL116:
 1634              	.L23:
 235:src/Riscv.cpp **** 
 1635              		.loc 1 235 13 is_stmt 1
 235:src/Riscv.cpp **** 
 1636              		.loc 1 235 56 is_stmt 0
 1637              	#APP
 1638              	# 235 "src/Riscv.cpp" 1
 237:src/Riscv.cpp ****             w_sepc(sepc);
 1639              		mv a0, a5
 1640              	# 0 "" 2
 1641              		.loc 1 237 13 is_stmt 1
 1642              	.LVL117:
 1643              	#NO_APP
 1644              	.LBB233:
 1645              	.LBB234:
 187:src/../h/Riscv.hpp **** }
 1646              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1647              		.loc 2 187 77 is_stmt 0
 1648              	#APP
 1649              	# 187 "src/../h/Riscv.hpp" 1
 1650              		csrw sstatus, s2
 1651              	# 0 "" 2
 1652              	.LVL118:
 1653              	#NO_APP
 1654              	.LBE234:
 1655              	.LBE233:
 238:src/Riscv.cpp ****         }
 1656              		.loc 1 238 13 is_stmt 1
 1657              	.LBB235:
 1658              	.LBB236:
 117:src/../h/Riscv.hpp **** }
 1659              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1660              		.loc 2 117 65 is_stmt 0
 1661              	#APP
 1662              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1663              		csrw sepc, s1
 1664              	# 0 "" 2
 1665              		.loc 2 118 1
 1666              	#NO_APP
 1667 0480 6FF05FBE 		j	.L3
 1668              	.LVL119:
 1669              	.L45:
GAS LISTING /tmp/cc3WCdlM.s 			page 48


 1670              	.LBE236:
 1671              	.LBE235:
 228:src/Riscv.cpp ****                 ret=0;
 1672              		.loc 1 228 17 is_stmt 1
 228:src/Riscv.cpp ****                 ret=0;
 1673              		.loc 1 228 29 is_stmt 0
 1674 0484 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1674      E7800000 
 1675              	.LVL120:
 229:src/Riscv.cpp ****             }
 1676              		.loc 1 229 17 is_stmt 1
 229:src/Riscv.cpp ****             }
 1677              		.loc 1 229 20 is_stmt 0
 1678 048c 93070000 		li	a5,0
 1679 0490 6FF05FFE 		j	.L23
 1680              	.LVL121:
 1681              	.L42:
 1682              	.LBE226:
 1683              	.LBB237:
 1684              	.LBB212:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1685              		.loc 1 241 13 is_stmt 1
 1686              	.LBB213:
 1687              	.LBB214:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1688              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1689              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1690              		.loc 2 111 64 is_stmt 0
 1691              	#APP
 1692              	# 111 "src/../h/Riscv.hpp" 1
 1693              		csrr a5, sepc
 1694              	# 0 "" 2
 1695              	#NO_APP
 1696 0498 233CF4FA 		sd	a5,-72(s0)
 112:src/../h/Riscv.hpp **** }
 1697              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1698              		.loc 2 112 12 is_stmt 0
 1699 049c 833484FB 		ld	s1,-72(s0)
 1700              	.LVL122:
 1701              	.LBE214:
 1702              	.LBE213:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1703              		.loc 1 241 38
 1704 04a0 93844400 		addi	s1,s1,4
 1705              	.LVL123:
 242:src/Riscv.cpp **** 
 1706              		.loc 1 242 13 is_stmt 1
 1707              	.LBB215:
 1708              	.LBB216:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1709              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1710              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/cc3WCdlM.s 			page 49


 1711              		.loc 2 181 76 is_stmt 0
 1712              	#APP
 1713              	# 181 "src/../h/Riscv.hpp" 1
 1714              		csrr a5, sstatus
 1715              	# 0 "" 2
 1716              	#NO_APP
 1717 04a8 2338F4FA 		sd	a5,-80(s0)
 182:src/../h/Riscv.hpp **** }
 1718              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1719              		.loc 2 182 12 is_stmt 0
 1720 04ac 033904FB 		ld	s2,-80(s0)
 1721              	.LVL124:
 1722              	.LBE216:
 1723              	.LBE215:
 245:src/Riscv.cpp ****             char c = __getc();
 1724              		.loc 1 245 13 is_stmt 1
 245:src/Riscv.cpp ****             char c = __getc();
 1725              		.loc 1 245 27 is_stmt 0
 1726 04b0 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1726      83B70700 
 1727              	.LVL125:
 1728              	.LBB217:
 1729              	.LBB218:
 129:src/../h/Riscv.hpp **** }
 1730              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1731              		.loc 2 129 69 is_stmt 0
 1732              	#APP
 1733              	# 129 "src/../h/Riscv.hpp" 1
 1734              		csrw stvec, a5
 1735              	# 0 "" 2
 1736              	.LVL126:
 1737              	#NO_APP
 1738              	.LBE218:
 1739              	.LBE217:
 246:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1740              		.loc 1 246 13 is_stmt 1
 246:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1741              		.loc 1 246 28 is_stmt 0
 1742 04bc 97000000 		call	__getc@plt
 1742      E7800000 
 1743              	.LVL127:
 247:src/Riscv.cpp **** 
 1744              		.loc 1 247 13 is_stmt 1
 247:src/Riscv.cpp **** 
 1745              		.loc 1 247 27 is_stmt 0
 1746 04c4 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1746      83B70700 
 1747              	.LVL128:
 1748              	.LBB219:
 1749              	.LBB220:
 129:src/../h/Riscv.hpp **** }
 1750              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1751              		.loc 2 129 69 is_stmt 0
 1752              	#APP
GAS LISTING /tmp/cc3WCdlM.s 			page 50


 1753              	# 129 "src/../h/Riscv.hpp" 1
 1754              		csrw stvec, a5
 1755              	# 0 "" 2
 1756              	.LVL129:
 1757              	#NO_APP
 1758              	.LBE220:
 1759              	.LBE219:
 249:src/Riscv.cpp **** 
 1760              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp **** 
 1761              		.loc 1 249 54 is_stmt 0
 1762              	#APP
 1763              	# 249 "src/Riscv.cpp" 1
 252:src/Riscv.cpp ****             w_sepc(sepc);
 1764              		mv a0, a0
 1765              	# 0 "" 2
 1766              		.loc 1 252 13 is_stmt 1
 1767              	.LVL130:
 1768              	#NO_APP
 1769              	.LBB221:
 1770              	.LBB222:
 187:src/../h/Riscv.hpp **** }
 1771              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1772              		.loc 2 187 77 is_stmt 0
 1773              	#APP
 1774              	# 187 "src/../h/Riscv.hpp" 1
 1775              		csrw sstatus, s2
 1776              	# 0 "" 2
 1777              	.LVL131:
 1778              	#NO_APP
 1779              	.LBE222:
 1780              	.LBE221:
 253:src/Riscv.cpp ****         }
 1781              		.loc 1 253 13 is_stmt 1
 1782              	.LBB223:
 1783              	.LBB224:
 117:src/../h/Riscv.hpp **** }
 1784              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1785              		.loc 2 117 65 is_stmt 0
 1786              	#APP
 1787              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1788              		csrw sepc, s1
 1789              	# 0 "" 2
 1790              		.loc 2 118 1
 1791              	#NO_APP
 1792 04dc 6FF09FB8 		j	.L3
 1793              	.LBE224:
 1794              	.LBE223:
 1795              	.LBE212:
 1796              	.LBE237:
 1797              	.LBE251:
 1798              	.LBE276:
 1799              	.LBE296:
 1800              	.LBE311:
GAS LISTING /tmp/cc3WCdlM.s 			page 51


 1801              	.LBE327:
 1802              	.LBE344:
 1803              	.LBE362:
 1804              	.LBE381:
 1805              	.LBE393:
 1806              	.LBE415:
 1807              	.LBE430:
 1808              		.cfi_endproc
 1809              	.LFE55:
 1811              		.align	2
 1812              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1814              	_ZN5Riscv17handleTrapConsoleEv:
 1815              	.LFB56:
 278:src/Riscv.cpp **** 
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1816              		.loc 1 280 33 is_stmt 1
 1817              		.cfi_startproc
 1818 04e0 130101FE 		addi	sp,sp,-32
 1819              		.cfi_def_cfa_offset 32
 1820 04e4 233C1100 		sd	ra,24(sp)
 1821 04e8 23388100 		sd	s0,16(sp)
 1822              		.cfi_offset 1, -8
 1823              		.cfi_offset 8, -16
 1824 04ec 13040102 		addi	s0,sp,32
 1825              		.cfi_def_cfa 8, 0
 281:src/Riscv.cpp ****     uint64 scause = r_scause();
 1826              		.loc 1 281 5
 1827              	.LBB431:
 1828              	.LBB432:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1829              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1830              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1831              		.loc 2 99 72 is_stmt 0
 1832              	#APP
 1833              	# 99 "src/../h/Riscv.hpp" 1
 1834              		csrr a5, scause
 1835              	# 0 "" 2
 1836              	#NO_APP
 1837 04f4 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1838              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 1839              		.loc 2 100 12 is_stmt 0
 1840 04f8 033784FE 		ld	a4,-24(s0)
 1841              	.LVL132:
 1842              	.LBE432:
 1843              	.LBE431:
 282:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1844              		.loc 1 282 5 is_stmt 1
 1845 04fc 9307F0FF 		li	a5,-1
 1846 0500 9397F703 		slli	a5,a5,63
 1847 0504 93879700 		addi	a5,a5,9
 1848 0508 6302F702 		beq	a4,a5,.L50
 283:src/Riscv.cpp ****         console_handler();
GAS LISTING /tmp/cc3WCdlM.s 			page 52


 284:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 285:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1849              		.loc 1 285 12
 1850 050c 9307F0FF 		li	a5,-1
 1851 0510 9397F703 		slli	a5,a5,63
 1852 0514 93871700 		addi	a5,a5,1
 1853 0518 6304F702 		beq	a4,a5,.L51
 1854              	.LVL133:
 1855              	.L46:
 286:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 287:src/Riscv.cpp ****     }
 288:src/Riscv.cpp **** 
 289:src/Riscv.cpp **** }...
 1856              		.loc 1 289 1 is_stmt 0
 1857 051c 83308101 		ld	ra,24(sp)
 1858              		.cfi_remember_state
 1859              		.cfi_restore 1
 1860 0520 03340101 		ld	s0,16(sp)
 1861              		.cfi_restore 8
 1862              		.cfi_def_cfa 2, 32
 1863 0524 13010102 		addi	sp,sp,32
 1864              		.cfi_def_cfa_offset 0
 1865 0528 67800000 		jr	ra
 1866              	.LVL134:
 1867              	.L50:
 1868              		.cfi_restore_state
 283:src/Riscv.cpp ****         console_handler();
 1869              		.loc 1 283 9 is_stmt 1
 283:src/Riscv.cpp ****         console_handler();
 1870              		.loc 1 283 24 is_stmt 0
 1871 052c 97000000 		call	console_handler@plt
 1871      E7800000 
 1872              	.LVL135:
 284:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 1873              		.loc 1 284 9 is_stmt 1
 1874              	.LBB433:
 1875              	.LBB434:
 151:src/../h/Riscv.hpp **** }
 1876              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1877              		.loc 2 151 64 is_stmt 0
 1878 0534 93070020 		li	a5,512
 1879              	#APP
 1880              	# 151 "src/../h/Riscv.hpp" 1
 152:src/../h/Riscv.hpp **** 
 1881              		csrc sip, a5
 1882              	# 0 "" 2
 1883              		.loc 2 152 1
 1884              	#NO_APP
 1885 053c 6FF01FFE 		j	.L46
 1886              	.LVL136:
 1887              	.L51:
 1888              	.LBE434:
 1889              	.LBE433:
 286:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1890              		.loc 1 286 9 is_stmt 1
 1891              	.LBB435:
GAS LISTING /tmp/cc3WCdlM.s 			page 53


 1892              	.LBB436:
 151:src/../h/Riscv.hpp **** }
 1893              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1894              		.loc 2 151 64 is_stmt 0
 1895 0540 93072000 		li	a5,2
 1896              	#APP
 1897              	# 151 "src/../h/Riscv.hpp" 1
 1898              		csrc sip, a5
 1899              	# 0 "" 2
 1900              	.LVL137:
 1901              	#NO_APP
 1902              	.LBE436:
 1903              	.LBE435:
 1904              		.loc 1 289 1
 1905 0548 6FF05FFD 		j	.L46
 1906              		.cfi_endproc
 1907              	.LFE56:
 1909              	.Letext0:
 1910              		.file 6 "src/../h/../lib/hw.h"
 1911              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1912              		.file 8 "src/../h/MemoryAllocator.hpp"
 1913              		.file 9 "src/../h/Scheduler.hpp"
 1914              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/cc3WCdlM.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc3WCdlM.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3WCdlM.s:13     .text:0000000000000000 .L0 
     /tmp/cc3WCdlM.s:14     .text:0000000000000000 .L0 
     /tmp/cc3WCdlM.s:15     .text:0000000000000004 .L0 
     /tmp/cc3WCdlM.s:17     .text:0000000000000008 .L0 
     /tmp/cc3WCdlM.s:19     .text:000000000000000c .L0 
     /tmp/cc3WCdlM.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/cc3WCdlM.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/cc3WCdlM.s:33     .text:0000000000000014 .L0 
     /tmp/cc3WCdlM.s:34     .text:0000000000000018 .L0 
     /tmp/cc3WCdlM.s:35     .text:0000000000000018 .L0 
     /tmp/cc3WCdlM.s:37     .text:000000000000001c .L0 
     /tmp/cc3WCdlM.s:39     .text:0000000000000020 .L0 
     /tmp/cc3WCdlM.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3WCdlM.s:48     .text:0000000000000020 .L0 
     /tmp/cc3WCdlM.s:49     .text:0000000000000020 .L0 
     /tmp/cc3WCdlM.s:50     .text:0000000000000024 .L0 
     /tmp/cc3WCdlM.s:57     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:58     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:59     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:60     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:61     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:62     .text:000000000000003c .L0 
     /tmp/cc3WCdlM.s:64     .text:0000000000000040 .L0 
     /tmp/cc3WCdlM.s:69     .text:0000000000000040 .L0 
     /tmp/cc3WCdlM.s:70     .text:0000000000000040 .L0 
     /tmp/cc3WCdlM.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/cc3WCdlM.s:79     .text:0000000000000048 .L0 
     /tmp/cc3WCdlM.s:80     .text:0000000000000048 .L0 
     /tmp/cc3WCdlM.s:84     .text:000000000000004c .L0 
     /tmp/cc3WCdlM.s:87     .text:0000000000000050 .L0 
     /tmp/cc3WCdlM.s:88     .text:0000000000000050 .L0 
     /tmp/cc3WCdlM.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:24     .text:0000000000000050 .L0 
     /tmp/cc3WCdlM.s:96     .text:0000000000000054 .L0 
     /tmp/cc3WCdlM.s:99     .text:0000000000000054 .L0 
     /tmp/cc3WCdlM.s:103    .text:000000000000005c .L0 
     /tmp/cc3WCdlM.s:106    .text:000000000000005c .L0 
     /tmp/cc3WCdlM.s:113    .text:0000000000000064 .L0 
     /tmp/cc3WCdlM.s:114    .text:0000000000000068 .L0 
     /tmp/cc3WCdlM.s:115    .text:0000000000000068 .L0 
     /tmp/cc3WCdlM.s:117    .text:000000000000006c .L0 
     /tmp/cc3WCdlM.s:118    .text:000000000000006c .L0 
     /tmp/cc3WCdlM.s:120    .text:0000000000000070 .L0 
     /tmp/cc3WCdlM.s:122    .text:0000000000000074 .L0 
     /tmp/cc3WCdlM.s:124    .text:0000000000000078 .L0 
     /tmp/cc3WCdlM.s:126    .text:000000000000007c .L0 
     /tmp/cc3WCdlM.s:128    .text:0000000000000080 .L0 
     /tmp/cc3WCdlM.s:132    .text:0000000000000084 .L0 
     /tmp/cc3WCdlM.s:138    .text:0000000000000084 .L0 
     /tmp/cc3WCdlM.s:139    .text:0000000000000084 .L0 
     /tmp/cc3WCdlM.s:140    .text:0000000000000084 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 55


  src/../h/Riscv.hpp:111    .text:0000000000000084 .L0 
     /tmp/cc3WCdlM.s:149    .text:000000000000008c .L0 
     /tmp/cc3WCdlM.s:150    .text:000000000000008c .L0 
     /tmp/cc3WCdlM.s:157    .text:0000000000000090 .L0 
     /tmp/cc3WCdlM.s:158    .text:0000000000000090 .L0 
     /tmp/cc3WCdlM.s:159    .text:0000000000000090 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000090 .L0 
     /tmp/cc3WCdlM.s:167    .text:0000000000000098 .L0 
     /tmp/cc3WCdlM.s:168    .text:0000000000000098 .L0 
     /tmp/cc3WCdlM.s:172    .text:000000000000009c .L0 
     /tmp/cc3WCdlM.s:175    .text:00000000000000a0 .L0 
     /tmp/cc3WCdlM.s:176    .text:00000000000000a0 .L0 
     /tmp/cc3WCdlM.s:181    .text:00000000000000a4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000000a4 .L0 
     /tmp/cc3WCdlM.s:193    .text:00000000000000a8 .L0 
     /tmp/cc3WCdlM.s:194    .text:00000000000000a8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000000a8 .L0 
     /tmp/cc3WCdlM.s:201    .text:00000000000000ac .L0 
     /tmp/cc3WCdlM.s:212    .text:00000000000000b0 .L0 
     /tmp/cc3WCdlM.s:223    .text:00000000000000b8 .L0 
     /tmp/cc3WCdlM.s:233    .text:00000000000000c0 .L0 
     /tmp/cc3WCdlM.s:245    .text:00000000000000c8 .L0 
     /tmp/cc3WCdlM.s:259    .text:00000000000000d0 .L0 
     /tmp/cc3WCdlM.s:275    .text:00000000000000d8 .L0 
     /tmp/cc3WCdlM.s:293    .text:00000000000000e0 .L0 
     /tmp/cc3WCdlM.s:313    .text:00000000000000e8 .L0 
     /tmp/cc3WCdlM.s:335    .text:00000000000000f0 .L0 
     /tmp/cc3WCdlM.s:359    .text:00000000000000f8 .L0 
     /tmp/cc3WCdlM.s:385    .text:0000000000000100 .L0 
     /tmp/cc3WCdlM.s:413    .text:0000000000000108 .L0 
     /tmp/cc3WCdlM.s:419    .text:0000000000000110 .L0 
     /tmp/cc3WCdlM.s:420    .text:0000000000000110 .L0 
     /tmp/cc3WCdlM.s:421    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000110 .L0 
     /tmp/cc3WCdlM.s:429    .text:0000000000000118 .L0 
     /tmp/cc3WCdlM.s:430    .text:0000000000000118 .L0 
     /tmp/cc3WCdlM.s:435    .text:000000000000011c .L0 
     /tmp/cc3WCdlM.s:440    .text:0000000000000120 .L0 
     /tmp/cc3WCdlM.s:441    .text:0000000000000120 .L0 
     /tmp/cc3WCdlM.s:442    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000120 .L0 
     /tmp/cc3WCdlM.s:450    .text:0000000000000128 .L0 
     /tmp/cc3WCdlM.s:451    .text:0000000000000128 .L0 
     /tmp/cc3WCdlM.s:456    .text:000000000000012c .L0 
     /tmp/cc3WCdlM.s:457    .text:000000000000012c .L0 
       src/Riscv.cpp:260    .text:000000000000012c .L0 
     /tmp/cc3WCdlM.s:463    .text:0000000000000130 .L0 
       src/Riscv.cpp:262    .text:0000000000000130 .L0 
     /tmp/cc3WCdlM.s:471    .text:0000000000000138 .L0 
     /tmp/cc3WCdlM.s:472    .text:0000000000000138 .L0 
     /tmp/cc3WCdlM.s:477    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000140 .L0 
     /tmp/cc3WCdlM.s:487    .text:0000000000000144 .L0 
     /tmp/cc3WCdlM.s:488    .text:0000000000000144 .L0 
     /tmp/cc3WCdlM.s:491    .text:000000000000014c .L0 
     /tmp/cc3WCdlM.s:492    .text:000000000000014c .L0 
     /tmp/cc3WCdlM.s:497    .text:0000000000000154 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 56


  src/../h/Riscv.hpp:129    .text:0000000000000154 .L0 
     /tmp/cc3WCdlM.s:509    .text:0000000000000158 .L0 
     /tmp/cc3WCdlM.s:510    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000158 .L0 
     /tmp/cc3WCdlM.s:522    .text:000000000000015c .L0 
     /tmp/cc3WCdlM.s:523    .text:000000000000015c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000015c .L0 
     /tmp/cc3WCdlM.s:547    .text:0000000000000160 .L0 
     /tmp/cc3WCdlM.s:557    .text:0000000000000164 .L0 
     /tmp/cc3WCdlM.s:558    .text:0000000000000164 .L0 
     /tmp/cc3WCdlM.s:559    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000164 .L0 
     /tmp/cc3WCdlM.s:567    .text:000000000000016c .L0 
     /tmp/cc3WCdlM.s:568    .text:000000000000016c .L0 
     /tmp/cc3WCdlM.s:572    .text:0000000000000170 .L0 
     /tmp/cc3WCdlM.s:577    .text:0000000000000174 .L0 
     /tmp/cc3WCdlM.s:578    .text:0000000000000174 .L0 
     /tmp/cc3WCdlM.s:579    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000174 .L0 
     /tmp/cc3WCdlM.s:587    .text:000000000000017c .L0 
     /tmp/cc3WCdlM.s:588    .text:000000000000017c .L0 
     /tmp/cc3WCdlM.s:593    .text:0000000000000180 .L0 
     /tmp/cc3WCdlM.s:594    .text:0000000000000180 .L0 
     /tmp/cc3WCdlM.s:595    .text:0000000000000180 .L0 
     /tmp/cc3WCdlM.s:596    .text:0000000000000180 .L0 
     /tmp/cc3WCdlM.s:597    .text:0000000000000180 .L0 
       src/Riscv.cpp:55     .text:0000000000000180 .L0 
     /tmp/cc3WCdlM.s:603    .text:0000000000000184 .L0 
       src/Riscv.cpp:56     .text:0000000000000184 .L0 
     /tmp/cc3WCdlM.s:608    .text:0000000000000188 .L0 
       src/Riscv.cpp:57     .text:0000000000000188 .L0 
     /tmp/cc3WCdlM.s:613    .text:000000000000018c .L0 
       src/Riscv.cpp:58     .text:000000000000018c .L0 
     /tmp/cc3WCdlM.s:618    .text:0000000000000190 .L0 
       src/Riscv.cpp:61     .text:0000000000000190 .L0 
     /tmp/cc3WCdlM.s:624    .text:0000000000000194 .L0 
       src/Riscv.cpp:62     .text:0000000000000194 .L0 
     /tmp/cc3WCdlM.s:630    .text:0000000000000198 .L0 
       src/Riscv.cpp:63     .text:0000000000000198 .L0 
     /tmp/cc3WCdlM.s:636    .text:000000000000019c .L0 
       src/Riscv.cpp:64     .text:000000000000019c .L0 
     /tmp/cc3WCdlM.s:642    .text:00000000000001a0 .L0 
     /tmp/cc3WCdlM.s:644    .text:00000000000001a0 .L0 
     /tmp/cc3WCdlM.s:647    .text:00000000000001a8 .L0 
     /tmp/cc3WCdlM.s:648    .text:00000000000001a8 .L0 
     /tmp/cc3WCdlM.s:650    .text:00000000000001ac .L0 
     /tmp/cc3WCdlM.s:651    .text:00000000000001ac .L0 
     /tmp/cc3WCdlM.s:653    .text:00000000000001b0 .L0 
     /tmp/cc3WCdlM.s:657    .text:00000000000001b4 .L0 
       src/Riscv.cpp:76     .text:00000000000001b4 .L0 
     /tmp/cc3WCdlM.s:667    .text:00000000000001b8 .L0 
     /tmp/cc3WCdlM.s:668    .text:00000000000001b8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001b8 .L0 
     /tmp/cc3WCdlM.s:680    .text:00000000000001bc .L0 
     /tmp/cc3WCdlM.s:681    .text:00000000000001bc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001bc .L0 
     /tmp/cc3WCdlM.s:688    .text:00000000000001c0 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 57


     /tmp/cc3WCdlM.s:694    .text:00000000000001c4 .L0 
     /tmp/cc3WCdlM.s:705    .text:00000000000001cc .L0 
     /tmp/cc3WCdlM.s:706    .text:00000000000001cc .L0 
     /tmp/cc3WCdlM.s:707    .text:00000000000001cc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001cc .L0 
     /tmp/cc3WCdlM.s:715    .text:00000000000001d4 .L0 
     /tmp/cc3WCdlM.s:716    .text:00000000000001d4 .L0 
     /tmp/cc3WCdlM.s:721    .text:00000000000001d8 .L0 
     /tmp/cc3WCdlM.s:726    .text:00000000000001dc .L0 
     /tmp/cc3WCdlM.s:727    .text:00000000000001dc .L0 
     /tmp/cc3WCdlM.s:728    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001dc .L0 
     /tmp/cc3WCdlM.s:736    .text:00000000000001e4 .L0 
     /tmp/cc3WCdlM.s:737    .text:00000000000001e4 .L0 
     /tmp/cc3WCdlM.s:742    .text:00000000000001e8 .L0 
       src/Riscv.cpp:85     .text:00000000000001e8 .L0 
     /tmp/cc3WCdlM.s:749    .text:00000000000001ec .L0 
     /tmp/cc3WCdlM.s:751    .text:00000000000001ec .L0 
     /tmp/cc3WCdlM.s:756    .text:00000000000001f8 .L0 
       src/Riscv.cpp:89     .text:00000000000001f8 .L0 
     /tmp/cc3WCdlM.s:766    .text:00000000000001fc .L0 
     /tmp/cc3WCdlM.s:767    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001fc .L0 
     /tmp/cc3WCdlM.s:779    .text:0000000000000200 .L0 
     /tmp/cc3WCdlM.s:780    .text:0000000000000200 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000200 .L0 
     /tmp/cc3WCdlM.s:787    .text:0000000000000204 .L0 
     /tmp/cc3WCdlM.s:798    .text:0000000000000208 .L0 
     /tmp/cc3WCdlM.s:799    .text:0000000000000208 .L0 
     /tmp/cc3WCdlM.s:800    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000208 .L0 
     /tmp/cc3WCdlM.s:808    .text:0000000000000210 .L0 
     /tmp/cc3WCdlM.s:809    .text:0000000000000210 .L0 
     /tmp/cc3WCdlM.s:814    .text:0000000000000214 .L0 
     /tmp/cc3WCdlM.s:819    .text:0000000000000218 .L0 
     /tmp/cc3WCdlM.s:820    .text:0000000000000218 .L0 
     /tmp/cc3WCdlM.s:821    .text:0000000000000218 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000218 .L0 
     /tmp/cc3WCdlM.s:829    .text:0000000000000220 .L0 
     /tmp/cc3WCdlM.s:830    .text:0000000000000220 .L0 
     /tmp/cc3WCdlM.s:835    .text:0000000000000224 .L0 
       src/Riscv.cpp:98     .text:0000000000000224 .L0 
     /tmp/cc3WCdlM.s:842    .text:0000000000000228 .L0 
     /tmp/cc3WCdlM.s:844    .text:0000000000000228 .L0 
     /tmp/cc3WCdlM.s:847    .text:0000000000000230 .L0 
       src/Riscv.cpp:100    .text:0000000000000230 .L0 
     /tmp/cc3WCdlM.s:857    .text:0000000000000234 .L0 
     /tmp/cc3WCdlM.s:858    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000234 .L0 
     /tmp/cc3WCdlM.s:870    .text:0000000000000238 .L0 
     /tmp/cc3WCdlM.s:871    .text:0000000000000238 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000238 .L0 
     /tmp/cc3WCdlM.s:878    .text:000000000000023c .L0 
     /tmp/cc3WCdlM.s:889    .text:0000000000000240 .L0 
     /tmp/cc3WCdlM.s:890    .text:0000000000000240 .L0 
     /tmp/cc3WCdlM.s:891    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000240 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 58


     /tmp/cc3WCdlM.s:899    .text:0000000000000248 .L0 
     /tmp/cc3WCdlM.s:900    .text:0000000000000248 .L0 
     /tmp/cc3WCdlM.s:905    .text:000000000000024c .L0 
     /tmp/cc3WCdlM.s:910    .text:0000000000000250 .L0 
     /tmp/cc3WCdlM.s:911    .text:0000000000000250 .L0 
     /tmp/cc3WCdlM.s:912    .text:0000000000000250 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000250 .L0 
     /tmp/cc3WCdlM.s:920    .text:0000000000000258 .L0 
     /tmp/cc3WCdlM.s:921    .text:0000000000000258 .L0 
     /tmp/cc3WCdlM.s:926    .text:000000000000025c .L0 
     /tmp/cc3WCdlM.s:927    .text:000000000000025c .L0 
     /tmp/cc3WCdlM.s:930    .text:0000000000000268 .L0 
     /tmp/cc3WCdlM.s:933    .text:0000000000000270 .L0 
     /tmp/cc3WCdlM.s:934    .text:0000000000000270 .L0 
     /tmp/cc3WCdlM.s:939    .text:0000000000000278 .L0 
     /tmp/cc3WCdlM.s:940    .text:0000000000000278 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000278 .L0 
     /tmp/cc3WCdlM.s:952    .text:000000000000027c .L0 
     /tmp/cc3WCdlM.s:953    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000027c .L0 
     /tmp/cc3WCdlM.s:960    .text:0000000000000280 .L0 
     /tmp/cc3WCdlM.s:971    .text:0000000000000284 .L0 
     /tmp/cc3WCdlM.s:972    .text:0000000000000284 .L0 
     /tmp/cc3WCdlM.s:973    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000284 .L0 
     /tmp/cc3WCdlM.s:981    .text:000000000000028c .L0 
     /tmp/cc3WCdlM.s:982    .text:000000000000028c .L0 
     /tmp/cc3WCdlM.s:987    .text:0000000000000290 .L0 
     /tmp/cc3WCdlM.s:992    .text:0000000000000294 .L0 
     /tmp/cc3WCdlM.s:993    .text:0000000000000294 .L0 
     /tmp/cc3WCdlM.s:994    .text:0000000000000294 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000294 .L0 
     /tmp/cc3WCdlM.s:1002   .text:000000000000029c .L0 
     /tmp/cc3WCdlM.s:1003   .text:000000000000029c .L0 
     /tmp/cc3WCdlM.s:1008   .text:00000000000002a0 .L0 
     /tmp/cc3WCdlM.s:1009   .text:00000000000002a0 .L0 
     /tmp/cc3WCdlM.s:1014   .text:00000000000002a8 .L0 
     /tmp/cc3WCdlM.s:1015   .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002a8 .L0 
     /tmp/cc3WCdlM.s:1027   .text:00000000000002ac .L0 
     /tmp/cc3WCdlM.s:1028   .text:00000000000002ac .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002ac .L0 
     /tmp/cc3WCdlM.s:1035   .text:00000000000002b0 .L0 
     /tmp/cc3WCdlM.s:1046   .text:00000000000002b4 .L0 
     /tmp/cc3WCdlM.s:1047   .text:00000000000002b4 .L0 
     /tmp/cc3WCdlM.s:1048   .text:00000000000002b4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002b4 .L0 
     /tmp/cc3WCdlM.s:1056   .text:00000000000002bc .L0 
     /tmp/cc3WCdlM.s:1057   .text:00000000000002bc .L0 
     /tmp/cc3WCdlM.s:1062   .text:00000000000002c0 .L0 
     /tmp/cc3WCdlM.s:1067   .text:00000000000002c4 .L0 
     /tmp/cc3WCdlM.s:1068   .text:00000000000002c4 .L0 
     /tmp/cc3WCdlM.s:1069   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002c4 .L0 
     /tmp/cc3WCdlM.s:1077   .text:00000000000002cc .L0 
     /tmp/cc3WCdlM.s:1078   .text:00000000000002cc .L0 
     /tmp/cc3WCdlM.s:1083   .text:00000000000002d0 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 59


     /tmp/cc3WCdlM.s:1084   .text:00000000000002d0 .L0 
     /tmp/cc3WCdlM.s:1087   .text:00000000000002dc .L0 
     /tmp/cc3WCdlM.s:1088   .text:00000000000002dc .L0 
     /tmp/cc3WCdlM.s:1093   .text:00000000000002e4 .L0 
     /tmp/cc3WCdlM.s:1094   .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002e4 .L0 
     /tmp/cc3WCdlM.s:1106   .text:00000000000002e8 .L0 
     /tmp/cc3WCdlM.s:1107   .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002e8 .L0 
     /tmp/cc3WCdlM.s:1114   .text:00000000000002ec .L0 
     /tmp/cc3WCdlM.s:1125   .text:00000000000002f0 .L0 
     /tmp/cc3WCdlM.s:1126   .text:00000000000002f0 .L0 
     /tmp/cc3WCdlM.s:1127   .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002f0 .L0 
     /tmp/cc3WCdlM.s:1135   .text:00000000000002f8 .L0 
     /tmp/cc3WCdlM.s:1136   .text:00000000000002f8 .L0 
     /tmp/cc3WCdlM.s:1141   .text:00000000000002fc .L0 
     /tmp/cc3WCdlM.s:1146   .text:0000000000000300 .L0 
     /tmp/cc3WCdlM.s:1147   .text:0000000000000300 .L0 
     /tmp/cc3WCdlM.s:1148   .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000300 .L0 
     /tmp/cc3WCdlM.s:1156   .text:0000000000000308 .L0 
     /tmp/cc3WCdlM.s:1157   .text:0000000000000308 .L0 
     /tmp/cc3WCdlM.s:1162   .text:000000000000030c .L0 
     /tmp/cc3WCdlM.s:1163   .text:000000000000030c .L0 
     /tmp/cc3WCdlM.s:1164   .text:000000000000030c .L0 
       src/Riscv.cpp:148    .text:000000000000030c .L0 
     /tmp/cc3WCdlM.s:1170   .text:0000000000000310 .L0 
       src/Riscv.cpp:149    .text:0000000000000310 .L0 
     /tmp/cc3WCdlM.s:1175   .text:0000000000000314 .L0 
       src/Riscv.cpp:151    .text:0000000000000314 .L0 
     /tmp/cc3WCdlM.s:1181   .text:0000000000000318 .L0 
       src/Riscv.cpp:152    .text:0000000000000318 .L0 
     /tmp/cc3WCdlM.s:1187   .text:000000000000031c .L0 
     /tmp/cc3WCdlM.s:1189   .text:000000000000031c .L0 
     /tmp/cc3WCdlM.s:1196   .text:0000000000000328 .L0 
     /tmp/cc3WCdlM.s:1202   .text:000000000000032c .L0 
     /tmp/cc3WCdlM.s:1212   .text:0000000000000334 .L0 
     /tmp/cc3WCdlM.s:1213   .text:0000000000000334 .L0 
     /tmp/cc3WCdlM.s:1214   .text:0000000000000334 .L0 
     /tmp/cc3WCdlM.s:1220   .text:000000000000033c .L0 
     /tmp/cc3WCdlM.s:1221   .text:000000000000033c .L0 
     /tmp/cc3WCdlM.s:1224   .text:0000000000000340 .L0 
     /tmp/cc3WCdlM.s:1225   .text:0000000000000340 .L0 
     /tmp/cc3WCdlM.s:1227   .text:0000000000000344 .L0 
     /tmp/cc3WCdlM.s:1231   .text:0000000000000348 .L0 
       src/Riscv.cpp:162    .text:0000000000000348 .L0 
     /tmp/cc3WCdlM.s:1241   .text:000000000000034c .L0 
     /tmp/cc3WCdlM.s:1242   .text:000000000000034c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000034c .L0 
     /tmp/cc3WCdlM.s:1254   .text:0000000000000350 .L0 
     /tmp/cc3WCdlM.s:1255   .text:0000000000000350 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000350 .L0 
     /tmp/cc3WCdlM.s:1262   .text:0000000000000354 .L0 
     /tmp/cc3WCdlM.s:1268   .text:0000000000000358 .L0 
     /tmp/cc3WCdlM.s:1278   .text:0000000000000360 .L0 
     /tmp/cc3WCdlM.s:1279   .text:0000000000000360 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 60


     /tmp/cc3WCdlM.s:1280   .text:0000000000000360 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000360 .L0 
     /tmp/cc3WCdlM.s:1288   .text:0000000000000368 .L0 
     /tmp/cc3WCdlM.s:1289   .text:0000000000000368 .L0 
     /tmp/cc3WCdlM.s:1293   .text:000000000000036c .L0 
     /tmp/cc3WCdlM.s:1298   .text:0000000000000370 .L0 
     /tmp/cc3WCdlM.s:1299   .text:0000000000000370 .L0 
     /tmp/cc3WCdlM.s:1300   .text:0000000000000370 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000370 .L0 
     /tmp/cc3WCdlM.s:1308   .text:0000000000000378 .L0 
     /tmp/cc3WCdlM.s:1309   .text:0000000000000378 .L0 
     /tmp/cc3WCdlM.s:1314   .text:000000000000037c .L0 
     /tmp/cc3WCdlM.s:1315   .text:000000000000037c .L0 
       src/Riscv.cpp:174    .text:000000000000037c .L0 
     /tmp/cc3WCdlM.s:1321   .text:0000000000000380 .L0 
       src/Riscv.cpp:176    .text:0000000000000380 .L0 
     /tmp/cc3WCdlM.s:1328   .text:0000000000000384 .L0 
     /tmp/cc3WCdlM.s:1335   .text:0000000000000388 .L0 
     /tmp/cc3WCdlM.s:1338   .text:000000000000038c .L0 
     /tmp/cc3WCdlM.s:1341   .text:0000000000000390 .L0 
     /tmp/cc3WCdlM.s:1349   .text:0000000000000398 .L0 
     /tmp/cc3WCdlM.s:1350   .text:0000000000000398 .L0 
     /tmp/cc3WCdlM.s:1351   .text:0000000000000398 .L0 
     /tmp/cc3WCdlM.s:1357   .text:00000000000003a0 .L0 
     /tmp/cc3WCdlM.s:1358   .text:00000000000003a0 .L0 
     /tmp/cc3WCdlM.s:1360   .text:00000000000003a4 .L0 
     /tmp/cc3WCdlM.s:1363   .text:00000000000003ac .L0 
     /tmp/cc3WCdlM.s:1364   .text:00000000000003ac .L0 
     /tmp/cc3WCdlM.s:1370   .text:00000000000003b8 .L0 
     /tmp/cc3WCdlM.s:1373   .text:00000000000003b8 .L0 
     /tmp/cc3WCdlM.s:1374   .text:00000000000003b8 .L0 
     /tmp/cc3WCdlM.s:1376   .text:00000000000003bc .L0 
     /tmp/cc3WCdlM.s:1378   .text:00000000000003c0 .L0 
     /tmp/cc3WCdlM.s:1383   .text:00000000000003c4 .L0 
     /tmp/cc3WCdlM.s:1389   .text:00000000000003c8 .L0 
     /tmp/cc3WCdlM.s:1390   .text:00000000000003c8 .L0 
     /tmp/cc3WCdlM.s:1392   .text:00000000000003cc .L0 
     /tmp/cc3WCdlM.s:1394   .text:00000000000003d0 .L0 
     /tmp/cc3WCdlM.s:1404   .text:00000000000003d8 .L0 
     /tmp/cc3WCdlM.s:1405   .text:00000000000003d8 .L0 
     /tmp/cc3WCdlM.s:1406   .text:00000000000003d8 .L0 
     /tmp/cc3WCdlM.s:1411   .text:00000000000003dc .L0 
     /tmp/cc3WCdlM.s:1412   .text:00000000000003dc .L0 
     /tmp/cc3WCdlM.s:1414   .text:00000000000003e0 .L0 
     /tmp/cc3WCdlM.s:1421   .text:00000000000003ec .L0 
     /tmp/cc3WCdlM.s:1422   .text:00000000000003ec .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003ec .L0 
     /tmp/cc3WCdlM.s:1434   .text:00000000000003f0 .L0 
     /tmp/cc3WCdlM.s:1435   .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003f0 .L0 
     /tmp/cc3WCdlM.s:1442   .text:00000000000003f4 .L0 
     /tmp/cc3WCdlM.s:1453   .text:00000000000003f8 .L0 
     /tmp/cc3WCdlM.s:1454   .text:00000000000003f8 .L0 
     /tmp/cc3WCdlM.s:1455   .text:00000000000003f8 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003f8 .L0 
     /tmp/cc3WCdlM.s:1463   .text:0000000000000400 .L0 
     /tmp/cc3WCdlM.s:1464   .text:0000000000000400 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 61


     /tmp/cc3WCdlM.s:1469   .text:0000000000000404 .L0 
     /tmp/cc3WCdlM.s:1474   .text:0000000000000408 .L0 
     /tmp/cc3WCdlM.s:1475   .text:0000000000000408 .L0 
     /tmp/cc3WCdlM.s:1476   .text:0000000000000408 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000408 .L0 
     /tmp/cc3WCdlM.s:1484   .text:0000000000000410 .L0 
     /tmp/cc3WCdlM.s:1485   .text:0000000000000410 .L0 
     /tmp/cc3WCdlM.s:1490   .text:0000000000000414 .L0 
     /tmp/cc3WCdlM.s:1491   .text:0000000000000414 .L0 
       src/Riscv.cpp:199    .text:0000000000000414 .L0 
     /tmp/cc3WCdlM.s:1497   .text:0000000000000418 .L0 
       src/Riscv.cpp:201    .text:0000000000000418 .L0 
     /tmp/cc3WCdlM.s:1503   .text:000000000000041c .L0 
     /tmp/cc3WCdlM.s:1507   .text:000000000000041c .L0 
     /tmp/cc3WCdlM.s:1508   .text:000000000000041c .L0 
     /tmp/cc3WCdlM.s:1509   .text:000000000000041c .L0 
     /tmp/cc3WCdlM.s:1514   .text:0000000000000420 .L0 
     /tmp/cc3WCdlM.s:1516   .text:0000000000000424 .L0 
     /tmp/cc3WCdlM.s:1520   .text:0000000000000428 .L0 
       src/Riscv.cpp:211    .text:0000000000000428 .L0 
     /tmp/cc3WCdlM.s:1530   .text:000000000000042c .L0 
     /tmp/cc3WCdlM.s:1531   .text:000000000000042c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000042c .L0 
     /tmp/cc3WCdlM.s:1543   .text:0000000000000430 .L0 
     /tmp/cc3WCdlM.s:1544   .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000430 .L0 
     /tmp/cc3WCdlM.s:1551   .text:0000000000000434 .L0 
     /tmp/cc3WCdlM.s:1557   .text:0000000000000438 .L0 
     /tmp/cc3WCdlM.s:1558   .text:0000000000000438 .L0 
     /tmp/cc3WCdlM.s:1569   .text:0000000000000444 .L0 
     /tmp/cc3WCdlM.s:1570   .text:0000000000000444 .L0 
     /tmp/cc3WCdlM.s:1571   .text:0000000000000444 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000444 .L0 
     /tmp/cc3WCdlM.s:1579   .text:000000000000044c .L0 
     /tmp/cc3WCdlM.s:1580   .text:000000000000044c .L0 
     /tmp/cc3WCdlM.s:1585   .text:0000000000000450 .L0 
     /tmp/cc3WCdlM.s:1590   .text:0000000000000454 .L0 
     /tmp/cc3WCdlM.s:1591   .text:0000000000000454 .L0 
     /tmp/cc3WCdlM.s:1592   .text:0000000000000454 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000454 .L0 
     /tmp/cc3WCdlM.s:1600   .text:000000000000045c .L0 
     /tmp/cc3WCdlM.s:1601   .text:000000000000045c .L0 
     /tmp/cc3WCdlM.s:1606   .text:0000000000000460 .L0 
     /tmp/cc3WCdlM.s:1607   .text:0000000000000460 .L0 
       src/Riscv.cpp:222    .text:0000000000000460 .L0 
     /tmp/cc3WCdlM.s:1613   .text:0000000000000464 .L0 
       src/Riscv.cpp:224    .text:0000000000000464 .L0 
     /tmp/cc3WCdlM.s:1619   .text:0000000000000468 .L0 
     /tmp/cc3WCdlM.s:1623   .text:0000000000000468 .L0 
     /tmp/cc3WCdlM.s:1624   .text:0000000000000468 .L0 
     /tmp/cc3WCdlM.s:1625   .text:0000000000000468 .L0 
     /tmp/cc3WCdlM.s:1630   .text:000000000000046c .L0 
     /tmp/cc3WCdlM.s:1632   .text:0000000000000470 .L0 
     /tmp/cc3WCdlM.s:1636   .text:0000000000000474 .L0 
       src/Riscv.cpp:235    .text:0000000000000474 .L0 
     /tmp/cc3WCdlM.s:1646   .text:0000000000000478 .L0 
     /tmp/cc3WCdlM.s:1647   .text:0000000000000478 .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 62


  src/../h/Riscv.hpp:187    .text:0000000000000478 .L0 
     /tmp/cc3WCdlM.s:1659   .text:000000000000047c .L0 
     /tmp/cc3WCdlM.s:1660   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000047c .L0 
     /tmp/cc3WCdlM.s:1667   .text:0000000000000480 .L0 
     /tmp/cc3WCdlM.s:1673   .text:0000000000000484 .L0 
     /tmp/cc3WCdlM.s:1674   .text:0000000000000484 .L0 
     /tmp/cc3WCdlM.s:1677   .text:000000000000048c .L0 
     /tmp/cc3WCdlM.s:1678   .text:000000000000048c .L0 
     /tmp/cc3WCdlM.s:1688   .text:0000000000000494 .L0 
     /tmp/cc3WCdlM.s:1689   .text:0000000000000494 .L0 
     /tmp/cc3WCdlM.s:1690   .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000494 .L0 
     /tmp/cc3WCdlM.s:1698   .text:000000000000049c .L0 
     /tmp/cc3WCdlM.s:1699   .text:000000000000049c .L0 
     /tmp/cc3WCdlM.s:1704   .text:00000000000004a0 .L0 
     /tmp/cc3WCdlM.s:1709   .text:00000000000004a4 .L0 
     /tmp/cc3WCdlM.s:1710   .text:00000000000004a4 .L0 
     /tmp/cc3WCdlM.s:1711   .text:00000000000004a4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000004a4 .L0 
     /tmp/cc3WCdlM.s:1719   .text:00000000000004ac .L0 
     /tmp/cc3WCdlM.s:1720   .text:00000000000004ac .L0 
     /tmp/cc3WCdlM.s:1725   .text:00000000000004b0 .L0 
     /tmp/cc3WCdlM.s:1726   .text:00000000000004b0 .L0 
     /tmp/cc3WCdlM.s:1731   .text:00000000000004b8 .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004b8 .L0 
     /tmp/cc3WCdlM.s:1741   .text:00000000000004bc .L0 
     /tmp/cc3WCdlM.s:1742   .text:00000000000004bc .L0 
     /tmp/cc3WCdlM.s:1745   .text:00000000000004c4 .L0 
     /tmp/cc3WCdlM.s:1746   .text:00000000000004c4 .L0 
     /tmp/cc3WCdlM.s:1751   .text:00000000000004cc .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004cc .L0 
     /tmp/cc3WCdlM.s:1761   .text:00000000000004d0 .L0 
       src/Riscv.cpp:249    .text:00000000000004d0 .L0 
     /tmp/cc3WCdlM.s:1771   .text:00000000000004d4 .L0 
     /tmp/cc3WCdlM.s:1772   .text:00000000000004d4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004d4 .L0 
     /tmp/cc3WCdlM.s:1784   .text:00000000000004d8 .L0 
     /tmp/cc3WCdlM.s:1785   .text:00000000000004d8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004d8 .L0 
     /tmp/cc3WCdlM.s:1792   .text:00000000000004dc .L0 
     /tmp/cc3WCdlM.s:1808   .text:00000000000004e0 .L0 
     /tmp/cc3WCdlM.s:1814   .text:00000000000004e0 _ZN5Riscv17handleTrapConsoleEv
     /tmp/cc3WCdlM.s:1817   .text:00000000000004e0 .L0 
     /tmp/cc3WCdlM.s:1818   .text:00000000000004e0 .L0 
     /tmp/cc3WCdlM.s:1819   .text:00000000000004e4 .L0 
     /tmp/cc3WCdlM.s:1822   .text:00000000000004ec .L0 
     /tmp/cc3WCdlM.s:1823   .text:00000000000004ec .L0 
     /tmp/cc3WCdlM.s:1825   .text:00000000000004f0 .L0 
     /tmp/cc3WCdlM.s:1829   .text:00000000000004f0 .L0 
     /tmp/cc3WCdlM.s:1830   .text:00000000000004f0 .L0 
     /tmp/cc3WCdlM.s:1831   .text:00000000000004f0 .L0 
  src/../h/Riscv.hpp:99     .text:00000000000004f0 .L0 
     /tmp/cc3WCdlM.s:1839   .text:00000000000004f8 .L0 
     /tmp/cc3WCdlM.s:1840   .text:00000000000004f8 .L0 
     /tmp/cc3WCdlM.s:1845   .text:00000000000004fc .L0 
     /tmp/cc3WCdlM.s:1850   .text:000000000000050c .L0 
GAS LISTING /tmp/cc3WCdlM.s 			page 63


     /tmp/cc3WCdlM.s:1857   .text:000000000000051c .L0 
     /tmp/cc3WCdlM.s:1858   .text:0000000000000520 .L0 
     /tmp/cc3WCdlM.s:1859   .text:0000000000000520 .L0 
     /tmp/cc3WCdlM.s:1861   .text:0000000000000524 .L0 
     /tmp/cc3WCdlM.s:1862   .text:0000000000000524 .L0 
     /tmp/cc3WCdlM.s:1864   .text:0000000000000528 .L0 
     /tmp/cc3WCdlM.s:1868   .text:000000000000052c .L0 
     /tmp/cc3WCdlM.s:1870   .text:000000000000052c .L0 
     /tmp/cc3WCdlM.s:1871   .text:000000000000052c .L0 
     /tmp/cc3WCdlM.s:1876   .text:0000000000000534 .L0 
     /tmp/cc3WCdlM.s:1877   .text:0000000000000534 .L0 
     /tmp/cc3WCdlM.s:1878   .text:0000000000000534 .L0 
     /tmp/cc3WCdlM.s:1885   .text:000000000000053c .L0 
     /tmp/cc3WCdlM.s:1893   .text:0000000000000540 .L0 
     /tmp/cc3WCdlM.s:1894   .text:0000000000000540 .L0 
     /tmp/cc3WCdlM.s:1895   .text:0000000000000540 .L0 
     /tmp/cc3WCdlM.s:1905   .text:0000000000000548 .L0 
     /tmp/cc3WCdlM.s:1906   .text:000000000000054c .L0 
     /tmp/cc3WCdlM.s:1915   .text:000000000000054c .L0 
     /tmp/cc3WCdlM.s:472    .text:0000000000000138 .L0 
     /tmp/cc3WCdlM.s:492    .text:000000000000014c .L0 
     /tmp/cc3WCdlM.s:927    .text:000000000000025c .L0 
     /tmp/cc3WCdlM.s:1084   .text:00000000000002d0 .L0 
     /tmp/cc3WCdlM.s:1726   .text:00000000000004b0 .L0 
     /tmp/cc3WCdlM.s:1746   .text:00000000000004c4 .L0 
     /tmp/cc3WCdlM.s:131    .text:0000000000000084 .L30
     /tmp/cc3WCdlM.s:203    .text:00000000000000b0 .L31
     /tmp/cc3WCdlM.s:109    .text:0000000000000064 .L3
     /tmp/cc3WCdlM.s:549    .text:0000000000000164 .L32
     /tmp/cc3WCdlM.s:697    .text:00000000000001cc .L33
     /tmp/cc3WCdlM.s:789    .text:0000000000000208 .L34
     /tmp/cc3WCdlM.s:880    .text:0000000000000240 .L35
     /tmp/cc3WCdlM.s:962    .text:0000000000000284 .L36
     /tmp/cc3WCdlM.s:1037   .text:00000000000002b4 .L37
     /tmp/cc3WCdlM.s:1116   .text:00000000000002f0 .L38
     /tmp/cc3WCdlM.s:1271   .text:0000000000000360 .L39
     /tmp/cc3WCdlM.s:1444   .text:00000000000003f8 .L40
     /tmp/cc3WCdlM.s:1562   .text:0000000000000444 .L41
     /tmp/cc3WCdlM.s:1681   .text:0000000000000494 .L42
     /tmp/cc3WCdlM.s:690    .text:00000000000001c4 .L25
     /tmp/cc3WCdlM.s:215    .text:00000000000000b8 .L6
     /tmp/cc3WCdlM.s:654    .text:00000000000001b4 .L7
     /tmp/cc3WCdlM.s:1264   .text:0000000000000358 .L26
     /tmp/cc3WCdlM.s:1228   .text:0000000000000348 .L14
     /tmp/cc3WCdlM.s:1367   .text:00000000000003b8 .L18
     /tmp/cc3WCdlM.s:1397   .text:00000000000003d8 .L16
     /tmp/cc3WCdlM.s:1336   .text:000000000000038c .L17
     /tmp/cc3WCdlM.s:1330   .text:0000000000000388 .L43
     /tmp/cc3WCdlM.s:1417   .text:00000000000003ec .L19
     /tmp/cc3WCdlM.s:1553   .text:0000000000000438 .L44
     /tmp/cc3WCdlM.s:1518   .text:0000000000000428 .L21
     /tmp/cc3WCdlM.s:1669   .text:0000000000000484 .L45
     /tmp/cc3WCdlM.s:1634   .text:0000000000000474 .L23
     /tmp/cc3WCdlM.s:1867   .text:000000000000052c .L50
     /tmp/cc3WCdlM.s:1887   .text:0000000000000540 .L51
     /tmp/cc3WCdlM.s:1855   .text:000000000000051c .L46
     /tmp/cc3WCdlM.s:5093   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/cc3WCdlM.s 			page 64


     /tmp/cc3WCdlM.s:7436   .debug_str:0000000000000b5e .LASF222
     /tmp/cc3WCdlM.s:7136   .debug_str:0000000000000198 .LASF223
     /tmp/cc3WCdlM.s:7288   .debug_str:00000000000006ab .LASF224
     /tmp/cc3WCdlM.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3WCdlM.s:1909   .text:000000000000054c .Letext0
     /tmp/cc3WCdlM.s:7076   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3WCdlM.s:7348   .debug_str:00000000000008e9 .LASF3
     /tmp/cc3WCdlM.s:7222   .debug_str:0000000000000473 .LASF0
     /tmp/cc3WCdlM.s:7266   .debug_str:000000000000062d .LASF1
     /tmp/cc3WCdlM.s:7366   .debug_str:0000000000000975 .LASF2
     /tmp/cc3WCdlM.s:7378   .debug_str:00000000000009e3 .LASF4
     /tmp/cc3WCdlM.s:7238   .debug_str:00000000000004ea .LASF5
     /tmp/cc3WCdlM.s:7090   .debug_str:0000000000000057 .LASF6
     /tmp/cc3WCdlM.s:7320   .debug_str:00000000000007bf .LASF7
     /tmp/cc3WCdlM.s:7254   .debug_str:00000000000005cb .LASF8
     /tmp/cc3WCdlM.s:7188   .debug_str:0000000000000358 .LASF9
     /tmp/cc3WCdlM.s:7196   .debug_str:000000000000039a .LASF10
     /tmp/cc3WCdlM.s:7122   .debug_str:0000000000000122 .LASF11
     /tmp/cc3WCdlM.s:7178   .debug_str:000000000000030e .LASF12
     /tmp/cc3WCdlM.s:7138   .debug_str:00000000000001a6 .LASF13
     /tmp/cc3WCdlM.s:7120   .debug_str:0000000000000112 .LASF14
     /tmp/cc3WCdlM.s:7406   .debug_str:0000000000000aad .LASF15
     /tmp/cc3WCdlM.s:7160   .debug_str:0000000000000250 .LASF16
     /tmp/cc3WCdlM.s:7396   .debug_str:0000000000000a77 .LASF17
     /tmp/cc3WCdlM.s:7488   .debug_str:0000000000000d8a .LASF68
     /tmp/cc3WCdlM.s:7344   .debug_str:00000000000008c1 .LASF21
     /tmp/cc3WCdlM.s:7270   .debug_str:0000000000000646 .LASF18
     /tmp/cc3WCdlM.s:7168   .debug_str:00000000000002a9 .LASF19
     /tmp/cc3WCdlM.s:7504   .debug_str:0000000000000df0 .LASF20
     /tmp/cc3WCdlM.s:7472   .debug_str:0000000000000d02 .LASF22
     /tmp/cc3WCdlM.s:7170   .debug_str:00000000000002b2 .LASF23
     /tmp/cc3WCdlM.s:7434   .debug_str:0000000000000b51 .LASF24
     /tmp/cc3WCdlM.s:7146   .debug_str:00000000000001e2 .LASF25
     /tmp/cc3WCdlM.s:7208   .debug_str:0000000000000413 .LASF58
     /tmp/cc3WCdlM.s:7220   .debug_str:000000000000045b .LASF60
     /tmp/cc3WCdlM.s:7464   .debug_str:0000000000000cce .LASF26
     /tmp/cc3WCdlM.s:7452   .debug_str:0000000000000c8e .LASF28
     /tmp/cc3WCdlM.s:7360   .debug_str:000000000000094f .LASF30
     /tmp/cc3WCdlM.s:7308   .debug_str:0000000000000754 .LASF32
     /tmp/cc3WCdlM.s:7336   .debug_str:0000000000000878 .LASF27
     /tmp/cc3WCdlM.s:7338   .debug_str:000000000000087f .LASF29
     /tmp/cc3WCdlM.s:7302   .debug_str:0000000000000734 .LASF31
     /tmp/cc3WCdlM.s:7258   .debug_str:0000000000000600 .LASF33
     /tmp/cc3WCdlM.s:7500   .debug_str:0000000000000ddc .LASF34
     /tmp/cc3WCdlM.s:7442   .debug_str:0000000000000c43 .LASF35
     /tmp/cc3WCdlM.s:7298   .debug_str:0000000000000727 .LASF36
     /tmp/cc3WCdlM.s:7306   .debug_str:0000000000000740 .LASF37
     /tmp/cc3WCdlM.s:7272   .debug_str:000000000000064f .LASF38
     /tmp/cc3WCdlM.s:7342   .debug_str:00000000000008ad .LASF39
     /tmp/cc3WCdlM.s:7530   .debug_str:0000000000000ec4 .LASF40
     /tmp/cc3WCdlM.s:7228   .debug_str:000000000000048b .LASF41
     /tmp/cc3WCdlM.s:7402   .debug_str:0000000000000a99 .LASF42
     /tmp/cc3WCdlM.s:7382   .debug_str:0000000000000a10 .LASF43
     /tmp/cc3WCdlM.s:7384   .debug_str:0000000000000a23 .LASF44
     /tmp/cc3WCdlM.s:7126   .debug_str:0000000000000136 .LASF45
     /tmp/cc3WCdlM.s:7156   .debug_str:000000000000022b .LASF46
     /tmp/cc3WCdlM.s:7216   .debug_str:0000000000000434 .LASF47
GAS LISTING /tmp/cc3WCdlM.s 			page 65


     /tmp/cc3WCdlM.s:7226   .debug_str:0000000000000485 .LASF48
     /tmp/cc3WCdlM.s:7148   .debug_str:00000000000001ee .LASF49
     /tmp/cc3WCdlM.s:7092   .debug_str:000000000000005e .LASF50
     /tmp/cc3WCdlM.s:7372   .debug_str:0000000000000999 .LASF51
     /tmp/cc3WCdlM.s:7364   .debug_str:000000000000096a .LASF52
     /tmp/cc3WCdlM.s:7522   .debug_str:0000000000000e79 .LASF53
     /tmp/cc3WCdlM.s:7492   .debug_str:0000000000000d95 .LASF54
     /tmp/cc3WCdlM.s:7506   .debug_str:0000000000000df9 .LASF55
     /tmp/cc3WCdlM.s:7486   .debug_str:0000000000000d80 .LASF56
     /tmp/cc3WCdlM.s:7290   .debug_str:00000000000006db .LASF57
     /tmp/cc3WCdlM.s:7498   .debug_str:0000000000000dcd .LASF59
     /tmp/cc3WCdlM.s:7194   .debug_str:000000000000037e .LASF61
     /tmp/cc3WCdlM.s:7368   .debug_str:0000000000000983 .LASF62
     /tmp/cc3WCdlM.s:7524   .debug_str:0000000000000e91 .LASF63
     /tmp/cc3WCdlM.s:7322   .debug_str:00000000000007d2 .LASF64
     /tmp/cc3WCdlM.s:7250   .debug_str:000000000000058c .LASF66
     /tmp/cc3WCdlM.s:7362   .debug_str:0000000000000958 .LASF65
     /tmp/cc3WCdlM.s:7158   .debug_str:0000000000000231 .LASF67
     /tmp/cc3WCdlM.s:7496   .debug_str:0000000000000da9 .LASF69
     /tmp/cc3WCdlM.s:7482   .debug_str:0000000000000d5b .LASF103
     /tmp/cc3WCdlM.s:7264   .debug_str:0000000000000628 .LASF70
     /tmp/cc3WCdlM.s:7124   .debug_str:0000000000000131 .LASF71
     /tmp/cc3WCdlM.s:7100   .debug_str:000000000000008f .LASF72
     /tmp/cc3WCdlM.s:7234   .debug_str:00000000000004af .LASF105
     /tmp/cc3WCdlM.s:7400   .debug_str:0000000000000a94 .LASF73
     /tmp/cc3WCdlM.s:7300   .debug_str:000000000000072f .LASF74
     /tmp/cc3WCdlM.s:7526   .debug_str:0000000000000eaa .LASF75
     /tmp/cc3WCdlM.s:7374   .debug_str:00000000000009b1 .LASF78
     /tmp/cc3WCdlM.s:7174   .debug_str:00000000000002d5 .LASF76
     /tmp/cc3WCdlM.s:7370   .debug_str:000000000000098f .LASF77
     /tmp/cc3WCdlM.s:7352   .debug_str:00000000000008f6 .LASF79
     /tmp/cc3WCdlM.s:7314   .debug_str:000000000000078c .LASF80
     /tmp/cc3WCdlM.s:7502   .debug_str:0000000000000de4 .LASF81
     /tmp/cc3WCdlM.s:7292   .debug_str:00000000000006f1 .LASF82
     /tmp/cc3WCdlM.s:7414   .debug_str:0000000000000ada .LASF83
     /tmp/cc3WCdlM.s:7114   .debug_str:00000000000000d4 .LASF84
     /tmp/cc3WCdlM.s:7466   .debug_str:0000000000000cd7 .LASF85
     /tmp/cc3WCdlM.s:7162   .debug_str:0000000000000266 .LASF86
     /tmp/cc3WCdlM.s:7232   .debug_str:00000000000004a5 .LASF87
     /tmp/cc3WCdlM.s:7328   .debug_str:000000000000080b .LASF88
     /tmp/cc3WCdlM.s:7430   .debug_str:0000000000000b41 .LASF142
     /tmp/cc3WCdlM.s:7244   .debug_str:000000000000053c .LASF89
     /tmp/cc3WCdlM.s:7470   .debug_str:0000000000000ce6 .LASF90
     /tmp/cc3WCdlM.s:7098   .debug_str:0000000000000076 .LASF91
     /tmp/cc3WCdlM.s:7132   .debug_str:0000000000000182 .LASF92
     /tmp/cc3WCdlM.s:7446   .debug_str:0000000000000c61 .LASF93
     /tmp/cc3WCdlM.s:7350   .debug_str:00000000000008ee .LASF94
     /tmp/cc3WCdlM.s:7186   .debug_str:000000000000034e .LASF95
     /tmp/cc3WCdlM.s:7392   .debug_str:0000000000000a53 .LASF96
     /tmp/cc3WCdlM.s:7510   .debug_str:0000000000000e1f .LASF97
     /tmp/cc3WCdlM.s:7516   .debug_str:0000000000000e3e .LASF225
     /tmp/cc3WCdlM.s:7248   .debug_str:0000000000000570 .LASF226
     /tmp/cc3WCdlM.s:7252   .debug_str:00000000000005ae .LASF98
     /tmp/cc3WCdlM.s:7118   .debug_str:00000000000000fd .LASF99
     /tmp/cc3WCdlM.s:7376   .debug_str:00000000000009ce .LASF100
     /tmp/cc3WCdlM.s:7532   .debug_str:0000000000000ecc .LASF101
     /tmp/cc3WCdlM.s:7468   .debug_str:0000000000000ce1 .LASF104
GAS LISTING /tmp/cc3WCdlM.s 			page 66


     /tmp/cc3WCdlM.s:7262   .debug_str:0000000000000623 .LASF102
     /tmp/cc3WCdlM.s:7476   .debug_str:0000000000000d2c .LASF106
     /tmp/cc3WCdlM.s:7294   .debug_str:0000000000000715 .LASF107
     /tmp/cc3WCdlM.s:7318   .debug_str:00000000000007a8 .LASF108
     /tmp/cc3WCdlM.s:7340   .debug_str:0000000000000892 .LASF109
     /tmp/cc3WCdlM.s:7206   .debug_str:00000000000003f8 .LASF227
     /tmp/cc3WCdlM.s:7286   .debug_str:000000000000069e .LASF110
     /tmp/cc3WCdlM.s:7084   .debug_str:000000000000002b .LASF111
     /tmp/cc3WCdlM.s:7088   .debug_str:0000000000000047 .LASF112
     /tmp/cc3WCdlM.s:7246   .debug_str:0000000000000558 .LASF113
     /tmp/cc3WCdlM.s:7358   .debug_str:0000000000000946 .LASF114
     /tmp/cc3WCdlM.s:7520   .debug_str:0000000000000e58 .LASF115
     /tmp/cc3WCdlM.s:7278   .debug_str:0000000000000671 .LASF116
     /tmp/cc3WCdlM.s:7484   .debug_str:0000000000000d60 .LASF117
     /tmp/cc3WCdlM.s:7316   .debug_str:000000000000079c .LASF118
     /tmp/cc3WCdlM.s:7256   .debug_str:00000000000005de .LASF119
     /tmp/cc3WCdlM.s:7534   .debug_str:0000000000000eda .LASF120
     /tmp/cc3WCdlM.s:7356   .debug_str:0000000000000927 .LASF121
     /tmp/cc3WCdlM.s:7390   .debug_str:0000000000000a48 .LASF122
     /tmp/cc3WCdlM.s:7180   .debug_str:000000000000031d .LASF123
     /tmp/cc3WCdlM.s:7326   .debug_str:0000000000000802 .LASF124
     /tmp/cc3WCdlM.s:7128   .debug_str:0000000000000149 .LASF125
     /tmp/cc3WCdlM.s:7102   .debug_str:0000000000000094 .LASF126
     /tmp/cc3WCdlM.s:7512   .debug_str:0000000000000e31 .LASF127
     /tmp/cc3WCdlM.s:7116   .debug_str:00000000000000f7 .LASF128
     /tmp/cc3WCdlM.s:7108   .debug_str:00000000000000ad .LASF129
     /tmp/cc3WCdlM.s:7282   .debug_str:0000000000000682 .LASF130
     /tmp/cc3WCdlM.s:7418   .debug_str:0000000000000aee .LASF131
     /tmp/cc3WCdlM.s:7410   .debug_str:0000000000000aca .LASF132
     /tmp/cc3WCdlM.s:7260   .debug_str:0000000000000613 .LASF133
     /tmp/cc3WCdlM.s:7420   .debug_str:0000000000000af6 .LASF134
     /tmp/cc3WCdlM.s:7324   .debug_str:00000000000007e7 .LASF135
     /tmp/cc3WCdlM.s:7106   .debug_str:00000000000000a1 .LASF136
     /tmp/cc3WCdlM.s:7474   .debug_str:0000000000000d11 .LASF137
     /tmp/cc3WCdlM.s:7296   .debug_str:000000000000071a .LASF138
     /tmp/cc3WCdlM.s:7150   .debug_str:0000000000000200 .LASF139
     /tmp/cc3WCdlM.s:7404   .debug_str:0000000000000aa0 .LASF140
     /tmp/cc3WCdlM.s:7380   .debug_str:00000000000009ea .LASF141
     /tmp/cc3WCdlM.s:7310   .debug_str:0000000000000769 .LASF143
     /tmp/cc3WCdlM.s:7268   .debug_str:0000000000000640 .LASF144
     /tmp/cc3WCdlM.s:7080   .debug_str:0000000000000011 .LASF145
     /tmp/cc3WCdlM.s:7514   .debug_str:0000000000000e38 .LASF146
     /tmp/cc3WCdlM.s:7332   .debug_str:0000000000000850 .LASF147
     /tmp/cc3WCdlM.s:7280   .debug_str:0000000000000679 .LASF148
     /tmp/cc3WCdlM.s:7440   .debug_str:0000000000000c2b .LASF149
     /tmp/cc3WCdlM.s:7388   .debug_str:0000000000000a3b .LASF150
     /tmp/cc3WCdlM.s:7164   .debug_str:0000000000000288 .LASF151
     /tmp/cc3WCdlM.s:7426   .debug_str:0000000000000b1b .LASF152
     /tmp/cc3WCdlM.s:7312   .debug_str:000000000000076e .LASF153
     /tmp/cc3WCdlM.s:7432   .debug_str:0000000000000b49 .LASF228
     /tmp/cc3WCdlM.s:7230   .debug_str:000000000000049f .LASF154
     /tmp/cc3WCdlM.s:7240   .debug_str:00000000000004fc .LASF155
     /tmp/cc3WCdlM.s:7134   .debug_str:000000000000018b .LASF156
     /tmp/cc3WCdlM.s:7448   .debug_str:0000000000000c6a .LASF157
     /tmp/cc3WCdlM.s:7354   .debug_str:0000000000000917 .LASF158
     /tmp/cc3WCdlM.s:7112   .debug_str:00000000000000c4 .LASF159
     /tmp/cc3WCdlM.s:7508   .debug_str:0000000000000e0f .LASF160
GAS LISTING /tmp/cc3WCdlM.s 			page 67


     /tmp/cc3WCdlM.s:7408   .debug_str:0000000000000ab9 .LASF161
     /tmp/cc3WCdlM.s:7394   .debug_str:0000000000000a64 .LASF162
     /tmp/cc3WCdlM.s:7078   .debug_str:0000000000000000 .LASF163
     /tmp/cc3WCdlM.s:7202   .debug_str:00000000000003d5 .LASF164
     /tmp/cc3WCdlM.s:7086   .debug_str:0000000000000042 .LASF165
     /tmp/cc3WCdlM.s:7518   .debug_str:0000000000000e52 .LASF166
     /tmp/cc3WCdlM.s:7450   .debug_str:0000000000000c86 .LASF167
     /tmp/cc3WCdlM.s:7444   .debug_str:0000000000000c57 .LASF168
     /tmp/cc3WCdlM.s:7416   .debug_str:0000000000000ae5 .LASF169
     /tmp/cc3WCdlM.s:7494   .debug_str:0000000000000d9f .LASF170
     /tmp/cc3WCdlM.s:7110   .debug_str:00000000000000b6 .LASF171
     /tmp/cc3WCdlM.s:7346   .debug_str:00000000000008cc .LASF172
     /tmp/cc3WCdlM.s:7140   .debug_str:00000000000001b6 .LASF173
     /tmp/cc3WCdlM.s:7242   .debug_str:0000000000000510 .LASF174
     /tmp/cc3WCdlM.s:7152   .debug_str:000000000000021d .LASF175
     /tmp/cc3WCdlM.s:7144   .debug_str:00000000000001cb .LASF176
     /tmp/cc3WCdlM.s:7386   .debug_str:0000000000000a2a .LASF177
     /tmp/cc3WCdlM.s:7438   .debug_str:0000000000000c22 .LASF178
     /tmp/cc3WCdlM.s:7480   .debug_str:0000000000000d54 .LASF179
     /tmp/cc3WCdlM.s:7528   .debug_str:0000000000000ebb .LASF180
     /tmp/cc3WCdlM.s:7166   .debug_str:00000000000002a4 .LASF181
     /tmp/cc3WCdlM.s:7184   .debug_str:0000000000000343 .LASF182
     /tmp/cc3WCdlM.s:7198   .debug_str:00000000000003a8 .LASF183
     /tmp/cc3WCdlM.s:7154   .debug_str:0000000000000226 .LASF184
     /tmp/cc3WCdlM.s:7454   .debug_str:0000000000000ca3 .LASF185
     /tmp/cc3WCdlM.s:7412   .debug_str:0000000000000ad3 .LASF186
     /tmp/cc3WCdlM.s:7236   .debug_str:00000000000004d1 .LASF187
     /tmp/cc3WCdlM.s:7212   .debug_str:0000000000000427 .LASF188
     /tmp/cc3WCdlM.s:7200   .debug_str:00000000000003bc .LASF189
     /tmp/cc3WCdlM.s:7284   .debug_str:000000000000068a .LASF190
     /tmp/cc3WCdlM.s:7276   .debug_str:000000000000065d .LASF191
     /tmp/cc3WCdlM.s:7218   .debug_str:0000000000000446 .LASF192
     /tmp/cc3WCdlM.s:7422   .debug_str:0000000000000b01 .LASF193
     /tmp/cc3WCdlM.s:7210   .debug_str:000000000000041e .LASF194
     /tmp/cc3WCdlM.s:7130   .debug_str:0000000000000167 .LASF195
     /tmp/cc3WCdlM.s:7304   .debug_str:000000000000073b .LASF196
     /tmp/cc3WCdlM.s:7428   .debug_str:0000000000000b2a .LASF197
     /tmp/cc3WCdlM.s:7096   .debug_str:0000000000000070 .LASF198
     /tmp/cc3WCdlM.s:7176   .debug_str:00000000000002f6 .LASF199
     /tmp/cc3WCdlM.s:7330   .debug_str:0000000000000848 .LASF200
     /tmp/cc3WCdlM.s:7094   .debug_str:0000000000000069 .LASF201
     /tmp/cc3WCdlM.s:7190   .debug_str:0000000000000368 .LASF202
     /tmp/cc3WCdlM.s:7424   .debug_str:0000000000000b16 .LASF203
     /tmp/cc3WCdlM.s:7182   .debug_str:000000000000033e .LASF205
     /tmp/cc3WCdlM.s:7224   .debug_str:0000000000000480 .LASF204
     /tmp/cc3WCdlM.s:7172   .debug_str:00000000000002be .LASF214
     /tmp/cc3WCdlM.s:1815   .text:00000000000004e0 .LFB56
     /tmp/cc3WCdlM.s:1907   .text:000000000000054c .LFE56
     /tmp/cc3WCdlM.s:7398   .debug_str:0000000000000a8d .LASF206
     /tmp/cc3WCdlM.s:6331   .debug_loc:0000000000000000 .LLST84
     /tmp/cc3WCdlM.s:1827   .text:00000000000004f0 .LBB431
     /tmp/cc3WCdlM.s:1843   .text:00000000000004fc .LBE431
     /tmp/cc3WCdlM.s:1874   .text:0000000000000534 .LBB433
     /tmp/cc3WCdlM.s:1889   .text:0000000000000540 .LBE433
     /tmp/cc3WCdlM.s:6346   .debug_loc:0000000000000049 .LLST85
     /tmp/cc3WCdlM.s:1891   .text:0000000000000540 .LBB435
     /tmp/cc3WCdlM.s:1903   .text:0000000000000548 .LBE435
GAS LISTING /tmp/cc3WCdlM.s 			page 68


     /tmp/cc3WCdlM.s:6355   .debug_loc:000000000000006f .LLST86
     /tmp/cc3WCdlM.s:1872   .text:0000000000000534 .LVL135
     /tmp/cc3WCdlM.s:46     .text:0000000000000020 .LFB55
     /tmp/cc3WCdlM.s:1809   .text:00000000000004e0 .LFE55
     /tmp/cc3WCdlM.s:6363   .debug_loc:0000000000000093 .LLST0
     /tmp/cc3WCdlM.s:7082   .debug_str:0000000000000025 .LASF207
     /tmp/cc3WCdlM.s:6378   .debug_loc:00000000000000dc .LLST1
     /tmp/cc3WCdlM.s:7456   .debug_str:0000000000000cba .LASF208
     /tmp/cc3WCdlM.s:6429   .debug_loc:00000000000001d0 .LLST2
     /tmp/cc3WCdlM.s:134    .text:0000000000000084 .LBB394
     /tmp/cc3WCdlM.s:206    .text:00000000000000b0 .LBE394
     /tmp/cc3WCdlM.s:7490   .debug_str:0000000000000d90 .LASF209
     /tmp/cc3WCdlM.s:6440   .debug_loc:0000000000000206 .LLST80
     /tmp/cc3WCdlM.s:7204   .debug_str:00000000000003f0 .LASF210
     /tmp/cc3WCdlM.s:6453   .debug_loc:000000000000023e .LLST81
     /tmp/cc3WCdlM.s:136    .text:0000000000000084 .LBB395
     /tmp/cc3WCdlM.s:153    .text:0000000000000090 .LBE395
     /tmp/cc3WCdlM.s:155    .text:0000000000000090 .LBB397
     /tmp/cc3WCdlM.s:170    .text:000000000000009c .LBE397
     /tmp/cc3WCdlM.s:178    .text:00000000000000a4 .LBB399
     /tmp/cc3WCdlM.s:189    .text:00000000000000a8 .LBE399
     /tmp/cc3WCdlM.s:6460   .debug_loc:0000000000000261 .LLST82
     /tmp/cc3WCdlM.s:191    .text:00000000000000a8 .LBB401
     /tmp/cc3WCdlM.s:205    .text:00000000000000b0 .LBE401
     /tmp/cc3WCdlM.s:6467   .debug_loc:0000000000000284 .LLST83
     /tmp/cc3WCdlM.s:553    .text:0000000000000164 .LBB179
     /tmp/cc3WCdlM.s:698    .text:00000000000001cc .LBE179
     /tmp/cc3WCdlM.s:6474   .debug_loc:00000000000002a7 .LLST3
     /tmp/cc3WCdlM.s:6481   .debug_loc:00000000000002ca .LLST4
     /tmp/cc3WCdlM.s:6488   .debug_loc:00000000000002ed .LLST5
     /tmp/cc3WCdlM.s:7458   .debug_str:0000000000000cbf .LASF211
     /tmp/cc3WCdlM.s:6495   .debug_loc:0000000000000310 .LLST6
     /tmp/cc3WCdlM.s:7460   .debug_str:0000000000000cc4 .LASF212
     /tmp/cc3WCdlM.s:6502   .debug_loc:0000000000000333 .LLST7
     /tmp/cc3WCdlM.s:7462   .debug_str:0000000000000cc9 .LASF213
     /tmp/cc3WCdlM.s:6509   .debug_loc:0000000000000356 .LLST8
     /tmp/cc3WCdlM.s:6516   .debug_loc:0000000000000379 .LLST9
     /tmp/cc3WCdlM.s:6523   .debug_loc:000000000000039c .LLST10
     /tmp/cc3WCdlM.s:555    .text:0000000000000164 .LBB180
     /tmp/cc3WCdlM.s:570    .text:0000000000000170 .LBE180
     /tmp/cc3WCdlM.s:575    .text:0000000000000174 .LBB182
     /tmp/cc3WCdlM.s:591    .text:0000000000000180 .LBE182
     /tmp/cc3WCdlM.s:665    .text:00000000000001b8 .LBB184
     /tmp/cc3WCdlM.s:676    .text:00000000000001bc .LBE184
     /tmp/cc3WCdlM.s:6530   .debug_loc:00000000000003bf .LLST11
     /tmp/cc3WCdlM.s:678    .text:00000000000001bc .LBB186
     /tmp/cc3WCdlM.s:692    .text:00000000000001c4 .LBE186
     /tmp/cc3WCdlM.s:6537   .debug_loc:00000000000003e2 .LLST12
     /tmp/cc3WCdlM.s:645    .text:00000000000001a8 .LVL29
     /tmp/cc3WCdlM.s:701    .text:00000000000001cc .LBB372
     /tmp/cc3WCdlM.s:792    .text:0000000000000208 .LBE372
     /tmp/cc3WCdlM.s:6544   .debug_loc:0000000000000405 .LLST75
     /tmp/cc3WCdlM.s:6551   .debug_loc:0000000000000428 .LLST76
     /tmp/cc3WCdlM.s:6558   .debug_loc:000000000000044b .LLST77
     /tmp/cc3WCdlM.s:703    .text:00000000000001cc .LBB373
     /tmp/cc3WCdlM.s:719    .text:00000000000001d8 .LBE373
     /tmp/cc3WCdlM.s:724    .text:00000000000001dc .LBB375
GAS LISTING /tmp/cc3WCdlM.s 			page 69


     /tmp/cc3WCdlM.s:740    .text:00000000000001e8 .LBE375
     /tmp/cc3WCdlM.s:764    .text:00000000000001fc .LBB377
     /tmp/cc3WCdlM.s:775    .text:0000000000000200 .LBE377
     /tmp/cc3WCdlM.s:6565   .debug_loc:000000000000046e .LLST78
     /tmp/cc3WCdlM.s:777    .text:0000000000000200 .LBB379
     /tmp/cc3WCdlM.s:791    .text:0000000000000208 .LBE379
     /tmp/cc3WCdlM.s:6572   .debug_loc:0000000000000491 .LLST79
     /tmp/cc3WCdlM.s:754    .text:00000000000001f8 .LVL40
     /tmp/cc3WCdlM.s:794    .text:0000000000000208 .LBB353
     /tmp/cc3WCdlM.s:883    .text:0000000000000240 .LBE353
     /tmp/cc3WCdlM.s:6579   .debug_loc:00000000000004b4 .LLST70
     /tmp/cc3WCdlM.s:6586   .debug_loc:00000000000004d7 .LLST71
     /tmp/cc3WCdlM.s:6593   .debug_loc:00000000000004fa .LLST72
     /tmp/cc3WCdlM.s:796    .text:0000000000000208 .LBB354
     /tmp/cc3WCdlM.s:812    .text:0000000000000214 .LBE354
     /tmp/cc3WCdlM.s:817    .text:0000000000000218 .LBB356
     /tmp/cc3WCdlM.s:833    .text:0000000000000224 .LBE356
     /tmp/cc3WCdlM.s:855    .text:0000000000000234 .LBB358
     /tmp/cc3WCdlM.s:866    .text:0000000000000238 .LBE358
     /tmp/cc3WCdlM.s:6600   .debug_loc:000000000000051d .LLST73
     /tmp/cc3WCdlM.s:868    .text:0000000000000238 .LBB360
     /tmp/cc3WCdlM.s:882    .text:0000000000000240 .LBE360
     /tmp/cc3WCdlM.s:6607   .debug_loc:0000000000000540 .LLST74
     /tmp/cc3WCdlM.s:845    .text:0000000000000230 .LVL48
     /tmp/cc3WCdlM.s:885    .text:0000000000000240 .LBB335
     /tmp/cc3WCdlM.s:965    .text:0000000000000284 .LBE335
     /tmp/cc3WCdlM.s:6614   .debug_loc:0000000000000563 .LLST66
     /tmp/cc3WCdlM.s:6621   .debug_loc:0000000000000586 .LLST67
     /tmp/cc3WCdlM.s:887    .text:0000000000000240 .LBB336
     /tmp/cc3WCdlM.s:903    .text:000000000000024c .LBE336
     /tmp/cc3WCdlM.s:908    .text:0000000000000250 .LBB338
     /tmp/cc3WCdlM.s:924    .text:000000000000025c .LBE338
     /tmp/cc3WCdlM.s:937    .text:0000000000000278 .LBB340
     /tmp/cc3WCdlM.s:948    .text:000000000000027c .LBE340
     /tmp/cc3WCdlM.s:6628   .debug_loc:00000000000005a9 .LLST68
     /tmp/cc3WCdlM.s:950    .text:000000000000027c .LBB342
     /tmp/cc3WCdlM.s:964    .text:0000000000000284 .LBE342
     /tmp/cc3WCdlM.s:6635   .debug_loc:00000000000005cc .LLST69
     /tmp/cc3WCdlM.s:935    .text:0000000000000278 .LVL55
     /tmp/cc3WCdlM.s:967    .text:0000000000000284 .LBB318
     /tmp/cc3WCdlM.s:1040   .text:00000000000002b4 .LBE318
     /tmp/cc3WCdlM.s:6642   .debug_loc:00000000000005ef .LLST62
     /tmp/cc3WCdlM.s:6649   .debug_loc:0000000000000612 .LLST63
     /tmp/cc3WCdlM.s:969    .text:0000000000000284 .LBB319
     /tmp/cc3WCdlM.s:985    .text:0000000000000290 .LBE319
     /tmp/cc3WCdlM.s:990    .text:0000000000000294 .LBB321
     /tmp/cc3WCdlM.s:1006   .text:00000000000002a0 .LBE321
     /tmp/cc3WCdlM.s:1012   .text:00000000000002a8 .LBB323
     /tmp/cc3WCdlM.s:1023   .text:00000000000002ac .LBE323
     /tmp/cc3WCdlM.s:6656   .debug_loc:0000000000000635 .LLST64
     /tmp/cc3WCdlM.s:1025   .text:00000000000002ac .LBB325
     /tmp/cc3WCdlM.s:1039   .text:00000000000002b4 .LBE325
     /tmp/cc3WCdlM.s:6663   .debug_loc:0000000000000658 .LLST65
     /tmp/cc3WCdlM.s:1010   .text:00000000000002a8 .LVL61
     /tmp/cc3WCdlM.s:1042   .text:00000000000002b4 .LBB302
     /tmp/cc3WCdlM.s:1119   .text:00000000000002f0 .LBE302
     /tmp/cc3WCdlM.s:6670   .debug_loc:000000000000067b .LLST58
GAS LISTING /tmp/cc3WCdlM.s 			page 70


     /tmp/cc3WCdlM.s:6677   .debug_loc:000000000000069e .LLST59
     /tmp/cc3WCdlM.s:1044   .text:00000000000002b4 .LBB303
     /tmp/cc3WCdlM.s:1060   .text:00000000000002c0 .LBE303
     /tmp/cc3WCdlM.s:1065   .text:00000000000002c4 .LBB305
     /tmp/cc3WCdlM.s:1081   .text:00000000000002d0 .LBE305
     /tmp/cc3WCdlM.s:1091   .text:00000000000002e4 .LBB307
     /tmp/cc3WCdlM.s:1102   .text:00000000000002e8 .LBE307
     /tmp/cc3WCdlM.s:6684   .debug_loc:00000000000006c1 .LLST60
     /tmp/cc3WCdlM.s:1104   .text:00000000000002e8 .LBB309
     /tmp/cc3WCdlM.s:1118   .text:00000000000002f0 .LBE309
     /tmp/cc3WCdlM.s:6691   .debug_loc:00000000000006e4 .LLST61
     /tmp/cc3WCdlM.s:1089   .text:00000000000002e4 .LVL67
     /tmp/cc3WCdlM.s:1121   .text:00000000000002f0 .LBB281
     /tmp/cc3WCdlM.s:1272   .text:0000000000000360 .LBE281
     /tmp/cc3WCdlM.s:6698   .debug_loc:0000000000000707 .LLST46
     /tmp/cc3WCdlM.s:6705   .debug_loc:000000000000072a .LLST47
     /tmp/cc3WCdlM.s:6712   .debug_loc:000000000000074d .LLST48
     /tmp/cc3WCdlM.s:6719   .debug_loc:0000000000000770 .LLST49
     /tmp/cc3WCdlM.s:6726   .debug_loc:0000000000000793 .LLST50
     /tmp/cc3WCdlM.s:6733   .debug_loc:00000000000007b6 .LLST51
     /tmp/cc3WCdlM.s:1123   .text:00000000000002f0 .LBB282
     /tmp/cc3WCdlM.s:1139   .text:00000000000002fc .LBE282
     /tmp/cc3WCdlM.s:1144   .text:0000000000000300 .LBB284
     /tmp/cc3WCdlM.s:1160   .text:000000000000030c .LBE284
     /tmp/cc3WCdlM.s:1192   .text:0000000000000328 .LBB286
     /tmp/cc3WCdlM.s:1208   .text:0000000000000334 .LBE286
     /tmp/cc3WCdlM.s:6750   .debug_loc:0000000000000801 .LLST52
     /tmp/cc3WCdlM.s:6757   .debug_loc:0000000000000824 .LLST53
     /tmp/cc3WCdlM.s:1198   .text:000000000000032c .LBB288
     /tmp/cc3WCdlM.s:1206   .text:0000000000000334 .LBE288
     /tmp/cc3WCdlM.s:6764   .debug_loc:0000000000000847 .LLST54
     /tmp/cc3WCdlM.s:1210   .text:0000000000000334 .LBB290
     /tmp/cc3WCdlM.s:1218   .text:000000000000033c .LBE290
     /tmp/cc3WCdlM.s:6773   .debug_loc:000000000000086c .LLST55
     /tmp/cc3WCdlM.s:1239   .text:000000000000034c .LBB292
     /tmp/cc3WCdlM.s:1250   .text:0000000000000350 .LBE292
     /tmp/cc3WCdlM.s:6780   .debug_loc:000000000000088f .LLST56
     /tmp/cc3WCdlM.s:1252   .text:0000000000000350 .LBB294
     /tmp/cc3WCdlM.s:1266   .text:0000000000000358 .LBE294
     /tmp/cc3WCdlM.s:6787   .debug_loc:00000000000008b2 .LLST57
     /tmp/cc3WCdlM.s:1191   .text:0000000000000328 .LVL75
     /tmp/cc3WCdlM.s:1274   .text:0000000000000360 .LBB255
     /tmp/cc3WCdlM.s:1447   .text:00000000000003f8 .LBE255
     /tmp/cc3WCdlM.s:6794   .debug_loc:00000000000008d5 .LLST33
     /tmp/cc3WCdlM.s:6801   .debug_loc:00000000000008f8 .LLST34
     /tmp/cc3WCdlM.s:6808   .debug_loc:000000000000091b .LLST35
     /tmp/cc3WCdlM.s:7062   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3WCdlM.s:6815   .debug_loc:000000000000093e .LLST37
     /tmp/cc3WCdlM.s:1332   .text:0000000000000388 .LBB261
     /tmp/cc3WCdlM.s:6822   .debug_loc:0000000000000961 .LLST38
     /tmp/cc3WCdlM.s:6837   .debug_loc:000000000000099b .LLST39
     /tmp/cc3WCdlM.s:6848   .debug_loc:00000000000009d1 .LLST40
     /tmp/cc3WCdlM.s:1342   .text:0000000000000398 .LVL90
     /tmp/cc3WCdlM.s:1346   .text:0000000000000398 .LBB264
     /tmp/cc3WCdlM.s:1355   .text:00000000000003a0 .LBE264
     /tmp/cc3WCdlM.s:6855   .debug_loc:00000000000009f4 .LLST41
     /tmp/cc3WCdlM.s:1366   .text:00000000000003b8 .LVL92
GAS LISTING /tmp/cc3WCdlM.s 			page 71


     /tmp/cc3WCdlM.s:1276   .text:0000000000000360 .LBB256
     /tmp/cc3WCdlM.s:1291   .text:000000000000036c .LBE256
     /tmp/cc3WCdlM.s:1296   .text:0000000000000370 .LBB258
     /tmp/cc3WCdlM.s:1312   .text:000000000000037c .LBE258
     /tmp/cc3WCdlM.s:1371   .text:00000000000003b8 .LBB267
     /tmp/cc3WCdlM.s:1381   .text:00000000000003c4 .LBE267
     /tmp/cc3WCdlM.s:6862   .debug_loc:0000000000000a17 .LLST42
     /tmp/cc3WCdlM.s:1402   .text:00000000000003d8 .LBB270
     /tmp/cc3WCdlM.s:1409   .text:00000000000003dc .LBE270
     /tmp/cc3WCdlM.s:6871   .debug_loc:0000000000000a3c .LLST43
     /tmp/cc3WCdlM.s:1419   .text:00000000000003ec .LBB272
     /tmp/cc3WCdlM.s:1430   .text:00000000000003f0 .LBE272
     /tmp/cc3WCdlM.s:6878   .debug_loc:0000000000000a5f .LLST44
     /tmp/cc3WCdlM.s:1432   .text:00000000000003f0 .LBB274
     /tmp/cc3WCdlM.s:1446   .text:00000000000003f8 .LBE274
     /tmp/cc3WCdlM.s:6885   .debug_loc:0000000000000a82 .LLST45
     /tmp/cc3WCdlM.s:1416   .text:00000000000003ec .LVL97
     /tmp/cc3WCdlM.s:1449   .text:00000000000003f8 .LBB240
     /tmp/cc3WCdlM.s:1563   .text:0000000000000444 .LBE240
     /tmp/cc3WCdlM.s:6892   .debug_loc:0000000000000aa5 .LLST26
     /tmp/cc3WCdlM.s:6899   .debug_loc:0000000000000ac8 .LLST27
     /tmp/cc3WCdlM.s:6906   .debug_loc:0000000000000aeb .LLST28
     /tmp/cc3WCdlM.s:6917   .debug_loc:0000000000000b21 .LLST29
     /tmp/cc3WCdlM.s:1451   .text:00000000000003f8 .LBB241
     /tmp/cc3WCdlM.s:1467   .text:0000000000000404 .LBE241
     /tmp/cc3WCdlM.s:1472   .text:0000000000000408 .LBB243
     /tmp/cc3WCdlM.s:1488   .text:0000000000000414 .LBE243
     /tmp/cc3WCdlM.s:1505   .text:000000000000041c .LBB245
     /tmp/cc3WCdlM.s:1512   .text:0000000000000420 .LBE245
     /tmp/cc3WCdlM.s:6928   .debug_loc:0000000000000b57 .LLST30
     /tmp/cc3WCdlM.s:1528   .text:000000000000042c .LBB247
     /tmp/cc3WCdlM.s:1539   .text:0000000000000430 .LBE247
     /tmp/cc3WCdlM.s:6935   .debug_loc:0000000000000b7a .LLST31
     /tmp/cc3WCdlM.s:1541   .text:0000000000000430 .LBB249
     /tmp/cc3WCdlM.s:1555   .text:0000000000000438 .LBE249
     /tmp/cc3WCdlM.s:6942   .debug_loc:0000000000000b9d .LLST32
     /tmp/cc3WCdlM.s:1559   .text:0000000000000440 .LVL109
     /tmp/cc3WCdlM.s:1565   .text:0000000000000444 .LBB226
     /tmp/cc3WCdlM.s:1682   .text:0000000000000494 .LBE226
     /tmp/cc3WCdlM.s:6949   .debug_loc:0000000000000bc0 .LLST19
     /tmp/cc3WCdlM.s:6956   .debug_loc:0000000000000be3 .LLST20
     /tmp/cc3WCdlM.s:6963   .debug_loc:0000000000000c06 .LLST21
     /tmp/cc3WCdlM.s:6974   .debug_loc:0000000000000c3c .LLST22
     /tmp/cc3WCdlM.s:1567   .text:0000000000000444 .LBB227
     /tmp/cc3WCdlM.s:1583   .text:0000000000000450 .LBE227
     /tmp/cc3WCdlM.s:1588   .text:0000000000000454 .LBB229
     /tmp/cc3WCdlM.s:1604   .text:0000000000000460 .LBE229
     /tmp/cc3WCdlM.s:1621   .text:0000000000000468 .LBB231
     /tmp/cc3WCdlM.s:1628   .text:000000000000046c .LBE231
     /tmp/cc3WCdlM.s:6986   .debug_loc:0000000000000c73 .LLST23
     /tmp/cc3WCdlM.s:1644   .text:0000000000000478 .LBB233
     /tmp/cc3WCdlM.s:1655   .text:000000000000047c .LBE233
     /tmp/cc3WCdlM.s:6993   .debug_loc:0000000000000c96 .LLST24
     /tmp/cc3WCdlM.s:1657   .text:000000000000047c .LBB235
     /tmp/cc3WCdlM.s:1671   .text:0000000000000484 .LBE235
     /tmp/cc3WCdlM.s:7000   .debug_loc:0000000000000cb9 .LLST25
     /tmp/cc3WCdlM.s:1675   .text:000000000000048c .LVL120
GAS LISTING /tmp/cc3WCdlM.s 			page 72


     /tmp/cc3WCdlM.s:1684   .text:0000000000000494 .LBB212
     /tmp/cc3WCdlM.s:1795   .text:00000000000004e0 .LBE212
     /tmp/cc3WCdlM.s:1686   .text:0000000000000494 .LBB213
     /tmp/cc3WCdlM.s:1702   .text:00000000000004a0 .LBE213
     /tmp/cc3WCdlM.s:1707   .text:00000000000004a4 .LBB215
     /tmp/cc3WCdlM.s:1723   .text:00000000000004b0 .LBE215
     /tmp/cc3WCdlM.s:1728   .text:00000000000004b8 .LBB217
     /tmp/cc3WCdlM.s:1739   .text:00000000000004bc .LBE217
     /tmp/cc3WCdlM.s:1748   .text:00000000000004cc .LBB219
     /tmp/cc3WCdlM.s:1759   .text:00000000000004d0 .LBE219
     /tmp/cc3WCdlM.s:1769   .text:00000000000004d4 .LBB221
     /tmp/cc3WCdlM.s:1780   .text:00000000000004d8 .LBE221
     /tmp/cc3WCdlM.s:7007   .debug_loc:0000000000000cdc .LLST18
     /tmp/cc3WCdlM.s:1782   .text:00000000000004d8 .LBB223
     /tmp/cc3WCdlM.s:1794   .text:00000000000004e0 .LBE223
     /tmp/cc3WCdlM.s:1743   .text:00000000000004c4 .LVL127
     /tmp/cc3WCdlM.s:415    .text:0000000000000110 .LBB199
     /tmp/cc3WCdlM.s:532    .text:0000000000000160 .LBE199
     /tmp/cc3WCdlM.s:7014   .debug_loc:0000000000000cff .LLST13
     /tmp/cc3WCdlM.s:7021   .debug_loc:0000000000000d22 .LLST14
     /tmp/cc3WCdlM.s:7028   .debug_loc:0000000000000d45 .LLST15
     /tmp/cc3WCdlM.s:417    .text:0000000000000110 .LBB200
     /tmp/cc3WCdlM.s:433    .text:000000000000011c .LBE200
     /tmp/cc3WCdlM.s:438    .text:0000000000000120 .LBB202
     /tmp/cc3WCdlM.s:454    .text:000000000000012c .LBE202
     /tmp/cc3WCdlM.s:474    .text:0000000000000140 .LBB204
     /tmp/cc3WCdlM.s:485    .text:0000000000000144 .LBE204
     /tmp/cc3WCdlM.s:494    .text:0000000000000154 .LBB206
     /tmp/cc3WCdlM.s:505    .text:0000000000000158 .LBE206
     /tmp/cc3WCdlM.s:507    .text:0000000000000158 .LBB208
     /tmp/cc3WCdlM.s:518    .text:000000000000015c .LBE208
     /tmp/cc3WCdlM.s:7035   .debug_loc:0000000000000d68 .LLST16
     /tmp/cc3WCdlM.s:520    .text:000000000000015c .LBB210
     /tmp/cc3WCdlM.s:531    .text:0000000000000160 .LBE210
     /tmp/cc3WCdlM.s:7042   .debug_loc:0000000000000d8b .LLST17
     /tmp/cc3WCdlM.s:489    .text:000000000000014c .LVL17
     /tmp/cc3WCdlM.s:66     .text:0000000000000040 .LBB174
     /tmp/cc3WCdlM.s:82     .text:000000000000004c .LBE174
     /tmp/cc3WCdlM.s:10     .text:0000000000000000 .LFB54
     /tmp/cc3WCdlM.s:40     .text:0000000000000020 .LFE54
     /tmp/cc3WCdlM.s:7104   .debug_str:000000000000009c .LASF216
     /tmp/cc3WCdlM.s:7334   .debug_str:0000000000000864 .LASF215
     /tmp/cc3WCdlM.s:7478   .debug_str:0000000000000d4f .LASF217
     /tmp/cc3WCdlM.s:7274   .debug_str:0000000000000657 .LASF218
     /tmp/cc3WCdlM.s:7192   .debug_str:000000000000036e .LASF219
     /tmp/cc3WCdlM.s:7214   .debug_str:000000000000042d .LASF220
     /tmp/cc3WCdlM.s:7142   .debug_str:00000000000001c4 .LASF221
     /tmp/cc3WCdlM.s:1841   .text:00000000000004fc .LVL132
     /tmp/cc3WCdlM.s:1854   .text:000000000000051c .LVL133
     /tmp/cc3WCdlM.s:1866   .text:000000000000052c .LVL134
     /tmp/cc3WCdlM.s:1886   .text:0000000000000540 .LVL136
     /tmp/cc3WCdlM.s:1900   .text:0000000000000548 .LVL137
     /tmp/cc3WCdlM.s:85     .text:0000000000000050 .LVL0
     /tmp/cc3WCdlM.s:108    .text:0000000000000064 .LVL2
     /tmp/cc3WCdlM.s:130    .text:0000000000000084 .LVL3
     /tmp/cc3WCdlM.s:145    .text:0000000000000088 .LVL4
     /tmp/cc3WCdlM.s:202    .text:00000000000000b0 .LVL9
GAS LISTING /tmp/cc3WCdlM.s 			page 73


     /tmp/cc3WCdlM.s:213    .text:00000000000000b4 .LVL10
     /tmp/cc3WCdlM.s:94     .text:0000000000000054 .LVL1
     /tmp/cc3WCdlM.s:431    .text:000000000000011c .LVL11
     /tmp/cc3WCdlM.s:548    .text:0000000000000164 .LVL22
     /tmp/cc3WCdlM.s:717    .text:00000000000001d8 .LVL35
     /tmp/cc3WCdlM.s:788    .text:0000000000000208 .LVL43
     /tmp/cc3WCdlM.s:810    .text:0000000000000214 .LVL44
     /tmp/cc3WCdlM.s:879    .text:0000000000000240 .LVL51
     /tmp/cc3WCdlM.s:901    .text:000000000000024c .LVL52
     /tmp/cc3WCdlM.s:961    .text:0000000000000284 .LVL57
     /tmp/cc3WCdlM.s:983    .text:0000000000000290 .LVL58
     /tmp/cc3WCdlM.s:1036   .text:00000000000002b4 .LVL63
     /tmp/cc3WCdlM.s:1058   .text:00000000000002c0 .LVL64
     /tmp/cc3WCdlM.s:1115   .text:00000000000002f0 .LVL69
     /tmp/cc3WCdlM.s:1137   .text:00000000000002fc .LVL70
     /tmp/cc3WCdlM.s:1270   .text:0000000000000360 .LVL84
     /tmp/cc3WCdlM.s:1325   .text:0000000000000384 .LVL87
     /tmp/cc3WCdlM.s:1443   .text:00000000000003f8 .LVL99
     /tmp/cc3WCdlM.s:1465   .text:0000000000000404 .LVL100
     /tmp/cc3WCdlM.s:1561   .text:0000000000000444 .LVL110
     /tmp/cc3WCdlM.s:1581   .text:0000000000000450 .LVL111
     /tmp/cc3WCdlM.s:1680   .text:0000000000000494 .LVL121
     /tmp/cc3WCdlM.s:1700   .text:00000000000004a0 .LVL122
     /tmp/cc3WCdlM.s:747    .text:00000000000001ec .LVL38
     /tmp/cc3WCdlM.s:752    .text:00000000000001f0 .LVL39
     /tmp/cc3WCdlM.s:840    .text:0000000000000228 .LVL47
     /tmp/cc3WCdlM.s:151    .text:0000000000000090 .LVL5
     /tmp/cc3WCdlM.s:177    .text:00000000000000a4 .LVL7
     /tmp/cc3WCdlM.s:173    .text:00000000000000a0 .LVL6
     /tmp/cc3WCdlM.s:186    .text:00000000000000a8 .LVL8
     /tmp/cc3WCdlM.s:573    .text:0000000000000174 .LVL23
     /tmp/cc3WCdlM.s:696    .text:00000000000001cc .LVL34
     /tmp/cc3WCdlM.s:589    .text:0000000000000180 .LVL24
     /tmp/cc3WCdlM.s:622    .text:0000000000000194 .LVL25
     /tmp/cc3WCdlM.s:628    .text:0000000000000198 .LVL26
     /tmp/cc3WCdlM.s:634    .text:000000000000019c .LVL27
     /tmp/cc3WCdlM.s:640    .text:00000000000001a0 .LVL28
     /tmp/cc3WCdlM.s:655    .text:00000000000001b4 .LVL30
     /tmp/cc3WCdlM.s:689    .text:00000000000001c4 .LVL33
     /tmp/cc3WCdlM.s:663    .text:00000000000001b8 .LVL31
     /tmp/cc3WCdlM.s:673    .text:00000000000001bc .LVL32
     /tmp/cc3WCdlM.s:722    .text:00000000000001dc .LVL36
     /tmp/cc3WCdlM.s:738    .text:00000000000001e8 .LVL37
     /tmp/cc3WCdlM.s:762    .text:00000000000001fc .LVL41
     /tmp/cc3WCdlM.s:772    .text:0000000000000200 .LVL42
     /tmp/cc3WCdlM.s:815    .text:0000000000000218 .LVL45
     /tmp/cc3WCdlM.s:831    .text:0000000000000224 .LVL46
     /tmp/cc3WCdlM.s:853    .text:0000000000000234 .LVL49
     /tmp/cc3WCdlM.s:863    .text:0000000000000238 .LVL50
     /tmp/cc3WCdlM.s:906    .text:0000000000000250 .LVL53
     /tmp/cc3WCdlM.s:922    .text:000000000000025c .LVL54
     /tmp/cc3WCdlM.s:945    .text:000000000000027c .LVL56
     /tmp/cc3WCdlM.s:988    .text:0000000000000294 .LVL59
     /tmp/cc3WCdlM.s:1004   .text:00000000000002a0 .LVL60
     /tmp/cc3WCdlM.s:1020   .text:00000000000002ac .LVL62
     /tmp/cc3WCdlM.s:1063   .text:00000000000002c4 .LVL65
     /tmp/cc3WCdlM.s:1079   .text:00000000000002d0 .LVL66
GAS LISTING /tmp/cc3WCdlM.s 			page 74


     /tmp/cc3WCdlM.s:1099   .text:00000000000002e8 .LVL68
     /tmp/cc3WCdlM.s:1142   .text:0000000000000300 .LVL71
     /tmp/cc3WCdlM.s:1158   .text:000000000000030c .LVL72
     /tmp/cc3WCdlM.s:1179   .text:0000000000000318 .LVL73
     /tmp/cc3WCdlM.s:1185   .text:000000000000031c .LVL74
     /tmp/cc3WCdlM.s:1204   .text:0000000000000334 .LVL77
     /tmp/cc3WCdlM.s:1223   .text:0000000000000340 .LVL79
     /tmp/cc3WCdlM.s:1229   .text:0000000000000348 .LVL80
     /tmp/cc3WCdlM.s:1263   .text:0000000000000358 .LVL83
     /tmp/cc3WCdlM.s:1197   .text:000000000000032c .LVL76
     /tmp/cc3WCdlM.s:1216   .text:000000000000033c .LVL78
     /tmp/cc3WCdlM.s:1237   .text:000000000000034c .LVL81
     /tmp/cc3WCdlM.s:1247   .text:0000000000000350 .LVL82
     /tmp/cc3WCdlM.s:1294   .text:0000000000000370 .LVL85
     /tmp/cc3WCdlM.s:1310   .text:000000000000037c .LVL86
     /tmp/cc3WCdlM.s:1329   .text:0000000000000388 .LVL88
     /tmp/cc3WCdlM.s:1386   .text:00000000000003c8 .LVL94
     /tmp/cc3WCdlM.s:1396   .text:00000000000003d8 .LVL95
     /tmp/cc3WCdlM.s:1339   .text:0000000000000390 .LVL89
     /tmp/cc3WCdlM.s:1353   .text:00000000000003a0 .LVL91
     /tmp/cc3WCdlM.s:1379   .text:00000000000003c4 .LVL93
     /tmp/cc3WCdlM.s:1407   .text:00000000000003dc .LVL96
     /tmp/cc3WCdlM.s:1427   .text:00000000000003f0 .LVL98
     /tmp/cc3WCdlM.s:1470   .text:0000000000000408 .LVL101
     /tmp/cc3WCdlM.s:1486   .text:0000000000000414 .LVL102
     /tmp/cc3WCdlM.s:1501   .text:000000000000041c .LVL103
     /tmp/cc3WCdlM.s:1517   .text:0000000000000428 .LVL105
     /tmp/cc3WCdlM.s:1552   .text:0000000000000438 .LVL108
     /tmp/cc3WCdlM.s:1510   .text:0000000000000420 .LVL104
     /tmp/cc3WCdlM.s:1526   .text:000000000000042c .LVL106
     /tmp/cc3WCdlM.s:1536   .text:0000000000000430 .LVL107
     /tmp/cc3WCdlM.s:1586   .text:0000000000000454 .LVL112
     /tmp/cc3WCdlM.s:1602   .text:0000000000000460 .LVL113
     /tmp/cc3WCdlM.s:1617   .text:0000000000000468 .LVL114
     /tmp/cc3WCdlM.s:1633   .text:0000000000000474 .LVL116
     /tmp/cc3WCdlM.s:1668   .text:0000000000000484 .LVL119
     /tmp/cc3WCdlM.s:1626   .text:000000000000046c .LVL115
     /tmp/cc3WCdlM.s:1642   .text:0000000000000478 .LVL117
     /tmp/cc3WCdlM.s:1652   .text:000000000000047c .LVL118
     /tmp/cc3WCdlM.s:1767   .text:00000000000004d4 .LVL130
     /tmp/cc3WCdlM.s:1777   .text:00000000000004d8 .LVL131
     /tmp/cc3WCdlM.s:436    .text:0000000000000120 .LVL12
     /tmp/cc3WCdlM.s:452    .text:000000000000012c .LVL13
     /tmp/cc3WCdlM.s:469    .text:0000000000000138 .LVL14
     /tmp/cc3WCdlM.s:502    .text:0000000000000158 .LVL19
     /tmp/cc3WCdlM.s:515    .text:000000000000015c .LVL20
     /tmp/cc3WCdlM.s:528    .text:0000000000000160 .LVL21
     /tmp/cc3WCdlM.s:1916   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3WCdlM.s:1331   .text:0000000000000388 .LBB260
     /tmp/cc3WCdlM.s:1368   .text:00000000000003b8 .LBE260
     /tmp/cc3WCdlM.s:1384   .text:00000000000003c8 .LBB269
     /tmp/cc3WCdlM.s:1400   .text:00000000000003d8 .LBE269
     /tmp/cc3WCdlM.s:1344   .text:0000000000000398 .LBE261
     /tmp/cc3WCdlM.s:1387   .text:00000000000003c8 .LBB266
     /tmp/cc3WCdlM.s:1399   .text:00000000000003d8 .LBE266

UNDEFINED SYMBOLS
GAS LISTING /tmp/cc3WCdlM.s 			page 75


_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
console_handler
