GAS LISTING /tmp/ccAtiQjL.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB46:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/Semaphore.hpp"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  14:src/Riscv.cpp **** {
  12              		.loc 1 14 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  15:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 15 5
  21              		.loc 1 15 39 is_stmt 0
  22              	#APP
  23              	# 15 "src/Riscv.cpp" 1
  16              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 30 is_stmt 0
  28              	# 16 "src/Riscv.cpp" 1
  17              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 17 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE46:
  42              		.align	2
GAS LISTING /tmp/ccAtiQjL.s 			page 2


  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB47:
  18:src/Riscv.cpp **** 
  19:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 19 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F2 		addi	sp,sp,-224
  50              		.cfi_def_cfa_offset 224
  51 0024 233C110C 		sd	ra,216(sp)
  52 0028 2338810C 		sd	s0,208(sp)
  53 002c 2334910C 		sd	s1,200(sp)
  54 0030 2330210D 		sd	s2,192(sp)
  55 0034 233C310B 		sd	s3,184(sp)
  56 0038 2338410B 		sd	s4,176(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 1304010E 		addi	s0,sp,224
  64              		.cfi_def_cfa 8, 0
  20:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 20 5
  66              	.LBB120:
  67              	.LBB121:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccAtiQjL.s 			page 3


  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
GAS LISTING /tmp/ccAtiQjL.s 			page 4


  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 95 5
  71              		.loc 2 95 72 is_stmt 0
  72              	#APP
  73              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F2 		sd	a5,-216(s0)
  78              		.loc 2 96 5 is_stmt 1
  79              		.loc 2 96 12 is_stmt 0
  80 0048 833784F2 		ld	a5,-216(s0)
  81              	.LBE121:
  82              	.LBE120:
  83              		.loc 1 20 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  21:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 21 5 is_stmt 1
  22:src/Riscv.cpp **** //    uint64 arg0;
  23:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 24 5
  89              		.loc 1 24 49 is_stmt 0
  90              	#APP
  91              	# 24 "src/Riscv.cpp" 1
  25              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  26:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  95              		.loc 1 26 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB122:
  98              		.loc 1 26 40 is_stmt 0
  99 0054 9B8787FF 		addiw	a5,a5,-8
 100              	.LVL2:
 101              		.loc 1 26 5
 102 0058 13071000 		li	a4,1
 103 005c 6372F702 		bleu	a5,a4,.L23
 104              	.LVL3:
 105              	.L3:
 106              	.LBE122:
  27:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp ****         //call from yield
GAS LISTING /tmp/ccAtiQjL.s 			page 5


  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****         if(a0reg==0x11){
  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp ****             _thread::thread_t *arg1;
  37:src/Riscv.cpp ****             _thread::Body arg2;
  38:src/Riscv.cpp ****             uint64 arg3;
  39:src/Riscv.cpp ****             uint64 *arg4;
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  53:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  54:src/Riscv.cpp ****             *arg1=t;
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp ****             uint64 ret;
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  58:src/Riscv.cpp ****             else ret =-1;
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             //return _thread* adress through a0
  62:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             w_sstatus(sstatus);
  65:src/Riscv.cpp ****             w_sepc(sepc);
  66:src/Riscv.cpp ****         }
  67:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  70:src/Riscv.cpp ****             //kmem_alloc
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //write return value to a0 register
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         else if(a0reg==0x02){
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/ccAtiQjL.s 			page 6


  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             w_sstatus(sstatus);
  89:src/Riscv.cpp ****             w_sepc(sepc);
  90:src/Riscv.cpp ****         }
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****         else if(a0reg==0x12){
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****             _thread::running->finished=true;
  97:src/Riscv.cpp ****             _thread::dispatch();
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             w_sstatus(sstatus);
 100:src/Riscv.cpp ****             w_sepc(sepc);
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         else if(a0reg == 0x13){
 105:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             _thread::dispatch();
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****             w_sstatus(sstatus);
 112:src/Riscv.cpp ****             w_sepc(sepc);
 113:src/Riscv.cpp ****         }
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****         else if(a0reg==0x04){
 116:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 120:src/Riscv.cpp ****             _thread::dispatch();
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             w_sstatus(sstatus);
 123:src/Riscv.cpp ****             w_sepc(sepc);
 124:src/Riscv.cpp ****         }
 125:src/Riscv.cpp ****         else if(a0reg==0x21){
 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****            Semaphore::sem_t *arg1;
 130:src/Riscv.cpp ****            uint64 arg2;
 131:src/Riscv.cpp **** 
 132:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             Semaphore* sem = new Semaphore(arg2);
 139:src/Riscv.cpp ****             *arg1=sem;
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****             uint64 ret=0;
 142:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 143:src/Riscv.cpp ****             else ret=-1;
GAS LISTING /tmp/ccAtiQjL.s 			page 7


 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****             w_sstatus(sstatus);
 148:src/Riscv.cpp ****             w_sepc(sepc);
 149:src/Riscv.cpp ****         }
 150:src/Riscv.cpp ****         else if(a0reg==0x22){
 151:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             Semaphore::sem_t *arg1; //handle
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 160:src/Riscv.cpp **** 
 161:src/Riscv.cpp ****             Semaphore* sem = *arg1;
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 164:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 166:src/Riscv.cpp ****                 t->deblocked=true;
 167:src/Riscv.cpp ****                 sem->val++;
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 169:src/Riscv.cpp ****             }
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****             delete sem;
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp ****             w_sstatus(sstatus);
 174:src/Riscv.cpp ****             w_sepc(sepc);
 175:src/Riscv.cpp ****         }
 176:src/Riscv.cpp ****         else if(a0reg==0x23){
 177:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 179:src/Riscv.cpp **** 
 180:src/Riscv.cpp ****             Semaphore::sem_t arg1; //handle
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp **** //            Semaphore* sem = *arg1;
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****             w_sstatus(sstatus);
 193:src/Riscv.cpp ****             w_sepc(sepc);
 194:src/Riscv.cpp ****         }
 195:src/Riscv.cpp ****         else if(a0reg==0x24){
 196:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp ****             Semaphore::sem_t arg1; //handle
 200:src/Riscv.cpp **** 
GAS LISTING /tmp/ccAtiQjL.s 			page 8


 201:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             arg1->signal();
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****             uint64 ret = 0;
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****             w_sstatus(sstatus);
 213:src/Riscv.cpp ****             w_sepc(sepc);
 214:src/Riscv.cpp ****         }
 215:src/Riscv.cpp **** 
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp ****     }
 219:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 220:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp ****     }
 223:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 224:src/Riscv.cpp ****     {
 225:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****     }
 228:src/Riscv.cpp ****     else{
 229:src/Riscv.cpp ****         // unexpected trap cause
 230:src/Riscv.cpp ****         //print(scause)
 231:src/Riscv.cpp ****         //print(sepc)
 232:src/Riscv.cpp ****         //print(stval) //trap value
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****     }
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp **** }
 107              		.loc 1 236 1
 108 0060 8330810D 		ld	ra,216(sp)
 109              		.cfi_remember_state
 110              		.cfi_restore 1
 111 0064 0334010D 		ld	s0,208(sp)
 112              		.cfi_restore 8
 113              		.cfi_def_cfa 2, 224
 114 0068 8334810C 		ld	s1,200(sp)
 115              		.cfi_restore 9
 116 006c 0339010C 		ld	s2,192(sp)
 117              		.cfi_restore 18
 118 0070 8339810B 		ld	s3,184(sp)
 119              		.cfi_restore 19
 120 0074 033A010B 		ld	s4,176(sp)
 121              		.cfi_restore 20
 122 0078 1301010E 		addi	sp,sp,224
 123              		.cfi_def_cfa_offset 0
 124 007c 67800000 		jr	ra
 125              	.LVL4:
 126              	.L23:
 127              		.cfi_restore_state
GAS LISTING /tmp/ccAtiQjL.s 			page 9


  31:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128              		.loc 1 31 9 is_stmt 1
 129              	.LBB280:
 130              	.LBB123:
 131 0080 93071001 		li	a5,17
 132 0084 6386F408 		beq	s1,a5,.L24
 133              	.L5:
 134              	.LBE123:
 135              	.LBE280:
  67:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 136              		.loc 1 67 9
 137              	.LBB281:
 138              	.LBB133:
 139 0088 93071000 		li	a5,1
 140 008c 6386F40E 		beq	s1,a5,.L25
 141              	.LBE133:
 142              	.LBE281:
  80:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 143              		.loc 1 80 14
 144              	.LBB282:
 145              	.LBB270:
 146              	.LBB134:
 147 0090 93072000 		li	a5,2
 148 0094 6380F412 		beq	s1,a5,.L26
 149              	.LBE134:
 150              	.LBE270:
 151              	.LBE282:
  92:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 152              		.loc 1 92 14
 153              	.LBB283:
 154              	.LBB271:
 155              	.LBB253:
 156              	.LBB135:
 157 0098 93072001 		li	a5,18
 158 009c 6388F414 		beq	s1,a5,.L27
 159              	.LBE135:
 160              	.LBE253:
 161              	.LBE271:
 162              	.LBE283:
 104:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 163              		.loc 1 104 14
 164              	.LBB284:
 165              	.LBB272:
 166              	.LBB254:
 167              	.LBB237:
 168              	.LBB136:
 169 00a0 93073001 		li	a5,19
 170 00a4 6386F418 		beq	s1,a5,.L28
 171              	.LBE136:
 172              	.LBE237:
 173              	.LBE254:
 174              	.LBE272:
 175              	.LBE284:
 115:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 176              		.loc 1 115 14
 177              	.LBB285:
 178              	.LBB273:
GAS LISTING /tmp/ccAtiQjL.s 			page 10


 179              	.LBB255:
 180              	.LBB238:
 181              	.LBB222:
 182              	.LBB137:
 183 00a8 93074000 		li	a5,4
 184 00ac 638AF41A 		beq	s1,a5,.L29
 185              	.LBE137:
 186              	.LBE222:
 187              	.LBE238:
 188              	.LBE255:
 189              	.LBE273:
 190              	.LBE285:
 125:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 191              		.loc 1 125 14
 192              	.LBB286:
 193              	.LBB274:
 194              	.LBB256:
 195              	.LBB239:
 196              	.LBB223:
 197              	.LBB208:
 198              	.LBB138:
 199 00b0 93071002 		li	a5,33
 200 00b4 6384F41E 		beq	s1,a5,.L30
 201              	.LBE138:
 202              	.LBE208:
 203              	.LBE223:
 204              	.LBE239:
 205              	.LBE256:
 206              	.LBE274:
 207              	.LBE286:
 150:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 208              		.loc 1 150 14
 209              	.LBB287:
 210              	.LBB275:
 211              	.LBB257:
 212              	.LBB240:
 213              	.LBB224:
 214              	.LBB209:
 215              	.LBB195:
 216              	.LBB139:
 217 00b8 93072002 		li	a5,34
 218 00bc 6384F424 		beq	s1,a5,.L31
 219              	.LBE139:
 220              	.LBE195:
 221              	.LBE209:
 222              	.LBE224:
 223              	.LBE240:
 224              	.LBE257:
 225              	.LBE275:
 226              	.LBE287:
 176:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 227              		.loc 1 176 14
 228              	.LBB288:
 229              	.LBB276:
 230              	.LBB258:
 231              	.LBB241:
 232              	.LBB225:
GAS LISTING /tmp/ccAtiQjL.s 			page 11


 233              	.LBB210:
 234              	.LBB196:
 235              	.LBB179:
 236              	.LBB140:
 237 00c0 93073002 		li	a5,35
 238 00c4 638CF42C 		beq	s1,a5,.L32
 239              	.LBE140:
 240              	.LBE179:
 241              	.LBE196:
 242              	.LBE210:
 243              	.LBE225:
 244              	.LBE241:
 245              	.LBE258:
 246              	.LBE276:
 247              	.LBE288:
 195:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 248              		.loc 1 195 14
 249              	.LBB289:
 250              	.LBB277:
 251              	.LBB259:
 252              	.LBB242:
 253              	.LBB226:
 254              	.LBB211:
 255              	.LBB197:
 256              	.LBB180:
 257              	.LBB160:
 258              	.LBB141:
 259 00c8 93074002 		li	a5,36
 260 00cc E39AF4F8 		bne	s1,a5,.L3
 261              	.LBB142:
 196:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 262              		.loc 1 196 13
 263              	.LBB143:
 264              	.LBB144:
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 265              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 266              		.loc 2 107 5
 267              		.loc 2 107 64 is_stmt 0
 268              	#APP
 269              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 270              		csrr a5, sepc
 271              	# 0 "" 2
 272              	#NO_APP
 273 00d4 2334F4FC 		sd	a5,-56(s0)
 274              		.loc 2 108 5 is_stmt 1
 275              		.loc 2 108 12 is_stmt 0
GAS LISTING /tmp/ccAtiQjL.s 			page 12


 276 00d8 833484FC 		ld	s1,-56(s0)
 277              	.LVL5:
 278              	.LBE144:
 279              	.LBE143:
 196:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 280              		.loc 1 196 38
 281 00dc 93844400 		addi	s1,s1,4
 282              	.LVL6:
 197:src/Riscv.cpp **** 
 283              		.loc 1 197 13 is_stmt 1
 284              	.LBB145:
 285              	.LBB146:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
GAS LISTING /tmp/ccAtiQjL.s 			page 13


 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 286              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 287              		.loc 2 177 5
 288              		.loc 2 177 76 is_stmt 0
 289              	#APP
 290              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 291              		csrr a5, sstatus
 292              	# 0 "" 2
 293              	#NO_APP
 294 00e4 2330F4FC 		sd	a5,-64(s0)
 295              		.loc 2 178 5 is_stmt 1
 296              		.loc 2 178 12 is_stmt 0
 297 00e8 033904FC 		ld	s2,-64(s0)
 298              	.LVL7:
 299              	.LBE146:
 300              	.LBE145:
 199:src/Riscv.cpp **** 
 301              		.loc 1 199 13 is_stmt 1
 201:src/Riscv.cpp **** 
 302              		.loc 1 201 13
 201:src/Riscv.cpp **** 
 303              		.loc 1 201 48 is_stmt 0
 304              	#APP
 305              	# 201 "src/Riscv.cpp" 1
 203:src/Riscv.cpp **** 
 306              		ld a1, 11*8(fp)
 307              	# 0 "" 2
 308              		.loc 1 203 13 is_stmt 1
 203:src/Riscv.cpp **** 
 309              		.loc 1 203 56 is_stmt 0
 310              	# 203 "src/Riscv.cpp" 1
 311              		mv a0, a1
 312              	# 0 "" 2
GAS LISTING /tmp/ccAtiQjL.s 			page 14


 313              	.LVL8:
 206:src/Riscv.cpp **** 
 314              		.loc 1 206 13 is_stmt 1
 206:src/Riscv.cpp **** 
 315              		.loc 1 206 25 is_stmt 0
 316              	#NO_APP
 317 00f4 97000000 		call	_ZN9Semaphore6signalEv@plt
 317      E7800000 
 318              	.LVL9:
 208:src/Riscv.cpp **** 
 319              		.loc 1 208 13 is_stmt 1
 210:src/Riscv.cpp **** 
 320              		.loc 1 210 13
 210:src/Riscv.cpp **** 
 321              		.loc 1 210 56 is_stmt 0
 322 00fc 93070000 		li	a5,0
 323              	#APP
 324              	# 210 "src/Riscv.cpp" 1
 212:src/Riscv.cpp ****             w_sepc(sepc);
 325              		mv a0, a5
 326              	# 0 "" 2
 327              		.loc 1 212 13 is_stmt 1
 328              	.LVL10:
 329              	#NO_APP
 330              	.LBB147:
 331              	.LBB148:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 332              		.loc 2 183 5
 333              		.loc 2 183 77 is_stmt 0
 334              	#APP
 335              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 336              		csrw sstatus, s2
 337              	# 0 "" 2
 338              	.LVL11:
 339              	#NO_APP
 340              	.LBE148:
 341              	.LBE147:
 213:src/Riscv.cpp ****         }
 342              		.loc 1 213 13 is_stmt 1
 343              	.LBB149:
 344              	.LBB150:
 113:src/../h/Riscv.hpp **** }
 345              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 346              		.loc 2 113 65 is_stmt 0
 347              	#APP
 348              	# 113 "src/../h/Riscv.hpp" 1
 349              		csrw sepc, s1
 350              	# 0 "" 2
 351              	.LVL12:
 352              	#NO_APP
 353              	.LBE150:
GAS LISTING /tmp/ccAtiQjL.s 			page 15


 354              	.LBE149:
 355              	.LBE142:
 356              	.LBE141:
 357              	.LBE160:
 358              	.LBE180:
 359              	.LBE197:
 360              	.LBE211:
 361              	.LBE226:
 362              	.LBE242:
 363              	.LBE259:
 364              	.LBE277:
 219:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 365              		.loc 1 219 10 is_stmt 1
 223:src/Riscv.cpp ****     {
 366              		.loc 1 223 10
 367              	.LBE289:
 368              		.loc 1 236 1 is_stmt 0
 369 010c 6FF05FF5 		j	.L3
 370              	.LVL13:
 371              	.L24:
 372              	.LBB290:
 373              	.LBB278:
 374              	.LBB124:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 375              		.loc 1 32 13 is_stmt 1
 376              	.LBB125:
 377              	.LBB126:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 378              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 379              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 380              		.loc 2 107 64 is_stmt 0
 381              	#APP
 382              	# 107 "src/../h/Riscv.hpp" 1
 383              		csrr a5, sepc
 384              	# 0 "" 2
 385              	#NO_APP
 386 0114 233CF4F2 		sd	a5,-200(s0)
 108:src/../h/Riscv.hpp **** }
 387              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 388              		.loc 2 108 12 is_stmt 0
 389 0118 033984F3 		ld	s2,-200(s0)
 390              	.LBE126:
 391              	.LBE125:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 392              		.loc 1 32 38
 393 011c 13094900 		addi	s2,s2,4
 394              	.LVL14:
  33:src/Riscv.cpp **** 
 395              		.loc 1 33 13 is_stmt 1
 396              	.LBB127:
 397              	.LBB128:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 398              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/ccAtiQjL.s 			page 16


 399              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 400              		.loc 2 177 76 is_stmt 0
 401              	#APP
 402              	# 177 "src/../h/Riscv.hpp" 1
 403              		csrr a5, sstatus
 404              	# 0 "" 2
 405              	#NO_APP
 406 0124 2338F4F2 		sd	a5,-208(s0)
 178:src/../h/Riscv.hpp **** }
 407              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 408              		.loc 2 178 12 is_stmt 0
 409 0128 833904F3 		ld	s3,-208(s0)
 410              	.LVL15:
 411              	.LBE128:
 412              	.LBE127:
  36:src/Riscv.cpp ****             _thread::Body arg2;
 413              		.loc 1 36 13 is_stmt 1
  37:src/Riscv.cpp ****             uint64 arg3;
 414              		.loc 1 37 13
  38:src/Riscv.cpp ****             uint64 *arg4;
 415              		.loc 1 38 13
  39:src/Riscv.cpp **** 
 416              		.loc 1 39 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 417              		.loc 1 41 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 418              		.loc 1 41 48 is_stmt 0
 419              	#APP
 420              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 421              		ld a1, 11*8(fp)
 422              	# 0 "" 2
 423              		.loc 1 42 13 is_stmt 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 424              		.loc 1 42 48 is_stmt 0
 425              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 426              		ld a2, 12*8(fp)
 427              	# 0 "" 2
 428              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 429              		.loc 1 43 48 is_stmt 0
 430              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 431              		ld a3, 13*8(fp)
 432              	# 0 "" 2
 433              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp **** 
 434              		.loc 1 44 48 is_stmt 0
 435              	# 44 "src/Riscv.cpp" 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 436              		ld a4, 14*8(fp)
 437              	# 0 "" 2
 438              		.loc 1 47 13 is_stmt 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
GAS LISTING /tmp/ccAtiQjL.s 			page 17


 439              		.loc 1 47 56 is_stmt 0
 440              	# 47 "src/Riscv.cpp" 1
 441              		mv s4, a1
 442              	# 0 "" 2
 443              	.LVL16:
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 444              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 445              		.loc 1 48 56 is_stmt 0
 446              	# 48 "src/Riscv.cpp" 1
 447              		mv a0, a2
 448              	# 0 "" 2
 449              	.LVL17:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 450              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 451              		.loc 1 49 56 is_stmt 0
 452              	# 49 "src/Riscv.cpp" 1
 453              		mv a1, a3
 454              	# 0 "" 2
 455              	.LVL18:
  50:src/Riscv.cpp **** 
 456              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp **** 
 457              		.loc 1 50 56 is_stmt 0
 458              	# 50 "src/Riscv.cpp" 1
 459              		mv a2, a4
 460              	# 0 "" 2
 461              	.LVL19:
  53:src/Riscv.cpp ****             *arg1=t;
 462              		.loc 1 53 13 is_stmt 1
  53:src/Riscv.cpp ****             *arg1=t;
 463              		.loc 1 53 47 is_stmt 0
 464              	#NO_APP
 465 014c 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 465      E7800000 
 466              	.LVL20:
  54:src/Riscv.cpp **** 
 467              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp **** 
 468              		.loc 1 54 18 is_stmt 0
 469 0154 2330AA00 		sd	a0,0(s4)
  56:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 470              		.loc 1 56 13 is_stmt 1
  57:src/Riscv.cpp ****             else ret =-1;
 471              		.loc 1 57 13
 472 0158 630C0500 		beqz	a0,.L20
  57:src/Riscv.cpp ****             else ret =-1;
 473              		.loc 1 57 31 is_stmt 0
 474 015c 93070000 		li	a5,0
 475              	.L6:
 476              	.LVL21:
  62:src/Riscv.cpp **** 
 477              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 478              		.loc 1 62 56 is_stmt 0
 479              	#APP
GAS LISTING /tmp/ccAtiQjL.s 			page 18


 480              	# 62 "src/Riscv.cpp" 1
  64:src/Riscv.cpp ****             w_sepc(sepc);
 481              		mv a0, a5
 482              	# 0 "" 2
 483              		.loc 1 64 13 is_stmt 1
 484              	.LVL22:
 485              	#NO_APP
 486              	.LBB129:
 487              	.LBB130:
 183:src/../h/Riscv.hpp **** }
 488              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 489              		.loc 2 183 77 is_stmt 0
 490              	#APP
 491              	# 183 "src/../h/Riscv.hpp" 1
 492              		csrw sstatus, s3
 493              	# 0 "" 2
 494              	.LVL23:
 495              	#NO_APP
 496              	.LBE130:
 497              	.LBE129:
  65:src/Riscv.cpp ****         }
 498              		.loc 1 65 13 is_stmt 1
 499              	.LBB131:
 500              	.LBB132:
 113:src/../h/Riscv.hpp **** }
 501              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 502              		.loc 2 113 65 is_stmt 0
 503              	#APP
 504              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 505              		csrw sepc, s2
 506              	# 0 "" 2
 507              		.loc 2 114 1
 508              	#NO_APP
 509 016c 6FF0DFF1 		j	.L5
 510              	.LVL24:
 511              	.L20:
 512              	.LBE132:
 513              	.LBE131:
  58:src/Riscv.cpp **** 
 514              		.loc 1 58 22
 515 0170 9307F0FF 		li	a5,-1
 516 0174 6FF0DFFE 		j	.L6
 517              	.LVL25:
 518              	.L25:
 519              	.LBE124:
 520              	.LBE278:
 521              	.LBB279:
 522              	.LBB260:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 523              		.loc 1 68 13 is_stmt 1
 524              	.LBB261:
 525              	.LBB262:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 526              		.loc 2 106 5
GAS LISTING /tmp/ccAtiQjL.s 			page 19


 107:src/../h/Riscv.hpp ****     return sepc;
 527              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 528              		.loc 2 107 64 is_stmt 0
 529              	#APP
 530              	# 107 "src/../h/Riscv.hpp" 1
 531              		csrr a5, sepc
 532              	# 0 "" 2
 533              	#NO_APP
 534 017c 2334F4F4 		sd	a5,-184(s0)
 108:src/../h/Riscv.hpp **** }
 535              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 536              		.loc 2 108 12 is_stmt 0
 537 0180 833484F4 		ld	s1,-184(s0)
 538              	.LVL26:
 539              	.LBE262:
 540              	.LBE261:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 541              		.loc 1 68 38
 542 0184 93844400 		addi	s1,s1,4
 543              	.LVL27:
  69:src/Riscv.cpp ****             //kmem_alloc
 544              		.loc 1 69 13 is_stmt 1
 545              	.LBB263:
 546              	.LBB264:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 547              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 548              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 549              		.loc 2 177 76 is_stmt 0
 550              	#APP
 551              	# 177 "src/../h/Riscv.hpp" 1
 552              		csrr a5, sstatus
 553              	# 0 "" 2
 554              	#NO_APP
 555 018c 2330F4F4 		sd	a5,-192(s0)
 178:src/../h/Riscv.hpp **** }
 556              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 557              		.loc 2 178 12 is_stmt 0
 558 0190 033904F4 		ld	s2,-192(s0)
 559              	.LVL28:
 560              	.LBE264:
 561              	.LBE263:
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 562              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 563              		.loc 1 71 56 is_stmt 0
 564              	#APP
 565              	# 71 "src/Riscv.cpp" 1
 566              		mv a0, a1
 567              	# 0 "" 2
 568              	.LVL29:
  72:src/Riscv.cpp **** 
 569              		.loc 1 72 13 is_stmt 1
GAS LISTING /tmp/ccAtiQjL.s 			page 20


  72:src/Riscv.cpp **** 
 570              		.loc 1 72 61 is_stmt 0
 571              	#NO_APP
 572 0198 13156500 		slli	a0,a0,6
 573              	.LVL30:
 574 019c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 574      E7800000 
 575              	.LVL31:
  75:src/Riscv.cpp **** 
 576              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 577              		.loc 1 75 56 is_stmt 0
 578              	#APP
 579              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 580              		mv a0, a0
 581              	# 0 "" 2
 582              		.loc 1 77 13 is_stmt 1
 583              	.LVL32:
 584              	#NO_APP
 585              	.LBB265:
 586              	.LBB266:
 183:src/../h/Riscv.hpp **** }
 587              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 588              		.loc 2 183 77 is_stmt 0
 589              	#APP
 590              	# 183 "src/../h/Riscv.hpp" 1
 591              		csrw sstatus, s2
 592              	# 0 "" 2
 593              	.LVL33:
 594              	#NO_APP
 595              	.LBE266:
 596              	.LBE265:
  78:src/Riscv.cpp ****         }
 597              		.loc 1 78 13 is_stmt 1
 598              	.LBB267:
 599              	.LBB268:
 113:src/../h/Riscv.hpp **** }
 600              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 601              		.loc 2 113 65 is_stmt 0
 602              	#APP
 603              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 604              		csrw sepc, s1
 605              	# 0 "" 2
 606              		.loc 2 114 1
 607              	#NO_APP
 608 01b0 6FF01FEB 		j	.L3
 609              	.LVL34:
 610              	.L26:
 611              	.LBE268:
 612              	.LBE267:
 613              	.LBE260:
 614              	.LBB269:
 615              	.LBB243:
GAS LISTING /tmp/ccAtiQjL.s 			page 21


  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 616              		.loc 1 81 13 is_stmt 1
 617              	.LBB244:
 618              	.LBB245:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 619              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 620              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 621              		.loc 2 107 64 is_stmt 0
 622              	#APP
 623              	# 107 "src/../h/Riscv.hpp" 1
 624              		csrr a5, sepc
 625              	# 0 "" 2
 626              	#NO_APP
 627 01b8 233CF4F4 		sd	a5,-168(s0)
 108:src/../h/Riscv.hpp **** }
 628              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 629              		.loc 2 108 12 is_stmt 0
 630 01bc 833484F5 		ld	s1,-168(s0)
 631              	.LVL35:
 632              	.LBE245:
 633              	.LBE244:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 634              		.loc 1 81 38
 635 01c0 93844400 		addi	s1,s1,4
 636              	.LVL36:
  82:src/Riscv.cpp **** 
 637              		.loc 1 82 13 is_stmt 1
 638              	.LBB246:
 639              	.LBB247:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 640              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 641              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 642              		.loc 2 177 76 is_stmt 0
 643              	#APP
 644              	# 177 "src/../h/Riscv.hpp" 1
 645              		csrr a5, sstatus
 646              	# 0 "" 2
 647              	#NO_APP
 648 01c8 2338F4F4 		sd	a5,-176(s0)
 178:src/../h/Riscv.hpp **** }
 649              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 650              		.loc 2 178 12 is_stmt 0
 651 01cc 033904F5 		ld	s2,-176(s0)
 652              	.LVL37:
 653              	.LBE247:
 654              	.LBE246:
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 655              		.loc 1 84 13 is_stmt 1
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 656              		.loc 1 84 56 is_stmt 0
 657              	#APP
GAS LISTING /tmp/ccAtiQjL.s 			page 22


 658              	# 84 "src/Riscv.cpp" 1
 659              		mv a0, a1
 660              	# 0 "" 2
 661              	.LVL38:
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 662              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 663              		.loc 1 85 49 is_stmt 0
 664              	#NO_APP
 665 01d4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 665      E7800000 
 666              	.LVL39:
  86:src/Riscv.cpp **** 
 667              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 668              		.loc 1 86 56 is_stmt 0
 669              	#APP
 670              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             w_sepc(sepc);
 671              		mv a0, a0
 672              	# 0 "" 2
 673              		.loc 1 88 13 is_stmt 1
 674              	.LVL40:
 675              	#NO_APP
 676              	.LBB248:
 677              	.LBB249:
 183:src/../h/Riscv.hpp **** }
 678              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 679              		.loc 2 183 77 is_stmt 0
 680              	#APP
 681              	# 183 "src/../h/Riscv.hpp" 1
 682              		csrw sstatus, s2
 683              	# 0 "" 2
 684              	.LVL41:
 685              	#NO_APP
 686              	.LBE249:
 687              	.LBE248:
  89:src/Riscv.cpp ****         }
 688              		.loc 1 89 13 is_stmt 1
 689              	.LBB250:
 690              	.LBB251:
 113:src/../h/Riscv.hpp **** }
 691              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 692              		.loc 2 113 65 is_stmt 0
 693              	#APP
 694              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 695              		csrw sepc, s1
 696              	# 0 "" 2
 697              		.loc 2 114 1
 698              	#NO_APP
 699 01e8 6FF09FE7 		j	.L3
 700              	.LVL42:
 701              	.L27:
 702              	.LBE251:
GAS LISTING /tmp/ccAtiQjL.s 			page 23


 703              	.LBE250:
 704              	.LBE243:
 705              	.LBB252:
 706              	.LBB227:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 707              		.loc 1 93 13 is_stmt 1
 708              	.LBB228:
 709              	.LBB229:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 710              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 711              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 712              		.loc 2 107 64 is_stmt 0
 713              	#APP
 714              	# 107 "src/../h/Riscv.hpp" 1
 715              		csrr a5, sepc
 716              	# 0 "" 2
 717              	#NO_APP
 718 01f0 2334F4F6 		sd	a5,-152(s0)
 108:src/../h/Riscv.hpp **** }
 719              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 720              		.loc 2 108 12 is_stmt 0
 721 01f4 833484F6 		ld	s1,-152(s0)
 722              	.LVL43:
 723              	.LBE229:
 724              	.LBE228:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 725              		.loc 1 93 38
 726 01f8 93844400 		addi	s1,s1,4
 727              	.LVL44:
  94:src/Riscv.cpp **** 
 728              		.loc 1 94 13 is_stmt 1
 729              	.LBB230:
 730              	.LBB231:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 731              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 732              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 733              		.loc 2 177 76 is_stmt 0
 734              	#APP
 735              	# 177 "src/../h/Riscv.hpp" 1
 736              		csrr a5, sstatus
 737              	# 0 "" 2
 738              	#NO_APP
 739 0200 2330F4F6 		sd	a5,-160(s0)
 178:src/../h/Riscv.hpp **** }
 740              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 741              		.loc 2 178 12 is_stmt 0
 742 0204 033904F6 		ld	s2,-160(s0)
 743              	.LVL45:
 744              	.LBE231:
 745              	.LBE230:
  96:src/Riscv.cpp ****             _thread::dispatch();
GAS LISTING /tmp/ccAtiQjL.s 			page 24


 746              		.loc 1 96 13 is_stmt 1
  96:src/Riscv.cpp ****             _thread::dispatch();
 747              		.loc 1 96 31 is_stmt 0
 748 0208 97070000 		la	a5,_ZN7_thread7runningE
 748      83B70700 
 749 0210 83B70700 		ld	a5,0(a5)
  96:src/Riscv.cpp ****             _thread::dispatch();
 750              		.loc 1 96 39
 751 0214 13071000 		li	a4,1
 752 0218 2384E702 		sb	a4,40(a5)
  97:src/Riscv.cpp **** 
 753              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp **** 
 754              		.loc 1 97 30 is_stmt 0
 755 021c 97000000 		call	_ZN7_thread8dispatchEv@plt
 755      E7800000 
 756              	.LVL46:
  99:src/Riscv.cpp ****             w_sepc(sepc);
 757              		.loc 1 99 13 is_stmt 1
 758              	.LBB232:
 759              	.LBB233:
 183:src/../h/Riscv.hpp **** }
 760              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 761              		.loc 2 183 77 is_stmt 0
 762              	#APP
 763              	# 183 "src/../h/Riscv.hpp" 1
 764              		csrw sstatus, s2
 765              	# 0 "" 2
 766              	.LVL47:
 767              	#NO_APP
 768              	.LBE233:
 769              	.LBE232:
 100:src/Riscv.cpp **** 
 770              		.loc 1 100 13 is_stmt 1
 771              	.LBB234:
 772              	.LBB235:
 113:src/../h/Riscv.hpp **** }
 773              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 774              		.loc 2 113 65 is_stmt 0
 775              	#APP
 776              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 777              		csrw sepc, s1
 778              	# 0 "" 2
 779              		.loc 2 114 1
 780              	#NO_APP
 781 022c 6FF05FE3 		j	.L3
 782              	.LVL48:
 783              	.L28:
 784              	.LBE235:
 785              	.LBE234:
 786              	.LBE227:
 787              	.LBB236:
 788              	.LBB212:
 105:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccAtiQjL.s 			page 25


 789              		.loc 1 105 13 is_stmt 1
 790              	.LBB213:
 791              	.LBB214:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 792              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 793              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 794              		.loc 2 107 64 is_stmt 0
 795              	#APP
 796              	# 107 "src/../h/Riscv.hpp" 1
 797              		csrr a5, sepc
 798              	# 0 "" 2
 799              	#NO_APP
 800 0234 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/Riscv.hpp **** }
 801              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 802              		.loc 2 108 12 is_stmt 0
 803 0238 833484F7 		ld	s1,-136(s0)
 804              	.LVL49:
 805              	.LBE214:
 806              	.LBE213:
 105:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 807              		.loc 1 105 38
 808 023c 93844400 		addi	s1,s1,4
 809              	.LVL50:
 106:src/Riscv.cpp **** 
 810              		.loc 1 106 13 is_stmt 1
 811              	.LBB215:
 812              	.LBB216:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 813              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 814              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 815              		.loc 2 177 76 is_stmt 0
 816              	#APP
 817              	# 177 "src/../h/Riscv.hpp" 1
 818              		csrr a5, sstatus
 819              	# 0 "" 2
 820              	#NO_APP
 821 0244 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/Riscv.hpp **** }
 822              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 823              		.loc 2 178 12 is_stmt 0
 824 0248 033904F7 		ld	s2,-144(s0)
 825              	.LVL51:
 826              	.LBE216:
 827              	.LBE215:
 109:src/Riscv.cpp **** 
 828              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp **** 
 829              		.loc 1 109 30 is_stmt 0
 830 024c 97000000 		call	_ZN7_thread8dispatchEv@plt
 830      E7800000 
GAS LISTING /tmp/ccAtiQjL.s 			page 26


 831              	.LVL52:
 111:src/Riscv.cpp ****             w_sepc(sepc);
 832              		.loc 1 111 13 is_stmt 1
 833              	.LBB217:
 834              	.LBB218:
 183:src/../h/Riscv.hpp **** }
 835              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 836              		.loc 2 183 77 is_stmt 0
 837              	#APP
 838              	# 183 "src/../h/Riscv.hpp" 1
 839              		csrw sstatus, s2
 840              	# 0 "" 2
 841              	.LVL53:
 842              	#NO_APP
 843              	.LBE218:
 844              	.LBE217:
 112:src/Riscv.cpp ****         }
 845              		.loc 1 112 13 is_stmt 1
 846              	.LBB219:
 847              	.LBB220:
 113:src/../h/Riscv.hpp **** }
 848              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 849              		.loc 2 113 65 is_stmt 0
 850              	#APP
 851              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 852              		csrw sepc, s1
 853              	# 0 "" 2
 854              		.loc 2 114 1
 855              	#NO_APP
 856 025c 6FF05FE0 		j	.L3
 857              	.LVL54:
 858              	.L29:
 859              	.LBE220:
 860              	.LBE219:
 861              	.LBE212:
 862              	.LBB221:
 863              	.LBB198:
 116:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 864              		.loc 1 116 13 is_stmt 1
 865              	.LBB199:
 866              	.LBB200:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 867              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 868              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 869              		.loc 2 107 64 is_stmt 0
 870              	#APP
 871              	# 107 "src/../h/Riscv.hpp" 1
 872              		csrr a5, sepc
 873              	# 0 "" 2
 874              	#NO_APP
 875 0264 2334F4F8 		sd	a5,-120(s0)
 108:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccAtiQjL.s 			page 27


 876              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 877              		.loc 2 108 12 is_stmt 0
 878 0268 833484F8 		ld	s1,-120(s0)
 879              	.LVL55:
 880              	.LBE200:
 881              	.LBE199:
 116:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 882              		.loc 1 116 38
 883 026c 93844400 		addi	s1,s1,4
 884              	.LVL56:
 117:src/Riscv.cpp **** 
 885              		.loc 1 117 13 is_stmt 1
 886              	.LBB201:
 887              	.LBB202:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 888              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 889              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 890              		.loc 2 177 76 is_stmt 0
 891              	#APP
 892              	# 177 "src/../h/Riscv.hpp" 1
 893              		csrr a5, sstatus
 894              	# 0 "" 2
 895              	#NO_APP
 896 0274 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/Riscv.hpp **** }
 897              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 898              		.loc 2 178 12 is_stmt 0
 899 0278 033904F8 		ld	s2,-128(s0)
 900              	.LVL57:
 901              	.LBE202:
 902              	.LBE201:
 119:src/Riscv.cpp ****             _thread::dispatch();
 903              		.loc 1 119 13 is_stmt 1
 119:src/Riscv.cpp ****             _thread::dispatch();
 904              		.loc 1 119 39 is_stmt 0
 905 027c 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 905      83B70700 
 906 0284 23B00700 		sd	zero,0(a5)
 120:src/Riscv.cpp **** 
 907              		.loc 1 120 13 is_stmt 1
 120:src/Riscv.cpp **** 
 908              		.loc 1 120 30 is_stmt 0
 909 0288 97000000 		call	_ZN7_thread8dispatchEv@plt
 909      E7800000 
 910              	.LVL58:
 122:src/Riscv.cpp ****             w_sepc(sepc);
 911              		.loc 1 122 13 is_stmt 1
 912              	.LBB203:
 913              	.LBB204:
 183:src/../h/Riscv.hpp **** }
 914              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 915              		.loc 2 183 77 is_stmt 0
GAS LISTING /tmp/ccAtiQjL.s 			page 28


 916              	#APP
 917              	# 183 "src/../h/Riscv.hpp" 1
 918              		csrw sstatus, s2
 919              	# 0 "" 2
 920              	.LVL59:
 921              	#NO_APP
 922              	.LBE204:
 923              	.LBE203:
 123:src/Riscv.cpp ****         }
 924              		.loc 1 123 13 is_stmt 1
 925              	.LBB205:
 926              	.LBB206:
 113:src/../h/Riscv.hpp **** }
 927              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 928              		.loc 2 113 65 is_stmt 0
 929              	#APP
 930              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 931              		csrw sepc, s1
 932              	# 0 "" 2
 933              		.loc 2 114 1
 934              	#NO_APP
 935 0298 6FF09FDC 		j	.L3
 936              	.LVL60:
 937              	.L30:
 938              	.LBE206:
 939              	.LBE205:
 940              	.LBE198:
 941              	.LBB207:
 942              	.LBB181:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 943              		.loc 1 126 13 is_stmt 1
 944              	.LBB182:
 945              	.LBB183:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 946              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 947              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 948              		.loc 2 107 64 is_stmt 0
 949              	#APP
 950              	# 107 "src/../h/Riscv.hpp" 1
 951              		csrr a5, sepc
 952              	# 0 "" 2
 953              	#NO_APP
 954 02a0 233CF4F8 		sd	a5,-104(s0)
 108:src/../h/Riscv.hpp **** }
 955              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 956              		.loc 2 108 12 is_stmt 0
 957 02a4 833484F9 		ld	s1,-104(s0)
 958              	.LVL61:
 959              	.LBE183:
 960              	.LBE182:
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 961              		.loc 1 126 38
GAS LISTING /tmp/ccAtiQjL.s 			page 29


 962 02a8 93844400 		addi	s1,s1,4
 963              	.LVL62:
 127:src/Riscv.cpp **** 
 964              		.loc 1 127 13 is_stmt 1
 965              	.LBB184:
 966              	.LBB185:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 967              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 968              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 969              		.loc 2 177 76 is_stmt 0
 970              	#APP
 971              	# 177 "src/../h/Riscv.hpp" 1
 972              		csrr a5, sstatus
 973              	# 0 "" 2
 974              	#NO_APP
 975 02b0 2338F4F8 		sd	a5,-112(s0)
 178:src/../h/Riscv.hpp **** }
 976              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 977              		.loc 2 178 12 is_stmt 0
 978 02b4 033904F9 		ld	s2,-112(s0)
 979              	.LVL63:
 980              	.LBE185:
 981              	.LBE184:
 129:src/Riscv.cpp ****            uint64 arg2;
 982              		.loc 1 129 12 is_stmt 1
 130:src/Riscv.cpp **** 
 983              		.loc 1 130 12
 132:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 984              		.loc 1 132 13
 132:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 985              		.loc 1 132 48 is_stmt 0
 986              	#APP
 987              	# 132 "src/Riscv.cpp" 1
 133:src/Riscv.cpp **** 
 988              		ld a1, 11*8(fp)
 989              	# 0 "" 2
 990              		.loc 1 133 13 is_stmt 1
 133:src/Riscv.cpp **** 
 991              		.loc 1 133 48 is_stmt 0
 992              	# 133 "src/Riscv.cpp" 1
 135:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 993              		ld a2, 12*8(fp)
 994              	# 0 "" 2
 995              		.loc 1 135 13 is_stmt 1
 135:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 996              		.loc 1 135 56 is_stmt 0
 997              	# 135 "src/Riscv.cpp" 1
 998              		mv s3, a1
 999              	# 0 "" 2
 1000              	.LVL64:
 136:src/Riscv.cpp **** 
 1001              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp **** 
 1002              		.loc 1 136 56 is_stmt 0
GAS LISTING /tmp/ccAtiQjL.s 			page 30


 1003              	# 136 "src/Riscv.cpp" 1
 1004              		mv s4, a2
 1005              	# 0 "" 2
 1006              	.LVL65:
 138:src/Riscv.cpp ****             *arg1=sem;
 1007              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp ****             *arg1=sem;
 1008              		.loc 1 138 48 is_stmt 0
 1009              	#NO_APP
 1010 02c8 13058001 		li	a0,24
 1011 02cc 97000000 		call	_ZN9SemaphorenwEm@plt
 1011      E7800000 
 1012              	.LVL66:
 1013              	.LBB186:
 1014              	.LBB187:
 1015              		.file 3 "src/../h/Semaphore.hpp"
   1:src/../h/Semaphore.hpp **** //
   2:src/../h/Semaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/Semaphore.hpp **** //
   4:src/../h/Semaphore.hpp **** 
   5:src/../h/Semaphore.hpp **** #ifndef PROJECT_BASE_V1_1_SEMAPHORE_HPP
   6:src/../h/Semaphore.hpp **** #define PROJECT_BASE_V1_1_SEMAPHORE_HPP
   7:src/../h/Semaphore.hpp **** 
   8:src/../h/Semaphore.hpp **** 
   9:src/../h/Semaphore.hpp **** #include "_thread.hpp"
  10:src/../h/Semaphore.hpp **** #include "List.hpp"
  11:src/../h/Semaphore.hpp **** 
  12:src/../h/Semaphore.hpp **** class Semaphore {
  13:src/../h/Semaphore.hpp **** public:
  14:src/../h/Semaphore.hpp ****     Semaphore(uint64 init=1):val(init){}
 1016              		.loc 3 14 38
 1017 02d4 23204501 		sw	s4,0(a0)
 1018              	.LVL67:
 1019              	.LBB188:
 1020              	.LBB189:
 1021              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
GAS LISTING /tmp/ccAtiQjL.s 			page 31


  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1022              		.loc 4 26 29
 1023 02d8 23340500 		sd	zero,8(a0)
 1024 02dc 23380500 		sd	zero,16(a0)
 1025              	.LVL68:
 1026              	.LBE189:
 1027              	.LBE188:
 1028              	.LBE187:
 1029              	.LBE186:
 139:src/Riscv.cpp **** 
 1030              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp **** 
 1031              		.loc 1 139 18 is_stmt 0
 1032 02e0 23B0A900 		sd	a0,0(s3)
 141:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1033              		.loc 1 141 13 is_stmt 1
 1034              	.LVL69:
 142:src/Riscv.cpp ****             else ret=-1;
 1035              		.loc 1 142 13
 1036 02e4 630C0500 		beqz	a0,.L21
 142:src/Riscv.cpp ****             else ret=-1;
 1037              		.loc 1 142 33 is_stmt 0
 1038 02e8 93070000 		li	a5,0
 1039              	.L13:
 1040              	.LVL70:
 145:src/Riscv.cpp **** 
 1041              		.loc 1 145 13 is_stmt 1
 145:src/Riscv.cpp **** 
 1042              		.loc 1 145 56 is_stmt 0
 1043              	#APP
 1044              	# 145 "src/Riscv.cpp" 1
 147:src/Riscv.cpp ****             w_sepc(sepc);
 1045              		mv a0, a5
 1046              	# 0 "" 2
 1047              		.loc 1 147 13 is_stmt 1
 1048              	.LVL71:
 1049              	#NO_APP
 1050              	.LBB190:
 1051              	.LBB191:
 183:src/../h/Riscv.hpp **** }
 1052              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1053              		.loc 2 183 77 is_stmt 0
 1054              	#APP
 1055              	# 183 "src/../h/Riscv.hpp" 1
 1056              		csrw sstatus, s2
 1057              	# 0 "" 2
 1058              	.LVL72:
 1059              	#NO_APP
 1060              	.LBE191:
 1061              	.LBE190:
 148:src/Riscv.cpp ****         }
 1062              		.loc 1 148 13 is_stmt 1
GAS LISTING /tmp/ccAtiQjL.s 			page 32


 1063              	.LBB192:
 1064              	.LBB193:
 113:src/../h/Riscv.hpp **** }
 1065              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1066              		.loc 2 113 65 is_stmt 0
 1067              	#APP
 1068              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1069              		csrw sepc, s1
 1070              	# 0 "" 2
 1071              		.loc 2 114 1
 1072              	#NO_APP
 1073 02f8 6FF09FD6 		j	.L3
 1074              	.LVL73:
 1075              	.L21:
 1076              	.LBE193:
 1077              	.LBE192:
 143:src/Riscv.cpp **** 
 1078              		.loc 1 143 21
 1079 02fc 9307F0FF 		li	a5,-1
 1080 0300 6FF0DFFE 		j	.L13
 1081              	.LVL74:
 1082              	.L31:
 1083              	.LBE181:
 1084              	.LBB194:
 1085              	.LBB161:
 151:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1086              		.loc 1 151 13 is_stmt 1
 1087              	.LBB162:
 1088              	.LBB163:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1089              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1090              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1091              		.loc 2 107 64 is_stmt 0
 1092              	#APP
 1093              	# 107 "src/../h/Riscv.hpp" 1
 1094              		csrr a5, sepc
 1095              	# 0 "" 2
 1096              	#NO_APP
 1097 0308 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/Riscv.hpp **** }
 1098              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1099              		.loc 2 108 12 is_stmt 0
 1100 030c 833984FA 		ld	s3,-88(s0)
 1101              	.LBE163:
 1102              	.LBE162:
 151:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1103              		.loc 1 151 38
 1104 0310 93894900 		addi	s3,s3,4
 1105              	.LVL75:
 152:src/Riscv.cpp **** 
 1106              		.loc 1 152 13 is_stmt 1
 1107              	.LBB164:
GAS LISTING /tmp/ccAtiQjL.s 			page 33


 1108              	.LBB165:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1109              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1110              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1111              		.loc 2 177 76 is_stmt 0
 1112              	#APP
 1113              	# 177 "src/../h/Riscv.hpp" 1
 1114              		csrr a5, sstatus
 1115              	# 0 "" 2
 1116              	#NO_APP
 1117 0318 2330F4FA 		sd	a5,-96(s0)
 178:src/../h/Riscv.hpp **** }
 1118              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1119              		.loc 2 178 12 is_stmt 0
 1120 031c 033A04FA 		ld	s4,-96(s0)
 1121              	.LVL76:
 1122              	.LBE165:
 1123              	.LBE164:
 154:src/Riscv.cpp **** 
 1124              		.loc 1 154 13 is_stmt 1
 157:src/Riscv.cpp **** 
 1125              		.loc 1 157 13
 157:src/Riscv.cpp **** 
 1126              		.loc 1 157 48 is_stmt 0
 1127              	#APP
 1128              	# 157 "src/Riscv.cpp" 1
 159:src/Riscv.cpp **** 
 1129              		ld a1, 11*8(fp)
 1130              	# 0 "" 2
 1131              		.loc 1 159 13 is_stmt 1
 159:src/Riscv.cpp **** 
 1132              		.loc 1 159 56 is_stmt 0
 1133              	# 159 "src/Riscv.cpp" 1
 1134              		mv a5, a1
 1135              	# 0 "" 2
 1136              	.LVL77:
 161:src/Riscv.cpp **** 
 1137              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp **** 
 1138              		.loc 1 161 24 is_stmt 0
 1139              	#NO_APP
 1140 0328 83B40700 		ld	s1,0(a5)
 1141              	.LVL78:
 1142 032c 6F000003 		j	.L17
 1143              	.LVL79:
 1144              	.L16:
 1145              	.LBB166:
 1146              	.LBB167:
 1147              	.LBB168:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
GAS LISTING /tmp/ccAtiQjL.s 			page 34


  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1148              		.loc 4 72 12
 1149 0330 03390500 		ld	s2,0(a0)
 1150              	.LVL80:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1151              		.loc 4 73 35
 1152 0334 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1152      E7800000 
 1153              	.LVL81:
 1154              	.LBE168:
 1155              	.LBE167:
 166:src/Riscv.cpp ****                 sem->val++;
 1156              		.loc 1 166 17 is_stmt 1
 166:src/Riscv.cpp ****                 sem->val++;
 1157              		.loc 1 166 29 is_stmt 0
 1158 033c 93071000 		li	a5,1
 1159 0340 230CF902 		sb	a5,56(s2)
GAS LISTING /tmp/ccAtiQjL.s 			page 35


 167:src/Riscv.cpp ****                 Scheduler::put(t);
 1160              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 Scheduler::put(t);
 1161              		.loc 1 167 22 is_stmt 0
 1162 0344 83A70400 		lw	a5,0(s1)
 167:src/Riscv.cpp ****                 Scheduler::put(t);
 1163              		.loc 1 167 25
 1164 0348 9B871700 		addiw	a5,a5,1
 1165 034c 23A0F400 		sw	a5,0(s1)
 168:src/Riscv.cpp ****             }
 1166              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****             }
 1167              		.loc 1 168 31 is_stmt 0
 1168 0350 13050900 		mv	a0,s2
 1169 0354 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1169      E7800000 
 1170              	.LVL82:
 1171              	.L17:
 1172              	.LBE166:
 164:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1173              		.loc 1 164 13 is_stmt 1
 164:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1174              		.loc 1 164 43
 1175              	.LBB171:
 1176              	.LBB172:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1177              		.loc 4 79 14 is_stmt 0
 1178 035c 03B58400 		ld	a0,8(s1)
 1179              		.loc 4 79 9
 1180 0360 63000502 		beqz	a0,.L15
  80:src/../h/List.hpp ****         return head->data;
 1181              		.loc 4 80 22
 1182 0364 83370500 		ld	a5,0(a0)
 1183              	.LVL83:
 1184              	.LBE172:
 1185              	.LBE171:
 164:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1186              		.loc 1 164 43
 1187 0368 638C0700 		beqz	a5,.L15
 1188              	.LBB173:
 165:src/Riscv.cpp ****                 t->deblocked=true;
 1189              		.loc 1 165 17 is_stmt 1
 1190              	.LVL84:
 1191              	.LBB170:
 1192              	.LBB169:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1193              		.loc 4 69 22 is_stmt 0
 1194 036c 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1195              		.loc 4 69 9
 1196 0370 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
GAS LISTING /tmp/ccAtiQjL.s 			page 36


 1197              		.loc 4 70 9
 1198 0374 E39E07FA 		bnez	a5,.L16
  70:src/../h/List.hpp **** 
 1199              		.loc 4 70 22
 1200 0378 23B80400 		sd	zero,16(s1)
 1201 037c 6FF05FFB 		j	.L16
 1202              	.LVL85:
 1203              	.L15:
 1204              	.LBE169:
 1205              	.LBE170:
 1206              	.LBE173:
 171:src/Riscv.cpp **** 
 1207              		.loc 1 171 13 is_stmt 1
 171:src/Riscv.cpp **** 
 1208              		.loc 1 171 23 is_stmt 0
 1209 0380 63880400 		beqz	s1,.L18
 171:src/Riscv.cpp **** 
 1210              		.loc 1 171 20 discriminator 1
 1211 0384 13850400 		mv	a0,s1
 1212 0388 97000000 		call	_ZN9SemaphoredlEPv@plt
 1212      E7800000 
 1213              	.LVL86:
 1214              	.L18:
 173:src/Riscv.cpp ****             w_sepc(sepc);
 1215              		.loc 1 173 13 is_stmt 1
 1216              	.LBB174:
 1217              	.LBB175:
 183:src/../h/Riscv.hpp **** }
 1218              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1219              		.loc 2 183 77 is_stmt 0
 1220              	#APP
 1221              	# 183 "src/../h/Riscv.hpp" 1
 1222              		csrw sstatus, s4
 1223              	# 0 "" 2
 1224              	.LVL87:
 1225              	#NO_APP
 1226              	.LBE175:
 1227              	.LBE174:
 174:src/Riscv.cpp ****         }
 1228              		.loc 1 174 13 is_stmt 1
 1229              	.LBB176:
 1230              	.LBB177:
 113:src/../h/Riscv.hpp **** }
 1231              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1232              		.loc 2 113 65 is_stmt 0
 1233              	#APP
 1234              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1235              		csrw sepc, s3
 1236              	# 0 "" 2
 1237              		.loc 2 114 1
 1238              	#NO_APP
 1239 0398 6FF09FCC 		j	.L3
 1240              	.LVL88:
 1241              	.L32:
GAS LISTING /tmp/ccAtiQjL.s 			page 37


 1242              	.LBE177:
 1243              	.LBE176:
 1244              	.LBE161:
 1245              	.LBB178:
 1246              	.LBB151:
 177:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1247              		.loc 1 177 13 is_stmt 1
 1248              	.LBB152:
 1249              	.LBB153:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1250              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1251              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1252              		.loc 2 107 64 is_stmt 0
 1253              	#APP
 1254              	# 107 "src/../h/Riscv.hpp" 1
 1255              		csrr a5, sepc
 1256              	# 0 "" 2
 1257              	#NO_APP
 1258 03a0 233CF4FA 		sd	a5,-72(s0)
 108:src/../h/Riscv.hpp **** }
 1259              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1260              		.loc 2 108 12 is_stmt 0
 1261 03a4 833484FB 		ld	s1,-72(s0)
 1262              	.LVL89:
 1263              	.LBE153:
 1264              	.LBE152:
 177:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1265              		.loc 1 177 38
 1266 03a8 93844400 		addi	s1,s1,4
 1267              	.LVL90:
 178:src/Riscv.cpp **** 
 1268              		.loc 1 178 13 is_stmt 1
 1269              	.LBB154:
 1270              	.LBB155:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1271              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1272              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1273              		.loc 2 177 76 is_stmt 0
 1274              	#APP
 1275              	# 177 "src/../h/Riscv.hpp" 1
 1276              		csrr a5, sstatus
 1277              	# 0 "" 2
 1278              	#NO_APP
 1279 03b0 2338F4FA 		sd	a5,-80(s0)
 178:src/../h/Riscv.hpp **** }
 1280              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1281              		.loc 2 178 12 is_stmt 0
 1282 03b4 033904FB 		ld	s2,-80(s0)
 1283              	.LVL91:
 1284              	.LBE155:
 1285              	.LBE154:
GAS LISTING /tmp/ccAtiQjL.s 			page 38


 180:src/Riscv.cpp **** 
 1286              		.loc 1 180 13 is_stmt 1
 182:src/Riscv.cpp **** 
 1287              		.loc 1 182 13
 182:src/Riscv.cpp **** 
 1288              		.loc 1 182 48 is_stmt 0
 1289              	#APP
 1290              	# 182 "src/Riscv.cpp" 1
 184:src/Riscv.cpp **** 
 1291              		ld a1, 11*8(fp)
 1292              	# 0 "" 2
 1293              		.loc 1 184 13 is_stmt 1
 184:src/Riscv.cpp **** 
 1294              		.loc 1 184 56 is_stmt 0
 1295              	# 184 "src/Riscv.cpp" 1
 1296              		mv a0, a1
 1297              	# 0 "" 2
 1298              	.LVL92:
 188:src/Riscv.cpp **** 
 1299              		.loc 1 188 13 is_stmt 1
 188:src/Riscv.cpp **** 
 1300              		.loc 1 188 36 is_stmt 0
 1301              	#NO_APP
 1302 03c0 97000000 		call	_ZN9Semaphore4waitEv@plt
 1302      E7800000 
 1303              	.LVL93:
 190:src/Riscv.cpp **** 
 1304              		.loc 1 190 13 is_stmt 1
 190:src/Riscv.cpp **** 
 1305              		.loc 1 190 56 is_stmt 0
 1306              	#APP
 1307              	# 190 "src/Riscv.cpp" 1
 192:src/Riscv.cpp ****             w_sepc(sepc);
 1308              		mv a0, a0
 1309              	# 0 "" 2
 1310              		.loc 1 192 13 is_stmt 1
 1311              	.LVL94:
 1312              	#NO_APP
 1313              	.LBB156:
 1314              	.LBB157:
 183:src/../h/Riscv.hpp **** }
 1315              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1316              		.loc 2 183 77 is_stmt 0
 1317              	#APP
 1318              	# 183 "src/../h/Riscv.hpp" 1
 1319              		csrw sstatus, s2
 1320              	# 0 "" 2
 1321              	.LVL95:
 1322              	#NO_APP
 1323              	.LBE157:
 1324              	.LBE156:
 193:src/Riscv.cpp ****         }
 1325              		.loc 1 193 13 is_stmt 1
 1326              	.LBB158:
 1327              	.LBB159:
 113:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccAtiQjL.s 			page 39


 1328              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1329              		.loc 2 113 65 is_stmt 0
 1330              	#APP
 1331              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1332              		csrw sepc, s1
 1333              	# 0 "" 2
 1334              		.loc 2 114 1
 1335              	#NO_APP
 1336 03d4 6FF0DFC8 		j	.L3
 1337              	.LBE159:
 1338              	.LBE158:
 1339              	.LBE151:
 1340              	.LBE178:
 1341              	.LBE194:
 1342              	.LBE207:
 1343              	.LBE221:
 1344              	.LBE236:
 1345              	.LBE252:
 1346              	.LBE269:
 1347              	.LBE279:
 1348              	.LBE290:
 1349              		.cfi_endproc
 1350              	.LFE47:
 1352              	.Letext0:
 1353              		.file 5 "src/../h/../lib/hw.h"
 1354              		.file 6 "src/../h/MemoryAllocator.hpp"
 1355              		.file 7 "src/../h/Scheduler.hpp"
 1356              		.file 8 "src/../h/_thread.hpp"
GAS LISTING /tmp/ccAtiQjL.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccAtiQjL.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccAtiQjL.s:13     .text:0000000000000000 .L0 
     /tmp/ccAtiQjL.s:14     .text:0000000000000000 .L0 
     /tmp/ccAtiQjL.s:15     .text:0000000000000004 .L0 
     /tmp/ccAtiQjL.s:17     .text:0000000000000008 .L0 
     /tmp/ccAtiQjL.s:19     .text:000000000000000c .L0 
     /tmp/ccAtiQjL.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:15     .text:000000000000000c .L0 
     /tmp/ccAtiQjL.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:16     .text:0000000000000010 .L0 
     /tmp/ccAtiQjL.s:33     .text:0000000000000014 .L0 
     /tmp/ccAtiQjL.s:34     .text:0000000000000018 .L0 
     /tmp/ccAtiQjL.s:35     .text:0000000000000018 .L0 
     /tmp/ccAtiQjL.s:37     .text:000000000000001c .L0 
     /tmp/ccAtiQjL.s:39     .text:0000000000000020 .L0 
     /tmp/ccAtiQjL.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccAtiQjL.s:48     .text:0000000000000020 .L0 
     /tmp/ccAtiQjL.s:49     .text:0000000000000020 .L0 
     /tmp/ccAtiQjL.s:50     .text:0000000000000024 .L0 
     /tmp/ccAtiQjL.s:57     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:58     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:59     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:60     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:61     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:62     .text:000000000000003c .L0 
     /tmp/ccAtiQjL.s:64     .text:0000000000000040 .L0 
     /tmp/ccAtiQjL.s:69     .text:0000000000000040 .L0 
     /tmp/ccAtiQjL.s:70     .text:0000000000000040 .L0 
     /tmp/ccAtiQjL.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/ccAtiQjL.s:79     .text:0000000000000048 .L0 
     /tmp/ccAtiQjL.s:80     .text:0000000000000048 .L0 
     /tmp/ccAtiQjL.s:84     .text:000000000000004c .L0 
     /tmp/ccAtiQjL.s:87     .text:0000000000000050 .L0 
     /tmp/ccAtiQjL.s:88     .text:0000000000000050 .L0 
     /tmp/ccAtiQjL.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:24     .text:0000000000000050 .L0 
     /tmp/ccAtiQjL.s:98     .text:0000000000000054 .L0 
     /tmp/ccAtiQjL.s:99     .text:0000000000000054 .L0 
     /tmp/ccAtiQjL.s:102    .text:0000000000000058 .L0 
     /tmp/ccAtiQjL.s:108    .text:0000000000000060 .L0 
     /tmp/ccAtiQjL.s:109    .text:0000000000000064 .L0 
     /tmp/ccAtiQjL.s:110    .text:0000000000000064 .L0 
     /tmp/ccAtiQjL.s:112    .text:0000000000000068 .L0 
     /tmp/ccAtiQjL.s:113    .text:0000000000000068 .L0 
     /tmp/ccAtiQjL.s:115    .text:000000000000006c .L0 
     /tmp/ccAtiQjL.s:117    .text:0000000000000070 .L0 
     /tmp/ccAtiQjL.s:119    .text:0000000000000074 .L0 
     /tmp/ccAtiQjL.s:121    .text:0000000000000078 .L0 
     /tmp/ccAtiQjL.s:123    .text:000000000000007c .L0 
     /tmp/ccAtiQjL.s:127    .text:0000000000000080 .L0 
     /tmp/ccAtiQjL.s:131    .text:0000000000000080 .L0 
     /tmp/ccAtiQjL.s:139    .text:0000000000000088 .L0 
     /tmp/ccAtiQjL.s:147    .text:0000000000000090 .L0 
     /tmp/ccAtiQjL.s:157    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 41


     /tmp/ccAtiQjL.s:169    .text:00000000000000a0 .L0 
     /tmp/ccAtiQjL.s:183    .text:00000000000000a8 .L0 
     /tmp/ccAtiQjL.s:199    .text:00000000000000b0 .L0 
     /tmp/ccAtiQjL.s:217    .text:00000000000000b8 .L0 
     /tmp/ccAtiQjL.s:237    .text:00000000000000c0 .L0 
     /tmp/ccAtiQjL.s:259    .text:00000000000000c8 .L0 
     /tmp/ccAtiQjL.s:265    .text:00000000000000d0 .L0 
     /tmp/ccAtiQjL.s:266    .text:00000000000000d0 .L0 
     /tmp/ccAtiQjL.s:267    .text:00000000000000d0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000d0 .L0 
     /tmp/ccAtiQjL.s:275    .text:00000000000000d8 .L0 
     /tmp/ccAtiQjL.s:276    .text:00000000000000d8 .L0 
     /tmp/ccAtiQjL.s:281    .text:00000000000000dc .L0 
     /tmp/ccAtiQjL.s:286    .text:00000000000000e0 .L0 
     /tmp/ccAtiQjL.s:287    .text:00000000000000e0 .L0 
     /tmp/ccAtiQjL.s:288    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000e0 .L0 
     /tmp/ccAtiQjL.s:296    .text:00000000000000e8 .L0 
     /tmp/ccAtiQjL.s:297    .text:00000000000000e8 .L0 
     /tmp/ccAtiQjL.s:302    .text:00000000000000ec .L0 
     /tmp/ccAtiQjL.s:303    .text:00000000000000ec .L0 
       src/Riscv.cpp:201    .text:00000000000000ec .L0 
     /tmp/ccAtiQjL.s:309    .text:00000000000000f0 .L0 
       src/Riscv.cpp:203    .text:00000000000000f0 .L0 
     /tmp/ccAtiQjL.s:315    .text:00000000000000f4 .L0 
     /tmp/ccAtiQjL.s:317    .text:00000000000000f4 .L0 
     /tmp/ccAtiQjL.s:320    .text:00000000000000fc .L0 
     /tmp/ccAtiQjL.s:321    .text:00000000000000fc .L0 
     /tmp/ccAtiQjL.s:322    .text:00000000000000fc .L0 
     /tmp/ccAtiQjL.s:332    .text:0000000000000104 .L0 
     /tmp/ccAtiQjL.s:333    .text:0000000000000104 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000104 .L0 
     /tmp/ccAtiQjL.s:345    .text:0000000000000108 .L0 
     /tmp/ccAtiQjL.s:346    .text:0000000000000108 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000108 .L0 
     /tmp/ccAtiQjL.s:366    .text:000000000000010c .L0 
     /tmp/ccAtiQjL.s:368    .text:000000000000010c .L0 
     /tmp/ccAtiQjL.s:369    .text:000000000000010c .L0 
     /tmp/ccAtiQjL.s:378    .text:0000000000000110 .L0 
     /tmp/ccAtiQjL.s:379    .text:0000000000000110 .L0 
     /tmp/ccAtiQjL.s:380    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000110 .L0 
     /tmp/ccAtiQjL.s:388    .text:0000000000000118 .L0 
     /tmp/ccAtiQjL.s:389    .text:0000000000000118 .L0 
     /tmp/ccAtiQjL.s:393    .text:000000000000011c .L0 
     /tmp/ccAtiQjL.s:398    .text:0000000000000120 .L0 
     /tmp/ccAtiQjL.s:399    .text:0000000000000120 .L0 
     /tmp/ccAtiQjL.s:400    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000120 .L0 
     /tmp/ccAtiQjL.s:408    .text:0000000000000128 .L0 
     /tmp/ccAtiQjL.s:409    .text:0000000000000128 .L0 
     /tmp/ccAtiQjL.s:414    .text:000000000000012c .L0 
     /tmp/ccAtiQjL.s:415    .text:000000000000012c .L0 
     /tmp/ccAtiQjL.s:416    .text:000000000000012c .L0 
     /tmp/ccAtiQjL.s:417    .text:000000000000012c .L0 
     /tmp/ccAtiQjL.s:418    .text:000000000000012c .L0 
       src/Riscv.cpp:41     .text:000000000000012c .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 42


     /tmp/ccAtiQjL.s:424    .text:0000000000000130 .L0 
       src/Riscv.cpp:42     .text:0000000000000130 .L0 
     /tmp/ccAtiQjL.s:429    .text:0000000000000134 .L0 
       src/Riscv.cpp:43     .text:0000000000000134 .L0 
     /tmp/ccAtiQjL.s:434    .text:0000000000000138 .L0 
       src/Riscv.cpp:44     .text:0000000000000138 .L0 
     /tmp/ccAtiQjL.s:439    .text:000000000000013c .L0 
       src/Riscv.cpp:47     .text:000000000000013c .L0 
     /tmp/ccAtiQjL.s:445    .text:0000000000000140 .L0 
       src/Riscv.cpp:48     .text:0000000000000140 .L0 
     /tmp/ccAtiQjL.s:451    .text:0000000000000144 .L0 
       src/Riscv.cpp:49     .text:0000000000000144 .L0 
     /tmp/ccAtiQjL.s:457    .text:0000000000000148 .L0 
       src/Riscv.cpp:50     .text:0000000000000148 .L0 
     /tmp/ccAtiQjL.s:463    .text:000000000000014c .L0 
     /tmp/ccAtiQjL.s:465    .text:000000000000014c .L0 
     /tmp/ccAtiQjL.s:468    .text:0000000000000154 .L0 
     /tmp/ccAtiQjL.s:469    .text:0000000000000154 .L0 
     /tmp/ccAtiQjL.s:471    .text:0000000000000158 .L0 
     /tmp/ccAtiQjL.s:472    .text:0000000000000158 .L0 
     /tmp/ccAtiQjL.s:474    .text:000000000000015c .L0 
     /tmp/ccAtiQjL.s:478    .text:0000000000000160 .L0 
       src/Riscv.cpp:62     .text:0000000000000160 .L0 
     /tmp/ccAtiQjL.s:488    .text:0000000000000164 .L0 
     /tmp/ccAtiQjL.s:489    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000164 .L0 
     /tmp/ccAtiQjL.s:501    .text:0000000000000168 .L0 
     /tmp/ccAtiQjL.s:502    .text:0000000000000168 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000168 .L0 
     /tmp/ccAtiQjL.s:509    .text:000000000000016c .L0 
     /tmp/ccAtiQjL.s:515    .text:0000000000000170 .L0 
     /tmp/ccAtiQjL.s:526    .text:0000000000000178 .L0 
     /tmp/ccAtiQjL.s:527    .text:0000000000000178 .L0 
     /tmp/ccAtiQjL.s:528    .text:0000000000000178 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000178 .L0 
     /tmp/ccAtiQjL.s:536    .text:0000000000000180 .L0 
     /tmp/ccAtiQjL.s:537    .text:0000000000000180 .L0 
     /tmp/ccAtiQjL.s:542    .text:0000000000000184 .L0 
     /tmp/ccAtiQjL.s:547    .text:0000000000000188 .L0 
     /tmp/ccAtiQjL.s:548    .text:0000000000000188 .L0 
     /tmp/ccAtiQjL.s:549    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000188 .L0 
     /tmp/ccAtiQjL.s:557    .text:0000000000000190 .L0 
     /tmp/ccAtiQjL.s:558    .text:0000000000000190 .L0 
     /tmp/ccAtiQjL.s:563    .text:0000000000000194 .L0 
       src/Riscv.cpp:71     .text:0000000000000194 .L0 
     /tmp/ccAtiQjL.s:570    .text:0000000000000198 .L0 
     /tmp/ccAtiQjL.s:572    .text:0000000000000198 .L0 
     /tmp/ccAtiQjL.s:577    .text:00000000000001a4 .L0 
       src/Riscv.cpp:75     .text:00000000000001a4 .L0 
     /tmp/ccAtiQjL.s:587    .text:00000000000001a8 .L0 
     /tmp/ccAtiQjL.s:588    .text:00000000000001a8 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001a8 .L0 
     /tmp/ccAtiQjL.s:600    .text:00000000000001ac .L0 
     /tmp/ccAtiQjL.s:601    .text:00000000000001ac .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001ac .L0 
     /tmp/ccAtiQjL.s:608    .text:00000000000001b0 .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 43


     /tmp/ccAtiQjL.s:619    .text:00000000000001b4 .L0 
     /tmp/ccAtiQjL.s:620    .text:00000000000001b4 .L0 
     /tmp/ccAtiQjL.s:621    .text:00000000000001b4 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001b4 .L0 
     /tmp/ccAtiQjL.s:629    .text:00000000000001bc .L0 
     /tmp/ccAtiQjL.s:630    .text:00000000000001bc .L0 
     /tmp/ccAtiQjL.s:635    .text:00000000000001c0 .L0 
     /tmp/ccAtiQjL.s:640    .text:00000000000001c4 .L0 
     /tmp/ccAtiQjL.s:641    .text:00000000000001c4 .L0 
     /tmp/ccAtiQjL.s:642    .text:00000000000001c4 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001c4 .L0 
     /tmp/ccAtiQjL.s:650    .text:00000000000001cc .L0 
     /tmp/ccAtiQjL.s:651    .text:00000000000001cc .L0 
     /tmp/ccAtiQjL.s:656    .text:00000000000001d0 .L0 
       src/Riscv.cpp:84     .text:00000000000001d0 .L0 
     /tmp/ccAtiQjL.s:663    .text:00000000000001d4 .L0 
     /tmp/ccAtiQjL.s:665    .text:00000000000001d4 .L0 
     /tmp/ccAtiQjL.s:668    .text:00000000000001dc .L0 
       src/Riscv.cpp:86     .text:00000000000001dc .L0 
     /tmp/ccAtiQjL.s:678    .text:00000000000001e0 .L0 
     /tmp/ccAtiQjL.s:679    .text:00000000000001e0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001e0 .L0 
     /tmp/ccAtiQjL.s:691    .text:00000000000001e4 .L0 
     /tmp/ccAtiQjL.s:692    .text:00000000000001e4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001e4 .L0 
     /tmp/ccAtiQjL.s:699    .text:00000000000001e8 .L0 
     /tmp/ccAtiQjL.s:710    .text:00000000000001ec .L0 
     /tmp/ccAtiQjL.s:711    .text:00000000000001ec .L0 
     /tmp/ccAtiQjL.s:712    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001ec .L0 
     /tmp/ccAtiQjL.s:720    .text:00000000000001f4 .L0 
     /tmp/ccAtiQjL.s:721    .text:00000000000001f4 .L0 
     /tmp/ccAtiQjL.s:726    .text:00000000000001f8 .L0 
     /tmp/ccAtiQjL.s:731    .text:00000000000001fc .L0 
     /tmp/ccAtiQjL.s:732    .text:00000000000001fc .L0 
     /tmp/ccAtiQjL.s:733    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001fc .L0 
     /tmp/ccAtiQjL.s:741    .text:0000000000000204 .L0 
     /tmp/ccAtiQjL.s:742    .text:0000000000000204 .L0 
     /tmp/ccAtiQjL.s:747    .text:0000000000000208 .L0 
     /tmp/ccAtiQjL.s:748    .text:0000000000000208 .L0 
     /tmp/ccAtiQjL.s:751    .text:0000000000000214 .L0 
     /tmp/ccAtiQjL.s:754    .text:000000000000021c .L0 
     /tmp/ccAtiQjL.s:755    .text:000000000000021c .L0 
     /tmp/ccAtiQjL.s:760    .text:0000000000000224 .L0 
     /tmp/ccAtiQjL.s:761    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000224 .L0 
     /tmp/ccAtiQjL.s:773    .text:0000000000000228 .L0 
     /tmp/ccAtiQjL.s:774    .text:0000000000000228 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000228 .L0 
     /tmp/ccAtiQjL.s:781    .text:000000000000022c .L0 
     /tmp/ccAtiQjL.s:792    .text:0000000000000230 .L0 
     /tmp/ccAtiQjL.s:793    .text:0000000000000230 .L0 
     /tmp/ccAtiQjL.s:794    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000230 .L0 
     /tmp/ccAtiQjL.s:802    .text:0000000000000238 .L0 
     /tmp/ccAtiQjL.s:803    .text:0000000000000238 .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 44


     /tmp/ccAtiQjL.s:808    .text:000000000000023c .L0 
     /tmp/ccAtiQjL.s:813    .text:0000000000000240 .L0 
     /tmp/ccAtiQjL.s:814    .text:0000000000000240 .L0 
     /tmp/ccAtiQjL.s:815    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000240 .L0 
     /tmp/ccAtiQjL.s:823    .text:0000000000000248 .L0 
     /tmp/ccAtiQjL.s:824    .text:0000000000000248 .L0 
     /tmp/ccAtiQjL.s:829    .text:000000000000024c .L0 
     /tmp/ccAtiQjL.s:830    .text:000000000000024c .L0 
     /tmp/ccAtiQjL.s:835    .text:0000000000000254 .L0 
     /tmp/ccAtiQjL.s:836    .text:0000000000000254 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000254 .L0 
     /tmp/ccAtiQjL.s:848    .text:0000000000000258 .L0 
     /tmp/ccAtiQjL.s:849    .text:0000000000000258 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000258 .L0 
     /tmp/ccAtiQjL.s:856    .text:000000000000025c .L0 
     /tmp/ccAtiQjL.s:867    .text:0000000000000260 .L0 
     /tmp/ccAtiQjL.s:868    .text:0000000000000260 .L0 
     /tmp/ccAtiQjL.s:869    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000260 .L0 
     /tmp/ccAtiQjL.s:877    .text:0000000000000268 .L0 
     /tmp/ccAtiQjL.s:878    .text:0000000000000268 .L0 
     /tmp/ccAtiQjL.s:883    .text:000000000000026c .L0 
     /tmp/ccAtiQjL.s:888    .text:0000000000000270 .L0 
     /tmp/ccAtiQjL.s:889    .text:0000000000000270 .L0 
     /tmp/ccAtiQjL.s:890    .text:0000000000000270 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000270 .L0 
     /tmp/ccAtiQjL.s:898    .text:0000000000000278 .L0 
     /tmp/ccAtiQjL.s:899    .text:0000000000000278 .L0 
     /tmp/ccAtiQjL.s:904    .text:000000000000027c .L0 
     /tmp/ccAtiQjL.s:905    .text:000000000000027c .L0 
     /tmp/ccAtiQjL.s:908    .text:0000000000000288 .L0 
     /tmp/ccAtiQjL.s:909    .text:0000000000000288 .L0 
     /tmp/ccAtiQjL.s:914    .text:0000000000000290 .L0 
     /tmp/ccAtiQjL.s:915    .text:0000000000000290 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000290 .L0 
     /tmp/ccAtiQjL.s:927    .text:0000000000000294 .L0 
     /tmp/ccAtiQjL.s:928    .text:0000000000000294 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000294 .L0 
     /tmp/ccAtiQjL.s:935    .text:0000000000000298 .L0 
     /tmp/ccAtiQjL.s:946    .text:000000000000029c .L0 
     /tmp/ccAtiQjL.s:947    .text:000000000000029c .L0 
     /tmp/ccAtiQjL.s:948    .text:000000000000029c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000029c .L0 
     /tmp/ccAtiQjL.s:956    .text:00000000000002a4 .L0 
     /tmp/ccAtiQjL.s:957    .text:00000000000002a4 .L0 
     /tmp/ccAtiQjL.s:962    .text:00000000000002a8 .L0 
     /tmp/ccAtiQjL.s:967    .text:00000000000002ac .L0 
     /tmp/ccAtiQjL.s:968    .text:00000000000002ac .L0 
     /tmp/ccAtiQjL.s:969    .text:00000000000002ac .L0 
  src/../h/Riscv.hpp:177    .text:00000000000002ac .L0 
     /tmp/ccAtiQjL.s:977    .text:00000000000002b4 .L0 
     /tmp/ccAtiQjL.s:978    .text:00000000000002b4 .L0 
     /tmp/ccAtiQjL.s:983    .text:00000000000002b8 .L0 
     /tmp/ccAtiQjL.s:984    .text:00000000000002b8 .L0 
     /tmp/ccAtiQjL.s:985    .text:00000000000002b8 .L0 
       src/Riscv.cpp:132    .text:00000000000002b8 .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 45


     /tmp/ccAtiQjL.s:991    .text:00000000000002bc .L0 
       src/Riscv.cpp:133    .text:00000000000002bc .L0 
     /tmp/ccAtiQjL.s:996    .text:00000000000002c0 .L0 
       src/Riscv.cpp:135    .text:00000000000002c0 .L0 
     /tmp/ccAtiQjL.s:1002   .text:00000000000002c4 .L0 
       src/Riscv.cpp:136    .text:00000000000002c4 .L0 
     /tmp/ccAtiQjL.s:1008   .text:00000000000002c8 .L0 
     /tmp/ccAtiQjL.s:1010   .text:00000000000002c8 .L0 
     /tmp/ccAtiQjL.s:1017   .text:00000000000002d4 .L0 
     /tmp/ccAtiQjL.s:1023   .text:00000000000002d8 .L0 
     /tmp/ccAtiQjL.s:1031   .text:00000000000002e0 .L0 
     /tmp/ccAtiQjL.s:1032   .text:00000000000002e0 .L0 
     /tmp/ccAtiQjL.s:1035   .text:00000000000002e4 .L0 
     /tmp/ccAtiQjL.s:1036   .text:00000000000002e4 .L0 
     /tmp/ccAtiQjL.s:1038   .text:00000000000002e8 .L0 
     /tmp/ccAtiQjL.s:1042   .text:00000000000002ec .L0 
       src/Riscv.cpp:145    .text:00000000000002ec .L0 
     /tmp/ccAtiQjL.s:1052   .text:00000000000002f0 .L0 
     /tmp/ccAtiQjL.s:1053   .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000002f0 .L0 
     /tmp/ccAtiQjL.s:1065   .text:00000000000002f4 .L0 
     /tmp/ccAtiQjL.s:1066   .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002f4 .L0 
     /tmp/ccAtiQjL.s:1073   .text:00000000000002f8 .L0 
     /tmp/ccAtiQjL.s:1079   .text:00000000000002fc .L0 
     /tmp/ccAtiQjL.s:1089   .text:0000000000000304 .L0 
     /tmp/ccAtiQjL.s:1090   .text:0000000000000304 .L0 
     /tmp/ccAtiQjL.s:1091   .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000304 .L0 
     /tmp/ccAtiQjL.s:1099   .text:000000000000030c .L0 
     /tmp/ccAtiQjL.s:1100   .text:000000000000030c .L0 
     /tmp/ccAtiQjL.s:1104   .text:0000000000000310 .L0 
     /tmp/ccAtiQjL.s:1109   .text:0000000000000314 .L0 
     /tmp/ccAtiQjL.s:1110   .text:0000000000000314 .L0 
     /tmp/ccAtiQjL.s:1111   .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000314 .L0 
     /tmp/ccAtiQjL.s:1119   .text:000000000000031c .L0 
     /tmp/ccAtiQjL.s:1120   .text:000000000000031c .L0 
     /tmp/ccAtiQjL.s:1125   .text:0000000000000320 .L0 
     /tmp/ccAtiQjL.s:1126   .text:0000000000000320 .L0 
       src/Riscv.cpp:157    .text:0000000000000320 .L0 
     /tmp/ccAtiQjL.s:1132   .text:0000000000000324 .L0 
       src/Riscv.cpp:159    .text:0000000000000324 .L0 
     /tmp/ccAtiQjL.s:1138   .text:0000000000000328 .L0 
     /tmp/ccAtiQjL.s:1140   .text:0000000000000328 .L0 
     /tmp/ccAtiQjL.s:1149   .text:0000000000000330 .L0 
     /tmp/ccAtiQjL.s:1152   .text:0000000000000334 .L0 
     /tmp/ccAtiQjL.s:1157   .text:000000000000033c .L0 
     /tmp/ccAtiQjL.s:1158   .text:000000000000033c .L0 
     /tmp/ccAtiQjL.s:1161   .text:0000000000000344 .L0 
     /tmp/ccAtiQjL.s:1162   .text:0000000000000344 .L0 
     /tmp/ccAtiQjL.s:1164   .text:0000000000000348 .L0 
     /tmp/ccAtiQjL.s:1167   .text:0000000000000350 .L0 
     /tmp/ccAtiQjL.s:1168   .text:0000000000000350 .L0 
     /tmp/ccAtiQjL.s:1174   .text:000000000000035c .L0 
     /tmp/ccAtiQjL.s:1177   .text:000000000000035c .L0 
     /tmp/ccAtiQjL.s:1178   .text:000000000000035c .L0 
GAS LISTING /tmp/ccAtiQjL.s 			page 46


     /tmp/ccAtiQjL.s:1180   .text:0000000000000360 .L0 
     /tmp/ccAtiQjL.s:1182   .text:0000000000000364 .L0 
     /tmp/ccAtiQjL.s:1187   .text:0000000000000368 .L0 
     /tmp/ccAtiQjL.s:1193   .text:000000000000036c .L0 
     /tmp/ccAtiQjL.s:1194   .text:000000000000036c .L0 
     /tmp/ccAtiQjL.s:1196   .text:0000000000000370 .L0 
     /tmp/ccAtiQjL.s:1198   .text:0000000000000374 .L0 
     /tmp/ccAtiQjL.s:1200   .text:0000000000000378 .L0 
     /tmp/ccAtiQjL.s:1208   .text:0000000000000380 .L0 
     /tmp/ccAtiQjL.s:1209   .text:0000000000000380 .L0 
     /tmp/ccAtiQjL.s:1211   .text:0000000000000384 .L0 
     /tmp/ccAtiQjL.s:1218   .text:0000000000000390 .L0 
     /tmp/ccAtiQjL.s:1219   .text:0000000000000390 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000390 .L0 
     /tmp/ccAtiQjL.s:1231   .text:0000000000000394 .L0 
     /tmp/ccAtiQjL.s:1232   .text:0000000000000394 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000394 .L0 
     /tmp/ccAtiQjL.s:1239   .text:0000000000000398 .L0 
     /tmp/ccAtiQjL.s:1250   .text:000000000000039c .L0 
     /tmp/ccAtiQjL.s:1251   .text:000000000000039c .L0 
     /tmp/ccAtiQjL.s:1252   .text:000000000000039c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000039c .L0 
     /tmp/ccAtiQjL.s:1260   .text:00000000000003a4 .L0 
     /tmp/ccAtiQjL.s:1261   .text:00000000000003a4 .L0 
     /tmp/ccAtiQjL.s:1266   .text:00000000000003a8 .L0 
     /tmp/ccAtiQjL.s:1271   .text:00000000000003ac .L0 
     /tmp/ccAtiQjL.s:1272   .text:00000000000003ac .L0 
     /tmp/ccAtiQjL.s:1273   .text:00000000000003ac .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003ac .L0 
     /tmp/ccAtiQjL.s:1281   .text:00000000000003b4 .L0 
     /tmp/ccAtiQjL.s:1282   .text:00000000000003b4 .L0 
     /tmp/ccAtiQjL.s:1287   .text:00000000000003b8 .L0 
     /tmp/ccAtiQjL.s:1288   .text:00000000000003b8 .L0 
       src/Riscv.cpp:182    .text:00000000000003b8 .L0 
     /tmp/ccAtiQjL.s:1294   .text:00000000000003bc .L0 
       src/Riscv.cpp:184    .text:00000000000003bc .L0 
     /tmp/ccAtiQjL.s:1300   .text:00000000000003c0 .L0 
     /tmp/ccAtiQjL.s:1302   .text:00000000000003c0 .L0 
     /tmp/ccAtiQjL.s:1305   .text:00000000000003c8 .L0 
       src/Riscv.cpp:190    .text:00000000000003c8 .L0 
     /tmp/ccAtiQjL.s:1315   .text:00000000000003cc .L0 
     /tmp/ccAtiQjL.s:1316   .text:00000000000003cc .L0 
  src/../h/Riscv.hpp:183    .text:00000000000003cc .L0 
     /tmp/ccAtiQjL.s:1328   .text:00000000000003d0 .L0 
     /tmp/ccAtiQjL.s:1329   .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003d0 .L0 
     /tmp/ccAtiQjL.s:1336   .text:00000000000003d4 .L0 
     /tmp/ccAtiQjL.s:1349   .text:00000000000003d8 .L0 
     /tmp/ccAtiQjL.s:1357   .text:00000000000003d8 .L0 
     /tmp/ccAtiQjL.s:748    .text:0000000000000208 .L0 
     /tmp/ccAtiQjL.s:905    .text:000000000000027c .L0 
     /tmp/ccAtiQjL.s:126    .text:0000000000000080 .L23
     /tmp/ccAtiQjL.s:371    .text:0000000000000110 .L24
     /tmp/ccAtiQjL.s:518    .text:0000000000000178 .L25
     /tmp/ccAtiQjL.s:610    .text:00000000000001b4 .L26
     /tmp/ccAtiQjL.s:701    .text:00000000000001ec .L27
     /tmp/ccAtiQjL.s:783    .text:0000000000000230 .L28
GAS LISTING /tmp/ccAtiQjL.s 			page 47


     /tmp/ccAtiQjL.s:858    .text:0000000000000260 .L29
     /tmp/ccAtiQjL.s:937    .text:000000000000029c .L30
     /tmp/ccAtiQjL.s:1082   .text:0000000000000304 .L31
     /tmp/ccAtiQjL.s:1241   .text:000000000000039c .L32
     /tmp/ccAtiQjL.s:105    .text:0000000000000060 .L3
     /tmp/ccAtiQjL.s:511    .text:0000000000000170 .L20
     /tmp/ccAtiQjL.s:133    .text:0000000000000088 .L5
     /tmp/ccAtiQjL.s:475    .text:0000000000000160 .L6
     /tmp/ccAtiQjL.s:1075   .text:00000000000002fc .L21
     /tmp/ccAtiQjL.s:1039   .text:00000000000002ec .L13
     /tmp/ccAtiQjL.s:1171   .text:000000000000035c .L17
     /tmp/ccAtiQjL.s:1203   .text:0000000000000380 .L15
     /tmp/ccAtiQjL.s:1144   .text:0000000000000330 .L16
     /tmp/ccAtiQjL.s:1214   .text:0000000000000390 .L18
     /tmp/ccAtiQjL.s:3754   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccAtiQjL.s:5659   .debug_str:000000000000088a .LASF175
     /tmp/ccAtiQjL.s:5441   .debug_str:0000000000000199 .LASF176
     /tmp/ccAtiQjL.s:5541   .debug_str:0000000000000500 .LASF177
     /tmp/ccAtiQjL.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccAtiQjL.s:1352   .text:00000000000003d8 .Letext0
     /tmp/ccAtiQjL.s:5387   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccAtiQjL.s:5589   .debug_str:0000000000000697 .LASF3
     /tmp/ccAtiQjL.s:5495   .debug_str:0000000000000366 .LASF0
     /tmp/ccAtiQjL.s:5529   .debug_str:00000000000004c2 .LASF1
     /tmp/ccAtiQjL.s:5603   .debug_str:00000000000006ed .LASF2
     /tmp/ccAtiQjL.s:5613   .debug_str:000000000000074d .LASF4
     /tmp/ccAtiQjL.s:5505   .debug_str:0000000000000398 .LASF5
     /tmp/ccAtiQjL.s:5401   .debug_str:0000000000000057 .LASF6
     /tmp/ccAtiQjL.s:5565   .debug_str:00000000000005cd .LASF7
     /tmp/ccAtiQjL.s:5519   .debug_str:0000000000000465 .LASF8
     /tmp/ccAtiQjL.s:5473   .debug_str:00000000000002ad .LASF9
     /tmp/ccAtiQjL.s:5479   .debug_str:00000000000002df .LASF10
     /tmp/ccAtiQjL.s:5429   .debug_str:0000000000000135 .LASF11
     /tmp/ccAtiQjL.s:5465   .debug_str:000000000000026e .LASF12
     /tmp/ccAtiQjL.s:5443   .debug_str:00000000000001a7 .LASF13
     /tmp/ccAtiQjL.s:5427   .debug_str:0000000000000125 .LASF14
     /tmp/ccAtiQjL.s:5639   .debug_str:000000000000080a .LASF15
     /tmp/ccAtiQjL.s:5459   .debug_str:000000000000021f .LASF16
     /tmp/ccAtiQjL.s:5629   .debug_str:00000000000007d4 .LASF17
     /tmp/ccAtiQjL.s:5711   .debug_str:0000000000000ac7 .LASF54
     /tmp/ccAtiQjL.s:5487   .debug_str:000000000000032b .LASF50
     /tmp/ccAtiQjL.s:5493   .debug_str:000000000000034e .LASF52
     /tmp/ccAtiQjL.s:5687   .debug_str:00000000000009ff .LASF18
     /tmp/ccAtiQjL.s:5677   .debug_str:00000000000009d6 .LASF20
     /tmp/ccAtiQjL.s:5599   .debug_str:00000000000006d9 .LASF22
     /tmp/ccAtiQjL.s:5557   .debug_str:0000000000000597 .LASF24
     /tmp/ccAtiQjL.s:5577   .debug_str:0000000000000628 .LASF19
     /tmp/ccAtiQjL.s:5579   .debug_str:000000000000062f .LASF21
     /tmp/ccAtiQjL.s:5553   .debug_str:000000000000057c .LASF23
     /tmp/ccAtiQjL.s:5523   .debug_str:000000000000049a .LASF25
     /tmp/ccAtiQjL.s:5723   .debug_str:0000000000000b07 .LASF26
     /tmp/ccAtiQjL.s:5665   .debug_str:0000000000000968 .LASF27
     /tmp/ccAtiQjL.s:5549   .debug_str:000000000000056f .LASF28
     /tmp/ccAtiQjL.s:5555   .debug_str:0000000000000583 .LASF29
     /tmp/ccAtiQjL.s:5535   .debug_str:00000000000004e8 .LASF30
     /tmp/ccAtiQjL.s:5583   .debug_str:000000000000065d .LASF31
     /tmp/ccAtiQjL.s:5749   .debug_str:0000000000000bc9 .LASF32
GAS LISTING /tmp/ccAtiQjL.s 			page 48


     /tmp/ccAtiQjL.s:5501   .debug_str:000000000000037e .LASF33
     /tmp/ccAtiQjL.s:5635   .debug_str:00000000000007f6 .LASF34
     /tmp/ccAtiQjL.s:5617   .debug_str:000000000000077a .LASF35
     /tmp/ccAtiQjL.s:5619   .debug_str:000000000000078d .LASF36
     /tmp/ccAtiQjL.s:5433   .debug_str:0000000000000149 .LASF37
     /tmp/ccAtiQjL.s:5457   .debug_str:0000000000000219 .LASF38
     /tmp/ccAtiQjL.s:5491   .debug_str:000000000000033c .LASF39
     /tmp/ccAtiQjL.s:5499   .debug_str:0000000000000378 .LASF40
     /tmp/ccAtiQjL.s:5449   .debug_str:00000000000001dc .LASF41
     /tmp/ccAtiQjL.s:5403   .debug_str:000000000000005e .LASF42
     /tmp/ccAtiQjL.s:5607   .debug_str:0000000000000705 .LASF43
     /tmp/ccAtiQjL.s:5601   .debug_str:00000000000006e2 .LASF44
     /tmp/ccAtiQjL.s:5743   .debug_str:0000000000000b9b .LASF45
     /tmp/ccAtiQjL.s:5715   .debug_str:0000000000000ad2 .LASF46
     /tmp/ccAtiQjL.s:5727   .debug_str:0000000000000b1b .LASF47
     /tmp/ccAtiQjL.s:5709   .debug_str:0000000000000abd .LASF48
     /tmp/ccAtiQjL.s:5543   .debug_str:0000000000000530 .LASF49
     /tmp/ccAtiQjL.s:5721   .debug_str:0000000000000af8 .LASF51
     /tmp/ccAtiQjL.s:5477   .debug_str:00000000000002c3 .LASF53
     /tmp/ccAtiQjL.s:5567   .debug_str:00000000000005e0 .LASF133
     /tmp/ccAtiQjL.s:5515   .debug_str:0000000000000426 .LASF135
     /tmp/ccAtiQjL.s:5561   .debug_str:00000000000005b1 .LASF55
     /tmp/ccAtiQjL.s:5725   .debug_str:0000000000000b0f .LASF56
     /tmp/ccAtiQjL.s:5545   .debug_str:0000000000000546 .LASF57
     /tmp/ccAtiQjL.s:5645   .debug_str:0000000000000826 .LASF58
     /tmp/ccAtiQjL.s:5421   .debug_str:00000000000000e7 .LASF60
     /tmp/ccAtiQjL.s:5689   .debug_str:0000000000000a08 .LASF59
     /tmp/ccAtiQjL.s:5461   .debug_str:0000000000000235 .LASF61
     /tmp/ccAtiQjL.s:5509   .debug_str:00000000000003d6 .LASF63
     /tmp/ccAtiQjL.s:5605   .debug_str:00000000000006fb .LASF62
     /tmp/ccAtiQjL.s:5695   .debug_str:0000000000000a21 .LASF64
     /tmp/ccAtiQjL.s:5405   .debug_str:0000000000000069 .LASF74
     /tmp/ccAtiQjL.s:5471   .debug_str:00000000000002a3 .LASF65
     /tmp/ccAtiQjL.s:5625   .debug_str:00000000000007b0 .LASF141
     /tmp/ccAtiQjL.s:5731   .debug_str:0000000000000b41 .LASF66
     /tmp/ccAtiQjL.s:5737   .debug_str:0000000000000b60 .LASF178
     /tmp/ccAtiQjL.s:5513   .debug_str:000000000000040a .LASF179
     /tmp/ccAtiQjL.s:5517   .debug_str:0000000000000448 .LASF67
     /tmp/ccAtiQjL.s:5425   .debug_str:0000000000000110 .LASF68
     /tmp/ccAtiQjL.s:5611   .debug_str:0000000000000738 .LASF69
     /tmp/ccAtiQjL.s:5751   .debug_str:0000000000000bd1 .LASF70
     /tmp/ccAtiQjL.s:5691   .debug_str:0000000000000a12 .LASF73
     /tmp/ccAtiQjL.s:5527   .debug_str:00000000000004bd .LASF71
     /tmp/ccAtiQjL.s:5431   .debug_str:0000000000000144 .LASF72
     /tmp/ccAtiQjL.s:5657   .debug_str:0000000000000867 .LASF75
     /tmp/ccAtiQjL.s:5633   .debug_str:00000000000007f1 .LASF76
     /tmp/ccAtiQjL.s:5551   .debug_str:0000000000000577 .LASF77
     /tmp/ccAtiQjL.s:5547   .debug_str:000000000000056a .LASF78
     /tmp/ccAtiQjL.s:5703   .debug_str:0000000000000a7f .LASF79
     /tmp/ccAtiQjL.s:5581   .debug_str:0000000000000642 .LASF80
     /tmp/ccAtiQjL.s:5485   .debug_str:0000000000000310 .LASF180
     /tmp/ccAtiQjL.s:5745   .debug_str:0000000000000bb3 .LASF81
     /tmp/ccAtiQjL.s:5395   .debug_str:000000000000002b .LASF82
     /tmp/ccAtiQjL.s:5399   .debug_str:0000000000000047 .LASF83
     /tmp/ccAtiQjL.s:5511   .debug_str:00000000000003f2 .LASF84
     /tmp/ccAtiQjL.s:5597   .debug_str:00000000000006d0 .LASF85
     /tmp/ccAtiQjL.s:5741   .debug_str:0000000000000b7a .LASF86
GAS LISTING /tmp/ccAtiQjL.s 			page 49


     /tmp/ccAtiQjL.s:5537   .debug_str:00000000000004f0 .LASF87
     /tmp/ccAtiQjL.s:5707   .debug_str:0000000000000a9d .LASF88
     /tmp/ccAtiQjL.s:5563   .debug_str:00000000000005c1 .LASF89
     /tmp/ccAtiQjL.s:5521   .debug_str:0000000000000478 .LASF90
     /tmp/ccAtiQjL.s:5753   .debug_str:0000000000000bdf .LASF91
     /tmp/ccAtiQjL.s:5595   .debug_str:00000000000006b1 .LASF92
     /tmp/ccAtiQjL.s:5623   .debug_str:00000000000007a5 .LASF93
     /tmp/ccAtiQjL.s:5467   .debug_str:000000000000027d .LASF94
     /tmp/ccAtiQjL.s:5585   .debug_str:0000000000000671 .LASF95
     /tmp/ccAtiQjL.s:5435   .debug_str:000000000000015c .LASF96
     /tmp/ccAtiQjL.s:5407   .debug_str:0000000000000082 .LASF97
     /tmp/ccAtiQjL.s:5733   .debug_str:0000000000000b53 .LASF181
     /tmp/ccAtiQjL.s:5423   .debug_str:000000000000010a .LASF98
     /tmp/ccAtiQjL.s:5415   .debug_str:00000000000000c0 .LASF99
     /tmp/ccAtiQjL.s:5539   .debug_str:00000000000004f8 .LASF100
     /tmp/ccAtiQjL.s:5649   .debug_str:000000000000083a .LASF101
     /tmp/ccAtiQjL.s:5641   .debug_str:0000000000000816 .LASF102
     /tmp/ccAtiQjL.s:5525   .debug_str:00000000000004ad .LASF103
     /tmp/ccAtiQjL.s:5651   .debug_str:0000000000000842 .LASF104
     /tmp/ccAtiQjL.s:5609   .debug_str:000000000000071d .LASF105
     /tmp/ccAtiQjL.s:5411   .debug_str:000000000000009d .LASF106
     /tmp/ccAtiQjL.s:5701   .debug_str:0000000000000a64 .LASF107
     /tmp/ccAtiQjL.s:5533   .debug_str:00000000000004db .LASF108
     /tmp/ccAtiQjL.s:5451   .debug_str:00000000000001ee .LASF109
     /tmp/ccAtiQjL.s:5637   .debug_str:00000000000007fd .LASF110
     /tmp/ccAtiQjL.s:5615   .debug_str:0000000000000754 .LASF111
     /tmp/ccAtiQjL.s:5559   .debug_str:00000000000005ac .LASF145
     /tmp/ccAtiQjL.s:5531   .debug_str:00000000000004d5 .LASF112
     /tmp/ccAtiQjL.s:5391   .debug_str:0000000000000011 .LASF113
     /tmp/ccAtiQjL.s:5735   .debug_str:0000000000000b5a .LASF114
     /tmp/ccAtiQjL.s:5575   .debug_str:0000000000000614 .LASF115
     /tmp/ccAtiQjL.s:5655   .debug_str:000000000000085f .LASF182
     /tmp/ccAtiQjL.s:5503   .debug_str:0000000000000392 .LASF116
     /tmp/ccAtiQjL.s:5699   .debug_str:0000000000000a50 .LASF117
     /tmp/ccAtiQjL.s:5439   .debug_str:000000000000018c .LASF118
     /tmp/ccAtiQjL.s:5673   .debug_str:00000000000009b2 .LASF119
     /tmp/ccAtiQjL.s:5593   .debug_str:00000000000006a1 .LASF120
     /tmp/ccAtiQjL.s:5419   .debug_str:00000000000000d7 .LASF121
     /tmp/ccAtiQjL.s:5729   .debug_str:0000000000000b31 .LASF122
     /tmp/ccAtiQjL.s:5663   .debug_str:0000000000000957 .LASF123
     /tmp/ccAtiQjL.s:5627   .debug_str:00000000000007c1 .LASF124
     /tmp/ccAtiQjL.s:5389   .debug_str:0000000000000000 .LASF125
     /tmp/ccAtiQjL.s:5481   .debug_str:00000000000002ed .LASF126
     /tmp/ccAtiQjL.s:5397   .debug_str:0000000000000042 .LASF127
     /tmp/ccAtiQjL.s:5739   .debug_str:0000000000000b74 .LASF128
     /tmp/ccAtiQjL.s:5675   .debug_str:00000000000009ce .LASF129
     /tmp/ccAtiQjL.s:5667   .debug_str:000000000000097c .LASF130
     /tmp/ccAtiQjL.s:5647   .debug_str:0000000000000831 .LASF131
     /tmp/ccAtiQjL.s:5719   .debug_str:0000000000000aee .LASF132
     /tmp/ccAtiQjL.s:5417   .debug_str:00000000000000c9 .LASF134
     /tmp/ccAtiQjL.s:5587   .debug_str:000000000000067a .LASF136
     /tmp/ccAtiQjL.s:5445   .debug_str:00000000000001b7 .LASF137
     /tmp/ccAtiQjL.s:5507   .debug_str:00000000000003aa .LASF138
     /tmp/ccAtiQjL.s:5453   .debug_str:000000000000020b .LASF139
     /tmp/ccAtiQjL.s:5447   .debug_str:00000000000001c5 .LASF140
     /tmp/ccAtiQjL.s:5621   .debug_str:0000000000000794 .LASF142
     /tmp/ccAtiQjL.s:5661   .debug_str:000000000000094e .LASF143
GAS LISTING /tmp/ccAtiQjL.s 			page 50


     /tmp/ccAtiQjL.s:5705   .debug_str:0000000000000a96 .LASF144
     /tmp/ccAtiQjL.s:5747   .debug_str:0000000000000bc0 .LASF146
     /tmp/ccAtiQjL.s:5591   .debug_str:000000000000069c .LASF147
     /tmp/ccAtiQjL.s:5693   .debug_str:0000000000000a17 .LASF148
     /tmp/ccAtiQjL.s:5653   .debug_str:000000000000084d .LASF149
     /tmp/ccAtiQjL.s:5455   .debug_str:0000000000000214 .LASF150
     /tmp/ccAtiQjL.s:5669   .debug_str:0000000000000986 .LASF151
     /tmp/ccAtiQjL.s:5643   .debug_str:000000000000081f .LASF152
     /tmp/ccAtiQjL.s:5671   .debug_str:000000000000099b .LASF153
     /tmp/ccAtiQjL.s:5489   .debug_str:0000000000000336 .LASF154
     /tmp/ccAtiQjL.s:5413   .debug_str:00000000000000a9 .LASF155
     /tmp/ccAtiQjL.s:5569   .debug_str:00000000000005f5 .LASF156
     /tmp/ccAtiQjL.s:5717   .debug_str:0000000000000adc .LASF157
     /tmp/ccAtiQjL.s:5697   .debug_str:0000000000000a3d .LASF158
     /tmp/ccAtiQjL.s:5409   .debug_str:000000000000008a .LASF159
     /tmp/ccAtiQjL.s:5573   .debug_str:000000000000060c .LASF160
     /tmp/ccAtiQjL.s:5475   .debug_str:00000000000002bd .LASF161
     /tmp/ccAtiQjL.s:5469   .debug_str:000000000000029e .LASF163
     /tmp/ccAtiQjL.s:5497   .debug_str:0000000000000373 .LASF162
     /tmp/ccAtiQjL.s:5463   .debug_str:0000000000000257 .LASF172
     /tmp/ccAtiQjL.s:46     .text:0000000000000020 .LFB47
     /tmp/ccAtiQjL.s:1350   .text:00000000000003d8 .LFE47
     /tmp/ccAtiQjL.s:5631   .debug_str:00000000000007ea .LASF164
     /tmp/ccAtiQjL.s:4838   .debug_loc:0000000000000000 .LLST0
     /tmp/ccAtiQjL.s:5393   .debug_str:0000000000000025 .LASF165
     /tmp/ccAtiQjL.s:4845   .debug_loc:0000000000000023 .LLST1
     /tmp/ccAtiQjL.s:5679   .debug_str:00000000000009eb .LASF166
     /tmp/ccAtiQjL.s:4888   .debug_loc:00000000000000f1 .LLST2
     /tmp/ccAtiQjL.s:374    .text:0000000000000110 .LBB124
     /tmp/ccAtiQjL.s:519    .text:0000000000000178 .LBE124
     /tmp/ccAtiQjL.s:5713   .debug_str:0000000000000acd .LASF167
     /tmp/ccAtiQjL.s:4899   .debug_loc:0000000000000127 .LLST3
     /tmp/ccAtiQjL.s:5483   .debug_str:0000000000000308 .LASF168
     /tmp/ccAtiQjL.s:4906   .debug_loc:000000000000014a .LLST4
     /tmp/ccAtiQjL.s:4913   .debug_loc:000000000000016d .LLST5
     /tmp/ccAtiQjL.s:5681   .debug_str:00000000000009f0 .LASF169
     /tmp/ccAtiQjL.s:4920   .debug_loc:0000000000000190 .LLST6
     /tmp/ccAtiQjL.s:5683   .debug_str:00000000000009f5 .LASF170
     /tmp/ccAtiQjL.s:4927   .debug_loc:00000000000001b3 .LLST7
     /tmp/ccAtiQjL.s:5685   .debug_str:00000000000009fa .LASF171
     /tmp/ccAtiQjL.s:4934   .debug_loc:00000000000001d6 .LLST8
     /tmp/ccAtiQjL.s:4941   .debug_loc:00000000000001f9 .LLST9
     /tmp/ccAtiQjL.s:4948   .debug_loc:000000000000021c .LLST10
     /tmp/ccAtiQjL.s:376    .text:0000000000000110 .LBB125
     /tmp/ccAtiQjL.s:391    .text:000000000000011c .LBE125
     /tmp/ccAtiQjL.s:396    .text:0000000000000120 .LBB127
     /tmp/ccAtiQjL.s:412    .text:000000000000012c .LBE127
     /tmp/ccAtiQjL.s:486    .text:0000000000000164 .LBB129
     /tmp/ccAtiQjL.s:497    .text:0000000000000168 .LBE129
     /tmp/ccAtiQjL.s:4955   .debug_loc:000000000000023f .LLST11
     /tmp/ccAtiQjL.s:499    .text:0000000000000168 .LBB131
     /tmp/ccAtiQjL.s:513    .text:0000000000000170 .LBE131
     /tmp/ccAtiQjL.s:4962   .debug_loc:0000000000000262 .LLST12
     /tmp/ccAtiQjL.s:466    .text:0000000000000154 .LVL20
     /tmp/ccAtiQjL.s:522    .text:0000000000000178 .LBB260
     /tmp/ccAtiQjL.s:613    .text:00000000000001b4 .LBE260
     /tmp/ccAtiQjL.s:4969   .debug_loc:0000000000000285 .LLST60
GAS LISTING /tmp/ccAtiQjL.s 			page 51


     /tmp/ccAtiQjL.s:4976   .debug_loc:00000000000002a8 .LLST61
     /tmp/ccAtiQjL.s:4983   .debug_loc:00000000000002cb .LLST62
     /tmp/ccAtiQjL.s:524    .text:0000000000000178 .LBB261
     /tmp/ccAtiQjL.s:540    .text:0000000000000184 .LBE261
     /tmp/ccAtiQjL.s:545    .text:0000000000000188 .LBB263
     /tmp/ccAtiQjL.s:561    .text:0000000000000194 .LBE263
     /tmp/ccAtiQjL.s:585    .text:00000000000001a8 .LBB265
     /tmp/ccAtiQjL.s:596    .text:00000000000001ac .LBE265
     /tmp/ccAtiQjL.s:4990   .debug_loc:00000000000002ee .LLST63
     /tmp/ccAtiQjL.s:598    .text:00000000000001ac .LBB267
     /tmp/ccAtiQjL.s:612    .text:00000000000001b4 .LBE267
     /tmp/ccAtiQjL.s:4997   .debug_loc:0000000000000311 .LLST64
     /tmp/ccAtiQjL.s:575    .text:00000000000001a4 .LVL31
     /tmp/ccAtiQjL.s:615    .text:00000000000001b4 .LBB243
     /tmp/ccAtiQjL.s:704    .text:00000000000001ec .LBE243
     /tmp/ccAtiQjL.s:5004   .debug_loc:0000000000000334 .LLST55
     /tmp/ccAtiQjL.s:5011   .debug_loc:0000000000000357 .LLST56
     /tmp/ccAtiQjL.s:5018   .debug_loc:000000000000037a .LLST57
     /tmp/ccAtiQjL.s:617    .text:00000000000001b4 .LBB244
     /tmp/ccAtiQjL.s:633    .text:00000000000001c0 .LBE244
     /tmp/ccAtiQjL.s:638    .text:00000000000001c4 .LBB246
     /tmp/ccAtiQjL.s:654    .text:00000000000001d0 .LBE246
     /tmp/ccAtiQjL.s:676    .text:00000000000001e0 .LBB248
     /tmp/ccAtiQjL.s:687    .text:00000000000001e4 .LBE248
     /tmp/ccAtiQjL.s:5025   .debug_loc:000000000000039d .LLST58
     /tmp/ccAtiQjL.s:689    .text:00000000000001e4 .LBB250
     /tmp/ccAtiQjL.s:703    .text:00000000000001ec .LBE250
     /tmp/ccAtiQjL.s:5032   .debug_loc:00000000000003c0 .LLST59
     /tmp/ccAtiQjL.s:666    .text:00000000000001dc .LVL39
     /tmp/ccAtiQjL.s:706    .text:00000000000001ec .LBB227
     /tmp/ccAtiQjL.s:786    .text:0000000000000230 .LBE227
     /tmp/ccAtiQjL.s:5039   .debug_loc:00000000000003e3 .LLST51
     /tmp/ccAtiQjL.s:5046   .debug_loc:0000000000000406 .LLST52
     /tmp/ccAtiQjL.s:708    .text:00000000000001ec .LBB228
     /tmp/ccAtiQjL.s:724    .text:00000000000001f8 .LBE228
     /tmp/ccAtiQjL.s:729    .text:00000000000001fc .LBB230
     /tmp/ccAtiQjL.s:745    .text:0000000000000208 .LBE230
     /tmp/ccAtiQjL.s:758    .text:0000000000000224 .LBB232
     /tmp/ccAtiQjL.s:769    .text:0000000000000228 .LBE232
     /tmp/ccAtiQjL.s:5053   .debug_loc:0000000000000429 .LLST53
     /tmp/ccAtiQjL.s:771    .text:0000000000000228 .LBB234
     /tmp/ccAtiQjL.s:785    .text:0000000000000230 .LBE234
     /tmp/ccAtiQjL.s:5060   .debug_loc:000000000000044c .LLST54
     /tmp/ccAtiQjL.s:756    .text:0000000000000224 .LVL46
     /tmp/ccAtiQjL.s:788    .text:0000000000000230 .LBB212
     /tmp/ccAtiQjL.s:861    .text:0000000000000260 .LBE212
     /tmp/ccAtiQjL.s:5067   .debug_loc:000000000000046f .LLST47
     /tmp/ccAtiQjL.s:5074   .debug_loc:0000000000000492 .LLST48
     /tmp/ccAtiQjL.s:790    .text:0000000000000230 .LBB213
     /tmp/ccAtiQjL.s:806    .text:000000000000023c .LBE213
     /tmp/ccAtiQjL.s:811    .text:0000000000000240 .LBB215
     /tmp/ccAtiQjL.s:827    .text:000000000000024c .LBE215
     /tmp/ccAtiQjL.s:833    .text:0000000000000254 .LBB217
     /tmp/ccAtiQjL.s:844    .text:0000000000000258 .LBE217
     /tmp/ccAtiQjL.s:5081   .debug_loc:00000000000004b5 .LLST49
     /tmp/ccAtiQjL.s:846    .text:0000000000000258 .LBB219
     /tmp/ccAtiQjL.s:860    .text:0000000000000260 .LBE219
GAS LISTING /tmp/ccAtiQjL.s 			page 52


     /tmp/ccAtiQjL.s:5088   .debug_loc:00000000000004d8 .LLST50
     /tmp/ccAtiQjL.s:831    .text:0000000000000254 .LVL52
     /tmp/ccAtiQjL.s:863    .text:0000000000000260 .LBB198
     /tmp/ccAtiQjL.s:940    .text:000000000000029c .LBE198
     /tmp/ccAtiQjL.s:5095   .debug_loc:00000000000004fb .LLST43
     /tmp/ccAtiQjL.s:5102   .debug_loc:000000000000051e .LLST44
     /tmp/ccAtiQjL.s:865    .text:0000000000000260 .LBB199
     /tmp/ccAtiQjL.s:881    .text:000000000000026c .LBE199
     /tmp/ccAtiQjL.s:886    .text:0000000000000270 .LBB201
     /tmp/ccAtiQjL.s:902    .text:000000000000027c .LBE201
     /tmp/ccAtiQjL.s:912    .text:0000000000000290 .LBB203
     /tmp/ccAtiQjL.s:923    .text:0000000000000294 .LBE203
     /tmp/ccAtiQjL.s:5109   .debug_loc:0000000000000541 .LLST45
     /tmp/ccAtiQjL.s:925    .text:0000000000000294 .LBB205
     /tmp/ccAtiQjL.s:939    .text:000000000000029c .LBE205
     /tmp/ccAtiQjL.s:5116   .debug_loc:0000000000000564 .LLST46
     /tmp/ccAtiQjL.s:910    .text:0000000000000290 .LVL58
     /tmp/ccAtiQjL.s:942    .text:000000000000029c .LBB181
     /tmp/ccAtiQjL.s:1083   .text:0000000000000304 .LBE181
     /tmp/ccAtiQjL.s:5123   .debug_loc:0000000000000587 .LLST32
     /tmp/ccAtiQjL.s:5130   .debug_loc:00000000000005aa .LLST33
     /tmp/ccAtiQjL.s:5137   .debug_loc:00000000000005cd .LLST34
     /tmp/ccAtiQjL.s:5144   .debug_loc:00000000000005f0 .LLST35
     /tmp/ccAtiQjL.s:5151   .debug_loc:0000000000000613 .LLST36
     /tmp/ccAtiQjL.s:5158   .debug_loc:0000000000000636 .LLST37
     /tmp/ccAtiQjL.s:944    .text:000000000000029c .LBB182
     /tmp/ccAtiQjL.s:960    .text:00000000000002a8 .LBE182
     /tmp/ccAtiQjL.s:965    .text:00000000000002ac .LBB184
     /tmp/ccAtiQjL.s:981    .text:00000000000002b8 .LBE184
     /tmp/ccAtiQjL.s:1013   .text:00000000000002d4 .LBB186
     /tmp/ccAtiQjL.s:1029   .text:00000000000002e0 .LBE186
     /tmp/ccAtiQjL.s:5175   .debug_loc:0000000000000681 .LLST38
     /tmp/ccAtiQjL.s:5182   .debug_loc:00000000000006a4 .LLST39
     /tmp/ccAtiQjL.s:1019   .text:00000000000002d8 .LBB188
     /tmp/ccAtiQjL.s:1027   .text:00000000000002e0 .LBE188
     /tmp/ccAtiQjL.s:5189   .debug_loc:00000000000006c7 .LLST40
     /tmp/ccAtiQjL.s:1050   .text:00000000000002f0 .LBB190
     /tmp/ccAtiQjL.s:1061   .text:00000000000002f4 .LBE190
     /tmp/ccAtiQjL.s:5198   .debug_loc:00000000000006ec .LLST41
     /tmp/ccAtiQjL.s:1063   .text:00000000000002f4 .LBB192
     /tmp/ccAtiQjL.s:1077   .text:00000000000002fc .LBE192
     /tmp/ccAtiQjL.s:5205   .debug_loc:000000000000070f .LLST42
     /tmp/ccAtiQjL.s:1012   .text:00000000000002d4 .LVL66
     /tmp/ccAtiQjL.s:1085   .text:0000000000000304 .LBB161
     /tmp/ccAtiQjL.s:1244   .text:000000000000039c .LBE161
     /tmp/ccAtiQjL.s:5212   .debug_loc:0000000000000732 .LLST21
     /tmp/ccAtiQjL.s:5219   .debug_loc:0000000000000755 .LLST22
     /tmp/ccAtiQjL.s:5226   .debug_loc:0000000000000778 .LLST23
     /tmp/ccAtiQjL.s:5233   .debug_loc:000000000000079b .LLST24
     /tmp/ccAtiQjL.s:5373   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccAtiQjL.s:5240   .debug_loc:00000000000007be .LLST25
     /tmp/ccAtiQjL.s:1146   .text:0000000000000330 .LBB167
     /tmp/ccAtiQjL.s:5247   .debug_loc:00000000000007e1 .LLST26
     /tmp/ccAtiQjL.s:5262   .debug_loc:000000000000081b .LLST27
     /tmp/ccAtiQjL.s:5273   .debug_loc:0000000000000851 .LLST28
     /tmp/ccAtiQjL.s:1153   .text:000000000000033c .LVL81
     /tmp/ccAtiQjL.s:1170   .text:000000000000035c .LVL82
GAS LISTING /tmp/ccAtiQjL.s 			page 53


     /tmp/ccAtiQjL.s:1087   .text:0000000000000304 .LBB162
     /tmp/ccAtiQjL.s:1102   .text:0000000000000310 .LBE162
     /tmp/ccAtiQjL.s:1107   .text:0000000000000314 .LBB164
     /tmp/ccAtiQjL.s:1123   .text:0000000000000320 .LBE164
     /tmp/ccAtiQjL.s:1175   .text:000000000000035c .LBB171
     /tmp/ccAtiQjL.s:1185   .text:0000000000000368 .LBE171
     /tmp/ccAtiQjL.s:5280   .debug_loc:0000000000000874 .LLST29
     /tmp/ccAtiQjL.s:1216   .text:0000000000000390 .LBB174
     /tmp/ccAtiQjL.s:1227   .text:0000000000000394 .LBE174
     /tmp/ccAtiQjL.s:5289   .debug_loc:0000000000000899 .LLST30
     /tmp/ccAtiQjL.s:1229   .text:0000000000000394 .LBB176
     /tmp/ccAtiQjL.s:1243   .text:000000000000039c .LBE176
     /tmp/ccAtiQjL.s:5296   .debug_loc:00000000000008bc .LLST31
     /tmp/ccAtiQjL.s:1213   .text:0000000000000390 .LVL86
     /tmp/ccAtiQjL.s:1246   .text:000000000000039c .LBB151
     /tmp/ccAtiQjL.s:1339   .text:00000000000003d8 .LBE151
     /tmp/ccAtiQjL.s:5303   .debug_loc:00000000000008df .LLST19
     /tmp/ccAtiQjL.s:1248   .text:000000000000039c .LBB152
     /tmp/ccAtiQjL.s:1264   .text:00000000000003a8 .LBE152
     /tmp/ccAtiQjL.s:1269   .text:00000000000003ac .LBB154
     /tmp/ccAtiQjL.s:1285   .text:00000000000003b8 .LBE154
     /tmp/ccAtiQjL.s:1313   .text:00000000000003cc .LBB156
     /tmp/ccAtiQjL.s:1324   .text:00000000000003d0 .LBE156
     /tmp/ccAtiQjL.s:5310   .debug_loc:0000000000000902 .LLST20
     /tmp/ccAtiQjL.s:1326   .text:00000000000003d0 .LBB158
     /tmp/ccAtiQjL.s:1338   .text:00000000000003d8 .LBE158
     /tmp/ccAtiQjL.s:1303   .text:00000000000003c8 .LVL93
     /tmp/ccAtiQjL.s:261    .text:00000000000000d0 .LBB142
     /tmp/ccAtiQjL.s:355    .text:000000000000010c .LBE142
     /tmp/ccAtiQjL.s:5317   .debug_loc:0000000000000925 .LLST13
     /tmp/ccAtiQjL.s:5324   .debug_loc:0000000000000948 .LLST14
     /tmp/ccAtiQjL.s:5331   .debug_loc:000000000000096b .LLST15
     /tmp/ccAtiQjL.s:5338   .debug_loc:000000000000098e .LLST16
     /tmp/ccAtiQjL.s:263    .text:00000000000000d0 .LBB143
     /tmp/ccAtiQjL.s:279    .text:00000000000000dc .LBE143
     /tmp/ccAtiQjL.s:284    .text:00000000000000e0 .LBB145
     /tmp/ccAtiQjL.s:300    .text:00000000000000ec .LBE145
     /tmp/ccAtiQjL.s:330    .text:0000000000000104 .LBB147
     /tmp/ccAtiQjL.s:341    .text:0000000000000108 .LBE147
     /tmp/ccAtiQjL.s:5346   .debug_loc:00000000000009b2 .LLST17
     /tmp/ccAtiQjL.s:343    .text:0000000000000108 .LBB149
     /tmp/ccAtiQjL.s:354    .text:000000000000010c .LBE149
     /tmp/ccAtiQjL.s:5353   .debug_loc:00000000000009d5 .LLST18
     /tmp/ccAtiQjL.s:318    .text:00000000000000fc .LVL9
     /tmp/ccAtiQjL.s:66     .text:0000000000000040 .LBB120
     /tmp/ccAtiQjL.s:82     .text:000000000000004c .LBE120
     /tmp/ccAtiQjL.s:10     .text:0000000000000000 .LFB46
     /tmp/ccAtiQjL.s:40     .text:0000000000000020 .LFE46
     /tmp/ccAtiQjL.s:5571   .debug_str:0000000000000607 .LASF174
     /tmp/ccAtiQjL.s:5437   .debug_str:000000000000017a .LASF173
     /tmp/ccAtiQjL.s:85     .text:0000000000000050 .LVL0
     /tmp/ccAtiQjL.s:100    .text:0000000000000058 .LVL2
     /tmp/ccAtiQjL.s:94     .text:0000000000000054 .LVL1
     /tmp/ccAtiQjL.s:104    .text:0000000000000060 .LVL3
     /tmp/ccAtiQjL.s:125    .text:0000000000000080 .LVL4
     /tmp/ccAtiQjL.s:277    .text:00000000000000dc .LVL5
     /tmp/ccAtiQjL.s:370    .text:0000000000000110 .LVL13
GAS LISTING /tmp/ccAtiQjL.s 			page 54


     /tmp/ccAtiQjL.s:538    .text:0000000000000184 .LVL26
     /tmp/ccAtiQjL.s:609    .text:00000000000001b4 .LVL34
     /tmp/ccAtiQjL.s:631    .text:00000000000001c0 .LVL35
     /tmp/ccAtiQjL.s:700    .text:00000000000001ec .LVL42
     /tmp/ccAtiQjL.s:722    .text:00000000000001f8 .LVL43
     /tmp/ccAtiQjL.s:782    .text:0000000000000230 .LVL48
     /tmp/ccAtiQjL.s:804    .text:000000000000023c .LVL49
     /tmp/ccAtiQjL.s:857    .text:0000000000000260 .LVL54
     /tmp/ccAtiQjL.s:879    .text:000000000000026c .LVL55
     /tmp/ccAtiQjL.s:936    .text:000000000000029c .LVL60
     /tmp/ccAtiQjL.s:958    .text:00000000000002a8 .LVL61
     /tmp/ccAtiQjL.s:1081   .text:0000000000000304 .LVL74
     /tmp/ccAtiQjL.s:1141   .text:000000000000032c .LVL78
     /tmp/ccAtiQjL.s:1240   .text:000000000000039c .LVL88
     /tmp/ccAtiQjL.s:1262   .text:00000000000003a8 .LVL89
     /tmp/ccAtiQjL.s:568    .text:0000000000000198 .LVL29
     /tmp/ccAtiQjL.s:573    .text:000000000000019c .LVL30
     /tmp/ccAtiQjL.s:661    .text:00000000000001d4 .LVL38
     /tmp/ccAtiQjL.s:394    .text:0000000000000120 .LVL14
     /tmp/ccAtiQjL.s:517    .text:0000000000000178 .LVL25
     /tmp/ccAtiQjL.s:410    .text:000000000000012c .LVL15
     /tmp/ccAtiQjL.s:443    .text:0000000000000140 .LVL16
     /tmp/ccAtiQjL.s:449    .text:0000000000000144 .LVL17
     /tmp/ccAtiQjL.s:455    .text:0000000000000148 .LVL18
     /tmp/ccAtiQjL.s:461    .text:000000000000014c .LVL19
     /tmp/ccAtiQjL.s:476    .text:0000000000000160 .LVL21
     /tmp/ccAtiQjL.s:510    .text:0000000000000170 .LVL24
     /tmp/ccAtiQjL.s:484    .text:0000000000000164 .LVL22
     /tmp/ccAtiQjL.s:494    .text:0000000000000168 .LVL23
     /tmp/ccAtiQjL.s:543    .text:0000000000000188 .LVL27
     /tmp/ccAtiQjL.s:559    .text:0000000000000194 .LVL28
     /tmp/ccAtiQjL.s:583    .text:00000000000001a8 .LVL32
     /tmp/ccAtiQjL.s:593    .text:00000000000001ac .LVL33
     /tmp/ccAtiQjL.s:636    .text:00000000000001c4 .LVL36
     /tmp/ccAtiQjL.s:652    .text:00000000000001d0 .LVL37
     /tmp/ccAtiQjL.s:674    .text:00000000000001e0 .LVL40
     /tmp/ccAtiQjL.s:684    .text:00000000000001e4 .LVL41
     /tmp/ccAtiQjL.s:727    .text:00000000000001fc .LVL44
     /tmp/ccAtiQjL.s:743    .text:0000000000000208 .LVL45
     /tmp/ccAtiQjL.s:766    .text:0000000000000228 .LVL47
     /tmp/ccAtiQjL.s:809    .text:0000000000000240 .LVL50
     /tmp/ccAtiQjL.s:825    .text:000000000000024c .LVL51
     /tmp/ccAtiQjL.s:841    .text:0000000000000258 .LVL53
     /tmp/ccAtiQjL.s:884    .text:0000000000000270 .LVL56
     /tmp/ccAtiQjL.s:900    .text:000000000000027c .LVL57
     /tmp/ccAtiQjL.s:920    .text:0000000000000294 .LVL59
     /tmp/ccAtiQjL.s:963    .text:00000000000002ac .LVL62
     /tmp/ccAtiQjL.s:979    .text:00000000000002b8 .LVL63
     /tmp/ccAtiQjL.s:1000   .text:00000000000002c4 .LVL64
     /tmp/ccAtiQjL.s:1006   .text:00000000000002c8 .LVL65
     /tmp/ccAtiQjL.s:1025   .text:00000000000002e0 .LVL68
     /tmp/ccAtiQjL.s:1034   .text:00000000000002e4 .LVL69
     /tmp/ccAtiQjL.s:1040   .text:00000000000002ec .LVL70
     /tmp/ccAtiQjL.s:1074   .text:00000000000002fc .LVL73
     /tmp/ccAtiQjL.s:1018   .text:00000000000002d8 .LVL67
     /tmp/ccAtiQjL.s:1048   .text:00000000000002f0 .LVL71
     /tmp/ccAtiQjL.s:1058   .text:00000000000002f4 .LVL72
GAS LISTING /tmp/ccAtiQjL.s 			page 55


     /tmp/ccAtiQjL.s:1105   .text:0000000000000314 .LVL75
     /tmp/ccAtiQjL.s:1121   .text:0000000000000320 .LVL76
     /tmp/ccAtiQjL.s:1136   .text:0000000000000328 .LVL77
     /tmp/ccAtiQjL.s:1143   .text:0000000000000330 .LVL79
     /tmp/ccAtiQjL.s:1190   .text:000000000000036c .LVL84
     /tmp/ccAtiQjL.s:1202   .text:0000000000000380 .LVL85
     /tmp/ccAtiQjL.s:1150   .text:0000000000000334 .LVL80
     /tmp/ccAtiQjL.s:1183   .text:0000000000000368 .LVL83
     /tmp/ccAtiQjL.s:1224   .text:0000000000000394 .LVL87
     /tmp/ccAtiQjL.s:1298   .text:00000000000003c0 .LVL92
     /tmp/ccAtiQjL.s:1311   .text:00000000000003cc .LVL94
     /tmp/ccAtiQjL.s:1321   .text:00000000000003d0 .LVL95
     /tmp/ccAtiQjL.s:282    .text:00000000000000e0 .LVL6
     /tmp/ccAtiQjL.s:298    .text:00000000000000ec .LVL7
     /tmp/ccAtiQjL.s:313    .text:00000000000000f4 .LVL8
     /tmp/ccAtiQjL.s:328    .text:0000000000000104 .LVL10
     /tmp/ccAtiQjL.s:338    .text:0000000000000108 .LVL11
     /tmp/ccAtiQjL.s:351    .text:000000000000010c .LVL12
     /tmp/ccAtiQjL.s:1358   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccAtiQjL.s:1145   .text:0000000000000330 .LBB166
     /tmp/ccAtiQjL.s:1172   .text:000000000000035c .LBE166
     /tmp/ccAtiQjL.s:1188   .text:000000000000036c .LBB173
     /tmp/ccAtiQjL.s:1206   .text:0000000000000380 .LBE173
     /tmp/ccAtiQjL.s:1155   .text:000000000000033c .LBE167
     /tmp/ccAtiQjL.s:1191   .text:000000000000036c .LBB170
     /tmp/ccAtiQjL.s:1205   .text:0000000000000380 .LBE170

UNDEFINED SYMBOLS
_ZN9Semaphore6signalEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN9SemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN9SemaphoredlEPv
_ZN9Semaphore4waitEv
