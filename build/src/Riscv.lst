GAS LISTING /tmp/ccJ8xgIx.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB51:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp **** //    __asm__ volatile ("csrw sepc, ra");
  17:src/Riscv.cpp **** //    mc_sstatus(SSTATUS_SPP);
  18:src/Riscv.cpp **** //    __asm__ volatile ("sret");  //exit privileged regime
  19:src/Riscv.cpp **** }
  20              		.loc 1 19 1 is_stmt 0
  21 000c 03348100 		ld	s0,8(sp)
  22              		.cfi_restore 8
  23              		.cfi_def_cfa 2, 16
  24 0010 13010101 		addi	sp,sp,16
  25              		.cfi_def_cfa_offset 0
  26 0014 67800000 		jr	ra
  27              		.cfi_endproc
  28              	.LFE51:
  30              		.align	2
  31              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  33              	_ZN5Riscv20handleSupervisorTrapEv:
  34              	.LFB52:
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** bool Riscv::privilege=false;
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  35              		.loc 1 23 35 is_stmt 1
  36              		.cfi_startproc
  37 0018 130101F0 		addi	sp,sp,-256
GAS LISTING /tmp/ccJ8xgIx.s 			page 2


  38              		.cfi_def_cfa_offset 256
  39 001c 233C110E 		sd	ra,248(sp)
  40 0020 2338810E 		sd	s0,240(sp)
  41 0024 2334910E 		sd	s1,232(sp)
  42 0028 2330210F 		sd	s2,224(sp)
  43 002c 233C310D 		sd	s3,216(sp)
  44 0030 2338410D 		sd	s4,208(sp)
  45              		.cfi_offset 1, -8
  46              		.cfi_offset 8, -16
  47              		.cfi_offset 9, -24
  48              		.cfi_offset 18, -32
  49              		.cfi_offset 19, -40
  50              		.cfi_offset 20, -48
  51 0034 13040110 		addi	s0,sp,256
  52              		.cfi_def_cfa 8, 0
  24:src/Riscv.cpp ****     uint64 scause = r_scause();
  53              		.loc 1 24 5
  54              	.LBB168:
  55              	.LBB169:
  56              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/Riscv.hpp ****     static void popSppSpie();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     // read register scause
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     // write register scause
  24:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     // read register sepc
  27:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     // write register sepc
  30:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     // read register stvec
  33:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     // write register stvec
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccJ8xgIx.s 			page 3


  38:src/../h/Riscv.hpp ****     // read register stval
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     // write register stval
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     // mask set register sip
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     // mask clear register sip
  55:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     // read register sip
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     // write register sip
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // mask set register sstatus
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // mask clear register sstatus
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     // read register sstatus
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     // write register sstatus
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     // supervisor trap
  83:src/../h/Riscv.hpp ****     static void supervisorTrap();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void TrapConsole();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void initKernel();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     // supervisor trap handler
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static void handleTrapConsole();
GAS LISTING /tmp/ccJ8xgIx.s 			page 4


  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** //    static void syscallHandler();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     uint64 volatile scause;
  57              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  58              		.loc 2 103 5
  59              		.loc 2 103 72 is_stmt 0
  60              	#APP
  61              	# 103 "src/../h/Riscv.hpp" 1
 104              	    return scause;
  62              		csrr a5, scause
  63              	# 0 "" 2
  64              	#NO_APP
  65 003c 2330F4F0 		sd	a5,-256(s0)
  66              		.loc 2 104 5 is_stmt 1
  67              		.loc 2 104 12 is_stmt 0
  68 0040 033704F0 		ld	a4,-256(s0)
  69              	.LVL0:
  70              	.LBE169:
  71              	.LBE168:
  25:src/Riscv.cpp ****     uint64 a0reg;
  72              		.loc 1 25 5 is_stmt 1
  26:src/Riscv.cpp ****     uint64 arg1;
  73              		.loc 1 26 5
  27:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  74              		.loc 1 27 5
  75              		.loc 1 27 49 is_stmt 0
  76              	#APP
  77              	# 27 "src/Riscv.cpp" 1
  28              	
  78              		mv s1, a0
  79              	# 0 "" 2
  80              	.LVL1:
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  81              		.loc 1 31 5 is_stmt 1
  82              	#NO_APP
  83              	.LBB170:
  84 0048 9307F0FF 		li	a5,-1
  85 004c 9397F703 		slli	a5,a5,63
  86 0050 93871700 		addi	a5,a5,1
  87 0054 630EF702 		beq	a4,a5,.L30
  88              	.LBE170:
  32:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  33:src/Riscv.cpp ****     }
  34:src/Riscv.cpp ****     else if(!privilege){
  89              		.loc 1 34 10
  90              	.LBB433:
  91              	.LBB171:
  92              		.loc 1 34 13 is_stmt 0
  93 0058 97070000 		lbu	a5,.LANCHOR0
GAS LISTING /tmp/ccJ8xgIx.s 			page 5


  93      83C70700 
  94              		.loc 1 34 10
  95 0060 639C0704 		bnez	a5,.L6
  96              	.LBB172:
  35:src/Riscv.cpp ****         uint64 sepc = r_sepc();
  97              		.loc 1 35 9 is_stmt 1
  98              	.LBB173:
  99              	.LBB174:
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/Riscv.hpp **** {
 109:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/Riscv.hpp **** {
 114:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 100              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 101              		.loc 2 115 5
 102              		.loc 2 115 64 is_stmt 0
 103              	#APP
 104              	# 115 "src/../h/Riscv.hpp" 1
 116              	    return sepc;
 105              		csrr a5, sepc
 106              	# 0 "" 2
 107              	#NO_APP
 108 0068 2334F4F0 		sd	a5,-248(s0)
 109              		.loc 2 116 5 is_stmt 1
 110              		.loc 2 116 12 is_stmt 0
 111 006c 833784F0 		ld	a5,-248(s0)
 112              	.LVL2:
 113              	.LBE174:
 114              	.LBE173:
  36:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 115              		.loc 1 36 9 is_stmt 1
 116              	.LBB175:
 117              	.LBB176:
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/Riscv.hpp **** {
 121:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/Riscv.hpp **** {
 133:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 134:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccJ8xgIx.s 			page 6


 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/Riscv.hpp **** {
 138:src/../h/Riscv.hpp ****     uint64 volatile stval;
 139:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/Riscv.hpp ****     return stval;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/Riscv.hpp **** {
 155:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sip;
 161:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/Riscv.hpp ****     return sip;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** //mask set
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** //mask clear
 177:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 178:src/../h/Riscv.hpp **** {
 179:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 118              		.loc 2 179 5
 119              		.loc 2 179 68 is_stmt 0
 120 0070 13070010 		li	a4,256
 121              	.LVL3:
 122              	#APP
 123              	# 179 "src/../h/Riscv.hpp" 1
 180              	}
 124              		csrc sstatus, a4
 125              	# 0 "" 2
 126              	.LVL4:
 127              	#NO_APP
 128              	.LBE176:
GAS LISTING /tmp/ccJ8xgIx.s 			page 7


 129              	.LBE175:
  37:src/Riscv.cpp ****         privilege=true;
 130              		.loc 1 37 9 is_stmt 1
 131              		.loc 1 37 18 is_stmt 0
 132 0078 13071000 		li	a4,1
 133 007c 97060000 		sb	a4,.LANCHOR0,a3
 133      2380E600 
  38:src/Riscv.cpp ****         w_sepc(sepc + 4);
 134              		.loc 1 38 9 is_stmt 1
 135              		.loc 1 38 15 is_stmt 0
 136 0084 93874700 		addi	a5,a5,4
 137              	.LVL5:
 138              	.LBB177:
 139              	.LBB178:
 121:src/../h/Riscv.hpp **** }
 140              		.loc 2 121 5 is_stmt 1
 121:src/../h/Riscv.hpp **** }
 141              		.loc 2 121 65 is_stmt 0
 142              	#APP
 143              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 144              		csrw sepc, a5
 145              	# 0 "" 2
 146              		.loc 2 122 1
 147              	#NO_APP
 148 008c 6F00C000 		j	.L3
 149              	.LVL6:
 150              	.L30:
 151              	.LBE178:
 152              	.LBE177:
 153              	.LBE172:
 154              	.LBE171:
  32:src/Riscv.cpp ****     }
 155              		.loc 1 32 9 is_stmt 1
 156              	.LBB416:
 157              	.LBB417:
 155:src/../h/Riscv.hpp **** }
 158              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 159              		.loc 2 155 64 is_stmt 0
 160 0090 93072000 		li	a5,2
 161              	#APP
 162              	# 155 "src/../h/Riscv.hpp" 1
 163              		csrc sip, a5
 164              	# 0 "" 2
 165              	.LVL7:
 166              	#NO_APP
 167              	.L3:
 168              	.LBE417:
 169              	.LBE416:
 170              	.LBE433:
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
  41:src/Riscv.cpp ****         console_handler();
  42:src/Riscv.cpp ****     }
  43:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  44:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
GAS LISTING /tmp/ccJ8xgIx.s 			page 8


  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****         if(a0reg==0x11){
  48:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  49:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****             _thread::thread_t *arg1;
  53:src/Riscv.cpp ****             _thread::Body arg2;
  54:src/Riscv.cpp ****             uint64 arg3;
  55:src/Riscv.cpp ****             uint64 *arg4;
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  58:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  59:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  60:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  66:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  67:src/Riscv.cpp **** 
  68:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  69:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  70:src/Riscv.cpp ****             *arg1=t;
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****             uint64 ret;
  73:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  74:src/Riscv.cpp ****             else ret =-1;
  75:src/Riscv.cpp **** 
  76:src/Riscv.cpp ****             //return _thread* adress through a0
  77:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****             w_sstatus(sstatus);
  80:src/Riscv.cpp ****             w_sepc(sepc);
  81:src/Riscv.cpp ****         }
  82:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  83:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  85:src/Riscv.cpp ****             //kmem_alloc
  86:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****             //write return value to a0 register
  92:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****             w_sstatus(sstatus);
  95:src/Riscv.cpp ****             w_sepc(sepc);
  96:src/Riscv.cpp ****         }
  97:src/Riscv.cpp ****         else if(a0reg==0x02){
  98:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
GAS LISTING /tmp/ccJ8xgIx.s 			page 9


 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             w_sstatus(sstatus);
 108:src/Riscv.cpp ****             w_sepc(sepc);
 109:src/Riscv.cpp ****         }
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****         else if(a0reg==0x12){
 112:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             _thread::running->finished=true;
 116:src/Riscv.cpp ****             _thread::dispatch();
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             w_sstatus(sstatus);
 119:src/Riscv.cpp ****             w_sepc(sepc);
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****         }
 123:src/Riscv.cpp ****         else if(a0reg == 0x13){
 124:src/Riscv.cpp ****             //thread dispatch
 125:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****             _thread::dispatch();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****             w_sstatus(sstatus);
 132:src/Riscv.cpp ****             w_sepc(sepc);
 133:src/Riscv.cpp ****         }
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****         else if(a0reg==0x04){
 136:src/Riscv.cpp ****             //call from yield
 137:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 141:src/Riscv.cpp ****             _thread::dispatch();
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             w_sstatus(sstatus);
 144:src/Riscv.cpp ****             w_sepc(sepc);
 145:src/Riscv.cpp ****         }
 146:src/Riscv.cpp ****         else if(a0reg==0x21){
 147:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 149:src/Riscv.cpp **** 
 150:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 151:src/Riscv.cpp ****            uint64 arg2;
 152:src/Riscv.cpp **** 
 153:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 158:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJ8xgIx.s 			page 10


 159:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 160:src/Riscv.cpp ****             sem->opened=true;
 161:src/Riscv.cpp ****             *arg1=sem;
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****             uint64 ret=0;
 164:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 165:src/Riscv.cpp ****             else ret=-1;
 166:src/Riscv.cpp **** 
 167:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 168:src/Riscv.cpp **** 
 169:src/Riscv.cpp ****             w_sstatus(sstatus);
 170:src/Riscv.cpp ****             w_sepc(sepc);
 171:src/Riscv.cpp ****         }
 172:src/Riscv.cpp ****         else if(a0reg==0x22){
 173:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 184:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 185:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 187:src/Riscv.cpp ****                 t->setDeblocked();
 188:src/Riscv.cpp ****                 sem->val++;
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 190:src/Riscv.cpp ****             }
 191:src/Riscv.cpp ****              sem->opened=false;
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             delete sem;
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****             w_sstatus(sstatus);
 196:src/Riscv.cpp ****             w_sepc(sepc);
 197:src/Riscv.cpp ****         }
 198:src/Riscv.cpp ****         else if(a0reg==0x23){
 199:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****             uint64 ret;
 209:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 210:src/Riscv.cpp ****             if(arg1->opened) {
 211:src/Riscv.cpp ****                  ret = arg1->wait();
 212:src/Riscv.cpp ****             }
 213:src/Riscv.cpp ****             else{
 214:src/Riscv.cpp ****                 ret=-1;
 215:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccJ8xgIx.s 			page 11


 216:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp ****             w_sstatus(sstatus);
 219:src/Riscv.cpp ****             w_sepc(sepc);
 220:src/Riscv.cpp ****         }
 221:src/Riscv.cpp ****         else if(a0reg==0x24){
 222:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 223:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp ****             uint64 ret;
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****                 arg1->signal();
 234:src/Riscv.cpp ****                 ret=0;
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 238:src/Riscv.cpp **** 
 239:src/Riscv.cpp ****             w_sstatus(sstatus);
 240:src/Riscv.cpp ****             w_sepc(sepc);
 241:src/Riscv.cpp ****         }
 242:src/Riscv.cpp ****         else if(a0reg==0x41){
 243:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 244:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 245:src/Riscv.cpp **** 
 246:src/Riscv.cpp ****             //call method from kernel Console class
 247:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 248:src/Riscv.cpp ****             char c = __getc();
 249:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 250:src/Riscv.cpp **** 
 251:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 252:src/Riscv.cpp **** 
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp ****             w_sstatus(sstatus);
 255:src/Riscv.cpp ****             w_sepc(sepc);
 256:src/Riscv.cpp ****         }
 257:src/Riscv.cpp ****         else if(a0reg==0x42){
 258:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 259:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 260:src/Riscv.cpp **** 
 261:src/Riscv.cpp ****             char c;
 262:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 265:src/Riscv.cpp **** 
 266:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 267:src/Riscv.cpp ****             __putc(c);
 268:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp ****             w_sstatus(sstatus);
 271:src/Riscv.cpp ****             w_sepc(sepc);
 272:src/Riscv.cpp ****         }
GAS LISTING /tmp/ccJ8xgIx.s 			page 12


 273:src/Riscv.cpp ****         else{
 274:src/Riscv.cpp ****             // unexpected trap cause
 275:src/Riscv.cpp ****         }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp ****     }
 278:src/Riscv.cpp **** 
 279:src/Riscv.cpp **** }
 171              		.loc 1 279 1
 172 0098 8330810F 		ld	ra,248(sp)
 173              		.cfi_remember_state
 174              		.cfi_restore 1
 175 009c 0334010F 		ld	s0,240(sp)
 176              		.cfi_restore 8
 177              		.cfi_def_cfa 2, 256
 178 00a0 8334810E 		ld	s1,232(sp)
 179              		.cfi_restore 9
 180 00a4 0339010E 		ld	s2,224(sp)
 181              		.cfi_restore 18
 182 00a8 8339810D 		ld	s3,216(sp)
 183              		.cfi_restore 19
 184 00ac 033A010D 		ld	s4,208(sp)
 185              		.cfi_restore 20
 186 00b0 13010110 		addi	sp,sp,256
 187              		.cfi_def_cfa_offset 0
 188 00b4 67800000 		jr	ra
 189              	.LVL8:
 190              	.L6:
 191              		.cfi_restore_state
  40:src/Riscv.cpp ****         console_handler();
 192              		.loc 1 40 10 is_stmt 1
 193              	.LBB434:
 194              	.LBB418:
 195              	.LBB179:
 196 00b8 9307F0FF 		li	a5,-1
 197 00bc 9397F703 		slli	a5,a5,63
 198 00c0 93879700 		addi	a5,a5,9
 199 00c4 6302F70C 		beq	a4,a5,.L31
 200              	.LBE179:
 201              	.LBE418:
 202              	.LBE434:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 203              		.loc 1 43 10
 204              	.LBB435:
 205              	.LBB419:
 206              	.LBB402:
 207              	.LBB180:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 208              		.loc 1 43 45 is_stmt 0
 209 00c8 130787FF 		addi	a4,a4,-8
 210              	.LVL9:
  43:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 211              		.loc 1 43 10
 212 00cc 93071000 		li	a5,1
 213 00d0 E3E4E7FC 		bgtu	a4,a5,.L3
 214              	.LBE180:
 215              	.LBE402:
 216              	.LBE419:
GAS LISTING /tmp/ccJ8xgIx.s 			page 13


 217              	.LBE435:
  47:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218              		.loc 1 47 9 is_stmt 1
 219              	.LBB436:
 220              	.LBB420:
 221              	.LBB403:
 222              	.LBB389:
 223              	.LBB181:
 224 00d4 93071001 		li	a5,17
 225 00d8 638EF40A 		beq	s1,a5,.L32
 226              	.LVL10:
 227              	.L8:
 228              	.LBE181:
 229              	.LBE389:
 230              	.LBE403:
 231              	.LBE420:
 232              	.LBE436:
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 233              		.loc 1 82 9
 234              	.LBB437:
 235              	.LBB421:
 236              	.LBB404:
 237              	.LBB390:
 238              	.LBB191:
 239 00dc 93071000 		li	a5,1
 240 00e0 638EF410 		beq	s1,a5,.L33
 241              	.LBE191:
 242              	.LBE390:
 243              	.LBE404:
 244              	.LBE421:
 245              	.LBE437:
  97:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 246              		.loc 1 97 14
 247              	.LBB438:
 248              	.LBB422:
 249              	.LBB405:
 250              	.LBB391:
 251              	.LBB377:
 252              	.LBB192:
 253 00e4 93072000 		li	a5,2
 254 00e8 638AF414 		beq	s1,a5,.L34
 255              	.LBE192:
 256              	.LBE377:
 257              	.LBE391:
 258              	.LBE405:
 259              	.LBE422:
 260              	.LBE438:
 111:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 261              		.loc 1 111 14
 262              	.LBB439:
 263              	.LBB423:
 264              	.LBB406:
 265              	.LBB392:
 266              	.LBB378:
 267              	.LBB358:
 268              	.LBB193:
 269 00ec 93072001 		li	a5,18
GAS LISTING /tmp/ccJ8xgIx.s 			page 14


 270 00f0 6384F418 		beq	s1,a5,.L35
 271              	.LBE193:
 272              	.LBE358:
 273              	.LBE378:
 274              	.LBE392:
 275              	.LBE406:
 276              	.LBE423:
 277              	.LBE439:
 123:src/Riscv.cpp ****             //thread dispatch
 278              		.loc 1 123 14
 279              	.LBB440:
 280              	.LBB424:
 281              	.LBB407:
 282              	.LBB393:
 283              	.LBB379:
 284              	.LBB359:
 285              	.LBB340:
 286              	.LBB194:
 287 00f4 93073001 		li	a5,19
 288 00f8 6382F41C 		beq	s1,a5,.L36
 289              	.LBE194:
 290              	.LBE340:
 291              	.LBE359:
 292              	.LBE379:
 293              	.LBE393:
 294              	.LBE407:
 295              	.LBE424:
 296              	.LBE440:
 135:src/Riscv.cpp ****             //call from yield
 297              		.loc 1 135 14
 298              	.LBB441:
 299              	.LBB425:
 300              	.LBB408:
 301              	.LBB394:
 302              	.LBB380:
 303              	.LBB360:
 304              	.LBB341:
 305              	.LBB323:
 306              	.LBB195:
 307 00fc 93074000 		li	a5,4
 308 0100 6386F41E 		beq	s1,a5,.L37
 309              	.LBE195:
 310              	.LBE323:
 311              	.LBE341:
 312              	.LBE360:
 313              	.LBE380:
 314              	.LBE394:
 315              	.LBE408:
 316              	.LBE425:
 317              	.LBE441:
 146:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 318              		.loc 1 146 14
 319              	.LBB442:
 320              	.LBB426:
 321              	.LBB409:
 322              	.LBB395:
 323              	.LBB381:
GAS LISTING /tmp/ccJ8xgIx.s 			page 15


 324              	.LBB361:
 325              	.LBB342:
 326              	.LBB324:
 327              	.LBB307:
 328              	.LBB196:
 329 0104 93071002 		li	a5,33
 330 0108 6380F422 		beq	s1,a5,.L38
 331              	.LBE196:
 332              	.LBE307:
 333              	.LBE324:
 334              	.LBE342:
 335              	.LBE361:
 336              	.LBE381:
 337              	.LBE395:
 338              	.LBE409:
 339              	.LBE426:
 340              	.LBE442:
 172:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 341              		.loc 1 172 14
 342              	.LBB443:
 343              	.LBB427:
 344              	.LBB410:
 345              	.LBB396:
 346              	.LBB382:
 347              	.LBB362:
 348              	.LBB343:
 349              	.LBB325:
 350              	.LBB308:
 351              	.LBB292:
 352              	.LBB197:
 353 010c 93072002 		li	a5,34
 354 0110 6384F428 		beq	s1,a5,.L39
 355              	.LBE197:
 356              	.LBE292:
 357              	.LBE308:
 358              	.LBE325:
 359              	.LBE343:
 360              	.LBE362:
 361              	.LBE382:
 362              	.LBE396:
 363              	.LBE410:
 364              	.LBE427:
 365              	.LBE443:
 198:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 366              		.loc 1 198 14
 367              	.LBB444:
 368              	.LBB428:
 369              	.LBB411:
 370              	.LBB397:
 371              	.LBB383:
 372              	.LBB363:
 373              	.LBB344:
 374              	.LBB326:
 375              	.LBB309:
 376              	.LBB293:
 377              	.LBB274:
 378              	.LBB198:
GAS LISTING /tmp/ccJ8xgIx.s 			page 16


 379 0114 93073002 		li	a5,35
 380 0118 638CF430 		beq	s1,a5,.L40
 381              	.LBE198:
 382              	.LBE274:
 383              	.LBE293:
 384              	.LBE309:
 385              	.LBE326:
 386              	.LBE344:
 387              	.LBE363:
 388              	.LBE383:
 389              	.LBE397:
 390              	.LBE411:
 391              	.LBE428:
 392              	.LBE444:
 221:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 393              		.loc 1 221 14
 394              	.LBB445:
 395              	.LBB429:
 396              	.LBB412:
 397              	.LBB398:
 398              	.LBB384:
 399              	.LBB364:
 400              	.LBB345:
 401              	.LBB327:
 402              	.LBB310:
 403              	.LBB294:
 404              	.LBB275:
 405              	.LBB251:
 406              	.LBB199:
 407 011c 93074002 		li	a5,36
 408 0120 638EF434 		beq	s1,a5,.L41
 409              	.LBE199:
 410              	.LBE251:
 411              	.LBE275:
 412              	.LBE294:
 413              	.LBE310:
 414              	.LBE327:
 415              	.LBE345:
 416              	.LBE364:
 417              	.LBE384:
 418              	.LBE398:
 419              	.LBE412:
 420              	.LBE429:
 421              	.LBE445:
 242:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 422              		.loc 1 242 14
 423              	.LBB446:
 424              	.LBB430:
 425              	.LBB413:
 426              	.LBB399:
 427              	.LBB385:
 428              	.LBB365:
 429              	.LBB346:
 430              	.LBB328:
 431              	.LBB311:
 432              	.LBB295:
 433              	.LBB276:
GAS LISTING /tmp/ccJ8xgIx.s 			page 17


 434              	.LBB252:
 435              	.LBB239:
 436              	.LBB200:
 437 0124 93071004 		li	a5,65
 438 0128 638AF438 		beq	s1,a5,.L42
 439              	.LBE200:
 440              	.LBE239:
 441              	.LBE252:
 442              	.LBE276:
 443              	.LBE295:
 444              	.LBE311:
 445              	.LBE328:
 446              	.LBE346:
 447              	.LBE365:
 448              	.LBE385:
 449              	.LBE399:
 450              	.LBE413:
 451              	.LBE430:
 452              	.LBE446:
 257:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 453              		.loc 1 257 14
 454              	.LBB447:
 455              	.LBB431:
 456              	.LBB414:
 457              	.LBB400:
 458              	.LBB386:
 459              	.LBB366:
 460              	.LBB347:
 461              	.LBB329:
 462              	.LBB312:
 463              	.LBB296:
 464              	.LBB277:
 465              	.LBB253:
 466              	.LBB240:
 467              	.LBB228:
 468              	.LBB201:
 469 012c 93072004 		li	a5,66
 470 0130 E394F4F6 		bne	s1,a5,.L3
 471              	.LBB202:
 258:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 472              		.loc 1 258 13
 473              	.LBB203:
 474              	.LBB204:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 475              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 476              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 477              		.loc 2 115 64 is_stmt 0
 478              	#APP
 479              	# 115 "src/../h/Riscv.hpp" 1
 480              		csrr a5, sepc
 481              	# 0 "" 2
 482              	#NO_APP
 483 0138 2334F4FC 		sd	a5,-56(s0)
 116:src/../h/Riscv.hpp **** }
 484              		.loc 2 116 5 is_stmt 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 18


 116:src/../h/Riscv.hpp **** }
 485              		.loc 2 116 12 is_stmt 0
 486 013c 833484FC 		ld	s1,-56(s0)
 487              	.LVL11:
 488              	.LBE204:
 489              	.LBE203:
 258:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 490              		.loc 1 258 38
 491 0140 93844400 		addi	s1,s1,4
 492              	.LVL12:
 259:src/Riscv.cpp **** 
 493              		.loc 1 259 13 is_stmt 1
 494              	.LBB205:
 495              	.LBB206:
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 183:src/../h/Riscv.hpp **** {
 184:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 496              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 497              		.loc 2 185 5
 498              		.loc 2 185 76 is_stmt 0
 499              	#APP
 500              	# 185 "src/../h/Riscv.hpp" 1
 186              	    return sstatus;
 501              		csrr a5, sstatus
 502              	# 0 "" 2
 503              	#NO_APP
 504 0148 2330F4FC 		sd	a5,-64(s0)
 505              		.loc 2 186 5 is_stmt 1
 506              		.loc 2 186 12 is_stmt 0
 507 014c 033904FC 		ld	s2,-64(s0)
 508              	.LVL13:
 509              	.LBE206:
 510              	.LBE205:
 261:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 511              		.loc 1 261 13 is_stmt 1
 262:src/Riscv.cpp **** 
 512              		.loc 1 262 13
 262:src/Riscv.cpp **** 
 513              		.loc 1 262 48 is_stmt 0
 514              	#APP
 515              	# 262 "src/Riscv.cpp" 1
 264:src/Riscv.cpp **** 
 516              		ld a1, 11*8(fp)
 517              	# 0 "" 2
 518              		.loc 1 264 13 is_stmt 1
 264:src/Riscv.cpp **** 
 519              		.loc 1 264 53 is_stmt 0
 520              	# 264 "src/Riscv.cpp" 1
 521              		mv a0, a1
 522              	# 0 "" 2
 523              	#NO_APP
 524 0158 1375F50F 		andi	a0,a0,0xff
 525              	.LVL14:
 266:src/Riscv.cpp ****             __putc(c);
 526              		.loc 1 266 13 is_stmt 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 19


 266:src/Riscv.cpp ****             __putc(c);
 527              		.loc 1 266 27 is_stmt 0
 528 015c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 528      83B70700 
 529              	.LVL15:
 530              	.LBB207:
 531              	.LBB208:
 133:src/../h/Riscv.hpp **** }
 532              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 533              		.loc 2 133 69 is_stmt 0
 534              	#APP
 535              	# 133 "src/../h/Riscv.hpp" 1
 536              		csrw stvec, a5
 537              	# 0 "" 2
 538              	.LVL16:
 539              	#NO_APP
 540              	.LBE208:
 541              	.LBE207:
 267:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 542              		.loc 1 267 13 is_stmt 1
 267:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 543              		.loc 1 267 19 is_stmt 0
 544 0168 97000000 		call	__putc@plt
 544      E7800000 
 545              	.LVL17:
 268:src/Riscv.cpp **** 
 546              		.loc 1 268 13 is_stmt 1
 268:src/Riscv.cpp **** 
 547              		.loc 1 268 27 is_stmt 0
 548 0170 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 548      83B70700 
 549              	.LVL18:
 550              	.LBB209:
 551              	.LBB210:
 133:src/../h/Riscv.hpp **** }
 552              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 553              		.loc 2 133 69 is_stmt 0
 554              	#APP
 555              	# 133 "src/../h/Riscv.hpp" 1
 556              		csrw stvec, a5
 557              	# 0 "" 2
 558              	.LVL19:
 559              	#NO_APP
 560              	.LBE210:
 561              	.LBE209:
 270:src/Riscv.cpp ****             w_sepc(sepc);
 562              		.loc 1 270 13 is_stmt 1
 563              	.LBB211:
 564              	.LBB212:
 187:src/../h/Riscv.hpp **** }
 188:src/../h/Riscv.hpp **** 
 189:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 190:src/../h/Riscv.hpp **** {
 191:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 565              		.loc 2 191 5
GAS LISTING /tmp/ccJ8xgIx.s 			page 20


 566              		.loc 2 191 77 is_stmt 0
 567              	#APP
 568              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 569              		csrw sstatus, s2
 570              	# 0 "" 2
 571              	.LVL20:
 572              	#NO_APP
 573              	.LBE212:
 574              	.LBE211:
 271:src/Riscv.cpp ****         }
 575              		.loc 1 271 13 is_stmt 1
 576              	.LBB213:
 577              	.LBB214:
 121:src/../h/Riscv.hpp **** }
 578              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 579              		.loc 2 121 65 is_stmt 0
 580              	#APP
 581              	# 121 "src/../h/Riscv.hpp" 1
 582              		csrw sepc, s1
 583              	# 0 "" 2
 584              	.LVL21:
 585              	#NO_APP
 586              	.LBE214:
 587              	.LBE213:
 588              	.LBE202:
 589              	.LBE201:
 590              	.LBE228:
 591              	.LBE240:
 592              	.LBE253:
 593              	.LBE277:
 594              	.LBE296:
 595              	.LBE312:
 596              	.LBE329:
 597              	.LBE347:
 598              	.LBE366:
 599              	.LBE386:
 600              	.LBE400:
 601              	.LBE414:
 602              	.LBE431:
 603              	.LBE447:
 604              		.loc 1 279 1
 605 0184 6FF05FF1 		j	.L3
 606              	.LVL22:
 607              	.L31:
 608              	.LBB448:
 609              	.LBB432:
 610              	.LBB415:
  41:src/Riscv.cpp ****     }
 611              		.loc 1 41 9 is_stmt 1
  41:src/Riscv.cpp ****     }
 612              		.loc 1 41 24 is_stmt 0
 613 0188 97000000 		call	console_handler@plt
 613      E7800000 
 614              	.LVL23:
 615 0190 6FF09FF0 		j	.L3
GAS LISTING /tmp/ccJ8xgIx.s 			page 21


 616              	.LVL24:
 617              	.L32:
 618              	.LBB401:
 619              	.LBB387:
 620              	.LBB182:
  48:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 621              		.loc 1 48 13 is_stmt 1
 622              	.LBB183:
 623              	.LBB184:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 624              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 625              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 626              		.loc 2 115 64 is_stmt 0
 627              	#APP
 628              	# 115 "src/../h/Riscv.hpp" 1
 629              		csrr a5, sepc
 630              	# 0 "" 2
 631              	#NO_APP
 632 0198 233CF4F0 		sd	a5,-232(s0)
 116:src/../h/Riscv.hpp **** }
 633              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 634              		.loc 2 116 12 is_stmt 0
 635 019c 033984F1 		ld	s2,-232(s0)
 636              	.LBE184:
 637              	.LBE183:
  48:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 638              		.loc 1 48 38
 639 01a0 13094900 		addi	s2,s2,4
 640              	.LVL25:
  49:src/Riscv.cpp **** 
 641              		.loc 1 49 13 is_stmt 1
 642              	.LBB185:
 643              	.LBB186:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 644              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 645              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 646              		.loc 2 185 76 is_stmt 0
 647              	#APP
 648              	# 185 "src/../h/Riscv.hpp" 1
 649              		csrr a5, sstatus
 650              	# 0 "" 2
 651              	#NO_APP
 652 01a8 2338F4F0 		sd	a5,-240(s0)
 186:src/../h/Riscv.hpp **** }
 653              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 654              		.loc 2 186 12 is_stmt 0
 655 01ac 833904F1 		ld	s3,-240(s0)
 656              	.LVL26:
 657              	.LBE186:
 658              	.LBE185:
  52:src/Riscv.cpp ****             _thread::Body arg2;
GAS LISTING /tmp/ccJ8xgIx.s 			page 22


 659              		.loc 1 52 13 is_stmt 1
  53:src/Riscv.cpp ****             uint64 arg3;
 660              		.loc 1 53 13
  54:src/Riscv.cpp ****             uint64 *arg4;
 661              		.loc 1 54 13
  55:src/Riscv.cpp **** 
 662              		.loc 1 55 13
  57:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 663              		.loc 1 57 13
  57:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 664              		.loc 1 57 48 is_stmt 0
 665              	#APP
 666              	# 57 "src/Riscv.cpp" 1
  58:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 667              		ld a1, 11*8(fp)
 668              	# 0 "" 2
 669              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 670              		.loc 1 58 48 is_stmt 0
 671              	# 58 "src/Riscv.cpp" 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 672              		ld a2, 12*8(fp)
 673              	# 0 "" 2
 674              		.loc 1 59 13 is_stmt 1
  59:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 675              		.loc 1 59 48 is_stmt 0
 676              	# 59 "src/Riscv.cpp" 1
  60:src/Riscv.cpp **** 
 677              		ld a3, 13*8(fp)
 678              	# 0 "" 2
 679              		.loc 1 60 13 is_stmt 1
  60:src/Riscv.cpp **** 
 680              		.loc 1 60 48 is_stmt 0
 681              	# 60 "src/Riscv.cpp" 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 682              		ld a4, 14*8(fp)
 683              	# 0 "" 2
 684              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 685              		.loc 1 63 56 is_stmt 0
 686              	# 63 "src/Riscv.cpp" 1
 687              		mv s4, a1
 688              	# 0 "" 2
 689              	.LVL27:
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 690              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 691              		.loc 1 64 56 is_stmt 0
 692              	# 64 "src/Riscv.cpp" 1
 693              		mv a0, a2
 694              	# 0 "" 2
 695              	.LVL28:
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 696              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 697              		.loc 1 65 56 is_stmt 0
 698              	# 65 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 23


 699              		mv a1, a3
 700              	# 0 "" 2
 701              	.LVL29:
  66:src/Riscv.cpp **** 
 702              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp **** 
 703              		.loc 1 66 56 is_stmt 0
 704              	# 66 "src/Riscv.cpp" 1
 705              		mv a2, a4
 706              	# 0 "" 2
 707              	.LVL30:
  69:src/Riscv.cpp ****             *arg1=t;
 708              		.loc 1 69 13 is_stmt 1
  69:src/Riscv.cpp ****             *arg1=t;
 709              		.loc 1 69 47 is_stmt 0
 710              	#NO_APP
 711 01d0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 711      E7800000 
 712              	.LVL31:
  70:src/Riscv.cpp **** 
 713              		.loc 1 70 13 is_stmt 1
  70:src/Riscv.cpp **** 
 714              		.loc 1 70 18 is_stmt 0
 715 01d8 2330AA00 		sd	a0,0(s4)
  72:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 716              		.loc 1 72 13 is_stmt 1
  73:src/Riscv.cpp ****             else ret =-1;
 717              		.loc 1 73 13
 718 01dc 630C0500 		beqz	a0,.L26
  73:src/Riscv.cpp ****             else ret =-1;
 719              		.loc 1 73 31 is_stmt 0
 720 01e0 93070000 		li	a5,0
 721              	.L9:
 722              	.LVL32:
  77:src/Riscv.cpp **** 
 723              		.loc 1 77 13 is_stmt 1
  77:src/Riscv.cpp **** 
 724              		.loc 1 77 56 is_stmt 0
 725              	#APP
 726              	# 77 "src/Riscv.cpp" 1
  79:src/Riscv.cpp ****             w_sepc(sepc);
 727              		mv a0, a5
 728              	# 0 "" 2
 729              		.loc 1 79 13 is_stmt 1
 730              	.LVL33:
 731              	#NO_APP
 732              	.LBB187:
 733              	.LBB188:
 191:src/../h/Riscv.hpp **** }
 734              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 735              		.loc 2 191 77 is_stmt 0
 736              	#APP
 737              	# 191 "src/../h/Riscv.hpp" 1
 738              		csrw sstatus, s3
 739              	# 0 "" 2
 740              	.LVL34:
GAS LISTING /tmp/ccJ8xgIx.s 			page 24


 741              	#NO_APP
 742              	.LBE188:
 743              	.LBE187:
  80:src/Riscv.cpp ****         }
 744              		.loc 1 80 13 is_stmt 1
 745              	.LBB189:
 746              	.LBB190:
 121:src/../h/Riscv.hpp **** }
 747              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 748              		.loc 2 121 65 is_stmt 0
 749              	#APP
 750              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 751              		csrw sepc, s2
 752              	# 0 "" 2
 753              		.loc 2 122 1
 754              	#NO_APP
 755 01f0 6FF0DFEE 		j	.L8
 756              	.LVL35:
 757              	.L26:
 758              	.LBE190:
 759              	.LBE189:
  74:src/Riscv.cpp **** 
 760              		.loc 1 74 22
 761 01f4 9307F0FF 		li	a5,-1
 762 01f8 6FF0DFFE 		j	.L9
 763              	.LVL36:
 764              	.L33:
 765              	.LBE182:
 766              	.LBE387:
 767              	.LBB388:
 768              	.LBB367:
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 769              		.loc 1 83 13 is_stmt 1
 770              	.LBB368:
 771              	.LBB369:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 772              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 773              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 774              		.loc 2 115 64 is_stmt 0
 775              	#APP
 776              	# 115 "src/../h/Riscv.hpp" 1
 777              		csrr a5, sepc
 778              	# 0 "" 2
 779              	#NO_APP
 780 0200 2334F4F2 		sd	a5,-216(s0)
 116:src/../h/Riscv.hpp **** }
 781              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 782              		.loc 2 116 12 is_stmt 0
 783 0204 833484F2 		ld	s1,-216(s0)
 784              	.LVL37:
 785              	.LBE369:
 786              	.LBE368:
GAS LISTING /tmp/ccJ8xgIx.s 			page 25


  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 787              		.loc 1 83 38
 788 0208 93844400 		addi	s1,s1,4
 789              	.LVL38:
  84:src/Riscv.cpp ****             //kmem_alloc
 790              		.loc 1 84 13 is_stmt 1
 791              	.LBB370:
 792              	.LBB371:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 793              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 794              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 795              		.loc 2 185 76 is_stmt 0
 796              	#APP
 797              	# 185 "src/../h/Riscv.hpp" 1
 798              		csrr a5, sstatus
 799              	# 0 "" 2
 800              	#NO_APP
 801 0210 2330F4F2 		sd	a5,-224(s0)
 186:src/../h/Riscv.hpp **** }
 802              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 803              		.loc 2 186 12 is_stmt 0
 804 0214 033904F2 		ld	s2,-224(s0)
 805              	.LVL39:
 806              	.LBE371:
 807              	.LBE370:
  86:src/Riscv.cpp **** 
 808              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 809              		.loc 1 86 48 is_stmt 0
 810              	#APP
 811              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 812              		ld a0, 11*8(fp)
 813              	# 0 "" 2
 814              		.loc 1 88 13 is_stmt 1
  88:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 815              		.loc 1 88 56 is_stmt 0
 816              	# 88 "src/Riscv.cpp" 1
 817              		mv a0, a0
 818              	# 0 "" 2
 819              	.LVL40:
  89:src/Riscv.cpp **** 
 820              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp **** 
 821              		.loc 1 89 61 is_stmt 0
 822              	#NO_APP
 823 0220 13156500 		slli	a0,a0,6
 824              	.LVL41:
 825 0224 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 825      E7800000 
 826              	.LVL42:
  92:src/Riscv.cpp **** 
 827              		.loc 1 92 13 is_stmt 1
  92:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJ8xgIx.s 			page 26


 828              		.loc 1 92 56 is_stmt 0
 829              	#APP
 830              	# 92 "src/Riscv.cpp" 1
  94:src/Riscv.cpp ****             w_sepc(sepc);
 831              		mv a0, a0
 832              	# 0 "" 2
 833              		.loc 1 94 13 is_stmt 1
 834              	.LVL43:
 835              	#NO_APP
 836              	.LBB372:
 837              	.LBB373:
 191:src/../h/Riscv.hpp **** }
 838              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 839              		.loc 2 191 77 is_stmt 0
 840              	#APP
 841              	# 191 "src/../h/Riscv.hpp" 1
 842              		csrw sstatus, s2
 843              	# 0 "" 2
 844              	.LVL44:
 845              	#NO_APP
 846              	.LBE373:
 847              	.LBE372:
  95:src/Riscv.cpp ****         }
 848              		.loc 1 95 13 is_stmt 1
 849              	.LBB374:
 850              	.LBB375:
 121:src/../h/Riscv.hpp **** }
 851              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 852              		.loc 2 121 65 is_stmt 0
 853              	#APP
 854              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 855              		csrw sepc, s1
 856              	# 0 "" 2
 857              		.loc 2 122 1
 858              	#NO_APP
 859 0238 6FF01FE6 		j	.L3
 860              	.LVL45:
 861              	.L34:
 862              	.LBE375:
 863              	.LBE374:
 864              	.LBE367:
 865              	.LBB376:
 866              	.LBB348:
  98:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 867              		.loc 1 98 13 is_stmt 1
 868              	.LBB349:
 869              	.LBB350:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 870              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 871              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 872              		.loc 2 115 64 is_stmt 0
 873              	#APP
GAS LISTING /tmp/ccJ8xgIx.s 			page 27


 874              	# 115 "src/../h/Riscv.hpp" 1
 875              		csrr a5, sepc
 876              	# 0 "" 2
 877              	#NO_APP
 878 0240 233CF4F2 		sd	a5,-200(s0)
 116:src/../h/Riscv.hpp **** }
 879              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 880              		.loc 2 116 12 is_stmt 0
 881 0244 833484F3 		ld	s1,-200(s0)
 882              	.LVL46:
 883              	.LBE350:
 884              	.LBE349:
  98:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 885              		.loc 1 98 38
 886 0248 93844400 		addi	s1,s1,4
 887              	.LVL47:
  99:src/Riscv.cpp **** 
 888              		.loc 1 99 13 is_stmt 1
 889              	.LBB351:
 890              	.LBB352:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 891              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 892              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 893              		.loc 2 185 76 is_stmt 0
 894              	#APP
 895              	# 185 "src/../h/Riscv.hpp" 1
 896              		csrr a5, sstatus
 897              	# 0 "" 2
 898              	#NO_APP
 899 0250 2338F4F2 		sd	a5,-208(s0)
 186:src/../h/Riscv.hpp **** }
 900              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 901              		.loc 2 186 12 is_stmt 0
 902 0254 033904F3 		ld	s2,-208(s0)
 903              	.LVL48:
 904              	.LBE352:
 905              	.LBE351:
 101:src/Riscv.cpp **** 
 906              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp **** 
 907              		.loc 1 101 48 is_stmt 0
 908              	#APP
 909              	# 101 "src/Riscv.cpp" 1
 103:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 910              		ld a0, 11*8(fp)
 911              	# 0 "" 2
 912              		.loc 1 103 13 is_stmt 1
 103:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 913              		.loc 1 103 56 is_stmt 0
 914              	# 103 "src/Riscv.cpp" 1
 915              		mv a0, a0
 916              	# 0 "" 2
 917              	.LVL49:
GAS LISTING /tmp/ccJ8xgIx.s 			page 28


 104:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 918              		.loc 1 104 13 is_stmt 1
 104:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 919              		.loc 1 104 49 is_stmt 0
 920              	#NO_APP
 921 0260 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 921      E7800000 
 922              	.LVL50:
 105:src/Riscv.cpp **** 
 923              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp **** 
 924              		.loc 1 105 56 is_stmt 0
 925              	#APP
 926              	# 105 "src/Riscv.cpp" 1
 107:src/Riscv.cpp ****             w_sepc(sepc);
 927              		mv a0, a0
 928              	# 0 "" 2
 929              		.loc 1 107 13 is_stmt 1
 930              	.LVL51:
 931              	#NO_APP
 932              	.LBB353:
 933              	.LBB354:
 191:src/../h/Riscv.hpp **** }
 934              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 935              		.loc 2 191 77 is_stmt 0
 936              	#APP
 937              	# 191 "src/../h/Riscv.hpp" 1
 938              		csrw sstatus, s2
 939              	# 0 "" 2
 940              	.LVL52:
 941              	#NO_APP
 942              	.LBE354:
 943              	.LBE353:
 108:src/Riscv.cpp ****         }
 944              		.loc 1 108 13 is_stmt 1
 945              	.LBB355:
 946              	.LBB356:
 121:src/../h/Riscv.hpp **** }
 947              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 948              		.loc 2 121 65 is_stmt 0
 949              	#APP
 950              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 951              		csrw sepc, s1
 952              	# 0 "" 2
 953              		.loc 2 122 1
 954              	#NO_APP
 955 0274 6FF05FE2 		j	.L3
 956              	.LVL53:
 957              	.L35:
 958              	.LBE356:
 959              	.LBE355:
 960              	.LBE348:
 961              	.LBB357:
 962              	.LBB330:
GAS LISTING /tmp/ccJ8xgIx.s 			page 29


 112:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 963              		.loc 1 112 13 is_stmt 1
 964              	.LBB331:
 965              	.LBB332:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 966              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 967              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 968              		.loc 2 115 64 is_stmt 0
 969              	#APP
 970              	# 115 "src/../h/Riscv.hpp" 1
 971              		csrr a5, sepc
 972              	# 0 "" 2
 973              	#NO_APP
 974 027c 2334F4F4 		sd	a5,-184(s0)
 116:src/../h/Riscv.hpp **** }
 975              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 976              		.loc 2 116 12 is_stmt 0
 977 0280 833484F4 		ld	s1,-184(s0)
 978              	.LVL54:
 979              	.LBE332:
 980              	.LBE331:
 112:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 981              		.loc 1 112 38
 982 0284 93844400 		addi	s1,s1,4
 983              	.LVL55:
 113:src/Riscv.cpp **** 
 984              		.loc 1 113 13 is_stmt 1
 985              	.LBB333:
 986              	.LBB334:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 987              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 988              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 989              		.loc 2 185 76 is_stmt 0
 990              	#APP
 991              	# 185 "src/../h/Riscv.hpp" 1
 992              		csrr a5, sstatus
 993              	# 0 "" 2
 994              	#NO_APP
 995 028c 2330F4F4 		sd	a5,-192(s0)
 186:src/../h/Riscv.hpp **** }
 996              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 997              		.loc 2 186 12 is_stmt 0
 998 0290 033904F4 		ld	s2,-192(s0)
 999              	.LVL56:
 1000              	.LBE334:
 1001              	.LBE333:
 115:src/Riscv.cpp ****             _thread::dispatch();
 1002              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             _thread::dispatch();
 1003              		.loc 1 115 31 is_stmt 0
 1004 0294 97070000 		la	a5,_ZN7_thread7runningE
GAS LISTING /tmp/ccJ8xgIx.s 			page 30


 1004      83B70700 
 1005 029c 83B70700 		ld	a5,0(a5)
 115:src/Riscv.cpp ****             _thread::dispatch();
 1006              		.loc 1 115 39
 1007 02a0 13071000 		li	a4,1
 1008 02a4 2384E702 		sb	a4,40(a5)
 116:src/Riscv.cpp **** 
 1009              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
 1010              		.loc 1 116 30 is_stmt 0
 1011 02a8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1011      E7800000 
 1012              	.LVL57:
 118:src/Riscv.cpp ****             w_sepc(sepc);
 1013              		.loc 1 118 13 is_stmt 1
 1014              	.LBB335:
 1015              	.LBB336:
 191:src/../h/Riscv.hpp **** }
 1016              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1017              		.loc 2 191 77 is_stmt 0
 1018              	#APP
 1019              	# 191 "src/../h/Riscv.hpp" 1
 1020              		csrw sstatus, s2
 1021              	# 0 "" 2
 1022              	.LVL58:
 1023              	#NO_APP
 1024              	.LBE336:
 1025              	.LBE335:
 119:src/Riscv.cpp **** 
 1026              		.loc 1 119 13 is_stmt 1
 1027              	.LBB337:
 1028              	.LBB338:
 121:src/../h/Riscv.hpp **** }
 1029              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1030              		.loc 2 121 65 is_stmt 0
 1031              	#APP
 1032              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1033              		csrw sepc, s1
 1034              	# 0 "" 2
 1035              		.loc 2 122 1
 1036              	#NO_APP
 1037 02b8 6FF01FDE 		j	.L3
 1038              	.LVL59:
 1039              	.L36:
 1040              	.LBE338:
 1041              	.LBE337:
 1042              	.LBE330:
 1043              	.LBB339:
 1044              	.LBB313:
 125:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1045              		.loc 1 125 13 is_stmt 1
 1046              	.LBB314:
 1047              	.LBB315:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
GAS LISTING /tmp/ccJ8xgIx.s 			page 31


 1048              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1049              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1050              		.loc 2 115 64 is_stmt 0
 1051              	#APP
 1052              	# 115 "src/../h/Riscv.hpp" 1
 1053              		csrr a5, sepc
 1054              	# 0 "" 2
 1055              	#NO_APP
 1056 02c0 233CF4F4 		sd	a5,-168(s0)
 116:src/../h/Riscv.hpp **** }
 1057              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1058              		.loc 2 116 12 is_stmt 0
 1059 02c4 833484F5 		ld	s1,-168(s0)
 1060              	.LVL60:
 1061              	.LBE315:
 1062              	.LBE314:
 125:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1063              		.loc 1 125 38
 1064 02c8 93844400 		addi	s1,s1,4
 1065              	.LVL61:
 126:src/Riscv.cpp **** 
 1066              		.loc 1 126 13 is_stmt 1
 1067              	.LBB316:
 1068              	.LBB317:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1069              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1070              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1071              		.loc 2 185 76 is_stmt 0
 1072              	#APP
 1073              	# 185 "src/../h/Riscv.hpp" 1
 1074              		csrr a5, sstatus
 1075              	# 0 "" 2
 1076              	#NO_APP
 1077 02d0 2338F4F4 		sd	a5,-176(s0)
 186:src/../h/Riscv.hpp **** }
 1078              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1079              		.loc 2 186 12 is_stmt 0
 1080 02d4 033904F5 		ld	s2,-176(s0)
 1081              	.LVL62:
 1082              	.LBE317:
 1083              	.LBE316:
 129:src/Riscv.cpp **** 
 1084              		.loc 1 129 13 is_stmt 1
 129:src/Riscv.cpp **** 
 1085              		.loc 1 129 30 is_stmt 0
 1086 02d8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1086      E7800000 
 1087              	.LVL63:
 131:src/Riscv.cpp ****             w_sepc(sepc);
 1088              		.loc 1 131 13 is_stmt 1
 1089              	.LBB318:
GAS LISTING /tmp/ccJ8xgIx.s 			page 32


 1090              	.LBB319:
 191:src/../h/Riscv.hpp **** }
 1091              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1092              		.loc 2 191 77 is_stmt 0
 1093              	#APP
 1094              	# 191 "src/../h/Riscv.hpp" 1
 1095              		csrw sstatus, s2
 1096              	# 0 "" 2
 1097              	.LVL64:
 1098              	#NO_APP
 1099              	.LBE319:
 1100              	.LBE318:
 132:src/Riscv.cpp ****         }
 1101              		.loc 1 132 13 is_stmt 1
 1102              	.LBB320:
 1103              	.LBB321:
 121:src/../h/Riscv.hpp **** }
 1104              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1105              		.loc 2 121 65 is_stmt 0
 1106              	#APP
 1107              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1108              		csrw sepc, s1
 1109              	# 0 "" 2
 1110              		.loc 2 122 1
 1111              	#NO_APP
 1112 02e8 6FF01FDB 		j	.L3
 1113              	.LVL65:
 1114              	.L37:
 1115              	.LBE321:
 1116              	.LBE320:
 1117              	.LBE313:
 1118              	.LBB322:
 1119              	.LBB297:
 137:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1120              		.loc 1 137 13 is_stmt 1
 1121              	.LBB298:
 1122              	.LBB299:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1123              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1124              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1125              		.loc 2 115 64 is_stmt 0
 1126              	#APP
 1127              	# 115 "src/../h/Riscv.hpp" 1
 1128              		csrr a5, sepc
 1129              	# 0 "" 2
 1130              	#NO_APP
 1131 02f0 2334F4F6 		sd	a5,-152(s0)
 116:src/../h/Riscv.hpp **** }
 1132              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1133              		.loc 2 116 12 is_stmt 0
 1134 02f4 833484F6 		ld	s1,-152(s0)
GAS LISTING /tmp/ccJ8xgIx.s 			page 33


 1135              	.LVL66:
 1136              	.LBE299:
 1137              	.LBE298:
 137:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1138              		.loc 1 137 38
 1139 02f8 93844400 		addi	s1,s1,4
 1140              	.LVL67:
 138:src/Riscv.cpp **** 
 1141              		.loc 1 138 13 is_stmt 1
 1142              	.LBB300:
 1143              	.LBB301:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1144              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1145              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1146              		.loc 2 185 76 is_stmt 0
 1147              	#APP
 1148              	# 185 "src/../h/Riscv.hpp" 1
 1149              		csrr a5, sstatus
 1150              	# 0 "" 2
 1151              	#NO_APP
 1152 0300 2330F4F6 		sd	a5,-160(s0)
 186:src/../h/Riscv.hpp **** }
 1153              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1154              		.loc 2 186 12 is_stmt 0
 1155 0304 033904F6 		ld	s2,-160(s0)
 1156              	.LVL68:
 1157              	.LBE301:
 1158              	.LBE300:
 140:src/Riscv.cpp ****             _thread::dispatch();
 1159              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp ****             _thread::dispatch();
 1160              		.loc 1 140 39 is_stmt 0
 1161 0308 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1161      83B70700 
 1162 0310 23B00700 		sd	zero,0(a5)
 141:src/Riscv.cpp **** 
 1163              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 1164              		.loc 1 141 30 is_stmt 0
 1165 0314 97000000 		call	_ZN7_thread8dispatchEv@plt
 1165      E7800000 
 1166              	.LVL69:
 143:src/Riscv.cpp ****             w_sepc(sepc);
 1167              		.loc 1 143 13 is_stmt 1
 1168              	.LBB302:
 1169              	.LBB303:
 191:src/../h/Riscv.hpp **** }
 1170              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1171              		.loc 2 191 77 is_stmt 0
 1172              	#APP
 1173              	# 191 "src/../h/Riscv.hpp" 1
 1174              		csrw sstatus, s2
 1175              	# 0 "" 2
GAS LISTING /tmp/ccJ8xgIx.s 			page 34


 1176              	.LVL70:
 1177              	#NO_APP
 1178              	.LBE303:
 1179              	.LBE302:
 144:src/Riscv.cpp ****         }
 1180              		.loc 1 144 13 is_stmt 1
 1181              	.LBB304:
 1182              	.LBB305:
 121:src/../h/Riscv.hpp **** }
 1183              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1184              		.loc 2 121 65 is_stmt 0
 1185              	#APP
 1186              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1187              		csrw sepc, s1
 1188              	# 0 "" 2
 1189              		.loc 2 122 1
 1190              	#NO_APP
 1191 0324 6FF05FD7 		j	.L3
 1192              	.LVL71:
 1193              	.L38:
 1194              	.LBE305:
 1195              	.LBE304:
 1196              	.LBE297:
 1197              	.LBB306:
 1198              	.LBB278:
 147:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1199              		.loc 1 147 13 is_stmt 1
 1200              	.LBB279:
 1201              	.LBB280:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1202              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1203              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1204              		.loc 2 115 64 is_stmt 0
 1205              	#APP
 1206              	# 115 "src/../h/Riscv.hpp" 1
 1207              		csrr a5, sepc
 1208              	# 0 "" 2
 1209              	#NO_APP
 1210 032c 233CF4F6 		sd	a5,-136(s0)
 116:src/../h/Riscv.hpp **** }
 1211              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1212              		.loc 2 116 12 is_stmt 0
 1213 0330 833484F7 		ld	s1,-136(s0)
 1214              	.LVL72:
 1215              	.LBE280:
 1216              	.LBE279:
 147:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1217              		.loc 1 147 38
 1218 0334 93844400 		addi	s1,s1,4
 1219              	.LVL73:
 148:src/Riscv.cpp **** 
 1220              		.loc 1 148 13 is_stmt 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 35


 1221              	.LBB281:
 1222              	.LBB282:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1223              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1224              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1225              		.loc 2 185 76 is_stmt 0
 1226              	#APP
 1227              	# 185 "src/../h/Riscv.hpp" 1
 1228              		csrr a5, sstatus
 1229              	# 0 "" 2
 1230              	#NO_APP
 1231 033c 2338F4F6 		sd	a5,-144(s0)
 186:src/../h/Riscv.hpp **** }
 1232              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1233              		.loc 2 186 12 is_stmt 0
 1234 0340 033904F7 		ld	s2,-144(s0)
 1235              	.LVL74:
 1236              	.LBE282:
 1237              	.LBE281:
 150:src/Riscv.cpp ****            uint64 arg2;
 1238              		.loc 1 150 12 is_stmt 1
 151:src/Riscv.cpp **** 
 1239              		.loc 1 151 12
 153:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1240              		.loc 1 153 13
 153:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1241              		.loc 1 153 48 is_stmt 0
 1242              	#APP
 1243              	# 153 "src/Riscv.cpp" 1
 154:src/Riscv.cpp **** 
 1244              		ld a1, 11*8(fp)
 1245              	# 0 "" 2
 1246              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp **** 
 1247              		.loc 1 154 48 is_stmt 0
 1248              	# 154 "src/Riscv.cpp" 1
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1249              		ld a2, 12*8(fp)
 1250              	# 0 "" 2
 1251              		.loc 1 156 13 is_stmt 1
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1252              		.loc 1 156 56 is_stmt 0
 1253              	# 156 "src/Riscv.cpp" 1
 1254              		mv s3, a1
 1255              	# 0 "" 2
 1256              	.LVL75:
 157:src/Riscv.cpp **** 
 1257              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp **** 
 1258              		.loc 1 157 56 is_stmt 0
 1259              	# 157 "src/Riscv.cpp" 1
 1260              		mv s4, a2
 1261              	# 0 "" 2
 1262              	.LVL76:
GAS LISTING /tmp/ccJ8xgIx.s 			page 36


 159:src/Riscv.cpp ****             sem->opened=true;
 1263              		.loc 1 159 13 is_stmt 1
 159:src/Riscv.cpp ****             sem->opened=true;
 1264              		.loc 1 159 50 is_stmt 0
 1265              	#NO_APP
 1266 0354 13058001 		li	a0,24
 1267 0358 97000000 		call	_ZN10KSemaphorenwEm@plt
 1267      E7800000 
 1268              	.LVL77:
 1269              	.LBB283:
 1270              	.LBB284:
 1271              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1272              		.loc 3 14 40
 1273 0360 23224501 		sw	s4,4(a0)
 1274              	.LVL78:
 1275              	.LBB285:
 1276              	.LBB286:
 1277              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
GAS LISTING /tmp/ccJ8xgIx.s 			page 37


  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1278              		.loc 4 26 29
 1279 0364 23340500 		sd	zero,8(a0)
 1280 0368 23380500 		sd	zero,16(a0)
 1281              	.LVL79:
 1282              	.LBE286:
 1283              	.LBE285:
 1284              	.LBE284:
 1285              	.LBE283:
 160:src/Riscv.cpp ****             *arg1=sem;
 1286              		.loc 1 160 13 is_stmt 1
 160:src/Riscv.cpp ****             *arg1=sem;
 1287              		.loc 1 160 24 is_stmt 0
 1288 036c 93071000 		li	a5,1
 1289 0370 2300F500 		sb	a5,0(a0)
 161:src/Riscv.cpp **** 
 1290              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp **** 
 1291              		.loc 1 161 18 is_stmt 0
 1292 0374 23B0A900 		sd	a0,0(s3)
 163:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1293              		.loc 1 163 13 is_stmt 1
 1294              	.LVL80:
 164:src/Riscv.cpp ****             else ret=-1;
 1295              		.loc 1 164 13
 1296 0378 630C0500 		beqz	a0,.L27
 164:src/Riscv.cpp ****             else ret=-1;
 1297              		.loc 1 164 33 is_stmt 0
 1298 037c 93070000 		li	a5,0
 1299              	.L16:
 1300              	.LVL81:
 167:src/Riscv.cpp **** 
 1301              		.loc 1 167 13 is_stmt 1
 167:src/Riscv.cpp **** 
 1302              		.loc 1 167 56 is_stmt 0
 1303              	#APP
 1304              	# 167 "src/Riscv.cpp" 1
 169:src/Riscv.cpp ****             w_sepc(sepc);
 1305              		mv a0, a5
 1306              	# 0 "" 2
 1307              		.loc 1 169 13 is_stmt 1
 1308              	.LVL82:
 1309              	#NO_APP
 1310              	.LBB287:
 1311              	.LBB288:
 191:src/../h/Riscv.hpp **** }
 1312              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1313              		.loc 2 191 77 is_stmt 0
 1314              	#APP
 1315              	# 191 "src/../h/Riscv.hpp" 1
 1316              		csrw sstatus, s2
 1317              	# 0 "" 2
 1318              	.LVL83:
 1319              	#NO_APP
 1320              	.LBE288:
 1321              	.LBE287:
GAS LISTING /tmp/ccJ8xgIx.s 			page 38


 170:src/Riscv.cpp ****         }
 1322              		.loc 1 170 13 is_stmt 1
 1323              	.LBB289:
 1324              	.LBB290:
 121:src/../h/Riscv.hpp **** }
 1325              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1326              		.loc 2 121 65 is_stmt 0
 1327              	#APP
 1328              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1329              		csrw sepc, s1
 1330              	# 0 "" 2
 1331              		.loc 2 122 1
 1332              	#NO_APP
 1333 038c 6FF0DFD0 		j	.L3
 1334              	.LVL84:
 1335              	.L27:
 1336              	.LBE290:
 1337              	.LBE289:
 165:src/Riscv.cpp **** 
 1338              		.loc 1 165 21
 1339 0390 9307F0FF 		li	a5,-1
 1340 0394 6FF0DFFE 		j	.L16
 1341              	.LVL85:
 1342              	.L39:
 1343              	.LBE278:
 1344              	.LBB291:
 1345              	.LBB254:
 173:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1346              		.loc 1 173 13 is_stmt 1
 1347              	.LBB255:
 1348              	.LBB256:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1349              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1350              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1351              		.loc 2 115 64 is_stmt 0
 1352              	#APP
 1353              	# 115 "src/../h/Riscv.hpp" 1
 1354              		csrr a5, sepc
 1355              	# 0 "" 2
 1356              	#NO_APP
 1357 039c 2334F4F8 		sd	a5,-120(s0)
 116:src/../h/Riscv.hpp **** }
 1358              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1359              		.loc 2 116 12 is_stmt 0
 1360 03a0 833984F8 		ld	s3,-120(s0)
 1361              	.LBE256:
 1362              	.LBE255:
 173:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1363              		.loc 1 173 38
 1364 03a4 93894900 		addi	s3,s3,4
 1365              	.LVL86:
 174:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJ8xgIx.s 			page 39


 1366              		.loc 1 174 13 is_stmt 1
 1367              	.LBB257:
 1368              	.LBB258:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1369              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1370              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1371              		.loc 2 185 76 is_stmt 0
 1372              	#APP
 1373              	# 185 "src/../h/Riscv.hpp" 1
 1374              		csrr a5, sstatus
 1375              	# 0 "" 2
 1376              	#NO_APP
 1377 03ac 2330F4F8 		sd	a5,-128(s0)
 186:src/../h/Riscv.hpp **** }
 1378              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1379              		.loc 2 186 12 is_stmt 0
 1380 03b0 033A04F8 		ld	s4,-128(s0)
 1381              	.LVL87:
 1382              	.LBE258:
 1383              	.LBE257:
 176:src/Riscv.cpp **** 
 1384              		.loc 1 176 13 is_stmt 1
 179:src/Riscv.cpp **** 
 1385              		.loc 1 179 13
 179:src/Riscv.cpp **** 
 1386              		.loc 1 179 48 is_stmt 0
 1387              	#APP
 1388              	# 179 "src/Riscv.cpp" 1
 181:src/Riscv.cpp **** 
 1389              		ld a1, 11*8(fp)
 1390              	# 0 "" 2
 1391              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp **** 
 1392              		.loc 1 181 56 is_stmt 0
 1393              	# 181 "src/Riscv.cpp" 1
 1394              		mv s1, a1
 1395              	# 0 "" 2
 1396              	.LVL88:
 183:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1397              		.loc 1 183 13 is_stmt 1
 1398              	#NO_APP
 1399 03bc 6F000003 		j	.L20
 1400              	.LVL89:
 1401              	.L19:
 1402              	.LBB259:
 1403              	.LBB260:
 1404              	.LBB261:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
GAS LISTING /tmp/ccJ8xgIx.s 			page 40


  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1405              		.loc 4 72 12 is_stmt 0
 1406 03c0 03390500 		ld	s2,0(a0)
 1407              	.LVL90:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1408              		.loc 4 73 35
 1409 03c4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1409      E7800000 
 1410              	.LVL91:
 1411              	.LBE261:
 1412              	.LBE260:
 187:src/Riscv.cpp ****                 sem->val++;
 1413              		.loc 1 187 17 is_stmt 1
 1414              	.LBB263:
 1415              	.LBB264:
 1416              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
GAS LISTING /tmp/ccJ8xgIx.s 			page 41


   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void setDeblocked(){
  31:src/../h/_thread.hpp ****         deblocked = true;
 1417              		.loc 5 31 9
 1418              		.loc 5 31 19 is_stmt 0
 1419 03cc 93071000 		li	a5,1
 1420 03d0 230CF902 		sb	a5,56(s2)
 1421              	.LVL92:
 1422              	.LBE264:
 1423              	.LBE263:
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1424              		.loc 1 188 17 is_stmt 1
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1425              		.loc 1 188 22 is_stmt 0
 1426 03d4 83A74400 		lw	a5,4(s1)
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1427              		.loc 1 188 25
 1428 03d8 9B871700 		addiw	a5,a5,1
 1429 03dc 23A2F400 		sw	a5,4(s1)
 189:src/Riscv.cpp ****             }
 1430              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****             }
 1431              		.loc 1 189 31 is_stmt 0
 1432 03e0 13050900 		mv	a0,s2
 1433 03e4 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1433      E7800000 
 1434              	.LVL93:
 1435              	.L20:
 1436              	.LBE259:
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1437              		.loc 1 185 13 is_stmt 1
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
GAS LISTING /tmp/ccJ8xgIx.s 			page 42


 1438              		.loc 1 185 43
 1439              	.LBB266:
 1440              	.LBB267:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1441              		.loc 4 79 14 is_stmt 0
 1442 03ec 03B58400 		ld	a0,8(s1)
 1443              		.loc 4 79 9
 1444 03f0 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1445              		.loc 4 80 22
 1446 03f4 83370500 		ld	a5,0(a0)
 1447              	.LVL94:
 1448              	.LBE267:
 1449              	.LBE266:
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1450              		.loc 1 185 43
 1451 03f8 638C0700 		beqz	a5,.L18
 1452              	.LBB268:
 186:src/Riscv.cpp ****                 t->setDeblocked();
 1453              		.loc 1 186 17 is_stmt 1
 1454              	.LVL95:
 1455              	.LBB265:
 1456              	.LBB262:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1457              		.loc 4 69 22 is_stmt 0
 1458 03fc 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1459              		.loc 4 69 9
 1460 0400 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1461              		.loc 4 70 9
 1462 0404 E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1463              		.loc 4 70 22
 1464 0408 23B80400 		sd	zero,16(s1)
 1465 040c 6FF05FFB 		j	.L19
 1466              	.LVL96:
 1467              	.L18:
 1468              	.LBE262:
 1469              	.LBE265:
 1470              	.LBE268:
 191:src/Riscv.cpp **** 
 1471              		.loc 1 191 14 is_stmt 1
 191:src/Riscv.cpp **** 
 1472              		.loc 1 191 25 is_stmt 0
 1473 0410 23800400 		sb	zero,0(s1)
 193:src/Riscv.cpp **** 
 1474              		.loc 1 193 13 is_stmt 1
 193:src/Riscv.cpp **** 
 1475              		.loc 1 193 23 is_stmt 0
 1476 0414 63880400 		beqz	s1,.L21
 193:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJ8xgIx.s 			page 43


 1477              		.loc 1 193 20 discriminator 1
 1478 0418 13850400 		mv	a0,s1
 1479 041c 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1479      E7800000 
 1480              	.LVL97:
 1481              	.L21:
 195:src/Riscv.cpp ****             w_sepc(sepc);
 1482              		.loc 1 195 13 is_stmt 1
 1483              	.LBB269:
 1484              	.LBB270:
 191:src/../h/Riscv.hpp **** }
 1485              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1486              		.loc 2 191 77 is_stmt 0
 1487              	#APP
 1488              	# 191 "src/../h/Riscv.hpp" 1
 1489              		csrw sstatus, s4
 1490              	# 0 "" 2
 1491              	.LVL98:
 1492              	#NO_APP
 1493              	.LBE270:
 1494              	.LBE269:
 196:src/Riscv.cpp ****         }
 1495              		.loc 1 196 13 is_stmt 1
 1496              	.LBB271:
 1497              	.LBB272:
 121:src/../h/Riscv.hpp **** }
 1498              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1499              		.loc 2 121 65 is_stmt 0
 1500              	#APP
 1501              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1502              		csrw sepc, s3
 1503              	# 0 "" 2
 1504              		.loc 2 122 1
 1505              	#NO_APP
 1506 042c 6FF0DFC6 		j	.L3
 1507              	.LVL99:
 1508              	.L40:
 1509              	.LBE272:
 1510              	.LBE271:
 1511              	.LBE254:
 1512              	.LBB273:
 1513              	.LBB241:
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1514              		.loc 1 199 13 is_stmt 1
 1515              	.LBB242:
 1516              	.LBB243:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1517              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1518              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1519              		.loc 2 115 64 is_stmt 0
 1520              	#APP
 1521              	# 115 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 44


 1522              		csrr a5, sepc
 1523              	# 0 "" 2
 1524              	#NO_APP
 1525 0434 233CF4F8 		sd	a5,-104(s0)
 116:src/../h/Riscv.hpp **** }
 1526              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1527              		.loc 2 116 12 is_stmt 0
 1528 0438 833484F9 		ld	s1,-104(s0)
 1529              	.LVL100:
 1530              	.LBE243:
 1531              	.LBE242:
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1532              		.loc 1 199 38
 1533 043c 93844400 		addi	s1,s1,4
 1534              	.LVL101:
 200:src/Riscv.cpp **** 
 1535              		.loc 1 200 13 is_stmt 1
 1536              	.LBB244:
 1537              	.LBB245:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1538              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1539              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1540              		.loc 2 185 76 is_stmt 0
 1541              	#APP
 1542              	# 185 "src/../h/Riscv.hpp" 1
 1543              		csrr a5, sstatus
 1544              	# 0 "" 2
 1545              	#NO_APP
 1546 0444 2338F4F8 		sd	a5,-112(s0)
 186:src/../h/Riscv.hpp **** }
 1547              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1548              		.loc 2 186 12 is_stmt 0
 1549 0448 033904F9 		ld	s2,-112(s0)
 1550              	.LVL102:
 1551              	.LBE245:
 1552              	.LBE244:
 202:src/Riscv.cpp **** 
 1553              		.loc 1 202 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1554              		.loc 1 204 13
 204:src/Riscv.cpp **** 
 1555              		.loc 1 204 48 is_stmt 0
 1556              	#APP
 1557              	# 204 "src/Riscv.cpp" 1
 206:src/Riscv.cpp **** 
 1558              		ld a1, 11*8(fp)
 1559              	# 0 "" 2
 1560              		.loc 1 206 13 is_stmt 1
 206:src/Riscv.cpp **** 
 1561              		.loc 1 206 56 is_stmt 0
 1562              	# 206 "src/Riscv.cpp" 1
 1563              		mv a0, a1
 1564              	# 0 "" 2
GAS LISTING /tmp/ccJ8xgIx.s 			page 45


 1565              	.LVL103:
 208:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1566              		.loc 1 208 13 is_stmt 1
 210:src/Riscv.cpp ****                  ret = arg1->wait();
 1567              		.loc 1 210 13
 210:src/Riscv.cpp ****                  ret = arg1->wait();
 1568              		.loc 1 210 22 is_stmt 0
 1569              	#NO_APP
 1570 0454 83470500 		lbu	a5,0(a0)
 210:src/Riscv.cpp ****                  ret = arg1->wait();
 1571              		.loc 1 210 13
 1572 0458 639C0700 		bnez	a5,.L43
 214:src/Riscv.cpp ****             }
 1573              		.loc 1 214 20
 1574 045c 1305F0FF 		li	a0,-1
 1575              	.LVL104:
 1576              	.L23:
 216:src/Riscv.cpp **** 
 1577              		.loc 1 216 13 is_stmt 1
 216:src/Riscv.cpp **** 
 1578              		.loc 1 216 56 is_stmt 0
 1579              	#APP
 1580              	# 216 "src/Riscv.cpp" 1
 218:src/Riscv.cpp ****             w_sepc(sepc);
 1581              		mv a0, a0
 1582              	# 0 "" 2
 1583              		.loc 1 218 13 is_stmt 1
 1584              	.LVL105:
 1585              	#NO_APP
 1586              	.LBB246:
 1587              	.LBB247:
 191:src/../h/Riscv.hpp **** }
 1588              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1589              		.loc 2 191 77 is_stmt 0
 1590              	#APP
 1591              	# 191 "src/../h/Riscv.hpp" 1
 1592              		csrw sstatus, s2
 1593              	# 0 "" 2
 1594              	.LVL106:
 1595              	#NO_APP
 1596              	.LBE247:
 1597              	.LBE246:
 219:src/Riscv.cpp ****         }
 1598              		.loc 1 219 13 is_stmt 1
 1599              	.LBB248:
 1600              	.LBB249:
 121:src/../h/Riscv.hpp **** }
 1601              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1602              		.loc 2 121 65 is_stmt 0
 1603              	#APP
 1604              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1605              		csrw sepc, s1
 1606              	# 0 "" 2
 1607              		.loc 2 122 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 46


 1608              	#NO_APP
 1609 046c 6FF0DFC2 		j	.L3
 1610              	.LVL107:
 1611              	.L43:
 1612              	.LBE249:
 1613              	.LBE248:
 211:src/Riscv.cpp ****             }
 1614              		.loc 1 211 18 is_stmt 1
 211:src/Riscv.cpp ****             }
 1615              		.loc 1 211 34 is_stmt 0
 1616 0470 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1616      E7800000 
 1617              	.LVL108:
 1618 0478 6FF09FFE 		j	.L23
 1619              	.LVL109:
 1620              	.L41:
 1621              	.LBE241:
 1622              	.LBB250:
 1623              	.LBB229:
 222:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1624              		.loc 1 222 13 is_stmt 1
 1625              	.LBB230:
 1626              	.LBB231:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1627              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1628              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1629              		.loc 2 115 64 is_stmt 0
 1630              	#APP
 1631              	# 115 "src/../h/Riscv.hpp" 1
 1632              		csrr a5, sepc
 1633              	# 0 "" 2
 1634              	#NO_APP
 1635 0480 2334F4FA 		sd	a5,-88(s0)
 116:src/../h/Riscv.hpp **** }
 1636              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1637              		.loc 2 116 12 is_stmt 0
 1638 0484 833484FA 		ld	s1,-88(s0)
 1639              	.LVL110:
 1640              	.LBE231:
 1641              	.LBE230:
 222:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1642              		.loc 1 222 38
 1643 0488 93844400 		addi	s1,s1,4
 1644              	.LVL111:
 223:src/Riscv.cpp **** 
 1645              		.loc 1 223 13 is_stmt 1
 1646              	.LBB232:
 1647              	.LBB233:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1648              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1649              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1650              		.loc 2 185 76 is_stmt 0
GAS LISTING /tmp/ccJ8xgIx.s 			page 47


 1651              	#APP
 1652              	# 185 "src/../h/Riscv.hpp" 1
 1653              		csrr a5, sstatus
 1654              	# 0 "" 2
 1655              	#NO_APP
 1656 0490 2330F4FA 		sd	a5,-96(s0)
 186:src/../h/Riscv.hpp **** }
 1657              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1658              		.loc 2 186 12 is_stmt 0
 1659 0494 033904FA 		ld	s2,-96(s0)
 1660              	.LVL112:
 1661              	.LBE233:
 1662              	.LBE232:
 225:src/Riscv.cpp **** 
 1663              		.loc 1 225 13 is_stmt 1
 227:src/Riscv.cpp **** 
 1664              		.loc 1 227 13
 227:src/Riscv.cpp **** 
 1665              		.loc 1 227 48 is_stmt 0
 1666              	#APP
 1667              	# 227 "src/Riscv.cpp" 1
 229:src/Riscv.cpp **** 
 1668              		ld a1, 11*8(fp)
 1669              	# 0 "" 2
 1670              		.loc 1 229 13 is_stmt 1
 229:src/Riscv.cpp **** 
 1671              		.loc 1 229 56 is_stmt 0
 1672              	# 229 "src/Riscv.cpp" 1
 1673              		mv a0, a1
 1674              	# 0 "" 2
 1675              	.LVL113:
 231:src/Riscv.cpp **** 
 1676              		.loc 1 231 13 is_stmt 1
 233:src/Riscv.cpp ****                 ret=0;
 1677              		.loc 1 233 17
 233:src/Riscv.cpp ****                 ret=0;
 1678              		.loc 1 233 29 is_stmt 0
 1679              	#NO_APP
 1680 04a0 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1680      E7800000 
 1681              	.LVL114:
 234:src/Riscv.cpp **** 
 1682              		.loc 1 234 17 is_stmt 1
 237:src/Riscv.cpp **** 
 1683              		.loc 1 237 13
 237:src/Riscv.cpp **** 
 1684              		.loc 1 237 56 is_stmt 0
 1685 04a8 93070000 		li	a5,0
 1686              	#APP
 1687              	# 237 "src/Riscv.cpp" 1
 239:src/Riscv.cpp ****             w_sepc(sepc);
 1688              		mv a0, a5
 1689              	# 0 "" 2
 1690              		.loc 1 239 13 is_stmt 1
 1691              	.LVL115:
 1692              	#NO_APP
GAS LISTING /tmp/ccJ8xgIx.s 			page 48


 1693              	.LBB234:
 1694              	.LBB235:
 191:src/../h/Riscv.hpp **** }
 1695              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1696              		.loc 2 191 77 is_stmt 0
 1697              	#APP
 1698              	# 191 "src/../h/Riscv.hpp" 1
 1699              		csrw sstatus, s2
 1700              	# 0 "" 2
 1701              	.LVL116:
 1702              	#NO_APP
 1703              	.LBE235:
 1704              	.LBE234:
 240:src/Riscv.cpp ****         }
 1705              		.loc 1 240 13 is_stmt 1
 1706              	.LBB236:
 1707              	.LBB237:
 121:src/../h/Riscv.hpp **** }
 1708              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1709              		.loc 2 121 65 is_stmt 0
 1710              	#APP
 1711              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1712              		csrw sepc, s1
 1713              	# 0 "" 2
 1714              		.loc 2 122 1
 1715              	#NO_APP
 1716 04b8 6FF01FBE 		j	.L3
 1717              	.LVL117:
 1718              	.L42:
 1719              	.LBE237:
 1720              	.LBE236:
 1721              	.LBE229:
 1722              	.LBB238:
 1723              	.LBB215:
 243:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1724              		.loc 1 243 13 is_stmt 1
 1725              	.LBB216:
 1726              	.LBB217:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1727              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1728              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1729              		.loc 2 115 64 is_stmt 0
 1730              	#APP
 1731              	# 115 "src/../h/Riscv.hpp" 1
 1732              		csrr a5, sepc
 1733              	# 0 "" 2
 1734              	#NO_APP
 1735 04c0 233CF4FA 		sd	a5,-72(s0)
 116:src/../h/Riscv.hpp **** }
 1736              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1737              		.loc 2 116 12 is_stmt 0
GAS LISTING /tmp/ccJ8xgIx.s 			page 49


 1738 04c4 833484FB 		ld	s1,-72(s0)
 1739              	.LVL118:
 1740              	.LBE217:
 1741              	.LBE216:
 243:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1742              		.loc 1 243 38
 1743 04c8 93844400 		addi	s1,s1,4
 1744              	.LVL119:
 244:src/Riscv.cpp **** 
 1745              		.loc 1 244 13 is_stmt 1
 1746              	.LBB218:
 1747              	.LBB219:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1748              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1749              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1750              		.loc 2 185 76 is_stmt 0
 1751              	#APP
 1752              	# 185 "src/../h/Riscv.hpp" 1
 1753              		csrr a5, sstatus
 1754              	# 0 "" 2
 1755              	#NO_APP
 1756 04d0 2338F4FA 		sd	a5,-80(s0)
 186:src/../h/Riscv.hpp **** }
 1757              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1758              		.loc 2 186 12 is_stmt 0
 1759 04d4 033904FB 		ld	s2,-80(s0)
 1760              	.LVL120:
 1761              	.LBE219:
 1762              	.LBE218:
 247:src/Riscv.cpp ****             char c = __getc();
 1763              		.loc 1 247 13 is_stmt 1
 247:src/Riscv.cpp ****             char c = __getc();
 1764              		.loc 1 247 27 is_stmt 0
 1765 04d8 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1765      83B70700 
 1766              	.LVL121:
 1767              	.LBB220:
 1768              	.LBB221:
 133:src/../h/Riscv.hpp **** }
 1769              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1770              		.loc 2 133 69 is_stmt 0
 1771              	#APP
 1772              	# 133 "src/../h/Riscv.hpp" 1
 1773              		csrw stvec, a5
 1774              	# 0 "" 2
 1775              	.LVL122:
 1776              	#NO_APP
 1777              	.LBE221:
 1778              	.LBE220:
 248:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1779              		.loc 1 248 13 is_stmt 1
 248:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1780              		.loc 1 248 28 is_stmt 0
GAS LISTING /tmp/ccJ8xgIx.s 			page 50


 1781 04e4 97000000 		call	__getc@plt
 1781      E7800000 
 1782              	.LVL123:
 249:src/Riscv.cpp **** 
 1783              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp **** 
 1784              		.loc 1 249 27 is_stmt 0
 1785 04ec 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1785      83B70700 
 1786              	.LVL124:
 1787              	.LBB222:
 1788              	.LBB223:
 133:src/../h/Riscv.hpp **** }
 1789              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1790              		.loc 2 133 69 is_stmt 0
 1791              	#APP
 1792              	# 133 "src/../h/Riscv.hpp" 1
 1793              		csrw stvec, a5
 1794              	# 0 "" 2
 1795              	.LVL125:
 1796              	#NO_APP
 1797              	.LBE223:
 1798              	.LBE222:
 251:src/Riscv.cpp **** 
 1799              		.loc 1 251 13 is_stmt 1
 251:src/Riscv.cpp **** 
 1800              		.loc 1 251 54 is_stmt 0
 1801              	#APP
 1802              	# 251 "src/Riscv.cpp" 1
 254:src/Riscv.cpp ****             w_sepc(sepc);
 1803              		mv a0, a0
 1804              	# 0 "" 2
 1805              		.loc 1 254 13 is_stmt 1
 1806              	.LVL126:
 1807              	#NO_APP
 1808              	.LBB224:
 1809              	.LBB225:
 191:src/../h/Riscv.hpp **** }
 1810              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1811              		.loc 2 191 77 is_stmt 0
 1812              	#APP
 1813              	# 191 "src/../h/Riscv.hpp" 1
 1814              		csrw sstatus, s2
 1815              	# 0 "" 2
 1816              	.LVL127:
 1817              	#NO_APP
 1818              	.LBE225:
 1819              	.LBE224:
 255:src/Riscv.cpp ****         }
 1820              		.loc 1 255 13 is_stmt 1
 1821              	.LBB226:
 1822              	.LBB227:
 121:src/../h/Riscv.hpp **** }
 1823              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccJ8xgIx.s 			page 51


 1824              		.loc 2 121 65 is_stmt 0
 1825              	#APP
 1826              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1827              		csrw sepc, s1
 1828              	# 0 "" 2
 1829              		.loc 2 122 1
 1830              	#NO_APP
 1831 0504 6FF05FB9 		j	.L3
 1832              	.LBE227:
 1833              	.LBE226:
 1834              	.LBE215:
 1835              	.LBE238:
 1836              	.LBE250:
 1837              	.LBE273:
 1838              	.LBE291:
 1839              	.LBE306:
 1840              	.LBE322:
 1841              	.LBE339:
 1842              	.LBE357:
 1843              	.LBE376:
 1844              	.LBE388:
 1845              	.LBE401:
 1846              	.LBE415:
 1847              	.LBE432:
 1848              	.LBE448:
 1849              		.cfi_endproc
 1850              	.LFE52:
 1852              		.align	2
 1853              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1855              	_ZN5Riscv17handleTrapConsoleEv:
 1856              	.LFB53:
 280:src/Riscv.cpp **** 
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1857              		.loc 1 282 33 is_stmt 1
 1858              		.cfi_startproc
 1859 0508 130101FE 		addi	sp,sp,-32
 1860              		.cfi_def_cfa_offset 32
 1861 050c 233C1100 		sd	ra,24(sp)
 1862 0510 23388100 		sd	s0,16(sp)
 1863              		.cfi_offset 1, -8
 1864              		.cfi_offset 8, -16
 1865 0514 13040102 		addi	s0,sp,32
 1866              		.cfi_def_cfa 8, 0
 283:src/Riscv.cpp ****     uint64 scause = r_scause();
 1867              		.loc 1 283 5
 1868              	.LBB449:
 1869              	.LBB450:
 102:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1870              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return scause;
 1871              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return scause;
 1872              		.loc 2 103 72 is_stmt 0
 1873              	#APP
 1874              	# 103 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccJ8xgIx.s 			page 52


 1875              		csrr a5, scause
 1876              	# 0 "" 2
 1877              	#NO_APP
 1878 051c 2334F4FE 		sd	a5,-24(s0)
 104:src/../h/Riscv.hpp **** }
 1879              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 1880              		.loc 2 104 12 is_stmt 0
 1881 0520 033784FE 		ld	a4,-24(s0)
 1882              	.LVL128:
 1883              	.LBE450:
 1884              	.LBE449:
 284:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1885              		.loc 1 284 5 is_stmt 1
 1886 0524 9307F0FF 		li	a5,-1
 1887 0528 9397F703 		slli	a5,a5,63
 1888 052c 93879700 		addi	a5,a5,9
 1889 0530 6302F702 		beq	a4,a5,.L48
 285:src/Riscv.cpp ****         console_handler();
 286:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 287:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1890              		.loc 1 287 12
 1891 0534 9307F0FF 		li	a5,-1
 1892 0538 9397F703 		slli	a5,a5,63
 1893 053c 93871700 		addi	a5,a5,1
 1894 0540 6304F702 		beq	a4,a5,.L49
 1895              	.LVL129:
 1896              	.L44:
 288:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 289:src/Riscv.cpp ****     }
 290:src/Riscv.cpp **** 
 291:src/Riscv.cpp **** }
 1897              		.loc 1 291 1 is_stmt 0
 1898 0544 83308101 		ld	ra,24(sp)
 1899              		.cfi_remember_state
 1900              		.cfi_restore 1
 1901 0548 03340101 		ld	s0,16(sp)
 1902              		.cfi_restore 8
 1903              		.cfi_def_cfa 2, 32
 1904 054c 13010102 		addi	sp,sp,32
 1905              		.cfi_def_cfa_offset 0
 1906 0550 67800000 		jr	ra
 1907              	.LVL130:
 1908              	.L48:
 1909              		.cfi_restore_state
 285:src/Riscv.cpp ****         console_handler();
 1910              		.loc 1 285 9 is_stmt 1
 285:src/Riscv.cpp ****         console_handler();
 1911              		.loc 1 285 24 is_stmt 0
 1912 0554 97000000 		call	console_handler@plt
 1912      E7800000 
 1913              	.LVL131:
 286:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1914              		.loc 1 286 9 is_stmt 1
 1915              	.LBB451:
 1916              	.LBB452:
 155:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccJ8xgIx.s 			page 53


 1917              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1918              		.loc 2 155 64 is_stmt 0
 1919 055c 93070020 		li	a5,512
 1920              	#APP
 1921              	# 155 "src/../h/Riscv.hpp" 1
 156:src/../h/Riscv.hpp **** 
 1922              		csrc sip, a5
 1923              	# 0 "" 2
 1924              		.loc 2 156 1
 1925              	#NO_APP
 1926 0564 6FF01FFE 		j	.L44
 1927              	.LVL132:
 1928              	.L49:
 1929              	.LBE452:
 1930              	.LBE451:
 288:src/Riscv.cpp ****     }
 1931              		.loc 1 288 9 is_stmt 1
 1932              	.LBB453:
 1933              	.LBB454:
 155:src/../h/Riscv.hpp **** }
 1934              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1935              		.loc 2 155 64 is_stmt 0
 1936 0568 93072000 		li	a5,2
 1937              	#APP
 1938              	# 155 "src/../h/Riscv.hpp" 1
 1939              		csrc sip, a5
 1940              	# 0 "" 2
 1941              	.LVL133:
 1942              	#NO_APP
 1943              	.LBE454:
 1944              	.LBE453:
 1945              		.loc 1 291 1
 1946 0570 6FF05FFD 		j	.L44
 1947              		.cfi_endproc
 1948              	.LFE53:
 1950              		.globl	_ZN5Riscv9privilegeE
 1951              		.bss
 1952              		.set	.LANCHOR0,. + 0
 1955              	_ZN5Riscv9privilegeE:
 1956 0000 00       		.zero	1
 1957              		.text
 1958              	.Letext0:
 1959              		.file 6 "src/../h/../lib/hw.h"
 1960              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1961              		.file 8 "src/../h/MemoryAllocator.hpp"
 1962              		.file 9 "src/../h/Scheduler.hpp"
 1963              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccJ8xgIx.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccJ8xgIx.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccJ8xgIx.s:13     .text:0000000000000000 .L0 
     /tmp/ccJ8xgIx.s:14     .text:0000000000000000 .L0 
     /tmp/ccJ8xgIx.s:15     .text:0000000000000004 .L0 
     /tmp/ccJ8xgIx.s:17     .text:0000000000000008 .L0 
     /tmp/ccJ8xgIx.s:19     .text:000000000000000c .L0 
     /tmp/ccJ8xgIx.s:21     .text:000000000000000c .L0 
     /tmp/ccJ8xgIx.s:22     .text:0000000000000010 .L0 
     /tmp/ccJ8xgIx.s:23     .text:0000000000000010 .L0 
     /tmp/ccJ8xgIx.s:25     .text:0000000000000014 .L0 
     /tmp/ccJ8xgIx.s:27     .text:0000000000000018 .L0 
     /tmp/ccJ8xgIx.s:33     .text:0000000000000018 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccJ8xgIx.s:36     .text:0000000000000018 .L0 
     /tmp/ccJ8xgIx.s:37     .text:0000000000000018 .L0 
     /tmp/ccJ8xgIx.s:38     .text:000000000000001c .L0 
     /tmp/ccJ8xgIx.s:45     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:46     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:47     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:48     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:49     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:50     .text:0000000000000034 .L0 
     /tmp/ccJ8xgIx.s:52     .text:0000000000000038 .L0 
     /tmp/ccJ8xgIx.s:57     .text:0000000000000038 .L0 
     /tmp/ccJ8xgIx.s:58     .text:0000000000000038 .L0 
     /tmp/ccJ8xgIx.s:59     .text:0000000000000038 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000038 .L0 
     /tmp/ccJ8xgIx.s:67     .text:0000000000000040 .L0 
     /tmp/ccJ8xgIx.s:68     .text:0000000000000040 .L0 
     /tmp/ccJ8xgIx.s:73     .text:0000000000000044 .L0 
     /tmp/ccJ8xgIx.s:74     .text:0000000000000044 .L0 
     /tmp/ccJ8xgIx.s:75     .text:0000000000000044 .L0 
       src/Riscv.cpp:27     .text:0000000000000044 .L0 
     /tmp/ccJ8xgIx.s:84     .text:0000000000000048 .L0 
     /tmp/ccJ8xgIx.s:92     .text:0000000000000058 .L0 
     /tmp/ccJ8xgIx.s:93     .text:0000000000000058 .L0 
     /tmp/ccJ8xgIx.s:95     .text:0000000000000060 .L0 
     /tmp/ccJ8xgIx.s:100    .text:0000000000000064 .L0 
     /tmp/ccJ8xgIx.s:101    .text:0000000000000064 .L0 
     /tmp/ccJ8xgIx.s:102    .text:0000000000000064 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000064 .L0 
     /tmp/ccJ8xgIx.s:110    .text:000000000000006c .L0 
     /tmp/ccJ8xgIx.s:111    .text:000000000000006c .L0 
     /tmp/ccJ8xgIx.s:118    .text:0000000000000070 .L0 
     /tmp/ccJ8xgIx.s:119    .text:0000000000000070 .L0 
     /tmp/ccJ8xgIx.s:120    .text:0000000000000070 .L0 
     /tmp/ccJ8xgIx.s:131    .text:0000000000000078 .L0 
     /tmp/ccJ8xgIx.s:132    .text:0000000000000078 .L0 
     /tmp/ccJ8xgIx.s:135    .text:0000000000000084 .L0 
     /tmp/ccJ8xgIx.s:136    .text:0000000000000084 .L0 
     /tmp/ccJ8xgIx.s:141    .text:0000000000000088 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000088 .L0 
     /tmp/ccJ8xgIx.s:148    .text:000000000000008c .L0 
     /tmp/ccJ8xgIx.s:158    .text:0000000000000090 .L0 
     /tmp/ccJ8xgIx.s:159    .text:0000000000000090 .L0 
     /tmp/ccJ8xgIx.s:160    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 55


     /tmp/ccJ8xgIx.s:172    .text:0000000000000098 .L0 
     /tmp/ccJ8xgIx.s:173    .text:000000000000009c .L0 
     /tmp/ccJ8xgIx.s:174    .text:000000000000009c .L0 
     /tmp/ccJ8xgIx.s:176    .text:00000000000000a0 .L0 
     /tmp/ccJ8xgIx.s:177    .text:00000000000000a0 .L0 
     /tmp/ccJ8xgIx.s:179    .text:00000000000000a4 .L0 
     /tmp/ccJ8xgIx.s:181    .text:00000000000000a8 .L0 
     /tmp/ccJ8xgIx.s:183    .text:00000000000000ac .L0 
     /tmp/ccJ8xgIx.s:185    .text:00000000000000b0 .L0 
     /tmp/ccJ8xgIx.s:187    .text:00000000000000b4 .L0 
     /tmp/ccJ8xgIx.s:191    .text:00000000000000b8 .L0 
     /tmp/ccJ8xgIx.s:196    .text:00000000000000b8 .L0 
     /tmp/ccJ8xgIx.s:208    .text:00000000000000c8 .L0 
     /tmp/ccJ8xgIx.s:209    .text:00000000000000c8 .L0 
     /tmp/ccJ8xgIx.s:212    .text:00000000000000cc .L0 
     /tmp/ccJ8xgIx.s:224    .text:00000000000000d4 .L0 
     /tmp/ccJ8xgIx.s:239    .text:00000000000000dc .L0 
     /tmp/ccJ8xgIx.s:253    .text:00000000000000e4 .L0 
     /tmp/ccJ8xgIx.s:269    .text:00000000000000ec .L0 
     /tmp/ccJ8xgIx.s:287    .text:00000000000000f4 .L0 
     /tmp/ccJ8xgIx.s:307    .text:00000000000000fc .L0 
     /tmp/ccJ8xgIx.s:329    .text:0000000000000104 .L0 
     /tmp/ccJ8xgIx.s:353    .text:000000000000010c .L0 
     /tmp/ccJ8xgIx.s:379    .text:0000000000000114 .L0 
     /tmp/ccJ8xgIx.s:407    .text:000000000000011c .L0 
     /tmp/ccJ8xgIx.s:437    .text:0000000000000124 .L0 
     /tmp/ccJ8xgIx.s:469    .text:000000000000012c .L0 
     /tmp/ccJ8xgIx.s:475    .text:0000000000000134 .L0 
     /tmp/ccJ8xgIx.s:476    .text:0000000000000134 .L0 
     /tmp/ccJ8xgIx.s:477    .text:0000000000000134 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000134 .L0 
     /tmp/ccJ8xgIx.s:485    .text:000000000000013c .L0 
     /tmp/ccJ8xgIx.s:486    .text:000000000000013c .L0 
     /tmp/ccJ8xgIx.s:491    .text:0000000000000140 .L0 
     /tmp/ccJ8xgIx.s:496    .text:0000000000000144 .L0 
     /tmp/ccJ8xgIx.s:497    .text:0000000000000144 .L0 
     /tmp/ccJ8xgIx.s:498    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000144 .L0 
     /tmp/ccJ8xgIx.s:506    .text:000000000000014c .L0 
     /tmp/ccJ8xgIx.s:507    .text:000000000000014c .L0 
     /tmp/ccJ8xgIx.s:512    .text:0000000000000150 .L0 
     /tmp/ccJ8xgIx.s:513    .text:0000000000000150 .L0 
       src/Riscv.cpp:262    .text:0000000000000150 .L0 
     /tmp/ccJ8xgIx.s:519    .text:0000000000000154 .L0 
       src/Riscv.cpp:264    .text:0000000000000154 .L0 
     /tmp/ccJ8xgIx.s:527    .text:000000000000015c .L0 
     /tmp/ccJ8xgIx.s:528    .text:000000000000015c .L0 
     /tmp/ccJ8xgIx.s:533    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000164 .L0 
     /tmp/ccJ8xgIx.s:543    .text:0000000000000168 .L0 
     /tmp/ccJ8xgIx.s:544    .text:0000000000000168 .L0 
     /tmp/ccJ8xgIx.s:547    .text:0000000000000170 .L0 
     /tmp/ccJ8xgIx.s:548    .text:0000000000000170 .L0 
     /tmp/ccJ8xgIx.s:553    .text:0000000000000178 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000178 .L0 
     /tmp/ccJ8xgIx.s:565    .text:000000000000017c .L0 
     /tmp/ccJ8xgIx.s:566    .text:000000000000017c .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 56


  src/../h/Riscv.hpp:191    .text:000000000000017c .L0 
     /tmp/ccJ8xgIx.s:578    .text:0000000000000180 .L0 
     /tmp/ccJ8xgIx.s:579    .text:0000000000000180 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000180 .L0 
     /tmp/ccJ8xgIx.s:605    .text:0000000000000184 .L0 
     /tmp/ccJ8xgIx.s:612    .text:0000000000000188 .L0 
     /tmp/ccJ8xgIx.s:613    .text:0000000000000188 .L0 
     /tmp/ccJ8xgIx.s:624    .text:0000000000000194 .L0 
     /tmp/ccJ8xgIx.s:625    .text:0000000000000194 .L0 
     /tmp/ccJ8xgIx.s:626    .text:0000000000000194 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000194 .L0 
     /tmp/ccJ8xgIx.s:634    .text:000000000000019c .L0 
     /tmp/ccJ8xgIx.s:635    .text:000000000000019c .L0 
     /tmp/ccJ8xgIx.s:639    .text:00000000000001a0 .L0 
     /tmp/ccJ8xgIx.s:644    .text:00000000000001a4 .L0 
     /tmp/ccJ8xgIx.s:645    .text:00000000000001a4 .L0 
     /tmp/ccJ8xgIx.s:646    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000001a4 .L0 
     /tmp/ccJ8xgIx.s:654    .text:00000000000001ac .L0 
     /tmp/ccJ8xgIx.s:655    .text:00000000000001ac .L0 
     /tmp/ccJ8xgIx.s:660    .text:00000000000001b0 .L0 
     /tmp/ccJ8xgIx.s:661    .text:00000000000001b0 .L0 
     /tmp/ccJ8xgIx.s:662    .text:00000000000001b0 .L0 
     /tmp/ccJ8xgIx.s:663    .text:00000000000001b0 .L0 
     /tmp/ccJ8xgIx.s:664    .text:00000000000001b0 .L0 
       src/Riscv.cpp:57     .text:00000000000001b0 .L0 
     /tmp/ccJ8xgIx.s:670    .text:00000000000001b4 .L0 
       src/Riscv.cpp:58     .text:00000000000001b4 .L0 
     /tmp/ccJ8xgIx.s:675    .text:00000000000001b8 .L0 
       src/Riscv.cpp:59     .text:00000000000001b8 .L0 
     /tmp/ccJ8xgIx.s:680    .text:00000000000001bc .L0 
       src/Riscv.cpp:60     .text:00000000000001bc .L0 
     /tmp/ccJ8xgIx.s:685    .text:00000000000001c0 .L0 
       src/Riscv.cpp:63     .text:00000000000001c0 .L0 
     /tmp/ccJ8xgIx.s:691    .text:00000000000001c4 .L0 
       src/Riscv.cpp:64     .text:00000000000001c4 .L0 
     /tmp/ccJ8xgIx.s:697    .text:00000000000001c8 .L0 
       src/Riscv.cpp:65     .text:00000000000001c8 .L0 
     /tmp/ccJ8xgIx.s:703    .text:00000000000001cc .L0 
       src/Riscv.cpp:66     .text:00000000000001cc .L0 
     /tmp/ccJ8xgIx.s:709    .text:00000000000001d0 .L0 
     /tmp/ccJ8xgIx.s:711    .text:00000000000001d0 .L0 
     /tmp/ccJ8xgIx.s:714    .text:00000000000001d8 .L0 
     /tmp/ccJ8xgIx.s:715    .text:00000000000001d8 .L0 
     /tmp/ccJ8xgIx.s:717    .text:00000000000001dc .L0 
     /tmp/ccJ8xgIx.s:718    .text:00000000000001dc .L0 
     /tmp/ccJ8xgIx.s:720    .text:00000000000001e0 .L0 
     /tmp/ccJ8xgIx.s:724    .text:00000000000001e4 .L0 
       src/Riscv.cpp:77     .text:00000000000001e4 .L0 
     /tmp/ccJ8xgIx.s:734    .text:00000000000001e8 .L0 
     /tmp/ccJ8xgIx.s:735    .text:00000000000001e8 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000001e8 .L0 
     /tmp/ccJ8xgIx.s:747    .text:00000000000001ec .L0 
     /tmp/ccJ8xgIx.s:748    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:121    .text:00000000000001ec .L0 
     /tmp/ccJ8xgIx.s:755    .text:00000000000001f0 .L0 
     /tmp/ccJ8xgIx.s:761    .text:00000000000001f4 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 57


     /tmp/ccJ8xgIx.s:772    .text:00000000000001fc .L0 
     /tmp/ccJ8xgIx.s:773    .text:00000000000001fc .L0 
     /tmp/ccJ8xgIx.s:774    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000001fc .L0 
     /tmp/ccJ8xgIx.s:782    .text:0000000000000204 .L0 
     /tmp/ccJ8xgIx.s:783    .text:0000000000000204 .L0 
     /tmp/ccJ8xgIx.s:788    .text:0000000000000208 .L0 
     /tmp/ccJ8xgIx.s:793    .text:000000000000020c .L0 
     /tmp/ccJ8xgIx.s:794    .text:000000000000020c .L0 
     /tmp/ccJ8xgIx.s:795    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000020c .L0 
     /tmp/ccJ8xgIx.s:803    .text:0000000000000214 .L0 
     /tmp/ccJ8xgIx.s:804    .text:0000000000000214 .L0 
     /tmp/ccJ8xgIx.s:809    .text:0000000000000218 .L0 
       src/Riscv.cpp:86     .text:0000000000000218 .L0 
     /tmp/ccJ8xgIx.s:815    .text:000000000000021c .L0 
       src/Riscv.cpp:88     .text:000000000000021c .L0 
     /tmp/ccJ8xgIx.s:821    .text:0000000000000220 .L0 
     /tmp/ccJ8xgIx.s:823    .text:0000000000000220 .L0 
     /tmp/ccJ8xgIx.s:828    .text:000000000000022c .L0 
       src/Riscv.cpp:92     .text:000000000000022c .L0 
     /tmp/ccJ8xgIx.s:838    .text:0000000000000230 .L0 
     /tmp/ccJ8xgIx.s:839    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000230 .L0 
     /tmp/ccJ8xgIx.s:851    .text:0000000000000234 .L0 
     /tmp/ccJ8xgIx.s:852    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000234 .L0 
     /tmp/ccJ8xgIx.s:859    .text:0000000000000238 .L0 
     /tmp/ccJ8xgIx.s:870    .text:000000000000023c .L0 
     /tmp/ccJ8xgIx.s:871    .text:000000000000023c .L0 
     /tmp/ccJ8xgIx.s:872    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000023c .L0 
     /tmp/ccJ8xgIx.s:880    .text:0000000000000244 .L0 
     /tmp/ccJ8xgIx.s:881    .text:0000000000000244 .L0 
     /tmp/ccJ8xgIx.s:886    .text:0000000000000248 .L0 
     /tmp/ccJ8xgIx.s:891    .text:000000000000024c .L0 
     /tmp/ccJ8xgIx.s:892    .text:000000000000024c .L0 
     /tmp/ccJ8xgIx.s:893    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000024c .L0 
     /tmp/ccJ8xgIx.s:901    .text:0000000000000254 .L0 
     /tmp/ccJ8xgIx.s:902    .text:0000000000000254 .L0 
     /tmp/ccJ8xgIx.s:907    .text:0000000000000258 .L0 
       src/Riscv.cpp:101    .text:0000000000000258 .L0 
     /tmp/ccJ8xgIx.s:913    .text:000000000000025c .L0 
       src/Riscv.cpp:103    .text:000000000000025c .L0 
     /tmp/ccJ8xgIx.s:919    .text:0000000000000260 .L0 
     /tmp/ccJ8xgIx.s:921    .text:0000000000000260 .L0 
     /tmp/ccJ8xgIx.s:924    .text:0000000000000268 .L0 
       src/Riscv.cpp:105    .text:0000000000000268 .L0 
     /tmp/ccJ8xgIx.s:934    .text:000000000000026c .L0 
     /tmp/ccJ8xgIx.s:935    .text:000000000000026c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000026c .L0 
     /tmp/ccJ8xgIx.s:947    .text:0000000000000270 .L0 
     /tmp/ccJ8xgIx.s:948    .text:0000000000000270 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000270 .L0 
     /tmp/ccJ8xgIx.s:955    .text:0000000000000274 .L0 
     /tmp/ccJ8xgIx.s:966    .text:0000000000000278 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 58


     /tmp/ccJ8xgIx.s:967    .text:0000000000000278 .L0 
     /tmp/ccJ8xgIx.s:968    .text:0000000000000278 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000278 .L0 
     /tmp/ccJ8xgIx.s:976    .text:0000000000000280 .L0 
     /tmp/ccJ8xgIx.s:977    .text:0000000000000280 .L0 
     /tmp/ccJ8xgIx.s:982    .text:0000000000000284 .L0 
     /tmp/ccJ8xgIx.s:987    .text:0000000000000288 .L0 
     /tmp/ccJ8xgIx.s:988    .text:0000000000000288 .L0 
     /tmp/ccJ8xgIx.s:989    .text:0000000000000288 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000288 .L0 
     /tmp/ccJ8xgIx.s:997    .text:0000000000000290 .L0 
     /tmp/ccJ8xgIx.s:998    .text:0000000000000290 .L0 
     /tmp/ccJ8xgIx.s:1003   .text:0000000000000294 .L0 
     /tmp/ccJ8xgIx.s:1004   .text:0000000000000294 .L0 
     /tmp/ccJ8xgIx.s:1007   .text:00000000000002a0 .L0 
     /tmp/ccJ8xgIx.s:1010   .text:00000000000002a8 .L0 
     /tmp/ccJ8xgIx.s:1011   .text:00000000000002a8 .L0 
     /tmp/ccJ8xgIx.s:1016   .text:00000000000002b0 .L0 
     /tmp/ccJ8xgIx.s:1017   .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002b0 .L0 
     /tmp/ccJ8xgIx.s:1029   .text:00000000000002b4 .L0 
     /tmp/ccJ8xgIx.s:1030   .text:00000000000002b4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002b4 .L0 
     /tmp/ccJ8xgIx.s:1037   .text:00000000000002b8 .L0 
     /tmp/ccJ8xgIx.s:1048   .text:00000000000002bc .L0 
     /tmp/ccJ8xgIx.s:1049   .text:00000000000002bc .L0 
     /tmp/ccJ8xgIx.s:1050   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002bc .L0 
     /tmp/ccJ8xgIx.s:1058   .text:00000000000002c4 .L0 
     /tmp/ccJ8xgIx.s:1059   .text:00000000000002c4 .L0 
     /tmp/ccJ8xgIx.s:1064   .text:00000000000002c8 .L0 
     /tmp/ccJ8xgIx.s:1069   .text:00000000000002cc .L0 
     /tmp/ccJ8xgIx.s:1070   .text:00000000000002cc .L0 
     /tmp/ccJ8xgIx.s:1071   .text:00000000000002cc .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002cc .L0 
     /tmp/ccJ8xgIx.s:1079   .text:00000000000002d4 .L0 
     /tmp/ccJ8xgIx.s:1080   .text:00000000000002d4 .L0 
     /tmp/ccJ8xgIx.s:1085   .text:00000000000002d8 .L0 
     /tmp/ccJ8xgIx.s:1086   .text:00000000000002d8 .L0 
     /tmp/ccJ8xgIx.s:1091   .text:00000000000002e0 .L0 
     /tmp/ccJ8xgIx.s:1092   .text:00000000000002e0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002e0 .L0 
     /tmp/ccJ8xgIx.s:1104   .text:00000000000002e4 .L0 
     /tmp/ccJ8xgIx.s:1105   .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002e4 .L0 
     /tmp/ccJ8xgIx.s:1112   .text:00000000000002e8 .L0 
     /tmp/ccJ8xgIx.s:1123   .text:00000000000002ec .L0 
     /tmp/ccJ8xgIx.s:1124   .text:00000000000002ec .L0 
     /tmp/ccJ8xgIx.s:1125   .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002ec .L0 
     /tmp/ccJ8xgIx.s:1133   .text:00000000000002f4 .L0 
     /tmp/ccJ8xgIx.s:1134   .text:00000000000002f4 .L0 
     /tmp/ccJ8xgIx.s:1139   .text:00000000000002f8 .L0 
     /tmp/ccJ8xgIx.s:1144   .text:00000000000002fc .L0 
     /tmp/ccJ8xgIx.s:1145   .text:00000000000002fc .L0 
     /tmp/ccJ8xgIx.s:1146   .text:00000000000002fc .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002fc .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 59


     /tmp/ccJ8xgIx.s:1154   .text:0000000000000304 .L0 
     /tmp/ccJ8xgIx.s:1155   .text:0000000000000304 .L0 
     /tmp/ccJ8xgIx.s:1160   .text:0000000000000308 .L0 
     /tmp/ccJ8xgIx.s:1161   .text:0000000000000308 .L0 
     /tmp/ccJ8xgIx.s:1164   .text:0000000000000314 .L0 
     /tmp/ccJ8xgIx.s:1165   .text:0000000000000314 .L0 
     /tmp/ccJ8xgIx.s:1170   .text:000000000000031c .L0 
     /tmp/ccJ8xgIx.s:1171   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000031c .L0 
     /tmp/ccJ8xgIx.s:1183   .text:0000000000000320 .L0 
     /tmp/ccJ8xgIx.s:1184   .text:0000000000000320 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000320 .L0 
     /tmp/ccJ8xgIx.s:1191   .text:0000000000000324 .L0 
     /tmp/ccJ8xgIx.s:1202   .text:0000000000000328 .L0 
     /tmp/ccJ8xgIx.s:1203   .text:0000000000000328 .L0 
     /tmp/ccJ8xgIx.s:1204   .text:0000000000000328 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000328 .L0 
     /tmp/ccJ8xgIx.s:1212   .text:0000000000000330 .L0 
     /tmp/ccJ8xgIx.s:1213   .text:0000000000000330 .L0 
     /tmp/ccJ8xgIx.s:1218   .text:0000000000000334 .L0 
     /tmp/ccJ8xgIx.s:1223   .text:0000000000000338 .L0 
     /tmp/ccJ8xgIx.s:1224   .text:0000000000000338 .L0 
     /tmp/ccJ8xgIx.s:1225   .text:0000000000000338 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000338 .L0 
     /tmp/ccJ8xgIx.s:1233   .text:0000000000000340 .L0 
     /tmp/ccJ8xgIx.s:1234   .text:0000000000000340 .L0 
     /tmp/ccJ8xgIx.s:1239   .text:0000000000000344 .L0 
     /tmp/ccJ8xgIx.s:1240   .text:0000000000000344 .L0 
     /tmp/ccJ8xgIx.s:1241   .text:0000000000000344 .L0 
       src/Riscv.cpp:153    .text:0000000000000344 .L0 
     /tmp/ccJ8xgIx.s:1247   .text:0000000000000348 .L0 
       src/Riscv.cpp:154    .text:0000000000000348 .L0 
     /tmp/ccJ8xgIx.s:1252   .text:000000000000034c .L0 
       src/Riscv.cpp:156    .text:000000000000034c .L0 
     /tmp/ccJ8xgIx.s:1258   .text:0000000000000350 .L0 
       src/Riscv.cpp:157    .text:0000000000000350 .L0 
     /tmp/ccJ8xgIx.s:1264   .text:0000000000000354 .L0 
     /tmp/ccJ8xgIx.s:1266   .text:0000000000000354 .L0 
     /tmp/ccJ8xgIx.s:1273   .text:0000000000000360 .L0 
     /tmp/ccJ8xgIx.s:1279   .text:0000000000000364 .L0 
     /tmp/ccJ8xgIx.s:1287   .text:000000000000036c .L0 
     /tmp/ccJ8xgIx.s:1288   .text:000000000000036c .L0 
     /tmp/ccJ8xgIx.s:1291   .text:0000000000000374 .L0 
     /tmp/ccJ8xgIx.s:1292   .text:0000000000000374 .L0 
     /tmp/ccJ8xgIx.s:1295   .text:0000000000000378 .L0 
     /tmp/ccJ8xgIx.s:1296   .text:0000000000000378 .L0 
     /tmp/ccJ8xgIx.s:1298   .text:000000000000037c .L0 
     /tmp/ccJ8xgIx.s:1302   .text:0000000000000380 .L0 
       src/Riscv.cpp:167    .text:0000000000000380 .L0 
     /tmp/ccJ8xgIx.s:1312   .text:0000000000000384 .L0 
     /tmp/ccJ8xgIx.s:1313   .text:0000000000000384 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000384 .L0 
     /tmp/ccJ8xgIx.s:1325   .text:0000000000000388 .L0 
     /tmp/ccJ8xgIx.s:1326   .text:0000000000000388 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000388 .L0 
     /tmp/ccJ8xgIx.s:1333   .text:000000000000038c .L0 
     /tmp/ccJ8xgIx.s:1339   .text:0000000000000390 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 60


     /tmp/ccJ8xgIx.s:1349   .text:0000000000000398 .L0 
     /tmp/ccJ8xgIx.s:1350   .text:0000000000000398 .L0 
     /tmp/ccJ8xgIx.s:1351   .text:0000000000000398 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000398 .L0 
     /tmp/ccJ8xgIx.s:1359   .text:00000000000003a0 .L0 
     /tmp/ccJ8xgIx.s:1360   .text:00000000000003a0 .L0 
     /tmp/ccJ8xgIx.s:1364   .text:00000000000003a4 .L0 
     /tmp/ccJ8xgIx.s:1369   .text:00000000000003a8 .L0 
     /tmp/ccJ8xgIx.s:1370   .text:00000000000003a8 .L0 
     /tmp/ccJ8xgIx.s:1371   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000003a8 .L0 
     /tmp/ccJ8xgIx.s:1379   .text:00000000000003b0 .L0 
     /tmp/ccJ8xgIx.s:1380   .text:00000000000003b0 .L0 
     /tmp/ccJ8xgIx.s:1385   .text:00000000000003b4 .L0 
     /tmp/ccJ8xgIx.s:1386   .text:00000000000003b4 .L0 
       src/Riscv.cpp:179    .text:00000000000003b4 .L0 
     /tmp/ccJ8xgIx.s:1392   .text:00000000000003b8 .L0 
       src/Riscv.cpp:181    .text:00000000000003b8 .L0 
     /tmp/ccJ8xgIx.s:1399   .text:00000000000003bc .L0 
     /tmp/ccJ8xgIx.s:1406   .text:00000000000003c0 .L0 
     /tmp/ccJ8xgIx.s:1409   .text:00000000000003c4 .L0 
     /tmp/ccJ8xgIx.s:1417   .text:00000000000003cc .L0 
     /tmp/ccJ8xgIx.s:1418   .text:00000000000003cc .L0 
     /tmp/ccJ8xgIx.s:1419   .text:00000000000003cc .L0 
     /tmp/ccJ8xgIx.s:1425   .text:00000000000003d4 .L0 
     /tmp/ccJ8xgIx.s:1426   .text:00000000000003d4 .L0 
     /tmp/ccJ8xgIx.s:1428   .text:00000000000003d8 .L0 
     /tmp/ccJ8xgIx.s:1431   .text:00000000000003e0 .L0 
     /tmp/ccJ8xgIx.s:1432   .text:00000000000003e0 .L0 
     /tmp/ccJ8xgIx.s:1438   .text:00000000000003ec .L0 
     /tmp/ccJ8xgIx.s:1441   .text:00000000000003ec .L0 
     /tmp/ccJ8xgIx.s:1442   .text:00000000000003ec .L0 
     /tmp/ccJ8xgIx.s:1444   .text:00000000000003f0 .L0 
     /tmp/ccJ8xgIx.s:1446   .text:00000000000003f4 .L0 
     /tmp/ccJ8xgIx.s:1451   .text:00000000000003f8 .L0 
     /tmp/ccJ8xgIx.s:1457   .text:00000000000003fc .L0 
     /tmp/ccJ8xgIx.s:1458   .text:00000000000003fc .L0 
     /tmp/ccJ8xgIx.s:1460   .text:0000000000000400 .L0 
     /tmp/ccJ8xgIx.s:1462   .text:0000000000000404 .L0 
     /tmp/ccJ8xgIx.s:1464   .text:0000000000000408 .L0 
     /tmp/ccJ8xgIx.s:1472   .text:0000000000000410 .L0 
     /tmp/ccJ8xgIx.s:1473   .text:0000000000000410 .L0 
     /tmp/ccJ8xgIx.s:1475   .text:0000000000000414 .L0 
     /tmp/ccJ8xgIx.s:1476   .text:0000000000000414 .L0 
     /tmp/ccJ8xgIx.s:1478   .text:0000000000000418 .L0 
     /tmp/ccJ8xgIx.s:1485   .text:0000000000000424 .L0 
     /tmp/ccJ8xgIx.s:1486   .text:0000000000000424 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000424 .L0 
     /tmp/ccJ8xgIx.s:1498   .text:0000000000000428 .L0 
     /tmp/ccJ8xgIx.s:1499   .text:0000000000000428 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000428 .L0 
     /tmp/ccJ8xgIx.s:1506   .text:000000000000042c .L0 
     /tmp/ccJ8xgIx.s:1517   .text:0000000000000430 .L0 
     /tmp/ccJ8xgIx.s:1518   .text:0000000000000430 .L0 
     /tmp/ccJ8xgIx.s:1519   .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000430 .L0 
     /tmp/ccJ8xgIx.s:1527   .text:0000000000000438 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 61


     /tmp/ccJ8xgIx.s:1528   .text:0000000000000438 .L0 
     /tmp/ccJ8xgIx.s:1533   .text:000000000000043c .L0 
     /tmp/ccJ8xgIx.s:1538   .text:0000000000000440 .L0 
     /tmp/ccJ8xgIx.s:1539   .text:0000000000000440 .L0 
     /tmp/ccJ8xgIx.s:1540   .text:0000000000000440 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000440 .L0 
     /tmp/ccJ8xgIx.s:1548   .text:0000000000000448 .L0 
     /tmp/ccJ8xgIx.s:1549   .text:0000000000000448 .L0 
     /tmp/ccJ8xgIx.s:1554   .text:000000000000044c .L0 
     /tmp/ccJ8xgIx.s:1555   .text:000000000000044c .L0 
       src/Riscv.cpp:204    .text:000000000000044c .L0 
     /tmp/ccJ8xgIx.s:1561   .text:0000000000000450 .L0 
       src/Riscv.cpp:206    .text:0000000000000450 .L0 
     /tmp/ccJ8xgIx.s:1567   .text:0000000000000454 .L0 
     /tmp/ccJ8xgIx.s:1568   .text:0000000000000454 .L0 
     /tmp/ccJ8xgIx.s:1570   .text:0000000000000454 .L0 
     /tmp/ccJ8xgIx.s:1572   .text:0000000000000458 .L0 
     /tmp/ccJ8xgIx.s:1574   .text:000000000000045c .L0 
     /tmp/ccJ8xgIx.s:1578   .text:0000000000000460 .L0 
       src/Riscv.cpp:216    .text:0000000000000460 .L0 
     /tmp/ccJ8xgIx.s:1588   .text:0000000000000464 .L0 
     /tmp/ccJ8xgIx.s:1589   .text:0000000000000464 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000464 .L0 
     /tmp/ccJ8xgIx.s:1601   .text:0000000000000468 .L0 
     /tmp/ccJ8xgIx.s:1602   .text:0000000000000468 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000468 .L0 
     /tmp/ccJ8xgIx.s:1609   .text:000000000000046c .L0 
     /tmp/ccJ8xgIx.s:1615   .text:0000000000000470 .L0 
     /tmp/ccJ8xgIx.s:1616   .text:0000000000000470 .L0 
     /tmp/ccJ8xgIx.s:1627   .text:000000000000047c .L0 
     /tmp/ccJ8xgIx.s:1628   .text:000000000000047c .L0 
     /tmp/ccJ8xgIx.s:1629   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000047c .L0 
     /tmp/ccJ8xgIx.s:1637   .text:0000000000000484 .L0 
     /tmp/ccJ8xgIx.s:1638   .text:0000000000000484 .L0 
     /tmp/ccJ8xgIx.s:1643   .text:0000000000000488 .L0 
     /tmp/ccJ8xgIx.s:1648   .text:000000000000048c .L0 
     /tmp/ccJ8xgIx.s:1649   .text:000000000000048c .L0 
     /tmp/ccJ8xgIx.s:1650   .text:000000000000048c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000048c .L0 
     /tmp/ccJ8xgIx.s:1658   .text:0000000000000494 .L0 
     /tmp/ccJ8xgIx.s:1659   .text:0000000000000494 .L0 
     /tmp/ccJ8xgIx.s:1664   .text:0000000000000498 .L0 
     /tmp/ccJ8xgIx.s:1665   .text:0000000000000498 .L0 
       src/Riscv.cpp:227    .text:0000000000000498 .L0 
     /tmp/ccJ8xgIx.s:1671   .text:000000000000049c .L0 
       src/Riscv.cpp:229    .text:000000000000049c .L0 
     /tmp/ccJ8xgIx.s:1677   .text:00000000000004a0 .L0 
     /tmp/ccJ8xgIx.s:1678   .text:00000000000004a0 .L0 
     /tmp/ccJ8xgIx.s:1680   .text:00000000000004a0 .L0 
     /tmp/ccJ8xgIx.s:1683   .text:00000000000004a8 .L0 
     /tmp/ccJ8xgIx.s:1684   .text:00000000000004a8 .L0 
     /tmp/ccJ8xgIx.s:1685   .text:00000000000004a8 .L0 
     /tmp/ccJ8xgIx.s:1695   .text:00000000000004b0 .L0 
     /tmp/ccJ8xgIx.s:1696   .text:00000000000004b0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000004b0 .L0 
     /tmp/ccJ8xgIx.s:1708   .text:00000000000004b4 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 62


     /tmp/ccJ8xgIx.s:1709   .text:00000000000004b4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000004b4 .L0 
     /tmp/ccJ8xgIx.s:1716   .text:00000000000004b8 .L0 
     /tmp/ccJ8xgIx.s:1727   .text:00000000000004bc .L0 
     /tmp/ccJ8xgIx.s:1728   .text:00000000000004bc .L0 
     /tmp/ccJ8xgIx.s:1729   .text:00000000000004bc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000004bc .L0 
     /tmp/ccJ8xgIx.s:1737   .text:00000000000004c4 .L0 
     /tmp/ccJ8xgIx.s:1738   .text:00000000000004c4 .L0 
     /tmp/ccJ8xgIx.s:1743   .text:00000000000004c8 .L0 
     /tmp/ccJ8xgIx.s:1748   .text:00000000000004cc .L0 
     /tmp/ccJ8xgIx.s:1749   .text:00000000000004cc .L0 
     /tmp/ccJ8xgIx.s:1750   .text:00000000000004cc .L0 
  src/../h/Riscv.hpp:185    .text:00000000000004cc .L0 
     /tmp/ccJ8xgIx.s:1758   .text:00000000000004d4 .L0 
     /tmp/ccJ8xgIx.s:1759   .text:00000000000004d4 .L0 
     /tmp/ccJ8xgIx.s:1764   .text:00000000000004d8 .L0 
     /tmp/ccJ8xgIx.s:1765   .text:00000000000004d8 .L0 
     /tmp/ccJ8xgIx.s:1770   .text:00000000000004e0 .L0 
  src/../h/Riscv.hpp:133    .text:00000000000004e0 .L0 
     /tmp/ccJ8xgIx.s:1780   .text:00000000000004e4 .L0 
     /tmp/ccJ8xgIx.s:1781   .text:00000000000004e4 .L0 
     /tmp/ccJ8xgIx.s:1784   .text:00000000000004ec .L0 
     /tmp/ccJ8xgIx.s:1785   .text:00000000000004ec .L0 
     /tmp/ccJ8xgIx.s:1790   .text:00000000000004f4 .L0 
  src/../h/Riscv.hpp:133    .text:00000000000004f4 .L0 
     /tmp/ccJ8xgIx.s:1800   .text:00000000000004f8 .L0 
       src/Riscv.cpp:251    .text:00000000000004f8 .L0 
     /tmp/ccJ8xgIx.s:1810   .text:00000000000004fc .L0 
     /tmp/ccJ8xgIx.s:1811   .text:00000000000004fc .L0 
  src/../h/Riscv.hpp:191    .text:00000000000004fc .L0 
     /tmp/ccJ8xgIx.s:1823   .text:0000000000000500 .L0 
     /tmp/ccJ8xgIx.s:1824   .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000500 .L0 
     /tmp/ccJ8xgIx.s:1831   .text:0000000000000504 .L0 
     /tmp/ccJ8xgIx.s:1849   .text:0000000000000508 .L0 
     /tmp/ccJ8xgIx.s:1855   .text:0000000000000508 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccJ8xgIx.s:1858   .text:0000000000000508 .L0 
     /tmp/ccJ8xgIx.s:1859   .text:0000000000000508 .L0 
     /tmp/ccJ8xgIx.s:1860   .text:000000000000050c .L0 
     /tmp/ccJ8xgIx.s:1863   .text:0000000000000514 .L0 
     /tmp/ccJ8xgIx.s:1864   .text:0000000000000514 .L0 
     /tmp/ccJ8xgIx.s:1866   .text:0000000000000518 .L0 
     /tmp/ccJ8xgIx.s:1870   .text:0000000000000518 .L0 
     /tmp/ccJ8xgIx.s:1871   .text:0000000000000518 .L0 
     /tmp/ccJ8xgIx.s:1872   .text:0000000000000518 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000518 .L0 
     /tmp/ccJ8xgIx.s:1880   .text:0000000000000520 .L0 
     /tmp/ccJ8xgIx.s:1881   .text:0000000000000520 .L0 
     /tmp/ccJ8xgIx.s:1886   .text:0000000000000524 .L0 
     /tmp/ccJ8xgIx.s:1891   .text:0000000000000534 .L0 
     /tmp/ccJ8xgIx.s:1898   .text:0000000000000544 .L0 
     /tmp/ccJ8xgIx.s:1899   .text:0000000000000548 .L0 
     /tmp/ccJ8xgIx.s:1900   .text:0000000000000548 .L0 
     /tmp/ccJ8xgIx.s:1902   .text:000000000000054c .L0 
     /tmp/ccJ8xgIx.s:1903   .text:000000000000054c .L0 
     /tmp/ccJ8xgIx.s:1905   .text:0000000000000550 .L0 
GAS LISTING /tmp/ccJ8xgIx.s 			page 63


     /tmp/ccJ8xgIx.s:1909   .text:0000000000000554 .L0 
     /tmp/ccJ8xgIx.s:1911   .text:0000000000000554 .L0 
     /tmp/ccJ8xgIx.s:1912   .text:0000000000000554 .L0 
     /tmp/ccJ8xgIx.s:1917   .text:000000000000055c .L0 
     /tmp/ccJ8xgIx.s:1918   .text:000000000000055c .L0 
     /tmp/ccJ8xgIx.s:1919   .text:000000000000055c .L0 
     /tmp/ccJ8xgIx.s:1926   .text:0000000000000564 .L0 
     /tmp/ccJ8xgIx.s:1934   .text:0000000000000568 .L0 
     /tmp/ccJ8xgIx.s:1935   .text:0000000000000568 .L0 
     /tmp/ccJ8xgIx.s:1936   .text:0000000000000568 .L0 
     /tmp/ccJ8xgIx.s:1946   .text:0000000000000570 .L0 
     /tmp/ccJ8xgIx.s:1947   .text:0000000000000574 .L0 
     /tmp/ccJ8xgIx.s:1955   .bss:0000000000000000 _ZN5Riscv9privilegeE
     /tmp/ccJ8xgIx.s:1952   .bss:0000000000000000 .LANCHOR0
     /tmp/ccJ8xgIx.s:1964   .text:0000000000000574 .L0 
     /tmp/ccJ8xgIx.s:93     .text:0000000000000058 .L0 
     /tmp/ccJ8xgIx.s:133    .text:000000000000007c .L0 
     /tmp/ccJ8xgIx.s:528    .text:000000000000015c .L0 
     /tmp/ccJ8xgIx.s:548    .text:0000000000000170 .L0 
     /tmp/ccJ8xgIx.s:1004   .text:0000000000000294 .L0 
     /tmp/ccJ8xgIx.s:1161   .text:0000000000000308 .L0 
     /tmp/ccJ8xgIx.s:1765   .text:00000000000004d8 .L0 
     /tmp/ccJ8xgIx.s:1785   .text:00000000000004ec .L0 
     /tmp/ccJ8xgIx.s:150    .text:0000000000000090 .L30
     /tmp/ccJ8xgIx.s:190    .text:00000000000000b8 .L6
     /tmp/ccJ8xgIx.s:167    .text:0000000000000098 .L3
     /tmp/ccJ8xgIx.s:607    .text:0000000000000188 .L31
     /tmp/ccJ8xgIx.s:617    .text:0000000000000194 .L32
     /tmp/ccJ8xgIx.s:764    .text:00000000000001fc .L33
     /tmp/ccJ8xgIx.s:861    .text:000000000000023c .L34
     /tmp/ccJ8xgIx.s:957    .text:0000000000000278 .L35
     /tmp/ccJ8xgIx.s:1039   .text:00000000000002bc .L36
     /tmp/ccJ8xgIx.s:1114   .text:00000000000002ec .L37
     /tmp/ccJ8xgIx.s:1193   .text:0000000000000328 .L38
     /tmp/ccJ8xgIx.s:1342   .text:0000000000000398 .L39
     /tmp/ccJ8xgIx.s:1508   .text:0000000000000430 .L40
     /tmp/ccJ8xgIx.s:1620   .text:000000000000047c .L41
     /tmp/ccJ8xgIx.s:1718   .text:00000000000004bc .L42
     /tmp/ccJ8xgIx.s:757    .text:00000000000001f4 .L26
     /tmp/ccJ8xgIx.s:227    .text:00000000000000dc .L8
     /tmp/ccJ8xgIx.s:721    .text:00000000000001e4 .L9
     /tmp/ccJ8xgIx.s:1335   .text:0000000000000390 .L27
     /tmp/ccJ8xgIx.s:1299   .text:0000000000000380 .L16
     /tmp/ccJ8xgIx.s:1435   .text:00000000000003ec .L20
     /tmp/ccJ8xgIx.s:1467   .text:0000000000000410 .L18
     /tmp/ccJ8xgIx.s:1401   .text:00000000000003c0 .L19
     /tmp/ccJ8xgIx.s:1481   .text:0000000000000424 .L21
     /tmp/ccJ8xgIx.s:1611   .text:0000000000000470 .L43
     /tmp/ccJ8xgIx.s:1576   .text:0000000000000460 .L23
     /tmp/ccJ8xgIx.s:1908   .text:0000000000000554 .L48
     /tmp/ccJ8xgIx.s:1928   .text:0000000000000568 .L49
     /tmp/ccJ8xgIx.s:1896   .text:0000000000000544 .L44
     /tmp/ccJ8xgIx.s:5029   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccJ8xgIx.s:7360   .debug_str:0000000000000b0f .LASF215
     /tmp/ccJ8xgIx.s:7068   .debug_str:0000000000000177 .LASF216
     /tmp/ccJ8xgIx.s:7218   .debug_str:0000000000000690 .LASF217
     /tmp/ccJ8xgIx.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccJ8xgIx.s 			page 64


     /tmp/ccJ8xgIx.s:1958   .text:0000000000000574 .Letext0
     /tmp/ccJ8xgIx.s:7012   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccJ8xgIx.s:7150   .debug_str:0000000000000448 .LASF0
     /tmp/ccJ8xgIx.s:7194   .debug_str:0000000000000602 .LASF1
     /tmp/ccJ8xgIx.s:7292   .debug_str:0000000000000944 .LASF2
     /tmp/ccJ8xgIx.s:7304   .debug_str:00000000000009b2 .LASF4
     /tmp/ccJ8xgIx.s:7166   .debug_str:00000000000004bf .LASF3
     /tmp/ccJ8xgIx.s:7026   .debug_str:0000000000000057 .LASF5
     /tmp/ccJ8xgIx.s:7248   .debug_str:000000000000079f .LASF6
     /tmp/ccJ8xgIx.s:7182   .debug_str:00000000000005a0 .LASF7
     /tmp/ccJ8xgIx.s:7118   .debug_str:0000000000000336 .LASF8
     /tmp/ccJ8xgIx.s:7126   .debug_str:0000000000000378 .LASF9
     /tmp/ccJ8xgIx.s:7056   .debug_str:000000000000011c .LASF10
     /tmp/ccJ8xgIx.s:7106   .debug_str:00000000000002d4 .LASF11
     /tmp/ccJ8xgIx.s:7070   .debug_str:0000000000000185 .LASF12
     /tmp/ccJ8xgIx.s:7054   .debug_str:000000000000010c .LASF13
     /tmp/ccJ8xgIx.s:7334   .debug_str:0000000000000a86 .LASF14
     /tmp/ccJ8xgIx.s:7090   .debug_str:0000000000000228 .LASF15
     /tmp/ccJ8xgIx.s:7324   .debug_str:0000000000000a50 .LASF16
     /tmp/ccJ8xgIx.s:7412   .debug_str:0000000000000d34 .LASF70
     /tmp/ccJ8xgIx.s:7272   .debug_str:0000000000000895 .LASF20
     /tmp/ccJ8xgIx.s:7198   .debug_str:000000000000061b .LASF17
     /tmp/ccJ8xgIx.s:7096   .debug_str:000000000000027c .LASF18
     /tmp/ccJ8xgIx.s:7428   .debug_str:0000000000000d9a .LASF19
     /tmp/ccJ8xgIx.s:7396   .debug_str:0000000000000cac .LASF21
     /tmp/ccJ8xgIx.s:7100   .debug_str:0000000000000290 .LASF22
     /tmp/ccJ8xgIx.s:7358   .debug_str:0000000000000b02 .LASF23
     /tmp/ccJ8xgIx.s:7076   .debug_str:00000000000001ba .LASF24
     /tmp/ccJ8xgIx.s:7318   .debug_str:0000000000000a22 .LASF152
     /tmp/ccJ8xgIx.s:7138   .debug_str:00000000000003f1 .LASF57
     /tmp/ccJ8xgIx.s:7148   .debug_str:0000000000000430 .LASF59
     /tmp/ccJ8xgIx.s:7388   .debug_str:0000000000000c78 .LASF25
     /tmp/ccJ8xgIx.s:7376   .debug_str:0000000000000c38 .LASF27
     /tmp/ccJ8xgIx.s:7286   .debug_str:000000000000091e .LASF29
     /tmp/ccJ8xgIx.s:7236   .debug_str:0000000000000734 .LASF31
     /tmp/ccJ8xgIx.s:7264   .debug_str:000000000000084c .LASF26
     /tmp/ccJ8xgIx.s:7266   .debug_str:0000000000000853 .LASF28
     /tmp/ccJ8xgIx.s:7232   .debug_str:0000000000000719 .LASF30
     /tmp/ccJ8xgIx.s:7186   .debug_str:00000000000005d5 .LASF32
     /tmp/ccJ8xgIx.s:7424   .debug_str:0000000000000d86 .LASF33
     /tmp/ccJ8xgIx.s:7366   .debug_str:0000000000000bed .LASF34
     /tmp/ccJ8xgIx.s:7228   .debug_str:000000000000070c .LASF35
     /tmp/ccJ8xgIx.s:7234   .debug_str:0000000000000720 .LASF36
     /tmp/ccJ8xgIx.s:7200   .debug_str:0000000000000624 .LASF37
     /tmp/ccJ8xgIx.s:7270   .debug_str:0000000000000881 .LASF38
     /tmp/ccJ8xgIx.s:7452   .debug_str:0000000000000e68 .LASF39
     /tmp/ccJ8xgIx.s:7156   .debug_str:0000000000000460 .LASF40
     /tmp/ccJ8xgIx.s:7330   .debug_str:0000000000000a72 .LASF41
     /tmp/ccJ8xgIx.s:7308   .debug_str:00000000000009df .LASF42
     /tmp/ccJ8xgIx.s:7310   .debug_str:00000000000009f2 .LASF43
     /tmp/ccJ8xgIx.s:7060   .debug_str:0000000000000130 .LASF44
     /tmp/ccJ8xgIx.s:7086   .debug_str:0000000000000203 .LASF45
     /tmp/ccJ8xgIx.s:7144   .debug_str:0000000000000409 .LASF46
     /tmp/ccJ8xgIx.s:7154   .debug_str:000000000000045a .LASF47
     /tmp/ccJ8xgIx.s:7078   .debug_str:00000000000001c6 .LASF48
     /tmp/ccJ8xgIx.s:7028   .debug_str:000000000000005e .LASF49
     /tmp/ccJ8xgIx.s:7298   .debug_str:0000000000000968 .LASF50
GAS LISTING /tmp/ccJ8xgIx.s 			page 65


     /tmp/ccJ8xgIx.s:7290   .debug_str:0000000000000939 .LASF51
     /tmp/ccJ8xgIx.s:7444   .debug_str:0000000000000e1d .LASF52
     /tmp/ccJ8xgIx.s:7416   .debug_str:0000000000000d3f .LASF53
     /tmp/ccJ8xgIx.s:7430   .debug_str:0000000000000da3 .LASF54
     /tmp/ccJ8xgIx.s:7410   .debug_str:0000000000000d2a .LASF55
     /tmp/ccJ8xgIx.s:7220   .debug_str:00000000000006c0 .LASF56
     /tmp/ccJ8xgIx.s:7422   .debug_str:0000000000000d77 .LASF58
     /tmp/ccJ8xgIx.s:7124   .debug_str:000000000000035c .LASF60
     /tmp/ccJ8xgIx.s:7294   .debug_str:0000000000000952 .LASF61
     /tmp/ccJ8xgIx.s:7446   .debug_str:0000000000000e35 .LASF62
     /tmp/ccJ8xgIx.s:7098   .debug_str:0000000000000285 .LASF63
     /tmp/ccJ8xgIx.s:7114   .debug_str:0000000000000314 .LASF64
     /tmp/ccJ8xgIx.s:7250   .debug_str:00000000000007b2 .LASF65
     /tmp/ccJ8xgIx.s:7178   .debug_str:0000000000000561 .LASF67
     /tmp/ccJ8xgIx.s:7288   .debug_str:0000000000000927 .LASF66
     /tmp/ccJ8xgIx.s:7088   .debug_str:0000000000000209 .LASF68
     /tmp/ccJ8xgIx.s:7212   .debug_str:000000000000066a .LASF69
     /tmp/ccJ8xgIx.s:7420   .debug_str:0000000000000d53 .LASF71
     /tmp/ccJ8xgIx.s:7406   .debug_str:0000000000000d05 .LASF105
     /tmp/ccJ8xgIx.s:7192   .debug_str:00000000000005fd .LASF72
     /tmp/ccJ8xgIx.s:7058   .debug_str:000000000000012b .LASF73
     /tmp/ccJ8xgIx.s:7034   .debug_str:0000000000000089 .LASF74
     /tmp/ccJ8xgIx.s:7162   .debug_str:0000000000000484 .LASF107
     /tmp/ccJ8xgIx.s:7328   .debug_str:0000000000000a6d .LASF75
     /tmp/ccJ8xgIx.s:7230   .debug_str:0000000000000714 .LASF76
     /tmp/ccJ8xgIx.s:7448   .debug_str:0000000000000e4e .LASF77
     /tmp/ccJ8xgIx.s:7300   .debug_str:0000000000000980 .LASF80
     /tmp/ccJ8xgIx.s:7104   .debug_str:00000000000002b3 .LASF78
     /tmp/ccJ8xgIx.s:7296   .debug_str:000000000000095e .LASF79
     /tmp/ccJ8xgIx.s:7278   .debug_str:00000000000008c5 .LASF81
     /tmp/ccJ8xgIx.s:7242   .debug_str:000000000000076c .LASF82
     /tmp/ccJ8xgIx.s:7426   .debug_str:0000000000000d8e .LASF83
     /tmp/ccJ8xgIx.s:7222   .debug_str:00000000000006d6 .LASF84
     /tmp/ccJ8xgIx.s:7340   .debug_str:0000000000000aa2 .LASF85
     /tmp/ccJ8xgIx.s:7048   .debug_str:00000000000000ce .LASF86
     /tmp/ccJ8xgIx.s:7390   .debug_str:0000000000000c81 .LASF87
     /tmp/ccJ8xgIx.s:7092   .debug_str:000000000000023e .LASF88
     /tmp/ccJ8xgIx.s:7160   .debug_str:000000000000047a .LASF89
     /tmp/ccJ8xgIx.s:7258   .debug_str:00000000000007f3 .LASF90
     /tmp/ccJ8xgIx.s:7354   .debug_str:0000000000000af2 .LASF144
     /tmp/ccJ8xgIx.s:7172   .debug_str:0000000000000511 .LASF91
     /tmp/ccJ8xgIx.s:7394   .debug_str:0000000000000c90 .LASF92
     /tmp/ccJ8xgIx.s:7032   .debug_str:0000000000000070 .LASF93
     /tmp/ccJ8xgIx.s:7064   .debug_str:0000000000000161 .LASF94
     /tmp/ccJ8xgIx.s:7370   .debug_str:0000000000000c0b .LASF95
     /tmp/ccJ8xgIx.s:7276   .debug_str:00000000000008bd .LASF96
     /tmp/ccJ8xgIx.s:7116   .debug_str:000000000000032c .LASF97
     /tmp/ccJ8xgIx.s:7320   .debug_str:0000000000000a2c .LASF98
     /tmp/ccJ8xgIx.s:7434   .debug_str:0000000000000dc9 .LASF99
     /tmp/ccJ8xgIx.s:7438   .debug_str:0000000000000de2 .LASF218
     /tmp/ccJ8xgIx.s:7176   .debug_str:0000000000000545 .LASF219
     /tmp/ccJ8xgIx.s:7180   .debug_str:0000000000000583 .LASF100
     /tmp/ccJ8xgIx.s:7052   .debug_str:00000000000000f7 .LASF101
     /tmp/ccJ8xgIx.s:7302   .debug_str:000000000000099d .LASF102
     /tmp/ccJ8xgIx.s:7454   .debug_str:0000000000000e70 .LASF103
     /tmp/ccJ8xgIx.s:7392   .debug_str:0000000000000c8b .LASF106
     /tmp/ccJ8xgIx.s:7190   .debug_str:00000000000005f8 .LASF104
GAS LISTING /tmp/ccJ8xgIx.s 			page 66


     /tmp/ccJ8xgIx.s:7400   .debug_str:0000000000000cd6 .LASF108
     /tmp/ccJ8xgIx.s:7224   .debug_str:00000000000006fa .LASF109
     /tmp/ccJ8xgIx.s:7246   .debug_str:0000000000000788 .LASF110
     /tmp/ccJ8xgIx.s:7268   .debug_str:0000000000000866 .LASF111
     /tmp/ccJ8xgIx.s:7136   .debug_str:00000000000003d6 .LASF220
     /tmp/ccJ8xgIx.s:7216   .debug_str:0000000000000683 .LASF112
     /tmp/ccJ8xgIx.s:7020   .debug_str:000000000000002b .LASF113
     /tmp/ccJ8xgIx.s:7024   .debug_str:0000000000000047 .LASF114
     /tmp/ccJ8xgIx.s:7174   .debug_str:000000000000052d .LASF115
     /tmp/ccJ8xgIx.s:7284   .debug_str:0000000000000915 .LASF116
     /tmp/ccJ8xgIx.s:7442   .debug_str:0000000000000dfc .LASF117
     /tmp/ccJ8xgIx.s:7206   .debug_str:0000000000000646 .LASF118
     /tmp/ccJ8xgIx.s:7408   .debug_str:0000000000000d0a .LASF119
     /tmp/ccJ8xgIx.s:7244   .debug_str:000000000000077c .LASF120
     /tmp/ccJ8xgIx.s:7184   .debug_str:00000000000005b3 .LASF121
     /tmp/ccJ8xgIx.s:7456   .debug_str:0000000000000e7e .LASF122
     /tmp/ccJ8xgIx.s:7282   .debug_str:00000000000008f6 .LASF123
     /tmp/ccJ8xgIx.s:7316   .debug_str:0000000000000a17 .LASF124
     /tmp/ccJ8xgIx.s:7108   .debug_str:00000000000002e3 .LASF125
     /tmp/ccJ8xgIx.s:7256   .debug_str:00000000000007ea .LASF126
     /tmp/ccJ8xgIx.s:7062   .debug_str:0000000000000143 .LASF127
     /tmp/ccJ8xgIx.s:7036   .debug_str:000000000000008e .LASF128
     /tmp/ccJ8xgIx.s:7436   .debug_str:0000000000000ddb .LASF129
     /tmp/ccJ8xgIx.s:7050   .debug_str:00000000000000f1 .LASF130
     /tmp/ccJ8xgIx.s:7042   .debug_str:00000000000000a7 .LASF131
     /tmp/ccJ8xgIx.s:7252   .debug_str:00000000000007c7 .LASF132
     /tmp/ccJ8xgIx.s:7344   .debug_str:0000000000000ab6 .LASF133
     /tmp/ccJ8xgIx.s:7336   .debug_str:0000000000000a92 .LASF134
     /tmp/ccJ8xgIx.s:7188   .debug_str:00000000000005e8 .LASF135
     /tmp/ccJ8xgIx.s:7346   .debug_str:0000000000000abe .LASF136
     /tmp/ccJ8xgIx.s:7254   .debug_str:00000000000007cf .LASF137
     /tmp/ccJ8xgIx.s:7040   .debug_str:000000000000009b .LASF138
     /tmp/ccJ8xgIx.s:7398   .debug_str:0000000000000cbb .LASF139
     /tmp/ccJ8xgIx.s:7226   .debug_str:00000000000006ff .LASF140
     /tmp/ccJ8xgIx.s:7080   .debug_str:00000000000001d8 .LASF141
     /tmp/ccJ8xgIx.s:7332   .debug_str:0000000000000a79 .LASF142
     /tmp/ccJ8xgIx.s:7306   .debug_str:00000000000009b9 .LASF143
     /tmp/ccJ8xgIx.s:7238   .debug_str:0000000000000749 .LASF145
     /tmp/ccJ8xgIx.s:7196   .debug_str:0000000000000615 .LASF146
     /tmp/ccJ8xgIx.s:7016   .debug_str:0000000000000011 .LASF147
     /tmp/ccJ8xgIx.s:7314   .debug_str:0000000000000a0a .LASF148
     /tmp/ccJ8xgIx.s:7094   .debug_str:0000000000000260 .LASF149
     /tmp/ccJ8xgIx.s:7352   .debug_str:0000000000000ae3 .LASF150
     /tmp/ccJ8xgIx.s:7240   .debug_str:000000000000074e .LASF151
     /tmp/ccJ8xgIx.s:7356   .debug_str:0000000000000afa .LASF153
     /tmp/ccJ8xgIx.s:7158   .debug_str:0000000000000474 .LASF154
     /tmp/ccJ8xgIx.s:7168   .debug_str:00000000000004d1 .LASF155
     /tmp/ccJ8xgIx.s:7066   .debug_str:000000000000016a .LASF156
     /tmp/ccJ8xgIx.s:7372   .debug_str:0000000000000c14 .LASF157
     /tmp/ccJ8xgIx.s:7280   .debug_str:00000000000008e6 .LASF158
     /tmp/ccJ8xgIx.s:7046   .debug_str:00000000000000be .LASF159
     /tmp/ccJ8xgIx.s:7432   .debug_str:0000000000000db9 .LASF160
     /tmp/ccJ8xgIx.s:7364   .debug_str:0000000000000bdc .LASF161
     /tmp/ccJ8xgIx.s:7322   .debug_str:0000000000000a3d .LASF162
     /tmp/ccJ8xgIx.s:7014   .debug_str:0000000000000000 .LASF163
     /tmp/ccJ8xgIx.s:7132   .debug_str:00000000000003b3 .LASF164
     /tmp/ccJ8xgIx.s:7022   .debug_str:0000000000000042 .LASF165
GAS LISTING /tmp/ccJ8xgIx.s 			page 67


     /tmp/ccJ8xgIx.s:7440   .debug_str:0000000000000df6 .LASF166
     /tmp/ccJ8xgIx.s:7374   .debug_str:0000000000000c30 .LASF167
     /tmp/ccJ8xgIx.s:7368   .debug_str:0000000000000c01 .LASF168
     /tmp/ccJ8xgIx.s:7342   .debug_str:0000000000000aad .LASF169
     /tmp/ccJ8xgIx.s:7418   .debug_str:0000000000000d49 .LASF170
     /tmp/ccJ8xgIx.s:7044   .debug_str:00000000000000b0 .LASF171
     /tmp/ccJ8xgIx.s:7274   .debug_str:00000000000008a0 .LASF172
     /tmp/ccJ8xgIx.s:7072   .debug_str:0000000000000195 .LASF173
     /tmp/ccJ8xgIx.s:7170   .debug_str:00000000000004e5 .LASF174
     /tmp/ccJ8xgIx.s:7082   .debug_str:00000000000001f5 .LASF175
     /tmp/ccJ8xgIx.s:7074   .debug_str:00000000000001a3 .LASF176
     /tmp/ccJ8xgIx.s:7312   .debug_str:00000000000009f9 .LASF177
     /tmp/ccJ8xgIx.s:7362   .debug_str:0000000000000bd3 .LASF178
     /tmp/ccJ8xgIx.s:7404   .debug_str:0000000000000cfe .LASF179
     /tmp/ccJ8xgIx.s:7450   .debug_str:0000000000000e5f .LASF180
     /tmp/ccJ8xgIx.s:7112   .debug_str:0000000000000309 .LASF181
     /tmp/ccJ8xgIx.s:7128   .debug_str:0000000000000386 .LASF182
     /tmp/ccJ8xgIx.s:7084   .debug_str:00000000000001fe .LASF183
     /tmp/ccJ8xgIx.s:7378   .debug_str:0000000000000c4d .LASF184
     /tmp/ccJ8xgIx.s:7338   .debug_str:0000000000000a9b .LASF185
     /tmp/ccJ8xgIx.s:7164   .debug_str:00000000000004a6 .LASF186
     /tmp/ccJ8xgIx.s:7140   .debug_str:00000000000003fc .LASF187
     /tmp/ccJ8xgIx.s:7130   .debug_str:000000000000039a .LASF188
     /tmp/ccJ8xgIx.s:7214   .debug_str:000000000000066f .LASF189
     /tmp/ccJ8xgIx.s:7204   .debug_str:0000000000000632 .LASF190
     /tmp/ccJ8xgIx.s:7146   .debug_str:000000000000041b .LASF191
     /tmp/ccJ8xgIx.s:7348   .debug_str:0000000000000ac9 .LASF192
     /tmp/ccJ8xgIx.s:7030   .debug_str:0000000000000069 .LASF193
     /tmp/ccJ8xgIx.s:7260   .debug_str:0000000000000830 .LASF194
     /tmp/ccJ8xgIx.s:7120   .debug_str:0000000000000346 .LASF195
     /tmp/ccJ8xgIx.s:7350   .debug_str:0000000000000ade .LASF196
     /tmp/ccJ8xgIx.s:7208   .debug_str:000000000000064e .LASF221
     /tmp/ccJ8xgIx.s:7110   .debug_str:0000000000000304 .LASF198
     /tmp/ccJ8xgIx.s:7152   .debug_str:0000000000000455 .LASF197
     /tmp/ccJ8xgIx.s:7102   .debug_str:000000000000029c .LASF207
     /tmp/ccJ8xgIx.s:1856   .text:0000000000000508 .LFB53
     /tmp/ccJ8xgIx.s:1948   .text:0000000000000574 .LFE53
     /tmp/ccJ8xgIx.s:7326   .debug_str:0000000000000a66 .LASF199
     /tmp/ccJ8xgIx.s:6284   .debug_loc:0000000000000000 .LLST80
     /tmp/ccJ8xgIx.s:1868   .text:0000000000000518 .LBB449
     /tmp/ccJ8xgIx.s:1884   .text:0000000000000524 .LBE449
     /tmp/ccJ8xgIx.s:1915   .text:000000000000055c .LBB451
     /tmp/ccJ8xgIx.s:1930   .text:0000000000000568 .LBE451
     /tmp/ccJ8xgIx.s:6299   .debug_loc:0000000000000049 .LLST81
     /tmp/ccJ8xgIx.s:1932   .text:0000000000000568 .LBB453
     /tmp/ccJ8xgIx.s:1944   .text:0000000000000570 .LBE453
     /tmp/ccJ8xgIx.s:6308   .debug_loc:000000000000006f .LLST82
     /tmp/ccJ8xgIx.s:1913   .text:000000000000055c .LVL131
     /tmp/ccJ8xgIx.s:34     .text:0000000000000018 .LFB52
     /tmp/ccJ8xgIx.s:1850   .text:0000000000000508 .LFE52
     /tmp/ccJ8xgIx.s:6316   .debug_loc:0000000000000093 .LLST0
     /tmp/ccJ8xgIx.s:7018   .debug_str:0000000000000025 .LASF200
     /tmp/ccJ8xgIx.s:6347   .debug_loc:0000000000000119 .LLST1
     /tmp/ccJ8xgIx.s:7380   .debug_str:0000000000000c64 .LASF201
     /tmp/ccJ8xgIx.s:6398   .debug_loc:000000000000020d .LLST2
     /tmp/ccJ8xgIx.s:96     .text:0000000000000064 .LBB172
     /tmp/ccJ8xgIx.s:153    .text:0000000000000090 .LBE172
GAS LISTING /tmp/ccJ8xgIx.s 			page 68


     /tmp/ccJ8xgIx.s:7414   .debug_str:0000000000000d3a .LASF202
     /tmp/ccJ8xgIx.s:6409   .debug_loc:0000000000000243 .LLST3
     /tmp/ccJ8xgIx.s:98     .text:0000000000000064 .LBB173
     /tmp/ccJ8xgIx.s:114    .text:0000000000000070 .LBE173
     /tmp/ccJ8xgIx.s:116    .text:0000000000000070 .LBB175
     /tmp/ccJ8xgIx.s:129    .text:0000000000000078 .LBE175
     /tmp/ccJ8xgIx.s:6422   .debug_loc:000000000000027b .LLST4
     /tmp/ccJ8xgIx.s:138    .text:0000000000000088 .LBB177
     /tmp/ccJ8xgIx.s:152    .text:0000000000000090 .LBE177
     /tmp/ccJ8xgIx.s:6431   .debug_loc:00000000000002a1 .LLST5
     /tmp/ccJ8xgIx.s:620    .text:0000000000000194 .LBB182
     /tmp/ccJ8xgIx.s:765    .text:00000000000001fc .LBE182
     /tmp/ccJ8xgIx.s:6438   .debug_loc:00000000000002c4 .LLST6
     /tmp/ccJ8xgIx.s:7134   .debug_str:00000000000003ce .LASF203
     /tmp/ccJ8xgIx.s:6445   .debug_loc:00000000000002e7 .LLST7
     /tmp/ccJ8xgIx.s:6452   .debug_loc:000000000000030a .LLST8
     /tmp/ccJ8xgIx.s:7382   .debug_str:0000000000000c69 .LASF204
     /tmp/ccJ8xgIx.s:6459   .debug_loc:000000000000032d .LLST9
     /tmp/ccJ8xgIx.s:7384   .debug_str:0000000000000c6e .LASF205
     /tmp/ccJ8xgIx.s:6466   .debug_loc:0000000000000350 .LLST10
     /tmp/ccJ8xgIx.s:7386   .debug_str:0000000000000c73 .LASF206
     /tmp/ccJ8xgIx.s:6473   .debug_loc:0000000000000373 .LLST11
     /tmp/ccJ8xgIx.s:6480   .debug_loc:0000000000000396 .LLST12
     /tmp/ccJ8xgIx.s:6487   .debug_loc:00000000000003b9 .LLST13
     /tmp/ccJ8xgIx.s:622    .text:0000000000000194 .LBB183
     /tmp/ccJ8xgIx.s:637    .text:00000000000001a0 .LBE183
     /tmp/ccJ8xgIx.s:642    .text:00000000000001a4 .LBB185
     /tmp/ccJ8xgIx.s:658    .text:00000000000001b0 .LBE185
     /tmp/ccJ8xgIx.s:732    .text:00000000000001e8 .LBB187
     /tmp/ccJ8xgIx.s:743    .text:00000000000001ec .LBE187
     /tmp/ccJ8xgIx.s:6494   .debug_loc:00000000000003dc .LLST14
     /tmp/ccJ8xgIx.s:745    .text:00000000000001ec .LBB189
     /tmp/ccJ8xgIx.s:759    .text:00000000000001f4 .LBE189
     /tmp/ccJ8xgIx.s:6501   .debug_loc:00000000000003ff .LLST15
     /tmp/ccJ8xgIx.s:712    .text:00000000000001d8 .LVL31
     /tmp/ccJ8xgIx.s:768    .text:00000000000001fc .LBB367
     /tmp/ccJ8xgIx.s:864    .text:000000000000023c .LBE367
     /tmp/ccJ8xgIx.s:6508   .debug_loc:0000000000000422 .LLST74
     /tmp/ccJ8xgIx.s:6515   .debug_loc:0000000000000445 .LLST75
     /tmp/ccJ8xgIx.s:6522   .debug_loc:0000000000000468 .LLST76
     /tmp/ccJ8xgIx.s:770    .text:00000000000001fc .LBB368
     /tmp/ccJ8xgIx.s:786    .text:0000000000000208 .LBE368
     /tmp/ccJ8xgIx.s:791    .text:000000000000020c .LBB370
     /tmp/ccJ8xgIx.s:807    .text:0000000000000218 .LBE370
     /tmp/ccJ8xgIx.s:836    .text:0000000000000230 .LBB372
     /tmp/ccJ8xgIx.s:847    .text:0000000000000234 .LBE372
     /tmp/ccJ8xgIx.s:6529   .debug_loc:000000000000048b .LLST77
     /tmp/ccJ8xgIx.s:849    .text:0000000000000234 .LBB374
     /tmp/ccJ8xgIx.s:863    .text:000000000000023c .LBE374
     /tmp/ccJ8xgIx.s:6536   .debug_loc:00000000000004ae .LLST78
     /tmp/ccJ8xgIx.s:826    .text:000000000000022c .LVL42
     /tmp/ccJ8xgIx.s:866    .text:000000000000023c .LBB348
     /tmp/ccJ8xgIx.s:960    .text:0000000000000278 .LBE348
     /tmp/ccJ8xgIx.s:6543   .debug_loc:00000000000004d1 .LLST69
     /tmp/ccJ8xgIx.s:6550   .debug_loc:00000000000004f4 .LLST70
     /tmp/ccJ8xgIx.s:6557   .debug_loc:0000000000000517 .LLST71
     /tmp/ccJ8xgIx.s:868    .text:000000000000023c .LBB349
GAS LISTING /tmp/ccJ8xgIx.s 			page 69


     /tmp/ccJ8xgIx.s:884    .text:0000000000000248 .LBE349
     /tmp/ccJ8xgIx.s:889    .text:000000000000024c .LBB351
     /tmp/ccJ8xgIx.s:905    .text:0000000000000258 .LBE351
     /tmp/ccJ8xgIx.s:932    .text:000000000000026c .LBB353
     /tmp/ccJ8xgIx.s:943    .text:0000000000000270 .LBE353
     /tmp/ccJ8xgIx.s:6564   .debug_loc:000000000000053a .LLST72
     /tmp/ccJ8xgIx.s:945    .text:0000000000000270 .LBB355
     /tmp/ccJ8xgIx.s:959    .text:0000000000000278 .LBE355
     /tmp/ccJ8xgIx.s:6571   .debug_loc:000000000000055d .LLST73
     /tmp/ccJ8xgIx.s:922    .text:0000000000000268 .LVL50
     /tmp/ccJ8xgIx.s:962    .text:0000000000000278 .LBB330
     /tmp/ccJ8xgIx.s:1042   .text:00000000000002bc .LBE330
     /tmp/ccJ8xgIx.s:6578   .debug_loc:0000000000000580 .LLST65
     /tmp/ccJ8xgIx.s:6585   .debug_loc:00000000000005a3 .LLST66
     /tmp/ccJ8xgIx.s:964    .text:0000000000000278 .LBB331
     /tmp/ccJ8xgIx.s:980    .text:0000000000000284 .LBE331
     /tmp/ccJ8xgIx.s:985    .text:0000000000000288 .LBB333
     /tmp/ccJ8xgIx.s:1001   .text:0000000000000294 .LBE333
     /tmp/ccJ8xgIx.s:1014   .text:00000000000002b0 .LBB335
     /tmp/ccJ8xgIx.s:1025   .text:00000000000002b4 .LBE335
     /tmp/ccJ8xgIx.s:6592   .debug_loc:00000000000005c6 .LLST67
     /tmp/ccJ8xgIx.s:1027   .text:00000000000002b4 .LBB337
     /tmp/ccJ8xgIx.s:1041   .text:00000000000002bc .LBE337
     /tmp/ccJ8xgIx.s:6599   .debug_loc:00000000000005e9 .LLST68
     /tmp/ccJ8xgIx.s:1012   .text:00000000000002b0 .LVL57
     /tmp/ccJ8xgIx.s:1044   .text:00000000000002bc .LBB313
     /tmp/ccJ8xgIx.s:1117   .text:00000000000002ec .LBE313
     /tmp/ccJ8xgIx.s:6606   .debug_loc:000000000000060c .LLST61
     /tmp/ccJ8xgIx.s:6613   .debug_loc:000000000000062f .LLST62
     /tmp/ccJ8xgIx.s:1046   .text:00000000000002bc .LBB314
     /tmp/ccJ8xgIx.s:1062   .text:00000000000002c8 .LBE314
     /tmp/ccJ8xgIx.s:1067   .text:00000000000002cc .LBB316
     /tmp/ccJ8xgIx.s:1083   .text:00000000000002d8 .LBE316
     /tmp/ccJ8xgIx.s:1089   .text:00000000000002e0 .LBB318
     /tmp/ccJ8xgIx.s:1100   .text:00000000000002e4 .LBE318
     /tmp/ccJ8xgIx.s:6620   .debug_loc:0000000000000652 .LLST63
     /tmp/ccJ8xgIx.s:1102   .text:00000000000002e4 .LBB320
     /tmp/ccJ8xgIx.s:1116   .text:00000000000002ec .LBE320
     /tmp/ccJ8xgIx.s:6627   .debug_loc:0000000000000675 .LLST64
     /tmp/ccJ8xgIx.s:1087   .text:00000000000002e0 .LVL63
     /tmp/ccJ8xgIx.s:1119   .text:00000000000002ec .LBB297
     /tmp/ccJ8xgIx.s:1196   .text:0000000000000328 .LBE297
     /tmp/ccJ8xgIx.s:6634   .debug_loc:0000000000000698 .LLST57
     /tmp/ccJ8xgIx.s:6641   .debug_loc:00000000000006bb .LLST58
     /tmp/ccJ8xgIx.s:1121   .text:00000000000002ec .LBB298
     /tmp/ccJ8xgIx.s:1137   .text:00000000000002f8 .LBE298
     /tmp/ccJ8xgIx.s:1142   .text:00000000000002fc .LBB300
     /tmp/ccJ8xgIx.s:1158   .text:0000000000000308 .LBE300
     /tmp/ccJ8xgIx.s:1168   .text:000000000000031c .LBB302
     /tmp/ccJ8xgIx.s:1179   .text:0000000000000320 .LBE302
     /tmp/ccJ8xgIx.s:6648   .debug_loc:00000000000006de .LLST59
     /tmp/ccJ8xgIx.s:1181   .text:0000000000000320 .LBB304
     /tmp/ccJ8xgIx.s:1195   .text:0000000000000328 .LBE304
     /tmp/ccJ8xgIx.s:6655   .debug_loc:0000000000000701 .LLST60
     /tmp/ccJ8xgIx.s:1166   .text:000000000000031c .LVL69
     /tmp/ccJ8xgIx.s:1198   .text:0000000000000328 .LBB278
     /tmp/ccJ8xgIx.s:1343   .text:0000000000000398 .LBE278
GAS LISTING /tmp/ccJ8xgIx.s 			page 70


     /tmp/ccJ8xgIx.s:6662   .debug_loc:0000000000000724 .LLST46
     /tmp/ccJ8xgIx.s:6669   .debug_loc:0000000000000747 .LLST47
     /tmp/ccJ8xgIx.s:6676   .debug_loc:000000000000076a .LLST48
     /tmp/ccJ8xgIx.s:6683   .debug_loc:000000000000078d .LLST49
     /tmp/ccJ8xgIx.s:6690   .debug_loc:00000000000007b0 .LLST50
     /tmp/ccJ8xgIx.s:6697   .debug_loc:00000000000007d3 .LLST51
     /tmp/ccJ8xgIx.s:1200   .text:0000000000000328 .LBB279
     /tmp/ccJ8xgIx.s:1216   .text:0000000000000334 .LBE279
     /tmp/ccJ8xgIx.s:1221   .text:0000000000000338 .LBB281
     /tmp/ccJ8xgIx.s:1237   .text:0000000000000344 .LBE281
     /tmp/ccJ8xgIx.s:1269   .text:0000000000000360 .LBB283
     /tmp/ccJ8xgIx.s:1285   .text:000000000000036c .LBE283
     /tmp/ccJ8xgIx.s:6714   .debug_loc:000000000000081e .LLST52
     /tmp/ccJ8xgIx.s:6721   .debug_loc:0000000000000841 .LLST53
     /tmp/ccJ8xgIx.s:1275   .text:0000000000000364 .LBB285
     /tmp/ccJ8xgIx.s:1283   .text:000000000000036c .LBE285
     /tmp/ccJ8xgIx.s:6728   .debug_loc:0000000000000864 .LLST54
     /tmp/ccJ8xgIx.s:1310   .text:0000000000000384 .LBB287
     /tmp/ccJ8xgIx.s:1321   .text:0000000000000388 .LBE287
     /tmp/ccJ8xgIx.s:6737   .debug_loc:0000000000000889 .LLST55
     /tmp/ccJ8xgIx.s:1323   .text:0000000000000388 .LBB289
     /tmp/ccJ8xgIx.s:1337   .text:0000000000000390 .LBE289
     /tmp/ccJ8xgIx.s:6744   .debug_loc:00000000000008ac .LLST56
     /tmp/ccJ8xgIx.s:1268   .text:0000000000000360 .LVL77
     /tmp/ccJ8xgIx.s:1345   .text:0000000000000398 .LBB254
     /tmp/ccJ8xgIx.s:1511   .text:0000000000000430 .LBE254
     /tmp/ccJ8xgIx.s:6751   .debug_loc:00000000000008cf .LLST34
     /tmp/ccJ8xgIx.s:6758   .debug_loc:00000000000008f2 .LLST35
     /tmp/ccJ8xgIx.s:6765   .debug_loc:0000000000000915 .LLST36
     /tmp/ccJ8xgIx.s:6998   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccJ8xgIx.s:6772   .debug_loc:0000000000000938 .LLST38
     /tmp/ccJ8xgIx.s:1403   .text:00000000000003c0 .LBB260
     /tmp/ccJ8xgIx.s:6779   .debug_loc:000000000000095b .LLST39
     /tmp/ccJ8xgIx.s:6794   .debug_loc:0000000000000995 .LLST40
     /tmp/ccJ8xgIx.s:6805   .debug_loc:00000000000009cb .LLST41
     /tmp/ccJ8xgIx.s:1410   .text:00000000000003cc .LVL91
     /tmp/ccJ8xgIx.s:1414   .text:00000000000003cc .LBB263
     /tmp/ccJ8xgIx.s:1423   .text:00000000000003d4 .LBE263
     /tmp/ccJ8xgIx.s:6812   .debug_loc:00000000000009ee .LLST42
     /tmp/ccJ8xgIx.s:1434   .text:00000000000003ec .LVL93
     /tmp/ccJ8xgIx.s:1347   .text:0000000000000398 .LBB255
     /tmp/ccJ8xgIx.s:1362   .text:00000000000003a4 .LBE255
     /tmp/ccJ8xgIx.s:1367   .text:00000000000003a8 .LBB257
     /tmp/ccJ8xgIx.s:1383   .text:00000000000003b4 .LBE257
     /tmp/ccJ8xgIx.s:1439   .text:00000000000003ec .LBB266
     /tmp/ccJ8xgIx.s:1449   .text:00000000000003f8 .LBE266
     /tmp/ccJ8xgIx.s:6819   .debug_loc:0000000000000a11 .LLST43
     /tmp/ccJ8xgIx.s:1483   .text:0000000000000424 .LBB269
     /tmp/ccJ8xgIx.s:1494   .text:0000000000000428 .LBE269
     /tmp/ccJ8xgIx.s:6828   .debug_loc:0000000000000a36 .LLST44
     /tmp/ccJ8xgIx.s:1496   .text:0000000000000428 .LBB271
     /tmp/ccJ8xgIx.s:1510   .text:0000000000000430 .LBE271
     /tmp/ccJ8xgIx.s:6835   .debug_loc:0000000000000a59 .LLST45
     /tmp/ccJ8xgIx.s:1480   .text:0000000000000424 .LVL97
     /tmp/ccJ8xgIx.s:1513   .text:0000000000000430 .LBB241
     /tmp/ccJ8xgIx.s:1621   .text:000000000000047c .LBE241
     /tmp/ccJ8xgIx.s:6842   .debug_loc:0000000000000a7c .LLST28
GAS LISTING /tmp/ccJ8xgIx.s 			page 71


     /tmp/ccJ8xgIx.s:6849   .debug_loc:0000000000000a9f .LLST29
     /tmp/ccJ8xgIx.s:6856   .debug_loc:0000000000000ac2 .LLST30
     /tmp/ccJ8xgIx.s:6867   .debug_loc:0000000000000af8 .LLST31
     /tmp/ccJ8xgIx.s:1515   .text:0000000000000430 .LBB242
     /tmp/ccJ8xgIx.s:1531   .text:000000000000043c .LBE242
     /tmp/ccJ8xgIx.s:1536   .text:0000000000000440 .LBB244
     /tmp/ccJ8xgIx.s:1552   .text:000000000000044c .LBE244
     /tmp/ccJ8xgIx.s:1586   .text:0000000000000464 .LBB246
     /tmp/ccJ8xgIx.s:1597   .text:0000000000000468 .LBE246
     /tmp/ccJ8xgIx.s:6878   .debug_loc:0000000000000b2e .LLST32
     /tmp/ccJ8xgIx.s:1599   .text:0000000000000468 .LBB248
     /tmp/ccJ8xgIx.s:1613   .text:0000000000000470 .LBE248
     /tmp/ccJ8xgIx.s:6885   .debug_loc:0000000000000b51 .LLST33
     /tmp/ccJ8xgIx.s:1617   .text:0000000000000478 .LVL108
     /tmp/ccJ8xgIx.s:1623   .text:000000000000047c .LBB229
     /tmp/ccJ8xgIx.s:1721   .text:00000000000004bc .LBE229
     /tmp/ccJ8xgIx.s:6892   .debug_loc:0000000000000b74 .LLST22
     /tmp/ccJ8xgIx.s:6899   .debug_loc:0000000000000b97 .LLST23
     /tmp/ccJ8xgIx.s:6906   .debug_loc:0000000000000bba .LLST24
     /tmp/ccJ8xgIx.s:6913   .debug_loc:0000000000000bdd .LLST25
     /tmp/ccJ8xgIx.s:1625   .text:000000000000047c .LBB230
     /tmp/ccJ8xgIx.s:1641   .text:0000000000000488 .LBE230
     /tmp/ccJ8xgIx.s:1646   .text:000000000000048c .LBB232
     /tmp/ccJ8xgIx.s:1662   .text:0000000000000498 .LBE232
     /tmp/ccJ8xgIx.s:1693   .text:00000000000004b0 .LBB234
     /tmp/ccJ8xgIx.s:1704   .text:00000000000004b4 .LBE234
     /tmp/ccJ8xgIx.s:6921   .debug_loc:0000000000000c01 .LLST26
     /tmp/ccJ8xgIx.s:1706   .text:00000000000004b4 .LBB236
     /tmp/ccJ8xgIx.s:1720   .text:00000000000004bc .LBE236
     /tmp/ccJ8xgIx.s:6928   .debug_loc:0000000000000c24 .LLST27
     /tmp/ccJ8xgIx.s:1681   .text:00000000000004a8 .LVL114
     /tmp/ccJ8xgIx.s:1723   .text:00000000000004bc .LBB215
     /tmp/ccJ8xgIx.s:1834   .text:0000000000000508 .LBE215
     /tmp/ccJ8xgIx.s:1725   .text:00000000000004bc .LBB216
     /tmp/ccJ8xgIx.s:1741   .text:00000000000004c8 .LBE216
     /tmp/ccJ8xgIx.s:1746   .text:00000000000004cc .LBB218
     /tmp/ccJ8xgIx.s:1762   .text:00000000000004d8 .LBE218
     /tmp/ccJ8xgIx.s:1767   .text:00000000000004e0 .LBB220
     /tmp/ccJ8xgIx.s:1778   .text:00000000000004e4 .LBE220
     /tmp/ccJ8xgIx.s:1787   .text:00000000000004f4 .LBB222
     /tmp/ccJ8xgIx.s:1798   .text:00000000000004f8 .LBE222
     /tmp/ccJ8xgIx.s:1808   .text:00000000000004fc .LBB224
     /tmp/ccJ8xgIx.s:1819   .text:0000000000000500 .LBE224
     /tmp/ccJ8xgIx.s:6935   .debug_loc:0000000000000c47 .LLST21
     /tmp/ccJ8xgIx.s:1821   .text:0000000000000500 .LBB226
     /tmp/ccJ8xgIx.s:1833   .text:0000000000000508 .LBE226
     /tmp/ccJ8xgIx.s:1782   .text:00000000000004ec .LVL123
     /tmp/ccJ8xgIx.s:471    .text:0000000000000134 .LBB202
     /tmp/ccJ8xgIx.s:588    .text:0000000000000184 .LBE202
     /tmp/ccJ8xgIx.s:6942   .debug_loc:0000000000000c6a .LLST16
     /tmp/ccJ8xgIx.s:6949   .debug_loc:0000000000000c8d .LLST17
     /tmp/ccJ8xgIx.s:6956   .debug_loc:0000000000000cb0 .LLST18
     /tmp/ccJ8xgIx.s:473    .text:0000000000000134 .LBB203
     /tmp/ccJ8xgIx.s:489    .text:0000000000000140 .LBE203
     /tmp/ccJ8xgIx.s:494    .text:0000000000000144 .LBB205
     /tmp/ccJ8xgIx.s:510    .text:0000000000000150 .LBE205
     /tmp/ccJ8xgIx.s:530    .text:0000000000000164 .LBB207
GAS LISTING /tmp/ccJ8xgIx.s 			page 72


     /tmp/ccJ8xgIx.s:541    .text:0000000000000168 .LBE207
     /tmp/ccJ8xgIx.s:550    .text:0000000000000178 .LBB209
     /tmp/ccJ8xgIx.s:561    .text:000000000000017c .LBE209
     /tmp/ccJ8xgIx.s:563    .text:000000000000017c .LBB211
     /tmp/ccJ8xgIx.s:574    .text:0000000000000180 .LBE211
     /tmp/ccJ8xgIx.s:6963   .debug_loc:0000000000000cd3 .LLST19
     /tmp/ccJ8xgIx.s:576    .text:0000000000000180 .LBB213
     /tmp/ccJ8xgIx.s:587    .text:0000000000000184 .LBE213
     /tmp/ccJ8xgIx.s:6970   .debug_loc:0000000000000cf6 .LLST20
     /tmp/ccJ8xgIx.s:545    .text:0000000000000170 .LVL17
     /tmp/ccJ8xgIx.s:54     .text:0000000000000038 .LBB168
     /tmp/ccJ8xgIx.s:71     .text:0000000000000044 .LBE168
     /tmp/ccJ8xgIx.s:156    .text:0000000000000090 .LBB416
     /tmp/ccJ8xgIx.s:169    .text:0000000000000098 .LBE416
     /tmp/ccJ8xgIx.s:6977   .debug_loc:0000000000000d19 .LLST79
     /tmp/ccJ8xgIx.s:614    .text:0000000000000190 .LVL23
     /tmp/ccJ8xgIx.s:10     .text:0000000000000000 .LFB51
     /tmp/ccJ8xgIx.s:28     .text:0000000000000018 .LFE51
     /tmp/ccJ8xgIx.s:7038   .debug_str:0000000000000096 .LASF209
     /tmp/ccJ8xgIx.s:7262   .debug_str:0000000000000838 .LASF208
     /tmp/ccJ8xgIx.s:7402   .debug_str:0000000000000cf9 .LASF210
     /tmp/ccJ8xgIx.s:7202   .debug_str:000000000000062c .LASF211
     /tmp/ccJ8xgIx.s:7122   .debug_str:000000000000034c .LASF212
     /tmp/ccJ8xgIx.s:7142   .debug_str:0000000000000402 .LASF213
     /tmp/ccJ8xgIx.s:7210   .debug_str:0000000000000663 .LASF214
     /tmp/ccJ8xgIx.s:1882   .text:0000000000000524 .LVL128
     /tmp/ccJ8xgIx.s:1895   .text:0000000000000544 .LVL129
     /tmp/ccJ8xgIx.s:1907   .text:0000000000000554 .LVL130
     /tmp/ccJ8xgIx.s:1927   .text:0000000000000568 .LVL132
     /tmp/ccJ8xgIx.s:1941   .text:0000000000000570 .LVL133
     /tmp/ccJ8xgIx.s:69     .text:0000000000000044 .LVL0
     /tmp/ccJ8xgIx.s:121    .text:0000000000000074 .LVL3
     /tmp/ccJ8xgIx.s:149    .text:0000000000000090 .LVL6
     /tmp/ccJ8xgIx.s:165    .text:0000000000000098 .LVL7
     /tmp/ccJ8xgIx.s:189    .text:00000000000000b8 .LVL8
     /tmp/ccJ8xgIx.s:210    .text:00000000000000cc .LVL9
     /tmp/ccJ8xgIx.s:226    .text:00000000000000dc .LVL10
     /tmp/ccJ8xgIx.s:606    .text:0000000000000188 .LVL22
     /tmp/ccJ8xgIx.s:616    .text:0000000000000194 .LVL24
     /tmp/ccJ8xgIx.s:80     .text:0000000000000048 .LVL1
     /tmp/ccJ8xgIx.s:487    .text:0000000000000140 .LVL11
     /tmp/ccJ8xgIx.s:784    .text:0000000000000208 .LVL37
     /tmp/ccJ8xgIx.s:860    .text:000000000000023c .LVL45
     /tmp/ccJ8xgIx.s:882    .text:0000000000000248 .LVL46
     /tmp/ccJ8xgIx.s:956    .text:0000000000000278 .LVL53
     /tmp/ccJ8xgIx.s:978    .text:0000000000000284 .LVL54
     /tmp/ccJ8xgIx.s:1038   .text:00000000000002bc .LVL59
     /tmp/ccJ8xgIx.s:1060   .text:00000000000002c8 .LVL60
     /tmp/ccJ8xgIx.s:1113   .text:00000000000002ec .LVL65
     /tmp/ccJ8xgIx.s:1135   .text:00000000000002f8 .LVL66
     /tmp/ccJ8xgIx.s:1192   .text:0000000000000328 .LVL71
     /tmp/ccJ8xgIx.s:1214   .text:0000000000000334 .LVL72
     /tmp/ccJ8xgIx.s:1341   .text:0000000000000398 .LVL85
     /tmp/ccJ8xgIx.s:1396   .text:00000000000003bc .LVL88
     /tmp/ccJ8xgIx.s:1507   .text:0000000000000430 .LVL99
     /tmp/ccJ8xgIx.s:1529   .text:000000000000043c .LVL100
     /tmp/ccJ8xgIx.s:1619   .text:000000000000047c .LVL109
GAS LISTING /tmp/ccJ8xgIx.s 			page 73


     /tmp/ccJ8xgIx.s:1639   .text:0000000000000488 .LVL110
     /tmp/ccJ8xgIx.s:1717   .text:00000000000004bc .LVL117
     /tmp/ccJ8xgIx.s:1739   .text:00000000000004c8 .LVL118
     /tmp/ccJ8xgIx.s:819    .text:0000000000000220 .LVL40
     /tmp/ccJ8xgIx.s:824    .text:0000000000000224 .LVL41
     /tmp/ccJ8xgIx.s:917    .text:0000000000000260 .LVL49
     /tmp/ccJ8xgIx.s:112    .text:0000000000000070 .LVL2
     /tmp/ccJ8xgIx.s:137    .text:0000000000000088 .LVL5
     /tmp/ccJ8xgIx.s:126    .text:0000000000000078 .LVL4
     /tmp/ccJ8xgIx.s:640    .text:00000000000001a4 .LVL25
     /tmp/ccJ8xgIx.s:763    .text:00000000000001fc .LVL36
     /tmp/ccJ8xgIx.s:656    .text:00000000000001b0 .LVL26
     /tmp/ccJ8xgIx.s:689    .text:00000000000001c4 .LVL27
     /tmp/ccJ8xgIx.s:695    .text:00000000000001c8 .LVL28
     /tmp/ccJ8xgIx.s:701    .text:00000000000001cc .LVL29
     /tmp/ccJ8xgIx.s:707    .text:00000000000001d0 .LVL30
     /tmp/ccJ8xgIx.s:722    .text:00000000000001e4 .LVL32
     /tmp/ccJ8xgIx.s:756    .text:00000000000001f4 .LVL35
     /tmp/ccJ8xgIx.s:730    .text:00000000000001e8 .LVL33
     /tmp/ccJ8xgIx.s:740    .text:00000000000001ec .LVL34
     /tmp/ccJ8xgIx.s:789    .text:000000000000020c .LVL38
     /tmp/ccJ8xgIx.s:805    .text:0000000000000218 .LVL39
     /tmp/ccJ8xgIx.s:834    .text:0000000000000230 .LVL43
     /tmp/ccJ8xgIx.s:844    .text:0000000000000234 .LVL44
     /tmp/ccJ8xgIx.s:887    .text:000000000000024c .LVL47
     /tmp/ccJ8xgIx.s:903    .text:0000000000000258 .LVL48
     /tmp/ccJ8xgIx.s:930    .text:000000000000026c .LVL51
     /tmp/ccJ8xgIx.s:940    .text:0000000000000270 .LVL52
     /tmp/ccJ8xgIx.s:983    .text:0000000000000288 .LVL55
     /tmp/ccJ8xgIx.s:999    .text:0000000000000294 .LVL56
     /tmp/ccJ8xgIx.s:1022   .text:00000000000002b4 .LVL58
     /tmp/ccJ8xgIx.s:1065   .text:00000000000002cc .LVL61
     /tmp/ccJ8xgIx.s:1081   .text:00000000000002d8 .LVL62
     /tmp/ccJ8xgIx.s:1097   .text:00000000000002e4 .LVL64
     /tmp/ccJ8xgIx.s:1140   .text:00000000000002fc .LVL67
     /tmp/ccJ8xgIx.s:1156   .text:0000000000000308 .LVL68
     /tmp/ccJ8xgIx.s:1176   .text:0000000000000320 .LVL70
     /tmp/ccJ8xgIx.s:1219   .text:0000000000000338 .LVL73
     /tmp/ccJ8xgIx.s:1235   .text:0000000000000344 .LVL74
     /tmp/ccJ8xgIx.s:1256   .text:0000000000000350 .LVL75
     /tmp/ccJ8xgIx.s:1262   .text:0000000000000354 .LVL76
     /tmp/ccJ8xgIx.s:1281   .text:000000000000036c .LVL79
     /tmp/ccJ8xgIx.s:1294   .text:0000000000000378 .LVL80
     /tmp/ccJ8xgIx.s:1300   .text:0000000000000380 .LVL81
     /tmp/ccJ8xgIx.s:1334   .text:0000000000000390 .LVL84
     /tmp/ccJ8xgIx.s:1274   .text:0000000000000364 .LVL78
     /tmp/ccJ8xgIx.s:1308   .text:0000000000000384 .LVL82
     /tmp/ccJ8xgIx.s:1318   .text:0000000000000388 .LVL83
     /tmp/ccJ8xgIx.s:1365   .text:00000000000003a8 .LVL86
     /tmp/ccJ8xgIx.s:1381   .text:00000000000003b4 .LVL87
     /tmp/ccJ8xgIx.s:1400   .text:00000000000003c0 .LVL89
     /tmp/ccJ8xgIx.s:1454   .text:00000000000003fc .LVL95
     /tmp/ccJ8xgIx.s:1466   .text:0000000000000410 .LVL96
     /tmp/ccJ8xgIx.s:1407   .text:00000000000003c4 .LVL90
     /tmp/ccJ8xgIx.s:1421   .text:00000000000003d4 .LVL92
     /tmp/ccJ8xgIx.s:1447   .text:00000000000003f8 .LVL94
     /tmp/ccJ8xgIx.s:1491   .text:0000000000000428 .LVL98
GAS LISTING /tmp/ccJ8xgIx.s 			page 74


     /tmp/ccJ8xgIx.s:1534   .text:0000000000000440 .LVL101
     /tmp/ccJ8xgIx.s:1550   .text:000000000000044c .LVL102
     /tmp/ccJ8xgIx.s:1565   .text:0000000000000454 .LVL103
     /tmp/ccJ8xgIx.s:1575   .text:0000000000000460 .LVL104
     /tmp/ccJ8xgIx.s:1610   .text:0000000000000470 .LVL107
     /tmp/ccJ8xgIx.s:1584   .text:0000000000000464 .LVL105
     /tmp/ccJ8xgIx.s:1594   .text:0000000000000468 .LVL106
     /tmp/ccJ8xgIx.s:1644   .text:000000000000048c .LVL111
     /tmp/ccJ8xgIx.s:1660   .text:0000000000000498 .LVL112
     /tmp/ccJ8xgIx.s:1675   .text:00000000000004a0 .LVL113
     /tmp/ccJ8xgIx.s:1691   .text:00000000000004b0 .LVL115
     /tmp/ccJ8xgIx.s:1701   .text:00000000000004b4 .LVL116
     /tmp/ccJ8xgIx.s:1806   .text:00000000000004fc .LVL126
     /tmp/ccJ8xgIx.s:1816   .text:0000000000000500 .LVL127
     /tmp/ccJ8xgIx.s:492    .text:0000000000000144 .LVL12
     /tmp/ccJ8xgIx.s:508    .text:0000000000000150 .LVL13
     /tmp/ccJ8xgIx.s:525    .text:000000000000015c .LVL14
     /tmp/ccJ8xgIx.s:558    .text:000000000000017c .LVL19
     /tmp/ccJ8xgIx.s:571    .text:0000000000000180 .LVL20
     /tmp/ccJ8xgIx.s:584    .text:0000000000000184 .LVL21
     /tmp/ccJ8xgIx.s:1965   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccJ8xgIx.s:1402   .text:00000000000003c0 .LBB259
     /tmp/ccJ8xgIx.s:1436   .text:00000000000003ec .LBE259
     /tmp/ccJ8xgIx.s:1452   .text:00000000000003fc .LBB268
     /tmp/ccJ8xgIx.s:1470   .text:0000000000000410 .LBE268
     /tmp/ccJ8xgIx.s:1412   .text:00000000000003cc .LBE260
     /tmp/ccJ8xgIx.s:1455   .text:00000000000003fc .LBB265
     /tmp/ccJ8xgIx.s:1469   .text:0000000000000410 .LBE265

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
