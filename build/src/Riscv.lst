GAS LISTING /tmp/ccp1Y5YK.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB50:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE50:
GAS LISTING /tmp/ccp1Y5YK.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB51:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB133:
  67              	.LBB134:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccp1Y5YK.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
GAS LISTING /tmp/ccp1Y5YK.s 			page 4


  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 95 5
  71              		.loc 2 95 72 is_stmt 0
  72              	#APP
  73              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F0 		sd	a5,-248(s0)
  78              		.loc 2 96 5 is_stmt 1
  79              		.loc 2 96 12 is_stmt 0
  80 0048 833784F0 		ld	a5,-248(s0)
  81              	.LBE134:
  82              	.LBE133:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp **** //    uint64 arg0;
  24:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 24 5
  25:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 25 5
  89              		.loc 1 25 49 is_stmt 0
  90              	#APP
  91              	# 25 "src/Riscv.cpp" 1
  26              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  27:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  95              		.loc 1 27 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB135:
  98              		.loc 1 27 40 is_stmt 0
  99 0054 9B8787FF 		addiw	a5,a5,-8
 100              	.LVL2:
 101              		.loc 1 27 5
 102 0058 13071000 		li	a4,1
 103 005c 6372F702 		bleu	a5,a4,.L25
 104              	.LVL3:
 105              	.L3:
 106              	.LBE135:
  28:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  29:src/Riscv.cpp **** 
GAS LISTING /tmp/ccp1Y5YK.s 			page 5


  30:src/Riscv.cpp ****         //call from yield
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp ****         if(a0reg==0x11){
  33:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  34:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp ****             _thread::thread_t *arg1;
  38:src/Riscv.cpp ****             _thread::Body arg2;
  39:src/Riscv.cpp ****             uint64 arg3;
  40:src/Riscv.cpp ****             uint64 *arg4;
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  44:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  45:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  51:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  54:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  55:src/Riscv.cpp ****             *arg1=t;
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp ****             uint64 ret;
  58:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  59:src/Riscv.cpp ****             else ret =-1;
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp ****             //return _thread* adress through a0
  63:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             w_sstatus(sstatus);
  66:src/Riscv.cpp ****             w_sepc(sepc);
  67:src/Riscv.cpp ****         }
  68:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  69:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  70:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  71:src/Riscv.cpp ****             //kmem_alloc
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  73:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             //write return value to a0 register
  76:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  77:src/Riscv.cpp **** 
  78:src/Riscv.cpp ****             w_sstatus(sstatus);
  79:src/Riscv.cpp ****             w_sepc(sepc);
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp ****         else if(a0reg==0x02){
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  86:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
GAS LISTING /tmp/ccp1Y5YK.s 			page 6


  87:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             w_sstatus(sstatus);
  90:src/Riscv.cpp ****             w_sepc(sepc);
  91:src/Riscv.cpp ****         }
  92:src/Riscv.cpp **** 
  93:src/Riscv.cpp ****         else if(a0reg==0x12){
  94:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****             _thread::running->finished=true;
  98:src/Riscv.cpp ****             _thread::dispatch();
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             w_sstatus(sstatus);
 101:src/Riscv.cpp ****             w_sepc(sepc);
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****         }
 105:src/Riscv.cpp ****         else if(a0reg == 0x13){
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 121:src/Riscv.cpp ****             _thread::dispatch();
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             w_sstatus(sstatus);
 124:src/Riscv.cpp ****             w_sepc(sepc);
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         else if(a0reg==0x21){
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 131:src/Riscv.cpp ****            uint64 arg2;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 140:src/Riscv.cpp ****             *arg1=sem;
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 ret=0;
 143:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
GAS LISTING /tmp/ccp1Y5YK.s 			page 7


 144:src/Riscv.cpp ****             else ret=-1;
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             w_sstatus(sstatus);
 149:src/Riscv.cpp ****             w_sepc(sepc);
 150:src/Riscv.cpp ****         }
 151:src/Riscv.cpp ****         else if(a0reg==0x22){
 152:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 154:src/Riscv.cpp **** 
 155:src/Riscv.cpp ****             KSemaphore::sem_t *arg1; //handle
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             KSemaphore* sem = *arg1;
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 165:src/Riscv.cpp ****             while(KSemaphore::blocked.peekFirst()!=0){
 166:src/Riscv.cpp ****                 _thread* t = KSemaphore::blocked.removeFirst();
 167:src/Riscv.cpp ****                 t->deblocked=true;
 168:src/Riscv.cpp ****                 sem->val++;
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 170:src/Riscv.cpp ****             }
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             delete sem;
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             w_sstatus(sstatus);
 175:src/Riscv.cpp ****             w_sepc(sepc);
 176:src/Riscv.cpp ****         }
 177:src/Riscv.cpp ****         else if(a0reg==0x23){
 178:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             w_sstatus(sstatus);
 194:src/Riscv.cpp ****             w_sepc(sepc);
 195:src/Riscv.cpp ****         }
 196:src/Riscv.cpp ****         else if(a0reg==0x24){
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
GAS LISTING /tmp/ccp1Y5YK.s 			page 8


 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****             arg1->signal();
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****             uint64 ret = 0;
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x41){
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             //call method from kernel Console class
 221:src/Riscv.cpp ****             char c = KConsole::getc();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             w_sstatus(sstatus);
 227:src/Riscv.cpp ****             w_sepc(sepc);
 228:src/Riscv.cpp ****         }
 229:src/Riscv.cpp ****         else if(a0reg==0x42){
 230:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 231:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****             char c;
 234:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             KConsole::putc(c);
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             w_sstatus(sstatus);
 241:src/Riscv.cpp ****             w_sepc(sepc);
 242:src/Riscv.cpp ****         }
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****     }
 246:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 247:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****     }
 250:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 251:src/Riscv.cpp ****     {
 252:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 255:src/Riscv.cpp ****         uint64 sstatus = r_sstatus();
 256:src/Riscv.cpp **** 
 257:src/Riscv.cpp ****         console_handler();
GAS LISTING /tmp/ccp1Y5YK.s 			page 9


 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp ****         w_sstatus(sstatus);
 260:src/Riscv.cpp ****         w_sepc(sepc);
 261:src/Riscv.cpp ****     }
 262:src/Riscv.cpp ****     else{
 263:src/Riscv.cpp ****         // unexpected trap cause
 264:src/Riscv.cpp ****         //print(scause)
 265:src/Riscv.cpp ****         //print(sepc)
 266:src/Riscv.cpp ****         //print(stval) //trap value
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****     }
 269:src/Riscv.cpp **** 
 270:src/Riscv.cpp **** }
 107              		.loc 1 270 1
 108 0060 8330810F 		ld	ra,248(sp)
 109              		.cfi_remember_state
 110              		.cfi_restore 1
 111 0064 0334010F 		ld	s0,240(sp)
 112              		.cfi_restore 8
 113              		.cfi_def_cfa 2, 256
 114 0068 8334810E 		ld	s1,232(sp)
 115              		.cfi_restore 9
 116 006c 0339010E 		ld	s2,224(sp)
 117              		.cfi_restore 18
 118 0070 8339810D 		ld	s3,216(sp)
 119              		.cfi_restore 19
 120 0074 033A010D 		ld	s4,208(sp)
 121              		.cfi_restore 20
 122 0078 13010110 		addi	sp,sp,256
 123              		.cfi_def_cfa_offset 0
 124 007c 67800000 		jr	ra
 125              	.LVL4:
 126              	.L25:
 127              		.cfi_restore_state
  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128              		.loc 1 32 9 is_stmt 1
 129              	.LBB332:
 130              	.LBB136:
 131 0080 93071001 		li	a5,17
 132 0084 638CF408 		beq	s1,a5,.L26
 133              	.L5:
 134              	.LBE136:
 135              	.LBE332:
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 136              		.loc 1 68 9
 137              	.LBB333:
 138              	.LBB146:
 139 0088 93071000 		li	a5,1
 140 008c 638CF40E 		beq	s1,a5,.L27
 141              	.LBE146:
 142              	.LBE333:
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 143              		.loc 1 81 14
 144              	.LBB334:
 145              	.LBB320:
 146              	.LBB147:
 147 0090 93072000 		li	a5,2
GAS LISTING /tmp/ccp1Y5YK.s 			page 10


 148 0094 6386F412 		beq	s1,a5,.L28
 149              	.LBE147:
 150              	.LBE320:
 151              	.LBE334:
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 152              		.loc 1 93 14
 153              	.LBB335:
 154              	.LBB321:
 155              	.LBB301:
 156              	.LBB148:
 157 0098 93072001 		li	a5,18
 158 009c 638EF414 		beq	s1,a5,.L29
 159              	.LBE148:
 160              	.LBE301:
 161              	.LBE321:
 162              	.LBE335:
 105:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 163              		.loc 1 105 14
 164              	.LBB336:
 165              	.LBB322:
 166              	.LBB302:
 167              	.LBB283:
 168              	.LBB149:
 169 00a0 93073001 		li	a5,19
 170 00a4 638CF418 		beq	s1,a5,.L30
 171              	.LBE149:
 172              	.LBE283:
 173              	.LBE302:
 174              	.LBE322:
 175              	.LBE336:
 116:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 176              		.loc 1 116 14
 177              	.LBB337:
 178              	.LBB323:
 179              	.LBB303:
 180              	.LBB284:
 181              	.LBB266:
 182              	.LBB150:
 183 00a8 93074000 		li	a5,4
 184 00ac 6380F41C 		beq	s1,a5,.L31
 185              	.LBE150:
 186              	.LBE266:
 187              	.LBE284:
 188              	.LBE303:
 189              	.LBE323:
 190              	.LBE337:
 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 191              		.loc 1 126 14
 192              	.LBB338:
 193              	.LBB324:
 194              	.LBB304:
 195              	.LBB285:
 196              	.LBB267:
 197              	.LBB250:
 198              	.LBB151:
 199 00b0 93071002 		li	a5,33
 200 00b4 638AF41E 		beq	s1,a5,.L32
GAS LISTING /tmp/ccp1Y5YK.s 			page 11


 201              	.LBE151:
 202              	.LBE250:
 203              	.LBE267:
 204              	.LBE285:
 205              	.LBE304:
 206              	.LBE324:
 207              	.LBE338:
 151:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 208              		.loc 1 151 14
 209              	.LBB339:
 210              	.LBB325:
 211              	.LBB305:
 212              	.LBB286:
 213              	.LBB268:
 214              	.LBB251:
 215              	.LBB235:
 216              	.LBB152:
 217 00b8 93072002 		li	a5,34
 218 00bc 6386F424 		beq	s1,a5,.L33
 219              	.LBE152:
 220              	.LBE235:
 221              	.LBE251:
 222              	.LBE268:
 223              	.LBE286:
 224              	.LBE305:
 225              	.LBE325:
 226              	.LBE339:
 177:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 227              		.loc 1 177 14
 228              	.LBB340:
 229              	.LBB326:
 230              	.LBB306:
 231              	.LBB287:
 232              	.LBB269:
 233              	.LBB252:
 234              	.LBB236:
 235              	.LBB219:
 236              	.LBB153:
 237 00c0 93073002 		li	a5,35
 238 00c4 6386F42E 		beq	s1,a5,.L34
 239              	.LBE153:
 240              	.LBE219:
 241              	.LBE236:
 242              	.LBE252:
 243              	.LBE269:
 244              	.LBE287:
 245              	.LBE306:
 246              	.LBE326:
 247              	.LBE340:
 196:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 248              		.loc 1 196 14
 249              	.LBB341:
 250              	.LBB327:
 251              	.LBB307:
 252              	.LBB288:
 253              	.LBB270:
 254              	.LBB253:
GAS LISTING /tmp/ccp1Y5YK.s 			page 12


 255              	.LBB237:
 256              	.LBB220:
 257              	.LBB198:
 258              	.LBB154:
 259 00c8 93074002 		li	a5,36
 260 00cc 6380F432 		beq	s1,a5,.L35
 261              	.LBE154:
 262              	.LBE198:
 263              	.LBE220:
 264              	.LBE237:
 265              	.LBE253:
 266              	.LBE270:
 267              	.LBE288:
 268              	.LBE307:
 269              	.LBE327:
 270              	.LBE341:
 216:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 271              		.loc 1 216 14
 272              	.LBB342:
 273              	.LBB328:
 274              	.LBB308:
 275              	.LBB289:
 276              	.LBB271:
 277              	.LBB254:
 278              	.LBB238:
 279              	.LBB221:
 280              	.LBB199:
 281              	.LBB186:
 282              	.LBB155:
 283 00d0 93071004 		li	a5,65
 284 00d4 638CF434 		beq	s1,a5,.L36
 285              	.LBE155:
 286              	.LBE186:
 287              	.LBE199:
 288              	.LBE221:
 289              	.LBE238:
 290              	.LBE254:
 291              	.LBE271:
 292              	.LBE289:
 293              	.LBE308:
 294              	.LBE328:
 295              	.LBE342:
 229:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 296              		.loc 1 229 14
 297              	.LBB343:
 298              	.LBB329:
 299              	.LBB309:
 300              	.LBB290:
 301              	.LBB272:
 302              	.LBB255:
 303              	.LBB239:
 304              	.LBB222:
 305              	.LBB200:
 306              	.LBB187:
 307              	.LBB175:
 308              	.LBB156:
 309 00d8 93072004 		li	a5,66
GAS LISTING /tmp/ccp1Y5YK.s 			page 13


 310 00dc E392F4F8 		bne	s1,a5,.L3
 311              	.LBB157:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 312              		.loc 1 230 13
 313              	.LBB158:
 314              	.LBB159:
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 315              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 316              		.loc 2 107 5
 317              		.loc 2 107 64 is_stmt 0
 318              	#APP
 319              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 320              		csrr a5, sepc
 321              	# 0 "" 2
 322              	#NO_APP
 323 00e4 2334F4FC 		sd	a5,-56(s0)
 324              		.loc 2 108 5 is_stmt 1
 325              		.loc 2 108 12 is_stmt 0
 326 00e8 833484FC 		ld	s1,-56(s0)
 327              	.LVL5:
 328              	.LBE159:
 329              	.LBE158:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 330              		.loc 1 230 38
 331 00ec 93844400 		addi	s1,s1,4
 332              	.LVL6:
 231:src/Riscv.cpp **** 
 333              		.loc 1 231 13 is_stmt 1
 334              	.LBB160:
 335              	.LBB161:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/ccp1Y5YK.s 			page 14


 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 336              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 337              		.loc 2 177 5
 338              		.loc 2 177 76 is_stmt 0
 339              	#APP
GAS LISTING /tmp/ccp1Y5YK.s 			page 15


 340              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 341              		csrr a5, sstatus
 342              	# 0 "" 2
 343              	#NO_APP
 344 00f4 2330F4FC 		sd	a5,-64(s0)
 345              		.loc 2 178 5 is_stmt 1
 346              		.loc 2 178 12 is_stmt 0
 347 00f8 033904FC 		ld	s2,-64(s0)
 348              	.LVL7:
 349              	.LBE161:
 350              	.LBE160:
 233:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 351              		.loc 1 233 13 is_stmt 1
 234:src/Riscv.cpp **** 
 352              		.loc 1 234 13
 234:src/Riscv.cpp **** 
 353              		.loc 1 234 48 is_stmt 0
 354              	#APP
 355              	# 234 "src/Riscv.cpp" 1
 236:src/Riscv.cpp **** 
 356              		ld a1, 11*8(fp)
 357              	# 0 "" 2
 358              		.loc 1 236 13 is_stmt 1
 236:src/Riscv.cpp **** 
 359              		.loc 1 236 53 is_stmt 0
 360              	# 236 "src/Riscv.cpp" 1
 361              		mv a0, a1
 362              	# 0 "" 2
 363              	.LVL8:
 238:src/Riscv.cpp **** 
 364              		.loc 1 238 13 is_stmt 1
 238:src/Riscv.cpp **** 
 365              		.loc 1 238 27 is_stmt 0
 366              	#NO_APP
 367 0104 1375F50F 		andi	a0,a0,0xff
 368 0108 97000000 		call	_ZN8KConsole4putcEc@plt
 368      E7800000 
 369              	.LVL9:
 240:src/Riscv.cpp ****             w_sepc(sepc);
 370              		.loc 1 240 13 is_stmt 1
 371              	.LBB162:
 372              	.LBB163:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 373              		.loc 2 183 5
 374              		.loc 2 183 77 is_stmt 0
 375              	#APP
 376              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 377              		csrw sstatus, s2
 378              	# 0 "" 2
 379              	.LVL10:
 380              	#NO_APP
GAS LISTING /tmp/ccp1Y5YK.s 			page 16


 381              	.LBE163:
 382              	.LBE162:
 241:src/Riscv.cpp ****         }
 383              		.loc 1 241 13 is_stmt 1
 384              	.LBB164:
 385              	.LBB165:
 113:src/../h/Riscv.hpp **** }
 386              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 387              		.loc 2 113 65 is_stmt 0
 388              	#APP
 389              	# 113 "src/../h/Riscv.hpp" 1
 390              		csrw sepc, s1
 391              	# 0 "" 2
 392              	.LVL11:
 393              	#NO_APP
 394              	.LBE165:
 395              	.LBE164:
 396              	.LBE157:
 397              	.LBE156:
 398              	.LBE175:
 399              	.LBE187:
 400              	.LBE200:
 401              	.LBE222:
 402              	.LBE239:
 403              	.LBE255:
 404              	.LBE272:
 405              	.LBE290:
 406              	.LBE309:
 407              	.LBE329:
 408              	.LBE343:
 409              		.loc 1 270 1
 410 0118 6FF09FF4 		j	.L3
 411              	.LVL12:
 412              	.L26:
 413              	.LBB344:
 414              	.LBB330:
 415              	.LBB137:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 416              		.loc 1 33 13 is_stmt 1
 417              	.LBB138:
 418              	.LBB139:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 419              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 420              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 421              		.loc 2 107 64 is_stmt 0
 422              	#APP
 423              	# 107 "src/../h/Riscv.hpp" 1
 424              		csrr a5, sepc
 425              	# 0 "" 2
 426              	#NO_APP
 427 0120 233CF4F0 		sd	a5,-232(s0)
 108:src/../h/Riscv.hpp **** }
 428              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccp1Y5YK.s 			page 17


 429              		.loc 2 108 12 is_stmt 0
 430 0124 033984F1 		ld	s2,-232(s0)
 431              	.LBE139:
 432              	.LBE138:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 433              		.loc 1 33 38
 434 0128 13094900 		addi	s2,s2,4
 435              	.LVL13:
  34:src/Riscv.cpp **** 
 436              		.loc 1 34 13 is_stmt 1
 437              	.LBB140:
 438              	.LBB141:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 439              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 440              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 441              		.loc 2 177 76 is_stmt 0
 442              	#APP
 443              	# 177 "src/../h/Riscv.hpp" 1
 444              		csrr a5, sstatus
 445              	# 0 "" 2
 446              	#NO_APP
 447 0130 2338F4F0 		sd	a5,-240(s0)
 178:src/../h/Riscv.hpp **** }
 448              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 449              		.loc 2 178 12 is_stmt 0
 450 0134 833904F1 		ld	s3,-240(s0)
 451              	.LVL14:
 452              	.LBE141:
 453              	.LBE140:
  37:src/Riscv.cpp ****             _thread::Body arg2;
 454              		.loc 1 37 13 is_stmt 1
  38:src/Riscv.cpp ****             uint64 arg3;
 455              		.loc 1 38 13
  39:src/Riscv.cpp ****             uint64 *arg4;
 456              		.loc 1 39 13
  40:src/Riscv.cpp **** 
 457              		.loc 1 40 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 458              		.loc 1 42 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 459              		.loc 1 42 48 is_stmt 0
 460              	#APP
 461              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 462              		ld a1, 11*8(fp)
 463              	# 0 "" 2
 464              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 465              		.loc 1 43 48 is_stmt 0
 466              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 467              		ld a2, 12*8(fp)
 468              	# 0 "" 2
 469              		.loc 1 44 13 is_stmt 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 18


  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 470              		.loc 1 44 48 is_stmt 0
 471              	# 44 "src/Riscv.cpp" 1
  45:src/Riscv.cpp **** 
 472              		ld a3, 13*8(fp)
 473              	# 0 "" 2
 474              		.loc 1 45 13 is_stmt 1
  45:src/Riscv.cpp **** 
 475              		.loc 1 45 48 is_stmt 0
 476              	# 45 "src/Riscv.cpp" 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 477              		ld a4, 14*8(fp)
 478              	# 0 "" 2
 479              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 480              		.loc 1 48 56 is_stmt 0
 481              	# 48 "src/Riscv.cpp" 1
 482              		mv s4, a1
 483              	# 0 "" 2
 484              	.LVL15:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 485              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 486              		.loc 1 49 56 is_stmt 0
 487              	# 49 "src/Riscv.cpp" 1
 488              		mv a0, a2
 489              	# 0 "" 2
 490              	.LVL16:
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 491              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 492              		.loc 1 50 56 is_stmt 0
 493              	# 50 "src/Riscv.cpp" 1
 494              		mv a1, a3
 495              	# 0 "" 2
 496              	.LVL17:
  51:src/Riscv.cpp **** 
 497              		.loc 1 51 13 is_stmt 1
  51:src/Riscv.cpp **** 
 498              		.loc 1 51 56 is_stmt 0
 499              	# 51 "src/Riscv.cpp" 1
 500              		mv a2, a4
 501              	# 0 "" 2
 502              	.LVL18:
  54:src/Riscv.cpp ****             *arg1=t;
 503              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp ****             *arg1=t;
 504              		.loc 1 54 47 is_stmt 0
 505              	#NO_APP
 506 0158 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 506      E7800000 
 507              	.LVL19:
  55:src/Riscv.cpp **** 
 508              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp **** 
 509              		.loc 1 55 18 is_stmt 0
 510 0160 2330AA00 		sd	a0,0(s4)
GAS LISTING /tmp/ccp1Y5YK.s 			page 19


  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 511              		.loc 1 57 13 is_stmt 1
  58:src/Riscv.cpp ****             else ret =-1;
 512              		.loc 1 58 13
 513 0164 630C0500 		beqz	a0,.L22
  58:src/Riscv.cpp ****             else ret =-1;
 514              		.loc 1 58 31 is_stmt 0
 515 0168 93070000 		li	a5,0
 516              	.L6:
 517              	.LVL20:
  63:src/Riscv.cpp **** 
 518              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp **** 
 519              		.loc 1 63 56 is_stmt 0
 520              	#APP
 521              	# 63 "src/Riscv.cpp" 1
  65:src/Riscv.cpp ****             w_sepc(sepc);
 522              		mv a0, a5
 523              	# 0 "" 2
 524              		.loc 1 65 13 is_stmt 1
 525              	.LVL21:
 526              	#NO_APP
 527              	.LBB142:
 528              	.LBB143:
 183:src/../h/Riscv.hpp **** }
 529              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 530              		.loc 2 183 77 is_stmt 0
 531              	#APP
 532              	# 183 "src/../h/Riscv.hpp" 1
 533              		csrw sstatus, s3
 534              	# 0 "" 2
 535              	.LVL22:
 536              	#NO_APP
 537              	.LBE143:
 538              	.LBE142:
  66:src/Riscv.cpp ****         }
 539              		.loc 1 66 13 is_stmt 1
 540              	.LBB144:
 541              	.LBB145:
 113:src/../h/Riscv.hpp **** }
 542              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 543              		.loc 2 113 65 is_stmt 0
 544              	#APP
 545              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 546              		csrw sepc, s2
 547              	# 0 "" 2
 548              		.loc 2 114 1
 549              	#NO_APP
 550 0178 6FF01FF1 		j	.L5
 551              	.LVL23:
 552              	.L22:
 553              	.LBE145:
 554              	.LBE144:
  59:src/Riscv.cpp **** 
GAS LISTING /tmp/ccp1Y5YK.s 			page 20


 555              		.loc 1 59 22
 556 017c 9307F0FF 		li	a5,-1
 557 0180 6FF0DFFE 		j	.L6
 558              	.LVL24:
 559              	.L27:
 560              	.LBE137:
 561              	.LBE330:
 562              	.LBB331:
 563              	.LBB310:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 564              		.loc 1 69 13 is_stmt 1
 565              	.LBB311:
 566              	.LBB312:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 567              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 568              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 569              		.loc 2 107 64 is_stmt 0
 570              	#APP
 571              	# 107 "src/../h/Riscv.hpp" 1
 572              		csrr a5, sepc
 573              	# 0 "" 2
 574              	#NO_APP
 575 0188 2334F4F2 		sd	a5,-216(s0)
 108:src/../h/Riscv.hpp **** }
 576              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 577              		.loc 2 108 12 is_stmt 0
 578 018c 833484F2 		ld	s1,-216(s0)
 579              	.LVL25:
 580              	.LBE312:
 581              	.LBE311:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 582              		.loc 1 69 38
 583 0190 93844400 		addi	s1,s1,4
 584              	.LVL26:
  70:src/Riscv.cpp ****             //kmem_alloc
 585              		.loc 1 70 13 is_stmt 1
 586              	.LBB313:
 587              	.LBB314:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 588              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 589              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 590              		.loc 2 177 76 is_stmt 0
 591              	#APP
 592              	# 177 "src/../h/Riscv.hpp" 1
 593              		csrr a5, sstatus
 594              	# 0 "" 2
 595              	#NO_APP
 596 0198 2330F4F2 		sd	a5,-224(s0)
 178:src/../h/Riscv.hpp **** }
 597              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 598              		.loc 2 178 12 is_stmt 0
GAS LISTING /tmp/ccp1Y5YK.s 			page 21


 599 019c 033904F2 		ld	s2,-224(s0)
 600              	.LVL27:
 601              	.LBE314:
 602              	.LBE313:
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 603              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 604              		.loc 1 72 56 is_stmt 0
 605              	#APP
 606              	# 72 "src/Riscv.cpp" 1
 607              		mv a0, a1
 608              	# 0 "" 2
 609              	.LVL28:
  73:src/Riscv.cpp **** 
 610              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp **** 
 611              		.loc 1 73 61 is_stmt 0
 612              	#NO_APP
 613 01a4 13156500 		slli	a0,a0,6
 614              	.LVL29:
 615 01a8 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 615      E7800000 
 616              	.LVL30:
  76:src/Riscv.cpp **** 
 617              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp **** 
 618              		.loc 1 76 56 is_stmt 0
 619              	#APP
 620              	# 76 "src/Riscv.cpp" 1
  78:src/Riscv.cpp ****             w_sepc(sepc);
 621              		mv a0, a0
 622              	# 0 "" 2
 623              		.loc 1 78 13 is_stmt 1
 624              	.LVL31:
 625              	#NO_APP
 626              	.LBB315:
 627              	.LBB316:
 183:src/../h/Riscv.hpp **** }
 628              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 629              		.loc 2 183 77 is_stmt 0
 630              	#APP
 631              	# 183 "src/../h/Riscv.hpp" 1
 632              		csrw sstatus, s2
 633              	# 0 "" 2
 634              	.LVL32:
 635              	#NO_APP
 636              	.LBE316:
 637              	.LBE315:
  79:src/Riscv.cpp ****         }
 638              		.loc 1 79 13 is_stmt 1
 639              	.LBB317:
 640              	.LBB318:
 113:src/../h/Riscv.hpp **** }
 641              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 642              		.loc 2 113 65 is_stmt 0
GAS LISTING /tmp/ccp1Y5YK.s 			page 22


 643              	#APP
 644              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 645              		csrw sepc, s1
 646              	# 0 "" 2
 647              		.loc 2 114 1
 648              	#NO_APP
 649 01bc 6FF05FEA 		j	.L3
 650              	.LVL33:
 651              	.L28:
 652              	.LBE318:
 653              	.LBE317:
 654              	.LBE310:
 655              	.LBB319:
 656              	.LBB291:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 657              		.loc 1 82 13 is_stmt 1
 658              	.LBB292:
 659              	.LBB293:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 660              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 661              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 662              		.loc 2 107 64 is_stmt 0
 663              	#APP
 664              	# 107 "src/../h/Riscv.hpp" 1
 665              		csrr a5, sepc
 666              	# 0 "" 2
 667              	#NO_APP
 668 01c4 233CF4F2 		sd	a5,-200(s0)
 108:src/../h/Riscv.hpp **** }
 669              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 670              		.loc 2 108 12 is_stmt 0
 671 01c8 833484F3 		ld	s1,-200(s0)
 672              	.LVL34:
 673              	.LBE293:
 674              	.LBE292:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 675              		.loc 1 82 38
 676 01cc 93844400 		addi	s1,s1,4
 677              	.LVL35:
  83:src/Riscv.cpp **** 
 678              		.loc 1 83 13 is_stmt 1
 679              	.LBB294:
 680              	.LBB295:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 681              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 682              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 683              		.loc 2 177 76 is_stmt 0
 684              	#APP
 685              	# 177 "src/../h/Riscv.hpp" 1
 686              		csrr a5, sstatus
 687              	# 0 "" 2
GAS LISTING /tmp/ccp1Y5YK.s 			page 23


 688              	#NO_APP
 689 01d4 2338F4F2 		sd	a5,-208(s0)
 178:src/../h/Riscv.hpp **** }
 690              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 691              		.loc 2 178 12 is_stmt 0
 692 01d8 033904F3 		ld	s2,-208(s0)
 693              	.LVL36:
 694              	.LBE295:
 695              	.LBE294:
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 696              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 697              		.loc 1 85 56 is_stmt 0
 698              	#APP
 699              	# 85 "src/Riscv.cpp" 1
 700              		mv a0, a1
 701              	# 0 "" 2
 702              	.LVL37:
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 703              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 704              		.loc 1 86 49 is_stmt 0
 705              	#NO_APP
 706 01e0 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 706      E7800000 
 707              	.LVL38:
  87:src/Riscv.cpp **** 
 708              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 709              		.loc 1 87 56 is_stmt 0
 710              	#APP
 711              	# 87 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****             w_sepc(sepc);
 712              		mv a0, a0
 713              	# 0 "" 2
 714              		.loc 1 89 13 is_stmt 1
 715              	.LVL39:
 716              	#NO_APP
 717              	.LBB296:
 718              	.LBB297:
 183:src/../h/Riscv.hpp **** }
 719              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 720              		.loc 2 183 77 is_stmt 0
 721              	#APP
 722              	# 183 "src/../h/Riscv.hpp" 1
 723              		csrw sstatus, s2
 724              	# 0 "" 2
 725              	.LVL40:
 726              	#NO_APP
 727              	.LBE297:
 728              	.LBE296:
  90:src/Riscv.cpp ****         }
 729              		.loc 1 90 13 is_stmt 1
 730              	.LBB298:
 731              	.LBB299:
GAS LISTING /tmp/ccp1Y5YK.s 			page 24


 113:src/../h/Riscv.hpp **** }
 732              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 733              		.loc 2 113 65 is_stmt 0
 734              	#APP
 735              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 736              		csrw sepc, s1
 737              	# 0 "" 2
 738              		.loc 2 114 1
 739              	#NO_APP
 740 01f4 6FF0DFE6 		j	.L3
 741              	.LVL41:
 742              	.L29:
 743              	.LBE299:
 744              	.LBE298:
 745              	.LBE291:
 746              	.LBB300:
 747              	.LBB273:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 748              		.loc 1 94 13 is_stmt 1
 749              	.LBB274:
 750              	.LBB275:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 751              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 752              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 753              		.loc 2 107 64 is_stmt 0
 754              	#APP
 755              	# 107 "src/../h/Riscv.hpp" 1
 756              		csrr a5, sepc
 757              	# 0 "" 2
 758              	#NO_APP
 759 01fc 2334F4F4 		sd	a5,-184(s0)
 108:src/../h/Riscv.hpp **** }
 760              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 761              		.loc 2 108 12 is_stmt 0
 762 0200 833484F4 		ld	s1,-184(s0)
 763              	.LVL42:
 764              	.LBE275:
 765              	.LBE274:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 766              		.loc 1 94 38
 767 0204 93844400 		addi	s1,s1,4
 768              	.LVL43:
  95:src/Riscv.cpp **** 
 769              		.loc 1 95 13 is_stmt 1
 770              	.LBB276:
 771              	.LBB277:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 772              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 773              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 774              		.loc 2 177 76 is_stmt 0
GAS LISTING /tmp/ccp1Y5YK.s 			page 25


 775              	#APP
 776              	# 177 "src/../h/Riscv.hpp" 1
 777              		csrr a5, sstatus
 778              	# 0 "" 2
 779              	#NO_APP
 780 020c 2330F4F4 		sd	a5,-192(s0)
 178:src/../h/Riscv.hpp **** }
 781              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 782              		.loc 2 178 12 is_stmt 0
 783 0210 033904F4 		ld	s2,-192(s0)
 784              	.LVL44:
 785              	.LBE277:
 786              	.LBE276:
  97:src/Riscv.cpp ****             _thread::dispatch();
 787              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp ****             _thread::dispatch();
 788              		.loc 1 97 31 is_stmt 0
 789 0214 97070000 		la	a5,_ZN7_thread7runningE
 789      83B70700 
 790 021c 83B70700 		ld	a5,0(a5)
  97:src/Riscv.cpp ****             _thread::dispatch();
 791              		.loc 1 97 39
 792 0220 13071000 		li	a4,1
 793 0224 2384E702 		sb	a4,40(a5)
  98:src/Riscv.cpp **** 
 794              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp **** 
 795              		.loc 1 98 30 is_stmt 0
 796 0228 97000000 		call	_ZN7_thread8dispatchEv@plt
 796      E7800000 
 797              	.LVL45:
 100:src/Riscv.cpp ****             w_sepc(sepc);
 798              		.loc 1 100 13 is_stmt 1
 799              	.LBB278:
 800              	.LBB279:
 183:src/../h/Riscv.hpp **** }
 801              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 802              		.loc 2 183 77 is_stmt 0
 803              	#APP
 804              	# 183 "src/../h/Riscv.hpp" 1
 805              		csrw sstatus, s2
 806              	# 0 "" 2
 807              	.LVL46:
 808              	#NO_APP
 809              	.LBE279:
 810              	.LBE278:
 101:src/Riscv.cpp **** 
 811              		.loc 1 101 13 is_stmt 1
 812              	.LBB280:
 813              	.LBB281:
 113:src/../h/Riscv.hpp **** }
 814              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 815              		.loc 2 113 65 is_stmt 0
 816              	#APP
GAS LISTING /tmp/ccp1Y5YK.s 			page 26


 817              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 818              		csrw sepc, s1
 819              	# 0 "" 2
 820              		.loc 2 114 1
 821              	#NO_APP
 822 0238 6FF09FE2 		j	.L3
 823              	.LVL47:
 824              	.L30:
 825              	.LBE281:
 826              	.LBE280:
 827              	.LBE273:
 828              	.LBB282:
 829              	.LBB256:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 830              		.loc 1 106 13 is_stmt 1
 831              	.LBB257:
 832              	.LBB258:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 833              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 834              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 835              		.loc 2 107 64 is_stmt 0
 836              	#APP
 837              	# 107 "src/../h/Riscv.hpp" 1
 838              		csrr a5, sepc
 839              	# 0 "" 2
 840              	#NO_APP
 841 0240 233CF4F4 		sd	a5,-168(s0)
 108:src/../h/Riscv.hpp **** }
 842              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 843              		.loc 2 108 12 is_stmt 0
 844 0244 833484F5 		ld	s1,-168(s0)
 845              	.LVL48:
 846              	.LBE258:
 847              	.LBE257:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 848              		.loc 1 106 38
 849 0248 93844400 		addi	s1,s1,4
 850              	.LVL49:
 107:src/Riscv.cpp **** 
 851              		.loc 1 107 13 is_stmt 1
 852              	.LBB259:
 853              	.LBB260:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 854              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 855              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 856              		.loc 2 177 76 is_stmt 0
 857              	#APP
 858              	# 177 "src/../h/Riscv.hpp" 1
 859              		csrr a5, sstatus
 860              	# 0 "" 2
 861              	#NO_APP
GAS LISTING /tmp/ccp1Y5YK.s 			page 27


 862 0250 2338F4F4 		sd	a5,-176(s0)
 178:src/../h/Riscv.hpp **** }
 863              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 864              		.loc 2 178 12 is_stmt 0
 865 0254 033904F5 		ld	s2,-176(s0)
 866              	.LVL50:
 867              	.LBE260:
 868              	.LBE259:
 110:src/Riscv.cpp **** 
 869              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 870              		.loc 1 110 30 is_stmt 0
 871 0258 97000000 		call	_ZN7_thread8dispatchEv@plt
 871      E7800000 
 872              	.LVL51:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 873              		.loc 1 112 13 is_stmt 1
 874              	.LBB261:
 875              	.LBB262:
 183:src/../h/Riscv.hpp **** }
 876              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 877              		.loc 2 183 77 is_stmt 0
 878              	#APP
 879              	# 183 "src/../h/Riscv.hpp" 1
 880              		csrw sstatus, s2
 881              	# 0 "" 2
 882              	.LVL52:
 883              	#NO_APP
 884              	.LBE262:
 885              	.LBE261:
 113:src/Riscv.cpp ****         }
 886              		.loc 1 113 13 is_stmt 1
 887              	.LBB263:
 888              	.LBB264:
 113:src/../h/Riscv.hpp **** }
 889              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 890              		.loc 2 113 65 is_stmt 0
 891              	#APP
 892              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 893              		csrw sepc, s1
 894              	# 0 "" 2
 895              		.loc 2 114 1
 896              	#NO_APP
 897 0268 6FF09FDF 		j	.L3
 898              	.LVL53:
 899              	.L31:
 900              	.LBE264:
 901              	.LBE263:
 902              	.LBE256:
 903              	.LBB265:
 904              	.LBB240:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 905              		.loc 1 117 13 is_stmt 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 28


 906              	.LBB241:
 907              	.LBB242:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 908              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 909              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 910              		.loc 2 107 64 is_stmt 0
 911              	#APP
 912              	# 107 "src/../h/Riscv.hpp" 1
 913              		csrr a5, sepc
 914              	# 0 "" 2
 915              	#NO_APP
 916 0270 2334F4F6 		sd	a5,-152(s0)
 108:src/../h/Riscv.hpp **** }
 917              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 918              		.loc 2 108 12 is_stmt 0
 919 0274 833484F6 		ld	s1,-152(s0)
 920              	.LVL54:
 921              	.LBE242:
 922              	.LBE241:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 923              		.loc 1 117 38
 924 0278 93844400 		addi	s1,s1,4
 925              	.LVL55:
 118:src/Riscv.cpp **** 
 926              		.loc 1 118 13 is_stmt 1
 927              	.LBB243:
 928              	.LBB244:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 929              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 930              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 931              		.loc 2 177 76 is_stmt 0
 932              	#APP
 933              	# 177 "src/../h/Riscv.hpp" 1
 934              		csrr a5, sstatus
 935              	# 0 "" 2
 936              	#NO_APP
 937 0280 2330F4F6 		sd	a5,-160(s0)
 178:src/../h/Riscv.hpp **** }
 938              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 939              		.loc 2 178 12 is_stmt 0
 940 0284 033904F6 		ld	s2,-160(s0)
 941              	.LVL56:
 942              	.LBE244:
 943              	.LBE243:
 120:src/Riscv.cpp ****             _thread::dispatch();
 944              		.loc 1 120 13 is_stmt 1
 120:src/Riscv.cpp ****             _thread::dispatch();
 945              		.loc 1 120 39 is_stmt 0
 946 0288 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 946      83B70700 
 947 0290 23B00700 		sd	zero,0(a5)
GAS LISTING /tmp/ccp1Y5YK.s 			page 29


 121:src/Riscv.cpp **** 
 948              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp **** 
 949              		.loc 1 121 30 is_stmt 0
 950 0294 97000000 		call	_ZN7_thread8dispatchEv@plt
 950      E7800000 
 951              	.LVL57:
 123:src/Riscv.cpp ****             w_sepc(sepc);
 952              		.loc 1 123 13 is_stmt 1
 953              	.LBB245:
 954              	.LBB246:
 183:src/../h/Riscv.hpp **** }
 955              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 956              		.loc 2 183 77 is_stmt 0
 957              	#APP
 958              	# 183 "src/../h/Riscv.hpp" 1
 959              		csrw sstatus, s2
 960              	# 0 "" 2
 961              	.LVL58:
 962              	#NO_APP
 963              	.LBE246:
 964              	.LBE245:
 124:src/Riscv.cpp ****         }
 965              		.loc 1 124 13 is_stmt 1
 966              	.LBB247:
 967              	.LBB248:
 113:src/../h/Riscv.hpp **** }
 968              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 969              		.loc 2 113 65 is_stmt 0
 970              	#APP
 971              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 972              		csrw sepc, s1
 973              	# 0 "" 2
 974              		.loc 2 114 1
 975              	#NO_APP
 976 02a4 6FF0DFDB 		j	.L3
 977              	.LVL59:
 978              	.L32:
 979              	.LBE248:
 980              	.LBE247:
 981              	.LBE240:
 982              	.LBB249:
 983              	.LBB223:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 984              		.loc 1 127 13 is_stmt 1
 985              	.LBB224:
 986              	.LBB225:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 987              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 988              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 989              		.loc 2 107 64 is_stmt 0
 990              	#APP
GAS LISTING /tmp/ccp1Y5YK.s 			page 30


 991              	# 107 "src/../h/Riscv.hpp" 1
 992              		csrr a5, sepc
 993              	# 0 "" 2
 994              	#NO_APP
 995 02ac 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/Riscv.hpp **** }
 996              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 997              		.loc 2 108 12 is_stmt 0
 998 02b0 833484F7 		ld	s1,-136(s0)
 999              	.LVL60:
 1000              	.LBE225:
 1001              	.LBE224:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1002              		.loc 1 127 38
 1003 02b4 93844400 		addi	s1,s1,4
 1004              	.LVL61:
 128:src/Riscv.cpp **** 
 1005              		.loc 1 128 13 is_stmt 1
 1006              	.LBB226:
 1007              	.LBB227:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1008              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1009              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1010              		.loc 2 177 76 is_stmt 0
 1011              	#APP
 1012              	# 177 "src/../h/Riscv.hpp" 1
 1013              		csrr a5, sstatus
 1014              	# 0 "" 2
 1015              	#NO_APP
 1016 02bc 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/Riscv.hpp **** }
 1017              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1018              		.loc 2 178 12 is_stmt 0
 1019 02c0 033904F7 		ld	s2,-144(s0)
 1020              	.LVL62:
 1021              	.LBE227:
 1022              	.LBE226:
 130:src/Riscv.cpp ****            uint64 arg2;
 1023              		.loc 1 130 12 is_stmt 1
 131:src/Riscv.cpp **** 
 1024              		.loc 1 131 12
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1025              		.loc 1 133 13
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1026              		.loc 1 133 48 is_stmt 0
 1027              	#APP
 1028              	# 133 "src/Riscv.cpp" 1
 134:src/Riscv.cpp **** 
 1029              		ld a1, 11*8(fp)
 1030              	# 0 "" 2
 1031              		.loc 1 134 13 is_stmt 1
 134:src/Riscv.cpp **** 
 1032              		.loc 1 134 48 is_stmt 0
GAS LISTING /tmp/ccp1Y5YK.s 			page 31


 1033              	# 134 "src/Riscv.cpp" 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1034              		ld a2, 12*8(fp)
 1035              	# 0 "" 2
 1036              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1037              		.loc 1 136 56 is_stmt 0
 1038              	# 136 "src/Riscv.cpp" 1
 1039              		mv s3, a1
 1040              	# 0 "" 2
 1041              	.LVL63:
 137:src/Riscv.cpp **** 
 1042              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp **** 
 1043              		.loc 1 137 56 is_stmt 0
 1044              	# 137 "src/Riscv.cpp" 1
 1045              		mv s4, a2
 1046              	# 0 "" 2
 1047              	.LVL64:
 139:src/Riscv.cpp ****             *arg1=sem;
 1048              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp ****             *arg1=sem;
 1049              		.loc 1 139 50 is_stmt 0
 1050              	#NO_APP
 1051 02d4 13054000 		li	a0,4
 1052 02d8 97000000 		call	_ZN10KSemaphorenwEm@plt
 1052      E7800000 
 1053              	.LVL65:
 1054              	.LBB228:
 1055              	.LBB229:
 1056              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1057              		.loc 3 14 40
 1058 02e0 23204501 		sw	s4,0(a0)
 1059              	.LVL66:
 1060              	.LBE229:
 1061              	.LBE228:
 140:src/Riscv.cpp **** 
 1062              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp **** 
 1063              		.loc 1 140 18 is_stmt 0
 1064 02e4 23B0A900 		sd	a0,0(s3)
 142:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1065              		.loc 1 142 13 is_stmt 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 32


 1066              	.LVL67:
 143:src/Riscv.cpp ****             else ret=-1;
 1067              		.loc 1 143 13
 1068 02e8 630C0500 		beqz	a0,.L23
 143:src/Riscv.cpp ****             else ret=-1;
 1069              		.loc 1 143 33 is_stmt 0
 1070 02ec 93070000 		li	a5,0
 1071              	.L13:
 1072              	.LVL68:
 146:src/Riscv.cpp **** 
 1073              		.loc 1 146 13 is_stmt 1
 146:src/Riscv.cpp **** 
 1074              		.loc 1 146 56 is_stmt 0
 1075              	#APP
 1076              	# 146 "src/Riscv.cpp" 1
 148:src/Riscv.cpp ****             w_sepc(sepc);
 1077              		mv a0, a5
 1078              	# 0 "" 2
 1079              		.loc 1 148 13 is_stmt 1
 1080              	.LVL69:
 1081              	#NO_APP
 1082              	.LBB230:
 1083              	.LBB231:
 183:src/../h/Riscv.hpp **** }
 1084              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1085              		.loc 2 183 77 is_stmt 0
 1086              	#APP
 1087              	# 183 "src/../h/Riscv.hpp" 1
 1088              		csrw sstatus, s2
 1089              	# 0 "" 2
 1090              	.LVL70:
 1091              	#NO_APP
 1092              	.LBE231:
 1093              	.LBE230:
 149:src/Riscv.cpp ****         }
 1094              		.loc 1 149 13 is_stmt 1
 1095              	.LBB232:
 1096              	.LBB233:
 113:src/../h/Riscv.hpp **** }
 1097              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1098              		.loc 2 113 65 is_stmt 0
 1099              	#APP
 1100              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1101              		csrw sepc, s1
 1102              	# 0 "" 2
 1103              		.loc 2 114 1
 1104              	#NO_APP
 1105 02fc 6FF05FD6 		j	.L3
 1106              	.LVL71:
 1107              	.L23:
 1108              	.LBE233:
 1109              	.LBE232:
 144:src/Riscv.cpp **** 
 1110              		.loc 1 144 21
GAS LISTING /tmp/ccp1Y5YK.s 			page 33


 1111 0300 9307F0FF 		li	a5,-1
 1112 0304 6FF0DFFE 		j	.L13
 1113              	.LVL72:
 1114              	.L33:
 1115              	.LBE223:
 1116              	.LBB234:
 1117              	.LBB201:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1118              		.loc 1 152 13 is_stmt 1
 1119              	.LBB202:
 1120              	.LBB203:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1121              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1122              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1123              		.loc 2 107 64 is_stmt 0
 1124              	#APP
 1125              	# 107 "src/../h/Riscv.hpp" 1
 1126              		csrr a5, sepc
 1127              	# 0 "" 2
 1128              	#NO_APP
 1129 030c 2334F4F8 		sd	a5,-120(s0)
 108:src/../h/Riscv.hpp **** }
 1130              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1131              		.loc 2 108 12 is_stmt 0
 1132 0310 833984F8 		ld	s3,-120(s0)
 1133              	.LBE203:
 1134              	.LBE202:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1135              		.loc 1 152 38
 1136 0314 93894900 		addi	s3,s3,4
 1137              	.LVL73:
 153:src/Riscv.cpp **** 
 1138              		.loc 1 153 13 is_stmt 1
 1139              	.LBB204:
 1140              	.LBB205:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1141              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1142              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1143              		.loc 2 177 76 is_stmt 0
 1144              	#APP
 1145              	# 177 "src/../h/Riscv.hpp" 1
 1146              		csrr a5, sstatus
 1147              	# 0 "" 2
 1148              	#NO_APP
 1149 031c 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/Riscv.hpp **** }
 1150              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1151              		.loc 2 178 12 is_stmt 0
 1152 0320 033A04F8 		ld	s4,-128(s0)
 1153              	.LVL74:
 1154              	.LBE205:
GAS LISTING /tmp/ccp1Y5YK.s 			page 34


 1155              	.LBE204:
 155:src/Riscv.cpp **** 
 1156              		.loc 1 155 13 is_stmt 1
 158:src/Riscv.cpp **** 
 1157              		.loc 1 158 13
 158:src/Riscv.cpp **** 
 1158              		.loc 1 158 48 is_stmt 0
 1159              	#APP
 1160              	# 158 "src/Riscv.cpp" 1
 160:src/Riscv.cpp **** 
 1161              		ld a1, 11*8(fp)
 1162              	# 0 "" 2
 1163              		.loc 1 160 13 is_stmt 1
 160:src/Riscv.cpp **** 
 1164              		.loc 1 160 56 is_stmt 0
 1165              	# 160 "src/Riscv.cpp" 1
 1166              		mv a5, a1
 1167              	# 0 "" 2
 1168              	.LVL75:
 162:src/Riscv.cpp **** 
 1169              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1170              		.loc 1 162 25 is_stmt 0
 1171              	#NO_APP
 1172 032c 03B90700 		ld	s2,0(a5)
 1173              	.LVL76:
 1174 0330 6F000003 		j	.L17
 1175              	.LVL77:
 1176              	.L16:
 1177              	.LBB206:
 1178              	.LBB207:
 1179              	.LBB208:
 1180              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
GAS LISTING /tmp/ccp1Y5YK.s 			page 35


  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1181              		.loc 4 72 12
 1182 0334 83340500 		ld	s1,0(a0)
 1183              	.LVL78:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1184              		.loc 4 73 35
 1185 0338 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1185      E7800000 
 1186              	.LVL79:
 1187              	.LBE208:
GAS LISTING /tmp/ccp1Y5YK.s 			page 36


 1188              	.LBE207:
 167:src/Riscv.cpp ****                 sem->val++;
 1189              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 sem->val++;
 1190              		.loc 1 167 29 is_stmt 0
 1191 0340 93071000 		li	a5,1
 1192 0344 238CF402 		sb	a5,56(s1)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1193              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1194              		.loc 1 168 22 is_stmt 0
 1195 0348 83270900 		lw	a5,0(s2)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1196              		.loc 1 168 25
 1197 034c 9B871700 		addiw	a5,a5,1
 1198 0350 2320F900 		sw	a5,0(s2)
 169:src/Riscv.cpp ****             }
 1199              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****             }
 1200              		.loc 1 169 31 is_stmt 0
 1201 0354 13850400 		mv	a0,s1
 1202 0358 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1202      E7800000 
 1203              	.LVL80:
 1204              	.L17:
 1205              	.LBE206:
 165:src/Riscv.cpp ****                 _thread* t = KSemaphore::blocked.removeFirst();
 1206              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp ****                 _thread* t = KSemaphore::blocked.removeFirst();
 1207              		.loc 1 165 50
 1208              	.LBB211:
 1209              	.LBB212:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1210              		.loc 4 79 14 is_stmt 0
 1211 0360 97070000 		la	a5,_ZN10KSemaphore7blockedE
 1211      83B70700 
 1212 0368 03B50700 		ld	a0,0(a5)
 1213              		.loc 4 79 9
 1214 036c 63040502 		beqz	a0,.L15
  80:src/../h/List.hpp ****         return head->data;
 1215              		.loc 4 80 22
 1216 0370 83370500 		ld	a5,0(a0)
 1217              	.LVL81:
 1218              	.LBE212:
 1219              	.LBE211:
 165:src/Riscv.cpp ****                 _thread* t = KSemaphore::blocked.removeFirst();
 1220              		.loc 1 165 50
 1221 0374 63800702 		beqz	a5,.L15
 1222              	.LBB213:
 166:src/Riscv.cpp ****                 t->deblocked=true;
 1223              		.loc 1 166 17 is_stmt 1
 1224              	.LVL82:
GAS LISTING /tmp/ccp1Y5YK.s 			page 37


 1225              	.LBB210:
 1226              	.LBB209:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1227              		.loc 4 69 22 is_stmt 0
 1228 0378 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1229              		.loc 4 69 9
 1230 037c 17070000 		la	a4,_ZN10KSemaphore7blockedE
 1230      03370700 
 1231 0384 2330F700 		sd	a5,0(a4)
  70:src/../h/List.hpp **** 
 1232              		.loc 4 70 9
 1233 0388 E39607FA 		bnez	a5,.L16
  70:src/../h/List.hpp **** 
 1234              		.loc 4 70 22
 1235 038c 23340700 		sd	zero,8(a4)
 1236 0390 6FF05FFA 		j	.L16
 1237              	.LVL83:
 1238              	.L15:
 1239              	.LBE209:
 1240              	.LBE210:
 1241              	.LBE213:
 172:src/Riscv.cpp **** 
 1242              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp **** 
 1243              		.loc 1 172 23 is_stmt 0
 1244 0394 63080900 		beqz	s2,.L18
 172:src/Riscv.cpp **** 
 1245              		.loc 1 172 20 discriminator 1
 1246 0398 13050900 		mv	a0,s2
 1247 039c 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1247      E7800000 
 1248              	.LVL84:
 1249              	.L18:
 174:src/Riscv.cpp ****             w_sepc(sepc);
 1250              		.loc 1 174 13 is_stmt 1
 1251              	.LBB214:
 1252              	.LBB215:
 183:src/../h/Riscv.hpp **** }
 1253              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1254              		.loc 2 183 77 is_stmt 0
 1255              	#APP
 1256              	# 183 "src/../h/Riscv.hpp" 1
 1257              		csrw sstatus, s4
 1258              	# 0 "" 2
 1259              	.LVL85:
 1260              	#NO_APP
 1261              	.LBE215:
 1262              	.LBE214:
 175:src/Riscv.cpp ****         }
 1263              		.loc 1 175 13 is_stmt 1
 1264              	.LBB216:
 1265              	.LBB217:
 113:src/../h/Riscv.hpp **** }
 1266              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccp1Y5YK.s 			page 38


 1267              		.loc 2 113 65 is_stmt 0
 1268              	#APP
 1269              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1270              		csrw sepc, s3
 1271              	# 0 "" 2
 1272              		.loc 2 114 1
 1273              	#NO_APP
 1274 03ac 6FF05FCB 		j	.L3
 1275              	.LVL86:
 1276              	.L34:
 1277              	.LBE217:
 1278              	.LBE216:
 1279              	.LBE201:
 1280              	.LBB218:
 1281              	.LBB188:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1282              		.loc 1 178 13 is_stmt 1
 1283              	.LBB189:
 1284              	.LBB190:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1285              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1286              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1287              		.loc 2 107 64 is_stmt 0
 1288              	#APP
 1289              	# 107 "src/../h/Riscv.hpp" 1
 1290              		csrr a5, sepc
 1291              	# 0 "" 2
 1292              	#NO_APP
 1293 03b4 233CF4F8 		sd	a5,-104(s0)
 108:src/../h/Riscv.hpp **** }
 1294              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1295              		.loc 2 108 12 is_stmt 0
 1296 03b8 833484F9 		ld	s1,-104(s0)
 1297              	.LVL87:
 1298              	.LBE190:
 1299              	.LBE189:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1300              		.loc 1 178 38
 1301 03bc 93844400 		addi	s1,s1,4
 1302              	.LVL88:
 179:src/Riscv.cpp **** 
 1303              		.loc 1 179 13 is_stmt 1
 1304              	.LBB191:
 1305              	.LBB192:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1306              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1307              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1308              		.loc 2 177 76 is_stmt 0
 1309              	#APP
 1310              	# 177 "src/../h/Riscv.hpp" 1
 1311              		csrr a5, sstatus
GAS LISTING /tmp/ccp1Y5YK.s 			page 39


 1312              	# 0 "" 2
 1313              	#NO_APP
 1314 03c4 2338F4F8 		sd	a5,-112(s0)
 178:src/../h/Riscv.hpp **** }
 1315              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1316              		.loc 2 178 12 is_stmt 0
 1317 03c8 033904F9 		ld	s2,-112(s0)
 1318              	.LVL89:
 1319              	.LBE192:
 1320              	.LBE191:
 181:src/Riscv.cpp **** 
 1321              		.loc 1 181 13 is_stmt 1
 183:src/Riscv.cpp **** 
 1322              		.loc 1 183 13
 183:src/Riscv.cpp **** 
 1323              		.loc 1 183 48 is_stmt 0
 1324              	#APP
 1325              	# 183 "src/Riscv.cpp" 1
 185:src/Riscv.cpp **** 
 1326              		ld a1, 11*8(fp)
 1327              	# 0 "" 2
 1328              		.loc 1 185 13 is_stmt 1
 185:src/Riscv.cpp **** 
 1329              		.loc 1 185 56 is_stmt 0
 1330              	# 185 "src/Riscv.cpp" 1
 1331              		mv a0, a1
 1332              	# 0 "" 2
 1333              	.LVL90:
 189:src/Riscv.cpp **** 
 1334              		.loc 1 189 13 is_stmt 1
 189:src/Riscv.cpp **** 
 1335              		.loc 1 189 36 is_stmt 0
 1336              	#NO_APP
 1337 03d4 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1337      E7800000 
 1338              	.LVL91:
 191:src/Riscv.cpp **** 
 1339              		.loc 1 191 13 is_stmt 1
 191:src/Riscv.cpp **** 
 1340              		.loc 1 191 56 is_stmt 0
 1341              	#APP
 1342              	# 191 "src/Riscv.cpp" 1
 193:src/Riscv.cpp ****             w_sepc(sepc);
 1343              		mv a0, a0
 1344              	# 0 "" 2
 1345              		.loc 1 193 13 is_stmt 1
 1346              	.LVL92:
 1347              	#NO_APP
 1348              	.LBB193:
 1349              	.LBB194:
 183:src/../h/Riscv.hpp **** }
 1350              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1351              		.loc 2 183 77 is_stmt 0
 1352              	#APP
 1353              	# 183 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 40


 1354              		csrw sstatus, s2
 1355              	# 0 "" 2
 1356              	.LVL93:
 1357              	#NO_APP
 1358              	.LBE194:
 1359              	.LBE193:
 194:src/Riscv.cpp ****         }
 1360              		.loc 1 194 13 is_stmt 1
 1361              	.LBB195:
 1362              	.LBB196:
 113:src/../h/Riscv.hpp **** }
 1363              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1364              		.loc 2 113 65 is_stmt 0
 1365              	#APP
 1366              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1367              		csrw sepc, s1
 1368              	# 0 "" 2
 1369              		.loc 2 114 1
 1370              	#NO_APP
 1371 03e8 6FF09FC7 		j	.L3
 1372              	.LVL94:
 1373              	.L35:
 1374              	.LBE196:
 1375              	.LBE195:
 1376              	.LBE188:
 1377              	.LBB197:
 1378              	.LBB176:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1379              		.loc 1 197 13 is_stmt 1
 1380              	.LBB177:
 1381              	.LBB178:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1382              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1383              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1384              		.loc 2 107 64 is_stmt 0
 1385              	#APP
 1386              	# 107 "src/../h/Riscv.hpp" 1
 1387              		csrr a5, sepc
 1388              	# 0 "" 2
 1389              	#NO_APP
 1390 03f0 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/Riscv.hpp **** }
 1391              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1392              		.loc 2 108 12 is_stmt 0
 1393 03f4 833484FA 		ld	s1,-88(s0)
 1394              	.LVL95:
 1395              	.LBE178:
 1396              	.LBE177:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1397              		.loc 1 197 38
 1398 03f8 93844400 		addi	s1,s1,4
 1399              	.LVL96:
GAS LISTING /tmp/ccp1Y5YK.s 			page 41


 198:src/Riscv.cpp **** 
 1400              		.loc 1 198 13 is_stmt 1
 1401              	.LBB179:
 1402              	.LBB180:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1403              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1404              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1405              		.loc 2 177 76 is_stmt 0
 1406              	#APP
 1407              	# 177 "src/../h/Riscv.hpp" 1
 1408              		csrr a5, sstatus
 1409              	# 0 "" 2
 1410              	#NO_APP
 1411 0400 2330F4FA 		sd	a5,-96(s0)
 178:src/../h/Riscv.hpp **** }
 1412              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1413              		.loc 2 178 12 is_stmt 0
 1414 0404 033904FA 		ld	s2,-96(s0)
 1415              	.LVL97:
 1416              	.LBE180:
 1417              	.LBE179:
 200:src/Riscv.cpp **** 
 1418              		.loc 1 200 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1419              		.loc 1 202 13
 202:src/Riscv.cpp **** 
 1420              		.loc 1 202 48 is_stmt 0
 1421              	#APP
 1422              	# 202 "src/Riscv.cpp" 1
 204:src/Riscv.cpp **** 
 1423              		ld a1, 11*8(fp)
 1424              	# 0 "" 2
 1425              		.loc 1 204 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1426              		.loc 1 204 56 is_stmt 0
 1427              	# 204 "src/Riscv.cpp" 1
 1428              		mv a0, a1
 1429              	# 0 "" 2
 1430              	.LVL98:
 207:src/Riscv.cpp **** 
 1431              		.loc 1 207 13 is_stmt 1
 207:src/Riscv.cpp **** 
 1432              		.loc 1 207 25 is_stmt 0
 1433              	#NO_APP
 1434 0410 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1434      E7800000 
 1435              	.LVL99:
 209:src/Riscv.cpp **** 
 1436              		.loc 1 209 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1437              		.loc 1 211 13
 211:src/Riscv.cpp **** 
 1438              		.loc 1 211 56 is_stmt 0
 1439 0418 93070000 		li	a5,0
GAS LISTING /tmp/ccp1Y5YK.s 			page 42


 1440              	#APP
 1441              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1442              		mv a0, a5
 1443              	# 0 "" 2
 1444              		.loc 1 213 13 is_stmt 1
 1445              	.LVL100:
 1446              	#NO_APP
 1447              	.LBB181:
 1448              	.LBB182:
 183:src/../h/Riscv.hpp **** }
 1449              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1450              		.loc 2 183 77 is_stmt 0
 1451              	#APP
 1452              	# 183 "src/../h/Riscv.hpp" 1
 1453              		csrw sstatus, s2
 1454              	# 0 "" 2
 1455              	.LVL101:
 1456              	#NO_APP
 1457              	.LBE182:
 1458              	.LBE181:
 214:src/Riscv.cpp ****         }
 1459              		.loc 1 214 13 is_stmt 1
 1460              	.LBB183:
 1461              	.LBB184:
 113:src/../h/Riscv.hpp **** }
 1462              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1463              		.loc 2 113 65 is_stmt 0
 1464              	#APP
 1465              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1466              		csrw sepc, s1
 1467              	# 0 "" 2
 1468              		.loc 2 114 1
 1469              	#NO_APP
 1470 0428 6FF09FC3 		j	.L3
 1471              	.LVL102:
 1472              	.L36:
 1473              	.LBE184:
 1474              	.LBE183:
 1475              	.LBE176:
 1476              	.LBB185:
 1477              	.LBB166:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1478              		.loc 1 217 13 is_stmt 1
 1479              	.LBB167:
 1480              	.LBB168:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1481              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1482              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1483              		.loc 2 107 64 is_stmt 0
 1484              	#APP
 1485              	# 107 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 43


 1486              		csrr a5, sepc
 1487              	# 0 "" 2
 1488              	#NO_APP
 1489 0430 233CF4FA 		sd	a5,-72(s0)
 108:src/../h/Riscv.hpp **** }
 1490              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1491              		.loc 2 108 12 is_stmt 0
 1492 0434 833484FB 		ld	s1,-72(s0)
 1493              	.LVL103:
 1494              	.LBE168:
 1495              	.LBE167:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1496              		.loc 1 217 38
 1497 0438 93844400 		addi	s1,s1,4
 1498              	.LVL104:
 218:src/Riscv.cpp **** 
 1499              		.loc 1 218 13 is_stmt 1
 1500              	.LBB169:
 1501              	.LBB170:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1502              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1503              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1504              		.loc 2 177 76 is_stmt 0
 1505              	#APP
 1506              	# 177 "src/../h/Riscv.hpp" 1
 1507              		csrr a5, sstatus
 1508              	# 0 "" 2
 1509              	#NO_APP
 1510 0440 2338F4FA 		sd	a5,-80(s0)
 178:src/../h/Riscv.hpp **** }
 1511              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1512              		.loc 2 178 12 is_stmt 0
 1513 0444 033904FB 		ld	s2,-80(s0)
 1514              	.LVL105:
 1515              	.LBE170:
 1516              	.LBE169:
 221:src/Riscv.cpp **** 
 1517              		.loc 1 221 13 is_stmt 1
 221:src/Riscv.cpp **** 
 1518              		.loc 1 221 36 is_stmt 0
 1519 0448 97000000 		call	_ZN8KConsole4getcEv@plt
 1519      E7800000 
 1520              	.LVL106:
 223:src/Riscv.cpp **** 
 1521              		.loc 1 223 13 is_stmt 1
 223:src/Riscv.cpp **** 
 1522              		.loc 1 223 54 is_stmt 0
 1523              	#APP
 1524              	# 223 "src/Riscv.cpp" 1
 226:src/Riscv.cpp ****             w_sepc(sepc);
 1525              		mv a0, a0
 1526              	# 0 "" 2
 1527              		.loc 1 226 13 is_stmt 1
GAS LISTING /tmp/ccp1Y5YK.s 			page 44


 1528              	.LVL107:
 1529              	#NO_APP
 1530              	.LBB171:
 1531              	.LBB172:
 183:src/../h/Riscv.hpp **** }
 1532              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1533              		.loc 2 183 77 is_stmt 0
 1534              	#APP
 1535              	# 183 "src/../h/Riscv.hpp" 1
 1536              		csrw sstatus, s2
 1537              	# 0 "" 2
 1538              	.LVL108:
 1539              	#NO_APP
 1540              	.LBE172:
 1541              	.LBE171:
 227:src/Riscv.cpp ****         }
 1542              		.loc 1 227 13 is_stmt 1
 1543              	.LBB173:
 1544              	.LBB174:
 113:src/../h/Riscv.hpp **** }
 1545              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1546              		.loc 2 113 65 is_stmt 0
 1547              	#APP
 1548              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1549              		csrw sepc, s1
 1550              	# 0 "" 2
 1551              		.loc 2 114 1
 1552              	#NO_APP
 1553 045c 6FF05FC0 		j	.L3
 1554              	.LBE174:
 1555              	.LBE173:
 1556              	.LBE166:
 1557              	.LBE185:
 1558              	.LBE197:
 1559              	.LBE218:
 1560              	.LBE234:
 1561              	.LBE249:
 1562              	.LBE265:
 1563              	.LBE282:
 1564              	.LBE300:
 1565              	.LBE319:
 1566              	.LBE331:
 1567              	.LBE344:
 1568              		.cfi_endproc
 1569              	.LFE51:
 1571              	.Letext0:
 1572              		.file 5 "src/../h/../lib/hw.h"
 1573              		.file 6 "src/../h/MemoryAllocator.hpp"
 1574              		.file 7 "src/../h/Scheduler.hpp"
 1575              		.file 8 "src/../h/_thread.hpp"
 1576              		.file 9 "src/../h/KConsole.hpp"
GAS LISTING /tmp/ccp1Y5YK.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccp1Y5YK.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccp1Y5YK.s:13     .text:0000000000000000 .L0 
     /tmp/ccp1Y5YK.s:14     .text:0000000000000000 .L0 
     /tmp/ccp1Y5YK.s:15     .text:0000000000000004 .L0 
     /tmp/ccp1Y5YK.s:17     .text:0000000000000008 .L0 
     /tmp/ccp1Y5YK.s:19     .text:000000000000000c .L0 
     /tmp/ccp1Y5YK.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccp1Y5YK.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccp1Y5YK.s:33     .text:0000000000000014 .L0 
     /tmp/ccp1Y5YK.s:34     .text:0000000000000018 .L0 
     /tmp/ccp1Y5YK.s:35     .text:0000000000000018 .L0 
     /tmp/ccp1Y5YK.s:37     .text:000000000000001c .L0 
     /tmp/ccp1Y5YK.s:39     .text:0000000000000020 .L0 
     /tmp/ccp1Y5YK.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccp1Y5YK.s:48     .text:0000000000000020 .L0 
     /tmp/ccp1Y5YK.s:49     .text:0000000000000020 .L0 
     /tmp/ccp1Y5YK.s:50     .text:0000000000000024 .L0 
     /tmp/ccp1Y5YK.s:57     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:58     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:59     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:60     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:61     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:62     .text:000000000000003c .L0 
     /tmp/ccp1Y5YK.s:64     .text:0000000000000040 .L0 
     /tmp/ccp1Y5YK.s:69     .text:0000000000000040 .L0 
     /tmp/ccp1Y5YK.s:70     .text:0000000000000040 .L0 
     /tmp/ccp1Y5YK.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/ccp1Y5YK.s:79     .text:0000000000000048 .L0 
     /tmp/ccp1Y5YK.s:80     .text:0000000000000048 .L0 
     /tmp/ccp1Y5YK.s:84     .text:000000000000004c .L0 
     /tmp/ccp1Y5YK.s:87     .text:0000000000000050 .L0 
     /tmp/ccp1Y5YK.s:88     .text:0000000000000050 .L0 
     /tmp/ccp1Y5YK.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:25     .text:0000000000000050 .L0 
     /tmp/ccp1Y5YK.s:98     .text:0000000000000054 .L0 
     /tmp/ccp1Y5YK.s:99     .text:0000000000000054 .L0 
     /tmp/ccp1Y5YK.s:102    .text:0000000000000058 .L0 
     /tmp/ccp1Y5YK.s:108    .text:0000000000000060 .L0 
     /tmp/ccp1Y5YK.s:109    .text:0000000000000064 .L0 
     /tmp/ccp1Y5YK.s:110    .text:0000000000000064 .L0 
     /tmp/ccp1Y5YK.s:112    .text:0000000000000068 .L0 
     /tmp/ccp1Y5YK.s:113    .text:0000000000000068 .L0 
     /tmp/ccp1Y5YK.s:115    .text:000000000000006c .L0 
     /tmp/ccp1Y5YK.s:117    .text:0000000000000070 .L0 
     /tmp/ccp1Y5YK.s:119    .text:0000000000000074 .L0 
     /tmp/ccp1Y5YK.s:121    .text:0000000000000078 .L0 
     /tmp/ccp1Y5YK.s:123    .text:000000000000007c .L0 
     /tmp/ccp1Y5YK.s:127    .text:0000000000000080 .L0 
     /tmp/ccp1Y5YK.s:131    .text:0000000000000080 .L0 
     /tmp/ccp1Y5YK.s:139    .text:0000000000000088 .L0 
     /tmp/ccp1Y5YK.s:147    .text:0000000000000090 .L0 
     /tmp/ccp1Y5YK.s:157    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 46


     /tmp/ccp1Y5YK.s:169    .text:00000000000000a0 .L0 
     /tmp/ccp1Y5YK.s:183    .text:00000000000000a8 .L0 
     /tmp/ccp1Y5YK.s:199    .text:00000000000000b0 .L0 
     /tmp/ccp1Y5YK.s:217    .text:00000000000000b8 .L0 
     /tmp/ccp1Y5YK.s:237    .text:00000000000000c0 .L0 
     /tmp/ccp1Y5YK.s:259    .text:00000000000000c8 .L0 
     /tmp/ccp1Y5YK.s:283    .text:00000000000000d0 .L0 
     /tmp/ccp1Y5YK.s:309    .text:00000000000000d8 .L0 
     /tmp/ccp1Y5YK.s:315    .text:00000000000000e0 .L0 
     /tmp/ccp1Y5YK.s:316    .text:00000000000000e0 .L0 
     /tmp/ccp1Y5YK.s:317    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000e0 .L0 
     /tmp/ccp1Y5YK.s:325    .text:00000000000000e8 .L0 
     /tmp/ccp1Y5YK.s:326    .text:00000000000000e8 .L0 
     /tmp/ccp1Y5YK.s:331    .text:00000000000000ec .L0 
     /tmp/ccp1Y5YK.s:336    .text:00000000000000f0 .L0 
     /tmp/ccp1Y5YK.s:337    .text:00000000000000f0 .L0 
     /tmp/ccp1Y5YK.s:338    .text:00000000000000f0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000f0 .L0 
     /tmp/ccp1Y5YK.s:346    .text:00000000000000f8 .L0 
     /tmp/ccp1Y5YK.s:347    .text:00000000000000f8 .L0 
     /tmp/ccp1Y5YK.s:352    .text:00000000000000fc .L0 
     /tmp/ccp1Y5YK.s:353    .text:00000000000000fc .L0 
       src/Riscv.cpp:234    .text:00000000000000fc .L0 
     /tmp/ccp1Y5YK.s:359    .text:0000000000000100 .L0 
       src/Riscv.cpp:236    .text:0000000000000100 .L0 
     /tmp/ccp1Y5YK.s:365    .text:0000000000000104 .L0 
     /tmp/ccp1Y5YK.s:367    .text:0000000000000104 .L0 
     /tmp/ccp1Y5YK.s:373    .text:0000000000000110 .L0 
     /tmp/ccp1Y5YK.s:374    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000110 .L0 
     /tmp/ccp1Y5YK.s:386    .text:0000000000000114 .L0 
     /tmp/ccp1Y5YK.s:387    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000114 .L0 
     /tmp/ccp1Y5YK.s:410    .text:0000000000000118 .L0 
     /tmp/ccp1Y5YK.s:419    .text:000000000000011c .L0 
     /tmp/ccp1Y5YK.s:420    .text:000000000000011c .L0 
     /tmp/ccp1Y5YK.s:421    .text:000000000000011c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000011c .L0 
     /tmp/ccp1Y5YK.s:429    .text:0000000000000124 .L0 
     /tmp/ccp1Y5YK.s:430    .text:0000000000000124 .L0 
     /tmp/ccp1Y5YK.s:434    .text:0000000000000128 .L0 
     /tmp/ccp1Y5YK.s:439    .text:000000000000012c .L0 
     /tmp/ccp1Y5YK.s:440    .text:000000000000012c .L0 
     /tmp/ccp1Y5YK.s:441    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000012c .L0 
     /tmp/ccp1Y5YK.s:449    .text:0000000000000134 .L0 
     /tmp/ccp1Y5YK.s:450    .text:0000000000000134 .L0 
     /tmp/ccp1Y5YK.s:455    .text:0000000000000138 .L0 
     /tmp/ccp1Y5YK.s:456    .text:0000000000000138 .L0 
     /tmp/ccp1Y5YK.s:457    .text:0000000000000138 .L0 
     /tmp/ccp1Y5YK.s:458    .text:0000000000000138 .L0 
     /tmp/ccp1Y5YK.s:459    .text:0000000000000138 .L0 
       src/Riscv.cpp:42     .text:0000000000000138 .L0 
     /tmp/ccp1Y5YK.s:465    .text:000000000000013c .L0 
       src/Riscv.cpp:43     .text:000000000000013c .L0 
     /tmp/ccp1Y5YK.s:470    .text:0000000000000140 .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 47


       src/Riscv.cpp:44     .text:0000000000000140 .L0 
     /tmp/ccp1Y5YK.s:475    .text:0000000000000144 .L0 
       src/Riscv.cpp:45     .text:0000000000000144 .L0 
     /tmp/ccp1Y5YK.s:480    .text:0000000000000148 .L0 
       src/Riscv.cpp:48     .text:0000000000000148 .L0 
     /tmp/ccp1Y5YK.s:486    .text:000000000000014c .L0 
       src/Riscv.cpp:49     .text:000000000000014c .L0 
     /tmp/ccp1Y5YK.s:492    .text:0000000000000150 .L0 
       src/Riscv.cpp:50     .text:0000000000000150 .L0 
     /tmp/ccp1Y5YK.s:498    .text:0000000000000154 .L0 
       src/Riscv.cpp:51     .text:0000000000000154 .L0 
     /tmp/ccp1Y5YK.s:504    .text:0000000000000158 .L0 
     /tmp/ccp1Y5YK.s:506    .text:0000000000000158 .L0 
     /tmp/ccp1Y5YK.s:509    .text:0000000000000160 .L0 
     /tmp/ccp1Y5YK.s:510    .text:0000000000000160 .L0 
     /tmp/ccp1Y5YK.s:512    .text:0000000000000164 .L0 
     /tmp/ccp1Y5YK.s:513    .text:0000000000000164 .L0 
     /tmp/ccp1Y5YK.s:515    .text:0000000000000168 .L0 
     /tmp/ccp1Y5YK.s:519    .text:000000000000016c .L0 
       src/Riscv.cpp:63     .text:000000000000016c .L0 
     /tmp/ccp1Y5YK.s:529    .text:0000000000000170 .L0 
     /tmp/ccp1Y5YK.s:530    .text:0000000000000170 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000170 .L0 
     /tmp/ccp1Y5YK.s:542    .text:0000000000000174 .L0 
     /tmp/ccp1Y5YK.s:543    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000174 .L0 
     /tmp/ccp1Y5YK.s:550    .text:0000000000000178 .L0 
     /tmp/ccp1Y5YK.s:556    .text:000000000000017c .L0 
     /tmp/ccp1Y5YK.s:567    .text:0000000000000184 .L0 
     /tmp/ccp1Y5YK.s:568    .text:0000000000000184 .L0 
     /tmp/ccp1Y5YK.s:569    .text:0000000000000184 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000184 .L0 
     /tmp/ccp1Y5YK.s:577    .text:000000000000018c .L0 
     /tmp/ccp1Y5YK.s:578    .text:000000000000018c .L0 
     /tmp/ccp1Y5YK.s:583    .text:0000000000000190 .L0 
     /tmp/ccp1Y5YK.s:588    .text:0000000000000194 .L0 
     /tmp/ccp1Y5YK.s:589    .text:0000000000000194 .L0 
     /tmp/ccp1Y5YK.s:590    .text:0000000000000194 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000194 .L0 
     /tmp/ccp1Y5YK.s:598    .text:000000000000019c .L0 
     /tmp/ccp1Y5YK.s:599    .text:000000000000019c .L0 
     /tmp/ccp1Y5YK.s:604    .text:00000000000001a0 .L0 
       src/Riscv.cpp:72     .text:00000000000001a0 .L0 
     /tmp/ccp1Y5YK.s:611    .text:00000000000001a4 .L0 
     /tmp/ccp1Y5YK.s:613    .text:00000000000001a4 .L0 
     /tmp/ccp1Y5YK.s:618    .text:00000000000001b0 .L0 
       src/Riscv.cpp:76     .text:00000000000001b0 .L0 
     /tmp/ccp1Y5YK.s:628    .text:00000000000001b4 .L0 
     /tmp/ccp1Y5YK.s:629    .text:00000000000001b4 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001b4 .L0 
     /tmp/ccp1Y5YK.s:641    .text:00000000000001b8 .L0 
     /tmp/ccp1Y5YK.s:642    .text:00000000000001b8 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001b8 .L0 
     /tmp/ccp1Y5YK.s:649    .text:00000000000001bc .L0 
     /tmp/ccp1Y5YK.s:660    .text:00000000000001c0 .L0 
     /tmp/ccp1Y5YK.s:661    .text:00000000000001c0 .L0 
     /tmp/ccp1Y5YK.s:662    .text:00000000000001c0 .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 48


  src/../h/Riscv.hpp:107    .text:00000000000001c0 .L0 
     /tmp/ccp1Y5YK.s:670    .text:00000000000001c8 .L0 
     /tmp/ccp1Y5YK.s:671    .text:00000000000001c8 .L0 
     /tmp/ccp1Y5YK.s:676    .text:00000000000001cc .L0 
     /tmp/ccp1Y5YK.s:681    .text:00000000000001d0 .L0 
     /tmp/ccp1Y5YK.s:682    .text:00000000000001d0 .L0 
     /tmp/ccp1Y5YK.s:683    .text:00000000000001d0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001d0 .L0 
     /tmp/ccp1Y5YK.s:691    .text:00000000000001d8 .L0 
     /tmp/ccp1Y5YK.s:692    .text:00000000000001d8 .L0 
     /tmp/ccp1Y5YK.s:697    .text:00000000000001dc .L0 
       src/Riscv.cpp:85     .text:00000000000001dc .L0 
     /tmp/ccp1Y5YK.s:704    .text:00000000000001e0 .L0 
     /tmp/ccp1Y5YK.s:706    .text:00000000000001e0 .L0 
     /tmp/ccp1Y5YK.s:709    .text:00000000000001e8 .L0 
       src/Riscv.cpp:87     .text:00000000000001e8 .L0 
     /tmp/ccp1Y5YK.s:719    .text:00000000000001ec .L0 
     /tmp/ccp1Y5YK.s:720    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001ec .L0 
     /tmp/ccp1Y5YK.s:732    .text:00000000000001f0 .L0 
     /tmp/ccp1Y5YK.s:733    .text:00000000000001f0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001f0 .L0 
     /tmp/ccp1Y5YK.s:740    .text:00000000000001f4 .L0 
     /tmp/ccp1Y5YK.s:751    .text:00000000000001f8 .L0 
     /tmp/ccp1Y5YK.s:752    .text:00000000000001f8 .L0 
     /tmp/ccp1Y5YK.s:753    .text:00000000000001f8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001f8 .L0 
     /tmp/ccp1Y5YK.s:761    .text:0000000000000200 .L0 
     /tmp/ccp1Y5YK.s:762    .text:0000000000000200 .L0 
     /tmp/ccp1Y5YK.s:767    .text:0000000000000204 .L0 
     /tmp/ccp1Y5YK.s:772    .text:0000000000000208 .L0 
     /tmp/ccp1Y5YK.s:773    .text:0000000000000208 .L0 
     /tmp/ccp1Y5YK.s:774    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000208 .L0 
     /tmp/ccp1Y5YK.s:782    .text:0000000000000210 .L0 
     /tmp/ccp1Y5YK.s:783    .text:0000000000000210 .L0 
     /tmp/ccp1Y5YK.s:788    .text:0000000000000214 .L0 
     /tmp/ccp1Y5YK.s:789    .text:0000000000000214 .L0 
     /tmp/ccp1Y5YK.s:792    .text:0000000000000220 .L0 
     /tmp/ccp1Y5YK.s:795    .text:0000000000000228 .L0 
     /tmp/ccp1Y5YK.s:796    .text:0000000000000228 .L0 
     /tmp/ccp1Y5YK.s:801    .text:0000000000000230 .L0 
     /tmp/ccp1Y5YK.s:802    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000230 .L0 
     /tmp/ccp1Y5YK.s:814    .text:0000000000000234 .L0 
     /tmp/ccp1Y5YK.s:815    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000234 .L0 
     /tmp/ccp1Y5YK.s:822    .text:0000000000000238 .L0 
     /tmp/ccp1Y5YK.s:833    .text:000000000000023c .L0 
     /tmp/ccp1Y5YK.s:834    .text:000000000000023c .L0 
     /tmp/ccp1Y5YK.s:835    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000023c .L0 
     /tmp/ccp1Y5YK.s:843    .text:0000000000000244 .L0 
     /tmp/ccp1Y5YK.s:844    .text:0000000000000244 .L0 
     /tmp/ccp1Y5YK.s:849    .text:0000000000000248 .L0 
     /tmp/ccp1Y5YK.s:854    .text:000000000000024c .L0 
     /tmp/ccp1Y5YK.s:855    .text:000000000000024c .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 49


     /tmp/ccp1Y5YK.s:856    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000024c .L0 
     /tmp/ccp1Y5YK.s:864    .text:0000000000000254 .L0 
     /tmp/ccp1Y5YK.s:865    .text:0000000000000254 .L0 
     /tmp/ccp1Y5YK.s:870    .text:0000000000000258 .L0 
     /tmp/ccp1Y5YK.s:871    .text:0000000000000258 .L0 
     /tmp/ccp1Y5YK.s:876    .text:0000000000000260 .L0 
     /tmp/ccp1Y5YK.s:877    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000260 .L0 
     /tmp/ccp1Y5YK.s:889    .text:0000000000000264 .L0 
     /tmp/ccp1Y5YK.s:890    .text:0000000000000264 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000264 .L0 
     /tmp/ccp1Y5YK.s:897    .text:0000000000000268 .L0 
     /tmp/ccp1Y5YK.s:908    .text:000000000000026c .L0 
     /tmp/ccp1Y5YK.s:909    .text:000000000000026c .L0 
     /tmp/ccp1Y5YK.s:910    .text:000000000000026c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000026c .L0 
     /tmp/ccp1Y5YK.s:918    .text:0000000000000274 .L0 
     /tmp/ccp1Y5YK.s:919    .text:0000000000000274 .L0 
     /tmp/ccp1Y5YK.s:924    .text:0000000000000278 .L0 
     /tmp/ccp1Y5YK.s:929    .text:000000000000027c .L0 
     /tmp/ccp1Y5YK.s:930    .text:000000000000027c .L0 
     /tmp/ccp1Y5YK.s:931    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000027c .L0 
     /tmp/ccp1Y5YK.s:939    .text:0000000000000284 .L0 
     /tmp/ccp1Y5YK.s:940    .text:0000000000000284 .L0 
     /tmp/ccp1Y5YK.s:945    .text:0000000000000288 .L0 
     /tmp/ccp1Y5YK.s:946    .text:0000000000000288 .L0 
     /tmp/ccp1Y5YK.s:949    .text:0000000000000294 .L0 
     /tmp/ccp1Y5YK.s:950    .text:0000000000000294 .L0 
     /tmp/ccp1Y5YK.s:955    .text:000000000000029c .L0 
     /tmp/ccp1Y5YK.s:956    .text:000000000000029c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000029c .L0 
     /tmp/ccp1Y5YK.s:968    .text:00000000000002a0 .L0 
     /tmp/ccp1Y5YK.s:969    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002a0 .L0 
     /tmp/ccp1Y5YK.s:976    .text:00000000000002a4 .L0 
     /tmp/ccp1Y5YK.s:987    .text:00000000000002a8 .L0 
     /tmp/ccp1Y5YK.s:988    .text:00000000000002a8 .L0 
     /tmp/ccp1Y5YK.s:989    .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000002a8 .L0 
     /tmp/ccp1Y5YK.s:997    .text:00000000000002b0 .L0 
     /tmp/ccp1Y5YK.s:998    .text:00000000000002b0 .L0 
     /tmp/ccp1Y5YK.s:1003   .text:00000000000002b4 .L0 
     /tmp/ccp1Y5YK.s:1008   .text:00000000000002b8 .L0 
     /tmp/ccp1Y5YK.s:1009   .text:00000000000002b8 .L0 
     /tmp/ccp1Y5YK.s:1010   .text:00000000000002b8 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000002b8 .L0 
     /tmp/ccp1Y5YK.s:1018   .text:00000000000002c0 .L0 
     /tmp/ccp1Y5YK.s:1019   .text:00000000000002c0 .L0 
     /tmp/ccp1Y5YK.s:1024   .text:00000000000002c4 .L0 
     /tmp/ccp1Y5YK.s:1025   .text:00000000000002c4 .L0 
     /tmp/ccp1Y5YK.s:1026   .text:00000000000002c4 .L0 
       src/Riscv.cpp:133    .text:00000000000002c4 .L0 
     /tmp/ccp1Y5YK.s:1032   .text:00000000000002c8 .L0 
       src/Riscv.cpp:134    .text:00000000000002c8 .L0 
     /tmp/ccp1Y5YK.s:1037   .text:00000000000002cc .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 50


       src/Riscv.cpp:136    .text:00000000000002cc .L0 
     /tmp/ccp1Y5YK.s:1043   .text:00000000000002d0 .L0 
       src/Riscv.cpp:137    .text:00000000000002d0 .L0 
     /tmp/ccp1Y5YK.s:1049   .text:00000000000002d4 .L0 
     /tmp/ccp1Y5YK.s:1051   .text:00000000000002d4 .L0 
     /tmp/ccp1Y5YK.s:1058   .text:00000000000002e0 .L0 
     /tmp/ccp1Y5YK.s:1063   .text:00000000000002e4 .L0 
     /tmp/ccp1Y5YK.s:1064   .text:00000000000002e4 .L0 
     /tmp/ccp1Y5YK.s:1067   .text:00000000000002e8 .L0 
     /tmp/ccp1Y5YK.s:1068   .text:00000000000002e8 .L0 
     /tmp/ccp1Y5YK.s:1070   .text:00000000000002ec .L0 
     /tmp/ccp1Y5YK.s:1074   .text:00000000000002f0 .L0 
       src/Riscv.cpp:146    .text:00000000000002f0 .L0 
     /tmp/ccp1Y5YK.s:1084   .text:00000000000002f4 .L0 
     /tmp/ccp1Y5YK.s:1085   .text:00000000000002f4 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000002f4 .L0 
     /tmp/ccp1Y5YK.s:1097   .text:00000000000002f8 .L0 
     /tmp/ccp1Y5YK.s:1098   .text:00000000000002f8 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002f8 .L0 
     /tmp/ccp1Y5YK.s:1105   .text:00000000000002fc .L0 
     /tmp/ccp1Y5YK.s:1111   .text:0000000000000300 .L0 
     /tmp/ccp1Y5YK.s:1121   .text:0000000000000308 .L0 
     /tmp/ccp1Y5YK.s:1122   .text:0000000000000308 .L0 
     /tmp/ccp1Y5YK.s:1123   .text:0000000000000308 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000308 .L0 
     /tmp/ccp1Y5YK.s:1131   .text:0000000000000310 .L0 
     /tmp/ccp1Y5YK.s:1132   .text:0000000000000310 .L0 
     /tmp/ccp1Y5YK.s:1136   .text:0000000000000314 .L0 
     /tmp/ccp1Y5YK.s:1141   .text:0000000000000318 .L0 
     /tmp/ccp1Y5YK.s:1142   .text:0000000000000318 .L0 
     /tmp/ccp1Y5YK.s:1143   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000318 .L0 
     /tmp/ccp1Y5YK.s:1151   .text:0000000000000320 .L0 
     /tmp/ccp1Y5YK.s:1152   .text:0000000000000320 .L0 
     /tmp/ccp1Y5YK.s:1157   .text:0000000000000324 .L0 
     /tmp/ccp1Y5YK.s:1158   .text:0000000000000324 .L0 
       src/Riscv.cpp:158    .text:0000000000000324 .L0 
     /tmp/ccp1Y5YK.s:1164   .text:0000000000000328 .L0 
       src/Riscv.cpp:160    .text:0000000000000328 .L0 
     /tmp/ccp1Y5YK.s:1170   .text:000000000000032c .L0 
     /tmp/ccp1Y5YK.s:1172   .text:000000000000032c .L0 
     /tmp/ccp1Y5YK.s:1182   .text:0000000000000334 .L0 
     /tmp/ccp1Y5YK.s:1185   .text:0000000000000338 .L0 
     /tmp/ccp1Y5YK.s:1190   .text:0000000000000340 .L0 
     /tmp/ccp1Y5YK.s:1191   .text:0000000000000340 .L0 
     /tmp/ccp1Y5YK.s:1194   .text:0000000000000348 .L0 
     /tmp/ccp1Y5YK.s:1195   .text:0000000000000348 .L0 
     /tmp/ccp1Y5YK.s:1197   .text:000000000000034c .L0 
     /tmp/ccp1Y5YK.s:1200   .text:0000000000000354 .L0 
     /tmp/ccp1Y5YK.s:1201   .text:0000000000000354 .L0 
     /tmp/ccp1Y5YK.s:1207   .text:0000000000000360 .L0 
     /tmp/ccp1Y5YK.s:1210   .text:0000000000000360 .L0 
     /tmp/ccp1Y5YK.s:1211   .text:0000000000000360 .L0 
     /tmp/ccp1Y5YK.s:1214   .text:000000000000036c .L0 
     /tmp/ccp1Y5YK.s:1216   .text:0000000000000370 .L0 
     /tmp/ccp1Y5YK.s:1221   .text:0000000000000374 .L0 
     /tmp/ccp1Y5YK.s:1227   .text:0000000000000378 .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 51


     /tmp/ccp1Y5YK.s:1228   .text:0000000000000378 .L0 
     /tmp/ccp1Y5YK.s:1230   .text:000000000000037c .L0 
     /tmp/ccp1Y5YK.s:1233   .text:0000000000000388 .L0 
     /tmp/ccp1Y5YK.s:1235   .text:000000000000038c .L0 
     /tmp/ccp1Y5YK.s:1243   .text:0000000000000394 .L0 
     /tmp/ccp1Y5YK.s:1244   .text:0000000000000394 .L0 
     /tmp/ccp1Y5YK.s:1246   .text:0000000000000398 .L0 
     /tmp/ccp1Y5YK.s:1253   .text:00000000000003a4 .L0 
     /tmp/ccp1Y5YK.s:1254   .text:00000000000003a4 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000003a4 .L0 
     /tmp/ccp1Y5YK.s:1266   .text:00000000000003a8 .L0 
     /tmp/ccp1Y5YK.s:1267   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003a8 .L0 
     /tmp/ccp1Y5YK.s:1274   .text:00000000000003ac .L0 
     /tmp/ccp1Y5YK.s:1285   .text:00000000000003b0 .L0 
     /tmp/ccp1Y5YK.s:1286   .text:00000000000003b0 .L0 
     /tmp/ccp1Y5YK.s:1287   .text:00000000000003b0 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003b0 .L0 
     /tmp/ccp1Y5YK.s:1295   .text:00000000000003b8 .L0 
     /tmp/ccp1Y5YK.s:1296   .text:00000000000003b8 .L0 
     /tmp/ccp1Y5YK.s:1301   .text:00000000000003bc .L0 
     /tmp/ccp1Y5YK.s:1306   .text:00000000000003c0 .L0 
     /tmp/ccp1Y5YK.s:1307   .text:00000000000003c0 .L0 
     /tmp/ccp1Y5YK.s:1308   .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003c0 .L0 
     /tmp/ccp1Y5YK.s:1316   .text:00000000000003c8 .L0 
     /tmp/ccp1Y5YK.s:1317   .text:00000000000003c8 .L0 
     /tmp/ccp1Y5YK.s:1322   .text:00000000000003cc .L0 
     /tmp/ccp1Y5YK.s:1323   .text:00000000000003cc .L0 
       src/Riscv.cpp:183    .text:00000000000003cc .L0 
     /tmp/ccp1Y5YK.s:1329   .text:00000000000003d0 .L0 
       src/Riscv.cpp:185    .text:00000000000003d0 .L0 
     /tmp/ccp1Y5YK.s:1335   .text:00000000000003d4 .L0 
     /tmp/ccp1Y5YK.s:1337   .text:00000000000003d4 .L0 
     /tmp/ccp1Y5YK.s:1340   .text:00000000000003dc .L0 
       src/Riscv.cpp:191    .text:00000000000003dc .L0 
     /tmp/ccp1Y5YK.s:1350   .text:00000000000003e0 .L0 
     /tmp/ccp1Y5YK.s:1351   .text:00000000000003e0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000003e0 .L0 
     /tmp/ccp1Y5YK.s:1363   .text:00000000000003e4 .L0 
     /tmp/ccp1Y5YK.s:1364   .text:00000000000003e4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003e4 .L0 
     /tmp/ccp1Y5YK.s:1371   .text:00000000000003e8 .L0 
     /tmp/ccp1Y5YK.s:1382   .text:00000000000003ec .L0 
     /tmp/ccp1Y5YK.s:1383   .text:00000000000003ec .L0 
     /tmp/ccp1Y5YK.s:1384   .text:00000000000003ec .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003ec .L0 
     /tmp/ccp1Y5YK.s:1392   .text:00000000000003f4 .L0 
     /tmp/ccp1Y5YK.s:1393   .text:00000000000003f4 .L0 
     /tmp/ccp1Y5YK.s:1398   .text:00000000000003f8 .L0 
     /tmp/ccp1Y5YK.s:1403   .text:00000000000003fc .L0 
     /tmp/ccp1Y5YK.s:1404   .text:00000000000003fc .L0 
     /tmp/ccp1Y5YK.s:1405   .text:00000000000003fc .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003fc .L0 
     /tmp/ccp1Y5YK.s:1413   .text:0000000000000404 .L0 
     /tmp/ccp1Y5YK.s:1414   .text:0000000000000404 .L0 
     /tmp/ccp1Y5YK.s:1419   .text:0000000000000408 .L0 
GAS LISTING /tmp/ccp1Y5YK.s 			page 52


     /tmp/ccp1Y5YK.s:1420   .text:0000000000000408 .L0 
       src/Riscv.cpp:202    .text:0000000000000408 .L0 
     /tmp/ccp1Y5YK.s:1426   .text:000000000000040c .L0 
       src/Riscv.cpp:204    .text:000000000000040c .L0 
     /tmp/ccp1Y5YK.s:1432   .text:0000000000000410 .L0 
     /tmp/ccp1Y5YK.s:1434   .text:0000000000000410 .L0 
     /tmp/ccp1Y5YK.s:1437   .text:0000000000000418 .L0 
     /tmp/ccp1Y5YK.s:1438   .text:0000000000000418 .L0 
     /tmp/ccp1Y5YK.s:1439   .text:0000000000000418 .L0 
     /tmp/ccp1Y5YK.s:1449   .text:0000000000000420 .L0 
     /tmp/ccp1Y5YK.s:1450   .text:0000000000000420 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000420 .L0 
     /tmp/ccp1Y5YK.s:1462   .text:0000000000000424 .L0 
     /tmp/ccp1Y5YK.s:1463   .text:0000000000000424 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000424 .L0 
     /tmp/ccp1Y5YK.s:1470   .text:0000000000000428 .L0 
     /tmp/ccp1Y5YK.s:1481   .text:000000000000042c .L0 
     /tmp/ccp1Y5YK.s:1482   .text:000000000000042c .L0 
     /tmp/ccp1Y5YK.s:1483   .text:000000000000042c .L0 
  src/../h/Riscv.hpp:107    .text:000000000000042c .L0 
     /tmp/ccp1Y5YK.s:1491   .text:0000000000000434 .L0 
     /tmp/ccp1Y5YK.s:1492   .text:0000000000000434 .L0 
     /tmp/ccp1Y5YK.s:1497   .text:0000000000000438 .L0 
     /tmp/ccp1Y5YK.s:1502   .text:000000000000043c .L0 
     /tmp/ccp1Y5YK.s:1503   .text:000000000000043c .L0 
     /tmp/ccp1Y5YK.s:1504   .text:000000000000043c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000043c .L0 
     /tmp/ccp1Y5YK.s:1512   .text:0000000000000444 .L0 
     /tmp/ccp1Y5YK.s:1513   .text:0000000000000444 .L0 
     /tmp/ccp1Y5YK.s:1518   .text:0000000000000448 .L0 
     /tmp/ccp1Y5YK.s:1519   .text:0000000000000448 .L0 
     /tmp/ccp1Y5YK.s:1522   .text:0000000000000450 .L0 
       src/Riscv.cpp:223    .text:0000000000000450 .L0 
     /tmp/ccp1Y5YK.s:1532   .text:0000000000000454 .L0 
     /tmp/ccp1Y5YK.s:1533   .text:0000000000000454 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000454 .L0 
     /tmp/ccp1Y5YK.s:1545   .text:0000000000000458 .L0 
     /tmp/ccp1Y5YK.s:1546   .text:0000000000000458 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000458 .L0 
     /tmp/ccp1Y5YK.s:1553   .text:000000000000045c .L0 
     /tmp/ccp1Y5YK.s:1568   .text:0000000000000460 .L0 
     /tmp/ccp1Y5YK.s:1577   .text:0000000000000460 .L0 
     /tmp/ccp1Y5YK.s:789    .text:0000000000000214 .L0 
     /tmp/ccp1Y5YK.s:946    .text:0000000000000288 .L0 
     /tmp/ccp1Y5YK.s:1211   .text:0000000000000360 .L0 
     /tmp/ccp1Y5YK.s:1230   .text:000000000000037c .L0 
     /tmp/ccp1Y5YK.s:126    .text:0000000000000080 .L25
     /tmp/ccp1Y5YK.s:412    .text:000000000000011c .L26
     /tmp/ccp1Y5YK.s:559    .text:0000000000000184 .L27
     /tmp/ccp1Y5YK.s:651    .text:00000000000001c0 .L28
     /tmp/ccp1Y5YK.s:742    .text:00000000000001f8 .L29
     /tmp/ccp1Y5YK.s:824    .text:000000000000023c .L30
     /tmp/ccp1Y5YK.s:899    .text:000000000000026c .L31
     /tmp/ccp1Y5YK.s:978    .text:00000000000002a8 .L32
     /tmp/ccp1Y5YK.s:1114   .text:0000000000000308 .L33
     /tmp/ccp1Y5YK.s:1276   .text:00000000000003b0 .L34
     /tmp/ccp1Y5YK.s:1373   .text:00000000000003ec .L35
GAS LISTING /tmp/ccp1Y5YK.s 			page 53


     /tmp/ccp1Y5YK.s:1472   .text:000000000000042c .L36
     /tmp/ccp1Y5YK.s:105    .text:0000000000000060 .L3
     /tmp/ccp1Y5YK.s:552    .text:000000000000017c .L22
     /tmp/ccp1Y5YK.s:133    .text:0000000000000088 .L5
     /tmp/ccp1Y5YK.s:516    .text:000000000000016c .L6
     /tmp/ccp1Y5YK.s:1107   .text:0000000000000300 .L23
     /tmp/ccp1Y5YK.s:1071   .text:00000000000002f0 .L13
     /tmp/ccp1Y5YK.s:1204   .text:0000000000000360 .L17
     /tmp/ccp1Y5YK.s:1238   .text:0000000000000394 .L15
     /tmp/ccp1Y5YK.s:1176   .text:0000000000000334 .L16
     /tmp/ccp1Y5YK.s:1249   .text:00000000000003a4 .L18
     /tmp/ccp1Y5YK.s:4215   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccp1Y5YK.s:6196   .debug_str:0000000000000959 .LASF185
     /tmp/ccp1Y5YK.s:5956   .debug_str:000000000000018c .LASF186
     /tmp/ccp1Y5YK.s:6070   .debug_str:000000000000057c .LASF187
     /tmp/ccp1Y5YK.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccp1Y5YK.s:1571   .text:0000000000000460 .Letext0
     /tmp/ccp1Y5YK.s:5900   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccp1Y5YK.s:6120   .debug_str:0000000000000738 .LASF3
     /tmp/ccp1Y5YK.s:6012   .debug_str:0000000000000372 .LASF0
     /tmp/ccp1Y5YK.s:6048   .debug_str:00000000000004e7 .LASF1
     /tmp/ccp1Y5YK.s:6134   .debug_str:000000000000078e .LASF2
     /tmp/ccp1Y5YK.s:6146   .debug_str:0000000000000803 .LASF4
     /tmp/ccp1Y5YK.s:6024   .debug_str:00000000000003bd .LASF5
     /tmp/ccp1Y5YK.s:5914   .debug_str:0000000000000057 .LASF6
     /tmp/ccp1Y5YK.s:6096   .debug_str:000000000000065d .LASF7
     /tmp/ccp1Y5YK.s:6038   .debug_str:000000000000048a .LASF8
     /tmp/ccp1Y5YK.s:5988   .debug_str:0000000000000294 .LASF9
     /tmp/ccp1Y5YK.s:5994   .debug_str:00000000000002c6 .LASF10
     /tmp/ccp1Y5YK.s:5946   .debug_str:000000000000013a .LASF11
     /tmp/ccp1Y5YK.s:5978   .debug_str:000000000000024a .LASF12
     /tmp/ccp1Y5YK.s:5958   .debug_str:000000000000019a .LASF13
     /tmp/ccp1Y5YK.s:5944   .debug_str:000000000000012a .LASF14
     /tmp/ccp1Y5YK.s:6172   .debug_str:00000000000008c0 .LASF15
     /tmp/ccp1Y5YK.s:5974   .debug_str:0000000000000212 .LASF16
     /tmp/ccp1Y5YK.s:6162   .debug_str:000000000000088a .LASF17
     /tmp/ccp1Y5YK.s:6244   .debug_str:0000000000000b78 .LASF54
     /tmp/ccp1Y5YK.s:6004   .debug_str:0000000000000337 .LASF50
     /tmp/ccp1Y5YK.s:6010   .debug_str:000000000000035a .LASF52
     /tmp/ccp1Y5YK.s:6224   .debug_str:0000000000000acd .LASF18
     /tmp/ccp1Y5YK.s:6212   .debug_str:0000000000000a8d .LASF20
     /tmp/ccp1Y5YK.s:6130   .debug_str:000000000000077a .LASF22
     /tmp/ccp1Y5YK.s:6088   .debug_str:0000000000000627 .LASF24
     /tmp/ccp1Y5YK.s:6108   .debug_str:00000000000006c9 .LASF19
     /tmp/ccp1Y5YK.s:6110   .debug_str:00000000000006d0 .LASF21
     /tmp/ccp1Y5YK.s:6084   .debug_str:000000000000060c .LASF23
     /tmp/ccp1Y5YK.s:6042   .debug_str:00000000000004bf .LASF25
     /tmp/ccp1Y5YK.s:6256   .debug_str:0000000000000bae .LASF26
     /tmp/ccp1Y5YK.s:6202   .debug_str:0000000000000a37 .LASF27
     /tmp/ccp1Y5YK.s:6080   .debug_str:00000000000005ff .LASF28
     /tmp/ccp1Y5YK.s:6086   .debug_str:0000000000000613 .LASF29
     /tmp/ccp1Y5YK.s:6054   .debug_str:000000000000050d .LASF30
     /tmp/ccp1Y5YK.s:6114   .debug_str:00000000000006fe .LASF31
     /tmp/ccp1Y5YK.s:6284   .debug_str:0000000000000c8c .LASF32
     /tmp/ccp1Y5YK.s:6018   .debug_str:000000000000038a .LASF33
     /tmp/ccp1Y5YK.s:6168   .debug_str:00000000000008ac .LASF34
     /tmp/ccp1Y5YK.s:6150   .debug_str:0000000000000830 .LASF35
GAS LISTING /tmp/ccp1Y5YK.s 			page 54


     /tmp/ccp1Y5YK.s:6152   .debug_str:0000000000000843 .LASF36
     /tmp/ccp1Y5YK.s:5950   .debug_str:000000000000014e .LASF37
     /tmp/ccp1Y5YK.s:5972   .debug_str:000000000000020c .LASF38
     /tmp/ccp1Y5YK.s:6008   .debug_str:0000000000000348 .LASF39
     /tmp/ccp1Y5YK.s:6016   .debug_str:0000000000000384 .LASF40
     /tmp/ccp1Y5YK.s:5964   .debug_str:00000000000001cf .LASF41
     /tmp/ccp1Y5YK.s:5916   .debug_str:000000000000005e .LASF42
     /tmp/ccp1Y5YK.s:6140   .debug_str:00000000000007bb .LASF43
     /tmp/ccp1Y5YK.s:6132   .debug_str:0000000000000783 .LASF44
     /tmp/ccp1Y5YK.s:6278   .debug_str:0000000000000c5e .LASF45
     /tmp/ccp1Y5YK.s:6248   .debug_str:0000000000000b83 .LASF46
     /tmp/ccp1Y5YK.s:6260   .debug_str:0000000000000bc2 .LASF47
     /tmp/ccp1Y5YK.s:6242   .debug_str:0000000000000b6e .LASF48
     /tmp/ccp1Y5YK.s:6072   .debug_str:00000000000005ac .LASF49
     /tmp/ccp1Y5YK.s:6254   .debug_str:0000000000000b9f .LASF51
     /tmp/ccp1Y5YK.s:5992   .debug_str:00000000000002aa .LASF53
     /tmp/ccp1Y5YK.s:6098   .debug_str:0000000000000670 .LASF133
     /tmp/ccp1Y5YK.s:6034   .debug_str:000000000000044b .LASF135
     /tmp/ccp1Y5YK.s:6092   .debug_str:0000000000000641 .LASF55
     /tmp/ccp1Y5YK.s:6258   .debug_str:0000000000000bb6 .LASF56
     /tmp/ccp1Y5YK.s:6074   .debug_str:00000000000005c2 .LASF57
     /tmp/ccp1Y5YK.s:6178   .debug_str:00000000000008dc .LASF58
     /tmp/ccp1Y5YK.s:5938   .debug_str:00000000000000ec .LASF60
     /tmp/ccp1Y5YK.s:6226   .debug_str:0000000000000ad6 .LASF59
     /tmp/ccp1Y5YK.s:5976   .debug_str:0000000000000228 .LASF61
     /tmp/ccp1Y5YK.s:6028   .debug_str:00000000000003fb .LASF63
     /tmp/ccp1Y5YK.s:6138   .debug_str:00000000000007b1 .LASF62
     /tmp/ccp1Y5YK.s:6230   .debug_str:0000000000000ae5 .LASF64
     /tmp/ccp1Y5YK.s:5918   .debug_str:0000000000000069 .LASF74
     /tmp/ccp1Y5YK.s:5986   .debug_str:000000000000028a .LASF65
     /tmp/ccp1Y5YK.s:6158   .debug_str:0000000000000866 .LASF141
     /tmp/ccp1Y5YK.s:6266   .debug_str:0000000000000c04 .LASF66
     /tmp/ccp1Y5YK.s:6272   .debug_str:0000000000000c23 .LASF188
     /tmp/ccp1Y5YK.s:6032   .debug_str:000000000000042f .LASF189
     /tmp/ccp1Y5YK.s:6036   .debug_str:000000000000046d .LASF67
     /tmp/ccp1Y5YK.s:5942   .debug_str:0000000000000115 .LASF68
     /tmp/ccp1Y5YK.s:6144   .debug_str:00000000000007ee .LASF69
     /tmp/ccp1Y5YK.s:6286   .debug_str:0000000000000c94 .LASF70
     /tmp/ccp1Y5YK.s:6228   .debug_str:0000000000000ae0 .LASF73
     /tmp/ccp1Y5YK.s:6046   .debug_str:00000000000004e2 .LASF71
     /tmp/ccp1Y5YK.s:5948   .debug_str:0000000000000149 .LASF72
     /tmp/ccp1Y5YK.s:6194   .debug_str:0000000000000936 .LASF75
     /tmp/ccp1Y5YK.s:6166   .debug_str:00000000000008a7 .LASF76
     /tmp/ccp1Y5YK.s:6082   .debug_str:0000000000000607 .LASF77
     /tmp/ccp1Y5YK.s:6078   .debug_str:00000000000005fa .LASF78
     /tmp/ccp1Y5YK.s:6236   .debug_str:0000000000000b30 .LASF79
     /tmp/ccp1Y5YK.s:6112   .debug_str:00000000000006e3 .LASF80
     /tmp/ccp1Y5YK.s:6002   .debug_str:000000000000031c .LASF190
     /tmp/ccp1Y5YK.s:6280   .debug_str:0000000000000c76 .LASF81
     /tmp/ccp1Y5YK.s:5908   .debug_str:000000000000002b .LASF82
     /tmp/ccp1Y5YK.s:5912   .debug_str:0000000000000047 .LASF83
     /tmp/ccp1Y5YK.s:6030   .debug_str:0000000000000417 .LASF84
     /tmp/ccp1Y5YK.s:6128   .debug_str:0000000000000771 .LASF85
     /tmp/ccp1Y5YK.s:6276   .debug_str:0000000000000c3d .LASF86
     /tmp/ccp1Y5YK.s:6058   .debug_str:0000000000000529 .LASF87
     /tmp/ccp1Y5YK.s:6240   .debug_str:0000000000000b4e .LASF88
     /tmp/ccp1Y5YK.s:6094   .debug_str:0000000000000651 .LASF89
GAS LISTING /tmp/ccp1Y5YK.s 			page 55


     /tmp/ccp1Y5YK.s:6040   .debug_str:000000000000049d .LASF90
     /tmp/ccp1Y5YK.s:6288   .debug_str:0000000000000ca2 .LASF91
     /tmp/ccp1Y5YK.s:6126   .debug_str:0000000000000752 .LASF92
     /tmp/ccp1Y5YK.s:6156   .debug_str:000000000000085b .LASF93
     /tmp/ccp1Y5YK.s:5980   .debug_str:0000000000000259 .LASF94
     /tmp/ccp1Y5YK.s:6116   .debug_str:0000000000000712 .LASF95
     /tmp/ccp1Y5YK.s:5952   .debug_str:0000000000000161 .LASF96
     /tmp/ccp1Y5YK.s:5920   .debug_str:0000000000000082 .LASF97
     /tmp/ccp1Y5YK.s:6268   .debug_str:0000000000000c16 .LASF191
     /tmp/ccp1Y5YK.s:5940   .debug_str:000000000000010f .LASF98
     /tmp/ccp1Y5YK.s:5932   .debug_str:00000000000000c5 .LASF99
     /tmp/ccp1Y5YK.s:6064   .debug_str:000000000000055b .LASF100
     /tmp/ccp1Y5YK.s:6182   .debug_str:00000000000008f0 .LASF101
     /tmp/ccp1Y5YK.s:6174   .debug_str:00000000000008cc .LASF102
     /tmp/ccp1Y5YK.s:6044   .debug_str:00000000000004d2 .LASF103
     /tmp/ccp1Y5YK.s:6184   .debug_str:00000000000008f8 .LASF104
     /tmp/ccp1Y5YK.s:6142   .debug_str:00000000000007d3 .LASF105
     /tmp/ccp1Y5YK.s:5926   .debug_str:00000000000000a3 .LASF106
     /tmp/ccp1Y5YK.s:6234   .debug_str:0000000000000b15 .LASF107
     /tmp/ccp1Y5YK.s:6052   .debug_str:0000000000000500 .LASF108
     /tmp/ccp1Y5YK.s:5966   .debug_str:00000000000001e1 .LASF109
     /tmp/ccp1Y5YK.s:6170   .debug_str:00000000000008b3 .LASF110
     /tmp/ccp1Y5YK.s:6148   .debug_str:000000000000080a .LASF111
     /tmp/ccp1Y5YK.s:6090   .debug_str:000000000000063c .LASF145
     /tmp/ccp1Y5YK.s:6050   .debug_str:00000000000004fa .LASF112
     /tmp/ccp1Y5YK.s:5904   .debug_str:0000000000000011 .LASF113
     /tmp/ccp1Y5YK.s:6270   .debug_str:0000000000000c1d .LASF114
     /tmp/ccp1Y5YK.s:6104   .debug_str:00000000000006a1 .LASF115
     /tmp/ccp1Y5YK.s:6192   .debug_str:000000000000092e .LASF192
     /tmp/ccp1Y5YK.s:6020   .debug_str:000000000000039e .LASF116
     /tmp/ccp1Y5YK.s:6232   .debug_str:0000000000000b01 .LASF117
     /tmp/ccp1Y5YK.s:5954   .debug_str:000000000000017f .LASF118
     /tmp/ccp1Y5YK.s:6208   .debug_str:0000000000000a69 .LASF119
     /tmp/ccp1Y5YK.s:6124   .debug_str:0000000000000742 .LASF120
     /tmp/ccp1Y5YK.s:5936   .debug_str:00000000000000dc .LASF121
     /tmp/ccp1Y5YK.s:6264   .debug_str:0000000000000bf4 .LASF122
     /tmp/ccp1Y5YK.s:6200   .debug_str:0000000000000a26 .LASF123
     /tmp/ccp1Y5YK.s:6160   .debug_str:0000000000000877 .LASF124
     /tmp/ccp1Y5YK.s:5902   .debug_str:0000000000000000 .LASF125
     /tmp/ccp1Y5YK.s:6000   .debug_str:0000000000000301 .LASF126
     /tmp/ccp1Y5YK.s:5910   .debug_str:0000000000000042 .LASF127
     /tmp/ccp1Y5YK.s:6274   .debug_str:0000000000000c37 .LASF128
     /tmp/ccp1Y5YK.s:6210   .debug_str:0000000000000a85 .LASF129
     /tmp/ccp1Y5YK.s:6206   .debug_str:0000000000000a5f .LASF130
     /tmp/ccp1Y5YK.s:6180   .debug_str:00000000000008e7 .LASF131
     /tmp/ccp1Y5YK.s:6252   .debug_str:0000000000000b95 .LASF132
     /tmp/ccp1Y5YK.s:5934   .debug_str:00000000000000ce .LASF134
     /tmp/ccp1Y5YK.s:6118   .debug_str:000000000000071b .LASF136
     /tmp/ccp1Y5YK.s:5960   .debug_str:00000000000001aa .LASF137
     /tmp/ccp1Y5YK.s:6026   .debug_str:00000000000003cf .LASF138
     /tmp/ccp1Y5YK.s:5968   .debug_str:00000000000001fe .LASF139
     /tmp/ccp1Y5YK.s:5962   .debug_str:00000000000001b8 .LASF140
     /tmp/ccp1Y5YK.s:6154   .debug_str:000000000000084a .LASF142
     /tmp/ccp1Y5YK.s:6198   .debug_str:0000000000000a1d .LASF143
     /tmp/ccp1Y5YK.s:6238   .debug_str:0000000000000b47 .LASF144
     /tmp/ccp1Y5YK.s:6282   .debug_str:0000000000000c83 .LASF146
     /tmp/ccp1Y5YK.s:6122   .debug_str:000000000000073d .LASF147
GAS LISTING /tmp/ccp1Y5YK.s 			page 56


     /tmp/ccp1Y5YK.s:5984   .debug_str:000000000000027f .LASF148
     /tmp/ccp1Y5YK.s:5996   .debug_str:00000000000002d4 .LASF149
     /tmp/ccp1Y5YK.s:5970   .debug_str:0000000000000207 .LASF150
     /tmp/ccp1Y5YK.s:6214   .debug_str:0000000000000aa2 .LASF151
     /tmp/ccp1Y5YK.s:6176   .debug_str:00000000000008d5 .LASF152
     /tmp/ccp1Y5YK.s:6022   .debug_str:00000000000003a4 .LASF153
     /tmp/ccp1Y5YK.s:6006   .debug_str:0000000000000342 .LASF154
     /tmp/ccp1Y5YK.s:5998   .debug_str:00000000000002e8 .LASF155
     /tmp/ccp1Y5YK.s:6066   .debug_str:0000000000000563 .LASF156
     /tmp/ccp1Y5YK.s:6056   .debug_str:0000000000000515 .LASF157
     /tmp/ccp1Y5YK.s:6136   .debug_str:000000000000079c .LASF158
     /tmp/ccp1Y5YK.s:6186   .debug_str:0000000000000903 .LASF159
     /tmp/ccp1Y5YK.s:6102   .debug_str:0000000000000699 .LASF160
     /tmp/ccp1Y5YK.s:5990   .debug_str:00000000000002a4 .LASF161
     /tmp/ccp1Y5YK.s:6060   .debug_str:0000000000000531 .LASF162
     /tmp/ccp1Y5YK.s:6262   .debug_str:0000000000000bd8 .LASF163
     /tmp/ccp1Y5YK.s:6068   .debug_str:0000000000000577 .LASF164
     /tmp/ccp1Y5YK.s:6076   .debug_str:00000000000005e6 .LASF165
     /tmp/ccp1Y5YK.s:6014   .debug_str:000000000000037f .LASF166
     /tmp/ccp1Y5YK.s:5922   .debug_str:000000000000008a .LASF167
     /tmp/ccp1Y5YK.s:5930   .debug_str:00000000000000b4 .LASF168
     /tmp/ccp1Y5YK.s:6062   .debug_str:000000000000053a .LASF169
     /tmp/ccp1Y5YK.s:6204   .debug_str:0000000000000a4b .LASF170
     /tmp/ccp1Y5YK.s:6100   .debug_str:0000000000000685 .LASF171
     /tmp/ccp1Y5YK.s:6190   .debug_str:000000000000091d .LASF172
     /tmp/ccp1Y5YK.s:6188   .debug_str:0000000000000918 .LASF173
     /tmp/ccp1Y5YK.s:5982   .debug_str:000000000000027a .LASF175
     /tmp/ccp1Y5YK.s:5928   .debug_str:00000000000000af .LASF174
     /tmp/ccp1Y5YK.s:46     .text:0000000000000020 .LFB51
     /tmp/ccp1Y5YK.s:1569   .text:0000000000000460 .LFE51
     /tmp/ccp1Y5YK.s:6164   .debug_str:00000000000008a0 .LASF176
     /tmp/ccp1Y5YK.s:5306   .debug_loc:0000000000000000 .LLST0
     /tmp/ccp1Y5YK.s:5906   .debug_str:0000000000000025 .LASF177
     /tmp/ccp1Y5YK.s:5313   .debug_loc:0000000000000023 .LLST1
     /tmp/ccp1Y5YK.s:6216   .debug_str:0000000000000ab9 .LASF178
     /tmp/ccp1Y5YK.s:5364   .debug_loc:0000000000000117 .LLST2
     /tmp/ccp1Y5YK.s:415    .text:000000000000011c .LBB137
     /tmp/ccp1Y5YK.s:560    .text:0000000000000184 .LBE137
     /tmp/ccp1Y5YK.s:6246   .debug_str:0000000000000b7e .LASF179
     /tmp/ccp1Y5YK.s:5375   .debug_loc:000000000000014d .LLST3
     /tmp/ccp1Y5YK.s:6250   .debug_str:0000000000000b8d .LASF180
     /tmp/ccp1Y5YK.s:5382   .debug_loc:0000000000000170 .LLST4
     /tmp/ccp1Y5YK.s:5389   .debug_loc:0000000000000193 .LLST5
     /tmp/ccp1Y5YK.s:6218   .debug_str:0000000000000abe .LASF181
     /tmp/ccp1Y5YK.s:5396   .debug_loc:00000000000001b6 .LLST6
     /tmp/ccp1Y5YK.s:6220   .debug_str:0000000000000ac3 .LASF182
     /tmp/ccp1Y5YK.s:5403   .debug_loc:00000000000001d9 .LLST7
     /tmp/ccp1Y5YK.s:6222   .debug_str:0000000000000ac8 .LASF183
     /tmp/ccp1Y5YK.s:5410   .debug_loc:00000000000001fc .LLST8
     /tmp/ccp1Y5YK.s:5417   .debug_loc:000000000000021f .LLST9
     /tmp/ccp1Y5YK.s:5424   .debug_loc:0000000000000242 .LLST10
     /tmp/ccp1Y5YK.s:417    .text:000000000000011c .LBB138
     /tmp/ccp1Y5YK.s:432    .text:0000000000000128 .LBE138
     /tmp/ccp1Y5YK.s:437    .text:000000000000012c .LBB140
     /tmp/ccp1Y5YK.s:453    .text:0000000000000138 .LBE140
     /tmp/ccp1Y5YK.s:527    .text:0000000000000170 .LBB142
     /tmp/ccp1Y5YK.s:538    .text:0000000000000174 .LBE142
GAS LISTING /tmp/ccp1Y5YK.s 			page 57


     /tmp/ccp1Y5YK.s:5431   .debug_loc:0000000000000265 .LLST11
     /tmp/ccp1Y5YK.s:540    .text:0000000000000174 .LBB144
     /tmp/ccp1Y5YK.s:554    .text:000000000000017c .LBE144
     /tmp/ccp1Y5YK.s:5438   .debug_loc:0000000000000288 .LLST12
     /tmp/ccp1Y5YK.s:507    .text:0000000000000160 .LVL19
     /tmp/ccp1Y5YK.s:563    .text:0000000000000184 .LBB310
     /tmp/ccp1Y5YK.s:654    .text:00000000000001c0 .LBE310
     /tmp/ccp1Y5YK.s:5445   .debug_loc:00000000000002ab .LLST67
     /tmp/ccp1Y5YK.s:5452   .debug_loc:00000000000002ce .LLST68
     /tmp/ccp1Y5YK.s:5459   .debug_loc:00000000000002f1 .LLST69
     /tmp/ccp1Y5YK.s:565    .text:0000000000000184 .LBB311
     /tmp/ccp1Y5YK.s:581    .text:0000000000000190 .LBE311
     /tmp/ccp1Y5YK.s:586    .text:0000000000000194 .LBB313
     /tmp/ccp1Y5YK.s:602    .text:00000000000001a0 .LBE313
     /tmp/ccp1Y5YK.s:626    .text:00000000000001b4 .LBB315
     /tmp/ccp1Y5YK.s:637    .text:00000000000001b8 .LBE315
     /tmp/ccp1Y5YK.s:5466   .debug_loc:0000000000000314 .LLST70
     /tmp/ccp1Y5YK.s:639    .text:00000000000001b8 .LBB317
     /tmp/ccp1Y5YK.s:653    .text:00000000000001c0 .LBE317
     /tmp/ccp1Y5YK.s:5473   .debug_loc:0000000000000337 .LLST71
     /tmp/ccp1Y5YK.s:616    .text:00000000000001b0 .LVL30
     /tmp/ccp1Y5YK.s:656    .text:00000000000001c0 .LBB291
     /tmp/ccp1Y5YK.s:745    .text:00000000000001f8 .LBE291
     /tmp/ccp1Y5YK.s:5480   .debug_loc:000000000000035a .LLST62
     /tmp/ccp1Y5YK.s:5487   .debug_loc:000000000000037d .LLST63
     /tmp/ccp1Y5YK.s:5494   .debug_loc:00000000000003a0 .LLST64
     /tmp/ccp1Y5YK.s:658    .text:00000000000001c0 .LBB292
     /tmp/ccp1Y5YK.s:674    .text:00000000000001cc .LBE292
     /tmp/ccp1Y5YK.s:679    .text:00000000000001d0 .LBB294
     /tmp/ccp1Y5YK.s:695    .text:00000000000001dc .LBE294
     /tmp/ccp1Y5YK.s:717    .text:00000000000001ec .LBB296
     /tmp/ccp1Y5YK.s:728    .text:00000000000001f0 .LBE296
     /tmp/ccp1Y5YK.s:5501   .debug_loc:00000000000003c3 .LLST65
     /tmp/ccp1Y5YK.s:730    .text:00000000000001f0 .LBB298
     /tmp/ccp1Y5YK.s:744    .text:00000000000001f8 .LBE298
     /tmp/ccp1Y5YK.s:5508   .debug_loc:00000000000003e6 .LLST66
     /tmp/ccp1Y5YK.s:707    .text:00000000000001e8 .LVL38
     /tmp/ccp1Y5YK.s:747    .text:00000000000001f8 .LBB273
     /tmp/ccp1Y5YK.s:827    .text:000000000000023c .LBE273
     /tmp/ccp1Y5YK.s:5515   .debug_loc:0000000000000409 .LLST58
     /tmp/ccp1Y5YK.s:5522   .debug_loc:000000000000042c .LLST59
     /tmp/ccp1Y5YK.s:749    .text:00000000000001f8 .LBB274
     /tmp/ccp1Y5YK.s:765    .text:0000000000000204 .LBE274
     /tmp/ccp1Y5YK.s:770    .text:0000000000000208 .LBB276
     /tmp/ccp1Y5YK.s:786    .text:0000000000000214 .LBE276
     /tmp/ccp1Y5YK.s:799    .text:0000000000000230 .LBB278
     /tmp/ccp1Y5YK.s:810    .text:0000000000000234 .LBE278
     /tmp/ccp1Y5YK.s:5529   .debug_loc:000000000000044f .LLST60
     /tmp/ccp1Y5YK.s:812    .text:0000000000000234 .LBB280
     /tmp/ccp1Y5YK.s:826    .text:000000000000023c .LBE280
     /tmp/ccp1Y5YK.s:5536   .debug_loc:0000000000000472 .LLST61
     /tmp/ccp1Y5YK.s:797    .text:0000000000000230 .LVL45
     /tmp/ccp1Y5YK.s:829    .text:000000000000023c .LBB256
     /tmp/ccp1Y5YK.s:902    .text:000000000000026c .LBE256
     /tmp/ccp1Y5YK.s:5543   .debug_loc:0000000000000495 .LLST54
     /tmp/ccp1Y5YK.s:5550   .debug_loc:00000000000004b8 .LLST55
     /tmp/ccp1Y5YK.s:831    .text:000000000000023c .LBB257
GAS LISTING /tmp/ccp1Y5YK.s 			page 58


     /tmp/ccp1Y5YK.s:847    .text:0000000000000248 .LBE257
     /tmp/ccp1Y5YK.s:852    .text:000000000000024c .LBB259
     /tmp/ccp1Y5YK.s:868    .text:0000000000000258 .LBE259
     /tmp/ccp1Y5YK.s:874    .text:0000000000000260 .LBB261
     /tmp/ccp1Y5YK.s:885    .text:0000000000000264 .LBE261
     /tmp/ccp1Y5YK.s:5557   .debug_loc:00000000000004db .LLST56
     /tmp/ccp1Y5YK.s:887    .text:0000000000000264 .LBB263
     /tmp/ccp1Y5YK.s:901    .text:000000000000026c .LBE263
     /tmp/ccp1Y5YK.s:5564   .debug_loc:00000000000004fe .LLST57
     /tmp/ccp1Y5YK.s:872    .text:0000000000000260 .LVL51
     /tmp/ccp1Y5YK.s:904    .text:000000000000026c .LBB240
     /tmp/ccp1Y5YK.s:981    .text:00000000000002a8 .LBE240
     /tmp/ccp1Y5YK.s:5571   .debug_loc:0000000000000521 .LLST50
     /tmp/ccp1Y5YK.s:5578   .debug_loc:0000000000000544 .LLST51
     /tmp/ccp1Y5YK.s:906    .text:000000000000026c .LBB241
     /tmp/ccp1Y5YK.s:922    .text:0000000000000278 .LBE241
     /tmp/ccp1Y5YK.s:927    .text:000000000000027c .LBB243
     /tmp/ccp1Y5YK.s:943    .text:0000000000000288 .LBE243
     /tmp/ccp1Y5YK.s:953    .text:000000000000029c .LBB245
     /tmp/ccp1Y5YK.s:964    .text:00000000000002a0 .LBE245
     /tmp/ccp1Y5YK.s:5585   .debug_loc:0000000000000567 .LLST52
     /tmp/ccp1Y5YK.s:966    .text:00000000000002a0 .LBB247
     /tmp/ccp1Y5YK.s:980    .text:00000000000002a8 .LBE247
     /tmp/ccp1Y5YK.s:5592   .debug_loc:000000000000058a .LLST53
     /tmp/ccp1Y5YK.s:951    .text:000000000000029c .LVL57
     /tmp/ccp1Y5YK.s:983    .text:00000000000002a8 .LBB223
     /tmp/ccp1Y5YK.s:1115   .text:0000000000000308 .LBE223
     /tmp/ccp1Y5YK.s:5599   .debug_loc:00000000000005ad .LLST40
     /tmp/ccp1Y5YK.s:5606   .debug_loc:00000000000005d0 .LLST41
     /tmp/ccp1Y5YK.s:5613   .debug_loc:00000000000005f3 .LLST42
     /tmp/ccp1Y5YK.s:5620   .debug_loc:0000000000000616 .LLST43
     /tmp/ccp1Y5YK.s:5627   .debug_loc:0000000000000639 .LLST44
     /tmp/ccp1Y5YK.s:5634   .debug_loc:000000000000065c .LLST45
     /tmp/ccp1Y5YK.s:985    .text:00000000000002a8 .LBB224
     /tmp/ccp1Y5YK.s:1001   .text:00000000000002b4 .LBE224
     /tmp/ccp1Y5YK.s:1006   .text:00000000000002b8 .LBB226
     /tmp/ccp1Y5YK.s:1022   .text:00000000000002c4 .LBE226
     /tmp/ccp1Y5YK.s:1054   .text:00000000000002e0 .LBB228
     /tmp/ccp1Y5YK.s:1061   .text:00000000000002e4 .LBE228
     /tmp/ccp1Y5YK.s:5651   .debug_loc:00000000000006a7 .LLST46
     /tmp/ccp1Y5YK.s:5658   .debug_loc:00000000000006ca .LLST47
     /tmp/ccp1Y5YK.s:1082   .text:00000000000002f4 .LBB230
     /tmp/ccp1Y5YK.s:1093   .text:00000000000002f8 .LBE230
     /tmp/ccp1Y5YK.s:5665   .debug_loc:00000000000006ed .LLST48
     /tmp/ccp1Y5YK.s:1095   .text:00000000000002f8 .LBB232
     /tmp/ccp1Y5YK.s:1109   .text:0000000000000300 .LBE232
     /tmp/ccp1Y5YK.s:5672   .debug_loc:0000000000000710 .LLST49
     /tmp/ccp1Y5YK.s:1053   .text:00000000000002e0 .LVL65
     /tmp/ccp1Y5YK.s:1117   .text:0000000000000308 .LBB201
     /tmp/ccp1Y5YK.s:1279   .text:00000000000003b0 .LBE201
     /tmp/ccp1Y5YK.s:5679   .debug_loc:0000000000000733 .LLST31
     /tmp/ccp1Y5YK.s:5686   .debug_loc:0000000000000756 .LLST32
     /tmp/ccp1Y5YK.s:5693   .debug_loc:0000000000000779 .LLST33
     /tmp/ccp1Y5YK.s:5700   .debug_loc:000000000000079c .LLST34
     /tmp/ccp1Y5YK.s:5886   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccp1Y5YK.s:5707   .debug_loc:00000000000007bf .LLST35
     /tmp/ccp1Y5YK.s:1178   .text:0000000000000334 .LBB207
GAS LISTING /tmp/ccp1Y5YK.s 			page 59


     /tmp/ccp1Y5YK.s:5714   .debug_loc:00000000000007e2 .LLST36
     /tmp/ccp1Y5YK.s:5725   .debug_loc:0000000000000818 .LLST37
     /tmp/ccp1Y5YK.s:1186   .text:0000000000000340 .LVL79
     /tmp/ccp1Y5YK.s:1203   .text:0000000000000360 .LVL80
     /tmp/ccp1Y5YK.s:1119   .text:0000000000000308 .LBB202
     /tmp/ccp1Y5YK.s:1134   .text:0000000000000314 .LBE202
     /tmp/ccp1Y5YK.s:1139   .text:0000000000000318 .LBB204
     /tmp/ccp1Y5YK.s:1155   .text:0000000000000324 .LBE204
     /tmp/ccp1Y5YK.s:1208   .text:0000000000000360 .LBB211
     /tmp/ccp1Y5YK.s:1219   .text:0000000000000374 .LBE211
     /tmp/ccp1Y5YK.s:1251   .text:00000000000003a4 .LBB214
     /tmp/ccp1Y5YK.s:1262   .text:00000000000003a8 .LBE214
     /tmp/ccp1Y5YK.s:5732   .debug_loc:000000000000083b .LLST38
     /tmp/ccp1Y5YK.s:1264   .text:00000000000003a8 .LBB216
     /tmp/ccp1Y5YK.s:1278   .text:00000000000003b0 .LBE216
     /tmp/ccp1Y5YK.s:5739   .debug_loc:000000000000085e .LLST39
     /tmp/ccp1Y5YK.s:1248   .text:00000000000003a4 .LVL84
     /tmp/ccp1Y5YK.s:1281   .text:00000000000003b0 .LBB188
     /tmp/ccp1Y5YK.s:1376   .text:00000000000003ec .LBE188
     /tmp/ccp1Y5YK.s:5746   .debug_loc:0000000000000881 .LLST25
     /tmp/ccp1Y5YK.s:5753   .debug_loc:00000000000008a4 .LLST26
     /tmp/ccp1Y5YK.s:5760   .debug_loc:00000000000008c7 .LLST27
     /tmp/ccp1Y5YK.s:5767   .debug_loc:00000000000008ea .LLST28
     /tmp/ccp1Y5YK.s:1283   .text:00000000000003b0 .LBB189
     /tmp/ccp1Y5YK.s:1299   .text:00000000000003bc .LBE189
     /tmp/ccp1Y5YK.s:1304   .text:00000000000003c0 .LBB191
     /tmp/ccp1Y5YK.s:1320   .text:00000000000003cc .LBE191
     /tmp/ccp1Y5YK.s:1348   .text:00000000000003e0 .LBB193
     /tmp/ccp1Y5YK.s:1359   .text:00000000000003e4 .LBE193
     /tmp/ccp1Y5YK.s:5774   .debug_loc:000000000000090d .LLST29
     /tmp/ccp1Y5YK.s:1361   .text:00000000000003e4 .LBB195
     /tmp/ccp1Y5YK.s:1375   .text:00000000000003ec .LBE195
     /tmp/ccp1Y5YK.s:5781   .debug_loc:0000000000000930 .LLST30
     /tmp/ccp1Y5YK.s:1338   .text:00000000000003dc .LVL91
     /tmp/ccp1Y5YK.s:1378   .text:00000000000003ec .LBB176
     /tmp/ccp1Y5YK.s:1475   .text:000000000000042c .LBE176
     /tmp/ccp1Y5YK.s:5788   .debug_loc:0000000000000953 .LLST19
     /tmp/ccp1Y5YK.s:5795   .debug_loc:0000000000000976 .LLST20
     /tmp/ccp1Y5YK.s:5802   .debug_loc:0000000000000999 .LLST21
     /tmp/ccp1Y5YK.s:5809   .debug_loc:00000000000009bc .LLST22
     /tmp/ccp1Y5YK.s:1380   .text:00000000000003ec .LBB177
     /tmp/ccp1Y5YK.s:1396   .text:00000000000003f8 .LBE177
     /tmp/ccp1Y5YK.s:1401   .text:00000000000003fc .LBB179
     /tmp/ccp1Y5YK.s:1417   .text:0000000000000408 .LBE179
     /tmp/ccp1Y5YK.s:1447   .text:0000000000000420 .LBB181
     /tmp/ccp1Y5YK.s:1458   .text:0000000000000424 .LBE181
     /tmp/ccp1Y5YK.s:5817   .debug_loc:00000000000009e0 .LLST23
     /tmp/ccp1Y5YK.s:1460   .text:0000000000000424 .LBB183
     /tmp/ccp1Y5YK.s:1474   .text:000000000000042c .LBE183
     /tmp/ccp1Y5YK.s:5824   .debug_loc:0000000000000a03 .LLST24
     /tmp/ccp1Y5YK.s:1435   .text:0000000000000418 .LVL99
     /tmp/ccp1Y5YK.s:1477   .text:000000000000042c .LBB166
     /tmp/ccp1Y5YK.s:1556   .text:0000000000000460 .LBE166
     /tmp/ccp1Y5YK.s:1479   .text:000000000000042c .LBB167
     /tmp/ccp1Y5YK.s:1495   .text:0000000000000438 .LBE167
     /tmp/ccp1Y5YK.s:1500   .text:000000000000043c .LBB169
     /tmp/ccp1Y5YK.s:1516   .text:0000000000000448 .LBE169
GAS LISTING /tmp/ccp1Y5YK.s 			page 60


     /tmp/ccp1Y5YK.s:1530   .text:0000000000000454 .LBB171
     /tmp/ccp1Y5YK.s:1541   .text:0000000000000458 .LBE171
     /tmp/ccp1Y5YK.s:5831   .debug_loc:0000000000000a26 .LLST18
     /tmp/ccp1Y5YK.s:1543   .text:0000000000000458 .LBB173
     /tmp/ccp1Y5YK.s:1555   .text:0000000000000460 .LBE173
     /tmp/ccp1Y5YK.s:1520   .text:0000000000000450 .LVL106
     /tmp/ccp1Y5YK.s:311    .text:00000000000000e0 .LBB157
     /tmp/ccp1Y5YK.s:396    .text:0000000000000118 .LBE157
     /tmp/ccp1Y5YK.s:5838   .debug_loc:0000000000000a49 .LLST13
     /tmp/ccp1Y5YK.s:5845   .debug_loc:0000000000000a6c .LLST14
     /tmp/ccp1Y5YK.s:5852   .debug_loc:0000000000000a8f .LLST15
     /tmp/ccp1Y5YK.s:313    .text:00000000000000e0 .LBB158
     /tmp/ccp1Y5YK.s:329    .text:00000000000000ec .LBE158
     /tmp/ccp1Y5YK.s:334    .text:00000000000000f0 .LBB160
     /tmp/ccp1Y5YK.s:350    .text:00000000000000fc .LBE160
     /tmp/ccp1Y5YK.s:371    .text:0000000000000110 .LBB162
     /tmp/ccp1Y5YK.s:382    .text:0000000000000114 .LBE162
     /tmp/ccp1Y5YK.s:5859   .debug_loc:0000000000000ab2 .LLST16
     /tmp/ccp1Y5YK.s:384    .text:0000000000000114 .LBB164
     /tmp/ccp1Y5YK.s:395    .text:0000000000000118 .LBE164
     /tmp/ccp1Y5YK.s:5866   .debug_loc:0000000000000ad5 .LLST17
     /tmp/ccp1Y5YK.s:369    .text:0000000000000110 .LVL9
     /tmp/ccp1Y5YK.s:66     .text:0000000000000040 .LBB133
     /tmp/ccp1Y5YK.s:82     .text:000000000000004c .LBE133
     /tmp/ccp1Y5YK.s:10     .text:0000000000000000 .LFB50
     /tmp/ccp1Y5YK.s:40     .text:0000000000000020 .LFE50
     /tmp/ccp1Y5YK.s:5924   .debug_str:000000000000009e .LASF184
     /tmp/ccp1Y5YK.s:6106   .debug_str:00000000000006b5 .LASF193
     /tmp/ccp1Y5YK.s:85     .text:0000000000000050 .LVL0
     /tmp/ccp1Y5YK.s:100    .text:0000000000000058 .LVL2
     /tmp/ccp1Y5YK.s:94     .text:0000000000000054 .LVL1
     /tmp/ccp1Y5YK.s:104    .text:0000000000000060 .LVL3
     /tmp/ccp1Y5YK.s:125    .text:0000000000000080 .LVL4
     /tmp/ccp1Y5YK.s:327    .text:00000000000000ec .LVL5
     /tmp/ccp1Y5YK.s:411    .text:000000000000011c .LVL12
     /tmp/ccp1Y5YK.s:579    .text:0000000000000190 .LVL25
     /tmp/ccp1Y5YK.s:650    .text:00000000000001c0 .LVL33
     /tmp/ccp1Y5YK.s:672    .text:00000000000001cc .LVL34
     /tmp/ccp1Y5YK.s:741    .text:00000000000001f8 .LVL41
     /tmp/ccp1Y5YK.s:763    .text:0000000000000204 .LVL42
     /tmp/ccp1Y5YK.s:823    .text:000000000000023c .LVL47
     /tmp/ccp1Y5YK.s:845    .text:0000000000000248 .LVL48
     /tmp/ccp1Y5YK.s:898    .text:000000000000026c .LVL53
     /tmp/ccp1Y5YK.s:920    .text:0000000000000278 .LVL54
     /tmp/ccp1Y5YK.s:977    .text:00000000000002a8 .LVL59
     /tmp/ccp1Y5YK.s:999    .text:00000000000002b4 .LVL60
     /tmp/ccp1Y5YK.s:1113   .text:0000000000000308 .LVL72
     /tmp/ccp1Y5YK.s:1175   .text:0000000000000334 .LVL77
     /tmp/ccp1Y5YK.s:1275   .text:00000000000003b0 .LVL86
     /tmp/ccp1Y5YK.s:1297   .text:00000000000003bc .LVL87
     /tmp/ccp1Y5YK.s:1372   .text:00000000000003ec .LVL94
     /tmp/ccp1Y5YK.s:1394   .text:00000000000003f8 .LVL95
     /tmp/ccp1Y5YK.s:1471   .text:000000000000042c .LVL102
     /tmp/ccp1Y5YK.s:1493   .text:0000000000000438 .LVL103
     /tmp/ccp1Y5YK.s:609    .text:00000000000001a4 .LVL28
     /tmp/ccp1Y5YK.s:614    .text:00000000000001a8 .LVL29
     /tmp/ccp1Y5YK.s:702    .text:00000000000001e0 .LVL37
GAS LISTING /tmp/ccp1Y5YK.s 			page 61


     /tmp/ccp1Y5YK.s:435    .text:000000000000012c .LVL13
     /tmp/ccp1Y5YK.s:558    .text:0000000000000184 .LVL24
     /tmp/ccp1Y5YK.s:451    .text:0000000000000138 .LVL14
     /tmp/ccp1Y5YK.s:484    .text:000000000000014c .LVL15
     /tmp/ccp1Y5YK.s:490    .text:0000000000000150 .LVL16
     /tmp/ccp1Y5YK.s:496    .text:0000000000000154 .LVL17
     /tmp/ccp1Y5YK.s:502    .text:0000000000000158 .LVL18
     /tmp/ccp1Y5YK.s:517    .text:000000000000016c .LVL20
     /tmp/ccp1Y5YK.s:551    .text:000000000000017c .LVL23
     /tmp/ccp1Y5YK.s:525    .text:0000000000000170 .LVL21
     /tmp/ccp1Y5YK.s:535    .text:0000000000000174 .LVL22
     /tmp/ccp1Y5YK.s:584    .text:0000000000000194 .LVL26
     /tmp/ccp1Y5YK.s:600    .text:00000000000001a0 .LVL27
     /tmp/ccp1Y5YK.s:624    .text:00000000000001b4 .LVL31
     /tmp/ccp1Y5YK.s:634    .text:00000000000001b8 .LVL32
     /tmp/ccp1Y5YK.s:677    .text:00000000000001d0 .LVL35
     /tmp/ccp1Y5YK.s:693    .text:00000000000001dc .LVL36
     /tmp/ccp1Y5YK.s:715    .text:00000000000001ec .LVL39
     /tmp/ccp1Y5YK.s:725    .text:00000000000001f0 .LVL40
     /tmp/ccp1Y5YK.s:768    .text:0000000000000208 .LVL43
     /tmp/ccp1Y5YK.s:784    .text:0000000000000214 .LVL44
     /tmp/ccp1Y5YK.s:807    .text:0000000000000234 .LVL46
     /tmp/ccp1Y5YK.s:850    .text:000000000000024c .LVL49
     /tmp/ccp1Y5YK.s:866    .text:0000000000000258 .LVL50
     /tmp/ccp1Y5YK.s:882    .text:0000000000000264 .LVL52
     /tmp/ccp1Y5YK.s:925    .text:000000000000027c .LVL55
     /tmp/ccp1Y5YK.s:941    .text:0000000000000288 .LVL56
     /tmp/ccp1Y5YK.s:961    .text:00000000000002a0 .LVL58
     /tmp/ccp1Y5YK.s:1004   .text:00000000000002b8 .LVL61
     /tmp/ccp1Y5YK.s:1020   .text:00000000000002c4 .LVL62
     /tmp/ccp1Y5YK.s:1041   .text:00000000000002d0 .LVL63
     /tmp/ccp1Y5YK.s:1047   .text:00000000000002d4 .LVL64
     /tmp/ccp1Y5YK.s:1059   .text:00000000000002e4 .LVL66
     /tmp/ccp1Y5YK.s:1066   .text:00000000000002e8 .LVL67
     /tmp/ccp1Y5YK.s:1072   .text:00000000000002f0 .LVL68
     /tmp/ccp1Y5YK.s:1106   .text:0000000000000300 .LVL71
     /tmp/ccp1Y5YK.s:1080   .text:00000000000002f4 .LVL69
     /tmp/ccp1Y5YK.s:1090   .text:00000000000002f8 .LVL70
     /tmp/ccp1Y5YK.s:1137   .text:0000000000000318 .LVL73
     /tmp/ccp1Y5YK.s:1153   .text:0000000000000324 .LVL74
     /tmp/ccp1Y5YK.s:1168   .text:000000000000032c .LVL75
     /tmp/ccp1Y5YK.s:1173   .text:0000000000000330 .LVL76
     /tmp/ccp1Y5YK.s:1224   .text:0000000000000378 .LVL82
     /tmp/ccp1Y5YK.s:1237   .text:0000000000000394 .LVL83
     /tmp/ccp1Y5YK.s:1183   .text:0000000000000338 .LVL78
     /tmp/ccp1Y5YK.s:1259   .text:00000000000003a8 .LVL85
     /tmp/ccp1Y5YK.s:1302   .text:00000000000003c0 .LVL88
     /tmp/ccp1Y5YK.s:1318   .text:00000000000003cc .LVL89
     /tmp/ccp1Y5YK.s:1333   .text:00000000000003d4 .LVL90
     /tmp/ccp1Y5YK.s:1346   .text:00000000000003e0 .LVL92
     /tmp/ccp1Y5YK.s:1356   .text:00000000000003e4 .LVL93
     /tmp/ccp1Y5YK.s:1399   .text:00000000000003fc .LVL96
     /tmp/ccp1Y5YK.s:1415   .text:0000000000000408 .LVL97
     /tmp/ccp1Y5YK.s:1430   .text:0000000000000410 .LVL98
     /tmp/ccp1Y5YK.s:1445   .text:0000000000000420 .LVL100
     /tmp/ccp1Y5YK.s:1455   .text:0000000000000424 .LVL101
     /tmp/ccp1Y5YK.s:1528   .text:0000000000000454 .LVL107
GAS LISTING /tmp/ccp1Y5YK.s 			page 62


     /tmp/ccp1Y5YK.s:1538   .text:0000000000000458 .LVL108
     /tmp/ccp1Y5YK.s:332    .text:00000000000000f0 .LVL6
     /tmp/ccp1Y5YK.s:348    .text:00000000000000fc .LVL7
     /tmp/ccp1Y5YK.s:363    .text:0000000000000104 .LVL8
     /tmp/ccp1Y5YK.s:379    .text:0000000000000114 .LVL10
     /tmp/ccp1Y5YK.s:392    .text:0000000000000118 .LVL11
     /tmp/ccp1Y5YK.s:1578   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccp1Y5YK.s:1177   .text:0000000000000334 .LBB206
     /tmp/ccp1Y5YK.s:1205   .text:0000000000000360 .LBE206
     /tmp/ccp1Y5YK.s:1222   .text:0000000000000378 .LBB213
     /tmp/ccp1Y5YK.s:1241   .text:0000000000000394 .LBE213
     /tmp/ccp1Y5YK.s:1188   .text:0000000000000340 .LBE207
     /tmp/ccp1Y5YK.s:1225   .text:0000000000000378 .LBB210
     /tmp/ccp1Y5YK.s:1240   .text:0000000000000394 .LBE210

UNDEFINED SYMBOLS
_ZN8KConsole4putcEc
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphore7blockedE
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN8KConsole4getcEv
