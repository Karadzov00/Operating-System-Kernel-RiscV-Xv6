GAS LISTING /tmp/ccBMJpt6.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/ccBMJpt6.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB174:
  67              	.LBB175:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccBMJpt6.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/ccBMJpt6.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F0 		sd	a5,-248(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 833784F0 		ld	a5,-248(s0)
  81              	.LBE175:
  82              	.LBE174:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 24 5
  89              		.loc 1 24 49 is_stmt 0
  90              	#APP
  91              	# 24 "src/Riscv.cpp" 1
  25              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  26:src/Riscv.cpp ****      if (scause == 0x0000000000000009UL){
  95              		.loc 1 26 6 is_stmt 1
  96              	#NO_APP
  97              	.LBB176:
  98 0054 13079000 		li	a4,9
  99 0058 6382E702 		beq	a5,a4,.L29
 100              	.LVL2:
 101              	.L3:
 102              	.LBE176:
  27:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp ****         //call from yield
GAS LISTING /tmp/ccBMJpt6.s 			page 5


  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****         if(a0reg==0x11){
  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp ****             _thread::thread_t *arg1;
  37:src/Riscv.cpp ****             _thread::Body arg2;
  38:src/Riscv.cpp ****             uint64 arg3;
  39:src/Riscv.cpp ****             uint64 *arg4;
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  53:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  54:src/Riscv.cpp ****             *arg1=t;
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp ****             uint64 ret;
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  58:src/Riscv.cpp ****             else ret =-1;
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             //return _thread* adress through a0
  62:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             w_sstatus(sstatus);
  65:src/Riscv.cpp ****             w_sepc(sepc);
  66:src/Riscv.cpp ****         }
  67:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  70:src/Riscv.cpp ****             //kmem_alloc
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //write return value to a0 register
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         else if(a0reg==0x02){
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/ccBMJpt6.s 			page 6


  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             w_sstatus(sstatus);
  89:src/Riscv.cpp ****             w_sepc(sepc);
  90:src/Riscv.cpp ****         }
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****         else if(a0reg==0x12){
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****             _thread::running->finished=true;
  97:src/Riscv.cpp ****             _thread::dispatch();
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             w_sstatus(sstatus);
 100:src/Riscv.cpp ****             w_sepc(sepc);
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         else if(a0reg == 0x13){
 105:src/Riscv.cpp ****             //thread dispatch
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             //call from yield
 118:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 119:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 122:src/Riscv.cpp ****             _thread::dispatch();
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             w_sstatus(sstatus);
 125:src/Riscv.cpp ****             w_sepc(sepc);
 126:src/Riscv.cpp ****         }
 127:src/Riscv.cpp ****         else if(a0reg==0x21){
 128:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 129:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 132:src/Riscv.cpp ****            uint64 arg2;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 135:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 138:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 141:src/Riscv.cpp ****             sem->open();
 142:src/Riscv.cpp ****             *arg1=sem;
 143:src/Riscv.cpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 7


 144:src/Riscv.cpp ****             uint64 ret=0;
 145:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 146:src/Riscv.cpp ****             else ret=-1;
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 149:src/Riscv.cpp **** 
 150:src/Riscv.cpp ****             w_sstatus(sstatus);
 151:src/Riscv.cpp ****             w_sepc(sepc);
 152:src/Riscv.cpp ****         }
 153:src/Riscv.cpp ****         else if(a0reg==0x22){
 154:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 155:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 165:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 166:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 167:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 168:src/Riscv.cpp ****                 t->setDeblocked();
 169:src/Riscv.cpp ****                 sem->val++;
 170:src/Riscv.cpp ****                 Scheduler::put(t);
 171:src/Riscv.cpp ****             }
 172:src/Riscv.cpp ****              sem->close();
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             delete sem;
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             w_sstatus(sstatus);
 177:src/Riscv.cpp ****             w_sepc(sepc);
 178:src/Riscv.cpp ****         }
 179:src/Riscv.cpp ****         else if(a0reg==0x23){
 180:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 181:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****             uint64 ret;
 190:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 191:src/Riscv.cpp ****             if(arg1->isOpened()==true) {
 192:src/Riscv.cpp ****                  ret = arg1->wait();
 193:src/Riscv.cpp ****             }
 194:src/Riscv.cpp ****             else{
 195:src/Riscv.cpp ****                 ret=-1;
 196:src/Riscv.cpp ****             }
 197:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp ****             w_sstatus(sstatus);
 200:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/ccBMJpt6.s 			page 8


 201:src/Riscv.cpp ****         }
 202:src/Riscv.cpp ****         else if(a0reg==0x24){
 203:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 204:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****             uint64 ret;
 213:src/Riscv.cpp ****             if(arg1->isOpened()) {
 214:src/Riscv.cpp ****                 arg1->signal();
 215:src/Riscv.cpp ****                 ret=0;
 216:src/Riscv.cpp ****             }
 217:src/Riscv.cpp ****             else{
 218:src/Riscv.cpp ****                 ret = -1;
 219:src/Riscv.cpp ****             }
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****             w_sstatus(sstatus);
 224:src/Riscv.cpp ****             w_sepc(sepc);
 225:src/Riscv.cpp ****         }
 226:src/Riscv.cpp ****         else if(a0reg==0x41){
 227:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 228:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****             //call method from kernel Console class
 231:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 232:src/Riscv.cpp ****             char c = __getc();
 233:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 234:src/Riscv.cpp **** 
 235:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             w_sstatus(sstatus);
 239:src/Riscv.cpp ****             w_sepc(sepc);
 240:src/Riscv.cpp ****         }
 241:src/Riscv.cpp ****         else if(a0reg==0x42){
 242:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 243:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****             char c;
 246:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 247:src/Riscv.cpp **** 
 248:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 249:src/Riscv.cpp **** 
 250:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 251:src/Riscv.cpp ****             __putc(c);
 252:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp ****             w_sstatus(sstatus);
 255:src/Riscv.cpp ****             w_sepc(sepc);
 256:src/Riscv.cpp ****         }
 257:src/Riscv.cpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 9


 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp ****     }
 260:src/Riscv.cpp ****      else if(scause == 0x8000000000000001UL){
 261:src/Riscv.cpp ****          mc_sip(SIP_SSIP);
 262:src/Riscv.cpp ****      }
 263:src/Riscv.cpp ****      else if(scause == 0x0000000000000009UL){
 264:src/Riscv.cpp ****          uint64 sepc = r_sepc();
 265:src/Riscv.cpp ****          uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 266:src/Riscv.cpp **** 
 267:src/Riscv.cpp ****          w_sepc(sepc + 4);
 268:src/Riscv.cpp ****          w_sstatus(sstatus);
 269:src/Riscv.cpp ****      }
 270:src/Riscv.cpp ****      else if (scause == 0x8000000000000009UL){
 271:src/Riscv.cpp ****          console_handler();
 272:src/Riscv.cpp ****      } else{
 273:src/Riscv.cpp ****          // unexpected trap cause
 274:src/Riscv.cpp ****      }
 275:src/Riscv.cpp **** }
 103              		.loc 1 275 1 is_stmt 0
 104 005c 8330810F 		ld	ra,248(sp)
 105              		.cfi_remember_state
 106              		.cfi_restore 1
 107 0060 0334010F 		ld	s0,240(sp)
 108              		.cfi_restore 8
 109              		.cfi_def_cfa 2, 256
 110 0064 8334810E 		ld	s1,232(sp)
 111              		.cfi_restore 9
 112 0068 0339010E 		ld	s2,224(sp)
 113              		.cfi_restore 18
 114 006c 8339810D 		ld	s3,216(sp)
 115              		.cfi_restore 19
 116 0070 033A010D 		ld	s4,208(sp)
 117              		.cfi_restore 20
 118 0074 13010110 		addi	sp,sp,256
 119              		.cfi_def_cfa_offset 0
 120 0078 67800000 		jr	ra
 121              	.LVL3:
 122              	.L29:
 123              		.cfi_restore_state
  31:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 124              		.loc 1 31 9 is_stmt 1
 125              	.LBB393:
 126              	.LBB177:
 127 007c 93071001 		li	a5,17
 128              	.LVL4:
 129 0080 6388F40A 		beq	s1,a5,.L30
 130              	.L5:
 131              	.LBE177:
 132              	.LBE393:
  67:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 133              		.loc 1 67 9
 134              	.LBB394:
 135              	.LBB187:
 136 0084 93071000 		li	a5,1
 137 0088 6388F410 		beq	s1,a5,.L31
 138              	.LBE187:
 139              	.LBE394:
GAS LISTING /tmp/ccBMJpt6.s 			page 10


  80:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 140              		.loc 1 80 14
 141              	.LBB395:
 142              	.LBB381:
 143              	.LBB188:
 144 008c 93072000 		li	a5,2
 145 0090 6382F414 		beq	s1,a5,.L32
 146              	.LBE188:
 147              	.LBE381:
 148              	.LBE395:
  92:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 149              		.loc 1 92 14
 150              	.LBB396:
 151              	.LBB382:
 152              	.LBB362:
 153              	.LBB189:
 154 0094 93072001 		li	a5,18
 155 0098 638AF416 		beq	s1,a5,.L33
 156              	.LBE189:
 157              	.LBE362:
 158              	.LBE382:
 159              	.LBE396:
 104:src/Riscv.cpp ****             //thread dispatch
 160              		.loc 1 104 14
 161              	.LBB397:
 162              	.LBB383:
 163              	.LBB363:
 164              	.LBB344:
 165              	.LBB190:
 166 009c 93073001 		li	a5,19
 167 00a0 6388F41A 		beq	s1,a5,.L34
 168              	.LBE190:
 169              	.LBE344:
 170              	.LBE363:
 171              	.LBE383:
 172              	.LBE397:
 116:src/Riscv.cpp ****             //call from yield
 173              		.loc 1 116 14
 174              	.LBB398:
 175              	.LBB384:
 176              	.LBB364:
 177              	.LBB345:
 178              	.LBB327:
 179              	.LBB191:
 180 00a4 93074000 		li	a5,4
 181 00a8 638CF41C 		beq	s1,a5,.L35
 182              	.LBE191:
 183              	.LBE327:
 184              	.LBE345:
 185              	.LBE364:
 186              	.LBE384:
 187              	.LBE398:
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 188              		.loc 1 127 14
 189              	.LBB399:
 190              	.LBB385:
 191              	.LBB365:
GAS LISTING /tmp/ccBMJpt6.s 			page 11


 192              	.LBB346:
 193              	.LBB328:
 194              	.LBB311:
 195              	.LBB192:
 196 00ac 93071002 		li	a5,33
 197 00b0 6386F420 		beq	s1,a5,.L36
 198              	.LBE192:
 199              	.LBE311:
 200              	.LBE328:
 201              	.LBE346:
 202              	.LBE365:
 203              	.LBE385:
 204              	.LBE399:
 153:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 205              		.loc 1 153 14
 206              	.LBB400:
 207              	.LBB386:
 208              	.LBB366:
 209              	.LBB347:
 210              	.LBB329:
 211              	.LBB312:
 212              	.LBB296:
 213              	.LBB193:
 214 00b4 93072002 		li	a5,34
 215 00b8 638AF426 		beq	s1,a5,.L37
 216              	.LBE193:
 217              	.LBE296:
 218              	.LBE312:
 219              	.LBE329:
 220              	.LBE347:
 221              	.LBE366:
 222              	.LBE386:
 223              	.LBE400:
 179:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 224              		.loc 1 179 14
 225              	.LBB401:
 226              	.LBB387:
 227              	.LBB367:
 228              	.LBB348:
 229              	.LBB330:
 230              	.LBB313:
 231              	.LBB297:
 232              	.LBB276:
 233              	.LBB194:
 234 00bc 93073002 		li	a5,35
 235 00c0 6382F430 		beq	s1,a5,.L38
 236              	.LBE194:
 237              	.LBE276:
 238              	.LBE297:
 239              	.LBE313:
 240              	.LBE330:
 241              	.LBE348:
 242              	.LBE367:
 243              	.LBE387:
 244              	.LBE401:
 202:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 245              		.loc 1 202 14
GAS LISTING /tmp/ccBMJpt6.s 			page 12


 246              	.LBB402:
 247              	.LBB388:
 248              	.LBB368:
 249              	.LBB349:
 250              	.LBB331:
 251              	.LBB314:
 252              	.LBB298:
 253              	.LBB277:
 254              	.LBB251:
 255              	.LBB195:
 256 00c4 93074002 		li	a5,36
 257 00c8 6384F434 		beq	s1,a5,.L39
 258              	.LBE195:
 259              	.LBE251:
 260              	.LBE277:
 261              	.LBE298:
 262              	.LBE314:
 263              	.LBE331:
 264              	.LBE349:
 265              	.LBE368:
 266              	.LBE388:
 267              	.LBE402:
 226:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 268              		.loc 1 226 14
 269              	.LBB403:
 270              	.LBB389:
 271              	.LBB369:
 272              	.LBB350:
 273              	.LBB332:
 274              	.LBB315:
 275              	.LBB299:
 276              	.LBB278:
 277              	.LBB252:
 278              	.LBB237:
 279              	.LBB196:
 280 00cc 93071004 		li	a5,65
 281 00d0 6388F438 		beq	s1,a5,.L40
 282              	.LBE196:
 283              	.LBE237:
 284              	.LBE252:
 285              	.LBE278:
 286              	.LBE299:
 287              	.LBE315:
 288              	.LBE332:
 289              	.LBE350:
 290              	.LBE369:
 291              	.LBE389:
 292              	.LBE403:
 241:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 293              		.loc 1 241 14
 294              	.LBB404:
 295              	.LBB390:
 296              	.LBB370:
 297              	.LBB351:
 298              	.LBB333:
 299              	.LBB316:
 300              	.LBB300:
GAS LISTING /tmp/ccBMJpt6.s 			page 13


 301              	.LBB279:
 302              	.LBB253:
 303              	.LBB238:
 304              	.LBB224:
 305              	.LBB197:
 306 00d4 93072004 		li	a5,66
 307 00d8 E392F4F8 		bne	s1,a5,.L3
 308              	.LBB198:
 242:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 309              		.loc 1 242 13
 310              	.LBB199:
 311              	.LBB200:
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 312              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 313              		.loc 2 111 5
 314              		.loc 2 111 64 is_stmt 0
 315              	#APP
 316              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 317              		csrr a5, sepc
 318              	# 0 "" 2
 319              	#NO_APP
 320 00e0 2334F4FC 		sd	a5,-56(s0)
 321              		.loc 2 112 5 is_stmt 1
 322              		.loc 2 112 12 is_stmt 0
 323 00e4 833484FC 		ld	s1,-56(s0)
 324              	.LVL5:
 325              	.LBE200:
 326              	.LBE199:
 242:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 327              		.loc 1 242 38
 328 00e8 93844400 		addi	s1,s1,4
 329              	.LVL6:
 243:src/Riscv.cpp **** 
 330              		.loc 1 243 13 is_stmt 1
 331              	.LBB201:
 332              	.LBB202:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccBMJpt6.s 			page 14


 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/ccBMJpt6.s 			page 15


 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 333              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 334              		.loc 2 181 5
 335              		.loc 2 181 76 is_stmt 0
 336              	#APP
 337              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 338              		csrr a5, sstatus
 339              	# 0 "" 2
 340              	#NO_APP
 341 00f0 2330F4FC 		sd	a5,-64(s0)
 342              		.loc 2 182 5 is_stmt 1
 343              		.loc 2 182 12 is_stmt 0
 344 00f4 033904FC 		ld	s2,-64(s0)
 345              	.LVL7:
 346              	.LBE202:
 347              	.LBE201:
 245:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 348              		.loc 1 245 13 is_stmt 1
 246:src/Riscv.cpp **** 
 349              		.loc 1 246 13
 246:src/Riscv.cpp **** 
 350              		.loc 1 246 48 is_stmt 0
 351              	#APP
 352              	# 246 "src/Riscv.cpp" 1
 248:src/Riscv.cpp **** 
 353              		ld a1, 11*8(fp)
 354              	# 0 "" 2
 355              		.loc 1 248 13 is_stmt 1
 248:src/Riscv.cpp **** 
 356              		.loc 1 248 53 is_stmt 0
 357              	# 248 "src/Riscv.cpp" 1
 358              		mv a0, a1
 359              	# 0 "" 2
 360              	#NO_APP
 361 0100 1375F50F 		andi	a0,a0,0xff
 362              	.LVL8:
 250:src/Riscv.cpp ****             __putc(c);
 363              		.loc 1 250 13 is_stmt 1
 250:src/Riscv.cpp ****             __putc(c);
 364              		.loc 1 250 27 is_stmt 0
 365 0104 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 365      83B70700 
 366              	.LVL9:
 367              	.LBB203:
 368              	.LBB204:
 129:src/../h/Riscv.hpp **** }
 369              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 370              		.loc 2 129 69 is_stmt 0
 371              	#APP
 372              	# 129 "src/../h/Riscv.hpp" 1
 373              		csrw stvec, a5
 374              	# 0 "" 2
 375              	.LVL10:
 376              	#NO_APP
GAS LISTING /tmp/ccBMJpt6.s 			page 16


 377              	.LBE204:
 378              	.LBE203:
 251:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 379              		.loc 1 251 13 is_stmt 1
 251:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 380              		.loc 1 251 19 is_stmt 0
 381 0110 97000000 		call	__putc@plt
 381      E7800000 
 382              	.LVL11:
 252:src/Riscv.cpp **** 
 383              		.loc 1 252 13 is_stmt 1
 252:src/Riscv.cpp **** 
 384              		.loc 1 252 27 is_stmt 0
 385 0118 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 385      83B70700 
 386              	.LVL12:
 387              	.LBB205:
 388              	.LBB206:
 129:src/../h/Riscv.hpp **** }
 389              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 390              		.loc 2 129 69 is_stmt 0
 391              	#APP
 392              	# 129 "src/../h/Riscv.hpp" 1
 393              		csrw stvec, a5
 394              	# 0 "" 2
 395              	.LVL13:
 396              	#NO_APP
 397              	.LBE206:
 398              	.LBE205:
 254:src/Riscv.cpp ****             w_sepc(sepc);
 399              		.loc 1 254 13 is_stmt 1
 400              	.LBB207:
 401              	.LBB208:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 402              		.loc 2 187 5
 403              		.loc 2 187 77 is_stmt 0
 404              	#APP
 405              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 406              		csrw sstatus, s2
 407              	# 0 "" 2
 408              	.LVL14:
 409              	#NO_APP
 410              	.LBE208:
 411              	.LBE207:
 255:src/Riscv.cpp ****         }
 412              		.loc 1 255 13 is_stmt 1
 413              	.LBB209:
 414              	.LBB210:
 117:src/../h/Riscv.hpp **** }
 415              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccBMJpt6.s 			page 17


 416              		.loc 2 117 65 is_stmt 0
 417              	#APP
 418              	# 117 "src/../h/Riscv.hpp" 1
 419              		csrw sepc, s1
 420              	# 0 "" 2
 421              	.LVL15:
 422              	#NO_APP
 423              	.LBE210:
 424              	.LBE209:
 425              	.LBE198:
 426              	.LBE197:
 427              	.LBE224:
 428              	.LBE238:
 429              	.LBE253:
 430              	.LBE279:
 431              	.LBE300:
 432              	.LBE316:
 433              	.LBE333:
 434              	.LBE351:
 435              	.LBE370:
 436              	.LBE390:
 437              	.LBE404:
 438              		.loc 1 275 1
 439 012c 6FF01FF3 		j	.L3
 440              	.LVL16:
 441              	.L30:
 442              	.LBB405:
 443              	.LBB391:
 444              	.LBB178:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 445              		.loc 1 32 13 is_stmt 1
 446              	.LBB179:
 447              	.LBB180:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 448              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 449              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 450              		.loc 2 111 64 is_stmt 0
 451              	#APP
 452              	# 111 "src/../h/Riscv.hpp" 1
 453              		csrr a5, sepc
 454              	# 0 "" 2
 455              	#NO_APP
 456 0134 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 457              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 458              		.loc 2 112 12 is_stmt 0
 459 0138 033984F1 		ld	s2,-232(s0)
 460              	.LBE180:
 461              	.LBE179:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 462              		.loc 1 32 38
 463 013c 13094900 		addi	s2,s2,4
 464              	.LVL17:
  33:src/Riscv.cpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 18


 465              		.loc 1 33 13 is_stmt 1
 466              	.LBB181:
 467              	.LBB182:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 468              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 469              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 470              		.loc 2 181 76 is_stmt 0
 471              	#APP
 472              	# 181 "src/../h/Riscv.hpp" 1
 473              		csrr a5, sstatus
 474              	# 0 "" 2
 475              	#NO_APP
 476 0144 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 477              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 478              		.loc 2 182 12 is_stmt 0
 479 0148 833904F1 		ld	s3,-240(s0)
 480              	.LVL18:
 481              	.LBE182:
 482              	.LBE181:
  36:src/Riscv.cpp ****             _thread::Body arg2;
 483              		.loc 1 36 13 is_stmt 1
  37:src/Riscv.cpp ****             uint64 arg3;
 484              		.loc 1 37 13
  38:src/Riscv.cpp ****             uint64 *arg4;
 485              		.loc 1 38 13
  39:src/Riscv.cpp **** 
 486              		.loc 1 39 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 487              		.loc 1 41 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 488              		.loc 1 41 48 is_stmt 0
 489              	#APP
 490              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 491              		ld a1, 11*8(fp)
 492              	# 0 "" 2
 493              		.loc 1 42 13 is_stmt 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 494              		.loc 1 42 48 is_stmt 0
 495              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 496              		ld a2, 12*8(fp)
 497              	# 0 "" 2
 498              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 499              		.loc 1 43 48 is_stmt 0
 500              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 501              		ld a3, 13*8(fp)
 502              	# 0 "" 2
 503              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp **** 
 504              		.loc 1 44 48 is_stmt 0
GAS LISTING /tmp/ccBMJpt6.s 			page 19


 505              	# 44 "src/Riscv.cpp" 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 506              		ld a4, 14*8(fp)
 507              	# 0 "" 2
 508              		.loc 1 47 13 is_stmt 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 509              		.loc 1 47 56 is_stmt 0
 510              	# 47 "src/Riscv.cpp" 1
 511              		mv s4, a1
 512              	# 0 "" 2
 513              	.LVL19:
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 514              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 515              		.loc 1 48 56 is_stmt 0
 516              	# 48 "src/Riscv.cpp" 1
 517              		mv a0, a2
 518              	# 0 "" 2
 519              	.LVL20:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 520              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 521              		.loc 1 49 56 is_stmt 0
 522              	# 49 "src/Riscv.cpp" 1
 523              		mv a1, a3
 524              	# 0 "" 2
 525              	.LVL21:
  50:src/Riscv.cpp **** 
 526              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp **** 
 527              		.loc 1 50 56 is_stmt 0
 528              	# 50 "src/Riscv.cpp" 1
 529              		mv a2, a4
 530              	# 0 "" 2
 531              	.LVL22:
  53:src/Riscv.cpp ****             *arg1=t;
 532              		.loc 1 53 13 is_stmt 1
  53:src/Riscv.cpp ****             *arg1=t;
 533              		.loc 1 53 47 is_stmt 0
 534              	#NO_APP
 535 016c 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 535      E7800000 
 536              	.LVL23:
  54:src/Riscv.cpp **** 
 537              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp **** 
 538              		.loc 1 54 18 is_stmt 0
 539 0174 2330AA00 		sd	a0,0(s4)
  56:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 540              		.loc 1 56 13 is_stmt 1
  57:src/Riscv.cpp ****             else ret =-1;
 541              		.loc 1 57 13
 542 0178 630C0500 		beqz	a0,.L24
  57:src/Riscv.cpp ****             else ret =-1;
 543              		.loc 1 57 31 is_stmt 0
 544 017c 93070000 		li	a5,0
 545              	.L6:
GAS LISTING /tmp/ccBMJpt6.s 			page 20


 546              	.LVL24:
  62:src/Riscv.cpp **** 
 547              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 548              		.loc 1 62 56 is_stmt 0
 549              	#APP
 550              	# 62 "src/Riscv.cpp" 1
  64:src/Riscv.cpp ****             w_sepc(sepc);
 551              		mv a0, a5
 552              	# 0 "" 2
 553              		.loc 1 64 13 is_stmt 1
 554              	.LVL25:
 555              	#NO_APP
 556              	.LBB183:
 557              	.LBB184:
 187:src/../h/Riscv.hpp **** }
 558              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 559              		.loc 2 187 77 is_stmt 0
 560              	#APP
 561              	# 187 "src/../h/Riscv.hpp" 1
 562              		csrw sstatus, s3
 563              	# 0 "" 2
 564              	.LVL26:
 565              	#NO_APP
 566              	.LBE184:
 567              	.LBE183:
  65:src/Riscv.cpp ****         }
 568              		.loc 1 65 13 is_stmt 1
 569              	.LBB185:
 570              	.LBB186:
 117:src/../h/Riscv.hpp **** }
 571              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 572              		.loc 2 117 65 is_stmt 0
 573              	#APP
 574              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 575              		csrw sepc, s2
 576              	# 0 "" 2
 577              		.loc 2 118 1
 578              	#NO_APP
 579 018c 6FF09FEF 		j	.L5
 580              	.LVL27:
 581              	.L24:
 582              	.LBE186:
 583              	.LBE185:
  58:src/Riscv.cpp **** 
 584              		.loc 1 58 22
 585 0190 9307F0FF 		li	a5,-1
 586 0194 6FF0DFFE 		j	.L6
 587              	.LVL28:
 588              	.L31:
 589              	.LBE178:
 590              	.LBE391:
 591              	.LBB392:
 592              	.LBB371:
GAS LISTING /tmp/ccBMJpt6.s 			page 21


  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 593              		.loc 1 68 13 is_stmt 1
 594              	.LBB372:
 595              	.LBB373:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 596              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 597              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 598              		.loc 2 111 64 is_stmt 0
 599              	#APP
 600              	# 111 "src/../h/Riscv.hpp" 1
 601              		csrr a5, sepc
 602              	# 0 "" 2
 603              	#NO_APP
 604 019c 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 605              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 606              		.loc 2 112 12 is_stmt 0
 607 01a0 833484F2 		ld	s1,-216(s0)
 608              	.LVL29:
 609              	.LBE373:
 610              	.LBE372:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 611              		.loc 1 68 38
 612 01a4 93844400 		addi	s1,s1,4
 613              	.LVL30:
  69:src/Riscv.cpp ****             //kmem_alloc
 614              		.loc 1 69 13 is_stmt 1
 615              	.LBB374:
 616              	.LBB375:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 617              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 618              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 619              		.loc 2 181 76 is_stmt 0
 620              	#APP
 621              	# 181 "src/../h/Riscv.hpp" 1
 622              		csrr a5, sstatus
 623              	# 0 "" 2
 624              	#NO_APP
 625 01ac 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 626              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 627              		.loc 2 182 12 is_stmt 0
 628 01b0 033904F2 		ld	s2,-224(s0)
 629              	.LVL31:
 630              	.LBE375:
 631              	.LBE374:
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 632              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 633              		.loc 1 71 56 is_stmt 0
 634              	#APP
GAS LISTING /tmp/ccBMJpt6.s 			page 22


 635              	# 71 "src/Riscv.cpp" 1
 636              		mv a0, a1
 637              	# 0 "" 2
 638              	.LVL32:
  72:src/Riscv.cpp **** 
 639              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp **** 
 640              		.loc 1 72 61 is_stmt 0
 641              	#NO_APP
 642 01b8 13156500 		slli	a0,a0,6
 643              	.LVL33:
 644 01bc 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 644      E7800000 
 645              	.LVL34:
  75:src/Riscv.cpp **** 
 646              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 647              		.loc 1 75 56 is_stmt 0
 648              	#APP
 649              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 650              		mv a0, a0
 651              	# 0 "" 2
 652              		.loc 1 77 13 is_stmt 1
 653              	.LVL35:
 654              	#NO_APP
 655              	.LBB376:
 656              	.LBB377:
 187:src/../h/Riscv.hpp **** }
 657              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 658              		.loc 2 187 77 is_stmt 0
 659              	#APP
 660              	# 187 "src/../h/Riscv.hpp" 1
 661              		csrw sstatus, s2
 662              	# 0 "" 2
 663              	.LVL36:
 664              	#NO_APP
 665              	.LBE377:
 666              	.LBE376:
  78:src/Riscv.cpp ****         }
 667              		.loc 1 78 13 is_stmt 1
 668              	.LBB378:
 669              	.LBB379:
 117:src/../h/Riscv.hpp **** }
 670              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 671              		.loc 2 117 65 is_stmt 0
 672              	#APP
 673              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 674              		csrw sepc, s1
 675              	# 0 "" 2
 676              		.loc 2 118 1
 677              	#NO_APP
 678 01d0 6FF0DFE8 		j	.L3
 679              	.LVL37:
GAS LISTING /tmp/ccBMJpt6.s 			page 23


 680              	.L32:
 681              	.LBE379:
 682              	.LBE378:
 683              	.LBE371:
 684              	.LBB380:
 685              	.LBB352:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 686              		.loc 1 81 13 is_stmt 1
 687              	.LBB353:
 688              	.LBB354:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 689              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 690              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 691              		.loc 2 111 64 is_stmt 0
 692              	#APP
 693              	# 111 "src/../h/Riscv.hpp" 1
 694              		csrr a5, sepc
 695              	# 0 "" 2
 696              	#NO_APP
 697 01d8 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 698              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 699              		.loc 2 112 12 is_stmt 0
 700 01dc 833484F3 		ld	s1,-200(s0)
 701              	.LVL38:
 702              	.LBE354:
 703              	.LBE353:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 704              		.loc 1 81 38
 705 01e0 93844400 		addi	s1,s1,4
 706              	.LVL39:
  82:src/Riscv.cpp **** 
 707              		.loc 1 82 13 is_stmt 1
 708              	.LBB355:
 709              	.LBB356:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 710              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 711              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 712              		.loc 2 181 76 is_stmt 0
 713              	#APP
 714              	# 181 "src/../h/Riscv.hpp" 1
 715              		csrr a5, sstatus
 716              	# 0 "" 2
 717              	#NO_APP
 718 01e8 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 719              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 720              		.loc 2 182 12 is_stmt 0
 721 01ec 033904F3 		ld	s2,-208(s0)
 722              	.LVL40:
 723              	.LBE356:
GAS LISTING /tmp/ccBMJpt6.s 			page 24


 724              	.LBE355:
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 725              		.loc 1 84 13 is_stmt 1
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 726              		.loc 1 84 56 is_stmt 0
 727              	#APP
 728              	# 84 "src/Riscv.cpp" 1
 729              		mv a0, a1
 730              	# 0 "" 2
 731              	.LVL41:
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 732              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 733              		.loc 1 85 49 is_stmt 0
 734              	#NO_APP
 735 01f4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 735      E7800000 
 736              	.LVL42:
  86:src/Riscv.cpp **** 
 737              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 738              		.loc 1 86 56 is_stmt 0
 739              	#APP
 740              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             w_sepc(sepc);
 741              		mv a0, a0
 742              	# 0 "" 2
 743              		.loc 1 88 13 is_stmt 1
 744              	.LVL43:
 745              	#NO_APP
 746              	.LBB357:
 747              	.LBB358:
 187:src/../h/Riscv.hpp **** }
 748              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 749              		.loc 2 187 77 is_stmt 0
 750              	#APP
 751              	# 187 "src/../h/Riscv.hpp" 1
 752              		csrw sstatus, s2
 753              	# 0 "" 2
 754              	.LVL44:
 755              	#NO_APP
 756              	.LBE358:
 757              	.LBE357:
  89:src/Riscv.cpp ****         }
 758              		.loc 1 89 13 is_stmt 1
 759              	.LBB359:
 760              	.LBB360:
 117:src/../h/Riscv.hpp **** }
 761              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 762              		.loc 2 117 65 is_stmt 0
 763              	#APP
 764              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 765              		csrw sepc, s1
 766              	# 0 "" 2
GAS LISTING /tmp/ccBMJpt6.s 			page 25


 767              		.loc 2 118 1
 768              	#NO_APP
 769 0208 6FF05FE5 		j	.L3
 770              	.LVL45:
 771              	.L33:
 772              	.LBE360:
 773              	.LBE359:
 774              	.LBE352:
 775              	.LBB361:
 776              	.LBB334:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 777              		.loc 1 93 13 is_stmt 1
 778              	.LBB335:
 779              	.LBB336:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 780              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 781              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 782              		.loc 2 111 64 is_stmt 0
 783              	#APP
 784              	# 111 "src/../h/Riscv.hpp" 1
 785              		csrr a5, sepc
 786              	# 0 "" 2
 787              	#NO_APP
 788 0210 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 789              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 790              		.loc 2 112 12 is_stmt 0
 791 0214 833484F4 		ld	s1,-184(s0)
 792              	.LVL46:
 793              	.LBE336:
 794              	.LBE335:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 795              		.loc 1 93 38
 796 0218 93844400 		addi	s1,s1,4
 797              	.LVL47:
  94:src/Riscv.cpp **** 
 798              		.loc 1 94 13 is_stmt 1
 799              	.LBB337:
 800              	.LBB338:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 801              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 802              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 803              		.loc 2 181 76 is_stmt 0
 804              	#APP
 805              	# 181 "src/../h/Riscv.hpp" 1
 806              		csrr a5, sstatus
 807              	# 0 "" 2
 808              	#NO_APP
 809 0220 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 810              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccBMJpt6.s 			page 26


 811              		.loc 2 182 12 is_stmt 0
 812 0224 033904F4 		ld	s2,-192(s0)
 813              	.LVL48:
 814              	.LBE338:
 815              	.LBE337:
  96:src/Riscv.cpp ****             _thread::dispatch();
 816              		.loc 1 96 13 is_stmt 1
  96:src/Riscv.cpp ****             _thread::dispatch();
 817              		.loc 1 96 31 is_stmt 0
 818 0228 97070000 		la	a5,_ZN7_thread7runningE
 818      83B70700 
 819 0230 83B70700 		ld	a5,0(a5)
  96:src/Riscv.cpp ****             _thread::dispatch();
 820              		.loc 1 96 39
 821 0234 13071000 		li	a4,1
 822 0238 2384E702 		sb	a4,40(a5)
  97:src/Riscv.cpp **** 
 823              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp **** 
 824              		.loc 1 97 30 is_stmt 0
 825 023c 97000000 		call	_ZN7_thread8dispatchEv@plt
 825      E7800000 
 826              	.LVL49:
  99:src/Riscv.cpp ****             w_sepc(sepc);
 827              		.loc 1 99 13 is_stmt 1
 828              	.LBB339:
 829              	.LBB340:
 187:src/../h/Riscv.hpp **** }
 830              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 831              		.loc 2 187 77 is_stmt 0
 832              	#APP
 833              	# 187 "src/../h/Riscv.hpp" 1
 834              		csrw sstatus, s2
 835              	# 0 "" 2
 836              	.LVL50:
 837              	#NO_APP
 838              	.LBE340:
 839              	.LBE339:
 100:src/Riscv.cpp **** 
 840              		.loc 1 100 13 is_stmt 1
 841              	.LBB341:
 842              	.LBB342:
 117:src/../h/Riscv.hpp **** }
 843              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 844              		.loc 2 117 65 is_stmt 0
 845              	#APP
 846              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 847              		csrw sepc, s1
 848              	# 0 "" 2
 849              		.loc 2 118 1
 850              	#NO_APP
 851 024c 6FF01FE1 		j	.L3
 852              	.LVL51:
 853              	.L34:
GAS LISTING /tmp/ccBMJpt6.s 			page 27


 854              	.LBE342:
 855              	.LBE341:
 856              	.LBE334:
 857              	.LBB343:
 858              	.LBB317:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 859              		.loc 1 106 13 is_stmt 1
 860              	.LBB318:
 861              	.LBB319:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 862              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 863              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 864              		.loc 2 111 64 is_stmt 0
 865              	#APP
 866              	# 111 "src/../h/Riscv.hpp" 1
 867              		csrr a5, sepc
 868              	# 0 "" 2
 869              	#NO_APP
 870 0254 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 871              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 872              		.loc 2 112 12 is_stmt 0
 873 0258 833484F5 		ld	s1,-168(s0)
 874              	.LVL52:
 875              	.LBE319:
 876              	.LBE318:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 877              		.loc 1 106 38
 878 025c 93844400 		addi	s1,s1,4
 879              	.LVL53:
 107:src/Riscv.cpp **** 
 880              		.loc 1 107 13 is_stmt 1
 881              	.LBB320:
 882              	.LBB321:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 883              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 884              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 885              		.loc 2 181 76 is_stmt 0
 886              	#APP
 887              	# 181 "src/../h/Riscv.hpp" 1
 888              		csrr a5, sstatus
 889              	# 0 "" 2
 890              	#NO_APP
 891 0264 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 892              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 893              		.loc 2 182 12 is_stmt 0
 894 0268 033904F5 		ld	s2,-176(s0)
 895              	.LVL54:
 896              	.LBE321:
 897              	.LBE320:
GAS LISTING /tmp/ccBMJpt6.s 			page 28


 110:src/Riscv.cpp **** 
 898              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 899              		.loc 1 110 30 is_stmt 0
 900 026c 97000000 		call	_ZN7_thread8dispatchEv@plt
 900      E7800000 
 901              	.LVL55:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 902              		.loc 1 112 13 is_stmt 1
 903              	.LBB322:
 904              	.LBB323:
 187:src/../h/Riscv.hpp **** }
 905              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 906              		.loc 2 187 77 is_stmt 0
 907              	#APP
 908              	# 187 "src/../h/Riscv.hpp" 1
 909              		csrw sstatus, s2
 910              	# 0 "" 2
 911              	.LVL56:
 912              	#NO_APP
 913              	.LBE323:
 914              	.LBE322:
 113:src/Riscv.cpp ****         }
 915              		.loc 1 113 13 is_stmt 1
 916              	.LBB324:
 917              	.LBB325:
 117:src/../h/Riscv.hpp **** }
 918              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 919              		.loc 2 117 65 is_stmt 0
 920              	#APP
 921              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 922              		csrw sepc, s1
 923              	# 0 "" 2
 924              		.loc 2 118 1
 925              	#NO_APP
 926 027c 6FF01FDE 		j	.L3
 927              	.LVL57:
 928              	.L35:
 929              	.LBE325:
 930              	.LBE324:
 931              	.LBE317:
 932              	.LBB326:
 933              	.LBB301:
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 934              		.loc 1 118 13 is_stmt 1
 935              	.LBB302:
 936              	.LBB303:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 937              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 938              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 939              		.loc 2 111 64 is_stmt 0
 940              	#APP
GAS LISTING /tmp/ccBMJpt6.s 			page 29


 941              	# 111 "src/../h/Riscv.hpp" 1
 942              		csrr a5, sepc
 943              	# 0 "" 2
 944              	#NO_APP
 945 0284 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 946              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 947              		.loc 2 112 12 is_stmt 0
 948 0288 833484F6 		ld	s1,-152(s0)
 949              	.LVL58:
 950              	.LBE303:
 951              	.LBE302:
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 952              		.loc 1 118 38
 953 028c 93844400 		addi	s1,s1,4
 954              	.LVL59:
 119:src/Riscv.cpp **** 
 955              		.loc 1 119 13 is_stmt 1
 956              	.LBB304:
 957              	.LBB305:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 958              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 959              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 960              		.loc 2 181 76 is_stmt 0
 961              	#APP
 962              	# 181 "src/../h/Riscv.hpp" 1
 963              		csrr a5, sstatus
 964              	# 0 "" 2
 965              	#NO_APP
 966 0294 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 967              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 968              		.loc 2 182 12 is_stmt 0
 969 0298 033904F6 		ld	s2,-160(s0)
 970              	.LVL60:
 971              	.LBE305:
 972              	.LBE304:
 121:src/Riscv.cpp ****             _thread::dispatch();
 973              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp ****             _thread::dispatch();
 974              		.loc 1 121 39 is_stmt 0
 975 029c 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 975      83B70700 
 976 02a4 23B00700 		sd	zero,0(a5)
 122:src/Riscv.cpp **** 
 977              		.loc 1 122 13 is_stmt 1
 122:src/Riscv.cpp **** 
 978              		.loc 1 122 30 is_stmt 0
 979 02a8 97000000 		call	_ZN7_thread8dispatchEv@plt
 979      E7800000 
 980              	.LVL61:
 124:src/Riscv.cpp ****             w_sepc(sepc);
 981              		.loc 1 124 13 is_stmt 1
GAS LISTING /tmp/ccBMJpt6.s 			page 30


 982              	.LBB306:
 983              	.LBB307:
 187:src/../h/Riscv.hpp **** }
 984              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 985              		.loc 2 187 77 is_stmt 0
 986              	#APP
 987              	# 187 "src/../h/Riscv.hpp" 1
 988              		csrw sstatus, s2
 989              	# 0 "" 2
 990              	.LVL62:
 991              	#NO_APP
 992              	.LBE307:
 993              	.LBE306:
 125:src/Riscv.cpp ****         }
 994              		.loc 1 125 13 is_stmt 1
 995              	.LBB308:
 996              	.LBB309:
 117:src/../h/Riscv.hpp **** }
 997              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 998              		.loc 2 117 65 is_stmt 0
 999              	#APP
 1000              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1001              		csrw sepc, s1
 1002              	# 0 "" 2
 1003              		.loc 2 118 1
 1004              	#NO_APP
 1005 02b8 6FF05FDA 		j	.L3
 1006              	.LVL63:
 1007              	.L36:
 1008              	.LBE309:
 1009              	.LBE308:
 1010              	.LBE301:
 1011              	.LBB310:
 1012              	.LBB280:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1013              		.loc 1 128 13 is_stmt 1
 1014              	.LBB281:
 1015              	.LBB282:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1016              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1017              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1018              		.loc 2 111 64 is_stmt 0
 1019              	#APP
 1020              	# 111 "src/../h/Riscv.hpp" 1
 1021              		csrr a5, sepc
 1022              	# 0 "" 2
 1023              	#NO_APP
 1024 02c0 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1025              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1026              		.loc 2 112 12 is_stmt 0
GAS LISTING /tmp/ccBMJpt6.s 			page 31


 1027 02c4 833484F7 		ld	s1,-136(s0)
 1028              	.LVL64:
 1029              	.LBE282:
 1030              	.LBE281:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1031              		.loc 1 128 38
 1032 02c8 93844400 		addi	s1,s1,4
 1033              	.LVL65:
 129:src/Riscv.cpp **** 
 1034              		.loc 1 129 13 is_stmt 1
 1035              	.LBB283:
 1036              	.LBB284:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1037              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1038              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1039              		.loc 2 181 76 is_stmt 0
 1040              	#APP
 1041              	# 181 "src/../h/Riscv.hpp" 1
 1042              		csrr a5, sstatus
 1043              	# 0 "" 2
 1044              	#NO_APP
 1045 02d0 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1046              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1047              		.loc 2 182 12 is_stmt 0
 1048 02d4 033904F7 		ld	s2,-144(s0)
 1049              	.LVL66:
 1050              	.LBE284:
 1051              	.LBE283:
 131:src/Riscv.cpp ****            uint64 arg2;
 1052              		.loc 1 131 12 is_stmt 1
 132:src/Riscv.cpp **** 
 1053              		.loc 1 132 12
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1054              		.loc 1 134 13
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1055              		.loc 1 134 48 is_stmt 0
 1056              	#APP
 1057              	# 134 "src/Riscv.cpp" 1
 135:src/Riscv.cpp **** 
 1058              		ld a1, 11*8(fp)
 1059              	# 0 "" 2
 1060              		.loc 1 135 13 is_stmt 1
 135:src/Riscv.cpp **** 
 1061              		.loc 1 135 48 is_stmt 0
 1062              	# 135 "src/Riscv.cpp" 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1063              		ld a2, 12*8(fp)
 1064              	# 0 "" 2
 1065              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1066              		.loc 1 137 56 is_stmt 0
 1067              	# 137 "src/Riscv.cpp" 1
 1068              		mv s3, a1
GAS LISTING /tmp/ccBMJpt6.s 			page 32


 1069              	# 0 "" 2
 1070              	.LVL67:
 138:src/Riscv.cpp **** 
 1071              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp **** 
 1072              		.loc 1 138 56 is_stmt 0
 1073              	# 138 "src/Riscv.cpp" 1
 1074              		mv s4, a2
 1075              	# 0 "" 2
 1076              	.LVL68:
 140:src/Riscv.cpp ****             sem->open();
 1077              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp ****             sem->open();
 1078              		.loc 1 140 50 is_stmt 0
 1079              	#NO_APP
 1080 02e8 13050002 		li	a0,32
 1081 02ec 97000000 		call	_ZN10KSemaphorenwEm@plt
 1081      E7800000 
 1082              	.LVL69:
 1083              	.LBB285:
 1084              	.LBB286:
 1085              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1086              		.loc 3 14 40
 1087 02f4 23204501 		sw	s4,0(a0)
 1088              	.LVL70:
 1089              	.LBB287:
 1090              	.LBB288:
 1091              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
GAS LISTING /tmp/ccBMJpt6.s 			page 33


  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1092              		.loc 4 26 29
 1093 02f8 23340500 		sd	zero,8(a0)
 1094 02fc 23380500 		sd	zero,16(a0)
 1095              	.LVL71:
 1096              	.LBE288:
 1097              	.LBE287:
 1098              	.LBE286:
 1099              	.LBE285:
 141:src/Riscv.cpp ****             *arg1=sem;
 1100              		.loc 1 141 13 is_stmt 1
 1101              	.LBB289:
 1102              	.LBB290:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1103              		.loc 3 35 9
 1104              		.loc 3 35 15 is_stmt 0
 1105 0300 93071000 		li	a5,1
 1106 0304 230CF500 		sb	a5,24(a0)
 1107              	.LVL72:
 1108              	.LBE290:
 1109              	.LBE289:
 142:src/Riscv.cpp **** 
 1110              		.loc 1 142 13 is_stmt 1
 142:src/Riscv.cpp **** 
 1111              		.loc 1 142 18 is_stmt 0
 1112 0308 23B0A900 		sd	a0,0(s3)
 144:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
GAS LISTING /tmp/ccBMJpt6.s 			page 34


 1113              		.loc 1 144 13 is_stmt 1
 1114              	.LVL73:
 145:src/Riscv.cpp ****             else ret=-1;
 1115              		.loc 1 145 13
 1116 030c 630C0500 		beqz	a0,.L25
 145:src/Riscv.cpp ****             else ret=-1;
 1117              		.loc 1 145 33 is_stmt 0
 1118 0310 93070000 		li	a5,0
 1119              	.L13:
 1120              	.LVL74:
 148:src/Riscv.cpp **** 
 1121              		.loc 1 148 13 is_stmt 1
 148:src/Riscv.cpp **** 
 1122              		.loc 1 148 56 is_stmt 0
 1123              	#APP
 1124              	# 148 "src/Riscv.cpp" 1
 150:src/Riscv.cpp ****             w_sepc(sepc);
 1125              		mv a0, a5
 1126              	# 0 "" 2
 1127              		.loc 1 150 13 is_stmt 1
 1128              	.LVL75:
 1129              	#NO_APP
 1130              	.LBB291:
 1131              	.LBB292:
 187:src/../h/Riscv.hpp **** }
 1132              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1133              		.loc 2 187 77 is_stmt 0
 1134              	#APP
 1135              	# 187 "src/../h/Riscv.hpp" 1
 1136              		csrw sstatus, s2
 1137              	# 0 "" 2
 1138              	.LVL76:
 1139              	#NO_APP
 1140              	.LBE292:
 1141              	.LBE291:
 151:src/Riscv.cpp ****         }
 1142              		.loc 1 151 13 is_stmt 1
 1143              	.LBB293:
 1144              	.LBB294:
 117:src/../h/Riscv.hpp **** }
 1145              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1146              		.loc 2 117 65 is_stmt 0
 1147              	#APP
 1148              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1149              		csrw sepc, s1
 1150              	# 0 "" 2
 1151              		.loc 2 118 1
 1152              	#NO_APP
 1153 0320 6FF0DFD3 		j	.L3
 1154              	.LVL77:
 1155              	.L25:
 1156              	.LBE294:
 1157              	.LBE293:
 146:src/Riscv.cpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 35


 1158              		.loc 1 146 21
 1159 0324 9307F0FF 		li	a5,-1
 1160 0328 6FF0DFFE 		j	.L13
 1161              	.LVL78:
 1162              	.L37:
 1163              	.LBE280:
 1164              	.LBB295:
 1165              	.LBB254:
 154:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1166              		.loc 1 154 13 is_stmt 1
 1167              	.LBB255:
 1168              	.LBB256:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1169              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1170              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1171              		.loc 2 111 64 is_stmt 0
 1172              	#APP
 1173              	# 111 "src/../h/Riscv.hpp" 1
 1174              		csrr a5, sepc
 1175              	# 0 "" 2
 1176              	#NO_APP
 1177 0330 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1178              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1179              		.loc 2 112 12 is_stmt 0
 1180 0334 833984F8 		ld	s3,-120(s0)
 1181              	.LBE256:
 1182              	.LBE255:
 154:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1183              		.loc 1 154 38
 1184 0338 93894900 		addi	s3,s3,4
 1185              	.LVL79:
 155:src/Riscv.cpp **** 
 1186              		.loc 1 155 13 is_stmt 1
 1187              	.LBB257:
 1188              	.LBB258:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1189              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1190              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1191              		.loc 2 181 76 is_stmt 0
 1192              	#APP
 1193              	# 181 "src/../h/Riscv.hpp" 1
 1194              		csrr a5, sstatus
 1195              	# 0 "" 2
 1196              	#NO_APP
 1197 0340 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1198              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1199              		.loc 2 182 12 is_stmt 0
 1200 0344 033A04F8 		ld	s4,-128(s0)
 1201              	.LVL80:
GAS LISTING /tmp/ccBMJpt6.s 			page 36


 1202              	.LBE258:
 1203              	.LBE257:
 157:src/Riscv.cpp **** 
 1204              		.loc 1 157 13 is_stmt 1
 160:src/Riscv.cpp **** 
 1205              		.loc 1 160 13
 160:src/Riscv.cpp **** 
 1206              		.loc 1 160 48 is_stmt 0
 1207              	#APP
 1208              	# 160 "src/Riscv.cpp" 1
 162:src/Riscv.cpp **** 
 1209              		ld a1, 11*8(fp)
 1210              	# 0 "" 2
 1211              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1212              		.loc 1 162 56 is_stmt 0
 1213              	# 162 "src/Riscv.cpp" 1
 1214              		mv s1, a1
 1215              	# 0 "" 2
 1216              	.LVL81:
 164:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1217              		.loc 1 164 13 is_stmt 1
 1218              	#NO_APP
 1219 0350 6F004003 		j	.L17
 1220              	.LVL82:
 1221              	.L41:
 1222              	.LBB259:
 1223              	.LBB260:
 1224              	.LBB261:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
GAS LISTING /tmp/ccBMJpt6.s 			page 37


  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1225              		.loc 4 70 22 is_stmt 0
 1226 0354 23B80400 		sd	zero,16(s1)
 1227              	.L16:
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1228              		.loc 4 72 12
 1229 0358 03390500 		ld	s2,0(a0)
 1230              	.LVL83:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1231              		.loc 4 73 35
 1232 035c 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1232      E7800000 
 1233              	.LVL84:
 1234              	.LBE261:
 1235              	.LBE260:
 168:src/Riscv.cpp ****                 sem->val++;
 1236              		.loc 1 168 17 is_stmt 1
 1237              	.LBB263:
 1238              	.LBB264:
 1239              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 38


  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1240              		.loc 5 35 9
 1241              		.loc 5 35 19 is_stmt 0
 1242 0364 93071000 		li	a5,1
 1243 0368 230CF902 		sb	a5,56(s2)
 1244              	.LVL85:
 1245              	.LBE264:
 1246              	.LBE263:
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1247              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1248              		.loc 1 169 22 is_stmt 0
 1249 036c 83A70400 		lw	a5,0(s1)
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1250              		.loc 1 169 25
 1251 0370 9B871700 		addiw	a5,a5,1
 1252 0374 23A0F400 		sw	a5,0(s1)
 170:src/Riscv.cpp ****             }
 1253              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****             }
 1254              		.loc 1 170 31 is_stmt 0
 1255 0378 13050900 		mv	a0,s2
 1256 037c 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1256      E7800000 
 1257              	.LVL86:
 1258              	.L17:
 1259              	.LBE259:
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1260              		.loc 1 166 13 is_stmt 1
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1261              		.loc 1 166 43
 1262              	.LBB266:
 1263              	.LBB267:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1264              		.loc 4 79 14 is_stmt 0
 1265 0384 03B58400 		ld	a0,8(s1)
 1266              		.loc 4 79 9
 1267 0388 630E0500 		beqz	a0,.L15
  80:src/../h/List.hpp ****         return head->data;
GAS LISTING /tmp/ccBMJpt6.s 			page 39


 1268              		.loc 4 80 22
 1269 038c 83370500 		ld	a5,0(a0)
 1270              	.LVL87:
 1271              	.LBE267:
 1272              	.LBE266:
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1273              		.loc 1 166 43
 1274 0390 638A0700 		beqz	a5,.L15
 1275              	.LBB268:
 167:src/Riscv.cpp ****                 t->setDeblocked();
 1276              		.loc 1 167 17 is_stmt 1
 1277              	.LVL88:
 1278              	.LBB265:
 1279              	.LBB262:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1280              		.loc 4 69 22 is_stmt 0
 1281 0394 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1282              		.loc 4 69 9
 1283 0398 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1284              		.loc 4 70 9
 1285 039c E39E07FA 		bnez	a5,.L16
 1286 03a0 6FF05FFB 		j	.L41
 1287              	.LVL89:
 1288              	.L15:
 1289              	.LBE262:
 1290              	.LBE265:
 1291              	.LBE268:
 172:src/Riscv.cpp **** 
 1292              		.loc 1 172 14 is_stmt 1
 1293              	.LBB269:
 1294              	.LBB270:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1295              		.loc 3 38 9
 1296              		.loc 3 38 16 is_stmt 0
 1297 03a4 238C0400 		sb	zero,24(s1)
 1298              	.LVL90:
 1299              	.LBE270:
 1300              	.LBE269:
 174:src/Riscv.cpp **** 
 1301              		.loc 1 174 13 is_stmt 1
 174:src/Riscv.cpp **** 
 1302              		.loc 1 174 23 is_stmt 0
 1303 03a8 63880400 		beqz	s1,.L18
 174:src/Riscv.cpp **** 
 1304              		.loc 1 174 20 discriminator 1
 1305 03ac 13850400 		mv	a0,s1
 1306 03b0 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1306      E7800000 
 1307              	.LVL91:
 1308              	.L18:
 176:src/Riscv.cpp ****             w_sepc(sepc);
 1309              		.loc 1 176 13 is_stmt 1
 1310              	.LBB271:
GAS LISTING /tmp/ccBMJpt6.s 			page 40


 1311              	.LBB272:
 187:src/../h/Riscv.hpp **** }
 1312              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1313              		.loc 2 187 77 is_stmt 0
 1314              	#APP
 1315              	# 187 "src/../h/Riscv.hpp" 1
 1316              		csrw sstatus, s4
 1317              	# 0 "" 2
 1318              	.LVL92:
 1319              	#NO_APP
 1320              	.LBE272:
 1321              	.LBE271:
 177:src/Riscv.cpp ****         }
 1322              		.loc 1 177 13 is_stmt 1
 1323              	.LBB273:
 1324              	.LBB274:
 117:src/../h/Riscv.hpp **** }
 1325              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1326              		.loc 2 117 65 is_stmt 0
 1327              	#APP
 1328              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1329              		csrw sepc, s3
 1330              	# 0 "" 2
 1331              		.loc 2 118 1
 1332              	#NO_APP
 1333 03c0 6FF0DFC9 		j	.L3
 1334              	.LVL93:
 1335              	.L38:
 1336              	.LBE274:
 1337              	.LBE273:
 1338              	.LBE254:
 1339              	.LBB275:
 1340              	.LBB239:
 180:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1341              		.loc 1 180 13 is_stmt 1
 1342              	.LBB240:
 1343              	.LBB241:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1344              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1345              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1346              		.loc 2 111 64 is_stmt 0
 1347              	#APP
 1348              	# 111 "src/../h/Riscv.hpp" 1
 1349              		csrr a5, sepc
 1350              	# 0 "" 2
 1351              	#NO_APP
 1352 03c8 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1353              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1354              		.loc 2 112 12 is_stmt 0
 1355 03cc 833484F9 		ld	s1,-104(s0)
GAS LISTING /tmp/ccBMJpt6.s 			page 41


 1356              	.LVL94:
 1357              	.LBE241:
 1358              	.LBE240:
 180:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1359              		.loc 1 180 38
 1360 03d0 93844400 		addi	s1,s1,4
 1361              	.LVL95:
 181:src/Riscv.cpp **** 
 1362              		.loc 1 181 13 is_stmt 1
 1363              	.LBB242:
 1364              	.LBB243:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1365              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1366              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1367              		.loc 2 181 76 is_stmt 0
 1368              	#APP
 1369              	# 181 "src/../h/Riscv.hpp" 1
 1370              		csrr a5, sstatus
 1371              	# 0 "" 2
 1372              	#NO_APP
 1373 03d8 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1374              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1375              		.loc 2 182 12 is_stmt 0
 1376 03dc 033904F9 		ld	s2,-112(s0)
 1377              	.LVL96:
 1378              	.LBE243:
 1379              	.LBE242:
 183:src/Riscv.cpp **** 
 1380              		.loc 1 183 13 is_stmt 1
 185:src/Riscv.cpp **** 
 1381              		.loc 1 185 13
 185:src/Riscv.cpp **** 
 1382              		.loc 1 185 48 is_stmt 0
 1383              	#APP
 1384              	# 185 "src/Riscv.cpp" 1
 187:src/Riscv.cpp **** 
 1385              		ld a1, 11*8(fp)
 1386              	# 0 "" 2
 1387              		.loc 1 187 13 is_stmt 1
 187:src/Riscv.cpp **** 
 1388              		.loc 1 187 56 is_stmt 0
 1389              	# 187 "src/Riscv.cpp" 1
 1390              		mv a0, a1
 1391              	# 0 "" 2
 1392              	.LVL97:
 189:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1393              		.loc 1 189 13 is_stmt 1
 191:src/Riscv.cpp ****                  ret = arg1->wait();
 1394              		.loc 1 191 13
 1395              	#NO_APP
 1396              	.LBB244:
 1397              	.LBB245:
  32:src/../h/KSemaphore.hpp **** 
GAS LISTING /tmp/ccBMJpt6.s 			page 42


 1398              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1399              		.loc 3 32 28 is_stmt 0
 1400 03e8 83478501 		lbu	a5,24(a0)
 1401              	.LVL98:
 1402              	.LBE245:
 1403              	.LBE244:
 191:src/Riscv.cpp ****                  ret = arg1->wait();
 1404              		.loc 1 191 13
 1405 03ec 639C0700 		bnez	a5,.L42
 195:src/Riscv.cpp ****             }
 1406              		.loc 1 195 20
 1407 03f0 1305F0FF 		li	a0,-1
 1408              	.LVL99:
 1409              	.L20:
 197:src/Riscv.cpp **** 
 1410              		.loc 1 197 13 is_stmt 1
 197:src/Riscv.cpp **** 
 1411              		.loc 1 197 56 is_stmt 0
 1412              	#APP
 1413              	# 197 "src/Riscv.cpp" 1
 199:src/Riscv.cpp ****             w_sepc(sepc);
 1414              		mv a0, a0
 1415              	# 0 "" 2
 1416              		.loc 1 199 13 is_stmt 1
 1417              	.LVL100:
 1418              	#NO_APP
 1419              	.LBB246:
 1420              	.LBB247:
 187:src/../h/Riscv.hpp **** }
 1421              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1422              		.loc 2 187 77 is_stmt 0
 1423              	#APP
 1424              	# 187 "src/../h/Riscv.hpp" 1
 1425              		csrw sstatus, s2
 1426              	# 0 "" 2
 1427              	.LVL101:
 1428              	#NO_APP
 1429              	.LBE247:
 1430              	.LBE246:
 200:src/Riscv.cpp ****         }
 1431              		.loc 1 200 13 is_stmt 1
 1432              	.LBB248:
 1433              	.LBB249:
 117:src/../h/Riscv.hpp **** }
 1434              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1435              		.loc 2 117 65 is_stmt 0
 1436              	#APP
 1437              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1438              		csrw sepc, s1
 1439              	# 0 "" 2
 1440              		.loc 2 118 1
 1441              	#NO_APP
 1442 0400 6FF0DFC5 		j	.L3
GAS LISTING /tmp/ccBMJpt6.s 			page 43


 1443              	.LVL102:
 1444              	.L42:
 1445              	.LBE249:
 1446              	.LBE248:
 192:src/Riscv.cpp ****             }
 1447              		.loc 1 192 18 is_stmt 1
 192:src/Riscv.cpp ****             }
 1448              		.loc 1 192 34 is_stmt 0
 1449 0404 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1449      E7800000 
 1450              	.LVL103:
 1451 040c 6FF09FFE 		j	.L20
 1452              	.LVL104:
 1453              	.L39:
 1454              	.LBE239:
 1455              	.LBB250:
 1456              	.LBB225:
 203:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1457              		.loc 1 203 13 is_stmt 1
 1458              	.LBB226:
 1459              	.LBB227:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1460              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1461              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1462              		.loc 2 111 64 is_stmt 0
 1463              	#APP
 1464              	# 111 "src/../h/Riscv.hpp" 1
 1465              		csrr a5, sepc
 1466              	# 0 "" 2
 1467              	#NO_APP
 1468 0414 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1469              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1470              		.loc 2 112 12 is_stmt 0
 1471 0418 833484FA 		ld	s1,-88(s0)
 1472              	.LVL105:
 1473              	.LBE227:
 1474              	.LBE226:
 203:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1475              		.loc 1 203 38
 1476 041c 93844400 		addi	s1,s1,4
 1477              	.LVL106:
 204:src/Riscv.cpp **** 
 1478              		.loc 1 204 13 is_stmt 1
 1479              	.LBB228:
 1480              	.LBB229:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1481              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1482              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1483              		.loc 2 181 76 is_stmt 0
 1484              	#APP
 1485              	# 181 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccBMJpt6.s 			page 44


 1486              		csrr a5, sstatus
 1487              	# 0 "" 2
 1488              	#NO_APP
 1489 0424 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1490              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1491              		.loc 2 182 12 is_stmt 0
 1492 0428 033904FA 		ld	s2,-96(s0)
 1493              	.LVL107:
 1494              	.LBE229:
 1495              	.LBE228:
 206:src/Riscv.cpp **** 
 1496              		.loc 1 206 13 is_stmt 1
 208:src/Riscv.cpp **** 
 1497              		.loc 1 208 13
 208:src/Riscv.cpp **** 
 1498              		.loc 1 208 48 is_stmt 0
 1499              	#APP
 1500              	# 208 "src/Riscv.cpp" 1
 210:src/Riscv.cpp **** 
 1501              		ld a1, 11*8(fp)
 1502              	# 0 "" 2
 1503              		.loc 1 210 13 is_stmt 1
 210:src/Riscv.cpp **** 
 1504              		.loc 1 210 56 is_stmt 0
 1505              	# 210 "src/Riscv.cpp" 1
 1506              		mv a0, a1
 1507              	# 0 "" 2
 1508              	.LVL108:
 212:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1509              		.loc 1 212 13 is_stmt 1
 213:src/Riscv.cpp ****                 arg1->signal();
 1510              		.loc 1 213 13
 1511              	#NO_APP
 1512              	.LBB230:
 1513              	.LBB231:
  32:src/../h/KSemaphore.hpp **** 
 1514              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1515              		.loc 3 32 28 is_stmt 0
 1516 0434 83478501 		lbu	a5,24(a0)
 1517              	.LVL109:
 1518              	.LBE231:
 1519              	.LBE230:
 213:src/Riscv.cpp ****                 arg1->signal();
 1520              		.loc 1 213 13
 1521 0438 639C0700 		bnez	a5,.L43
 218:src/Riscv.cpp ****             }
 1522              		.loc 1 218 21
 1523 043c 9307F0FF 		li	a5,-1
 1524              	.LVL110:
 1525              	.L22:
 221:src/Riscv.cpp **** 
 1526              		.loc 1 221 13 is_stmt 1
 221:src/Riscv.cpp **** 
 1527              		.loc 1 221 56 is_stmt 0
GAS LISTING /tmp/ccBMJpt6.s 			page 45


 1528              	#APP
 1529              	# 221 "src/Riscv.cpp" 1
 223:src/Riscv.cpp ****             w_sepc(sepc);
 1530              		mv a0, a5
 1531              	# 0 "" 2
 1532              		.loc 1 223 13 is_stmt 1
 1533              	.LVL111:
 1534              	#NO_APP
 1535              	.LBB232:
 1536              	.LBB233:
 187:src/../h/Riscv.hpp **** }
 1537              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1538              		.loc 2 187 77 is_stmt 0
 1539              	#APP
 1540              	# 187 "src/../h/Riscv.hpp" 1
 1541              		csrw sstatus, s2
 1542              	# 0 "" 2
 1543              	.LVL112:
 1544              	#NO_APP
 1545              	.LBE233:
 1546              	.LBE232:
 224:src/Riscv.cpp ****         }
 1547              		.loc 1 224 13 is_stmt 1
 1548              	.LBB234:
 1549              	.LBB235:
 117:src/../h/Riscv.hpp **** }
 1550              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1551              		.loc 2 117 65 is_stmt 0
 1552              	#APP
 1553              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1554              		csrw sepc, s1
 1555              	# 0 "" 2
 1556              		.loc 2 118 1
 1557              	#NO_APP
 1558 044c 6FF01FC1 		j	.L3
 1559              	.LVL113:
 1560              	.L43:
 1561              	.LBE235:
 1562              	.LBE234:
 214:src/Riscv.cpp ****                 ret=0;
 1563              		.loc 1 214 17 is_stmt 1
 214:src/Riscv.cpp ****                 ret=0;
 1564              		.loc 1 214 29 is_stmt 0
 1565 0450 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1565      E7800000 
 1566              	.LVL114:
 215:src/Riscv.cpp ****             }
 1567              		.loc 1 215 17 is_stmt 1
 215:src/Riscv.cpp ****             }
 1568              		.loc 1 215 20 is_stmt 0
 1569 0458 93070000 		li	a5,0
 1570 045c 6FF05FFE 		j	.L22
 1571              	.LVL115:
 1572              	.L40:
GAS LISTING /tmp/ccBMJpt6.s 			page 46


 1573              	.LBE225:
 1574              	.LBB236:
 1575              	.LBB211:
 227:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1576              		.loc 1 227 13 is_stmt 1
 1577              	.LBB212:
 1578              	.LBB213:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1579              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1580              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1581              		.loc 2 111 64 is_stmt 0
 1582              	#APP
 1583              	# 111 "src/../h/Riscv.hpp" 1
 1584              		csrr a5, sepc
 1585              	# 0 "" 2
 1586              	#NO_APP
 1587 0464 233CF4FA 		sd	a5,-72(s0)
 112:src/../h/Riscv.hpp **** }
 1588              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1589              		.loc 2 112 12 is_stmt 0
 1590 0468 833484FB 		ld	s1,-72(s0)
 1591              	.LVL116:
 1592              	.LBE213:
 1593              	.LBE212:
 227:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1594              		.loc 1 227 38
 1595 046c 93844400 		addi	s1,s1,4
 1596              	.LVL117:
 228:src/Riscv.cpp **** 
 1597              		.loc 1 228 13 is_stmt 1
 1598              	.LBB214:
 1599              	.LBB215:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1600              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1601              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1602              		.loc 2 181 76 is_stmt 0
 1603              	#APP
 1604              	# 181 "src/../h/Riscv.hpp" 1
 1605              		csrr a5, sstatus
 1606              	# 0 "" 2
 1607              	#NO_APP
 1608 0474 2338F4FA 		sd	a5,-80(s0)
 182:src/../h/Riscv.hpp **** }
 1609              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1610              		.loc 2 182 12 is_stmt 0
 1611 0478 033904FB 		ld	s2,-80(s0)
 1612              	.LVL118:
 1613              	.LBE215:
 1614              	.LBE214:
 231:src/Riscv.cpp ****             char c = __getc();
 1615              		.loc 1 231 13 is_stmt 1
GAS LISTING /tmp/ccBMJpt6.s 			page 47


 231:src/Riscv.cpp ****             char c = __getc();
 1616              		.loc 1 231 27 is_stmt 0
 1617 047c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1617      83B70700 
 1618              	.LVL119:
 1619              	.LBB216:
 1620              	.LBB217:
 129:src/../h/Riscv.hpp **** }
 1621              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1622              		.loc 2 129 69 is_stmt 0
 1623              	#APP
 1624              	# 129 "src/../h/Riscv.hpp" 1
 1625              		csrw stvec, a5
 1626              	# 0 "" 2
 1627              	.LVL120:
 1628              	#NO_APP
 1629              	.LBE217:
 1630              	.LBE216:
 232:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1631              		.loc 1 232 13 is_stmt 1
 232:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1632              		.loc 1 232 28 is_stmt 0
 1633 0488 97000000 		call	__getc@plt
 1633      E7800000 
 1634              	.LVL121:
 233:src/Riscv.cpp **** 
 1635              		.loc 1 233 13 is_stmt 1
 233:src/Riscv.cpp **** 
 1636              		.loc 1 233 27 is_stmt 0
 1637 0490 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1637      83B70700 
 1638              	.LVL122:
 1639              	.LBB218:
 1640              	.LBB219:
 129:src/../h/Riscv.hpp **** }
 1641              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1642              		.loc 2 129 69 is_stmt 0
 1643              	#APP
 1644              	# 129 "src/../h/Riscv.hpp" 1
 1645              		csrw stvec, a5
 1646              	# 0 "" 2
 1647              	.LVL123:
 1648              	#NO_APP
 1649              	.LBE219:
 1650              	.LBE218:
 235:src/Riscv.cpp **** 
 1651              		.loc 1 235 13 is_stmt 1
 235:src/Riscv.cpp **** 
 1652              		.loc 1 235 54 is_stmt 0
 1653              	#APP
 1654              	# 235 "src/Riscv.cpp" 1
 238:src/Riscv.cpp ****             w_sepc(sepc);
 1655              		mv a0, a0
 1656              	# 0 "" 2
 1657              		.loc 1 238 13 is_stmt 1
GAS LISTING /tmp/ccBMJpt6.s 			page 48


 1658              	.LVL124:
 1659              	#NO_APP
 1660              	.LBB220:
 1661              	.LBB221:
 187:src/../h/Riscv.hpp **** }
 1662              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1663              		.loc 2 187 77 is_stmt 0
 1664              	#APP
 1665              	# 187 "src/../h/Riscv.hpp" 1
 1666              		csrw sstatus, s2
 1667              	# 0 "" 2
 1668              	.LVL125:
 1669              	#NO_APP
 1670              	.LBE221:
 1671              	.LBE220:
 239:src/Riscv.cpp ****         }
 1672              		.loc 1 239 13 is_stmt 1
 1673              	.LBB222:
 1674              	.LBB223:
 117:src/../h/Riscv.hpp **** }
 1675              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1676              		.loc 2 117 65 is_stmt 0
 1677              	#APP
 1678              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1679              		csrw sepc, s1
 1680              	# 0 "" 2
 1681              		.loc 2 118 1
 1682              	#NO_APP
 1683 04a8 6FF05FBB 		j	.L3
 1684              	.LBE223:
 1685              	.LBE222:
 1686              	.LBE211:
 1687              	.LBE236:
 1688              	.LBE250:
 1689              	.LBE275:
 1690              	.LBE295:
 1691              	.LBE310:
 1692              	.LBE326:
 1693              	.LBE343:
 1694              	.LBE361:
 1695              	.LBE380:
 1696              	.LBE392:
 1697              	.LBE405:
 1698              		.cfi_endproc
 1699              	.LFE55:
 1701              		.align	2
 1702              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1704              	_ZN5Riscv17handleTrapConsoleEv:
 1705              	.LFB56:
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp **** 
 278:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1706              		.loc 1 278 33 is_stmt 1
 1707              		.cfi_startproc
GAS LISTING /tmp/ccBMJpt6.s 			page 49


 1708 04ac 130101FE 		addi	sp,sp,-32
 1709              		.cfi_def_cfa_offset 32
 1710 04b0 233C1100 		sd	ra,24(sp)
 1711 04b4 23388100 		sd	s0,16(sp)
 1712              		.cfi_offset 1, -8
 1713              		.cfi_offset 8, -16
 1714 04b8 13040102 		addi	s0,sp,32
 1715              		.cfi_def_cfa 8, 0
 279:src/Riscv.cpp ****     uint64 scause = r_scause();
 1716              		.loc 1 279 5
 1717              	.LBB406:
 1718              	.LBB407:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1719              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1720              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1721              		.loc 2 99 72 is_stmt 0
 1722              	#APP
 1723              	# 99 "src/../h/Riscv.hpp" 1
 1724              		csrr a5, scause
 1725              	# 0 "" 2
 1726              	#NO_APP
 1727 04c0 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1728              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 1729              		.loc 2 100 12 is_stmt 0
 1730 04c4 033784FE 		ld	a4,-24(s0)
 1731              	.LVL126:
 1732              	.LBE407:
 1733              	.LBE406:
 280:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1734              		.loc 1 280 5 is_stmt 1
 1735 04c8 9307F0FF 		li	a5,-1
 1736 04cc 9397F703 		slli	a5,a5,63
 1737 04d0 93879700 		addi	a5,a5,9
 1738 04d4 6302F702 		beq	a4,a5,.L48
 281:src/Riscv.cpp ****         console_handler();
 282:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 283:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1739              		.loc 1 283 12
 1740 04d8 9307F0FF 		li	a5,-1
 1741 04dc 9397F703 		slli	a5,a5,63
 1742 04e0 93871700 		addi	a5,a5,1
 1743 04e4 6304F702 		beq	a4,a5,.L49
 1744              	.LVL127:
 1745              	.L44:
 284:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 285:src/Riscv.cpp ****     }
 286:src/Riscv.cpp **** 
 287:src/Riscv.cpp **** }...
 1746              		.loc 1 287 1 is_stmt 0
 1747 04e8 83308101 		ld	ra,24(sp)
 1748              		.cfi_remember_state
 1749              		.cfi_restore 1
 1750 04ec 03340101 		ld	s0,16(sp)
GAS LISTING /tmp/ccBMJpt6.s 			page 50


 1751              		.cfi_restore 8
 1752              		.cfi_def_cfa 2, 32
 1753 04f0 13010102 		addi	sp,sp,32
 1754              		.cfi_def_cfa_offset 0
 1755 04f4 67800000 		jr	ra
 1756              	.LVL128:
 1757              	.L48:
 1758              		.cfi_restore_state
 281:src/Riscv.cpp ****         console_handler();
 1759              		.loc 1 281 9 is_stmt 1
 281:src/Riscv.cpp ****         console_handler();
 1760              		.loc 1 281 24 is_stmt 0
 1761 04f8 97000000 		call	console_handler@plt
 1761      E7800000 
 1762              	.LVL129:
 282:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 1763              		.loc 1 282 9 is_stmt 1
 1764              	.LBB408:
 1765              	.LBB409:
 151:src/../h/Riscv.hpp **** }
 1766              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1767              		.loc 2 151 64 is_stmt 0
 1768 0500 93070020 		li	a5,512
 1769              	#APP
 1770              	# 151 "src/../h/Riscv.hpp" 1
 152:src/../h/Riscv.hpp **** 
 1771              		csrc sip, a5
 1772              	# 0 "" 2
 1773              		.loc 2 152 1
 1774              	#NO_APP
 1775 0508 6FF01FFE 		j	.L44
 1776              	.LVL130:
 1777              	.L49:
 1778              	.LBE409:
 1779              	.LBE408:
 284:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1780              		.loc 1 284 9 is_stmt 1
 1781              	.LBB410:
 1782              	.LBB411:
 151:src/../h/Riscv.hpp **** }
 1783              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1784              		.loc 2 151 64 is_stmt 0
 1785 050c 93072000 		li	a5,2
 1786              	#APP
 1787              	# 151 "src/../h/Riscv.hpp" 1
 1788              		csrc sip, a5
 1789              	# 0 "" 2
 1790              	.LVL131:
 1791              	#NO_APP
 1792              	.LBE411:
 1793              	.LBE410:
 1794              		.loc 1 287 1
 1795 0514 6FF05FFD 		j	.L44
 1796              		.cfi_endproc
 1797              	.LFE56:
GAS LISTING /tmp/ccBMJpt6.s 			page 51


 1799              	.Letext0:
 1800              		.file 6 "src/../h/../lib/hw.h"
 1801              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1802              		.file 8 "src/../h/MemoryAllocator.hpp"
 1803              		.file 9 "src/../h/Scheduler.hpp"
 1804              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccBMJpt6.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccBMJpt6.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccBMJpt6.s:13     .text:0000000000000000 .L0 
     /tmp/ccBMJpt6.s:14     .text:0000000000000000 .L0 
     /tmp/ccBMJpt6.s:15     .text:0000000000000004 .L0 
     /tmp/ccBMJpt6.s:17     .text:0000000000000008 .L0 
     /tmp/ccBMJpt6.s:19     .text:000000000000000c .L0 
     /tmp/ccBMJpt6.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccBMJpt6.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccBMJpt6.s:33     .text:0000000000000014 .L0 
     /tmp/ccBMJpt6.s:34     .text:0000000000000018 .L0 
     /tmp/ccBMJpt6.s:35     .text:0000000000000018 .L0 
     /tmp/ccBMJpt6.s:37     .text:000000000000001c .L0 
     /tmp/ccBMJpt6.s:39     .text:0000000000000020 .L0 
     /tmp/ccBMJpt6.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccBMJpt6.s:48     .text:0000000000000020 .L0 
     /tmp/ccBMJpt6.s:49     .text:0000000000000020 .L0 
     /tmp/ccBMJpt6.s:50     .text:0000000000000024 .L0 
     /tmp/ccBMJpt6.s:57     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:58     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:59     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:60     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:61     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:62     .text:000000000000003c .L0 
     /tmp/ccBMJpt6.s:64     .text:0000000000000040 .L0 
     /tmp/ccBMJpt6.s:69     .text:0000000000000040 .L0 
     /tmp/ccBMJpt6.s:70     .text:0000000000000040 .L0 
     /tmp/ccBMJpt6.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/ccBMJpt6.s:79     .text:0000000000000048 .L0 
     /tmp/ccBMJpt6.s:80     .text:0000000000000048 .L0 
     /tmp/ccBMJpt6.s:84     .text:000000000000004c .L0 
     /tmp/ccBMJpt6.s:87     .text:0000000000000050 .L0 
     /tmp/ccBMJpt6.s:88     .text:0000000000000050 .L0 
     /tmp/ccBMJpt6.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:24     .text:0000000000000050 .L0 
     /tmp/ccBMJpt6.s:98     .text:0000000000000054 .L0 
     /tmp/ccBMJpt6.s:104    .text:000000000000005c .L0 
     /tmp/ccBMJpt6.s:105    .text:0000000000000060 .L0 
     /tmp/ccBMJpt6.s:106    .text:0000000000000060 .L0 
     /tmp/ccBMJpt6.s:108    .text:0000000000000064 .L0 
     /tmp/ccBMJpt6.s:109    .text:0000000000000064 .L0 
     /tmp/ccBMJpt6.s:111    .text:0000000000000068 .L0 
     /tmp/ccBMJpt6.s:113    .text:000000000000006c .L0 
     /tmp/ccBMJpt6.s:115    .text:0000000000000070 .L0 
     /tmp/ccBMJpt6.s:117    .text:0000000000000074 .L0 
     /tmp/ccBMJpt6.s:119    .text:0000000000000078 .L0 
     /tmp/ccBMJpt6.s:123    .text:000000000000007c .L0 
     /tmp/ccBMJpt6.s:127    .text:000000000000007c .L0 
     /tmp/ccBMJpt6.s:136    .text:0000000000000084 .L0 
     /tmp/ccBMJpt6.s:144    .text:000000000000008c .L0 
     /tmp/ccBMJpt6.s:154    .text:0000000000000094 .L0 
     /tmp/ccBMJpt6.s:166    .text:000000000000009c .L0 
     /tmp/ccBMJpt6.s:180    .text:00000000000000a4 .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 53


     /tmp/ccBMJpt6.s:196    .text:00000000000000ac .L0 
     /tmp/ccBMJpt6.s:214    .text:00000000000000b4 .L0 
     /tmp/ccBMJpt6.s:234    .text:00000000000000bc .L0 
     /tmp/ccBMJpt6.s:256    .text:00000000000000c4 .L0 
     /tmp/ccBMJpt6.s:280    .text:00000000000000cc .L0 
     /tmp/ccBMJpt6.s:306    .text:00000000000000d4 .L0 
     /tmp/ccBMJpt6.s:312    .text:00000000000000dc .L0 
     /tmp/ccBMJpt6.s:313    .text:00000000000000dc .L0 
     /tmp/ccBMJpt6.s:314    .text:00000000000000dc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000000dc .L0 
     /tmp/ccBMJpt6.s:322    .text:00000000000000e4 .L0 
     /tmp/ccBMJpt6.s:323    .text:00000000000000e4 .L0 
     /tmp/ccBMJpt6.s:328    .text:00000000000000e8 .L0 
     /tmp/ccBMJpt6.s:333    .text:00000000000000ec .L0 
     /tmp/ccBMJpt6.s:334    .text:00000000000000ec .L0 
     /tmp/ccBMJpt6.s:335    .text:00000000000000ec .L0 
  src/../h/Riscv.hpp:181    .text:00000000000000ec .L0 
     /tmp/ccBMJpt6.s:343    .text:00000000000000f4 .L0 
     /tmp/ccBMJpt6.s:344    .text:00000000000000f4 .L0 
     /tmp/ccBMJpt6.s:349    .text:00000000000000f8 .L0 
     /tmp/ccBMJpt6.s:350    .text:00000000000000f8 .L0 
       src/Riscv.cpp:246    .text:00000000000000f8 .L0 
     /tmp/ccBMJpt6.s:356    .text:00000000000000fc .L0 
       src/Riscv.cpp:248    .text:00000000000000fc .L0 
     /tmp/ccBMJpt6.s:364    .text:0000000000000104 .L0 
     /tmp/ccBMJpt6.s:365    .text:0000000000000104 .L0 
     /tmp/ccBMJpt6.s:370    .text:000000000000010c .L0 
  src/../h/Riscv.hpp:129    .text:000000000000010c .L0 
     /tmp/ccBMJpt6.s:380    .text:0000000000000110 .L0 
     /tmp/ccBMJpt6.s:381    .text:0000000000000110 .L0 
     /tmp/ccBMJpt6.s:384    .text:0000000000000118 .L0 
     /tmp/ccBMJpt6.s:385    .text:0000000000000118 .L0 
     /tmp/ccBMJpt6.s:390    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000120 .L0 
     /tmp/ccBMJpt6.s:402    .text:0000000000000124 .L0 
     /tmp/ccBMJpt6.s:403    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000124 .L0 
     /tmp/ccBMJpt6.s:415    .text:0000000000000128 .L0 
     /tmp/ccBMJpt6.s:416    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000128 .L0 
     /tmp/ccBMJpt6.s:439    .text:000000000000012c .L0 
     /tmp/ccBMJpt6.s:448    .text:0000000000000130 .L0 
     /tmp/ccBMJpt6.s:449    .text:0000000000000130 .L0 
     /tmp/ccBMJpt6.s:450    .text:0000000000000130 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000130 .L0 
     /tmp/ccBMJpt6.s:458    .text:0000000000000138 .L0 
     /tmp/ccBMJpt6.s:459    .text:0000000000000138 .L0 
     /tmp/ccBMJpt6.s:463    .text:000000000000013c .L0 
     /tmp/ccBMJpt6.s:468    .text:0000000000000140 .L0 
     /tmp/ccBMJpt6.s:469    .text:0000000000000140 .L0 
     /tmp/ccBMJpt6.s:470    .text:0000000000000140 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000140 .L0 
     /tmp/ccBMJpt6.s:478    .text:0000000000000148 .L0 
     /tmp/ccBMJpt6.s:479    .text:0000000000000148 .L0 
     /tmp/ccBMJpt6.s:484    .text:000000000000014c .L0 
     /tmp/ccBMJpt6.s:485    .text:000000000000014c .L0 
     /tmp/ccBMJpt6.s:486    .text:000000000000014c .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 54


     /tmp/ccBMJpt6.s:487    .text:000000000000014c .L0 
     /tmp/ccBMJpt6.s:488    .text:000000000000014c .L0 
       src/Riscv.cpp:41     .text:000000000000014c .L0 
     /tmp/ccBMJpt6.s:494    .text:0000000000000150 .L0 
       src/Riscv.cpp:42     .text:0000000000000150 .L0 
     /tmp/ccBMJpt6.s:499    .text:0000000000000154 .L0 
       src/Riscv.cpp:43     .text:0000000000000154 .L0 
     /tmp/ccBMJpt6.s:504    .text:0000000000000158 .L0 
       src/Riscv.cpp:44     .text:0000000000000158 .L0 
     /tmp/ccBMJpt6.s:509    .text:000000000000015c .L0 
       src/Riscv.cpp:47     .text:000000000000015c .L0 
     /tmp/ccBMJpt6.s:515    .text:0000000000000160 .L0 
       src/Riscv.cpp:48     .text:0000000000000160 .L0 
     /tmp/ccBMJpt6.s:521    .text:0000000000000164 .L0 
       src/Riscv.cpp:49     .text:0000000000000164 .L0 
     /tmp/ccBMJpt6.s:527    .text:0000000000000168 .L0 
       src/Riscv.cpp:50     .text:0000000000000168 .L0 
     /tmp/ccBMJpt6.s:533    .text:000000000000016c .L0 
     /tmp/ccBMJpt6.s:535    .text:000000000000016c .L0 
     /tmp/ccBMJpt6.s:538    .text:0000000000000174 .L0 
     /tmp/ccBMJpt6.s:539    .text:0000000000000174 .L0 
     /tmp/ccBMJpt6.s:541    .text:0000000000000178 .L0 
     /tmp/ccBMJpt6.s:542    .text:0000000000000178 .L0 
     /tmp/ccBMJpt6.s:544    .text:000000000000017c .L0 
     /tmp/ccBMJpt6.s:548    .text:0000000000000180 .L0 
       src/Riscv.cpp:62     .text:0000000000000180 .L0 
     /tmp/ccBMJpt6.s:558    .text:0000000000000184 .L0 
     /tmp/ccBMJpt6.s:559    .text:0000000000000184 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000184 .L0 
     /tmp/ccBMJpt6.s:571    .text:0000000000000188 .L0 
     /tmp/ccBMJpt6.s:572    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000188 .L0 
     /tmp/ccBMJpt6.s:579    .text:000000000000018c .L0 
     /tmp/ccBMJpt6.s:585    .text:0000000000000190 .L0 
     /tmp/ccBMJpt6.s:596    .text:0000000000000198 .L0 
     /tmp/ccBMJpt6.s:597    .text:0000000000000198 .L0 
     /tmp/ccBMJpt6.s:598    .text:0000000000000198 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000198 .L0 
     /tmp/ccBMJpt6.s:606    .text:00000000000001a0 .L0 
     /tmp/ccBMJpt6.s:607    .text:00000000000001a0 .L0 
     /tmp/ccBMJpt6.s:612    .text:00000000000001a4 .L0 
     /tmp/ccBMJpt6.s:617    .text:00000000000001a8 .L0 
     /tmp/ccBMJpt6.s:618    .text:00000000000001a8 .L0 
     /tmp/ccBMJpt6.s:619    .text:00000000000001a8 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001a8 .L0 
     /tmp/ccBMJpt6.s:627    .text:00000000000001b0 .L0 
     /tmp/ccBMJpt6.s:628    .text:00000000000001b0 .L0 
     /tmp/ccBMJpt6.s:633    .text:00000000000001b4 .L0 
       src/Riscv.cpp:71     .text:00000000000001b4 .L0 
     /tmp/ccBMJpt6.s:640    .text:00000000000001b8 .L0 
     /tmp/ccBMJpt6.s:642    .text:00000000000001b8 .L0 
     /tmp/ccBMJpt6.s:647    .text:00000000000001c4 .L0 
       src/Riscv.cpp:75     .text:00000000000001c4 .L0 
     /tmp/ccBMJpt6.s:657    .text:00000000000001c8 .L0 
     /tmp/ccBMJpt6.s:658    .text:00000000000001c8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001c8 .L0 
     /tmp/ccBMJpt6.s:670    .text:00000000000001cc .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 55


     /tmp/ccBMJpt6.s:671    .text:00000000000001cc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001cc .L0 
     /tmp/ccBMJpt6.s:678    .text:00000000000001d0 .L0 
     /tmp/ccBMJpt6.s:689    .text:00000000000001d4 .L0 
     /tmp/ccBMJpt6.s:690    .text:00000000000001d4 .L0 
     /tmp/ccBMJpt6.s:691    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001d4 .L0 
     /tmp/ccBMJpt6.s:699    .text:00000000000001dc .L0 
     /tmp/ccBMJpt6.s:700    .text:00000000000001dc .L0 
     /tmp/ccBMJpt6.s:705    .text:00000000000001e0 .L0 
     /tmp/ccBMJpt6.s:710    .text:00000000000001e4 .L0 
     /tmp/ccBMJpt6.s:711    .text:00000000000001e4 .L0 
     /tmp/ccBMJpt6.s:712    .text:00000000000001e4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001e4 .L0 
     /tmp/ccBMJpt6.s:720    .text:00000000000001ec .L0 
     /tmp/ccBMJpt6.s:721    .text:00000000000001ec .L0 
     /tmp/ccBMJpt6.s:726    .text:00000000000001f0 .L0 
       src/Riscv.cpp:84     .text:00000000000001f0 .L0 
     /tmp/ccBMJpt6.s:733    .text:00000000000001f4 .L0 
     /tmp/ccBMJpt6.s:735    .text:00000000000001f4 .L0 
     /tmp/ccBMJpt6.s:738    .text:00000000000001fc .L0 
       src/Riscv.cpp:86     .text:00000000000001fc .L0 
     /tmp/ccBMJpt6.s:748    .text:0000000000000200 .L0 
     /tmp/ccBMJpt6.s:749    .text:0000000000000200 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000200 .L0 
     /tmp/ccBMJpt6.s:761    .text:0000000000000204 .L0 
     /tmp/ccBMJpt6.s:762    .text:0000000000000204 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000204 .L0 
     /tmp/ccBMJpt6.s:769    .text:0000000000000208 .L0 
     /tmp/ccBMJpt6.s:780    .text:000000000000020c .L0 
     /tmp/ccBMJpt6.s:781    .text:000000000000020c .L0 
     /tmp/ccBMJpt6.s:782    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000020c .L0 
     /tmp/ccBMJpt6.s:790    .text:0000000000000214 .L0 
     /tmp/ccBMJpt6.s:791    .text:0000000000000214 .L0 
     /tmp/ccBMJpt6.s:796    .text:0000000000000218 .L0 
     /tmp/ccBMJpt6.s:801    .text:000000000000021c .L0 
     /tmp/ccBMJpt6.s:802    .text:000000000000021c .L0 
     /tmp/ccBMJpt6.s:803    .text:000000000000021c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000021c .L0 
     /tmp/ccBMJpt6.s:811    .text:0000000000000224 .L0 
     /tmp/ccBMJpt6.s:812    .text:0000000000000224 .L0 
     /tmp/ccBMJpt6.s:817    .text:0000000000000228 .L0 
     /tmp/ccBMJpt6.s:818    .text:0000000000000228 .L0 
     /tmp/ccBMJpt6.s:821    .text:0000000000000234 .L0 
     /tmp/ccBMJpt6.s:824    .text:000000000000023c .L0 
     /tmp/ccBMJpt6.s:825    .text:000000000000023c .L0 
     /tmp/ccBMJpt6.s:830    .text:0000000000000244 .L0 
     /tmp/ccBMJpt6.s:831    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000244 .L0 
     /tmp/ccBMJpt6.s:843    .text:0000000000000248 .L0 
     /tmp/ccBMJpt6.s:844    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000248 .L0 
     /tmp/ccBMJpt6.s:851    .text:000000000000024c .L0 
     /tmp/ccBMJpt6.s:862    .text:0000000000000250 .L0 
     /tmp/ccBMJpt6.s:863    .text:0000000000000250 .L0 
     /tmp/ccBMJpt6.s:864    .text:0000000000000250 .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 56


  src/../h/Riscv.hpp:111    .text:0000000000000250 .L0 
     /tmp/ccBMJpt6.s:872    .text:0000000000000258 .L0 
     /tmp/ccBMJpt6.s:873    .text:0000000000000258 .L0 
     /tmp/ccBMJpt6.s:878    .text:000000000000025c .L0 
     /tmp/ccBMJpt6.s:883    .text:0000000000000260 .L0 
     /tmp/ccBMJpt6.s:884    .text:0000000000000260 .L0 
     /tmp/ccBMJpt6.s:885    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000260 .L0 
     /tmp/ccBMJpt6.s:893    .text:0000000000000268 .L0 
     /tmp/ccBMJpt6.s:894    .text:0000000000000268 .L0 
     /tmp/ccBMJpt6.s:899    .text:000000000000026c .L0 
     /tmp/ccBMJpt6.s:900    .text:000000000000026c .L0 
     /tmp/ccBMJpt6.s:905    .text:0000000000000274 .L0 
     /tmp/ccBMJpt6.s:906    .text:0000000000000274 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000274 .L0 
     /tmp/ccBMJpt6.s:918    .text:0000000000000278 .L0 
     /tmp/ccBMJpt6.s:919    .text:0000000000000278 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000278 .L0 
     /tmp/ccBMJpt6.s:926    .text:000000000000027c .L0 
     /tmp/ccBMJpt6.s:937    .text:0000000000000280 .L0 
     /tmp/ccBMJpt6.s:938    .text:0000000000000280 .L0 
     /tmp/ccBMJpt6.s:939    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000280 .L0 
     /tmp/ccBMJpt6.s:947    .text:0000000000000288 .L0 
     /tmp/ccBMJpt6.s:948    .text:0000000000000288 .L0 
     /tmp/ccBMJpt6.s:953    .text:000000000000028c .L0 
     /tmp/ccBMJpt6.s:958    .text:0000000000000290 .L0 
     /tmp/ccBMJpt6.s:959    .text:0000000000000290 .L0 
     /tmp/ccBMJpt6.s:960    .text:0000000000000290 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000290 .L0 
     /tmp/ccBMJpt6.s:968    .text:0000000000000298 .L0 
     /tmp/ccBMJpt6.s:969    .text:0000000000000298 .L0 
     /tmp/ccBMJpt6.s:974    .text:000000000000029c .L0 
     /tmp/ccBMJpt6.s:975    .text:000000000000029c .L0 
     /tmp/ccBMJpt6.s:978    .text:00000000000002a8 .L0 
     /tmp/ccBMJpt6.s:979    .text:00000000000002a8 .L0 
     /tmp/ccBMJpt6.s:984    .text:00000000000002b0 .L0 
     /tmp/ccBMJpt6.s:985    .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002b0 .L0 
     /tmp/ccBMJpt6.s:997    .text:00000000000002b4 .L0 
     /tmp/ccBMJpt6.s:998    .text:00000000000002b4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002b4 .L0 
     /tmp/ccBMJpt6.s:1005   .text:00000000000002b8 .L0 
     /tmp/ccBMJpt6.s:1016   .text:00000000000002bc .L0 
     /tmp/ccBMJpt6.s:1017   .text:00000000000002bc .L0 
     /tmp/ccBMJpt6.s:1018   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002bc .L0 
     /tmp/ccBMJpt6.s:1026   .text:00000000000002c4 .L0 
     /tmp/ccBMJpt6.s:1027   .text:00000000000002c4 .L0 
     /tmp/ccBMJpt6.s:1032   .text:00000000000002c8 .L0 
     /tmp/ccBMJpt6.s:1037   .text:00000000000002cc .L0 
     /tmp/ccBMJpt6.s:1038   .text:00000000000002cc .L0 
     /tmp/ccBMJpt6.s:1039   .text:00000000000002cc .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002cc .L0 
     /tmp/ccBMJpt6.s:1047   .text:00000000000002d4 .L0 
     /tmp/ccBMJpt6.s:1048   .text:00000000000002d4 .L0 
     /tmp/ccBMJpt6.s:1053   .text:00000000000002d8 .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 57


     /tmp/ccBMJpt6.s:1054   .text:00000000000002d8 .L0 
     /tmp/ccBMJpt6.s:1055   .text:00000000000002d8 .L0 
       src/Riscv.cpp:134    .text:00000000000002d8 .L0 
     /tmp/ccBMJpt6.s:1061   .text:00000000000002dc .L0 
       src/Riscv.cpp:135    .text:00000000000002dc .L0 
     /tmp/ccBMJpt6.s:1066   .text:00000000000002e0 .L0 
       src/Riscv.cpp:137    .text:00000000000002e0 .L0 
     /tmp/ccBMJpt6.s:1072   .text:00000000000002e4 .L0 
       src/Riscv.cpp:138    .text:00000000000002e4 .L0 
     /tmp/ccBMJpt6.s:1078   .text:00000000000002e8 .L0 
     /tmp/ccBMJpt6.s:1080   .text:00000000000002e8 .L0 
     /tmp/ccBMJpt6.s:1087   .text:00000000000002f4 .L0 
     /tmp/ccBMJpt6.s:1093   .text:00000000000002f8 .L0 
     /tmp/ccBMJpt6.s:1103   .text:0000000000000300 .L0 
     /tmp/ccBMJpt6.s:1104   .text:0000000000000300 .L0 
     /tmp/ccBMJpt6.s:1105   .text:0000000000000300 .L0 
     /tmp/ccBMJpt6.s:1111   .text:0000000000000308 .L0 
     /tmp/ccBMJpt6.s:1112   .text:0000000000000308 .L0 
     /tmp/ccBMJpt6.s:1115   .text:000000000000030c .L0 
     /tmp/ccBMJpt6.s:1116   .text:000000000000030c .L0 
     /tmp/ccBMJpt6.s:1118   .text:0000000000000310 .L0 
     /tmp/ccBMJpt6.s:1122   .text:0000000000000314 .L0 
       src/Riscv.cpp:148    .text:0000000000000314 .L0 
     /tmp/ccBMJpt6.s:1132   .text:0000000000000318 .L0 
     /tmp/ccBMJpt6.s:1133   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000318 .L0 
     /tmp/ccBMJpt6.s:1145   .text:000000000000031c .L0 
     /tmp/ccBMJpt6.s:1146   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000031c .L0 
     /tmp/ccBMJpt6.s:1153   .text:0000000000000320 .L0 
     /tmp/ccBMJpt6.s:1159   .text:0000000000000324 .L0 
     /tmp/ccBMJpt6.s:1169   .text:000000000000032c .L0 
     /tmp/ccBMJpt6.s:1170   .text:000000000000032c .L0 
     /tmp/ccBMJpt6.s:1171   .text:000000000000032c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000032c .L0 
     /tmp/ccBMJpt6.s:1179   .text:0000000000000334 .L0 
     /tmp/ccBMJpt6.s:1180   .text:0000000000000334 .L0 
     /tmp/ccBMJpt6.s:1184   .text:0000000000000338 .L0 
     /tmp/ccBMJpt6.s:1189   .text:000000000000033c .L0 
     /tmp/ccBMJpt6.s:1190   .text:000000000000033c .L0 
     /tmp/ccBMJpt6.s:1191   .text:000000000000033c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000033c .L0 
     /tmp/ccBMJpt6.s:1199   .text:0000000000000344 .L0 
     /tmp/ccBMJpt6.s:1200   .text:0000000000000344 .L0 
     /tmp/ccBMJpt6.s:1205   .text:0000000000000348 .L0 
     /tmp/ccBMJpt6.s:1206   .text:0000000000000348 .L0 
       src/Riscv.cpp:160    .text:0000000000000348 .L0 
     /tmp/ccBMJpt6.s:1212   .text:000000000000034c .L0 
       src/Riscv.cpp:162    .text:000000000000034c .L0 
     /tmp/ccBMJpt6.s:1219   .text:0000000000000350 .L0 
     /tmp/ccBMJpt6.s:1226   .text:0000000000000354 .L0 
     /tmp/ccBMJpt6.s:1229   .text:0000000000000358 .L0 
     /tmp/ccBMJpt6.s:1232   .text:000000000000035c .L0 
     /tmp/ccBMJpt6.s:1240   .text:0000000000000364 .L0 
     /tmp/ccBMJpt6.s:1241   .text:0000000000000364 .L0 
     /tmp/ccBMJpt6.s:1242   .text:0000000000000364 .L0 
     /tmp/ccBMJpt6.s:1248   .text:000000000000036c .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 58


     /tmp/ccBMJpt6.s:1249   .text:000000000000036c .L0 
     /tmp/ccBMJpt6.s:1251   .text:0000000000000370 .L0 
     /tmp/ccBMJpt6.s:1254   .text:0000000000000378 .L0 
     /tmp/ccBMJpt6.s:1255   .text:0000000000000378 .L0 
     /tmp/ccBMJpt6.s:1261   .text:0000000000000384 .L0 
     /tmp/ccBMJpt6.s:1264   .text:0000000000000384 .L0 
     /tmp/ccBMJpt6.s:1265   .text:0000000000000384 .L0 
     /tmp/ccBMJpt6.s:1267   .text:0000000000000388 .L0 
     /tmp/ccBMJpt6.s:1269   .text:000000000000038c .L0 
     /tmp/ccBMJpt6.s:1274   .text:0000000000000390 .L0 
     /tmp/ccBMJpt6.s:1280   .text:0000000000000394 .L0 
     /tmp/ccBMJpt6.s:1281   .text:0000000000000394 .L0 
     /tmp/ccBMJpt6.s:1283   .text:0000000000000398 .L0 
     /tmp/ccBMJpt6.s:1285   .text:000000000000039c .L0 
     /tmp/ccBMJpt6.s:1295   .text:00000000000003a4 .L0 
     /tmp/ccBMJpt6.s:1296   .text:00000000000003a4 .L0 
     /tmp/ccBMJpt6.s:1297   .text:00000000000003a4 .L0 
     /tmp/ccBMJpt6.s:1302   .text:00000000000003a8 .L0 
     /tmp/ccBMJpt6.s:1303   .text:00000000000003a8 .L0 
     /tmp/ccBMJpt6.s:1305   .text:00000000000003ac .L0 
     /tmp/ccBMJpt6.s:1312   .text:00000000000003b8 .L0 
     /tmp/ccBMJpt6.s:1313   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003b8 .L0 
     /tmp/ccBMJpt6.s:1325   .text:00000000000003bc .L0 
     /tmp/ccBMJpt6.s:1326   .text:00000000000003bc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003bc .L0 
     /tmp/ccBMJpt6.s:1333   .text:00000000000003c0 .L0 
     /tmp/ccBMJpt6.s:1344   .text:00000000000003c4 .L0 
     /tmp/ccBMJpt6.s:1345   .text:00000000000003c4 .L0 
     /tmp/ccBMJpt6.s:1346   .text:00000000000003c4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003c4 .L0 
     /tmp/ccBMJpt6.s:1354   .text:00000000000003cc .L0 
     /tmp/ccBMJpt6.s:1355   .text:00000000000003cc .L0 
     /tmp/ccBMJpt6.s:1360   .text:00000000000003d0 .L0 
     /tmp/ccBMJpt6.s:1365   .text:00000000000003d4 .L0 
     /tmp/ccBMJpt6.s:1366   .text:00000000000003d4 .L0 
     /tmp/ccBMJpt6.s:1367   .text:00000000000003d4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000003d4 .L0 
     /tmp/ccBMJpt6.s:1375   .text:00000000000003dc .L0 
     /tmp/ccBMJpt6.s:1376   .text:00000000000003dc .L0 
     /tmp/ccBMJpt6.s:1381   .text:00000000000003e0 .L0 
     /tmp/ccBMJpt6.s:1382   .text:00000000000003e0 .L0 
       src/Riscv.cpp:185    .text:00000000000003e0 .L0 
     /tmp/ccBMJpt6.s:1388   .text:00000000000003e4 .L0 
       src/Riscv.cpp:187    .text:00000000000003e4 .L0 
     /tmp/ccBMJpt6.s:1394   .text:00000000000003e8 .L0 
     /tmp/ccBMJpt6.s:1398   .text:00000000000003e8 .L0 
     /tmp/ccBMJpt6.s:1399   .text:00000000000003e8 .L0 
     /tmp/ccBMJpt6.s:1400   .text:00000000000003e8 .L0 
     /tmp/ccBMJpt6.s:1405   .text:00000000000003ec .L0 
     /tmp/ccBMJpt6.s:1407   .text:00000000000003f0 .L0 
     /tmp/ccBMJpt6.s:1411   .text:00000000000003f4 .L0 
       src/Riscv.cpp:197    .text:00000000000003f4 .L0 
     /tmp/ccBMJpt6.s:1421   .text:00000000000003f8 .L0 
     /tmp/ccBMJpt6.s:1422   .text:00000000000003f8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003f8 .L0 
     /tmp/ccBMJpt6.s:1434   .text:00000000000003fc .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 59


     /tmp/ccBMJpt6.s:1435   .text:00000000000003fc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003fc .L0 
     /tmp/ccBMJpt6.s:1442   .text:0000000000000400 .L0 
     /tmp/ccBMJpt6.s:1448   .text:0000000000000404 .L0 
     /tmp/ccBMJpt6.s:1449   .text:0000000000000404 .L0 
     /tmp/ccBMJpt6.s:1460   .text:0000000000000410 .L0 
     /tmp/ccBMJpt6.s:1461   .text:0000000000000410 .L0 
     /tmp/ccBMJpt6.s:1462   .text:0000000000000410 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000410 .L0 
     /tmp/ccBMJpt6.s:1470   .text:0000000000000418 .L0 
     /tmp/ccBMJpt6.s:1471   .text:0000000000000418 .L0 
     /tmp/ccBMJpt6.s:1476   .text:000000000000041c .L0 
     /tmp/ccBMJpt6.s:1481   .text:0000000000000420 .L0 
     /tmp/ccBMJpt6.s:1482   .text:0000000000000420 .L0 
     /tmp/ccBMJpt6.s:1483   .text:0000000000000420 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000420 .L0 
     /tmp/ccBMJpt6.s:1491   .text:0000000000000428 .L0 
     /tmp/ccBMJpt6.s:1492   .text:0000000000000428 .L0 
     /tmp/ccBMJpt6.s:1497   .text:000000000000042c .L0 
     /tmp/ccBMJpt6.s:1498   .text:000000000000042c .L0 
       src/Riscv.cpp:208    .text:000000000000042c .L0 
     /tmp/ccBMJpt6.s:1504   .text:0000000000000430 .L0 
       src/Riscv.cpp:210    .text:0000000000000430 .L0 
     /tmp/ccBMJpt6.s:1510   .text:0000000000000434 .L0 
     /tmp/ccBMJpt6.s:1514   .text:0000000000000434 .L0 
     /tmp/ccBMJpt6.s:1515   .text:0000000000000434 .L0 
     /tmp/ccBMJpt6.s:1516   .text:0000000000000434 .L0 
     /tmp/ccBMJpt6.s:1521   .text:0000000000000438 .L0 
     /tmp/ccBMJpt6.s:1523   .text:000000000000043c .L0 
     /tmp/ccBMJpt6.s:1527   .text:0000000000000440 .L0 
       src/Riscv.cpp:221    .text:0000000000000440 .L0 
     /tmp/ccBMJpt6.s:1537   .text:0000000000000444 .L0 
     /tmp/ccBMJpt6.s:1538   .text:0000000000000444 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000444 .L0 
     /tmp/ccBMJpt6.s:1550   .text:0000000000000448 .L0 
     /tmp/ccBMJpt6.s:1551   .text:0000000000000448 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000448 .L0 
     /tmp/ccBMJpt6.s:1558   .text:000000000000044c .L0 
     /tmp/ccBMJpt6.s:1564   .text:0000000000000450 .L0 
     /tmp/ccBMJpt6.s:1565   .text:0000000000000450 .L0 
     /tmp/ccBMJpt6.s:1568   .text:0000000000000458 .L0 
     /tmp/ccBMJpt6.s:1569   .text:0000000000000458 .L0 
     /tmp/ccBMJpt6.s:1579   .text:0000000000000460 .L0 
     /tmp/ccBMJpt6.s:1580   .text:0000000000000460 .L0 
     /tmp/ccBMJpt6.s:1581   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000460 .L0 
     /tmp/ccBMJpt6.s:1589   .text:0000000000000468 .L0 
     /tmp/ccBMJpt6.s:1590   .text:0000000000000468 .L0 
     /tmp/ccBMJpt6.s:1595   .text:000000000000046c .L0 
     /tmp/ccBMJpt6.s:1600   .text:0000000000000470 .L0 
     /tmp/ccBMJpt6.s:1601   .text:0000000000000470 .L0 
     /tmp/ccBMJpt6.s:1602   .text:0000000000000470 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000470 .L0 
     /tmp/ccBMJpt6.s:1610   .text:0000000000000478 .L0 
     /tmp/ccBMJpt6.s:1611   .text:0000000000000478 .L0 
     /tmp/ccBMJpt6.s:1616   .text:000000000000047c .L0 
     /tmp/ccBMJpt6.s:1617   .text:000000000000047c .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 60


     /tmp/ccBMJpt6.s:1622   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000484 .L0 
     /tmp/ccBMJpt6.s:1632   .text:0000000000000488 .L0 
     /tmp/ccBMJpt6.s:1633   .text:0000000000000488 .L0 
     /tmp/ccBMJpt6.s:1636   .text:0000000000000490 .L0 
     /tmp/ccBMJpt6.s:1637   .text:0000000000000490 .L0 
     /tmp/ccBMJpt6.s:1642   .text:0000000000000498 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000498 .L0 
     /tmp/ccBMJpt6.s:1652   .text:000000000000049c .L0 
       src/Riscv.cpp:235    .text:000000000000049c .L0 
     /tmp/ccBMJpt6.s:1662   .text:00000000000004a0 .L0 
     /tmp/ccBMJpt6.s:1663   .text:00000000000004a0 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004a0 .L0 
     /tmp/ccBMJpt6.s:1675   .text:00000000000004a4 .L0 
     /tmp/ccBMJpt6.s:1676   .text:00000000000004a4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004a4 .L0 
     /tmp/ccBMJpt6.s:1683   .text:00000000000004a8 .L0 
     /tmp/ccBMJpt6.s:1698   .text:00000000000004ac .L0 
     /tmp/ccBMJpt6.s:1704   .text:00000000000004ac _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccBMJpt6.s:1707   .text:00000000000004ac .L0 
     /tmp/ccBMJpt6.s:1708   .text:00000000000004ac .L0 
     /tmp/ccBMJpt6.s:1709   .text:00000000000004b0 .L0 
     /tmp/ccBMJpt6.s:1712   .text:00000000000004b8 .L0 
     /tmp/ccBMJpt6.s:1713   .text:00000000000004b8 .L0 
     /tmp/ccBMJpt6.s:1715   .text:00000000000004bc .L0 
     /tmp/ccBMJpt6.s:1719   .text:00000000000004bc .L0 
     /tmp/ccBMJpt6.s:1720   .text:00000000000004bc .L0 
     /tmp/ccBMJpt6.s:1721   .text:00000000000004bc .L0 
  src/../h/Riscv.hpp:99     .text:00000000000004bc .L0 
     /tmp/ccBMJpt6.s:1729   .text:00000000000004c4 .L0 
     /tmp/ccBMJpt6.s:1730   .text:00000000000004c4 .L0 
     /tmp/ccBMJpt6.s:1735   .text:00000000000004c8 .L0 
     /tmp/ccBMJpt6.s:1740   .text:00000000000004d8 .L0 
     /tmp/ccBMJpt6.s:1747   .text:00000000000004e8 .L0 
     /tmp/ccBMJpt6.s:1748   .text:00000000000004ec .L0 
     /tmp/ccBMJpt6.s:1749   .text:00000000000004ec .L0 
     /tmp/ccBMJpt6.s:1751   .text:00000000000004f0 .L0 
     /tmp/ccBMJpt6.s:1752   .text:00000000000004f0 .L0 
     /tmp/ccBMJpt6.s:1754   .text:00000000000004f4 .L0 
     /tmp/ccBMJpt6.s:1758   .text:00000000000004f8 .L0 
     /tmp/ccBMJpt6.s:1760   .text:00000000000004f8 .L0 
     /tmp/ccBMJpt6.s:1761   .text:00000000000004f8 .L0 
     /tmp/ccBMJpt6.s:1766   .text:0000000000000500 .L0 
     /tmp/ccBMJpt6.s:1767   .text:0000000000000500 .L0 
     /tmp/ccBMJpt6.s:1768   .text:0000000000000500 .L0 
     /tmp/ccBMJpt6.s:1775   .text:0000000000000508 .L0 
     /tmp/ccBMJpt6.s:1783   .text:000000000000050c .L0 
     /tmp/ccBMJpt6.s:1784   .text:000000000000050c .L0 
     /tmp/ccBMJpt6.s:1785   .text:000000000000050c .L0 
     /tmp/ccBMJpt6.s:1795   .text:0000000000000514 .L0 
     /tmp/ccBMJpt6.s:1796   .text:0000000000000518 .L0 
     /tmp/ccBMJpt6.s:1805   .text:0000000000000518 .L0 
     /tmp/ccBMJpt6.s:365    .text:0000000000000104 .L0 
     /tmp/ccBMJpt6.s:385    .text:0000000000000118 .L0 
     /tmp/ccBMJpt6.s:818    .text:0000000000000228 .L0 
     /tmp/ccBMJpt6.s:975    .text:000000000000029c .L0 
     /tmp/ccBMJpt6.s:1617   .text:000000000000047c .L0 
GAS LISTING /tmp/ccBMJpt6.s 			page 61


     /tmp/ccBMJpt6.s:1637   .text:0000000000000490 .L0 
     /tmp/ccBMJpt6.s:122    .text:000000000000007c .L29
     /tmp/ccBMJpt6.s:441    .text:0000000000000130 .L30
     /tmp/ccBMJpt6.s:588    .text:0000000000000198 .L31
     /tmp/ccBMJpt6.s:680    .text:00000000000001d4 .L32
     /tmp/ccBMJpt6.s:771    .text:000000000000020c .L33
     /tmp/ccBMJpt6.s:853    .text:0000000000000250 .L34
     /tmp/ccBMJpt6.s:928    .text:0000000000000280 .L35
     /tmp/ccBMJpt6.s:1007   .text:00000000000002bc .L36
     /tmp/ccBMJpt6.s:1162   .text:000000000000032c .L37
     /tmp/ccBMJpt6.s:1335   .text:00000000000003c4 .L38
     /tmp/ccBMJpt6.s:1453   .text:0000000000000410 .L39
     /tmp/ccBMJpt6.s:1572   .text:0000000000000460 .L40
     /tmp/ccBMJpt6.s:101    .text:000000000000005c .L3
     /tmp/ccBMJpt6.s:581    .text:0000000000000190 .L24
     /tmp/ccBMJpt6.s:130    .text:0000000000000084 .L5
     /tmp/ccBMJpt6.s:545    .text:0000000000000180 .L6
     /tmp/ccBMJpt6.s:1155   .text:0000000000000324 .L25
     /tmp/ccBMJpt6.s:1119   .text:0000000000000314 .L13
     /tmp/ccBMJpt6.s:1258   .text:0000000000000384 .L17
     /tmp/ccBMJpt6.s:1288   .text:00000000000003a4 .L15
     /tmp/ccBMJpt6.s:1227   .text:0000000000000358 .L16
     /tmp/ccBMJpt6.s:1221   .text:0000000000000354 .L41
     /tmp/ccBMJpt6.s:1308   .text:00000000000003b8 .L18
     /tmp/ccBMJpt6.s:1444   .text:0000000000000404 .L42
     /tmp/ccBMJpt6.s:1409   .text:00000000000003f4 .L20
     /tmp/ccBMJpt6.s:1560   .text:0000000000000450 .L43
     /tmp/ccBMJpt6.s:1525   .text:0000000000000440 .L22
     /tmp/ccBMJpt6.s:1757   .text:00000000000004f8 .L48
     /tmp/ccBMJpt6.s:1777   .text:000000000000050c .L49
     /tmp/ccBMJpt6.s:1745   .text:00000000000004e8 .L44
     /tmp/ccBMJpt6.s:4928   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBMJpt6.s:7238   .debug_str:0000000000000b5e .LASF222
     /tmp/ccBMJpt6.s:6938   .debug_str:0000000000000198 .LASF223
     /tmp/ccBMJpt6.s:7090   .debug_str:00000000000006ab .LASF224
     /tmp/ccBMJpt6.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBMJpt6.s:1799   .text:0000000000000518 .Letext0
     /tmp/ccBMJpt6.s:6878   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBMJpt6.s:7150   .debug_str:00000000000008e9 .LASF3
     /tmp/ccBMJpt6.s:7024   .debug_str:0000000000000473 .LASF0
     /tmp/ccBMJpt6.s:7068   .debug_str:000000000000062d .LASF1
     /tmp/ccBMJpt6.s:7168   .debug_str:0000000000000975 .LASF2
     /tmp/ccBMJpt6.s:7180   .debug_str:00000000000009e3 .LASF4
     /tmp/ccBMJpt6.s:7040   .debug_str:00000000000004ea .LASF5
     /tmp/ccBMJpt6.s:6892   .debug_str:0000000000000057 .LASF6
     /tmp/ccBMJpt6.s:7122   .debug_str:00000000000007bf .LASF7
     /tmp/ccBMJpt6.s:7056   .debug_str:00000000000005cb .LASF8
     /tmp/ccBMJpt6.s:6990   .debug_str:0000000000000358 .LASF9
     /tmp/ccBMJpt6.s:6998   .debug_str:000000000000039a .LASF10
     /tmp/ccBMJpt6.s:6924   .debug_str:0000000000000122 .LASF11
     /tmp/ccBMJpt6.s:6980   .debug_str:000000000000030e .LASF12
     /tmp/ccBMJpt6.s:6940   .debug_str:00000000000001a6 .LASF13
     /tmp/ccBMJpt6.s:6922   .debug_str:0000000000000112 .LASF14
     /tmp/ccBMJpt6.s:7208   .debug_str:0000000000000aad .LASF15
     /tmp/ccBMJpt6.s:6962   .debug_str:0000000000000250 .LASF16
     /tmp/ccBMJpt6.s:7198   .debug_str:0000000000000a77 .LASF17
     /tmp/ccBMJpt6.s:7290   .debug_str:0000000000000d8a .LASF68
GAS LISTING /tmp/ccBMJpt6.s 			page 62


     /tmp/ccBMJpt6.s:7146   .debug_str:00000000000008c1 .LASF21
     /tmp/ccBMJpt6.s:7072   .debug_str:0000000000000646 .LASF18
     /tmp/ccBMJpt6.s:6970   .debug_str:00000000000002a9 .LASF19
     /tmp/ccBMJpt6.s:7306   .debug_str:0000000000000df0 .LASF20
     /tmp/ccBMJpt6.s:7274   .debug_str:0000000000000d02 .LASF22
     /tmp/ccBMJpt6.s:6972   .debug_str:00000000000002b2 .LASF23
     /tmp/ccBMJpt6.s:7236   .debug_str:0000000000000b51 .LASF24
     /tmp/ccBMJpt6.s:6948   .debug_str:00000000000001e2 .LASF25
     /tmp/ccBMJpt6.s:7010   .debug_str:0000000000000413 .LASF58
     /tmp/ccBMJpt6.s:7022   .debug_str:000000000000045b .LASF60
     /tmp/ccBMJpt6.s:7266   .debug_str:0000000000000cce .LASF26
     /tmp/ccBMJpt6.s:7254   .debug_str:0000000000000c8e .LASF28
     /tmp/ccBMJpt6.s:7162   .debug_str:000000000000094f .LASF30
     /tmp/ccBMJpt6.s:7110   .debug_str:0000000000000754 .LASF32
     /tmp/ccBMJpt6.s:7138   .debug_str:0000000000000878 .LASF27
     /tmp/ccBMJpt6.s:7140   .debug_str:000000000000087f .LASF29
     /tmp/ccBMJpt6.s:7104   .debug_str:0000000000000734 .LASF31
     /tmp/ccBMJpt6.s:7060   .debug_str:0000000000000600 .LASF33
     /tmp/ccBMJpt6.s:7302   .debug_str:0000000000000ddc .LASF34
     /tmp/ccBMJpt6.s:7244   .debug_str:0000000000000c43 .LASF35
     /tmp/ccBMJpt6.s:7100   .debug_str:0000000000000727 .LASF36
     /tmp/ccBMJpt6.s:7108   .debug_str:0000000000000740 .LASF37
     /tmp/ccBMJpt6.s:7074   .debug_str:000000000000064f .LASF38
     /tmp/ccBMJpt6.s:7144   .debug_str:00000000000008ad .LASF39
     /tmp/ccBMJpt6.s:7332   .debug_str:0000000000000ec4 .LASF40
     /tmp/ccBMJpt6.s:7030   .debug_str:000000000000048b .LASF41
     /tmp/ccBMJpt6.s:7204   .debug_str:0000000000000a99 .LASF42
     /tmp/ccBMJpt6.s:7184   .debug_str:0000000000000a10 .LASF43
     /tmp/ccBMJpt6.s:7186   .debug_str:0000000000000a23 .LASF44
     /tmp/ccBMJpt6.s:6928   .debug_str:0000000000000136 .LASF45
     /tmp/ccBMJpt6.s:6958   .debug_str:000000000000022b .LASF46
     /tmp/ccBMJpt6.s:7018   .debug_str:0000000000000434 .LASF47
     /tmp/ccBMJpt6.s:7028   .debug_str:0000000000000485 .LASF48
     /tmp/ccBMJpt6.s:6950   .debug_str:00000000000001ee .LASF49
     /tmp/ccBMJpt6.s:6894   .debug_str:000000000000005e .LASF50
     /tmp/ccBMJpt6.s:7174   .debug_str:0000000000000999 .LASF51
     /tmp/ccBMJpt6.s:7166   .debug_str:000000000000096a .LASF52
     /tmp/ccBMJpt6.s:7324   .debug_str:0000000000000e79 .LASF53
     /tmp/ccBMJpt6.s:7294   .debug_str:0000000000000d95 .LASF54
     /tmp/ccBMJpt6.s:7308   .debug_str:0000000000000df9 .LASF55
     /tmp/ccBMJpt6.s:7288   .debug_str:0000000000000d80 .LASF56
     /tmp/ccBMJpt6.s:7092   .debug_str:00000000000006db .LASF57
     /tmp/ccBMJpt6.s:7300   .debug_str:0000000000000dcd .LASF59
     /tmp/ccBMJpt6.s:6996   .debug_str:000000000000037e .LASF61
     /tmp/ccBMJpt6.s:7170   .debug_str:0000000000000983 .LASF62
     /tmp/ccBMJpt6.s:7326   .debug_str:0000000000000e91 .LASF63
     /tmp/ccBMJpt6.s:7124   .debug_str:00000000000007d2 .LASF64
     /tmp/ccBMJpt6.s:7052   .debug_str:000000000000058c .LASF66
     /tmp/ccBMJpt6.s:7164   .debug_str:0000000000000958 .LASF65
     /tmp/ccBMJpt6.s:6960   .debug_str:0000000000000231 .LASF67
     /tmp/ccBMJpt6.s:7298   .debug_str:0000000000000da9 .LASF69
     /tmp/ccBMJpt6.s:7284   .debug_str:0000000000000d5b .LASF103
     /tmp/ccBMJpt6.s:7066   .debug_str:0000000000000628 .LASF70
     /tmp/ccBMJpt6.s:6926   .debug_str:0000000000000131 .LASF71
     /tmp/ccBMJpt6.s:6902   .debug_str:000000000000008f .LASF72
     /tmp/ccBMJpt6.s:7036   .debug_str:00000000000004af .LASF105
     /tmp/ccBMJpt6.s:7202   .debug_str:0000000000000a94 .LASF73
GAS LISTING /tmp/ccBMJpt6.s 			page 63


     /tmp/ccBMJpt6.s:7102   .debug_str:000000000000072f .LASF74
     /tmp/ccBMJpt6.s:7328   .debug_str:0000000000000eaa .LASF75
     /tmp/ccBMJpt6.s:7176   .debug_str:00000000000009b1 .LASF78
     /tmp/ccBMJpt6.s:6976   .debug_str:00000000000002d5 .LASF76
     /tmp/ccBMJpt6.s:7172   .debug_str:000000000000098f .LASF77
     /tmp/ccBMJpt6.s:7154   .debug_str:00000000000008f6 .LASF79
     /tmp/ccBMJpt6.s:7116   .debug_str:000000000000078c .LASF80
     /tmp/ccBMJpt6.s:7304   .debug_str:0000000000000de4 .LASF81
     /tmp/ccBMJpt6.s:7094   .debug_str:00000000000006f1 .LASF82
     /tmp/ccBMJpt6.s:7216   .debug_str:0000000000000ada .LASF83
     /tmp/ccBMJpt6.s:6916   .debug_str:00000000000000d4 .LASF84
     /tmp/ccBMJpt6.s:7268   .debug_str:0000000000000cd7 .LASF85
     /tmp/ccBMJpt6.s:6964   .debug_str:0000000000000266 .LASF86
     /tmp/ccBMJpt6.s:7034   .debug_str:00000000000004a5 .LASF87
     /tmp/ccBMJpt6.s:7130   .debug_str:000000000000080b .LASF88
     /tmp/ccBMJpt6.s:7232   .debug_str:0000000000000b41 .LASF142
     /tmp/ccBMJpt6.s:7046   .debug_str:000000000000053c .LASF89
     /tmp/ccBMJpt6.s:7272   .debug_str:0000000000000ce6 .LASF90
     /tmp/ccBMJpt6.s:6900   .debug_str:0000000000000076 .LASF91
     /tmp/ccBMJpt6.s:6934   .debug_str:0000000000000182 .LASF92
     /tmp/ccBMJpt6.s:7248   .debug_str:0000000000000c61 .LASF93
     /tmp/ccBMJpt6.s:7152   .debug_str:00000000000008ee .LASF94
     /tmp/ccBMJpt6.s:6988   .debug_str:000000000000034e .LASF95
     /tmp/ccBMJpt6.s:7194   .debug_str:0000000000000a53 .LASF96
     /tmp/ccBMJpt6.s:7312   .debug_str:0000000000000e1f .LASF97
     /tmp/ccBMJpt6.s:7318   .debug_str:0000000000000e3e .LASF225
     /tmp/ccBMJpt6.s:7050   .debug_str:0000000000000570 .LASF226
     /tmp/ccBMJpt6.s:7054   .debug_str:00000000000005ae .LASF98
     /tmp/ccBMJpt6.s:6920   .debug_str:00000000000000fd .LASF99
     /tmp/ccBMJpt6.s:7178   .debug_str:00000000000009ce .LASF100
     /tmp/ccBMJpt6.s:7334   .debug_str:0000000000000ecc .LASF101
     /tmp/ccBMJpt6.s:7270   .debug_str:0000000000000ce1 .LASF104
     /tmp/ccBMJpt6.s:7064   .debug_str:0000000000000623 .LASF102
     /tmp/ccBMJpt6.s:7278   .debug_str:0000000000000d2c .LASF106
     /tmp/ccBMJpt6.s:7096   .debug_str:0000000000000715 .LASF107
     /tmp/ccBMJpt6.s:7120   .debug_str:00000000000007a8 .LASF108
     /tmp/ccBMJpt6.s:7142   .debug_str:0000000000000892 .LASF109
     /tmp/ccBMJpt6.s:7008   .debug_str:00000000000003f8 .LASF227
     /tmp/ccBMJpt6.s:7088   .debug_str:000000000000069e .LASF110
     /tmp/ccBMJpt6.s:6886   .debug_str:000000000000002b .LASF111
     /tmp/ccBMJpt6.s:6890   .debug_str:0000000000000047 .LASF112
     /tmp/ccBMJpt6.s:7048   .debug_str:0000000000000558 .LASF113
     /tmp/ccBMJpt6.s:7160   .debug_str:0000000000000946 .LASF114
     /tmp/ccBMJpt6.s:7322   .debug_str:0000000000000e58 .LASF115
     /tmp/ccBMJpt6.s:7080   .debug_str:0000000000000671 .LASF116
     /tmp/ccBMJpt6.s:7286   .debug_str:0000000000000d60 .LASF117
     /tmp/ccBMJpt6.s:7118   .debug_str:000000000000079c .LASF118
     /tmp/ccBMJpt6.s:7058   .debug_str:00000000000005de .LASF119
     /tmp/ccBMJpt6.s:7336   .debug_str:0000000000000eda .LASF120
     /tmp/ccBMJpt6.s:7158   .debug_str:0000000000000927 .LASF121
     /tmp/ccBMJpt6.s:7192   .debug_str:0000000000000a48 .LASF122
     /tmp/ccBMJpt6.s:6982   .debug_str:000000000000031d .LASF123
     /tmp/ccBMJpt6.s:7128   .debug_str:0000000000000802 .LASF124
     /tmp/ccBMJpt6.s:6930   .debug_str:0000000000000149 .LASF125
     /tmp/ccBMJpt6.s:6904   .debug_str:0000000000000094 .LASF126
     /tmp/ccBMJpt6.s:7314   .debug_str:0000000000000e31 .LASF127
     /tmp/ccBMJpt6.s:6918   .debug_str:00000000000000f7 .LASF128
GAS LISTING /tmp/ccBMJpt6.s 			page 64


     /tmp/ccBMJpt6.s:6910   .debug_str:00000000000000ad .LASF129
     /tmp/ccBMJpt6.s:7084   .debug_str:0000000000000682 .LASF130
     /tmp/ccBMJpt6.s:7220   .debug_str:0000000000000aee .LASF131
     /tmp/ccBMJpt6.s:7212   .debug_str:0000000000000aca .LASF132
     /tmp/ccBMJpt6.s:7062   .debug_str:0000000000000613 .LASF133
     /tmp/ccBMJpt6.s:7222   .debug_str:0000000000000af6 .LASF134
     /tmp/ccBMJpt6.s:7126   .debug_str:00000000000007e7 .LASF135
     /tmp/ccBMJpt6.s:6908   .debug_str:00000000000000a1 .LASF136
     /tmp/ccBMJpt6.s:7276   .debug_str:0000000000000d11 .LASF137
     /tmp/ccBMJpt6.s:7098   .debug_str:000000000000071a .LASF138
     /tmp/ccBMJpt6.s:6952   .debug_str:0000000000000200 .LASF139
     /tmp/ccBMJpt6.s:7206   .debug_str:0000000000000aa0 .LASF140
     /tmp/ccBMJpt6.s:7182   .debug_str:00000000000009ea .LASF141
     /tmp/ccBMJpt6.s:7112   .debug_str:0000000000000769 .LASF143
     /tmp/ccBMJpt6.s:7070   .debug_str:0000000000000640 .LASF144
     /tmp/ccBMJpt6.s:6882   .debug_str:0000000000000011 .LASF145
     /tmp/ccBMJpt6.s:7316   .debug_str:0000000000000e38 .LASF146
     /tmp/ccBMJpt6.s:7134   .debug_str:0000000000000850 .LASF147
     /tmp/ccBMJpt6.s:7082   .debug_str:0000000000000679 .LASF148
     /tmp/ccBMJpt6.s:7242   .debug_str:0000000000000c2b .LASF149
     /tmp/ccBMJpt6.s:7190   .debug_str:0000000000000a3b .LASF150
     /tmp/ccBMJpt6.s:6966   .debug_str:0000000000000288 .LASF151
     /tmp/ccBMJpt6.s:7228   .debug_str:0000000000000b1b .LASF152
     /tmp/ccBMJpt6.s:7114   .debug_str:000000000000076e .LASF153
     /tmp/ccBMJpt6.s:7234   .debug_str:0000000000000b49 .LASF228
     /tmp/ccBMJpt6.s:7032   .debug_str:000000000000049f .LASF154
     /tmp/ccBMJpt6.s:7042   .debug_str:00000000000004fc .LASF155
     /tmp/ccBMJpt6.s:6936   .debug_str:000000000000018b .LASF156
     /tmp/ccBMJpt6.s:7250   .debug_str:0000000000000c6a .LASF157
     /tmp/ccBMJpt6.s:7156   .debug_str:0000000000000917 .LASF158
     /tmp/ccBMJpt6.s:6914   .debug_str:00000000000000c4 .LASF159
     /tmp/ccBMJpt6.s:7310   .debug_str:0000000000000e0f .LASF160
     /tmp/ccBMJpt6.s:7210   .debug_str:0000000000000ab9 .LASF161
     /tmp/ccBMJpt6.s:7196   .debug_str:0000000000000a64 .LASF162
     /tmp/ccBMJpt6.s:6880   .debug_str:0000000000000000 .LASF163
     /tmp/ccBMJpt6.s:7004   .debug_str:00000000000003d5 .LASF164
     /tmp/ccBMJpt6.s:6888   .debug_str:0000000000000042 .LASF165
     /tmp/ccBMJpt6.s:7320   .debug_str:0000000000000e52 .LASF166
     /tmp/ccBMJpt6.s:7252   .debug_str:0000000000000c86 .LASF167
     /tmp/ccBMJpt6.s:7246   .debug_str:0000000000000c57 .LASF168
     /tmp/ccBMJpt6.s:7218   .debug_str:0000000000000ae5 .LASF169
     /tmp/ccBMJpt6.s:7296   .debug_str:0000000000000d9f .LASF170
     /tmp/ccBMJpt6.s:6912   .debug_str:00000000000000b6 .LASF171
     /tmp/ccBMJpt6.s:7148   .debug_str:00000000000008cc .LASF172
     /tmp/ccBMJpt6.s:6942   .debug_str:00000000000001b6 .LASF173
     /tmp/ccBMJpt6.s:7044   .debug_str:0000000000000510 .LASF174
     /tmp/ccBMJpt6.s:6954   .debug_str:000000000000021d .LASF175
     /tmp/ccBMJpt6.s:6946   .debug_str:00000000000001cb .LASF176
     /tmp/ccBMJpt6.s:7188   .debug_str:0000000000000a2a .LASF177
     /tmp/ccBMJpt6.s:7240   .debug_str:0000000000000c22 .LASF178
     /tmp/ccBMJpt6.s:7282   .debug_str:0000000000000d54 .LASF179
     /tmp/ccBMJpt6.s:7330   .debug_str:0000000000000ebb .LASF180
     /tmp/ccBMJpt6.s:6968   .debug_str:00000000000002a4 .LASF181
     /tmp/ccBMJpt6.s:6986   .debug_str:0000000000000343 .LASF182
     /tmp/ccBMJpt6.s:7000   .debug_str:00000000000003a8 .LASF183
     /tmp/ccBMJpt6.s:6956   .debug_str:0000000000000226 .LASF184
     /tmp/ccBMJpt6.s:7256   .debug_str:0000000000000ca3 .LASF185
GAS LISTING /tmp/ccBMJpt6.s 			page 65


     /tmp/ccBMJpt6.s:7214   .debug_str:0000000000000ad3 .LASF186
     /tmp/ccBMJpt6.s:7038   .debug_str:00000000000004d1 .LASF187
     /tmp/ccBMJpt6.s:7014   .debug_str:0000000000000427 .LASF188
     /tmp/ccBMJpt6.s:7002   .debug_str:00000000000003bc .LASF189
     /tmp/ccBMJpt6.s:7086   .debug_str:000000000000068a .LASF190
     /tmp/ccBMJpt6.s:7078   .debug_str:000000000000065d .LASF191
     /tmp/ccBMJpt6.s:7020   .debug_str:0000000000000446 .LASF192
     /tmp/ccBMJpt6.s:7224   .debug_str:0000000000000b01 .LASF193
     /tmp/ccBMJpt6.s:7012   .debug_str:000000000000041e .LASF194
     /tmp/ccBMJpt6.s:6932   .debug_str:0000000000000167 .LASF195
     /tmp/ccBMJpt6.s:7106   .debug_str:000000000000073b .LASF196
     /tmp/ccBMJpt6.s:7230   .debug_str:0000000000000b2a .LASF197
     /tmp/ccBMJpt6.s:6898   .debug_str:0000000000000070 .LASF198
     /tmp/ccBMJpt6.s:6978   .debug_str:00000000000002f6 .LASF199
     /tmp/ccBMJpt6.s:7132   .debug_str:0000000000000848 .LASF200
     /tmp/ccBMJpt6.s:6896   .debug_str:0000000000000069 .LASF201
     /tmp/ccBMJpt6.s:6992   .debug_str:0000000000000368 .LASF202
     /tmp/ccBMJpt6.s:7226   .debug_str:0000000000000b16 .LASF203
     /tmp/ccBMJpt6.s:6984   .debug_str:000000000000033e .LASF205
     /tmp/ccBMJpt6.s:7026   .debug_str:0000000000000480 .LASF204
     /tmp/ccBMJpt6.s:6974   .debug_str:00000000000002be .LASF214
     /tmp/ccBMJpt6.s:1705   .text:00000000000004ac .LFB56
     /tmp/ccBMJpt6.s:1797   .text:0000000000000518 .LFE56
     /tmp/ccBMJpt6.s:7200   .debug_str:0000000000000a8d .LASF206
     /tmp/ccBMJpt6.s:6171   .debug_loc:0000000000000000 .LLST80
     /tmp/ccBMJpt6.s:1717   .text:00000000000004bc .LBB406
     /tmp/ccBMJpt6.s:1733   .text:00000000000004c8 .LBE406
     /tmp/ccBMJpt6.s:1764   .text:0000000000000500 .LBB408
     /tmp/ccBMJpt6.s:1779   .text:000000000000050c .LBE408
     /tmp/ccBMJpt6.s:6186   .debug_loc:0000000000000049 .LLST81
     /tmp/ccBMJpt6.s:1781   .text:000000000000050c .LBB410
     /tmp/ccBMJpt6.s:1793   .text:0000000000000514 .LBE410
     /tmp/ccBMJpt6.s:6195   .debug_loc:000000000000006f .LLST82
     /tmp/ccBMJpt6.s:1762   .text:0000000000000500 .LVL129
     /tmp/ccBMJpt6.s:46     .text:0000000000000020 .LFB55
     /tmp/ccBMJpt6.s:1699   .text:00000000000004ac .LFE55
     /tmp/ccBMJpt6.s:6203   .debug_loc:0000000000000093 .LLST0
     /tmp/ccBMJpt6.s:6884   .debug_str:0000000000000025 .LASF207
     /tmp/ccBMJpt6.s:6214   .debug_loc:00000000000000c9 .LLST1
     /tmp/ccBMJpt6.s:7258   .debug_str:0000000000000cba .LASF208
     /tmp/ccBMJpt6.s:6265   .debug_loc:00000000000001bd .LLST2
     /tmp/ccBMJpt6.s:444    .text:0000000000000130 .LBB178
     /tmp/ccBMJpt6.s:589    .text:0000000000000198 .LBE178
     /tmp/ccBMJpt6.s:7292   .debug_str:0000000000000d90 .LASF209
     /tmp/ccBMJpt6.s:6276   .debug_loc:00000000000001f3 .LLST3
     /tmp/ccBMJpt6.s:7006   .debug_str:00000000000003f0 .LASF210
     /tmp/ccBMJpt6.s:6283   .debug_loc:0000000000000216 .LLST4
     /tmp/ccBMJpt6.s:6290   .debug_loc:0000000000000239 .LLST5
     /tmp/ccBMJpt6.s:7260   .debug_str:0000000000000cbf .LASF211
     /tmp/ccBMJpt6.s:6297   .debug_loc:000000000000025c .LLST6
     /tmp/ccBMJpt6.s:7262   .debug_str:0000000000000cc4 .LASF212
     /tmp/ccBMJpt6.s:6304   .debug_loc:000000000000027f .LLST7
     /tmp/ccBMJpt6.s:7264   .debug_str:0000000000000cc9 .LASF213
     /tmp/ccBMJpt6.s:6311   .debug_loc:00000000000002a2 .LLST8
     /tmp/ccBMJpt6.s:6318   .debug_loc:00000000000002c5 .LLST9
     /tmp/ccBMJpt6.s:6325   .debug_loc:00000000000002e8 .LLST10
     /tmp/ccBMJpt6.s:446    .text:0000000000000130 .LBB179
GAS LISTING /tmp/ccBMJpt6.s 			page 66


     /tmp/ccBMJpt6.s:461    .text:000000000000013c .LBE179
     /tmp/ccBMJpt6.s:466    .text:0000000000000140 .LBB181
     /tmp/ccBMJpt6.s:482    .text:000000000000014c .LBE181
     /tmp/ccBMJpt6.s:556    .text:0000000000000184 .LBB183
     /tmp/ccBMJpt6.s:567    .text:0000000000000188 .LBE183
     /tmp/ccBMJpt6.s:6332   .debug_loc:000000000000030b .LLST11
     /tmp/ccBMJpt6.s:569    .text:0000000000000188 .LBB185
     /tmp/ccBMJpt6.s:583    .text:0000000000000190 .LBE185
     /tmp/ccBMJpt6.s:6339   .debug_loc:000000000000032e .LLST12
     /tmp/ccBMJpt6.s:536    .text:0000000000000174 .LVL23
     /tmp/ccBMJpt6.s:592    .text:0000000000000198 .LBB371
     /tmp/ccBMJpt6.s:683    .text:00000000000001d4 .LBE371
     /tmp/ccBMJpt6.s:6346   .debug_loc:0000000000000351 .LLST75
     /tmp/ccBMJpt6.s:6353   .debug_loc:0000000000000374 .LLST76
     /tmp/ccBMJpt6.s:6360   .debug_loc:0000000000000397 .LLST77
     /tmp/ccBMJpt6.s:594    .text:0000000000000198 .LBB372
     /tmp/ccBMJpt6.s:610    .text:00000000000001a4 .LBE372
     /tmp/ccBMJpt6.s:615    .text:00000000000001a8 .LBB374
     /tmp/ccBMJpt6.s:631    .text:00000000000001b4 .LBE374
     /tmp/ccBMJpt6.s:655    .text:00000000000001c8 .LBB376
     /tmp/ccBMJpt6.s:666    .text:00000000000001cc .LBE376
     /tmp/ccBMJpt6.s:6367   .debug_loc:00000000000003ba .LLST78
     /tmp/ccBMJpt6.s:668    .text:00000000000001cc .LBB378
     /tmp/ccBMJpt6.s:682    .text:00000000000001d4 .LBE378
     /tmp/ccBMJpt6.s:6374   .debug_loc:00000000000003dd .LLST79
     /tmp/ccBMJpt6.s:645    .text:00000000000001c4 .LVL34
     /tmp/ccBMJpt6.s:685    .text:00000000000001d4 .LBB352
     /tmp/ccBMJpt6.s:774    .text:000000000000020c .LBE352
     /tmp/ccBMJpt6.s:6381   .debug_loc:0000000000000400 .LLST70
     /tmp/ccBMJpt6.s:6388   .debug_loc:0000000000000423 .LLST71
     /tmp/ccBMJpt6.s:6395   .debug_loc:0000000000000446 .LLST72
     /tmp/ccBMJpt6.s:687    .text:00000000000001d4 .LBB353
     /tmp/ccBMJpt6.s:703    .text:00000000000001e0 .LBE353
     /tmp/ccBMJpt6.s:708    .text:00000000000001e4 .LBB355
     /tmp/ccBMJpt6.s:724    .text:00000000000001f0 .LBE355
     /tmp/ccBMJpt6.s:746    .text:0000000000000200 .LBB357
     /tmp/ccBMJpt6.s:757    .text:0000000000000204 .LBE357
     /tmp/ccBMJpt6.s:6402   .debug_loc:0000000000000469 .LLST73
     /tmp/ccBMJpt6.s:759    .text:0000000000000204 .LBB359
     /tmp/ccBMJpt6.s:773    .text:000000000000020c .LBE359
     /tmp/ccBMJpt6.s:6409   .debug_loc:000000000000048c .LLST74
     /tmp/ccBMJpt6.s:736    .text:00000000000001fc .LVL42
     /tmp/ccBMJpt6.s:776    .text:000000000000020c .LBB334
     /tmp/ccBMJpt6.s:856    .text:0000000000000250 .LBE334
     /tmp/ccBMJpt6.s:6416   .debug_loc:00000000000004af .LLST66
     /tmp/ccBMJpt6.s:6423   .debug_loc:00000000000004d2 .LLST67
     /tmp/ccBMJpt6.s:778    .text:000000000000020c .LBB335
     /tmp/ccBMJpt6.s:794    .text:0000000000000218 .LBE335
     /tmp/ccBMJpt6.s:799    .text:000000000000021c .LBB337
     /tmp/ccBMJpt6.s:815    .text:0000000000000228 .LBE337
     /tmp/ccBMJpt6.s:828    .text:0000000000000244 .LBB339
     /tmp/ccBMJpt6.s:839    .text:0000000000000248 .LBE339
     /tmp/ccBMJpt6.s:6430   .debug_loc:00000000000004f5 .LLST68
     /tmp/ccBMJpt6.s:841    .text:0000000000000248 .LBB341
     /tmp/ccBMJpt6.s:855    .text:0000000000000250 .LBE341
     /tmp/ccBMJpt6.s:6437   .debug_loc:0000000000000518 .LLST69
     /tmp/ccBMJpt6.s:826    .text:0000000000000244 .LVL49
GAS LISTING /tmp/ccBMJpt6.s 			page 67


     /tmp/ccBMJpt6.s:858    .text:0000000000000250 .LBB317
     /tmp/ccBMJpt6.s:931    .text:0000000000000280 .LBE317
     /tmp/ccBMJpt6.s:6444   .debug_loc:000000000000053b .LLST62
     /tmp/ccBMJpt6.s:6451   .debug_loc:000000000000055e .LLST63
     /tmp/ccBMJpt6.s:860    .text:0000000000000250 .LBB318
     /tmp/ccBMJpt6.s:876    .text:000000000000025c .LBE318
     /tmp/ccBMJpt6.s:881    .text:0000000000000260 .LBB320
     /tmp/ccBMJpt6.s:897    .text:000000000000026c .LBE320
     /tmp/ccBMJpt6.s:903    .text:0000000000000274 .LBB322
     /tmp/ccBMJpt6.s:914    .text:0000000000000278 .LBE322
     /tmp/ccBMJpt6.s:6458   .debug_loc:0000000000000581 .LLST64
     /tmp/ccBMJpt6.s:916    .text:0000000000000278 .LBB324
     /tmp/ccBMJpt6.s:930    .text:0000000000000280 .LBE324
     /tmp/ccBMJpt6.s:6465   .debug_loc:00000000000005a4 .LLST65
     /tmp/ccBMJpt6.s:901    .text:0000000000000274 .LVL55
     /tmp/ccBMJpt6.s:933    .text:0000000000000280 .LBB301
     /tmp/ccBMJpt6.s:1010   .text:00000000000002bc .LBE301
     /tmp/ccBMJpt6.s:6472   .debug_loc:00000000000005c7 .LLST58
     /tmp/ccBMJpt6.s:6479   .debug_loc:00000000000005ea .LLST59
     /tmp/ccBMJpt6.s:935    .text:0000000000000280 .LBB302
     /tmp/ccBMJpt6.s:951    .text:000000000000028c .LBE302
     /tmp/ccBMJpt6.s:956    .text:0000000000000290 .LBB304
     /tmp/ccBMJpt6.s:972    .text:000000000000029c .LBE304
     /tmp/ccBMJpt6.s:982    .text:00000000000002b0 .LBB306
     /tmp/ccBMJpt6.s:993    .text:00000000000002b4 .LBE306
     /tmp/ccBMJpt6.s:6486   .debug_loc:000000000000060d .LLST60
     /tmp/ccBMJpt6.s:995    .text:00000000000002b4 .LBB308
     /tmp/ccBMJpt6.s:1009   .text:00000000000002bc .LBE308
     /tmp/ccBMJpt6.s:6493   .debug_loc:0000000000000630 .LLST61
     /tmp/ccBMJpt6.s:980    .text:00000000000002b0 .LVL61
     /tmp/ccBMJpt6.s:1012   .text:00000000000002bc .LBB280
     /tmp/ccBMJpt6.s:1163   .text:000000000000032c .LBE280
     /tmp/ccBMJpt6.s:6500   .debug_loc:0000000000000653 .LLST46
     /tmp/ccBMJpt6.s:6507   .debug_loc:0000000000000676 .LLST47
     /tmp/ccBMJpt6.s:6514   .debug_loc:0000000000000699 .LLST48
     /tmp/ccBMJpt6.s:6521   .debug_loc:00000000000006bc .LLST49
     /tmp/ccBMJpt6.s:6528   .debug_loc:00000000000006df .LLST50
     /tmp/ccBMJpt6.s:6535   .debug_loc:0000000000000702 .LLST51
     /tmp/ccBMJpt6.s:1014   .text:00000000000002bc .LBB281
     /tmp/ccBMJpt6.s:1030   .text:00000000000002c8 .LBE281
     /tmp/ccBMJpt6.s:1035   .text:00000000000002cc .LBB283
     /tmp/ccBMJpt6.s:1051   .text:00000000000002d8 .LBE283
     /tmp/ccBMJpt6.s:1083   .text:00000000000002f4 .LBB285
     /tmp/ccBMJpt6.s:1099   .text:0000000000000300 .LBE285
     /tmp/ccBMJpt6.s:6552   .debug_loc:000000000000074d .LLST52
     /tmp/ccBMJpt6.s:6559   .debug_loc:0000000000000770 .LLST53
     /tmp/ccBMJpt6.s:1089   .text:00000000000002f8 .LBB287
     /tmp/ccBMJpt6.s:1097   .text:0000000000000300 .LBE287
     /tmp/ccBMJpt6.s:6566   .debug_loc:0000000000000793 .LLST54
     /tmp/ccBMJpt6.s:1101   .text:0000000000000300 .LBB289
     /tmp/ccBMJpt6.s:1109   .text:0000000000000308 .LBE289
     /tmp/ccBMJpt6.s:6575   .debug_loc:00000000000007b8 .LLST55
     /tmp/ccBMJpt6.s:1130   .text:0000000000000318 .LBB291
     /tmp/ccBMJpt6.s:1141   .text:000000000000031c .LBE291
     /tmp/ccBMJpt6.s:6582   .debug_loc:00000000000007db .LLST56
     /tmp/ccBMJpt6.s:1143   .text:000000000000031c .LBB293
     /tmp/ccBMJpt6.s:1157   .text:0000000000000324 .LBE293
GAS LISTING /tmp/ccBMJpt6.s 			page 68


     /tmp/ccBMJpt6.s:6589   .debug_loc:00000000000007fe .LLST57
     /tmp/ccBMJpt6.s:1082   .text:00000000000002f4 .LVL69
     /tmp/ccBMJpt6.s:1165   .text:000000000000032c .LBB254
     /tmp/ccBMJpt6.s:1338   .text:00000000000003c4 .LBE254
     /tmp/ccBMJpt6.s:6596   .debug_loc:0000000000000821 .LLST33
     /tmp/ccBMJpt6.s:6603   .debug_loc:0000000000000844 .LLST34
     /tmp/ccBMJpt6.s:6610   .debug_loc:0000000000000867 .LLST35
     /tmp/ccBMJpt6.s:6864   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBMJpt6.s:6617   .debug_loc:000000000000088a .LLST37
     /tmp/ccBMJpt6.s:1223   .text:0000000000000354 .LBB260
     /tmp/ccBMJpt6.s:6624   .debug_loc:00000000000008ad .LLST38
     /tmp/ccBMJpt6.s:6639   .debug_loc:00000000000008e7 .LLST39
     /tmp/ccBMJpt6.s:6650   .debug_loc:000000000000091d .LLST40
     /tmp/ccBMJpt6.s:1233   .text:0000000000000364 .LVL84
     /tmp/ccBMJpt6.s:1237   .text:0000000000000364 .LBB263
     /tmp/ccBMJpt6.s:1246   .text:000000000000036c .LBE263
     /tmp/ccBMJpt6.s:6657   .debug_loc:0000000000000940 .LLST41
     /tmp/ccBMJpt6.s:1257   .text:0000000000000384 .LVL86
     /tmp/ccBMJpt6.s:1167   .text:000000000000032c .LBB255
     /tmp/ccBMJpt6.s:1182   .text:0000000000000338 .LBE255
     /tmp/ccBMJpt6.s:1187   .text:000000000000033c .LBB257
     /tmp/ccBMJpt6.s:1203   .text:0000000000000348 .LBE257
     /tmp/ccBMJpt6.s:1262   .text:0000000000000384 .LBB266
     /tmp/ccBMJpt6.s:1272   .text:0000000000000390 .LBE266
     /tmp/ccBMJpt6.s:6664   .debug_loc:0000000000000963 .LLST42
     /tmp/ccBMJpt6.s:1293   .text:00000000000003a4 .LBB269
     /tmp/ccBMJpt6.s:1300   .text:00000000000003a8 .LBE269
     /tmp/ccBMJpt6.s:6673   .debug_loc:0000000000000988 .LLST43
     /tmp/ccBMJpt6.s:1310   .text:00000000000003b8 .LBB271
     /tmp/ccBMJpt6.s:1321   .text:00000000000003bc .LBE271
     /tmp/ccBMJpt6.s:6680   .debug_loc:00000000000009ab .LLST44
     /tmp/ccBMJpt6.s:1323   .text:00000000000003bc .LBB273
     /tmp/ccBMJpt6.s:1337   .text:00000000000003c4 .LBE273
     /tmp/ccBMJpt6.s:6687   .debug_loc:00000000000009ce .LLST45
     /tmp/ccBMJpt6.s:1307   .text:00000000000003b8 .LVL91
     /tmp/ccBMJpt6.s:1340   .text:00000000000003c4 .LBB239
     /tmp/ccBMJpt6.s:1454   .text:0000000000000410 .LBE239
     /tmp/ccBMJpt6.s:6694   .debug_loc:00000000000009f1 .LLST26
     /tmp/ccBMJpt6.s:6701   .debug_loc:0000000000000a14 .LLST27
     /tmp/ccBMJpt6.s:6708   .debug_loc:0000000000000a37 .LLST28
     /tmp/ccBMJpt6.s:6719   .debug_loc:0000000000000a6d .LLST29
     /tmp/ccBMJpt6.s:1342   .text:00000000000003c4 .LBB240
     /tmp/ccBMJpt6.s:1358   .text:00000000000003d0 .LBE240
     /tmp/ccBMJpt6.s:1363   .text:00000000000003d4 .LBB242
     /tmp/ccBMJpt6.s:1379   .text:00000000000003e0 .LBE242
     /tmp/ccBMJpt6.s:1396   .text:00000000000003e8 .LBB244
     /tmp/ccBMJpt6.s:1403   .text:00000000000003ec .LBE244
     /tmp/ccBMJpt6.s:6730   .debug_loc:0000000000000aa3 .LLST30
     /tmp/ccBMJpt6.s:1419   .text:00000000000003f8 .LBB246
     /tmp/ccBMJpt6.s:1430   .text:00000000000003fc .LBE246
     /tmp/ccBMJpt6.s:6737   .debug_loc:0000000000000ac6 .LLST31
     /tmp/ccBMJpt6.s:1432   .text:00000000000003fc .LBB248
     /tmp/ccBMJpt6.s:1446   .text:0000000000000404 .LBE248
     /tmp/ccBMJpt6.s:6744   .debug_loc:0000000000000ae9 .LLST32
     /tmp/ccBMJpt6.s:1450   .text:000000000000040c .LVL103
     /tmp/ccBMJpt6.s:1456   .text:0000000000000410 .LBB225
     /tmp/ccBMJpt6.s:1573   .text:0000000000000460 .LBE225
GAS LISTING /tmp/ccBMJpt6.s 			page 69


     /tmp/ccBMJpt6.s:6751   .debug_loc:0000000000000b0c .LLST19
     /tmp/ccBMJpt6.s:6758   .debug_loc:0000000000000b2f .LLST20
     /tmp/ccBMJpt6.s:6765   .debug_loc:0000000000000b52 .LLST21
     /tmp/ccBMJpt6.s:6776   .debug_loc:0000000000000b88 .LLST22
     /tmp/ccBMJpt6.s:1458   .text:0000000000000410 .LBB226
     /tmp/ccBMJpt6.s:1474   .text:000000000000041c .LBE226
     /tmp/ccBMJpt6.s:1479   .text:0000000000000420 .LBB228
     /tmp/ccBMJpt6.s:1495   .text:000000000000042c .LBE228
     /tmp/ccBMJpt6.s:1512   .text:0000000000000434 .LBB230
     /tmp/ccBMJpt6.s:1519   .text:0000000000000438 .LBE230
     /tmp/ccBMJpt6.s:6788   .debug_loc:0000000000000bbf .LLST23
     /tmp/ccBMJpt6.s:1535   .text:0000000000000444 .LBB232
     /tmp/ccBMJpt6.s:1546   .text:0000000000000448 .LBE232
     /tmp/ccBMJpt6.s:6795   .debug_loc:0000000000000be2 .LLST24
     /tmp/ccBMJpt6.s:1548   .text:0000000000000448 .LBB234
     /tmp/ccBMJpt6.s:1562   .text:0000000000000450 .LBE234
     /tmp/ccBMJpt6.s:6802   .debug_loc:0000000000000c05 .LLST25
     /tmp/ccBMJpt6.s:1566   .text:0000000000000458 .LVL114
     /tmp/ccBMJpt6.s:1575   .text:0000000000000460 .LBB211
     /tmp/ccBMJpt6.s:1686   .text:00000000000004ac .LBE211
     /tmp/ccBMJpt6.s:1577   .text:0000000000000460 .LBB212
     /tmp/ccBMJpt6.s:1593   .text:000000000000046c .LBE212
     /tmp/ccBMJpt6.s:1598   .text:0000000000000470 .LBB214
     /tmp/ccBMJpt6.s:1614   .text:000000000000047c .LBE214
     /tmp/ccBMJpt6.s:1619   .text:0000000000000484 .LBB216
     /tmp/ccBMJpt6.s:1630   .text:0000000000000488 .LBE216
     /tmp/ccBMJpt6.s:1639   .text:0000000000000498 .LBB218
     /tmp/ccBMJpt6.s:1650   .text:000000000000049c .LBE218
     /tmp/ccBMJpt6.s:1660   .text:00000000000004a0 .LBB220
     /tmp/ccBMJpt6.s:1671   .text:00000000000004a4 .LBE220
     /tmp/ccBMJpt6.s:6809   .debug_loc:0000000000000c28 .LLST18
     /tmp/ccBMJpt6.s:1673   .text:00000000000004a4 .LBB222
     /tmp/ccBMJpt6.s:1685   .text:00000000000004ac .LBE222
     /tmp/ccBMJpt6.s:1634   .text:0000000000000490 .LVL121
     /tmp/ccBMJpt6.s:308    .text:00000000000000dc .LBB198
     /tmp/ccBMJpt6.s:425    .text:000000000000012c .LBE198
     /tmp/ccBMJpt6.s:6816   .debug_loc:0000000000000c4b .LLST13
     /tmp/ccBMJpt6.s:6823   .debug_loc:0000000000000c6e .LLST14
     /tmp/ccBMJpt6.s:6830   .debug_loc:0000000000000c91 .LLST15
     /tmp/ccBMJpt6.s:310    .text:00000000000000dc .LBB199
     /tmp/ccBMJpt6.s:326    .text:00000000000000e8 .LBE199
     /tmp/ccBMJpt6.s:331    .text:00000000000000ec .LBB201
     /tmp/ccBMJpt6.s:347    .text:00000000000000f8 .LBE201
     /tmp/ccBMJpt6.s:367    .text:000000000000010c .LBB203
     /tmp/ccBMJpt6.s:378    .text:0000000000000110 .LBE203
     /tmp/ccBMJpt6.s:387    .text:0000000000000120 .LBB205
     /tmp/ccBMJpt6.s:398    .text:0000000000000124 .LBE205
     /tmp/ccBMJpt6.s:400    .text:0000000000000124 .LBB207
     /tmp/ccBMJpt6.s:411    .text:0000000000000128 .LBE207
     /tmp/ccBMJpt6.s:6837   .debug_loc:0000000000000cb4 .LLST16
     /tmp/ccBMJpt6.s:413    .text:0000000000000128 .LBB209
     /tmp/ccBMJpt6.s:424    .text:000000000000012c .LBE209
     /tmp/ccBMJpt6.s:6844   .debug_loc:0000000000000cd7 .LLST17
     /tmp/ccBMJpt6.s:382    .text:0000000000000118 .LVL11
     /tmp/ccBMJpt6.s:66     .text:0000000000000040 .LBB174
     /tmp/ccBMJpt6.s:82     .text:000000000000004c .LBE174
     /tmp/ccBMJpt6.s:10     .text:0000000000000000 .LFB54
GAS LISTING /tmp/ccBMJpt6.s 			page 70


     /tmp/ccBMJpt6.s:40     .text:0000000000000020 .LFE54
     /tmp/ccBMJpt6.s:6906   .debug_str:000000000000009c .LASF216
     /tmp/ccBMJpt6.s:7136   .debug_str:0000000000000864 .LASF215
     /tmp/ccBMJpt6.s:7280   .debug_str:0000000000000d4f .LASF217
     /tmp/ccBMJpt6.s:7076   .debug_str:0000000000000657 .LASF218
     /tmp/ccBMJpt6.s:6994   .debug_str:000000000000036e .LASF219
     /tmp/ccBMJpt6.s:7016   .debug_str:000000000000042d .LASF220
     /tmp/ccBMJpt6.s:6944   .debug_str:00000000000001c4 .LASF221
     /tmp/ccBMJpt6.s:1731   .text:00000000000004c8 .LVL126
     /tmp/ccBMJpt6.s:1744   .text:00000000000004e8 .LVL127
     /tmp/ccBMJpt6.s:1756   .text:00000000000004f8 .LVL128
     /tmp/ccBMJpt6.s:1776   .text:000000000000050c .LVL130
     /tmp/ccBMJpt6.s:1790   .text:0000000000000514 .LVL131
     /tmp/ccBMJpt6.s:85     .text:0000000000000050 .LVL0
     /tmp/ccBMJpt6.s:100    .text:000000000000005c .LVL2
     /tmp/ccBMJpt6.s:121    .text:000000000000007c .LVL3
     /tmp/ccBMJpt6.s:128    .text:0000000000000080 .LVL4
     /tmp/ccBMJpt6.s:94     .text:0000000000000054 .LVL1
     /tmp/ccBMJpt6.s:324    .text:00000000000000e8 .LVL5
     /tmp/ccBMJpt6.s:440    .text:0000000000000130 .LVL16
     /tmp/ccBMJpt6.s:608    .text:00000000000001a4 .LVL29
     /tmp/ccBMJpt6.s:679    .text:00000000000001d4 .LVL37
     /tmp/ccBMJpt6.s:701    .text:00000000000001e0 .LVL38
     /tmp/ccBMJpt6.s:770    .text:000000000000020c .LVL45
     /tmp/ccBMJpt6.s:792    .text:0000000000000218 .LVL46
     /tmp/ccBMJpt6.s:852    .text:0000000000000250 .LVL51
     /tmp/ccBMJpt6.s:874    .text:000000000000025c .LVL52
     /tmp/ccBMJpt6.s:927    .text:0000000000000280 .LVL57
     /tmp/ccBMJpt6.s:949    .text:000000000000028c .LVL58
     /tmp/ccBMJpt6.s:1006   .text:00000000000002bc .LVL63
     /tmp/ccBMJpt6.s:1028   .text:00000000000002c8 .LVL64
     /tmp/ccBMJpt6.s:1161   .text:000000000000032c .LVL78
     /tmp/ccBMJpt6.s:1216   .text:0000000000000350 .LVL81
     /tmp/ccBMJpt6.s:1334   .text:00000000000003c4 .LVL93
     /tmp/ccBMJpt6.s:1356   .text:00000000000003d0 .LVL94
     /tmp/ccBMJpt6.s:1452   .text:0000000000000410 .LVL104
     /tmp/ccBMJpt6.s:1472   .text:000000000000041c .LVL105
     /tmp/ccBMJpt6.s:1571   .text:0000000000000460 .LVL115
     /tmp/ccBMJpt6.s:1591   .text:000000000000046c .LVL116
     /tmp/ccBMJpt6.s:638    .text:00000000000001b8 .LVL32
     /tmp/ccBMJpt6.s:643    .text:00000000000001bc .LVL33
     /tmp/ccBMJpt6.s:731    .text:00000000000001f4 .LVL41
     /tmp/ccBMJpt6.s:464    .text:0000000000000140 .LVL17
     /tmp/ccBMJpt6.s:587    .text:0000000000000198 .LVL28
     /tmp/ccBMJpt6.s:480    .text:000000000000014c .LVL18
     /tmp/ccBMJpt6.s:513    .text:0000000000000160 .LVL19
     /tmp/ccBMJpt6.s:519    .text:0000000000000164 .LVL20
     /tmp/ccBMJpt6.s:525    .text:0000000000000168 .LVL21
     /tmp/ccBMJpt6.s:531    .text:000000000000016c .LVL22
     /tmp/ccBMJpt6.s:546    .text:0000000000000180 .LVL24
     /tmp/ccBMJpt6.s:580    .text:0000000000000190 .LVL27
     /tmp/ccBMJpt6.s:554    .text:0000000000000184 .LVL25
     /tmp/ccBMJpt6.s:564    .text:0000000000000188 .LVL26
     /tmp/ccBMJpt6.s:613    .text:00000000000001a8 .LVL30
     /tmp/ccBMJpt6.s:629    .text:00000000000001b4 .LVL31
     /tmp/ccBMJpt6.s:653    .text:00000000000001c8 .LVL35
     /tmp/ccBMJpt6.s:663    .text:00000000000001cc .LVL36
GAS LISTING /tmp/ccBMJpt6.s 			page 71


     /tmp/ccBMJpt6.s:706    .text:00000000000001e4 .LVL39
     /tmp/ccBMJpt6.s:722    .text:00000000000001f0 .LVL40
     /tmp/ccBMJpt6.s:744    .text:0000000000000200 .LVL43
     /tmp/ccBMJpt6.s:754    .text:0000000000000204 .LVL44
     /tmp/ccBMJpt6.s:797    .text:000000000000021c .LVL47
     /tmp/ccBMJpt6.s:813    .text:0000000000000228 .LVL48
     /tmp/ccBMJpt6.s:836    .text:0000000000000248 .LVL50
     /tmp/ccBMJpt6.s:879    .text:0000000000000260 .LVL53
     /tmp/ccBMJpt6.s:895    .text:000000000000026c .LVL54
     /tmp/ccBMJpt6.s:911    .text:0000000000000278 .LVL56
     /tmp/ccBMJpt6.s:954    .text:0000000000000290 .LVL59
     /tmp/ccBMJpt6.s:970    .text:000000000000029c .LVL60
     /tmp/ccBMJpt6.s:990    .text:00000000000002b4 .LVL62
     /tmp/ccBMJpt6.s:1033   .text:00000000000002cc .LVL65
     /tmp/ccBMJpt6.s:1049   .text:00000000000002d8 .LVL66
     /tmp/ccBMJpt6.s:1070   .text:00000000000002e4 .LVL67
     /tmp/ccBMJpt6.s:1076   .text:00000000000002e8 .LVL68
     /tmp/ccBMJpt6.s:1095   .text:0000000000000300 .LVL71
     /tmp/ccBMJpt6.s:1114   .text:000000000000030c .LVL73
     /tmp/ccBMJpt6.s:1120   .text:0000000000000314 .LVL74
     /tmp/ccBMJpt6.s:1154   .text:0000000000000324 .LVL77
     /tmp/ccBMJpt6.s:1088   .text:00000000000002f8 .LVL70
     /tmp/ccBMJpt6.s:1107   .text:0000000000000308 .LVL72
     /tmp/ccBMJpt6.s:1128   .text:0000000000000318 .LVL75
     /tmp/ccBMJpt6.s:1138   .text:000000000000031c .LVL76
     /tmp/ccBMJpt6.s:1185   .text:000000000000033c .LVL79
     /tmp/ccBMJpt6.s:1201   .text:0000000000000348 .LVL80
     /tmp/ccBMJpt6.s:1220   .text:0000000000000354 .LVL82
     /tmp/ccBMJpt6.s:1277   .text:0000000000000394 .LVL88
     /tmp/ccBMJpt6.s:1287   .text:00000000000003a4 .LVL89
     /tmp/ccBMJpt6.s:1230   .text:000000000000035c .LVL83
     /tmp/ccBMJpt6.s:1244   .text:000000000000036c .LVL85
     /tmp/ccBMJpt6.s:1270   .text:0000000000000390 .LVL87
     /tmp/ccBMJpt6.s:1298   .text:00000000000003a8 .LVL90
     /tmp/ccBMJpt6.s:1318   .text:00000000000003bc .LVL92
     /tmp/ccBMJpt6.s:1361   .text:00000000000003d4 .LVL95
     /tmp/ccBMJpt6.s:1377   .text:00000000000003e0 .LVL96
     /tmp/ccBMJpt6.s:1392   .text:00000000000003e8 .LVL97
     /tmp/ccBMJpt6.s:1408   .text:00000000000003f4 .LVL99
     /tmp/ccBMJpt6.s:1443   .text:0000000000000404 .LVL102
     /tmp/ccBMJpt6.s:1401   .text:00000000000003ec .LVL98
     /tmp/ccBMJpt6.s:1417   .text:00000000000003f8 .LVL100
     /tmp/ccBMJpt6.s:1427   .text:00000000000003fc .LVL101
     /tmp/ccBMJpt6.s:1477   .text:0000000000000420 .LVL106
     /tmp/ccBMJpt6.s:1493   .text:000000000000042c .LVL107
     /tmp/ccBMJpt6.s:1508   .text:0000000000000434 .LVL108
     /tmp/ccBMJpt6.s:1524   .text:0000000000000440 .LVL110
     /tmp/ccBMJpt6.s:1559   .text:0000000000000450 .LVL113
     /tmp/ccBMJpt6.s:1517   .text:0000000000000438 .LVL109
     /tmp/ccBMJpt6.s:1533   .text:0000000000000444 .LVL111
     /tmp/ccBMJpt6.s:1543   .text:0000000000000448 .LVL112
     /tmp/ccBMJpt6.s:1658   .text:00000000000004a0 .LVL124
     /tmp/ccBMJpt6.s:1668   .text:00000000000004a4 .LVL125
     /tmp/ccBMJpt6.s:329    .text:00000000000000ec .LVL6
     /tmp/ccBMJpt6.s:345    .text:00000000000000f8 .LVL7
     /tmp/ccBMJpt6.s:362    .text:0000000000000104 .LVL8
     /tmp/ccBMJpt6.s:395    .text:0000000000000124 .LVL13
GAS LISTING /tmp/ccBMJpt6.s 			page 72


     /tmp/ccBMJpt6.s:408    .text:0000000000000128 .LVL14
     /tmp/ccBMJpt6.s:421    .text:000000000000012c .LVL15
     /tmp/ccBMJpt6.s:1806   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBMJpt6.s:1222   .text:0000000000000354 .LBB259
     /tmp/ccBMJpt6.s:1259   .text:0000000000000384 .LBE259
     /tmp/ccBMJpt6.s:1275   .text:0000000000000394 .LBB268
     /tmp/ccBMJpt6.s:1291   .text:00000000000003a4 .LBE268
     /tmp/ccBMJpt6.s:1235   .text:0000000000000364 .LBE260
     /tmp/ccBMJpt6.s:1278   .text:0000000000000394 .LBB265
     /tmp/ccBMJpt6.s:1290   .text:00000000000003a4 .LBE265

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
console_handler
