GAS LISTING /tmp/cczCzBS7.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv14syscallHandlerEv
   9              	_ZN5Riscv14syscallHandlerEv:
  10              	.LFB42:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** 
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** void Riscv::syscallHandler() {
  12              		.loc 1 10 30
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  11:src/Riscv.cpp ****     //read syscall code from register a0
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp ****     uint64 arg0;
  22              		.loc 1 13 5
  14:src/Riscv.cpp ****     uint64 arg1;
  23              		.loc 1 14 5
  15:src/Riscv.cpp ****     uint64 arg2;
  24              		.loc 1 15 5
  16:src/Riscv.cpp ****     uint64 arg3;
  25              		.loc 1 16 5
  17:src/Riscv.cpp **** //    uint64 arg4;
  18:src/Riscv.cpp **** //    uint64 arg5;
  19:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (arg0));    //read system call code
  26              		.loc 1 19 5
  27              		.loc 1 19 48 is_stmt 0
  28              	#APP
  29              	# 19 "src/Riscv.cpp" 1
  20              	    if(arg0== 0x01 ){
  30              		mv a5, a0
  31              	# 0 "" 2
  32              	.LVL0:
  33              		.loc 1 20 5 is_stmt 1
  34              	#NO_APP
  35              	.LBB24:
  36 0014 13071000 		li	a4,1
  37 0018 638AE702 		beq	a5,a4,.L8
  38              	.LBE24:
GAS LISTING /tmp/cczCzBS7.s 			page 2


  21:src/Riscv.cpp ****         //kmem_alloc
  22:src/Riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1 loc
  23:src/Riscv.cpp ****         uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1);
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp ****         //write return value to a0 register
  26:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ptr));
  27:src/Riscv.cpp ****     }
  28:src/Riscv.cpp ****     else if(arg0==0x02){
  39              		.loc 1 28 10
  40              	.LBB33:
  41              	.LBB25:
  42 001c 13072000 		li	a4,2
  43 0020 6380E704 		beq	a5,a4,.L9
  44              	.LBE25:
  45              	.LBE33:
  29:src/Riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move it 
  30:src/Riscv.cpp ****         int ret = MemoryAllocator::kmem_free((void *) arg1);
  31:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ret));
  32:src/Riscv.cpp ****     }
  33:src/Riscv.cpp ****     else if(arg0==0x11){
  46              		.loc 1 33 10
  47              	.LBB34:
  48              	.LBB30:
  49              	.LBB26:
  50 0024 13071001 		li	a4,17
  51 0028 6386E704 		beq	a5,a4,.L10
  34:src/Riscv.cpp ****         __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  35:src/Riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  36:src/Riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  37:src/Riscv.cpp **** 
  38:src/Riscv.cpp ****         //make new thread object using overloaded new operator for that function
  39:src/Riscv.cpp ****         _thread* t = _thread::createThread((void (*)(void*))arg2,  (void*)arg3);    //t je thread_t
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp ****         //how to set handle?
  43:src/Riscv.cpp ****         //return _thread* adress through a0
  44:src/Riscv.cpp ****         uint64 ret = (uint64)t;
  45:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ret));
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****     }
  48:src/Riscv.cpp ****     else if(arg0==0x12){
  52              		.loc 1 48 10
  53 002c 13072001 		li	a4,18
  54 0030 6380E706 		beq	a5,a4,.L11
  49:src/Riscv.cpp ****         _thread::running->finished=true;
  50:src/Riscv.cpp ****         _thread::dispatch();
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****     }
  54:src/Riscv.cpp ****     else if(arg0 == 0x13){
  55              		.loc 1 54 10
  56 0034 13073001 		li	a4,19
  57 0038 638CE706 		beq	a5,a4,.L12
  58              	.LVL1:
  59              	.L1:
  60              	.LBE26:
  61              	.LBE30:
GAS LISTING /tmp/cczCzBS7.s 			page 3


  62              	.LBE34:
  55:src/Riscv.cpp ****         _thread::dispatch();
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp ****     }
  58:src/Riscv.cpp **** 
  59:src/Riscv.cpp **** }
  63              		.loc 1 59 1 is_stmt 0
  64 003c 83308100 		ld	ra,8(sp)
  65              		.cfi_remember_state
  66              		.cfi_restore 1
  67 0040 03340100 		ld	s0,0(sp)
  68              		.cfi_restore 8
  69              		.cfi_def_cfa 2, 16
  70 0044 13010101 		addi	sp,sp,16
  71              		.cfi_def_cfa_offset 0
  72 0048 67800000 		jr	ra
  73              	.LVL2:
  74              	.L8:
  75              		.cfi_restore_state
  76              	.LBB35:
  77              	.LBB31:
  22:src/Riscv.cpp ****         uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1);
  78              		.loc 1 22 9 is_stmt 1
  22:src/Riscv.cpp ****         uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1);
  79              		.loc 1 22 52 is_stmt 0
  80              	#APP
  81              	# 22 "src/Riscv.cpp" 1
  82              		mv a0, a1
  83              	# 0 "" 2
  84              	.LVL3:
  23:src/Riscv.cpp **** 
  85              		.loc 1 23 9 is_stmt 1
  23:src/Riscv.cpp **** 
  86              		.loc 1 23 57 is_stmt 0
  87              	#NO_APP
  88 0050 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  88      E7800000 
  89              	.LVL4:
  26:src/Riscv.cpp ****     }
  90              		.loc 1 26 9 is_stmt 1
  26:src/Riscv.cpp ****     }
  91              		.loc 1 26 52 is_stmt 0
  92              	#APP
  93              	# 26 "src/Riscv.cpp" 1
  94              		mv a0, a0
  95              	# 0 "" 2
  96              	#NO_APP
  97              	.LBE31:
  98 005c 6FF01FFE 		j	.L1
  99              	.LVL5:
 100              	.L9:
 101              	.LBB32:
 102              	.LBB28:
  29:src/Riscv.cpp ****         int ret = MemoryAllocator::kmem_free((void *) arg1);
 103              		.loc 1 29 9 is_stmt 1
  29:src/Riscv.cpp ****         int ret = MemoryAllocator::kmem_free((void *) arg1);
 104              		.loc 1 29 52 is_stmt 0
GAS LISTING /tmp/cczCzBS7.s 			page 4


 105              	#APP
 106              	# 29 "src/Riscv.cpp" 1
 107              		mv a0, a1
 108              	# 0 "" 2
 109              	.LVL6:
  30:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ret));
 110              		.loc 1 30 9 is_stmt 1
  30:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ret));
 111              		.loc 1 30 45 is_stmt 0
 112              	#NO_APP
 113 0064 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 113      E7800000 
 114              	.LVL7:
  31:src/Riscv.cpp ****     }
 115              		.loc 1 31 9 is_stmt 1
  31:src/Riscv.cpp ****     }
 116              		.loc 1 31 52 is_stmt 0
 117              	#APP
 118              	# 31 "src/Riscv.cpp" 1
 119              		mv a0, a0
 120              	# 0 "" 2
 121              	#NO_APP
 122              	.LBE28:
 123 0070 6FF0DFFC 		j	.L1
 124              	.LVL8:
 125              	.L10:
 126              	.LBB29:
 127              	.LBB27:
  34:src/Riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 128              		.loc 1 34 9 is_stmt 1
  34:src/Riscv.cpp ****         __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 129              		.loc 1 34 52 is_stmt 0
 130              	#APP
 131              	# 34 "src/Riscv.cpp" 1
 132              		mv a5, a1
 133              	# 0 "" 2
 134              	.LVL9:
  35:src/Riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 135              		.loc 1 35 9 is_stmt 1
  35:src/Riscv.cpp ****         __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 136              		.loc 1 35 52 is_stmt 0
 137              	# 35 "src/Riscv.cpp" 1
 138              		mv a0, a2
 139              	# 0 "" 2
 140              	.LVL10:
  36:src/Riscv.cpp **** 
 141              		.loc 1 36 9 is_stmt 1
  36:src/Riscv.cpp **** 
 142              		.loc 1 36 52 is_stmt 0
 143              	# 36 "src/Riscv.cpp" 1
 144              		mv a1, a3
 145              	# 0 "" 2
 146              	.LVL11:
  39:src/Riscv.cpp **** 
 147              		.loc 1 39 9 is_stmt 1
  39:src/Riscv.cpp **** 
 148              		.loc 1 39 43 is_stmt 0
GAS LISTING /tmp/cczCzBS7.s 			page 5


 149              	#NO_APP
 150 0080 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 150      E7800000 
 151              	.LVL12:
  44:src/Riscv.cpp ****         __asm__ volatile("mv a0, %0" : : "r" (ret));
 152              		.loc 1 44 9 is_stmt 1
  45:src/Riscv.cpp **** 
 153              		.loc 1 45 9
  45:src/Riscv.cpp **** 
 154              		.loc 1 45 52 is_stmt 0
 155              	#APP
 156              	# 45 "src/Riscv.cpp" 1
 157              		mv a0, a0
 158              	# 0 "" 2
 159              	#NO_APP
 160              	.LBE27:
 161 008c 6FF01FFB 		j	.L1
 162              	.LVL13:
 163              	.L11:
  49:src/Riscv.cpp ****         _thread::dispatch();
 164              		.loc 1 49 9 is_stmt 1
  49:src/Riscv.cpp ****         _thread::dispatch();
 165              		.loc 1 49 27 is_stmt 0
 166 0090 97070000 		la	a5,_ZN7_thread7runningE
 166      83B70700 
 167              	.LVL14:
 168 0098 83B70700 		ld	a5,0(a5)
  49:src/Riscv.cpp ****         _thread::dispatch();
 169              		.loc 1 49 35
 170 009c 13071000 		li	a4,1
 171 00a0 2384E702 		sb	a4,40(a5)
  50:src/Riscv.cpp **** 
 172              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp **** 
 173              		.loc 1 50 26 is_stmt 0
 174 00a4 97000000 		call	_ZN7_thread8dispatchEv@plt
 174      E7800000 
 175              	.LVL15:
 176 00ac 6FF01FF9 		j	.L1
 177              	.LVL16:
 178              	.L12:
  55:src/Riscv.cpp **** 
 179              		.loc 1 55 9 is_stmt 1
  55:src/Riscv.cpp **** 
 180              		.loc 1 55 26 is_stmt 0
 181 00b0 97000000 		call	_ZN7_thread8dispatchEv@plt
 181      E7800000 
 182              	.LVL17:
 183              	.LBE29:
 184              	.LBE32:
 185              	.LBE35:
 186              		.loc 1 59 1
 187 00b8 6FF05FF8 		j	.L1
 188              		.cfi_endproc
 189              	.LFE42:
 191              		.align	2
 192              		.globl	_ZN5Riscv10popSppSpieEv
GAS LISTING /tmp/cczCzBS7.s 			page 6


 194              	_ZN5Riscv10popSppSpieEv:
 195              	.LFB43:
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  62:src/Riscv.cpp **** {
 196              		.loc 1 62 1 is_stmt 1
 197              		.cfi_startproc
 198 00bc 130101FF 		addi	sp,sp,-16
 199              		.cfi_def_cfa_offset 16
 200 00c0 23348100 		sd	s0,8(sp)
 201              		.cfi_offset 8, -8
 202 00c4 13040101 		addi	s0,sp,16
 203              		.cfi_def_cfa 8, 0
  63:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 204              		.loc 1 63 5
 205              		.loc 1 63 39 is_stmt 0
 206              	#APP
 207              	# 63 "src/Riscv.cpp" 1
  64              	    __asm__ volatile ("sret");  //exit privileged regime
 208              		csrw sepc, ra
 209              	# 0 "" 2
 210              		.loc 1 64 5 is_stmt 1
 211              		.loc 1 64 30 is_stmt 0
 212              	# 64 "src/Riscv.cpp" 1
  65              	}
 213              		sret
 214              	# 0 "" 2
 215              		.loc 1 65 1
 216              	#NO_APP
 217 00d0 03348100 		ld	s0,8(sp)
 218              		.cfi_restore 8
 219              		.cfi_def_cfa 2, 16
 220 00d4 13010101 		addi	sp,sp,16
 221              		.cfi_def_cfa_offset 0
 222 00d8 67800000 		jr	ra
 223              		.cfi_endproc
 224              	.LFE43:
 226              		.align	2
 227              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 229              	_ZN5Riscv20handleSupervisorTrapEv:
 230              	.LFB44:
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
 231              		.loc 1 67 35 is_stmt 1
 232              		.cfi_startproc
 233 00dc 130101FB 		addi	sp,sp,-80
 234              		.cfi_def_cfa_offset 80
 235 00e0 23341104 		sd	ra,72(sp)
 236 00e4 23308104 		sd	s0,64(sp)
 237 00e8 233C9102 		sd	s1,56(sp)
 238 00ec 23382103 		sd	s2,48(sp)
 239              		.cfi_offset 1, -8
 240              		.cfi_offset 8, -16
 241              		.cfi_offset 9, -24
 242              		.cfi_offset 18, -32
 243 00f0 13040105 		addi	s0,sp,80
 244              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/cczCzBS7.s 			page 7


  68:src/Riscv.cpp ****     uint scause = r_scause();
 245              		.loc 1 68 5
 246              	.LBB36:
 247              	.LBB37:
 248              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
GAS LISTING /tmp/cczCzBS7.s 			page 8


  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
 249              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 250              		.loc 2 95 5
 251              		.loc 2 95 72 is_stmt 0
 252              	#APP
 253              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
 254              		csrr a5, scause
 255              	# 0 "" 2
 256              	#NO_APP
 257 00f8 233CF4FA 		sd	a5,-72(s0)
 258              		.loc 2 96 5 is_stmt 1
 259              		.loc 2 96 12 is_stmt 0
 260 00fc 833784FB 		ld	a5,-72(s0)
 261              	.LBE37:
GAS LISTING /tmp/cczCzBS7.s 			page 9


 262              	.LBE36:
 263              		.loc 1 68 28
 264 0100 9B870700 		sext.w	a5,a5
 265              	.LVL18:
  69:src/Riscv.cpp ****     uint64 a0reg;
 266              		.loc 1 69 5 is_stmt 1
  70:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
 267              		.loc 1 70 5
 268              		.loc 1 70 49 is_stmt 0
 269              	#APP
 270              	# 70 "src/Riscv.cpp" 1
  71              	
 271              		mv a3, a0
 272              	# 0 "" 2
 273              	.LVL19:
  72:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
 274              		.loc 1 72 5 is_stmt 1
 275              	#NO_APP
 276              	.LBB38:
 277              		.loc 1 72 40 is_stmt 0
 278 0108 9B8787FF 		addiw	a5,a5,-8
 279              	.LVL20:
 280              		.loc 1 72 5
 281 010c 13071000 		li	a4,1
 282 0110 637EF700 		bleu	a5,a4,.L19
 283              	.LVL21:
 284              	.L15:
 285              	.LBE38:
  73:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****         //call from yield
  76:src/Riscv.cpp ****         if(a0reg==0x04){
  77:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  78:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
  81:src/Riscv.cpp ****             _thread::dispatch();
  82:src/Riscv.cpp **** 
  83:src/Riscv.cpp ****             w_sstatus(sstatus);
  84:src/Riscv.cpp ****             w_sepc(sepc);
  85:src/Riscv.cpp ****         }
  86:src/Riscv.cpp ****         else {
  87:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  88:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp ****             //jump to syscall handler
  91:src/Riscv.cpp ****             syscallHandler();
  92:src/Riscv.cpp **** 
  93:src/Riscv.cpp ****             w_sstatus(sstatus);
  94:src/Riscv.cpp ****             w_sepc(sepc);
  95:src/Riscv.cpp ****         }
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****     }
 100:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 101:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
GAS LISTING /tmp/cczCzBS7.s 			page 10


 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****     }
 104:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 105:src/Riscv.cpp ****     {
 106:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****     }
 109:src/Riscv.cpp ****     else{
 110:src/Riscv.cpp ****         // unexpected trap cause
 111:src/Riscv.cpp ****         //print(scause)
 112:src/Riscv.cpp ****         //print(sepc)
 113:src/Riscv.cpp ****         //print(stval) //trap value
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****     }
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp **** }
 286              		.loc 1 117 1
 287 0114 83308104 		ld	ra,72(sp)
 288              		.cfi_remember_state
 289              		.cfi_restore 1
 290 0118 03340104 		ld	s0,64(sp)
 291              		.cfi_restore 8
 292              		.cfi_def_cfa 2, 80
 293 011c 83348103 		ld	s1,56(sp)
 294              		.cfi_restore 9
 295 0120 03390103 		ld	s2,48(sp)
 296              		.cfi_restore 18
 297 0124 13010105 		addi	sp,sp,80
 298              		.cfi_def_cfa_offset 0
 299 0128 67800000 		jr	ra
 300              	.LVL22:
 301              	.L19:
 302              		.cfi_restore_state
  76:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 303              		.loc 1 76 9 is_stmt 1
 304              	.LBB59:
 305              	.LBB39:
 306 012c 93074000 		li	a5,4
 307 0130 638AF602 		beq	a3,a5,.L20
 308              	.LBB40:
  87:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 309              		.loc 1 87 13
 310              	.LBB41:
 311              	.LBB42:
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 312              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 313              		.loc 2 107 5
GAS LISTING /tmp/cczCzBS7.s 			page 11


 314              		.loc 2 107 64 is_stmt 0
 315              	#APP
 316              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 317              		csrr a5, sepc
 318              	# 0 "" 2
 319              	#NO_APP
 320 0138 233CF4FC 		sd	a5,-40(s0)
 321              		.loc 2 108 5 is_stmt 1
 322              		.loc 2 108 12 is_stmt 0
 323 013c 833484FD 		ld	s1,-40(s0)
 324              	.LBE42:
 325              	.LBE41:
  87:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 326              		.loc 1 87 38
 327 0140 93844400 		addi	s1,s1,4
 328              	.LVL23:
  88:src/Riscv.cpp **** 
 329              		.loc 1 88 13 is_stmt 1
 330              	.LBB43:
 331              	.LBB44:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cczCzBS7.s 			page 12


 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 332              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 333              		.loc 2 177 5
 334              		.loc 2 177 76 is_stmt 0
 335              	#APP
 336              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 337              		csrr a5, sstatus
 338              	# 0 "" 2
 339              	#NO_APP
 340 0148 2338F4FC 		sd	a5,-48(s0)
 341              		.loc 2 178 5 is_stmt 1
 342              		.loc 2 178 12 is_stmt 0
 343 014c 033904FD 		ld	s2,-48(s0)
 344              	.LVL24:
 345              	.LBE44:
 346              	.LBE43:
  91:src/Riscv.cpp **** 
 347              		.loc 1 91 13 is_stmt 1
  91:src/Riscv.cpp **** 
 348              		.loc 1 91 27 is_stmt 0
 349 0150 97000000 		call	_ZN5Riscv14syscallHandlerEv
 349      E7800000 
 350              	.LVL25:
  93:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/cczCzBS7.s 			page 13


 351              		.loc 1 93 13 is_stmt 1
 352              	.LBB45:
 353              	.LBB46:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 354              		.loc 2 183 5
 355              		.loc 2 183 77 is_stmt 0
 356              	#APP
 357              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 358              		csrw sstatus, s2
 359              	# 0 "" 2
 360              	.LVL26:
 361              	#NO_APP
 362              	.LBE46:
 363              	.LBE45:
  94:src/Riscv.cpp ****         }
 364              		.loc 1 94 13 is_stmt 1
 365              	.LBB47:
 366              	.LBB48:
 113:src/../h/Riscv.hpp **** }
 367              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 368              		.loc 2 113 65 is_stmt 0
 369              	#APP
 370              	# 113 "src/../h/Riscv.hpp" 1
 371              		csrw sepc, s1
 372              	# 0 "" 2
 373              	.LVL27:
 374              	#NO_APP
 375              	.LBE48:
 376              	.LBE47:
 377              	.LBE40:
 378              	.LBE39:
 100:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 379              		.loc 1 100 10 is_stmt 1
 104:src/Riscv.cpp ****     {
 380              		.loc 1 104 10
 381              	.LBE59:
 382              		.loc 1 117 1 is_stmt 0
 383 0160 6FF05FFB 		j	.L15
 384              	.LVL28:
 385              	.L20:
 386              	.LBB60:
 387              	.LBB58:
 388              	.LBB49:
  77:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 389              		.loc 1 77 13 is_stmt 1
 390              	.LBB50:
 391              	.LBB51:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 392              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 393              		.loc 2 107 5
GAS LISTING /tmp/cczCzBS7.s 			page 14


 107:src/../h/Riscv.hpp ****     return sepc;
 394              		.loc 2 107 64 is_stmt 0
 395              	#APP
 396              	# 107 "src/../h/Riscv.hpp" 1
 397              		csrr a5, sepc
 398              	# 0 "" 2
 399              	#NO_APP
 400 0168 2334F4FC 		sd	a5,-56(s0)
 108:src/../h/Riscv.hpp **** }
 401              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 402              		.loc 2 108 12 is_stmt 0
 403 016c 833484FC 		ld	s1,-56(s0)
 404              	.LBE51:
 405              	.LBE50:
  77:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 406              		.loc 1 77 38
 407 0170 93844400 		addi	s1,s1,4
 408              	.LVL29:
  78:src/Riscv.cpp **** 
 409              		.loc 1 78 13 is_stmt 1
 410              	.LBB52:
 411              	.LBB53:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 412              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 413              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 414              		.loc 2 177 76 is_stmt 0
 415              	#APP
 416              	# 177 "src/../h/Riscv.hpp" 1
 417              		csrr a5, sstatus
 418              	# 0 "" 2
 419              	#NO_APP
 420 0178 2330F4FC 		sd	a5,-64(s0)
 178:src/../h/Riscv.hpp **** }
 421              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 422              		.loc 2 178 12 is_stmt 0
 423 017c 033904FC 		ld	s2,-64(s0)
 424              	.LVL30:
 425              	.LBE53:
 426              	.LBE52:
  80:src/Riscv.cpp ****             _thread::dispatch();
 427              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             _thread::dispatch();
 428              		.loc 1 80 39 is_stmt 0
 429 0180 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 429      83B70700 
 430 0188 23B00700 		sd	zero,0(a5)
  81:src/Riscv.cpp **** 
 431              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp **** 
 432              		.loc 1 81 30 is_stmt 0
 433 018c 97000000 		call	_ZN7_thread8dispatchEv@plt
 433      E7800000 
 434              	.LVL31:
GAS LISTING /tmp/cczCzBS7.s 			page 15


  83:src/Riscv.cpp ****             w_sepc(sepc);
 435              		.loc 1 83 13 is_stmt 1
 436              	.LBB54:
 437              	.LBB55:
 183:src/../h/Riscv.hpp **** }
 438              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 439              		.loc 2 183 77 is_stmt 0
 440              	#APP
 441              	# 183 "src/../h/Riscv.hpp" 1
 442              		csrw sstatus, s2
 443              	# 0 "" 2
 444              	.LVL32:
 445              	#NO_APP
 446              	.LBE55:
 447              	.LBE54:
  84:src/Riscv.cpp ****         }
 448              		.loc 1 84 13 is_stmt 1
 449              	.LBB56:
 450              	.LBB57:
 113:src/../h/Riscv.hpp **** }
 451              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 452              		.loc 2 113 65 is_stmt 0
 453              	#APP
 454              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 455              		csrw sepc, s1
 456              	# 0 "" 2
 457              		.loc 2 114 1
 458              	#NO_APP
 459 019c 6FF09FF7 		j	.L15
 460              	.LBE57:
 461              	.LBE56:
 462              	.LBE49:
 463              	.LBE58:
 464              	.LBE60:
 465              		.cfi_endproc
 466              	.LFE44:
 468              	.Letext0:
 469              		.file 3 "src/../h/../lib/hw.h"
 470              		.file 4 "src/../h/MemoryAllocator.hpp"
 471              		.file 5 "src/../h/_thread.hpp"
GAS LISTING /tmp/cczCzBS7.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cczCzBS7.s:9      .text:0000000000000000 _ZN5Riscv14syscallHandlerEv
     /tmp/cczCzBS7.s:13     .text:0000000000000000 .L0 
     /tmp/cczCzBS7.s:14     .text:0000000000000000 .L0 
     /tmp/cczCzBS7.s:15     .text:0000000000000004 .L0 
     /tmp/cczCzBS7.s:18     .text:000000000000000c .L0 
     /tmp/cczCzBS7.s:19     .text:000000000000000c .L0 
     /tmp/cczCzBS7.s:21     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:23     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:24     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:25     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:26     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:19     .text:0000000000000010 .L0 
     /tmp/cczCzBS7.s:36     .text:0000000000000014 .L0 
     /tmp/cczCzBS7.s:42     .text:000000000000001c .L0 
     /tmp/cczCzBS7.s:50     .text:0000000000000024 .L0 
     /tmp/cczCzBS7.s:53     .text:000000000000002c .L0 
     /tmp/cczCzBS7.s:56     .text:0000000000000034 .L0 
     /tmp/cczCzBS7.s:64     .text:000000000000003c .L0 
     /tmp/cczCzBS7.s:65     .text:0000000000000040 .L0 
     /tmp/cczCzBS7.s:66     .text:0000000000000040 .L0 
     /tmp/cczCzBS7.s:68     .text:0000000000000044 .L0 
     /tmp/cczCzBS7.s:69     .text:0000000000000044 .L0 
     /tmp/cczCzBS7.s:71     .text:0000000000000048 .L0 
     /tmp/cczCzBS7.s:75     .text:000000000000004c .L0 
     /tmp/cczCzBS7.s:79     .text:000000000000004c .L0 
       src/Riscv.cpp:22     .text:000000000000004c .L0 
     /tmp/cczCzBS7.s:86     .text:0000000000000050 .L0 
     /tmp/cczCzBS7.s:88     .text:0000000000000050 .L0 
     /tmp/cczCzBS7.s:91     .text:0000000000000058 .L0 
       src/Riscv.cpp:26     .text:0000000000000058 .L0 
     /tmp/cczCzBS7.s:104    .text:0000000000000060 .L0 
       src/Riscv.cpp:29     .text:0000000000000060 .L0 
     /tmp/cczCzBS7.s:111    .text:0000000000000064 .L0 
     /tmp/cczCzBS7.s:113    .text:0000000000000064 .L0 
     /tmp/cczCzBS7.s:116    .text:000000000000006c .L0 
       src/Riscv.cpp:31     .text:000000000000006c .L0 
     /tmp/cczCzBS7.s:129    .text:0000000000000074 .L0 
       src/Riscv.cpp:34     .text:0000000000000074 .L0 
     /tmp/cczCzBS7.s:136    .text:0000000000000078 .L0 
       src/Riscv.cpp:35     .text:0000000000000078 .L0 
     /tmp/cczCzBS7.s:142    .text:000000000000007c .L0 
       src/Riscv.cpp:36     .text:000000000000007c .L0 
     /tmp/cczCzBS7.s:148    .text:0000000000000080 .L0 
     /tmp/cczCzBS7.s:150    .text:0000000000000080 .L0 
     /tmp/cczCzBS7.s:153    .text:0000000000000088 .L0 
     /tmp/cczCzBS7.s:154    .text:0000000000000088 .L0 
       src/Riscv.cpp:45     .text:0000000000000088 .L0 
     /tmp/cczCzBS7.s:165    .text:0000000000000090 .L0 
     /tmp/cczCzBS7.s:166    .text:0000000000000090 .L0 
     /tmp/cczCzBS7.s:170    .text:000000000000009c .L0 
     /tmp/cczCzBS7.s:173    .text:00000000000000a4 .L0 
     /tmp/cczCzBS7.s:174    .text:00000000000000a4 .L0 
     /tmp/cczCzBS7.s:180    .text:00000000000000b0 .L0 
     /tmp/cczCzBS7.s:181    .text:00000000000000b0 .L0 
GAS LISTING /tmp/cczCzBS7.s 			page 17


     /tmp/cczCzBS7.s:187    .text:00000000000000b8 .L0 
     /tmp/cczCzBS7.s:188    .text:00000000000000bc .L0 
     /tmp/cczCzBS7.s:194    .text:00000000000000bc _ZN5Riscv10popSppSpieEv
     /tmp/cczCzBS7.s:197    .text:00000000000000bc .L0 
     /tmp/cczCzBS7.s:198    .text:00000000000000bc .L0 
     /tmp/cczCzBS7.s:199    .text:00000000000000c0 .L0 
     /tmp/cczCzBS7.s:201    .text:00000000000000c4 .L0 
     /tmp/cczCzBS7.s:203    .text:00000000000000c8 .L0 
     /tmp/cczCzBS7.s:205    .text:00000000000000c8 .L0 
       src/Riscv.cpp:63     .text:00000000000000c8 .L0 
     /tmp/cczCzBS7.s:211    .text:00000000000000cc .L0 
       src/Riscv.cpp:64     .text:00000000000000cc .L0 
     /tmp/cczCzBS7.s:217    .text:00000000000000d0 .L0 
     /tmp/cczCzBS7.s:218    .text:00000000000000d4 .L0 
     /tmp/cczCzBS7.s:219    .text:00000000000000d4 .L0 
     /tmp/cczCzBS7.s:221    .text:00000000000000d8 .L0 
     /tmp/cczCzBS7.s:223    .text:00000000000000dc .L0 
     /tmp/cczCzBS7.s:229    .text:00000000000000dc _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cczCzBS7.s:232    .text:00000000000000dc .L0 
     /tmp/cczCzBS7.s:233    .text:00000000000000dc .L0 
     /tmp/cczCzBS7.s:234    .text:00000000000000e0 .L0 
     /tmp/cczCzBS7.s:239    .text:00000000000000f0 .L0 
     /tmp/cczCzBS7.s:240    .text:00000000000000f0 .L0 
     /tmp/cczCzBS7.s:241    .text:00000000000000f0 .L0 
     /tmp/cczCzBS7.s:242    .text:00000000000000f0 .L0 
     /tmp/cczCzBS7.s:244    .text:00000000000000f4 .L0 
     /tmp/cczCzBS7.s:249    .text:00000000000000f4 .L0 
     /tmp/cczCzBS7.s:250    .text:00000000000000f4 .L0 
     /tmp/cczCzBS7.s:251    .text:00000000000000f4 .L0 
  src/../h/Riscv.hpp:95     .text:00000000000000f4 .L0 
     /tmp/cczCzBS7.s:259    .text:00000000000000fc .L0 
     /tmp/cczCzBS7.s:260    .text:00000000000000fc .L0 
     /tmp/cczCzBS7.s:264    .text:0000000000000100 .L0 
     /tmp/cczCzBS7.s:267    .text:0000000000000104 .L0 
     /tmp/cczCzBS7.s:268    .text:0000000000000104 .L0 
       src/Riscv.cpp:70     .text:0000000000000104 .L0 
     /tmp/cczCzBS7.s:277    .text:0000000000000108 .L0 
     /tmp/cczCzBS7.s:278    .text:0000000000000108 .L0 
     /tmp/cczCzBS7.s:281    .text:000000000000010c .L0 
     /tmp/cczCzBS7.s:287    .text:0000000000000114 .L0 
     /tmp/cczCzBS7.s:288    .text:0000000000000118 .L0 
     /tmp/cczCzBS7.s:289    .text:0000000000000118 .L0 
     /tmp/cczCzBS7.s:291    .text:000000000000011c .L0 
     /tmp/cczCzBS7.s:292    .text:000000000000011c .L0 
     /tmp/cczCzBS7.s:294    .text:0000000000000120 .L0 
     /tmp/cczCzBS7.s:296    .text:0000000000000124 .L0 
     /tmp/cczCzBS7.s:298    .text:0000000000000128 .L0 
     /tmp/cczCzBS7.s:302    .text:000000000000012c .L0 
     /tmp/cczCzBS7.s:306    .text:000000000000012c .L0 
     /tmp/cczCzBS7.s:312    .text:0000000000000134 .L0 
     /tmp/cczCzBS7.s:313    .text:0000000000000134 .L0 
     /tmp/cczCzBS7.s:314    .text:0000000000000134 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000134 .L0 
     /tmp/cczCzBS7.s:322    .text:000000000000013c .L0 
     /tmp/cczCzBS7.s:323    .text:000000000000013c .L0 
     /tmp/cczCzBS7.s:327    .text:0000000000000140 .L0 
     /tmp/cczCzBS7.s:332    .text:0000000000000144 .L0 
GAS LISTING /tmp/cczCzBS7.s 			page 18


     /tmp/cczCzBS7.s:333    .text:0000000000000144 .L0 
     /tmp/cczCzBS7.s:334    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000144 .L0 
     /tmp/cczCzBS7.s:342    .text:000000000000014c .L0 
     /tmp/cczCzBS7.s:343    .text:000000000000014c .L0 
     /tmp/cczCzBS7.s:348    .text:0000000000000150 .L0 
     /tmp/cczCzBS7.s:349    .text:0000000000000150 .L0 
     /tmp/cczCzBS7.s:354    .text:0000000000000158 .L0 
     /tmp/cczCzBS7.s:355    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000158 .L0 
     /tmp/cczCzBS7.s:367    .text:000000000000015c .L0 
     /tmp/cczCzBS7.s:368    .text:000000000000015c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000015c .L0 
     /tmp/cczCzBS7.s:380    .text:0000000000000160 .L0 
     /tmp/cczCzBS7.s:382    .text:0000000000000160 .L0 
     /tmp/cczCzBS7.s:383    .text:0000000000000160 .L0 
     /tmp/cczCzBS7.s:392    .text:0000000000000164 .L0 
     /tmp/cczCzBS7.s:393    .text:0000000000000164 .L0 
     /tmp/cczCzBS7.s:394    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000164 .L0 
     /tmp/cczCzBS7.s:402    .text:000000000000016c .L0 
     /tmp/cczCzBS7.s:403    .text:000000000000016c .L0 
     /tmp/cczCzBS7.s:407    .text:0000000000000170 .L0 
     /tmp/cczCzBS7.s:412    .text:0000000000000174 .L0 
     /tmp/cczCzBS7.s:413    .text:0000000000000174 .L0 
     /tmp/cczCzBS7.s:414    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000174 .L0 
     /tmp/cczCzBS7.s:422    .text:000000000000017c .L0 
     /tmp/cczCzBS7.s:423    .text:000000000000017c .L0 
     /tmp/cczCzBS7.s:428    .text:0000000000000180 .L0 
     /tmp/cczCzBS7.s:429    .text:0000000000000180 .L0 
     /tmp/cczCzBS7.s:432    .text:000000000000018c .L0 
     /tmp/cczCzBS7.s:433    .text:000000000000018c .L0 
     /tmp/cczCzBS7.s:438    .text:0000000000000194 .L0 
     /tmp/cczCzBS7.s:439    .text:0000000000000194 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000194 .L0 
     /tmp/cczCzBS7.s:451    .text:0000000000000198 .L0 
     /tmp/cczCzBS7.s:452    .text:0000000000000198 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000198 .L0 
     /tmp/cczCzBS7.s:459    .text:000000000000019c .L0 
     /tmp/cczCzBS7.s:465    .text:00000000000001a0 .L0 
     /tmp/cczCzBS7.s:472    .text:00000000000001a0 .L0 
     /tmp/cczCzBS7.s:166    .text:0000000000000090 .L0 
     /tmp/cczCzBS7.s:429    .text:0000000000000180 .L0 
     /tmp/cczCzBS7.s:74     .text:000000000000004c .L8
     /tmp/cczCzBS7.s:100    .text:0000000000000060 .L9
     /tmp/cczCzBS7.s:125    .text:0000000000000074 .L10
     /tmp/cczCzBS7.s:163    .text:0000000000000090 .L11
     /tmp/cczCzBS7.s:178    .text:00000000000000b0 .L12
     /tmp/cczCzBS7.s:59     .text:000000000000003c .L1
     /tmp/cczCzBS7.s:301    .text:000000000000012c .L19
     /tmp/cczCzBS7.s:385    .text:0000000000000164 .L20
     /tmp/cczCzBS7.s:284    .text:0000000000000114 .L15
     /tmp/cczCzBS7.s:1606   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cczCzBS7.s:2802   .debug_str:0000000000000633 .LASF124
     /tmp/cczCzBS7.s:2706   .debug_str:0000000000000382 .LASF125
     /tmp/cczCzBS7.s:2602   .debug_str:0000000000000075 .LASF126
GAS LISTING /tmp/cczCzBS7.s 			page 19


     /tmp/cczCzBS7.s:5      .text:0000000000000000 .Ltext0
     /tmp/cczCzBS7.s:468    .text:00000000000001a0 .Letext0
     /tmp/cczCzBS7.s:2586   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cczCzBS7.s:2624   .debug_str:0000000000000143 .LASF3
     /tmp/cczCzBS7.s:2722   .debug_str:00000000000003e8 .LASF0
     /tmp/cczCzBS7.s:2742   .debug_str:0000000000000456 .LASF1
     /tmp/cczCzBS7.s:2708   .debug_str:0000000000000390 .LASF2
     /tmp/cczCzBS7.s:2678   .debug_str:00000000000002cf .LASF4
     /tmp/cczCzBS7.s:2774   .debug_str:000000000000053f .LASF5
     /tmp/cczCzBS7.s:2608   .debug_str:00000000000000d0 .LASF6
     /tmp/cczCzBS7.s:2746   .debug_str:0000000000000470 .LASF7
     /tmp/cczCzBS7.s:2720   .debug_str:00000000000003d5 .LASF8
     /tmp/cczCzBS7.s:2820   .debug_str:000000000000078e .LASF9
     /tmp/cczCzBS7.s:2666   .debug_str:000000000000025c .LASF10
     /tmp/cczCzBS7.s:2754   .debug_str:00000000000004a4 .LASF11
     /tmp/cczCzBS7.s:2808   .debug_str:000000000000071c .LASF12
     /tmp/cczCzBS7.s:2610   .debug_str:00000000000000d7 .LASF13
     /tmp/cczCzBS7.s:2592   .debug_str:000000000000002b .LASF14
     /tmp/cczCzBS7.s:2620   .debug_str:0000000000000127 .LASF15
     /tmp/cczCzBS7.s:2766   .debug_str:00000000000004fb .LASF16
     /tmp/cczCzBS7.s:2630   .debug_str:0000000000000171 .LASF17
     /tmp/cczCzBS7.s:2738   .debug_str:0000000000000443 .LASF58
     /tmp/cczCzBS7.s:2764   .debug_str:00000000000004f0 .LASF50
     /tmp/cczCzBS7.s:2838   .debug_str:0000000000000833 .LASF52
     /tmp/cczCzBS7.s:2594   .debug_str:000000000000003b .LASF18
     /tmp/cczCzBS7.s:2786   .debug_str:0000000000000593 .LASF20
     /tmp/cczCzBS7.s:2642   .debug_str:00000000000001ea .LASF22
     /tmp/cczCzBS7.s:2640   .debug_str:00000000000001d5 .LASF24
     /tmp/cczCzBS7.s:2778   .debug_str:0000000000000560 .LASF19
     /tmp/cczCzBS7.s:2758   .debug_str:00000000000004d0 .LASF21
     /tmp/cczCzBS7.s:2800   .debug_str:000000000000062c .LASF23
     /tmp/cczCzBS7.s:2790   .debug_str:00000000000005c0 .LASF25
     /tmp/cczCzBS7.s:2656   .debug_str:000000000000023f .LASF26
     /tmp/cczCzBS7.s:2632   .debug_str:0000000000000187 .LASF27
     /tmp/cczCzBS7.s:2588   .debug_str:0000000000000000 .LASF28
     /tmp/cczCzBS7.s:2672   .debug_str:000000000000029d .LASF29
     /tmp/cczCzBS7.s:2646   .debug_str:00000000000001fb .LASF30
     /tmp/cczCzBS7.s:2612   .debug_str:00000000000000e7 .LASF31
     /tmp/cczCzBS7.s:2844   .debug_str:0000000000000867 .LASF32
     /tmp/cczCzBS7.s:2648   .debug_str:0000000000000203 .LASF33
     /tmp/cczCzBS7.s:2724   .debug_str:00000000000003f5 .LASF34
     /tmp/cczCzBS7.s:2836   .debug_str:0000000000000820 .LASF35
     /tmp/cczCzBS7.s:2604   .debug_str:00000000000000a5 .LASF36
     /tmp/cczCzBS7.s:2654   .debug_str:000000000000022c .LASF37
     /tmp/cczCzBS7.s:2664   .debug_str:0000000000000256 .LASF38
     /tmp/cczCzBS7.s:2798   .debug_str:000000000000061a .LASF39
     /tmp/cczCzBS7.s:2694   .debug_str:0000000000000334 .LASF40
     /tmp/cczCzBS7.s:2848   .debug_str:000000000000087f .LASF41
     /tmp/cczCzBS7.s:2842   .debug_str:000000000000085c .LASF42
     /tmp/cczCzBS7.s:2772   .debug_str:0000000000000527 .LASF43
     /tmp/cczCzBS7.s:2688   .debug_str:00000000000002ff .LASF44
     /tmp/cczCzBS7.s:2788   .debug_str:00000000000005a8 .LASF45
     /tmp/cczCzBS7.s:2618   .debug_str:000000000000011d .LASF46
     /tmp/cczCzBS7.s:2674   .debug_str:00000000000002b1 .LASF47
     /tmp/cczCzBS7.s:2712   .debug_str:00000000000003aa .LASF48
     /tmp/cczCzBS7.s:2668   .debug_str:000000000000026a .LASF49
     /tmp/cczCzBS7.s:2780   .debug_str:0000000000000567 .LASF51
GAS LISTING /tmp/cczCzBS7.s 			page 20


     /tmp/cczCzBS7.s:2614   .debug_str:00000000000000fb .LASF53
     /tmp/cczCzBS7.s:2828   .debug_str:00000000000007be .LASF54
     /tmp/cczCzBS7.s:2692   .debug_str:0000000000000312 .LASF56
     /tmp/cczCzBS7.s:2776   .debug_str:0000000000000551 .LASF55
     /tmp/cczCzBS7.s:2792   .debug_str:00000000000005d3 .LASF57
     /tmp/cczCzBS7.s:2704   .debug_str:0000000000000372 .LASF59
     /tmp/cczCzBS7.s:2804   .debug_str:00000000000006f7 .LASF60
     /tmp/cczCzBS7.s:2606   .debug_str:00000000000000ac .LASF61
     /tmp/cczCzBS7.s:2816   .debug_str:0000000000000767 .LASF62
     /tmp/cczCzBS7.s:2590   .debug_str:0000000000000008 .LASF64
     /tmp/cczCzBS7.s:2826   .debug_str:00000000000007b4 .LASF63
     /tmp/cczCzBS7.s:2600   .debug_str:0000000000000053 .LASF65
     /tmp/cczCzBS7.s:2818   .debug_str:0000000000000772 .LASF67
     /tmp/cczCzBS7.s:2716   .debug_str:00000000000003ba .LASF66
     /tmp/cczCzBS7.s:2830   .debug_str:00000000000007d3 .LASF68
     /tmp/cczCzBS7.s:2638   .debug_str:00000000000001bc .LASF108
     /tmp/cczCzBS7.s:2676   .debug_str:00000000000002c7 .LASF69
     /tmp/cczCzBS7.s:2810   .debug_str:000000000000072b .LASF127
     /tmp/cczCzBS7.s:2752   .debug_str:000000000000049e .LASF70
     /tmp/cczCzBS7.s:2782   .debug_str:0000000000000576 .LASF71
     /tmp/cczCzBS7.s:2680   .debug_str:00000000000002d6 .LASF72
     /tmp/cczCzBS7.s:2598   .debug_str:000000000000004b .LASF128
     /tmp/cczCzBS7.s:2814   .debug_str:000000000000075e .LASF73
     /tmp/cczCzBS7.s:2750   .debug_str:000000000000048e .LASF74
     /tmp/cczCzBS7.s:2748   .debug_str:0000000000000483 .LASF75
     /tmp/cczCzBS7.s:2634   .debug_str:000000000000019b .LASF76
     /tmp/cczCzBS7.s:2710   .debug_str:000000000000039e .LASF77
     /tmp/cczCzBS7.s:2626   .debug_str:0000000000000148 .LASF78
     /tmp/cczCzBS7.s:2702   .debug_str:0000000000000365 .LASF79
     /tmp/cczCzBS7.s:2756   .debug_str:00000000000004b3 .LASF80
     /tmp/cczCzBS7.s:2740   .debug_str:0000000000000449 .LASF81
     /tmp/cczCzBS7.s:2834   .debug_str:00000000000007fc .LASF82
     /tmp/cczCzBS7.s:2762   .debug_str:00000000000004eb .LASF129
     /tmp/cczCzBS7.s:2768   .debug_str:0000000000000511 .LASF83
     /tmp/cczCzBS7.s:2796   .debug_str:0000000000000606 .LASF84
     /tmp/cczCzBS7.s:2636   .debug_str:00000000000001b6 .LASF85
     /tmp/cczCzBS7.s:2784   .debug_str:000000000000057f .LASF86
     /tmp/cczCzBS7.s:2644   .debug_str:00000000000001f3 .LASF130
     /tmp/cczCzBS7.s:2616   .debug_str:0000000000000117 .LASF87
     /tmp/cczCzBS7.s:2698   .debug_str:0000000000000348 .LASF88
     /tmp/cczCzBS7.s:2736   .debug_str:0000000000000436 .LASF89
     /tmp/cczCzBS7.s:2730   .debug_str:000000000000040b .LASF90
     /tmp/cczCzBS7.s:2832   .debug_str:00000000000007ef .LASF91
     /tmp/cczCzBS7.s:2770   .debug_str:0000000000000517 .LASF92
     /tmp/cczCzBS7.s:2846   .debug_str:000000000000086f .LASF93
     /tmp/cczCzBS7.s:2650   .debug_str:0000000000000217 .LASF94
     /tmp/cczCzBS7.s:2622   .debug_str:0000000000000133 .LASF95
     /tmp/cczCzBS7.s:2840   .debug_str:000000000000084b .LASF96
     /tmp/cczCzBS7.s:2682   .debug_str:00000000000002de .LASF97
     /tmp/cczCzBS7.s:2718   .debug_str:00000000000003c4 .LASF98
     /tmp/cczCzBS7.s:2806   .debug_str:0000000000000703 .LASF99
     /tmp/cczCzBS7.s:2686   .debug_str:00000000000002fa .LASF100
     /tmp/cczCzBS7.s:2728   .debug_str:0000000000000405 .LASF101
     /tmp/cczCzBS7.s:2690   .debug_str:000000000000030a .LASF102
     /tmp/cczCzBS7.s:2734   .debug_str:000000000000042c .LASF103
     /tmp/cczCzBS7.s:2684   .debug_str:00000000000002f1 .LASF104
     /tmp/cczCzBS7.s:2696   .debug_str:000000000000033a .LASF105
GAS LISTING /tmp/cczCzBS7.s 			page 21


     /tmp/cczCzBS7.s:2670   .debug_str:0000000000000280 .LASF106
     /tmp/cczCzBS7.s:2628   .debug_str:0000000000000163 .LASF107
     /tmp/cczCzBS7.s:2812   .debug_str:0000000000000732 .LASF109
     /tmp/cczCzBS7.s:2726   .debug_str:00000000000003fc .LASF110
     /tmp/cczCzBS7.s:2794   .debug_str:00000000000005ef .LASF111
     /tmp/cczCzBS7.s:2822   .debug_str:000000000000079e .LASF112
     /tmp/cczCzBS7.s:2700   .debug_str:000000000000035c .LASF113
     /tmp/cczCzBS7.s:2744   .debug_str:0000000000000469 .LASF114
     /tmp/cczCzBS7.s:2652   .debug_str:0000000000000227 .LASF115
     /tmp/cczCzBS7.s:230    .text:00000000000000dc .LFB44
     /tmp/cczCzBS7.s:466    .text:00000000000001a0 .LFE44
     /tmp/cczCzBS7.s:2596   .debug_str:0000000000000044 .LASF116
     /tmp/cczCzBS7.s:2443   .debug_loc:0000000000000000 .LLST8
     /tmp/cczCzBS7.s:2714   .debug_str:00000000000003b4 .LASF117
     /tmp/cczCzBS7.s:2450   .debug_loc:0000000000000023 .LLST9
     /tmp/cczCzBS7.s:388    .text:0000000000000164 .LBB49
     /tmp/cczCzBS7.s:462    .text:00000000000001a0 .LBE49
     /tmp/cczCzBS7.s:2732   .debug_str:0000000000000427 .LASF118
     /tmp/cczCzBS7.s:2760   .debug_str:00000000000004e3 .LASF119
     /tmp/cczCzBS7.s:390    .text:0000000000000164 .LBB50
     /tmp/cczCzBS7.s:405    .text:0000000000000170 .LBE50
     /tmp/cczCzBS7.s:410    .text:0000000000000174 .LBB52
     /tmp/cczCzBS7.s:426    .text:0000000000000180 .LBE52
     /tmp/cczCzBS7.s:436    .text:0000000000000194 .LBB54
     /tmp/cczCzBS7.s:447    .text:0000000000000198 .LBE54
     /tmp/cczCzBS7.s:2465   .debug_loc:000000000000006c .LLST14
     /tmp/cczCzBS7.s:449    .text:0000000000000198 .LBB56
     /tmp/cczCzBS7.s:461    .text:00000000000001a0 .LBE56
     /tmp/cczCzBS7.s:434    .text:0000000000000194 .LVL31
     /tmp/cczCzBS7.s:308    .text:0000000000000134 .LBB40
     /tmp/cczCzBS7.s:377    .text:0000000000000160 .LBE40
     /tmp/cczCzBS7.s:2472   .debug_loc:000000000000008f .LLST10
     /tmp/cczCzBS7.s:2479   .debug_loc:00000000000000b2 .LLST11
     /tmp/cczCzBS7.s:310    .text:0000000000000134 .LBB41
     /tmp/cczCzBS7.s:325    .text:0000000000000140 .LBE41
     /tmp/cczCzBS7.s:330    .text:0000000000000144 .LBB43
     /tmp/cczCzBS7.s:346    .text:0000000000000150 .LBE43
     /tmp/cczCzBS7.s:352    .text:0000000000000158 .LBB45
     /tmp/cczCzBS7.s:363    .text:000000000000015c .LBE45
     /tmp/cczCzBS7.s:2486   .debug_loc:00000000000000d5 .LLST12
     /tmp/cczCzBS7.s:365    .text:000000000000015c .LBB47
     /tmp/cczCzBS7.s:376    .text:0000000000000160 .LBE47
     /tmp/cczCzBS7.s:2493   .debug_loc:00000000000000f8 .LLST13
     /tmp/cczCzBS7.s:350    .text:0000000000000158 .LVL25
     /tmp/cczCzBS7.s:246    .text:00000000000000f4 .LBB36
     /tmp/cczCzBS7.s:262    .text:0000000000000100 .LBE36
     /tmp/cczCzBS7.s:195    .text:00000000000000bc .LFB43
     /tmp/cczCzBS7.s:224    .text:00000000000000dc .LFE43
     /tmp/cczCzBS7.s:10     .text:0000000000000000 .LFB42
     /tmp/cczCzBS7.s:189    .text:00000000000000bc .LFE42
     /tmp/cczCzBS7.s:2824   .debug_str:00000000000007af .LASF120
     /tmp/cczCzBS7.s:2500   .debug_loc:000000000000011b .LLST0
     /tmp/cczCzBS7.s:2658   .debug_str:0000000000000247 .LASF121
     /tmp/cczCzBS7.s:2527   .debug_loc:000000000000019d .LLST1
     /tmp/cczCzBS7.s:2660   .debug_str:000000000000024c .LASF122
     /tmp/cczCzBS7.s:2538   .debug_loc:00000000000001d3 .LLST2
     /tmp/cczCzBS7.s:2662   .debug_str:0000000000000251 .LASF123
GAS LISTING /tmp/cczCzBS7.s 			page 22


     /tmp/cczCzBS7.s:2545   .debug_loc:00000000000001f6 .LLST3
     /tmp/cczCzBS7.s:77     .text:000000000000004c .LBB31
     /tmp/cczCzBS7.s:97     .text:000000000000005c .LBE31
     /tmp/cczCzBS7.s:2552   .debug_loc:0000000000000219 .LLST7
     /tmp/cczCzBS7.s:89     .text:0000000000000058 .LVL4
     /tmp/cczCzBS7.s:102    .text:0000000000000060 .LBB28
     /tmp/cczCzBS7.s:122    .text:0000000000000070 .LBE28
     /tmp/cczCzBS7.s:2559   .debug_loc:000000000000023c .LLST6
     /tmp/cczCzBS7.s:114    .text:000000000000006c .LVL7
     /tmp/cczCzBS7.s:127    .text:0000000000000074 .LBB27
     /tmp/cczCzBS7.s:160    .text:000000000000008c .LBE27
     /tmp/cczCzBS7.s:2566   .debug_loc:000000000000025f .LLST4
     /tmp/cczCzBS7.s:151    .text:0000000000000088 .LVL12
     /tmp/cczCzBS7.s:175    .text:00000000000000ac .LVL15
     /tmp/cczCzBS7.s:182    .text:00000000000000b8 .LVL17
     /tmp/cczCzBS7.s:265    .text:0000000000000104 .LVL18
     /tmp/cczCzBS7.s:279    .text:000000000000010c .LVL20
     /tmp/cczCzBS7.s:273    .text:0000000000000108 .LVL19
     /tmp/cczCzBS7.s:283    .text:0000000000000114 .LVL21
     /tmp/cczCzBS7.s:300    .text:000000000000012c .LVL22
     /tmp/cczCzBS7.s:384    .text:0000000000000164 .LVL28
     /tmp/cczCzBS7.s:444    .text:0000000000000198 .LVL32
     /tmp/cczCzBS7.s:328    .text:0000000000000144 .LVL23
     /tmp/cczCzBS7.s:344    .text:0000000000000150 .LVL24
     /tmp/cczCzBS7.s:360    .text:000000000000015c .LVL26
     /tmp/cczCzBS7.s:373    .text:0000000000000160 .LVL27
     /tmp/cczCzBS7.s:32     .text:0000000000000014 .LVL0
     /tmp/cczCzBS7.s:58     .text:000000000000003c .LVL1
     /tmp/cczCzBS7.s:73     .text:000000000000004c .LVL2
     /tmp/cczCzBS7.s:99     .text:0000000000000060 .LVL5
     /tmp/cczCzBS7.s:124    .text:0000000000000074 .LVL8
     /tmp/cczCzBS7.s:134    .text:0000000000000078 .LVL9
     /tmp/cczCzBS7.s:162    .text:0000000000000090 .LVL13
     /tmp/cczCzBS7.s:167    .text:0000000000000098 .LVL14
     /tmp/cczCzBS7.s:177    .text:00000000000000b0 .LVL16
     /tmp/cczCzBS7.s:84     .text:0000000000000050 .LVL3
     /tmp/cczCzBS7.s:109    .text:0000000000000064 .LVL6
     /tmp/cczCzBS7.s:140    .text:000000000000007c .LVL10
     /tmp/cczCzBS7.s:146    .text:0000000000000080 .LVL11
     /tmp/cczCzBS7.s:473    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
