GAS LISTING /tmp/cc461iP7.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB49:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE49:
GAS LISTING /tmp/cc461iP7.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB50:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101EF 		addi	sp,sp,-272
  50              		.cfi_def_cfa_offset 272
  51 0024 23341110 		sd	ra,264(sp)
  52 0028 23308110 		sd	s0,256(sp)
  53 002c 233C910E 		sd	s1,248(sp)
  54 0030 2338210F 		sd	s2,240(sp)
  55 0034 2334310F 		sd	s3,232(sp)
  56 0038 2330410F 		sd	s4,224(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040111 		addi	s0,sp,272
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB164:
  67              	.LBB165:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/cc461iP7.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/cc461iP7.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 233CF4EE 		sd	a5,-264(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 833784EF 		ld	a5,-264(s0)
  81              	.LBE165:
  82              	.LBE164:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 24 5
  89              		.loc 1 24 49 is_stmt 0
  90              	#APP
  91              	# 24 "src/Riscv.cpp" 1
  25              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  26:src/Riscv.cpp ****      if (scause == 0x0000000000000008UL){
  95              		.loc 1 26 6 is_stmt 1
  96              	#NO_APP
  97              	.LBB166:
  98 0054 13078000 		li	a4,8
  99 0058 6386E702 		beq	a5,a4,.L26
 100              	.LBE166:
  27:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp ****         //call from yield
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****         if(a0reg==0x11){
GAS LISTING /tmp/cc461iP7.s 			page 5


  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp ****             _thread::thread_t *arg1;
  37:src/Riscv.cpp ****             _thread::Body arg2;
  38:src/Riscv.cpp ****             uint64 arg3;
  39:src/Riscv.cpp ****             uint64 *arg4;
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  53:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  54:src/Riscv.cpp ****             *arg1=t;
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp ****             uint64 ret;
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  58:src/Riscv.cpp ****             else ret =-1;
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             //return _thread* adress through a0
  62:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             w_sstatus(sstatus);
  65:src/Riscv.cpp ****             w_sepc(sepc);
  66:src/Riscv.cpp ****         }
  67:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  70:src/Riscv.cpp ****             //kmem_alloc
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //write return value to a0 register
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         else if(a0reg==0x02){
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             w_sstatus(sstatus);
GAS LISTING /tmp/cc461iP7.s 			page 6


  89:src/Riscv.cpp ****             w_sepc(sepc);
  90:src/Riscv.cpp ****         }
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****         else if(a0reg==0x12){
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****             _thread::running->finished=true;
  97:src/Riscv.cpp ****             _thread::dispatch();
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             w_sstatus(sstatus);
 100:src/Riscv.cpp ****             w_sepc(sepc);
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         else if(a0reg == 0x13){
 105:src/Riscv.cpp ****             //thread dispatch
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             //call from yield
 118:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 119:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 122:src/Riscv.cpp ****             _thread::dispatch();
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             w_sstatus(sstatus);
 125:src/Riscv.cpp ****             w_sepc(sepc);
 126:src/Riscv.cpp ****         }
 127:src/Riscv.cpp ****         else if(a0reg==0x21){
 128:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 129:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 132:src/Riscv.cpp ****            uint64 arg2;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 135:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 138:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 141:src/Riscv.cpp ****             *arg1=sem;
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             uint64 ret=0;
 144:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 145:src/Riscv.cpp ****             else ret=-1;
GAS LISTING /tmp/cc461iP7.s 			page 7


 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             w_sstatus(sstatus);
 150:src/Riscv.cpp ****             w_sepc(sepc);
 151:src/Riscv.cpp ****         }
 152:src/Riscv.cpp ****         else if(a0reg==0x22){
 153:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 154:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 160:src/Riscv.cpp **** 
 161:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 164:src/Riscv.cpp **** 
 165:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 166:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 167:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 168:src/Riscv.cpp ****                 t->deblocked=true;
 169:src/Riscv.cpp ****                 sem->val++;
 170:src/Riscv.cpp ****                 Scheduler::put(t);
 171:src/Riscv.cpp ****             }
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp ****             delete sem;
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****             w_sstatus(sstatus);
 176:src/Riscv.cpp ****             w_sepc(sepc);
 177:src/Riscv.cpp ****         }
 178:src/Riscv.cpp ****         else if(a0reg==0x23){
 179:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 180:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 189:src/Riscv.cpp ****             //TODO check if sem open
 190:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp ****             w_sstatus(sstatus);
 195:src/Riscv.cpp ****             w_sepc(sepc);
 196:src/Riscv.cpp ****         }
 197:src/Riscv.cpp ****         else if(a0reg==0x24){
 198:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 202:src/Riscv.cpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 8


 203:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp ****             //TODO check if sem open
 208:src/Riscv.cpp ****             arg1->signal();
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****             uint64 ret = 0;
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 213:src/Riscv.cpp **** 
 214:src/Riscv.cpp ****             w_sstatus(sstatus);
 215:src/Riscv.cpp ****             w_sepc(sepc);
 216:src/Riscv.cpp ****         }
 217:src/Riscv.cpp ****         else if(a0reg==0x41){
 218:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 219:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****             //call method from kernel Console class
 222:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 223:src/Riscv.cpp ****             char c = __getc();
 224:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             w_sstatus(sstatus);
 230:src/Riscv.cpp ****             w_sepc(sepc);
 231:src/Riscv.cpp ****         }
 232:src/Riscv.cpp ****         else if(a0reg==0x42){
 233:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 234:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             char c;
 237:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 238:src/Riscv.cpp **** 
 239:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 242:src/Riscv.cpp ****             __putc(c);
 243:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****             w_sstatus(sstatus);
 246:src/Riscv.cpp ****             w_sepc(sepc);
 247:src/Riscv.cpp ****         }
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp **** 
 250:src/Riscv.cpp ****     }
 251:src/Riscv.cpp ****      else if(scause == 0x8000000000000001UL){
 101              		.loc 1 251 11
 252:src/Riscv.cpp ****          mc_sip(SIP_SSIP);
 253:src/Riscv.cpp ****      }
 254:src/Riscv.cpp ****      else if(scause == 0x0000000000000009UL){
 102              		.loc 1 254 11
 103              	.LBB384:
 104              	.LBB167:
 105 005c 13079000 		li	a4,9
GAS LISTING /tmp/cc461iP7.s 			page 9


 106 0060 6384E742 		beq	a5,a4,.L27
 107              	.LVL2:
 108              	.L3:
 109              	.LBE167:
 110              	.LBE384:
 255:src/Riscv.cpp ****          uint64 sepc = r_sepc();
 256:src/Riscv.cpp ****          uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 257:src/Riscv.cpp **** 
 258:src/Riscv.cpp ****          w_sepc(sepc + 4);
 259:src/Riscv.cpp ****          w_sstatus(sstatus);
 260:src/Riscv.cpp ****      }
 261:src/Riscv.cpp ****      else if (scause == 0x8000000000000009UL){
 262:src/Riscv.cpp ****          console_handler();
 263:src/Riscv.cpp ****      } else{
 264:src/Riscv.cpp ****          // unexpected trap cause
 265:src/Riscv.cpp ****      }
 266:src/Riscv.cpp **** }
 111              		.loc 1 266 1 is_stmt 0
 112 0064 83308110 		ld	ra,264(sp)
 113              		.cfi_remember_state
 114              		.cfi_restore 1
 115 0068 03340110 		ld	s0,256(sp)
 116              		.cfi_restore 8
 117              		.cfi_def_cfa 2, 272
 118 006c 8334810F 		ld	s1,248(sp)
 119              		.cfi_restore 9
 120 0070 0339010F 		ld	s2,240(sp)
 121              		.cfi_restore 18
 122 0074 8339810E 		ld	s3,232(sp)
 123              		.cfi_restore 19
 124 0078 033A010E 		ld	s4,224(sp)
 125              		.cfi_restore 20
 126 007c 13010111 		addi	sp,sp,272
 127              		.cfi_def_cfa_offset 0
 128 0080 67800000 		jr	ra
 129              	.LVL3:
 130              	.L26:
 131              		.cfi_restore_state
  31:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 132              		.loc 1 31 9 is_stmt 1
 133              	.LBB385:
 134              	.LBB177:
 135 0084 93071001 		li	a5,17
 136              	.LVL4:
 137 0088 6388F40A 		beq	s1,a5,.L28
 138              	.L5:
 139              	.LBE177:
 140              	.LBE385:
  67:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 141              		.loc 1 67 9
 142              	.LBB386:
 143              	.LBB187:
 144 008c 93071000 		li	a5,1
 145 0090 6388F410 		beq	s1,a5,.L29
 146              	.LBE187:
 147              	.LBE386:
  80:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
GAS LISTING /tmp/cc461iP7.s 			page 10


 148              		.loc 1 80 14
 149              	.LBB387:
 150              	.LBB371:
 151              	.LBB188:
 152 0094 93072000 		li	a5,2
 153 0098 6382F414 		beq	s1,a5,.L30
 154              	.LBE188:
 155              	.LBE371:
 156              	.LBE387:
  92:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 157              		.loc 1 92 14
 158              	.LBB388:
 159              	.LBB372:
 160              	.LBB352:
 161              	.LBB189:
 162 009c 93072001 		li	a5,18
 163 00a0 638AF416 		beq	s1,a5,.L31
 164              	.LBE189:
 165              	.LBE352:
 166              	.LBE372:
 167              	.LBE388:
 104:src/Riscv.cpp ****             //thread dispatch
 168              		.loc 1 104 14
 169              	.LBB389:
 170              	.LBB373:
 171              	.LBB353:
 172              	.LBB334:
 173              	.LBB190:
 174 00a4 93073001 		li	a5,19
 175 00a8 6388F41A 		beq	s1,a5,.L32
 176              	.LBE190:
 177              	.LBE334:
 178              	.LBE353:
 179              	.LBE373:
 180              	.LBE389:
 116:src/Riscv.cpp ****             //call from yield
 181              		.loc 1 116 14
 182              	.LBB390:
 183              	.LBB374:
 184              	.LBB354:
 185              	.LBB335:
 186              	.LBB317:
 187              	.LBB191:
 188 00ac 93074000 		li	a5,4
 189 00b0 638CF41C 		beq	s1,a5,.L33
 190              	.LBE191:
 191              	.LBE317:
 192              	.LBE335:
 193              	.LBE354:
 194              	.LBE374:
 195              	.LBE390:
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 196              		.loc 1 127 14
 197              	.LBB391:
 198              	.LBB375:
 199              	.LBB355:
 200              	.LBB336:
GAS LISTING /tmp/cc461iP7.s 			page 11


 201              	.LBB318:
 202              	.LBB301:
 203              	.LBB192:
 204 00b4 93071002 		li	a5,33
 205 00b8 6386F420 		beq	s1,a5,.L34
 206              	.LBE192:
 207              	.LBE301:
 208              	.LBE318:
 209              	.LBE336:
 210              	.LBE355:
 211              	.LBE375:
 212              	.LBE391:
 152:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 213              		.loc 1 152 14
 214              	.LBB392:
 215              	.LBB376:
 216              	.LBB356:
 217              	.LBB337:
 218              	.LBB319:
 219              	.LBB302:
 220              	.LBB286:
 221              	.LBB193:
 222 00bc 93072002 		li	a5,34
 223 00c0 6386F426 		beq	s1,a5,.L35
 224              	.LBE193:
 225              	.LBE286:
 226              	.LBE302:
 227              	.LBE319:
 228              	.LBE337:
 229              	.LBE356:
 230              	.LBE376:
 231              	.LBE392:
 178:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 232              		.loc 1 178 14
 233              	.LBB393:
 234              	.LBB377:
 235              	.LBB357:
 236              	.LBB338:
 237              	.LBB320:
 238              	.LBB303:
 239              	.LBB287:
 240              	.LBB268:
 241              	.LBB194:
 242 00c4 93073002 		li	a5,35
 243 00c8 638CF42E 		beq	s1,a5,.L36
 244              	.LBE194:
 245              	.LBE268:
 246              	.LBE287:
 247              	.LBE303:
 248              	.LBE320:
 249              	.LBE338:
 250              	.LBE357:
 251              	.LBE377:
 252              	.LBE393:
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 253              		.loc 1 197 14
 254              	.LBB394:
GAS LISTING /tmp/cc461iP7.s 			page 12


 255              	.LBB378:
 256              	.LBB358:
 257              	.LBB339:
 258              	.LBB321:
 259              	.LBB304:
 260              	.LBB288:
 261              	.LBB269:
 262              	.LBB247:
 263              	.LBB195:
 264 00cc 93074002 		li	a5,36
 265 00d0 6386F432 		beq	s1,a5,.L37
 266              	.LBE195:
 267              	.LBE247:
 268              	.LBE269:
 269              	.LBE288:
 270              	.LBE304:
 271              	.LBE321:
 272              	.LBE339:
 273              	.LBE358:
 274              	.LBE378:
 275              	.LBE394:
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 276              		.loc 1 217 14
 277              	.LBB395:
 278              	.LBB379:
 279              	.LBB359:
 280              	.LBB340:
 281              	.LBB322:
 282              	.LBB305:
 283              	.LBB289:
 284              	.LBB270:
 285              	.LBB248:
 286              	.LBB235:
 287              	.LBB196:
 288 00d4 93071004 		li	a5,65
 289 00d8 6382F436 		beq	s1,a5,.L38
 290              	.LBE196:
 291              	.LBE235:
 292              	.LBE248:
 293              	.LBE270:
 294              	.LBE289:
 295              	.LBE305:
 296              	.LBE322:
 297              	.LBE340:
 298              	.LBE359:
 299              	.LBE379:
 300              	.LBE395:
 232:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 301              		.loc 1 232 14
 302              	.LBB396:
 303              	.LBB380:
 304              	.LBB360:
 305              	.LBB341:
 306              	.LBB323:
 307              	.LBB306:
 308              	.LBB290:
 309              	.LBB271:
GAS LISTING /tmp/cc461iP7.s 			page 13


 310              	.LBB249:
 311              	.LBB236:
 312              	.LBB224:
 313              	.LBB197:
 314 00dc 93072004 		li	a5,66
 315 00e0 E392F4F8 		bne	s1,a5,.L3
 316              	.LBB198:
 233:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 317              		.loc 1 233 13
 318              	.LBB199:
 319              	.LBB200:
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 320              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 321              		.loc 2 111 5
 322              		.loc 2 111 64 is_stmt 0
 323              	#APP
 324              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 325              		csrr a5, sepc
 326              	# 0 "" 2
 327              	#NO_APP
 328 00e8 233CF4FA 		sd	a5,-72(s0)
 329              		.loc 2 112 5 is_stmt 1
 330              		.loc 2 112 12 is_stmt 0
 331 00ec 833484FB 		ld	s1,-72(s0)
 332              	.LVL5:
 333              	.LBE200:
 334              	.LBE199:
 233:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 335              		.loc 1 233 38
 336 00f0 93844400 		addi	s1,s1,4
 337              	.LVL6:
 234:src/Riscv.cpp **** 
 338              		.loc 1 234 13 is_stmt 1
 339              	.LBB201:
 340              	.LBB202:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
GAS LISTING /tmp/cc461iP7.s 			page 14


 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
GAS LISTING /tmp/cc461iP7.s 			page 15


 341              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 342              		.loc 2 181 5
 343              		.loc 2 181 76 is_stmt 0
 344              	#APP
 345              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 346              		csrr a5, sstatus
 347              	# 0 "" 2
 348              	#NO_APP
 349 00f8 2338F4FA 		sd	a5,-80(s0)
 350              		.loc 2 182 5 is_stmt 1
 351              		.loc 2 182 12 is_stmt 0
 352 00fc 033904FB 		ld	s2,-80(s0)
 353              	.LVL7:
 354              	.LBE202:
 355              	.LBE201:
 236:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 356              		.loc 1 236 13 is_stmt 1
 237:src/Riscv.cpp **** 
 357              		.loc 1 237 13
 237:src/Riscv.cpp **** 
 358              		.loc 1 237 48 is_stmt 0
 359              	#APP
 360              	# 237 "src/Riscv.cpp" 1
 239:src/Riscv.cpp **** 
 361              		ld a1, 11*8(fp)
 362              	# 0 "" 2
 363              		.loc 1 239 13 is_stmt 1
 239:src/Riscv.cpp **** 
 364              		.loc 1 239 53 is_stmt 0
 365              	# 239 "src/Riscv.cpp" 1
 366              		mv a0, a1
 367              	# 0 "" 2
 368              	#NO_APP
 369 0108 1375F50F 		andi	a0,a0,0xff
 370              	.LVL8:
 241:src/Riscv.cpp ****             __putc(c);
 371              		.loc 1 241 13 is_stmt 1
 241:src/Riscv.cpp ****             __putc(c);
 372              		.loc 1 241 27 is_stmt 0
 373 010c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 373      83B70700 
 374              	.LVL9:
 375              	.LBB203:
 376              	.LBB204:
 129:src/../h/Riscv.hpp **** }
 377              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 378              		.loc 2 129 69 is_stmt 0
 379              	#APP
 380              	# 129 "src/../h/Riscv.hpp" 1
 381              		csrw stvec, a5
 382              	# 0 "" 2
 383              	.LVL10:
 384              	#NO_APP
 385              	.LBE204:
GAS LISTING /tmp/cc461iP7.s 			page 16


 386              	.LBE203:
 242:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 387              		.loc 1 242 13 is_stmt 1
 242:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 388              		.loc 1 242 19 is_stmt 0
 389 0118 97000000 		call	__putc@plt
 389      E7800000 
 390              	.LVL11:
 243:src/Riscv.cpp **** 
 391              		.loc 1 243 13 is_stmt 1
 243:src/Riscv.cpp **** 
 392              		.loc 1 243 27 is_stmt 0
 393 0120 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 393      83B70700 
 394              	.LVL12:
 395              	.LBB205:
 396              	.LBB206:
 129:src/../h/Riscv.hpp **** }
 397              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 398              		.loc 2 129 69 is_stmt 0
 399              	#APP
 400              	# 129 "src/../h/Riscv.hpp" 1
 401              		csrw stvec, a5
 402              	# 0 "" 2
 403              	.LVL13:
 404              	#NO_APP
 405              	.LBE206:
 406              	.LBE205:
 245:src/Riscv.cpp ****             w_sepc(sepc);
 407              		.loc 1 245 13 is_stmt 1
 408              	.LBB207:
 409              	.LBB208:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 410              		.loc 2 187 5
 411              		.loc 2 187 77 is_stmt 0
 412              	#APP
 413              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 414              		csrw sstatus, s2
 415              	# 0 "" 2
 416              	.LVL14:
 417              	#NO_APP
 418              	.LBE208:
 419              	.LBE207:
 246:src/Riscv.cpp ****         }
 420              		.loc 1 246 13 is_stmt 1
 421              	.LBB209:
 422              	.LBB210:
 117:src/../h/Riscv.hpp **** }
 423              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 424              		.loc 2 117 65 is_stmt 0
GAS LISTING /tmp/cc461iP7.s 			page 17


 425              	#APP
 426              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 427              		csrw sepc, s1
 428              	# 0 "" 2
 429              		.loc 2 118 1
 430              	#NO_APP
 431 0134 6FF01FF3 		j	.L3
 432              	.LVL15:
 433              	.L28:
 434              	.LBE210:
 435              	.LBE209:
 436              	.LBE198:
 437              	.LBE197:
 438              	.LBE224:
 439              	.LBE236:
 440              	.LBE249:
 441              	.LBE271:
 442              	.LBE290:
 443              	.LBE306:
 444              	.LBE323:
 445              	.LBE341:
 446              	.LBE360:
 447              	.LBE380:
 448              	.LBB381:
 449              	.LBB178:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 450              		.loc 1 32 13 is_stmt 1
 451              	.LBB179:
 452              	.LBB180:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 453              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 454              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 455              		.loc 2 111 64 is_stmt 0
 456              	#APP
 457              	# 111 "src/../h/Riscv.hpp" 1
 458              		csrr a5, sepc
 459              	# 0 "" 2
 460              	#NO_APP
 461 013c 2334F4F0 		sd	a5,-248(s0)
 112:src/../h/Riscv.hpp **** }
 462              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 463              		.loc 2 112 12 is_stmt 0
 464 0140 033984F0 		ld	s2,-248(s0)
 465              	.LBE180:
 466              	.LBE179:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 467              		.loc 1 32 38
 468 0144 13094900 		addi	s2,s2,4
 469              	.LVL16:
  33:src/Riscv.cpp **** 
 470              		.loc 1 33 13 is_stmt 1
 471              	.LBB181:
 472              	.LBB182:
GAS LISTING /tmp/cc461iP7.s 			page 18


 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 473              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 474              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 475              		.loc 2 181 76 is_stmt 0
 476              	#APP
 477              	# 181 "src/../h/Riscv.hpp" 1
 478              		csrr a5, sstatus
 479              	# 0 "" 2
 480              	#NO_APP
 481 014c 2330F4F0 		sd	a5,-256(s0)
 182:src/../h/Riscv.hpp **** }
 482              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 483              		.loc 2 182 12 is_stmt 0
 484 0150 833904F0 		ld	s3,-256(s0)
 485              	.LVL17:
 486              	.LBE182:
 487              	.LBE181:
  36:src/Riscv.cpp ****             _thread::Body arg2;
 488              		.loc 1 36 13 is_stmt 1
  37:src/Riscv.cpp ****             uint64 arg3;
 489              		.loc 1 37 13
  38:src/Riscv.cpp ****             uint64 *arg4;
 490              		.loc 1 38 13
  39:src/Riscv.cpp **** 
 491              		.loc 1 39 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 492              		.loc 1 41 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 493              		.loc 1 41 48 is_stmt 0
 494              	#APP
 495              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 496              		ld a1, 11*8(fp)
 497              	# 0 "" 2
 498              		.loc 1 42 13 is_stmt 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 499              		.loc 1 42 48 is_stmt 0
 500              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 501              		ld a2, 12*8(fp)
 502              	# 0 "" 2
 503              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 504              		.loc 1 43 48 is_stmt 0
 505              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 506              		ld a3, 13*8(fp)
 507              	# 0 "" 2
 508              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp **** 
 509              		.loc 1 44 48 is_stmt 0
 510              	# 44 "src/Riscv.cpp" 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 511              		ld a4, 14*8(fp)
GAS LISTING /tmp/cc461iP7.s 			page 19


 512              	# 0 "" 2
 513              		.loc 1 47 13 is_stmt 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 514              		.loc 1 47 56 is_stmt 0
 515              	# 47 "src/Riscv.cpp" 1
 516              		mv s4, a1
 517              	# 0 "" 2
 518              	.LVL18:
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 519              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 520              		.loc 1 48 56 is_stmt 0
 521              	# 48 "src/Riscv.cpp" 1
 522              		mv a0, a2
 523              	# 0 "" 2
 524              	.LVL19:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 525              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 526              		.loc 1 49 56 is_stmt 0
 527              	# 49 "src/Riscv.cpp" 1
 528              		mv a1, a3
 529              	# 0 "" 2
 530              	.LVL20:
  50:src/Riscv.cpp **** 
 531              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp **** 
 532              		.loc 1 50 56 is_stmt 0
 533              	# 50 "src/Riscv.cpp" 1
 534              		mv a2, a4
 535              	# 0 "" 2
 536              	.LVL21:
  53:src/Riscv.cpp ****             *arg1=t;
 537              		.loc 1 53 13 is_stmt 1
  53:src/Riscv.cpp ****             *arg1=t;
 538              		.loc 1 53 47 is_stmt 0
 539              	#NO_APP
 540 0174 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 540      E7800000 
 541              	.LVL22:
  54:src/Riscv.cpp **** 
 542              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp **** 
 543              		.loc 1 54 18 is_stmt 0
 544 017c 2330AA00 		sd	a0,0(s4)
  56:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 545              		.loc 1 56 13 is_stmt 1
  57:src/Riscv.cpp ****             else ret =-1;
 546              		.loc 1 57 13
 547 0180 630C0500 		beqz	a0,.L23
  57:src/Riscv.cpp ****             else ret =-1;
 548              		.loc 1 57 31 is_stmt 0
 549 0184 93070000 		li	a5,0
 550              	.L6:
 551              	.LVL23:
  62:src/Riscv.cpp **** 
 552              		.loc 1 62 13 is_stmt 1
GAS LISTING /tmp/cc461iP7.s 			page 20


  62:src/Riscv.cpp **** 
 553              		.loc 1 62 56 is_stmt 0
 554              	#APP
 555              	# 62 "src/Riscv.cpp" 1
  64:src/Riscv.cpp ****             w_sepc(sepc);
 556              		mv a0, a5
 557              	# 0 "" 2
 558              		.loc 1 64 13 is_stmt 1
 559              	.LVL24:
 560              	#NO_APP
 561              	.LBB183:
 562              	.LBB184:
 187:src/../h/Riscv.hpp **** }
 563              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 564              		.loc 2 187 77 is_stmt 0
 565              	#APP
 566              	# 187 "src/../h/Riscv.hpp" 1
 567              		csrw sstatus, s3
 568              	# 0 "" 2
 569              	.LVL25:
 570              	#NO_APP
 571              	.LBE184:
 572              	.LBE183:
  65:src/Riscv.cpp ****         }
 573              		.loc 1 65 13 is_stmt 1
 574              	.LBB185:
 575              	.LBB186:
 117:src/../h/Riscv.hpp **** }
 576              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 577              		.loc 2 117 65 is_stmt 0
 578              	#APP
 579              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 580              		csrw sepc, s2
 581              	# 0 "" 2
 582              		.loc 2 118 1
 583              	#NO_APP
 584 0194 6FF09FEF 		j	.L5
 585              	.LVL26:
 586              	.L23:
 587              	.LBE186:
 588              	.LBE185:
  58:src/Riscv.cpp **** 
 589              		.loc 1 58 22
 590 0198 9307F0FF 		li	a5,-1
 591 019c 6FF0DFFE 		j	.L6
 592              	.LVL27:
 593              	.L29:
 594              	.LBE178:
 595              	.LBE381:
 596              	.LBB382:
 597              	.LBB361:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 598              		.loc 1 68 13 is_stmt 1
 599              	.LBB362:
GAS LISTING /tmp/cc461iP7.s 			page 21


 600              	.LBB363:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 601              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 602              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 603              		.loc 2 111 64 is_stmt 0
 604              	#APP
 605              	# 111 "src/../h/Riscv.hpp" 1
 606              		csrr a5, sepc
 607              	# 0 "" 2
 608              	#NO_APP
 609 01a4 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 610              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 611              		.loc 2 112 12 is_stmt 0
 612 01a8 833484F1 		ld	s1,-232(s0)
 613              	.LVL28:
 614              	.LBE363:
 615              	.LBE362:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 616              		.loc 1 68 38
 617 01ac 93844400 		addi	s1,s1,4
 618              	.LVL29:
  69:src/Riscv.cpp ****             //kmem_alloc
 619              		.loc 1 69 13 is_stmt 1
 620              	.LBB364:
 621              	.LBB365:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 622              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 623              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 624              		.loc 2 181 76 is_stmt 0
 625              	#APP
 626              	# 181 "src/../h/Riscv.hpp" 1
 627              		csrr a5, sstatus
 628              	# 0 "" 2
 629              	#NO_APP
 630 01b4 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 631              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 632              		.loc 2 182 12 is_stmt 0
 633 01b8 033904F1 		ld	s2,-240(s0)
 634              	.LVL30:
 635              	.LBE365:
 636              	.LBE364:
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 637              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 638              		.loc 1 71 56 is_stmt 0
 639              	#APP
 640              	# 71 "src/Riscv.cpp" 1
 641              		mv a0, a1
 642              	# 0 "" 2
GAS LISTING /tmp/cc461iP7.s 			page 22


 643              	.LVL31:
  72:src/Riscv.cpp **** 
 644              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp **** 
 645              		.loc 1 72 61 is_stmt 0
 646              	#NO_APP
 647 01c0 13156500 		slli	a0,a0,6
 648              	.LVL32:
 649 01c4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 649      E7800000 
 650              	.LVL33:
  75:src/Riscv.cpp **** 
 651              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 652              		.loc 1 75 56 is_stmt 0
 653              	#APP
 654              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 655              		mv a0, a0
 656              	# 0 "" 2
 657              		.loc 1 77 13 is_stmt 1
 658              	.LVL34:
 659              	#NO_APP
 660              	.LBB366:
 661              	.LBB367:
 187:src/../h/Riscv.hpp **** }
 662              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 663              		.loc 2 187 77 is_stmt 0
 664              	#APP
 665              	# 187 "src/../h/Riscv.hpp" 1
 666              		csrw sstatus, s2
 667              	# 0 "" 2
 668              	.LVL35:
 669              	#NO_APP
 670              	.LBE367:
 671              	.LBE366:
  78:src/Riscv.cpp ****         }
 672              		.loc 1 78 13 is_stmt 1
 673              	.LBB368:
 674              	.LBB369:
 117:src/../h/Riscv.hpp **** }
 675              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 676              		.loc 2 117 65 is_stmt 0
 677              	#APP
 678              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 679              		csrw sepc, s1
 680              	# 0 "" 2
 681              		.loc 2 118 1
 682              	#NO_APP
 683 01d8 6FF0DFE8 		j	.L3
 684              	.LVL36:
 685              	.L30:
 686              	.LBE369:
 687              	.LBE368:
GAS LISTING /tmp/cc461iP7.s 			page 23


 688              	.LBE361:
 689              	.LBB370:
 690              	.LBB342:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 691              		.loc 1 81 13 is_stmt 1
 692              	.LBB343:
 693              	.LBB344:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 694              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 695              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 696              		.loc 2 111 64 is_stmt 0
 697              	#APP
 698              	# 111 "src/../h/Riscv.hpp" 1
 699              		csrr a5, sepc
 700              	# 0 "" 2
 701              	#NO_APP
 702 01e0 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 703              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 704              		.loc 2 112 12 is_stmt 0
 705 01e4 833484F2 		ld	s1,-216(s0)
 706              	.LVL37:
 707              	.LBE344:
 708              	.LBE343:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 709              		.loc 1 81 38
 710 01e8 93844400 		addi	s1,s1,4
 711              	.LVL38:
  82:src/Riscv.cpp **** 
 712              		.loc 1 82 13 is_stmt 1
 713              	.LBB345:
 714              	.LBB346:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 715              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 716              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 717              		.loc 2 181 76 is_stmt 0
 718              	#APP
 719              	# 181 "src/../h/Riscv.hpp" 1
 720              		csrr a5, sstatus
 721              	# 0 "" 2
 722              	#NO_APP
 723 01f0 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 724              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 725              		.loc 2 182 12 is_stmt 0
 726 01f4 033904F2 		ld	s2,-224(s0)
 727              	.LVL39:
 728              	.LBE346:
 729              	.LBE345:
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 730              		.loc 1 84 13 is_stmt 1
GAS LISTING /tmp/cc461iP7.s 			page 24


  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 731              		.loc 1 84 56 is_stmt 0
 732              	#APP
 733              	# 84 "src/Riscv.cpp" 1
 734              		mv a0, a1
 735              	# 0 "" 2
 736              	.LVL40:
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 737              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 738              		.loc 1 85 49 is_stmt 0
 739              	#NO_APP
 740 01fc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 740      E7800000 
 741              	.LVL41:
  86:src/Riscv.cpp **** 
 742              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 743              		.loc 1 86 56 is_stmt 0
 744              	#APP
 745              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             w_sepc(sepc);
 746              		mv a0, a0
 747              	# 0 "" 2
 748              		.loc 1 88 13 is_stmt 1
 749              	.LVL42:
 750              	#NO_APP
 751              	.LBB347:
 752              	.LBB348:
 187:src/../h/Riscv.hpp **** }
 753              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 754              		.loc 2 187 77 is_stmt 0
 755              	#APP
 756              	# 187 "src/../h/Riscv.hpp" 1
 757              		csrw sstatus, s2
 758              	# 0 "" 2
 759              	.LVL43:
 760              	#NO_APP
 761              	.LBE348:
 762              	.LBE347:
  89:src/Riscv.cpp ****         }
 763              		.loc 1 89 13 is_stmt 1
 764              	.LBB349:
 765              	.LBB350:
 117:src/../h/Riscv.hpp **** }
 766              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 767              		.loc 2 117 65 is_stmt 0
 768              	#APP
 769              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 770              		csrw sepc, s1
 771              	# 0 "" 2
 772              		.loc 2 118 1
 773              	#NO_APP
 774 0210 6FF05FE5 		j	.L3
GAS LISTING /tmp/cc461iP7.s 			page 25


 775              	.LVL44:
 776              	.L31:
 777              	.LBE350:
 778              	.LBE349:
 779              	.LBE342:
 780              	.LBB351:
 781              	.LBB324:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 782              		.loc 1 93 13 is_stmt 1
 783              	.LBB325:
 784              	.LBB326:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 785              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 786              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 787              		.loc 2 111 64 is_stmt 0
 788              	#APP
 789              	# 111 "src/../h/Riscv.hpp" 1
 790              		csrr a5, sepc
 791              	# 0 "" 2
 792              	#NO_APP
 793 0218 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 794              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 795              		.loc 2 112 12 is_stmt 0
 796 021c 833484F3 		ld	s1,-200(s0)
 797              	.LVL45:
 798              	.LBE326:
 799              	.LBE325:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 800              		.loc 1 93 38
 801 0220 93844400 		addi	s1,s1,4
 802              	.LVL46:
  94:src/Riscv.cpp **** 
 803              		.loc 1 94 13 is_stmt 1
 804              	.LBB327:
 805              	.LBB328:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 806              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 807              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 808              		.loc 2 181 76 is_stmt 0
 809              	#APP
 810              	# 181 "src/../h/Riscv.hpp" 1
 811              		csrr a5, sstatus
 812              	# 0 "" 2
 813              	#NO_APP
 814 0228 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 815              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 816              		.loc 2 182 12 is_stmt 0
 817 022c 033904F3 		ld	s2,-208(s0)
 818              	.LVL47:
GAS LISTING /tmp/cc461iP7.s 			page 26


 819              	.LBE328:
 820              	.LBE327:
  96:src/Riscv.cpp ****             _thread::dispatch();
 821              		.loc 1 96 13 is_stmt 1
  96:src/Riscv.cpp ****             _thread::dispatch();
 822              		.loc 1 96 31 is_stmt 0
 823 0230 97070000 		la	a5,_ZN7_thread7runningE
 823      83B70700 
 824 0238 83B70700 		ld	a5,0(a5)
  96:src/Riscv.cpp ****             _thread::dispatch();
 825              		.loc 1 96 39
 826 023c 13071000 		li	a4,1
 827 0240 2384E702 		sb	a4,40(a5)
  97:src/Riscv.cpp **** 
 828              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp **** 
 829              		.loc 1 97 30 is_stmt 0
 830 0244 97000000 		call	_ZN7_thread8dispatchEv@plt
 830      E7800000 
 831              	.LVL48:
  99:src/Riscv.cpp ****             w_sepc(sepc);
 832              		.loc 1 99 13 is_stmt 1
 833              	.LBB329:
 834              	.LBB330:
 187:src/../h/Riscv.hpp **** }
 835              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 836              		.loc 2 187 77 is_stmt 0
 837              	#APP
 838              	# 187 "src/../h/Riscv.hpp" 1
 839              		csrw sstatus, s2
 840              	# 0 "" 2
 841              	.LVL49:
 842              	#NO_APP
 843              	.LBE330:
 844              	.LBE329:
 100:src/Riscv.cpp **** 
 845              		.loc 1 100 13 is_stmt 1
 846              	.LBB331:
 847              	.LBB332:
 117:src/../h/Riscv.hpp **** }
 848              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 849              		.loc 2 117 65 is_stmt 0
 850              	#APP
 851              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 852              		csrw sepc, s1
 853              	# 0 "" 2
 854              		.loc 2 118 1
 855              	#NO_APP
 856 0254 6FF01FE1 		j	.L3
 857              	.LVL50:
 858              	.L32:
 859              	.LBE332:
 860              	.LBE331:
 861              	.LBE324:
GAS LISTING /tmp/cc461iP7.s 			page 27


 862              	.LBB333:
 863              	.LBB307:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 864              		.loc 1 106 13 is_stmt 1
 865              	.LBB308:
 866              	.LBB309:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 867              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 868              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 869              		.loc 2 111 64 is_stmt 0
 870              	#APP
 871              	# 111 "src/../h/Riscv.hpp" 1
 872              		csrr a5, sepc
 873              	# 0 "" 2
 874              	#NO_APP
 875 025c 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 876              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 877              		.loc 2 112 12 is_stmt 0
 878 0260 833484F4 		ld	s1,-184(s0)
 879              	.LVL51:
 880              	.LBE309:
 881              	.LBE308:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 882              		.loc 1 106 38
 883 0264 93844400 		addi	s1,s1,4
 884              	.LVL52:
 107:src/Riscv.cpp **** 
 885              		.loc 1 107 13 is_stmt 1
 886              	.LBB310:
 887              	.LBB311:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 888              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 889              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 890              		.loc 2 181 76 is_stmt 0
 891              	#APP
 892              	# 181 "src/../h/Riscv.hpp" 1
 893              		csrr a5, sstatus
 894              	# 0 "" 2
 895              	#NO_APP
 896 026c 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 897              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 898              		.loc 2 182 12 is_stmt 0
 899 0270 033904F4 		ld	s2,-192(s0)
 900              	.LVL53:
 901              	.LBE311:
 902              	.LBE310:
 110:src/Riscv.cpp **** 
 903              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 28


 904              		.loc 1 110 30 is_stmt 0
 905 0274 97000000 		call	_ZN7_thread8dispatchEv@plt
 905      E7800000 
 906              	.LVL54:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 907              		.loc 1 112 13 is_stmt 1
 908              	.LBB312:
 909              	.LBB313:
 187:src/../h/Riscv.hpp **** }
 910              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 911              		.loc 2 187 77 is_stmt 0
 912              	#APP
 913              	# 187 "src/../h/Riscv.hpp" 1
 914              		csrw sstatus, s2
 915              	# 0 "" 2
 916              	.LVL55:
 917              	#NO_APP
 918              	.LBE313:
 919              	.LBE312:
 113:src/Riscv.cpp ****         }
 920              		.loc 1 113 13 is_stmt 1
 921              	.LBB314:
 922              	.LBB315:
 117:src/../h/Riscv.hpp **** }
 923              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 924              		.loc 2 117 65 is_stmt 0
 925              	#APP
 926              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 927              		csrw sepc, s1
 928              	# 0 "" 2
 929              		.loc 2 118 1
 930              	#NO_APP
 931 0284 6FF01FDE 		j	.L3
 932              	.LVL56:
 933              	.L33:
 934              	.LBE315:
 935              	.LBE314:
 936              	.LBE307:
 937              	.LBB316:
 938              	.LBB291:
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 939              		.loc 1 118 13 is_stmt 1
 940              	.LBB292:
 941              	.LBB293:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 942              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 943              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 944              		.loc 2 111 64 is_stmt 0
 945              	#APP
 946              	# 111 "src/../h/Riscv.hpp" 1
 947              		csrr a5, sepc
 948              	# 0 "" 2
GAS LISTING /tmp/cc461iP7.s 			page 29


 949              	#NO_APP
 950 028c 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 951              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 952              		.loc 2 112 12 is_stmt 0
 953 0290 833484F5 		ld	s1,-168(s0)
 954              	.LVL57:
 955              	.LBE293:
 956              	.LBE292:
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 957              		.loc 1 118 38
 958 0294 93844400 		addi	s1,s1,4
 959              	.LVL58:
 119:src/Riscv.cpp **** 
 960              		.loc 1 119 13 is_stmt 1
 961              	.LBB294:
 962              	.LBB295:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 963              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 964              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 965              		.loc 2 181 76 is_stmt 0
 966              	#APP
 967              	# 181 "src/../h/Riscv.hpp" 1
 968              		csrr a5, sstatus
 969              	# 0 "" 2
 970              	#NO_APP
 971 029c 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 972              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 973              		.loc 2 182 12 is_stmt 0
 974 02a0 033904F5 		ld	s2,-176(s0)
 975              	.LVL59:
 976              	.LBE295:
 977              	.LBE294:
 121:src/Riscv.cpp ****             _thread::dispatch();
 978              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp ****             _thread::dispatch();
 979              		.loc 1 121 39 is_stmt 0
 980 02a4 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 980      83B70700 
 981 02ac 23B00700 		sd	zero,0(a5)
 122:src/Riscv.cpp **** 
 982              		.loc 1 122 13 is_stmt 1
 122:src/Riscv.cpp **** 
 983              		.loc 1 122 30 is_stmt 0
 984 02b0 97000000 		call	_ZN7_thread8dispatchEv@plt
 984      E7800000 
 985              	.LVL60:
 124:src/Riscv.cpp ****             w_sepc(sepc);
 986              		.loc 1 124 13 is_stmt 1
 987              	.LBB296:
 988              	.LBB297:
 187:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc461iP7.s 			page 30


 989              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 990              		.loc 2 187 77 is_stmt 0
 991              	#APP
 992              	# 187 "src/../h/Riscv.hpp" 1
 993              		csrw sstatus, s2
 994              	# 0 "" 2
 995              	.LVL61:
 996              	#NO_APP
 997              	.LBE297:
 998              	.LBE296:
 125:src/Riscv.cpp ****         }
 999              		.loc 1 125 13 is_stmt 1
 1000              	.LBB298:
 1001              	.LBB299:
 117:src/../h/Riscv.hpp **** }
 1002              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1003              		.loc 2 117 65 is_stmt 0
 1004              	#APP
 1005              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1006              		csrw sepc, s1
 1007              	# 0 "" 2
 1008              		.loc 2 118 1
 1009              	#NO_APP
 1010 02c0 6FF05FDA 		j	.L3
 1011              	.LVL62:
 1012              	.L34:
 1013              	.LBE299:
 1014              	.LBE298:
 1015              	.LBE291:
 1016              	.LBB300:
 1017              	.LBB272:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1018              		.loc 1 128 13 is_stmt 1
 1019              	.LBB273:
 1020              	.LBB274:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1021              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1022              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1023              		.loc 2 111 64 is_stmt 0
 1024              	#APP
 1025              	# 111 "src/../h/Riscv.hpp" 1
 1026              		csrr a5, sepc
 1027              	# 0 "" 2
 1028              	#NO_APP
 1029 02c8 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 1030              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1031              		.loc 2 112 12 is_stmt 0
 1032 02cc 833484F6 		ld	s1,-152(s0)
 1033              	.LVL63:
 1034              	.LBE274:
GAS LISTING /tmp/cc461iP7.s 			page 31


 1035              	.LBE273:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1036              		.loc 1 128 38
 1037 02d0 93844400 		addi	s1,s1,4
 1038              	.LVL64:
 129:src/Riscv.cpp **** 
 1039              		.loc 1 129 13 is_stmt 1
 1040              	.LBB275:
 1041              	.LBB276:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1042              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1043              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1044              		.loc 2 181 76 is_stmt 0
 1045              	#APP
 1046              	# 181 "src/../h/Riscv.hpp" 1
 1047              		csrr a5, sstatus
 1048              	# 0 "" 2
 1049              	#NO_APP
 1050 02d8 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 1051              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1052              		.loc 2 182 12 is_stmt 0
 1053 02dc 033904F6 		ld	s2,-160(s0)
 1054              	.LVL65:
 1055              	.LBE276:
 1056              	.LBE275:
 131:src/Riscv.cpp ****            uint64 arg2;
 1057              		.loc 1 131 12 is_stmt 1
 132:src/Riscv.cpp **** 
 1058              		.loc 1 132 12
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1059              		.loc 1 134 13
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1060              		.loc 1 134 48 is_stmt 0
 1061              	#APP
 1062              	# 134 "src/Riscv.cpp" 1
 135:src/Riscv.cpp **** 
 1063              		ld a1, 11*8(fp)
 1064              	# 0 "" 2
 1065              		.loc 1 135 13 is_stmt 1
 135:src/Riscv.cpp **** 
 1066              		.loc 1 135 48 is_stmt 0
 1067              	# 135 "src/Riscv.cpp" 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1068              		ld a2, 12*8(fp)
 1069              	# 0 "" 2
 1070              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1071              		.loc 1 137 56 is_stmt 0
 1072              	# 137 "src/Riscv.cpp" 1
 1073              		mv s3, a1
 1074              	# 0 "" 2
 1075              	.LVL66:
 138:src/Riscv.cpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 32


 1076              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp **** 
 1077              		.loc 1 138 56 is_stmt 0
 1078              	# 138 "src/Riscv.cpp" 1
 1079              		mv s4, a2
 1080              	# 0 "" 2
 1081              	.LVL67:
 140:src/Riscv.cpp ****             *arg1=sem;
 1082              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp ****             *arg1=sem;
 1083              		.loc 1 140 50 is_stmt 0
 1084              	#NO_APP
 1085 02f0 13058001 		li	a0,24
 1086 02f4 97000000 		call	_ZN10KSemaphorenwEm@plt
 1086      E7800000 
 1087              	.LVL68:
 1088              	.LBB277:
 1089              	.LBB278:
 1090              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1091              		.loc 3 14 40
 1092 02fc 23204501 		sw	s4,0(a0)
 1093              	.LVL69:
 1094              	.LBB279:
 1095              	.LBB280:
 1096              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 33


  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1097              		.loc 4 26 29
 1098 0300 23340500 		sd	zero,8(a0)
 1099 0304 23380500 		sd	zero,16(a0)
 1100              	.LVL70:
 1101              	.LBE280:
 1102              	.LBE279:
 1103              	.LBE278:
 1104              	.LBE277:
 141:src/Riscv.cpp **** 
 1105              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 1106              		.loc 1 141 18 is_stmt 0
 1107 0308 23B0A900 		sd	a0,0(s3)
 143:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1108              		.loc 1 143 13 is_stmt 1
 1109              	.LVL71:
 144:src/Riscv.cpp ****             else ret=-1;
 1110              		.loc 1 144 13
 1111 030c 630C0500 		beqz	a0,.L24
 144:src/Riscv.cpp ****             else ret=-1;
 1112              		.loc 1 144 33 is_stmt 0
 1113 0310 93070000 		li	a5,0
 1114              	.L14:
 1115              	.LVL72:
 147:src/Riscv.cpp **** 
 1116              		.loc 1 147 13 is_stmt 1
 147:src/Riscv.cpp **** 
 1117              		.loc 1 147 56 is_stmt 0
 1118              	#APP
 1119              	# 147 "src/Riscv.cpp" 1
 149:src/Riscv.cpp ****             w_sepc(sepc);
 1120              		mv a0, a5
 1121              	# 0 "" 2
 1122              		.loc 1 149 13 is_stmt 1
 1123              	.LVL73:
 1124              	#NO_APP
 1125              	.LBB281:
 1126              	.LBB282:
 187:src/../h/Riscv.hpp **** }
 1127              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1128              		.loc 2 187 77 is_stmt 0
 1129              	#APP
 1130              	# 187 "src/../h/Riscv.hpp" 1
 1131              		csrw sstatus, s2
 1132              	# 0 "" 2
 1133              	.LVL74:
 1134              	#NO_APP
 1135              	.LBE282:
GAS LISTING /tmp/cc461iP7.s 			page 34


 1136              	.LBE281:
 150:src/Riscv.cpp ****         }
 1137              		.loc 1 150 13 is_stmt 1
 1138              	.LBB283:
 1139              	.LBB284:
 117:src/../h/Riscv.hpp **** }
 1140              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1141              		.loc 2 117 65 is_stmt 0
 1142              	#APP
 1143              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1144              		csrw sepc, s1
 1145              	# 0 "" 2
 1146              		.loc 2 118 1
 1147              	#NO_APP
 1148 0320 6FF05FD4 		j	.L3
 1149              	.LVL75:
 1150              	.L24:
 1151              	.LBE284:
 1152              	.LBE283:
 145:src/Riscv.cpp **** 
 1153              		.loc 1 145 21
 1154 0324 9307F0FF 		li	a5,-1
 1155 0328 6FF0DFFE 		j	.L14
 1156              	.LVL76:
 1157              	.L35:
 1158              	.LBE272:
 1159              	.LBB285:
 1160              	.LBB250:
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1161              		.loc 1 153 13 is_stmt 1
 1162              	.LBB251:
 1163              	.LBB252:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1164              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1165              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1166              		.loc 2 111 64 is_stmt 0
 1167              	#APP
 1168              	# 111 "src/../h/Riscv.hpp" 1
 1169              		csrr a5, sepc
 1170              	# 0 "" 2
 1171              	#NO_APP
 1172 0330 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1173              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1174              		.loc 2 112 12 is_stmt 0
 1175 0334 833984F7 		ld	s3,-136(s0)
 1176              	.LBE252:
 1177              	.LBE251:
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1178              		.loc 1 153 38
 1179 0338 93894900 		addi	s3,s3,4
 1180              	.LVL77:
GAS LISTING /tmp/cc461iP7.s 			page 35


 154:src/Riscv.cpp **** 
 1181              		.loc 1 154 13 is_stmt 1
 1182              	.LBB253:
 1183              	.LBB254:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1184              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1185              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1186              		.loc 2 181 76 is_stmt 0
 1187              	#APP
 1188              	# 181 "src/../h/Riscv.hpp" 1
 1189              		csrr a5, sstatus
 1190              	# 0 "" 2
 1191              	#NO_APP
 1192 0340 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1193              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1194              		.loc 2 182 12 is_stmt 0
 1195 0344 033A04F7 		ld	s4,-144(s0)
 1196              	.LVL78:
 1197              	.LBE254:
 1198              	.LBE253:
 156:src/Riscv.cpp **** 
 1199              		.loc 1 156 13 is_stmt 1
 159:src/Riscv.cpp **** 
 1200              		.loc 1 159 13
 159:src/Riscv.cpp **** 
 1201              		.loc 1 159 48 is_stmt 0
 1202              	#APP
 1203              	# 159 "src/Riscv.cpp" 1
 161:src/Riscv.cpp **** 
 1204              		ld a1, 11*8(fp)
 1205              	# 0 "" 2
 1206              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp **** 
 1207              		.loc 1 161 56 is_stmt 0
 1208              	# 161 "src/Riscv.cpp" 1
 1209              		mv s1, a1
 1210              	# 0 "" 2
 1211              	.LVL79:
 163:src/Riscv.cpp **** 
 1212              		.loc 1 163 13 is_stmt 1
 1213              	#NO_APP
 1214 0350 6F004003 		j	.L18
 1215              	.LVL80:
 1216              	.L39:
 1217              	.LBB255:
 1218              	.LBB256:
 1219              	.LBB257:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
GAS LISTING /tmp/cc461iP7.s 			page 36


  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1220              		.loc 4 70 22 is_stmt 0
 1221 0354 23B80400 		sd	zero,16(s1)
 1222              	.L17:
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1223              		.loc 4 72 12
 1224 0358 03390500 		ld	s2,0(a0)
 1225              	.LVL81:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1226              		.loc 4 73 35
 1227 035c 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1227      E7800000 
 1228              	.LVL82:
 1229              	.LBE257:
 1230              	.LBE256:
 168:src/Riscv.cpp ****                 sem->val++;
 1231              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 sem->val++;
 1232              		.loc 1 168 29 is_stmt 0
GAS LISTING /tmp/cc461iP7.s 			page 37


 1233 0364 93071000 		li	a5,1
 1234 0368 230CF902 		sb	a5,56(s2)
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1235              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1236              		.loc 1 169 22 is_stmt 0
 1237 036c 83A70400 		lw	a5,0(s1)
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1238              		.loc 1 169 25
 1239 0370 9B871700 		addiw	a5,a5,1
 1240 0374 23A0F400 		sw	a5,0(s1)
 170:src/Riscv.cpp ****             }
 1241              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****             }
 1242              		.loc 1 170 31 is_stmt 0
 1243 0378 13050900 		mv	a0,s2
 1244 037c 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1244      E7800000 
 1245              	.LVL83:
 1246              	.L18:
 1247              	.LBE255:
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1248              		.loc 1 166 13 is_stmt 1
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1249              		.loc 1 166 43
 1250              	.LBB260:
 1251              	.LBB261:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1252              		.loc 4 79 14 is_stmt 0
 1253 0384 03B58400 		ld	a0,8(s1)
 1254              		.loc 4 79 9
 1255 0388 630E0500 		beqz	a0,.L16
  80:src/../h/List.hpp ****         return head->data;
 1256              		.loc 4 80 22
 1257 038c 83370500 		ld	a5,0(a0)
 1258              	.LVL84:
 1259              	.LBE261:
 1260              	.LBE260:
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1261              		.loc 1 166 43
 1262 0390 638A0700 		beqz	a5,.L16
 1263              	.LBB262:
 167:src/Riscv.cpp ****                 t->deblocked=true;
 1264              		.loc 1 167 17 is_stmt 1
 1265              	.LVL85:
 1266              	.LBB259:
 1267              	.LBB258:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1268              		.loc 4 69 22 is_stmt 0
 1269 0394 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1270              		.loc 4 69 9
GAS LISTING /tmp/cc461iP7.s 			page 38


 1271 0398 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1272              		.loc 4 70 9
 1273 039c E39E07FA 		bnez	a5,.L17
 1274 03a0 6FF05FFB 		j	.L39
 1275              	.LVL86:
 1276              	.L16:
 1277              	.LBE258:
 1278              	.LBE259:
 1279              	.LBE262:
 173:src/Riscv.cpp **** 
 1280              		.loc 1 173 13 is_stmt 1
 173:src/Riscv.cpp **** 
 1281              		.loc 1 173 23 is_stmt 0
 1282 03a4 63880400 		beqz	s1,.L19
 173:src/Riscv.cpp **** 
 1283              		.loc 1 173 20 discriminator 1
 1284 03a8 13850400 		mv	a0,s1
 1285 03ac 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1285      E7800000 
 1286              	.LVL87:
 1287              	.L19:
 175:src/Riscv.cpp ****             w_sepc(sepc);
 1288              		.loc 1 175 13 is_stmt 1
 1289              	.LBB263:
 1290              	.LBB264:
 187:src/../h/Riscv.hpp **** }
 1291              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1292              		.loc 2 187 77 is_stmt 0
 1293              	#APP
 1294              	# 187 "src/../h/Riscv.hpp" 1
 1295              		csrw sstatus, s4
 1296              	# 0 "" 2
 1297              	.LVL88:
 1298              	#NO_APP
 1299              	.LBE264:
 1300              	.LBE263:
 176:src/Riscv.cpp ****         }
 1301              		.loc 1 176 13 is_stmt 1
 1302              	.LBB265:
 1303              	.LBB266:
 117:src/../h/Riscv.hpp **** }
 1304              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1305              		.loc 2 117 65 is_stmt 0
 1306              	#APP
 1307              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1308              		csrw sepc, s3
 1309              	# 0 "" 2
 1310              		.loc 2 118 1
 1311              	#NO_APP
 1312 03bc 6FF09FCA 		j	.L3
 1313              	.LVL89:
 1314              	.L36:
 1315              	.LBE266:
GAS LISTING /tmp/cc461iP7.s 			page 39


 1316              	.LBE265:
 1317              	.LBE250:
 1318              	.LBB267:
 1319              	.LBB237:
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1320              		.loc 1 179 13 is_stmt 1
 1321              	.LBB238:
 1322              	.LBB239:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1323              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1324              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1325              		.loc 2 111 64 is_stmt 0
 1326              	#APP
 1327              	# 111 "src/../h/Riscv.hpp" 1
 1328              		csrr a5, sepc
 1329              	# 0 "" 2
 1330              	#NO_APP
 1331 03c4 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1332              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1333              		.loc 2 112 12 is_stmt 0
 1334 03c8 833484F8 		ld	s1,-120(s0)
 1335              	.LVL90:
 1336              	.LBE239:
 1337              	.LBE238:
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1338              		.loc 1 179 38
 1339 03cc 93844400 		addi	s1,s1,4
 1340              	.LVL91:
 180:src/Riscv.cpp **** 
 1341              		.loc 1 180 13 is_stmt 1
 1342              	.LBB240:
 1343              	.LBB241:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1344              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1345              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1346              		.loc 2 181 76 is_stmt 0
 1347              	#APP
 1348              	# 181 "src/../h/Riscv.hpp" 1
 1349              		csrr a5, sstatus
 1350              	# 0 "" 2
 1351              	#NO_APP
 1352 03d4 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1353              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1354              		.loc 2 182 12 is_stmt 0
 1355 03d8 033904F8 		ld	s2,-128(s0)
 1356              	.LVL92:
 1357              	.LBE241:
 1358              	.LBE240:
 182:src/Riscv.cpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 40


 1359              		.loc 1 182 13 is_stmt 1
 184:src/Riscv.cpp **** 
 1360              		.loc 1 184 13
 184:src/Riscv.cpp **** 
 1361              		.loc 1 184 48 is_stmt 0
 1362              	#APP
 1363              	# 184 "src/Riscv.cpp" 1
 186:src/Riscv.cpp **** 
 1364              		ld a1, 11*8(fp)
 1365              	# 0 "" 2
 1366              		.loc 1 186 13 is_stmt 1
 186:src/Riscv.cpp **** 
 1367              		.loc 1 186 56 is_stmt 0
 1368              	# 186 "src/Riscv.cpp" 1
 1369              		mv a0, a1
 1370              	# 0 "" 2
 1371              	.LVL93:
 190:src/Riscv.cpp **** 
 1372              		.loc 1 190 13 is_stmt 1
 190:src/Riscv.cpp **** 
 1373              		.loc 1 190 36 is_stmt 0
 1374              	#NO_APP
 1375 03e4 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1375      E7800000 
 1376              	.LVL94:
 192:src/Riscv.cpp **** 
 1377              		.loc 1 192 13 is_stmt 1
 192:src/Riscv.cpp **** 
 1378              		.loc 1 192 56 is_stmt 0
 1379              	#APP
 1380              	# 192 "src/Riscv.cpp" 1
 194:src/Riscv.cpp ****             w_sepc(sepc);
 1381              		mv a0, a0
 1382              	# 0 "" 2
 1383              		.loc 1 194 13 is_stmt 1
 1384              	.LVL95:
 1385              	#NO_APP
 1386              	.LBB242:
 1387              	.LBB243:
 187:src/../h/Riscv.hpp **** }
 1388              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1389              		.loc 2 187 77 is_stmt 0
 1390              	#APP
 1391              	# 187 "src/../h/Riscv.hpp" 1
 1392              		csrw sstatus, s2
 1393              	# 0 "" 2
 1394              	.LVL96:
 1395              	#NO_APP
 1396              	.LBE243:
 1397              	.LBE242:
 195:src/Riscv.cpp ****         }
 1398              		.loc 1 195 13 is_stmt 1
 1399              	.LBB244:
 1400              	.LBB245:
 117:src/../h/Riscv.hpp **** }
 1401              		.loc 2 117 5
GAS LISTING /tmp/cc461iP7.s 			page 41


 117:src/../h/Riscv.hpp **** }
 1402              		.loc 2 117 65 is_stmt 0
 1403              	#APP
 1404              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1405              		csrw sepc, s1
 1406              	# 0 "" 2
 1407              		.loc 2 118 1
 1408              	#NO_APP
 1409 03f8 6FF0DFC6 		j	.L3
 1410              	.LVL97:
 1411              	.L37:
 1412              	.LBE245:
 1413              	.LBE244:
 1414              	.LBE237:
 1415              	.LBB246:
 1416              	.LBB225:
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1417              		.loc 1 198 13 is_stmt 1
 1418              	.LBB226:
 1419              	.LBB227:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1420              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1421              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1422              		.loc 2 111 64 is_stmt 0
 1423              	#APP
 1424              	# 111 "src/../h/Riscv.hpp" 1
 1425              		csrr a5, sepc
 1426              	# 0 "" 2
 1427              	#NO_APP
 1428 0400 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1429              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1430              		.loc 2 112 12 is_stmt 0
 1431 0404 833484F9 		ld	s1,-104(s0)
 1432              	.LVL98:
 1433              	.LBE227:
 1434              	.LBE226:
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1435              		.loc 1 198 38
 1436 0408 93844400 		addi	s1,s1,4
 1437              	.LVL99:
 199:src/Riscv.cpp **** 
 1438              		.loc 1 199 13 is_stmt 1
 1439              	.LBB228:
 1440              	.LBB229:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1441              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1442              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1443              		.loc 2 181 76 is_stmt 0
 1444              	#APP
 1445              	# 181 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cc461iP7.s 			page 42


 1446              		csrr a5, sstatus
 1447              	# 0 "" 2
 1448              	#NO_APP
 1449 0410 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1450              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1451              		.loc 2 182 12 is_stmt 0
 1452 0414 033904F9 		ld	s2,-112(s0)
 1453              	.LVL100:
 1454              	.LBE229:
 1455              	.LBE228:
 201:src/Riscv.cpp **** 
 1456              		.loc 1 201 13 is_stmt 1
 203:src/Riscv.cpp **** 
 1457              		.loc 1 203 13
 203:src/Riscv.cpp **** 
 1458              		.loc 1 203 48 is_stmt 0
 1459              	#APP
 1460              	# 203 "src/Riscv.cpp" 1
 205:src/Riscv.cpp **** 
 1461              		ld a1, 11*8(fp)
 1462              	# 0 "" 2
 1463              		.loc 1 205 13 is_stmt 1
 205:src/Riscv.cpp **** 
 1464              		.loc 1 205 56 is_stmt 0
 1465              	# 205 "src/Riscv.cpp" 1
 1466              		mv a0, a1
 1467              	# 0 "" 2
 1468              	.LVL101:
 208:src/Riscv.cpp **** 
 1469              		.loc 1 208 13 is_stmt 1
 208:src/Riscv.cpp **** 
 1470              		.loc 1 208 25 is_stmt 0
 1471              	#NO_APP
 1472 0420 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1472      E7800000 
 1473              	.LVL102:
 210:src/Riscv.cpp **** 
 1474              		.loc 1 210 13 is_stmt 1
 212:src/Riscv.cpp **** 
 1475              		.loc 1 212 13
 212:src/Riscv.cpp **** 
 1476              		.loc 1 212 56 is_stmt 0
 1477 0428 93070000 		li	a5,0
 1478              	#APP
 1479              	# 212 "src/Riscv.cpp" 1
 214:src/Riscv.cpp ****             w_sepc(sepc);
 1480              		mv a0, a5
 1481              	# 0 "" 2
 1482              		.loc 1 214 13 is_stmt 1
 1483              	.LVL103:
 1484              	#NO_APP
 1485              	.LBB230:
 1486              	.LBB231:
 187:src/../h/Riscv.hpp **** }
 1487              		.loc 2 187 5
GAS LISTING /tmp/cc461iP7.s 			page 43


 187:src/../h/Riscv.hpp **** }
 1488              		.loc 2 187 77 is_stmt 0
 1489              	#APP
 1490              	# 187 "src/../h/Riscv.hpp" 1
 1491              		csrw sstatus, s2
 1492              	# 0 "" 2
 1493              	.LVL104:
 1494              	#NO_APP
 1495              	.LBE231:
 1496              	.LBE230:
 215:src/Riscv.cpp ****         }
 1497              		.loc 1 215 13 is_stmt 1
 1498              	.LBB232:
 1499              	.LBB233:
 117:src/../h/Riscv.hpp **** }
 1500              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1501              		.loc 2 117 65 is_stmt 0
 1502              	#APP
 1503              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1504              		csrw sepc, s1
 1505              	# 0 "" 2
 1506              		.loc 2 118 1
 1507              	#NO_APP
 1508 0438 6FF0DFC2 		j	.L3
 1509              	.LVL105:
 1510              	.L38:
 1511              	.LBE233:
 1512              	.LBE232:
 1513              	.LBE225:
 1514              	.LBB234:
 1515              	.LBB211:
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1516              		.loc 1 218 13 is_stmt 1
 1517              	.LBB212:
 1518              	.LBB213:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1519              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1520              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1521              		.loc 2 111 64 is_stmt 0
 1522              	#APP
 1523              	# 111 "src/../h/Riscv.hpp" 1
 1524              		csrr a5, sepc
 1525              	# 0 "" 2
 1526              	#NO_APP
 1527 0440 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1528              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1529              		.loc 2 112 12 is_stmt 0
 1530 0444 833484FA 		ld	s1,-88(s0)
 1531              	.LVL106:
 1532              	.LBE213:
 1533              	.LBE212:
GAS LISTING /tmp/cc461iP7.s 			page 44


 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1534              		.loc 1 218 38
 1535 0448 93844400 		addi	s1,s1,4
 1536              	.LVL107:
 219:src/Riscv.cpp **** 
 1537              		.loc 1 219 13 is_stmt 1
 1538              	.LBB214:
 1539              	.LBB215:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1540              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1541              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1542              		.loc 2 181 76 is_stmt 0
 1543              	#APP
 1544              	# 181 "src/../h/Riscv.hpp" 1
 1545              		csrr a5, sstatus
 1546              	# 0 "" 2
 1547              	#NO_APP
 1548 0450 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1549              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1550              		.loc 2 182 12 is_stmt 0
 1551 0454 033904FA 		ld	s2,-96(s0)
 1552              	.LVL108:
 1553              	.LBE215:
 1554              	.LBE214:
 222:src/Riscv.cpp ****             char c = __getc();
 1555              		.loc 1 222 13 is_stmt 1
 222:src/Riscv.cpp ****             char c = __getc();
 1556              		.loc 1 222 27 is_stmt 0
 1557 0458 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1557      83B70700 
 1558              	.LVL109:
 1559              	.LBB216:
 1560              	.LBB217:
 129:src/../h/Riscv.hpp **** }
 1561              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1562              		.loc 2 129 69 is_stmt 0
 1563              	#APP
 1564              	# 129 "src/../h/Riscv.hpp" 1
 1565              		csrw stvec, a5
 1566              	# 0 "" 2
 1567              	.LVL110:
 1568              	#NO_APP
 1569              	.LBE217:
 1570              	.LBE216:
 223:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1571              		.loc 1 223 13 is_stmt 1
 223:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1572              		.loc 1 223 28 is_stmt 0
 1573 0464 97000000 		call	__getc@plt
 1573      E7800000 
 1574              	.LVL111:
 224:src/Riscv.cpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 45


 1575              		.loc 1 224 13 is_stmt 1
 224:src/Riscv.cpp **** 
 1576              		.loc 1 224 27 is_stmt 0
 1577 046c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1577      83B70700 
 1578              	.LVL112:
 1579              	.LBB218:
 1580              	.LBB219:
 129:src/../h/Riscv.hpp **** }
 1581              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1582              		.loc 2 129 69 is_stmt 0
 1583              	#APP
 1584              	# 129 "src/../h/Riscv.hpp" 1
 1585              		csrw stvec, a5
 1586              	# 0 "" 2
 1587              	.LVL113:
 1588              	#NO_APP
 1589              	.LBE219:
 1590              	.LBE218:
 226:src/Riscv.cpp **** 
 1591              		.loc 1 226 13 is_stmt 1
 226:src/Riscv.cpp **** 
 1592              		.loc 1 226 54 is_stmt 0
 1593              	#APP
 1594              	# 226 "src/Riscv.cpp" 1
 229:src/Riscv.cpp ****             w_sepc(sepc);
 1595              		mv a0, a0
 1596              	# 0 "" 2
 1597              		.loc 1 229 13 is_stmt 1
 1598              	.LVL114:
 1599              	#NO_APP
 1600              	.LBB220:
 1601              	.LBB221:
 187:src/../h/Riscv.hpp **** }
 1602              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1603              		.loc 2 187 77 is_stmt 0
 1604              	#APP
 1605              	# 187 "src/../h/Riscv.hpp" 1
 1606              		csrw sstatus, s2
 1607              	# 0 "" 2
 1608              	.LVL115:
 1609              	#NO_APP
 1610              	.LBE221:
 1611              	.LBE220:
 230:src/Riscv.cpp ****         }
 1612              		.loc 1 230 13 is_stmt 1
 1613              	.LBB222:
 1614              	.LBB223:
 117:src/../h/Riscv.hpp **** }
 1615              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1616              		.loc 2 117 65 is_stmt 0
 1617              	#APP
 1618              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc461iP7.s 			page 46


 1619              		csrw sepc, s1
 1620              	# 0 "" 2
 1621              		.loc 2 118 1
 1622              	#NO_APP
 1623 0484 6FF01FBE 		j	.L3
 1624              	.LVL116:
 1625              	.L27:
 1626              	.LBE223:
 1627              	.LBE222:
 1628              	.LBE211:
 1629              	.LBE234:
 1630              	.LBE246:
 1631              	.LBE267:
 1632              	.LBE285:
 1633              	.LBE300:
 1634              	.LBE316:
 1635              	.LBE333:
 1636              	.LBE351:
 1637              	.LBE370:
 1638              	.LBE382:
 1639              	.LBB383:
 1640              	.LBB168:
 255:src/Riscv.cpp ****          uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 1641              		.loc 1 255 10 is_stmt 1
 1642              	.LBB169:
 1643              	.LBB170:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1644              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1645              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1646              		.loc 2 111 64 is_stmt 0
 1647              	#APP
 1648              	# 111 "src/../h/Riscv.hpp" 1
 1649              		csrr a5, sepc
 1650              	# 0 "" 2
 1651              	.LVL117:
 1652              	#NO_APP
 1653 048c 2334F4FC 		sd	a5,-56(s0)
 112:src/../h/Riscv.hpp **** }
 1654              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1655              		.loc 2 112 12 is_stmt 0
 1656 0490 033784FC 		ld	a4,-56(s0)
 1657              	.LVL118:
 1658              	.LBE170:
 1659              	.LBE169:
 256:src/Riscv.cpp **** 
 1660              		.loc 1 256 10 is_stmt 1
 1661              	.LBB171:
 1662              	.LBB172:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1663              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1664              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1665              		.loc 2 181 76 is_stmt 0
GAS LISTING /tmp/cc461iP7.s 			page 47


 1666              	#APP
 1667              	# 181 "src/../h/Riscv.hpp" 1
 1668              		csrr a5, sstatus
 1669              	# 0 "" 2
 1670              	#NO_APP
 1671 0498 2330F4FC 		sd	a5,-64(s0)
 182:src/../h/Riscv.hpp **** }
 1672              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1673              		.loc 2 182 12 is_stmt 0
 1674 049c 833704FC 		ld	a5,-64(s0)
 1675              	.LBE172:
 1676              	.LBE171:
 256:src/Riscv.cpp **** 
 1677              		.loc 1 256 54
 1678 04a0 93F7F7EF 		andi	a5,a5,-257
 1679              	.LVL119:
 258:src/Riscv.cpp ****          w_sstatus(sstatus);
 1680              		.loc 1 258 10 is_stmt 1
 258:src/Riscv.cpp ****          w_sstatus(sstatus);
 1681              		.loc 1 258 16 is_stmt 0
 1682 04a4 13074700 		addi	a4,a4,4
 1683              	.LVL120:
 1684              	.LBB173:
 1685              	.LBB174:
 117:src/../h/Riscv.hpp **** }
 1686              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 1687              		.loc 2 117 65 is_stmt 0
 1688              	#APP
 1689              	# 117 "src/../h/Riscv.hpp" 1
 1690              		csrw sepc, a4
 1691              	# 0 "" 2
 1692              	.LVL121:
 1693              	#NO_APP
 1694              	.LBE174:
 1695              	.LBE173:
 259:src/Riscv.cpp ****      }
 1696              		.loc 1 259 10 is_stmt 1
 1697              	.LBB175:
 1698              	.LBB176:
 187:src/../h/Riscv.hpp **** }
 1699              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1700              		.loc 2 187 77 is_stmt 0
 1701              	#APP
 1702              	# 187 "src/../h/Riscv.hpp" 1
 1703              		csrw sstatus, a5
 1704              	# 0 "" 2
 1705              	.LVL122:
 1706              	#NO_APP
 1707              	.LBE176:
 1708              	.LBE175:
 1709              	.LBE168:
 1710              	.LBE383:
 1711              	.LBE396:
 1712              		.loc 1 266 1
GAS LISTING /tmp/cc461iP7.s 			page 48


 1713 04b0 6FF05FBB 		j	.L3
 1714              		.cfi_endproc
 1715              	.LFE50:
 1717              		.align	2
 1718              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1720              	_ZN5Riscv17handleTrapConsoleEv:
 1721              	.LFB51:
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1722              		.loc 1 269 33 is_stmt 1
 1723              		.cfi_startproc
 1724 04b4 130101FE 		addi	sp,sp,-32
 1725              		.cfi_def_cfa_offset 32
 1726 04b8 233C1100 		sd	ra,24(sp)
 1727 04bc 23388100 		sd	s0,16(sp)
 1728              		.cfi_offset 1, -8
 1729              		.cfi_offset 8, -16
 1730 04c0 13040102 		addi	s0,sp,32
 1731              		.cfi_def_cfa 8, 0
 270:src/Riscv.cpp ****     uint64 scause = r_scause();
 1732              		.loc 1 270 5
 1733              	.LBB397:
 1734              	.LBB398:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1735              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1736              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1737              		.loc 2 99 72 is_stmt 0
 1738              	#APP
 1739              	# 99 "src/../h/Riscv.hpp" 1
 1740              		csrr a5, scause
 1741              	# 0 "" 2
 1742              	#NO_APP
 1743 04c8 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1744              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 1745              		.loc 2 100 12 is_stmt 0
 1746 04cc 033784FE 		ld	a4,-24(s0)
 1747              	.LVL123:
 1748              	.LBE398:
 1749              	.LBE397:
 271:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1750              		.loc 1 271 5 is_stmt 1
 1751 04d0 9307F0FF 		li	a5,-1
 1752 04d4 9397F703 		slli	a5,a5,63
 1753 04d8 93879700 		addi	a5,a5,9
 1754 04dc 6302F702 		beq	a4,a5,.L44
 272:src/Riscv.cpp ****         console_handler();
 273:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 274:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1755              		.loc 1 274 12
 1756 04e0 9307F0FF 		li	a5,-1
 1757 04e4 9397F703 		slli	a5,a5,63
 1758 04e8 93871700 		addi	a5,a5,1
GAS LISTING /tmp/cc461iP7.s 			page 49


 1759 04ec 6304F702 		beq	a4,a5,.L45
 1760              	.LVL124:
 1761              	.L40:
 275:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 276:src/Riscv.cpp ****     }
 277:src/Riscv.cpp **** 
 278:src/Riscv.cpp **** }...
 1762              		.loc 1 278 1 is_stmt 0
 1763 04f0 83308101 		ld	ra,24(sp)
 1764              		.cfi_remember_state
 1765              		.cfi_restore 1
 1766 04f4 03340101 		ld	s0,16(sp)
 1767              		.cfi_restore 8
 1768              		.cfi_def_cfa 2, 32
 1769 04f8 13010102 		addi	sp,sp,32
 1770              		.cfi_def_cfa_offset 0
 1771 04fc 67800000 		jr	ra
 1772              	.LVL125:
 1773              	.L44:
 1774              		.cfi_restore_state
 272:src/Riscv.cpp ****         console_handler();
 1775              		.loc 1 272 9 is_stmt 1
 272:src/Riscv.cpp ****         console_handler();
 1776              		.loc 1 272 24 is_stmt 0
 1777 0500 97000000 		call	console_handler@plt
 1777      E7800000 
 1778              	.LVL126:
 273:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 1779              		.loc 1 273 9 is_stmt 1
 1780              	.LBB399:
 1781              	.LBB400:
 151:src/../h/Riscv.hpp **** }
 1782              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1783              		.loc 2 151 64 is_stmt 0
 1784 0508 93070020 		li	a5,512
 1785              	#APP
 1786              	# 151 "src/../h/Riscv.hpp" 1
 152:src/../h/Riscv.hpp **** 
 1787              		csrc sip, a5
 1788              	# 0 "" 2
 1789              		.loc 2 152 1
 1790              	#NO_APP
 1791 0510 6FF01FFE 		j	.L40
 1792              	.LVL127:
 1793              	.L45:
 1794              	.LBE400:
 1795              	.LBE399:
 275:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1796              		.loc 1 275 9 is_stmt 1
 1797              	.LBB401:
 1798              	.LBB402:
 151:src/../h/Riscv.hpp **** }
 1799              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1800              		.loc 2 151 64 is_stmt 0
 1801 0514 93072000 		li	a5,2
GAS LISTING /tmp/cc461iP7.s 			page 50


 1802              	#APP
 1803              	# 151 "src/../h/Riscv.hpp" 1
 1804              		csrc sip, a5
 1805              	# 0 "" 2
 1806              	.LVL128:
 1807              	#NO_APP
 1808              	.LBE402:
 1809              	.LBE401:
 1810              		.loc 1 278 1
 1811 051c 6FF05FFD 		j	.L40
 1812              		.cfi_endproc
 1813              	.LFE51:
 1815              	.Letext0:
 1816              		.file 5 "src/../h/../lib/hw.h"
 1817              		.file 6 "src/../h/DoublyLinkedList.hpp"
 1818              		.file 7 "src/../h/MemoryAllocator.hpp"
 1819              		.file 8 "src/../h/Scheduler.hpp"
 1820              		.file 9 "src/../h/_thread.hpp"
 1821              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/cc461iP7.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc461iP7.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc461iP7.s:13     .text:0000000000000000 .L0 
     /tmp/cc461iP7.s:14     .text:0000000000000000 .L0 
     /tmp/cc461iP7.s:15     .text:0000000000000004 .L0 
     /tmp/cc461iP7.s:17     .text:0000000000000008 .L0 
     /tmp/cc461iP7.s:19     .text:000000000000000c .L0 
     /tmp/cc461iP7.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/cc461iP7.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/cc461iP7.s:33     .text:0000000000000014 .L0 
     /tmp/cc461iP7.s:34     .text:0000000000000018 .L0 
     /tmp/cc461iP7.s:35     .text:0000000000000018 .L0 
     /tmp/cc461iP7.s:37     .text:000000000000001c .L0 
     /tmp/cc461iP7.s:39     .text:0000000000000020 .L0 
     /tmp/cc461iP7.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc461iP7.s:48     .text:0000000000000020 .L0 
     /tmp/cc461iP7.s:49     .text:0000000000000020 .L0 
     /tmp/cc461iP7.s:50     .text:0000000000000024 .L0 
     /tmp/cc461iP7.s:57     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:58     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:59     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:60     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:61     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:62     .text:000000000000003c .L0 
     /tmp/cc461iP7.s:64     .text:0000000000000040 .L0 
     /tmp/cc461iP7.s:69     .text:0000000000000040 .L0 
     /tmp/cc461iP7.s:70     .text:0000000000000040 .L0 
     /tmp/cc461iP7.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/cc461iP7.s:79     .text:0000000000000048 .L0 
     /tmp/cc461iP7.s:80     .text:0000000000000048 .L0 
     /tmp/cc461iP7.s:84     .text:000000000000004c .L0 
     /tmp/cc461iP7.s:87     .text:0000000000000050 .L0 
     /tmp/cc461iP7.s:88     .text:0000000000000050 .L0 
     /tmp/cc461iP7.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:24     .text:0000000000000050 .L0 
     /tmp/cc461iP7.s:98     .text:0000000000000054 .L0 
     /tmp/cc461iP7.s:102    .text:000000000000005c .L0 
     /tmp/cc461iP7.s:105    .text:000000000000005c .L0 
     /tmp/cc461iP7.s:112    .text:0000000000000064 .L0 
     /tmp/cc461iP7.s:113    .text:0000000000000068 .L0 
     /tmp/cc461iP7.s:114    .text:0000000000000068 .L0 
     /tmp/cc461iP7.s:116    .text:000000000000006c .L0 
     /tmp/cc461iP7.s:117    .text:000000000000006c .L0 
     /tmp/cc461iP7.s:119    .text:0000000000000070 .L0 
     /tmp/cc461iP7.s:121    .text:0000000000000074 .L0 
     /tmp/cc461iP7.s:123    .text:0000000000000078 .L0 
     /tmp/cc461iP7.s:125    .text:000000000000007c .L0 
     /tmp/cc461iP7.s:127    .text:0000000000000080 .L0 
     /tmp/cc461iP7.s:131    .text:0000000000000084 .L0 
     /tmp/cc461iP7.s:135    .text:0000000000000084 .L0 
     /tmp/cc461iP7.s:144    .text:000000000000008c .L0 
     /tmp/cc461iP7.s:152    .text:0000000000000094 .L0 
     /tmp/cc461iP7.s:162    .text:000000000000009c .L0 
GAS LISTING /tmp/cc461iP7.s 			page 52


     /tmp/cc461iP7.s:174    .text:00000000000000a4 .L0 
     /tmp/cc461iP7.s:188    .text:00000000000000ac .L0 
     /tmp/cc461iP7.s:204    .text:00000000000000b4 .L0 
     /tmp/cc461iP7.s:222    .text:00000000000000bc .L0 
     /tmp/cc461iP7.s:242    .text:00000000000000c4 .L0 
     /tmp/cc461iP7.s:264    .text:00000000000000cc .L0 
     /tmp/cc461iP7.s:288    .text:00000000000000d4 .L0 
     /tmp/cc461iP7.s:314    .text:00000000000000dc .L0 
     /tmp/cc461iP7.s:320    .text:00000000000000e4 .L0 
     /tmp/cc461iP7.s:321    .text:00000000000000e4 .L0 
     /tmp/cc461iP7.s:322    .text:00000000000000e4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000000e4 .L0 
     /tmp/cc461iP7.s:330    .text:00000000000000ec .L0 
     /tmp/cc461iP7.s:331    .text:00000000000000ec .L0 
     /tmp/cc461iP7.s:336    .text:00000000000000f0 .L0 
     /tmp/cc461iP7.s:341    .text:00000000000000f4 .L0 
     /tmp/cc461iP7.s:342    .text:00000000000000f4 .L0 
     /tmp/cc461iP7.s:343    .text:00000000000000f4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000000f4 .L0 
     /tmp/cc461iP7.s:351    .text:00000000000000fc .L0 
     /tmp/cc461iP7.s:352    .text:00000000000000fc .L0 
     /tmp/cc461iP7.s:357    .text:0000000000000100 .L0 
     /tmp/cc461iP7.s:358    .text:0000000000000100 .L0 
       src/Riscv.cpp:237    .text:0000000000000100 .L0 
     /tmp/cc461iP7.s:364    .text:0000000000000104 .L0 
       src/Riscv.cpp:239    .text:0000000000000104 .L0 
     /tmp/cc461iP7.s:372    .text:000000000000010c .L0 
     /tmp/cc461iP7.s:373    .text:000000000000010c .L0 
     /tmp/cc461iP7.s:378    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000114 .L0 
     /tmp/cc461iP7.s:388    .text:0000000000000118 .L0 
     /tmp/cc461iP7.s:389    .text:0000000000000118 .L0 
     /tmp/cc461iP7.s:392    .text:0000000000000120 .L0 
     /tmp/cc461iP7.s:393    .text:0000000000000120 .L0 
     /tmp/cc461iP7.s:398    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000128 .L0 
     /tmp/cc461iP7.s:410    .text:000000000000012c .L0 
     /tmp/cc461iP7.s:411    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000012c .L0 
     /tmp/cc461iP7.s:423    .text:0000000000000130 .L0 
     /tmp/cc461iP7.s:424    .text:0000000000000130 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000130 .L0 
     /tmp/cc461iP7.s:431    .text:0000000000000134 .L0 
     /tmp/cc461iP7.s:453    .text:0000000000000138 .L0 
     /tmp/cc461iP7.s:454    .text:0000000000000138 .L0 
     /tmp/cc461iP7.s:455    .text:0000000000000138 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000138 .L0 
     /tmp/cc461iP7.s:463    .text:0000000000000140 .L0 
     /tmp/cc461iP7.s:464    .text:0000000000000140 .L0 
     /tmp/cc461iP7.s:468    .text:0000000000000144 .L0 
     /tmp/cc461iP7.s:473    .text:0000000000000148 .L0 
     /tmp/cc461iP7.s:474    .text:0000000000000148 .L0 
     /tmp/cc461iP7.s:475    .text:0000000000000148 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000148 .L0 
     /tmp/cc461iP7.s:483    .text:0000000000000150 .L0 
     /tmp/cc461iP7.s:484    .text:0000000000000150 .L0 
     /tmp/cc461iP7.s:489    .text:0000000000000154 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 53


     /tmp/cc461iP7.s:490    .text:0000000000000154 .L0 
     /tmp/cc461iP7.s:491    .text:0000000000000154 .L0 
     /tmp/cc461iP7.s:492    .text:0000000000000154 .L0 
     /tmp/cc461iP7.s:493    .text:0000000000000154 .L0 
       src/Riscv.cpp:41     .text:0000000000000154 .L0 
     /tmp/cc461iP7.s:499    .text:0000000000000158 .L0 
       src/Riscv.cpp:42     .text:0000000000000158 .L0 
     /tmp/cc461iP7.s:504    .text:000000000000015c .L0 
       src/Riscv.cpp:43     .text:000000000000015c .L0 
     /tmp/cc461iP7.s:509    .text:0000000000000160 .L0 
       src/Riscv.cpp:44     .text:0000000000000160 .L0 
     /tmp/cc461iP7.s:514    .text:0000000000000164 .L0 
       src/Riscv.cpp:47     .text:0000000000000164 .L0 
     /tmp/cc461iP7.s:520    .text:0000000000000168 .L0 
       src/Riscv.cpp:48     .text:0000000000000168 .L0 
     /tmp/cc461iP7.s:526    .text:000000000000016c .L0 
       src/Riscv.cpp:49     .text:000000000000016c .L0 
     /tmp/cc461iP7.s:532    .text:0000000000000170 .L0 
       src/Riscv.cpp:50     .text:0000000000000170 .L0 
     /tmp/cc461iP7.s:538    .text:0000000000000174 .L0 
     /tmp/cc461iP7.s:540    .text:0000000000000174 .L0 
     /tmp/cc461iP7.s:543    .text:000000000000017c .L0 
     /tmp/cc461iP7.s:544    .text:000000000000017c .L0 
     /tmp/cc461iP7.s:546    .text:0000000000000180 .L0 
     /tmp/cc461iP7.s:547    .text:0000000000000180 .L0 
     /tmp/cc461iP7.s:549    .text:0000000000000184 .L0 
     /tmp/cc461iP7.s:553    .text:0000000000000188 .L0 
       src/Riscv.cpp:62     .text:0000000000000188 .L0 
     /tmp/cc461iP7.s:563    .text:000000000000018c .L0 
     /tmp/cc461iP7.s:564    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000018c .L0 
     /tmp/cc461iP7.s:576    .text:0000000000000190 .L0 
     /tmp/cc461iP7.s:577    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000190 .L0 
     /tmp/cc461iP7.s:584    .text:0000000000000194 .L0 
     /tmp/cc461iP7.s:590    .text:0000000000000198 .L0 
     /tmp/cc461iP7.s:601    .text:00000000000001a0 .L0 
     /tmp/cc461iP7.s:602    .text:00000000000001a0 .L0 
     /tmp/cc461iP7.s:603    .text:00000000000001a0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001a0 .L0 
     /tmp/cc461iP7.s:611    .text:00000000000001a8 .L0 
     /tmp/cc461iP7.s:612    .text:00000000000001a8 .L0 
     /tmp/cc461iP7.s:617    .text:00000000000001ac .L0 
     /tmp/cc461iP7.s:622    .text:00000000000001b0 .L0 
     /tmp/cc461iP7.s:623    .text:00000000000001b0 .L0 
     /tmp/cc461iP7.s:624    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001b0 .L0 
     /tmp/cc461iP7.s:632    .text:00000000000001b8 .L0 
     /tmp/cc461iP7.s:633    .text:00000000000001b8 .L0 
     /tmp/cc461iP7.s:638    .text:00000000000001bc .L0 
       src/Riscv.cpp:71     .text:00000000000001bc .L0 
     /tmp/cc461iP7.s:645    .text:00000000000001c0 .L0 
     /tmp/cc461iP7.s:647    .text:00000000000001c0 .L0 
     /tmp/cc461iP7.s:652    .text:00000000000001cc .L0 
       src/Riscv.cpp:75     .text:00000000000001cc .L0 
     /tmp/cc461iP7.s:662    .text:00000000000001d0 .L0 
     /tmp/cc461iP7.s:663    .text:00000000000001d0 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 54


  src/../h/Riscv.hpp:187    .text:00000000000001d0 .L0 
     /tmp/cc461iP7.s:675    .text:00000000000001d4 .L0 
     /tmp/cc461iP7.s:676    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001d4 .L0 
     /tmp/cc461iP7.s:683    .text:00000000000001d8 .L0 
     /tmp/cc461iP7.s:694    .text:00000000000001dc .L0 
     /tmp/cc461iP7.s:695    .text:00000000000001dc .L0 
     /tmp/cc461iP7.s:696    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001dc .L0 
     /tmp/cc461iP7.s:704    .text:00000000000001e4 .L0 
     /tmp/cc461iP7.s:705    .text:00000000000001e4 .L0 
     /tmp/cc461iP7.s:710    .text:00000000000001e8 .L0 
     /tmp/cc461iP7.s:715    .text:00000000000001ec .L0 
     /tmp/cc461iP7.s:716    .text:00000000000001ec .L0 
     /tmp/cc461iP7.s:717    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001ec .L0 
     /tmp/cc461iP7.s:725    .text:00000000000001f4 .L0 
     /tmp/cc461iP7.s:726    .text:00000000000001f4 .L0 
     /tmp/cc461iP7.s:731    .text:00000000000001f8 .L0 
       src/Riscv.cpp:84     .text:00000000000001f8 .L0 
     /tmp/cc461iP7.s:738    .text:00000000000001fc .L0 
     /tmp/cc461iP7.s:740    .text:00000000000001fc .L0 
     /tmp/cc461iP7.s:743    .text:0000000000000204 .L0 
       src/Riscv.cpp:86     .text:0000000000000204 .L0 
     /tmp/cc461iP7.s:753    .text:0000000000000208 .L0 
     /tmp/cc461iP7.s:754    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000208 .L0 
     /tmp/cc461iP7.s:766    .text:000000000000020c .L0 
     /tmp/cc461iP7.s:767    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000020c .L0 
     /tmp/cc461iP7.s:774    .text:0000000000000210 .L0 
     /tmp/cc461iP7.s:785    .text:0000000000000214 .L0 
     /tmp/cc461iP7.s:786    .text:0000000000000214 .L0 
     /tmp/cc461iP7.s:787    .text:0000000000000214 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000214 .L0 
     /tmp/cc461iP7.s:795    .text:000000000000021c .L0 
     /tmp/cc461iP7.s:796    .text:000000000000021c .L0 
     /tmp/cc461iP7.s:801    .text:0000000000000220 .L0 
     /tmp/cc461iP7.s:806    .text:0000000000000224 .L0 
     /tmp/cc461iP7.s:807    .text:0000000000000224 .L0 
     /tmp/cc461iP7.s:808    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000224 .L0 
     /tmp/cc461iP7.s:816    .text:000000000000022c .L0 
     /tmp/cc461iP7.s:817    .text:000000000000022c .L0 
     /tmp/cc461iP7.s:822    .text:0000000000000230 .L0 
     /tmp/cc461iP7.s:823    .text:0000000000000230 .L0 
     /tmp/cc461iP7.s:826    .text:000000000000023c .L0 
     /tmp/cc461iP7.s:829    .text:0000000000000244 .L0 
     /tmp/cc461iP7.s:830    .text:0000000000000244 .L0 
     /tmp/cc461iP7.s:835    .text:000000000000024c .L0 
     /tmp/cc461iP7.s:836    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000024c .L0 
     /tmp/cc461iP7.s:848    .text:0000000000000250 .L0 
     /tmp/cc461iP7.s:849    .text:0000000000000250 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000250 .L0 
     /tmp/cc461iP7.s:856    .text:0000000000000254 .L0 
     /tmp/cc461iP7.s:867    .text:0000000000000258 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 55


     /tmp/cc461iP7.s:868    .text:0000000000000258 .L0 
     /tmp/cc461iP7.s:869    .text:0000000000000258 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000258 .L0 
     /tmp/cc461iP7.s:877    .text:0000000000000260 .L0 
     /tmp/cc461iP7.s:878    .text:0000000000000260 .L0 
     /tmp/cc461iP7.s:883    .text:0000000000000264 .L0 
     /tmp/cc461iP7.s:888    .text:0000000000000268 .L0 
     /tmp/cc461iP7.s:889    .text:0000000000000268 .L0 
     /tmp/cc461iP7.s:890    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000268 .L0 
     /tmp/cc461iP7.s:898    .text:0000000000000270 .L0 
     /tmp/cc461iP7.s:899    .text:0000000000000270 .L0 
     /tmp/cc461iP7.s:904    .text:0000000000000274 .L0 
     /tmp/cc461iP7.s:905    .text:0000000000000274 .L0 
     /tmp/cc461iP7.s:910    .text:000000000000027c .L0 
     /tmp/cc461iP7.s:911    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000027c .L0 
     /tmp/cc461iP7.s:923    .text:0000000000000280 .L0 
     /tmp/cc461iP7.s:924    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000280 .L0 
     /tmp/cc461iP7.s:931    .text:0000000000000284 .L0 
     /tmp/cc461iP7.s:942    .text:0000000000000288 .L0 
     /tmp/cc461iP7.s:943    .text:0000000000000288 .L0 
     /tmp/cc461iP7.s:944    .text:0000000000000288 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000288 .L0 
     /tmp/cc461iP7.s:952    .text:0000000000000290 .L0 
     /tmp/cc461iP7.s:953    .text:0000000000000290 .L0 
     /tmp/cc461iP7.s:958    .text:0000000000000294 .L0 
     /tmp/cc461iP7.s:963    .text:0000000000000298 .L0 
     /tmp/cc461iP7.s:964    .text:0000000000000298 .L0 
     /tmp/cc461iP7.s:965    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000298 .L0 
     /tmp/cc461iP7.s:973    .text:00000000000002a0 .L0 
     /tmp/cc461iP7.s:974    .text:00000000000002a0 .L0 
     /tmp/cc461iP7.s:979    .text:00000000000002a4 .L0 
     /tmp/cc461iP7.s:980    .text:00000000000002a4 .L0 
     /tmp/cc461iP7.s:983    .text:00000000000002b0 .L0 
     /tmp/cc461iP7.s:984    .text:00000000000002b0 .L0 
     /tmp/cc461iP7.s:989    .text:00000000000002b8 .L0 
     /tmp/cc461iP7.s:990    .text:00000000000002b8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002b8 .L0 
     /tmp/cc461iP7.s:1002   .text:00000000000002bc .L0 
     /tmp/cc461iP7.s:1003   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002bc .L0 
     /tmp/cc461iP7.s:1010   .text:00000000000002c0 .L0 
     /tmp/cc461iP7.s:1021   .text:00000000000002c4 .L0 
     /tmp/cc461iP7.s:1022   .text:00000000000002c4 .L0 
     /tmp/cc461iP7.s:1023   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002c4 .L0 
     /tmp/cc461iP7.s:1031   .text:00000000000002cc .L0 
     /tmp/cc461iP7.s:1032   .text:00000000000002cc .L0 
     /tmp/cc461iP7.s:1037   .text:00000000000002d0 .L0 
     /tmp/cc461iP7.s:1042   .text:00000000000002d4 .L0 
     /tmp/cc461iP7.s:1043   .text:00000000000002d4 .L0 
     /tmp/cc461iP7.s:1044   .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002d4 .L0 
     /tmp/cc461iP7.s:1052   .text:00000000000002dc .L0 
GAS LISTING /tmp/cc461iP7.s 			page 56


     /tmp/cc461iP7.s:1053   .text:00000000000002dc .L0 
     /tmp/cc461iP7.s:1058   .text:00000000000002e0 .L0 
     /tmp/cc461iP7.s:1059   .text:00000000000002e0 .L0 
     /tmp/cc461iP7.s:1060   .text:00000000000002e0 .L0 
       src/Riscv.cpp:134    .text:00000000000002e0 .L0 
     /tmp/cc461iP7.s:1066   .text:00000000000002e4 .L0 
       src/Riscv.cpp:135    .text:00000000000002e4 .L0 
     /tmp/cc461iP7.s:1071   .text:00000000000002e8 .L0 
       src/Riscv.cpp:137    .text:00000000000002e8 .L0 
     /tmp/cc461iP7.s:1077   .text:00000000000002ec .L0 
       src/Riscv.cpp:138    .text:00000000000002ec .L0 
     /tmp/cc461iP7.s:1083   .text:00000000000002f0 .L0 
     /tmp/cc461iP7.s:1085   .text:00000000000002f0 .L0 
     /tmp/cc461iP7.s:1092   .text:00000000000002fc .L0 
     /tmp/cc461iP7.s:1098   .text:0000000000000300 .L0 
     /tmp/cc461iP7.s:1106   .text:0000000000000308 .L0 
     /tmp/cc461iP7.s:1107   .text:0000000000000308 .L0 
     /tmp/cc461iP7.s:1110   .text:000000000000030c .L0 
     /tmp/cc461iP7.s:1111   .text:000000000000030c .L0 
     /tmp/cc461iP7.s:1113   .text:0000000000000310 .L0 
     /tmp/cc461iP7.s:1117   .text:0000000000000314 .L0 
       src/Riscv.cpp:147    .text:0000000000000314 .L0 
     /tmp/cc461iP7.s:1127   .text:0000000000000318 .L0 
     /tmp/cc461iP7.s:1128   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000318 .L0 
     /tmp/cc461iP7.s:1140   .text:000000000000031c .L0 
     /tmp/cc461iP7.s:1141   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000031c .L0 
     /tmp/cc461iP7.s:1148   .text:0000000000000320 .L0 
     /tmp/cc461iP7.s:1154   .text:0000000000000324 .L0 
     /tmp/cc461iP7.s:1164   .text:000000000000032c .L0 
     /tmp/cc461iP7.s:1165   .text:000000000000032c .L0 
     /tmp/cc461iP7.s:1166   .text:000000000000032c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000032c .L0 
     /tmp/cc461iP7.s:1174   .text:0000000000000334 .L0 
     /tmp/cc461iP7.s:1175   .text:0000000000000334 .L0 
     /tmp/cc461iP7.s:1179   .text:0000000000000338 .L0 
     /tmp/cc461iP7.s:1184   .text:000000000000033c .L0 
     /tmp/cc461iP7.s:1185   .text:000000000000033c .L0 
     /tmp/cc461iP7.s:1186   .text:000000000000033c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000033c .L0 
     /tmp/cc461iP7.s:1194   .text:0000000000000344 .L0 
     /tmp/cc461iP7.s:1195   .text:0000000000000344 .L0 
     /tmp/cc461iP7.s:1200   .text:0000000000000348 .L0 
     /tmp/cc461iP7.s:1201   .text:0000000000000348 .L0 
       src/Riscv.cpp:159    .text:0000000000000348 .L0 
     /tmp/cc461iP7.s:1207   .text:000000000000034c .L0 
       src/Riscv.cpp:161    .text:000000000000034c .L0 
     /tmp/cc461iP7.s:1214   .text:0000000000000350 .L0 
     /tmp/cc461iP7.s:1221   .text:0000000000000354 .L0 
     /tmp/cc461iP7.s:1224   .text:0000000000000358 .L0 
     /tmp/cc461iP7.s:1227   .text:000000000000035c .L0 
     /tmp/cc461iP7.s:1232   .text:0000000000000364 .L0 
     /tmp/cc461iP7.s:1233   .text:0000000000000364 .L0 
     /tmp/cc461iP7.s:1236   .text:000000000000036c .L0 
     /tmp/cc461iP7.s:1237   .text:000000000000036c .L0 
     /tmp/cc461iP7.s:1239   .text:0000000000000370 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 57


     /tmp/cc461iP7.s:1242   .text:0000000000000378 .L0 
     /tmp/cc461iP7.s:1243   .text:0000000000000378 .L0 
     /tmp/cc461iP7.s:1249   .text:0000000000000384 .L0 
     /tmp/cc461iP7.s:1252   .text:0000000000000384 .L0 
     /tmp/cc461iP7.s:1253   .text:0000000000000384 .L0 
     /tmp/cc461iP7.s:1255   .text:0000000000000388 .L0 
     /tmp/cc461iP7.s:1257   .text:000000000000038c .L0 
     /tmp/cc461iP7.s:1262   .text:0000000000000390 .L0 
     /tmp/cc461iP7.s:1268   .text:0000000000000394 .L0 
     /tmp/cc461iP7.s:1269   .text:0000000000000394 .L0 
     /tmp/cc461iP7.s:1271   .text:0000000000000398 .L0 
     /tmp/cc461iP7.s:1273   .text:000000000000039c .L0 
     /tmp/cc461iP7.s:1281   .text:00000000000003a4 .L0 
     /tmp/cc461iP7.s:1282   .text:00000000000003a4 .L0 
     /tmp/cc461iP7.s:1284   .text:00000000000003a8 .L0 
     /tmp/cc461iP7.s:1291   .text:00000000000003b4 .L0 
     /tmp/cc461iP7.s:1292   .text:00000000000003b4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003b4 .L0 
     /tmp/cc461iP7.s:1304   .text:00000000000003b8 .L0 
     /tmp/cc461iP7.s:1305   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003b8 .L0 
     /tmp/cc461iP7.s:1312   .text:00000000000003bc .L0 
     /tmp/cc461iP7.s:1323   .text:00000000000003c0 .L0 
     /tmp/cc461iP7.s:1324   .text:00000000000003c0 .L0 
     /tmp/cc461iP7.s:1325   .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003c0 .L0 
     /tmp/cc461iP7.s:1333   .text:00000000000003c8 .L0 
     /tmp/cc461iP7.s:1334   .text:00000000000003c8 .L0 
     /tmp/cc461iP7.s:1339   .text:00000000000003cc .L0 
     /tmp/cc461iP7.s:1344   .text:00000000000003d0 .L0 
     /tmp/cc461iP7.s:1345   .text:00000000000003d0 .L0 
     /tmp/cc461iP7.s:1346   .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000003d0 .L0 
     /tmp/cc461iP7.s:1354   .text:00000000000003d8 .L0 
     /tmp/cc461iP7.s:1355   .text:00000000000003d8 .L0 
     /tmp/cc461iP7.s:1360   .text:00000000000003dc .L0 
     /tmp/cc461iP7.s:1361   .text:00000000000003dc .L0 
       src/Riscv.cpp:184    .text:00000000000003dc .L0 
     /tmp/cc461iP7.s:1367   .text:00000000000003e0 .L0 
       src/Riscv.cpp:186    .text:00000000000003e0 .L0 
     /tmp/cc461iP7.s:1373   .text:00000000000003e4 .L0 
     /tmp/cc461iP7.s:1375   .text:00000000000003e4 .L0 
     /tmp/cc461iP7.s:1378   .text:00000000000003ec .L0 
       src/Riscv.cpp:192    .text:00000000000003ec .L0 
     /tmp/cc461iP7.s:1388   .text:00000000000003f0 .L0 
     /tmp/cc461iP7.s:1389   .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003f0 .L0 
     /tmp/cc461iP7.s:1401   .text:00000000000003f4 .L0 
     /tmp/cc461iP7.s:1402   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003f4 .L0 
     /tmp/cc461iP7.s:1409   .text:00000000000003f8 .L0 
     /tmp/cc461iP7.s:1420   .text:00000000000003fc .L0 
     /tmp/cc461iP7.s:1421   .text:00000000000003fc .L0 
     /tmp/cc461iP7.s:1422   .text:00000000000003fc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003fc .L0 
     /tmp/cc461iP7.s:1430   .text:0000000000000404 .L0 
     /tmp/cc461iP7.s:1431   .text:0000000000000404 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 58


     /tmp/cc461iP7.s:1436   .text:0000000000000408 .L0 
     /tmp/cc461iP7.s:1441   .text:000000000000040c .L0 
     /tmp/cc461iP7.s:1442   .text:000000000000040c .L0 
     /tmp/cc461iP7.s:1443   .text:000000000000040c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000040c .L0 
     /tmp/cc461iP7.s:1451   .text:0000000000000414 .L0 
     /tmp/cc461iP7.s:1452   .text:0000000000000414 .L0 
     /tmp/cc461iP7.s:1457   .text:0000000000000418 .L0 
     /tmp/cc461iP7.s:1458   .text:0000000000000418 .L0 
       src/Riscv.cpp:203    .text:0000000000000418 .L0 
     /tmp/cc461iP7.s:1464   .text:000000000000041c .L0 
       src/Riscv.cpp:205    .text:000000000000041c .L0 
     /tmp/cc461iP7.s:1470   .text:0000000000000420 .L0 
     /tmp/cc461iP7.s:1472   .text:0000000000000420 .L0 
     /tmp/cc461iP7.s:1475   .text:0000000000000428 .L0 
     /tmp/cc461iP7.s:1476   .text:0000000000000428 .L0 
     /tmp/cc461iP7.s:1477   .text:0000000000000428 .L0 
     /tmp/cc461iP7.s:1487   .text:0000000000000430 .L0 
     /tmp/cc461iP7.s:1488   .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000430 .L0 
     /tmp/cc461iP7.s:1500   .text:0000000000000434 .L0 
     /tmp/cc461iP7.s:1501   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000434 .L0 
     /tmp/cc461iP7.s:1508   .text:0000000000000438 .L0 
     /tmp/cc461iP7.s:1519   .text:000000000000043c .L0 
     /tmp/cc461iP7.s:1520   .text:000000000000043c .L0 
     /tmp/cc461iP7.s:1521   .text:000000000000043c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000043c .L0 
     /tmp/cc461iP7.s:1529   .text:0000000000000444 .L0 
     /tmp/cc461iP7.s:1530   .text:0000000000000444 .L0 
     /tmp/cc461iP7.s:1535   .text:0000000000000448 .L0 
     /tmp/cc461iP7.s:1540   .text:000000000000044c .L0 
     /tmp/cc461iP7.s:1541   .text:000000000000044c .L0 
     /tmp/cc461iP7.s:1542   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000044c .L0 
     /tmp/cc461iP7.s:1550   .text:0000000000000454 .L0 
     /tmp/cc461iP7.s:1551   .text:0000000000000454 .L0 
     /tmp/cc461iP7.s:1556   .text:0000000000000458 .L0 
     /tmp/cc461iP7.s:1557   .text:0000000000000458 .L0 
     /tmp/cc461iP7.s:1562   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000460 .L0 
     /tmp/cc461iP7.s:1572   .text:0000000000000464 .L0 
     /tmp/cc461iP7.s:1573   .text:0000000000000464 .L0 
     /tmp/cc461iP7.s:1576   .text:000000000000046c .L0 
     /tmp/cc461iP7.s:1577   .text:000000000000046c .L0 
     /tmp/cc461iP7.s:1582   .text:0000000000000474 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000474 .L0 
     /tmp/cc461iP7.s:1592   .text:0000000000000478 .L0 
       src/Riscv.cpp:226    .text:0000000000000478 .L0 
     /tmp/cc461iP7.s:1602   .text:000000000000047c .L0 
     /tmp/cc461iP7.s:1603   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000047c .L0 
     /tmp/cc461iP7.s:1615   .text:0000000000000480 .L0 
     /tmp/cc461iP7.s:1616   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000480 .L0 
     /tmp/cc461iP7.s:1623   .text:0000000000000484 .L0 
     /tmp/cc461iP7.s:1644   .text:0000000000000488 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 59


     /tmp/cc461iP7.s:1645   .text:0000000000000488 .L0 
     /tmp/cc461iP7.s:1646   .text:0000000000000488 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000488 .L0 
     /tmp/cc461iP7.s:1655   .text:0000000000000490 .L0 
     /tmp/cc461iP7.s:1656   .text:0000000000000490 .L0 
     /tmp/cc461iP7.s:1663   .text:0000000000000494 .L0 
     /tmp/cc461iP7.s:1664   .text:0000000000000494 .L0 
     /tmp/cc461iP7.s:1665   .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000494 .L0 
     /tmp/cc461iP7.s:1673   .text:000000000000049c .L0 
     /tmp/cc461iP7.s:1674   .text:000000000000049c .L0 
     /tmp/cc461iP7.s:1678   .text:00000000000004a0 .L0 
     /tmp/cc461iP7.s:1681   .text:00000000000004a4 .L0 
     /tmp/cc461iP7.s:1682   .text:00000000000004a4 .L0 
     /tmp/cc461iP7.s:1687   .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004a8 .L0 
     /tmp/cc461iP7.s:1699   .text:00000000000004ac .L0 
     /tmp/cc461iP7.s:1700   .text:00000000000004ac .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004ac .L0 
     /tmp/cc461iP7.s:1713   .text:00000000000004b0 .L0 
     /tmp/cc461iP7.s:1714   .text:00000000000004b4 .L0 
     /tmp/cc461iP7.s:1720   .text:00000000000004b4 _ZN5Riscv17handleTrapConsoleEv
     /tmp/cc461iP7.s:1723   .text:00000000000004b4 .L0 
     /tmp/cc461iP7.s:1724   .text:00000000000004b4 .L0 
     /tmp/cc461iP7.s:1725   .text:00000000000004b8 .L0 
     /tmp/cc461iP7.s:1728   .text:00000000000004c0 .L0 
     /tmp/cc461iP7.s:1729   .text:00000000000004c0 .L0 
     /tmp/cc461iP7.s:1731   .text:00000000000004c4 .L0 
     /tmp/cc461iP7.s:1735   .text:00000000000004c4 .L0 
     /tmp/cc461iP7.s:1736   .text:00000000000004c4 .L0 
     /tmp/cc461iP7.s:1737   .text:00000000000004c4 .L0 
  src/../h/Riscv.hpp:99     .text:00000000000004c4 .L0 
     /tmp/cc461iP7.s:1745   .text:00000000000004cc .L0 
     /tmp/cc461iP7.s:1746   .text:00000000000004cc .L0 
     /tmp/cc461iP7.s:1751   .text:00000000000004d0 .L0 
     /tmp/cc461iP7.s:1756   .text:00000000000004e0 .L0 
     /tmp/cc461iP7.s:1763   .text:00000000000004f0 .L0 
     /tmp/cc461iP7.s:1764   .text:00000000000004f4 .L0 
     /tmp/cc461iP7.s:1765   .text:00000000000004f4 .L0 
     /tmp/cc461iP7.s:1767   .text:00000000000004f8 .L0 
     /tmp/cc461iP7.s:1768   .text:00000000000004f8 .L0 
     /tmp/cc461iP7.s:1770   .text:00000000000004fc .L0 
     /tmp/cc461iP7.s:1774   .text:0000000000000500 .L0 
     /tmp/cc461iP7.s:1776   .text:0000000000000500 .L0 
     /tmp/cc461iP7.s:1777   .text:0000000000000500 .L0 
     /tmp/cc461iP7.s:1782   .text:0000000000000508 .L0 
     /tmp/cc461iP7.s:1783   .text:0000000000000508 .L0 
     /tmp/cc461iP7.s:1784   .text:0000000000000508 .L0 
     /tmp/cc461iP7.s:1791   .text:0000000000000510 .L0 
     /tmp/cc461iP7.s:1799   .text:0000000000000514 .L0 
     /tmp/cc461iP7.s:1800   .text:0000000000000514 .L0 
     /tmp/cc461iP7.s:1801   .text:0000000000000514 .L0 
     /tmp/cc461iP7.s:1811   .text:000000000000051c .L0 
     /tmp/cc461iP7.s:1812   .text:0000000000000520 .L0 
     /tmp/cc461iP7.s:1822   .text:0000000000000520 .L0 
     /tmp/cc461iP7.s:373    .text:000000000000010c .L0 
     /tmp/cc461iP7.s:393    .text:0000000000000120 .L0 
GAS LISTING /tmp/cc461iP7.s 			page 60


     /tmp/cc461iP7.s:823    .text:0000000000000230 .L0 
     /tmp/cc461iP7.s:980    .text:00000000000002a4 .L0 
     /tmp/cc461iP7.s:1557   .text:0000000000000458 .L0 
     /tmp/cc461iP7.s:1577   .text:000000000000046c .L0 
     /tmp/cc461iP7.s:130    .text:0000000000000084 .L26
     /tmp/cc461iP7.s:1625   .text:0000000000000488 .L27
     /tmp/cc461iP7.s:433    .text:0000000000000138 .L28
     /tmp/cc461iP7.s:593    .text:00000000000001a0 .L29
     /tmp/cc461iP7.s:685    .text:00000000000001dc .L30
     /tmp/cc461iP7.s:776    .text:0000000000000214 .L31
     /tmp/cc461iP7.s:858    .text:0000000000000258 .L32
     /tmp/cc461iP7.s:933    .text:0000000000000288 .L33
     /tmp/cc461iP7.s:1012   .text:00000000000002c4 .L34
     /tmp/cc461iP7.s:1157   .text:000000000000032c .L35
     /tmp/cc461iP7.s:1314   .text:00000000000003c0 .L36
     /tmp/cc461iP7.s:1411   .text:00000000000003fc .L37
     /tmp/cc461iP7.s:1510   .text:000000000000043c .L38
     /tmp/cc461iP7.s:108    .text:0000000000000064 .L3
     /tmp/cc461iP7.s:586    .text:0000000000000198 .L23
     /tmp/cc461iP7.s:138    .text:000000000000008c .L5
     /tmp/cc461iP7.s:550    .text:0000000000000188 .L6
     /tmp/cc461iP7.s:1150   .text:0000000000000324 .L24
     /tmp/cc461iP7.s:1114   .text:0000000000000314 .L14
     /tmp/cc461iP7.s:1246   .text:0000000000000384 .L18
     /tmp/cc461iP7.s:1276   .text:00000000000003a4 .L16
     /tmp/cc461iP7.s:1222   .text:0000000000000358 .L17
     /tmp/cc461iP7.s:1216   .text:0000000000000354 .L39
     /tmp/cc461iP7.s:1287   .text:00000000000003b4 .L19
     /tmp/cc461iP7.s:1773   .text:0000000000000500 .L44
     /tmp/cc461iP7.s:1793   .text:0000000000000514 .L45
     /tmp/cc461iP7.s:1761   .text:00000000000004f0 .L40
     /tmp/cc461iP7.s:4829   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc461iP7.s:7098   .debug_str:0000000000000aa3 .LASF211
     /tmp/cc461iP7.s:6814   .debug_str:0000000000000170 .LASF212
     /tmp/cc461iP7.s:6960   .debug_str:0000000000000646 .LASF213
     /tmp/cc461iP7.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc461iP7.s:1815   .text:0000000000000520 .Letext0
     /tmp/cc461iP7.s:6760   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc461iP7.s:7016   .debug_str:0000000000000861 .LASF3
     /tmp/cc461iP7.s:6894   .debug_str:000000000000040e .LASF0
     /tmp/cc461iP7.s:6938   .debug_str:00000000000005c8 .LASF1
     /tmp/cc461iP7.s:7034   .debug_str:00000000000008ed .LASF2
     /tmp/cc461iP7.s:7046   .debug_str:000000000000095b .LASF4
     /tmp/cc461iP7.s:6910   .debug_str:0000000000000485 .LASF5
     /tmp/cc461iP7.s:6774   .debug_str:0000000000000057 .LASF6
     /tmp/cc461iP7.s:6988   .debug_str:0000000000000737 .LASF7
     /tmp/cc461iP7.s:6926   .debug_str:0000000000000566 .LASF8
     /tmp/cc461iP7.s:6862   .debug_str:00000000000002fc .LASF9
     /tmp/cc461iP7.s:6870   .debug_str:000000000000033e .LASF10
     /tmp/cc461iP7.s:6802   .debug_str:0000000000000115 .LASF11
     /tmp/cc461iP7.s:6852   .debug_str:00000000000002b2 .LASF12
     /tmp/cc461iP7.s:6816   .debug_str:000000000000017e .LASF13
     /tmp/cc461iP7.s:6800   .debug_str:0000000000000105 .LASF14
     /tmp/cc461iP7.s:7072   .debug_str:0000000000000a18 .LASF15
     /tmp/cc461iP7.s:6838   .debug_str:0000000000000228 .LASF16
     /tmp/cc461iP7.s:7062   .debug_str:00000000000009e2 .LASF17
     /tmp/cc461iP7.s:7150   .debug_str:0000000000000ccf .LASF68
GAS LISTING /tmp/cc461iP7.s 			page 61


     /tmp/cc461iP7.s:7012   .debug_str:0000000000000839 .LASF21
     /tmp/cc461iP7.s:6942   .debug_str:00000000000005e1 .LASF18
     /tmp/cc461iP7.s:6844   .debug_str:0000000000000265 .LASF19
     /tmp/cc461iP7.s:7166   .debug_str:0000000000000d35 .LASF20
     /tmp/cc461iP7.s:7134   .debug_str:0000000000000c47 .LASF22
     /tmp/cc461iP7.s:6846   .debug_str:000000000000026e .LASF23
     /tmp/cc461iP7.s:7096   .debug_str:0000000000000a96 .LASF24
     /tmp/cc461iP7.s:6824   .debug_str:00000000000001ba .LASF25
     /tmp/cc461iP7.s:6882   .debug_str:00000000000003b7 .LASF58
     /tmp/cc461iP7.s:6892   .debug_str:00000000000003f6 .LASF60
     /tmp/cc461iP7.s:7126   .debug_str:0000000000000c13 .LASF26
     /tmp/cc461iP7.s:7114   .debug_str:0000000000000bd3 .LASF28
     /tmp/cc461iP7.s:7028   .debug_str:00000000000008c7 .LASF30
     /tmp/cc461iP7.s:6978   .debug_str:00000000000006ea .LASF32
     /tmp/cc461iP7.s:7004   .debug_str:00000000000007f0 .LASF27
     /tmp/cc461iP7.s:7006   .debug_str:00000000000007f7 .LASF29
     /tmp/cc461iP7.s:6974   .debug_str:00000000000006cf .LASF31
     /tmp/cc461iP7.s:6930   .debug_str:000000000000059b .LASF33
     /tmp/cc461iP7.s:7162   .debug_str:0000000000000d21 .LASF34
     /tmp/cc461iP7.s:7104   .debug_str:0000000000000b88 .LASF35
     /tmp/cc461iP7.s:6970   .debug_str:00000000000006c2 .LASF36
     /tmp/cc461iP7.s:6976   .debug_str:00000000000006d6 .LASF37
     /tmp/cc461iP7.s:6944   .debug_str:00000000000005ea .LASF38
     /tmp/cc461iP7.s:7010   .debug_str:0000000000000825 .LASF39
     /tmp/cc461iP7.s:7192   .debug_str:0000000000000e09 .LASF40
     /tmp/cc461iP7.s:6900   .debug_str:0000000000000426 .LASF41
     /tmp/cc461iP7.s:7068   .debug_str:0000000000000a04 .LASF42
     /tmp/cc461iP7.s:7050   .debug_str:0000000000000988 .LASF43
     /tmp/cc461iP7.s:7052   .debug_str:000000000000099b .LASF44
     /tmp/cc461iP7.s:6806   .debug_str:0000000000000129 .LASF45
     /tmp/cc461iP7.s:6834   .debug_str:0000000000000203 .LASF46
     /tmp/cc461iP7.s:6888   .debug_str:00000000000003cf .LASF47
     /tmp/cc461iP7.s:6898   .debug_str:0000000000000420 .LASF48
     /tmp/cc461iP7.s:6826   .debug_str:00000000000001c6 .LASF49
     /tmp/cc461iP7.s:6776   .debug_str:000000000000005e .LASF50
     /tmp/cc461iP7.s:7040   .debug_str:0000000000000911 .LASF51
     /tmp/cc461iP7.s:7032   .debug_str:00000000000008e2 .LASF52
     /tmp/cc461iP7.s:7184   .debug_str:0000000000000dbe .LASF53
     /tmp/cc461iP7.s:7154   .debug_str:0000000000000cda .LASF54
     /tmp/cc461iP7.s:7168   .debug_str:0000000000000d3e .LASF55
     /tmp/cc461iP7.s:7148   .debug_str:0000000000000cc5 .LASF56
     /tmp/cc461iP7.s:6962   .debug_str:0000000000000676 .LASF57
     /tmp/cc461iP7.s:7160   .debug_str:0000000000000d12 .LASF59
     /tmp/cc461iP7.s:6868   .debug_str:0000000000000322 .LASF61
     /tmp/cc461iP7.s:7036   .debug_str:00000000000008fb .LASF62
     /tmp/cc461iP7.s:7186   .debug_str:0000000000000dd6 .LASF63
     /tmp/cc461iP7.s:6990   .debug_str:000000000000074a .LASF64
     /tmp/cc461iP7.s:6922   .debug_str:0000000000000527 .LASF66
     /tmp/cc461iP7.s:7030   .debug_str:00000000000008d0 .LASF65
     /tmp/cc461iP7.s:6836   .debug_str:0000000000000209 .LASF67
     /tmp/cc461iP7.s:7158   .debug_str:0000000000000cee .LASF69
     /tmp/cc461iP7.s:7144   .debug_str:0000000000000ca0 .LASF103
     /tmp/cc461iP7.s:6936   .debug_str:00000000000005c3 .LASF70
     /tmp/cc461iP7.s:6804   .debug_str:0000000000000124 .LASF71
     /tmp/cc461iP7.s:6780   .debug_str:0000000000000082 .LASF72
     /tmp/cc461iP7.s:6906   .debug_str:000000000000044a .LASF105
     /tmp/cc461iP7.s:7066   .debug_str:00000000000009ff .LASF73
GAS LISTING /tmp/cc461iP7.s 			page 62


     /tmp/cc461iP7.s:6972   .debug_str:00000000000006ca .LASF74
     /tmp/cc461iP7.s:7188   .debug_str:0000000000000def .LASF75
     /tmp/cc461iP7.s:7042   .debug_str:0000000000000929 .LASF78
     /tmp/cc461iP7.s:6850   .debug_str:0000000000000291 .LASF76
     /tmp/cc461iP7.s:7038   .debug_str:0000000000000907 .LASF77
     /tmp/cc461iP7.s:7020   .debug_str:000000000000086e .LASF79
     /tmp/cc461iP7.s:6982   .debug_str:0000000000000704 .LASF80
     /tmp/cc461iP7.s:7164   .debug_str:0000000000000d29 .LASF81
     /tmp/cc461iP7.s:6964   .debug_str:000000000000068c .LASF82
     /tmp/cc461iP7.s:7080   .debug_str:0000000000000a45 .LASF83
     /tmp/cc461iP7.s:6794   .debug_str:00000000000000c7 .LASF84
     /tmp/cc461iP7.s:7128   .debug_str:0000000000000c1c .LASF85
     /tmp/cc461iP7.s:6840   .debug_str:000000000000023e .LASF86
     /tmp/cc461iP7.s:6904   .debug_str:0000000000000440 .LASF87
     /tmp/cc461iP7.s:6996   .debug_str:0000000000000783 .LASF88
     /tmp/cc461iP7.s:7092   .debug_str:0000000000000a86 .LASF142
     /tmp/cc461iP7.s:6916   .debug_str:00000000000004d7 .LASF89
     /tmp/cc461iP7.s:7132   .debug_str:0000000000000c2b .LASF90
     /tmp/cc461iP7.s:6778   .debug_str:0000000000000069 .LASF91
     /tmp/cc461iP7.s:6810   .debug_str:000000000000015a .LASF92
     /tmp/cc461iP7.s:7108   .debug_str:0000000000000ba6 .LASF93
     /tmp/cc461iP7.s:7018   .debug_str:0000000000000866 .LASF94
     /tmp/cc461iP7.s:6860   .debug_str:00000000000002f2 .LASF95
     /tmp/cc461iP7.s:7058   .debug_str:00000000000009be .LASF96
     /tmp/cc461iP7.s:7172   .debug_str:0000000000000d64 .LASF97
     /tmp/cc461iP7.s:7178   .debug_str:0000000000000d83 .LASF214
     /tmp/cc461iP7.s:6920   .debug_str:000000000000050b .LASF215
     /tmp/cc461iP7.s:6924   .debug_str:0000000000000549 .LASF98
     /tmp/cc461iP7.s:6798   .debug_str:00000000000000f0 .LASF99
     /tmp/cc461iP7.s:7044   .debug_str:0000000000000946 .LASF100
     /tmp/cc461iP7.s:7194   .debug_str:0000000000000e11 .LASF101
     /tmp/cc461iP7.s:7130   .debug_str:0000000000000c26 .LASF104
     /tmp/cc461iP7.s:6934   .debug_str:00000000000005be .LASF102
     /tmp/cc461iP7.s:7138   .debug_str:0000000000000c71 .LASF106
     /tmp/cc461iP7.s:6966   .debug_str:00000000000006b0 .LASF107
     /tmp/cc461iP7.s:6986   .debug_str:0000000000000720 .LASF108
     /tmp/cc461iP7.s:7008   .debug_str:000000000000080a .LASF109
     /tmp/cc461iP7.s:6880   .debug_str:000000000000039c .LASF216
     /tmp/cc461iP7.s:6958   .debug_str:0000000000000639 .LASF110
     /tmp/cc461iP7.s:6768   .debug_str:000000000000002b .LASF111
     /tmp/cc461iP7.s:6772   .debug_str:0000000000000047 .LASF112
     /tmp/cc461iP7.s:6918   .debug_str:00000000000004f3 .LASF113
     /tmp/cc461iP7.s:7026   .debug_str:00000000000008be .LASF114
     /tmp/cc461iP7.s:7182   .debug_str:0000000000000d9d .LASF115
     /tmp/cc461iP7.s:6950   .debug_str:000000000000060c .LASF116
     /tmp/cc461iP7.s:7146   .debug_str:0000000000000ca5 .LASF117
     /tmp/cc461iP7.s:6984   .debug_str:0000000000000714 .LASF118
     /tmp/cc461iP7.s:6928   .debug_str:0000000000000579 .LASF119
     /tmp/cc461iP7.s:7196   .debug_str:0000000000000e1f .LASF120
     /tmp/cc461iP7.s:7024   .debug_str:000000000000089f .LASF121
     /tmp/cc461iP7.s:7056   .debug_str:00000000000009b3 .LASF122
     /tmp/cc461iP7.s:6854   .debug_str:00000000000002c1 .LASF123
     /tmp/cc461iP7.s:6994   .debug_str:000000000000077a .LASF124
     /tmp/cc461iP7.s:6808   .debug_str:000000000000013c .LASF125
     /tmp/cc461iP7.s:6782   .debug_str:0000000000000087 .LASF126
     /tmp/cc461iP7.s:7174   .debug_str:0000000000000d76 .LASF127
     /tmp/cc461iP7.s:6796   .debug_str:00000000000000ea .LASF128
GAS LISTING /tmp/cc461iP7.s 			page 63


     /tmp/cc461iP7.s:6788   .debug_str:00000000000000a0 .LASF129
     /tmp/cc461iP7.s:6954   .debug_str:000000000000061d .LASF130
     /tmp/cc461iP7.s:7084   .debug_str:0000000000000a59 .LASF131
     /tmp/cc461iP7.s:7076   .debug_str:0000000000000a35 .LASF132
     /tmp/cc461iP7.s:6932   .debug_str:00000000000005ae .LASF133
     /tmp/cc461iP7.s:7086   .debug_str:0000000000000a61 .LASF134
     /tmp/cc461iP7.s:6992   .debug_str:000000000000075f .LASF135
     /tmp/cc461iP7.s:6786   .debug_str:0000000000000094 .LASF136
     /tmp/cc461iP7.s:7136   .debug_str:0000000000000c56 .LASF137
     /tmp/cc461iP7.s:6968   .debug_str:00000000000006b5 .LASF138
     /tmp/cc461iP7.s:6828   .debug_str:00000000000001d8 .LASF139
     /tmp/cc461iP7.s:7070   .debug_str:0000000000000a0b .LASF140
     /tmp/cc461iP7.s:7048   .debug_str:0000000000000962 .LASF141
     /tmp/cc461iP7.s:6980   .debug_str:00000000000006ff .LASF143
     /tmp/cc461iP7.s:6940   .debug_str:00000000000005db .LASF144
     /tmp/cc461iP7.s:6764   .debug_str:0000000000000011 .LASF145
     /tmp/cc461iP7.s:7176   .debug_str:0000000000000d7d .LASF146
     /tmp/cc461iP7.s:7000   .debug_str:00000000000007c8 .LASF147
     /tmp/cc461iP7.s:6952   .debug_str:0000000000000614 .LASF148
     /tmp/cc461iP7.s:7102   .debug_str:0000000000000b70 .LASF149
     /tmp/cc461iP7.s:7094   .debug_str:0000000000000a8e .LASF217
     /tmp/cc461iP7.s:6902   .debug_str:000000000000043a .LASF150
     /tmp/cc461iP7.s:6912   .debug_str:0000000000000497 .LASF151
     /tmp/cc461iP7.s:6812   .debug_str:0000000000000163 .LASF152
     /tmp/cc461iP7.s:7110   .debug_str:0000000000000baf .LASF153
     /tmp/cc461iP7.s:7022   .debug_str:000000000000088f .LASF154
     /tmp/cc461iP7.s:6792   .debug_str:00000000000000b7 .LASF155
     /tmp/cc461iP7.s:7170   .debug_str:0000000000000d54 .LASF156
     /tmp/cc461iP7.s:7074   .debug_str:0000000000000a24 .LASF157
     /tmp/cc461iP7.s:7060   .debug_str:00000000000009cf .LASF158
     /tmp/cc461iP7.s:6762   .debug_str:0000000000000000 .LASF159
     /tmp/cc461iP7.s:6876   .debug_str:0000000000000379 .LASF160
     /tmp/cc461iP7.s:6770   .debug_str:0000000000000042 .LASF161
     /tmp/cc461iP7.s:7180   .debug_str:0000000000000d97 .LASF162
     /tmp/cc461iP7.s:7112   .debug_str:0000000000000bcb .LASF163
     /tmp/cc461iP7.s:7106   .debug_str:0000000000000b9c .LASF164
     /tmp/cc461iP7.s:7082   .debug_str:0000000000000a50 .LASF165
     /tmp/cc461iP7.s:7156   .debug_str:0000000000000ce4 .LASF166
     /tmp/cc461iP7.s:6790   .debug_str:00000000000000a9 .LASF167
     /tmp/cc461iP7.s:7014   .debug_str:0000000000000844 .LASF168
     /tmp/cc461iP7.s:6818   .debug_str:000000000000018e .LASF169
     /tmp/cc461iP7.s:6914   .debug_str:00000000000004ab .LASF170
     /tmp/cc461iP7.s:6830   .debug_str:00000000000001f5 .LASF171
     /tmp/cc461iP7.s:6822   .debug_str:00000000000001a3 .LASF172
     /tmp/cc461iP7.s:7054   .debug_str:00000000000009a2 .LASF173
     /tmp/cc461iP7.s:7100   .debug_str:0000000000000b67 .LASF174
     /tmp/cc461iP7.s:7142   .debug_str:0000000000000c99 .LASF175
     /tmp/cc461iP7.s:7190   .debug_str:0000000000000e00 .LASF176
     /tmp/cc461iP7.s:6842   .debug_str:0000000000000260 .LASF177
     /tmp/cc461iP7.s:6858   .debug_str:00000000000002e7 .LASF178
     /tmp/cc461iP7.s:6872   .debug_str:000000000000034c .LASF179
     /tmp/cc461iP7.s:6832   .debug_str:00000000000001fe .LASF180
     /tmp/cc461iP7.s:7116   .debug_str:0000000000000be8 .LASF181
     /tmp/cc461iP7.s:7078   .debug_str:0000000000000a3e .LASF182
     /tmp/cc461iP7.s:6908   .debug_str:000000000000046c .LASF183
     /tmp/cc461iP7.s:6884   .debug_str:00000000000003c2 .LASF184
     /tmp/cc461iP7.s:6874   .debug_str:0000000000000360 .LASF185
GAS LISTING /tmp/cc461iP7.s 			page 64


     /tmp/cc461iP7.s:6956   .debug_str:0000000000000625 .LASF186
     /tmp/cc461iP7.s:6948   .debug_str:00000000000005f8 .LASF187
     /tmp/cc461iP7.s:6890   .debug_str:00000000000003e1 .LASF188
     /tmp/cc461iP7.s:7088   .debug_str:0000000000000a6c .LASF189
     /tmp/cc461iP7.s:6998   .debug_str:00000000000007c0 .LASF190
     /tmp/cc461iP7.s:6864   .debug_str:000000000000030c .LASF191
     /tmp/cc461iP7.s:7090   .debug_str:0000000000000a81 .LASF192
     /tmp/cc461iP7.s:6856   .debug_str:00000000000002e2 .LASF194
     /tmp/cc461iP7.s:6896   .debug_str:000000000000041b .LASF193
     /tmp/cc461iP7.s:6848   .debug_str:000000000000027a .LASF203
     /tmp/cc461iP7.s:1721   .text:00000000000004b4 .LFB51
     /tmp/cc461iP7.s:1813   .text:0000000000000520 .LFE51
     /tmp/cc461iP7.s:7064   .debug_str:00000000000009f8 .LASF195
     /tmp/cc461iP7.s:6041   .debug_loc:0000000000000000 .LLST82
     /tmp/cc461iP7.s:1733   .text:00000000000004c4 .LBB397
     /tmp/cc461iP7.s:1749   .text:00000000000004d0 .LBE397
     /tmp/cc461iP7.s:1780   .text:0000000000000508 .LBB399
     /tmp/cc461iP7.s:1795   .text:0000000000000514 .LBE399
     /tmp/cc461iP7.s:6056   .debug_loc:0000000000000049 .LLST83
     /tmp/cc461iP7.s:1797   .text:0000000000000514 .LBB401
     /tmp/cc461iP7.s:1809   .text:000000000000051c .LBE401
     /tmp/cc461iP7.s:6065   .debug_loc:000000000000006f .LLST84
     /tmp/cc461iP7.s:1778   .text:0000000000000508 .LVL126
     /tmp/cc461iP7.s:46     .text:0000000000000020 .LFB50
     /tmp/cc461iP7.s:1715   .text:00000000000004b4 .LFE50
     /tmp/cc461iP7.s:6073   .debug_loc:0000000000000093 .LLST0
     /tmp/cc461iP7.s:6766   .debug_str:0000000000000025 .LASF196
     /tmp/cc461iP7.s:6088   .debug_loc:00000000000000dc .LLST1
     /tmp/cc461iP7.s:7118   .debug_str:0000000000000bff .LASF197
     /tmp/cc461iP7.s:6143   .debug_loc:00000000000001e3 .LLST2
     /tmp/cc461iP7.s:449    .text:0000000000000138 .LBB178
     /tmp/cc461iP7.s:594    .text:00000000000001a0 .LBE178
     /tmp/cc461iP7.s:7152   .debug_str:0000000000000cd5 .LASF198
     /tmp/cc461iP7.s:6154   .debug_loc:0000000000000219 .LLST6
     /tmp/cc461iP7.s:6878   .debug_str:0000000000000394 .LASF199
     /tmp/cc461iP7.s:6161   .debug_loc:000000000000023c .LLST7
     /tmp/cc461iP7.s:6168   .debug_loc:000000000000025f .LLST8
     /tmp/cc461iP7.s:7120   .debug_str:0000000000000c04 .LASF200
     /tmp/cc461iP7.s:6175   .debug_loc:0000000000000282 .LLST9
     /tmp/cc461iP7.s:7122   .debug_str:0000000000000c09 .LASF201
     /tmp/cc461iP7.s:6182   .debug_loc:00000000000002a5 .LLST10
     /tmp/cc461iP7.s:7124   .debug_str:0000000000000c0e .LASF202
     /tmp/cc461iP7.s:6189   .debug_loc:00000000000002c8 .LLST11
     /tmp/cc461iP7.s:6196   .debug_loc:00000000000002eb .LLST12
     /tmp/cc461iP7.s:6203   .debug_loc:000000000000030e .LLST13
     /tmp/cc461iP7.s:451    .text:0000000000000138 .LBB179
     /tmp/cc461iP7.s:466    .text:0000000000000144 .LBE179
     /tmp/cc461iP7.s:471    .text:0000000000000148 .LBB181
     /tmp/cc461iP7.s:487    .text:0000000000000154 .LBE181
     /tmp/cc461iP7.s:561    .text:000000000000018c .LBB183
     /tmp/cc461iP7.s:572    .text:0000000000000190 .LBE183
     /tmp/cc461iP7.s:6210   .debug_loc:0000000000000331 .LLST14
     /tmp/cc461iP7.s:574    .text:0000000000000190 .LBB185
     /tmp/cc461iP7.s:588    .text:0000000000000198 .LBE185
     /tmp/cc461iP7.s:6217   .debug_loc:0000000000000354 .LLST15
     /tmp/cc461iP7.s:541    .text:000000000000017c .LVL22
     /tmp/cc461iP7.s:597    .text:00000000000001a0 .LBB361
GAS LISTING /tmp/cc461iP7.s 			page 65


     /tmp/cc461iP7.s:688    .text:00000000000001dc .LBE361
     /tmp/cc461iP7.s:6224   .debug_loc:0000000000000377 .LLST77
     /tmp/cc461iP7.s:6231   .debug_loc:000000000000039a .LLST78
     /tmp/cc461iP7.s:6238   .debug_loc:00000000000003bd .LLST79
     /tmp/cc461iP7.s:599    .text:00000000000001a0 .LBB362
     /tmp/cc461iP7.s:615    .text:00000000000001ac .LBE362
     /tmp/cc461iP7.s:620    .text:00000000000001b0 .LBB364
     /tmp/cc461iP7.s:636    .text:00000000000001bc .LBE364
     /tmp/cc461iP7.s:660    .text:00000000000001d0 .LBB366
     /tmp/cc461iP7.s:671    .text:00000000000001d4 .LBE366
     /tmp/cc461iP7.s:6245   .debug_loc:00000000000003e0 .LLST80
     /tmp/cc461iP7.s:673    .text:00000000000001d4 .LBB368
     /tmp/cc461iP7.s:687    .text:00000000000001dc .LBE368
     /tmp/cc461iP7.s:6252   .debug_loc:0000000000000403 .LLST81
     /tmp/cc461iP7.s:650    .text:00000000000001cc .LVL33
     /tmp/cc461iP7.s:690    .text:00000000000001dc .LBB342
     /tmp/cc461iP7.s:779    .text:0000000000000214 .LBE342
     /tmp/cc461iP7.s:6259   .debug_loc:0000000000000426 .LLST72
     /tmp/cc461iP7.s:6266   .debug_loc:0000000000000449 .LLST73
     /tmp/cc461iP7.s:6273   .debug_loc:000000000000046c .LLST74
     /tmp/cc461iP7.s:692    .text:00000000000001dc .LBB343
     /tmp/cc461iP7.s:708    .text:00000000000001e8 .LBE343
     /tmp/cc461iP7.s:713    .text:00000000000001ec .LBB345
     /tmp/cc461iP7.s:729    .text:00000000000001f8 .LBE345
     /tmp/cc461iP7.s:751    .text:0000000000000208 .LBB347
     /tmp/cc461iP7.s:762    .text:000000000000020c .LBE347
     /tmp/cc461iP7.s:6280   .debug_loc:000000000000048f .LLST75
     /tmp/cc461iP7.s:764    .text:000000000000020c .LBB349
     /tmp/cc461iP7.s:778    .text:0000000000000214 .LBE349
     /tmp/cc461iP7.s:6287   .debug_loc:00000000000004b2 .LLST76
     /tmp/cc461iP7.s:741    .text:0000000000000204 .LVL41
     /tmp/cc461iP7.s:781    .text:0000000000000214 .LBB324
     /tmp/cc461iP7.s:861    .text:0000000000000258 .LBE324
     /tmp/cc461iP7.s:6294   .debug_loc:00000000000004d5 .LLST68
     /tmp/cc461iP7.s:6301   .debug_loc:00000000000004f8 .LLST69
     /tmp/cc461iP7.s:783    .text:0000000000000214 .LBB325
     /tmp/cc461iP7.s:799    .text:0000000000000220 .LBE325
     /tmp/cc461iP7.s:804    .text:0000000000000224 .LBB327
     /tmp/cc461iP7.s:820    .text:0000000000000230 .LBE327
     /tmp/cc461iP7.s:833    .text:000000000000024c .LBB329
     /tmp/cc461iP7.s:844    .text:0000000000000250 .LBE329
     /tmp/cc461iP7.s:6308   .debug_loc:000000000000051b .LLST70
     /tmp/cc461iP7.s:846    .text:0000000000000250 .LBB331
     /tmp/cc461iP7.s:860    .text:0000000000000258 .LBE331
     /tmp/cc461iP7.s:6315   .debug_loc:000000000000053e .LLST71
     /tmp/cc461iP7.s:831    .text:000000000000024c .LVL48
     /tmp/cc461iP7.s:863    .text:0000000000000258 .LBB307
     /tmp/cc461iP7.s:936    .text:0000000000000288 .LBE307
     /tmp/cc461iP7.s:6322   .debug_loc:0000000000000561 .LLST64
     /tmp/cc461iP7.s:6329   .debug_loc:0000000000000584 .LLST65
     /tmp/cc461iP7.s:865    .text:0000000000000258 .LBB308
     /tmp/cc461iP7.s:881    .text:0000000000000264 .LBE308
     /tmp/cc461iP7.s:886    .text:0000000000000268 .LBB310
     /tmp/cc461iP7.s:902    .text:0000000000000274 .LBE310
     /tmp/cc461iP7.s:908    .text:000000000000027c .LBB312
     /tmp/cc461iP7.s:919    .text:0000000000000280 .LBE312
     /tmp/cc461iP7.s:6336   .debug_loc:00000000000005a7 .LLST66
GAS LISTING /tmp/cc461iP7.s 			page 66


     /tmp/cc461iP7.s:921    .text:0000000000000280 .LBB314
     /tmp/cc461iP7.s:935    .text:0000000000000288 .LBE314
     /tmp/cc461iP7.s:6343   .debug_loc:00000000000005ca .LLST67
     /tmp/cc461iP7.s:906    .text:000000000000027c .LVL54
     /tmp/cc461iP7.s:938    .text:0000000000000288 .LBB291
     /tmp/cc461iP7.s:1015   .text:00000000000002c4 .LBE291
     /tmp/cc461iP7.s:6350   .debug_loc:00000000000005ed .LLST60
     /tmp/cc461iP7.s:6357   .debug_loc:0000000000000610 .LLST61
     /tmp/cc461iP7.s:940    .text:0000000000000288 .LBB292
     /tmp/cc461iP7.s:956    .text:0000000000000294 .LBE292
     /tmp/cc461iP7.s:961    .text:0000000000000298 .LBB294
     /tmp/cc461iP7.s:977    .text:00000000000002a4 .LBE294
     /tmp/cc461iP7.s:987    .text:00000000000002b8 .LBB296
     /tmp/cc461iP7.s:998    .text:00000000000002bc .LBE296
     /tmp/cc461iP7.s:6364   .debug_loc:0000000000000633 .LLST62
     /tmp/cc461iP7.s:1000   .text:00000000000002bc .LBB298
     /tmp/cc461iP7.s:1014   .text:00000000000002c4 .LBE298
     /tmp/cc461iP7.s:6371   .debug_loc:0000000000000656 .LLST63
     /tmp/cc461iP7.s:985    .text:00000000000002b8 .LVL60
     /tmp/cc461iP7.s:1017   .text:00000000000002c4 .LBB272
     /tmp/cc461iP7.s:1158   .text:000000000000032c .LBE272
     /tmp/cc461iP7.s:6378   .debug_loc:0000000000000679 .LLST49
     /tmp/cc461iP7.s:6385   .debug_loc:000000000000069c .LLST50
     /tmp/cc461iP7.s:6392   .debug_loc:00000000000006bf .LLST51
     /tmp/cc461iP7.s:6399   .debug_loc:00000000000006e2 .LLST52
     /tmp/cc461iP7.s:6406   .debug_loc:0000000000000705 .LLST53
     /tmp/cc461iP7.s:6413   .debug_loc:0000000000000728 .LLST54
     /tmp/cc461iP7.s:1019   .text:00000000000002c4 .LBB273
     /tmp/cc461iP7.s:1035   .text:00000000000002d0 .LBE273
     /tmp/cc461iP7.s:1040   .text:00000000000002d4 .LBB275
     /tmp/cc461iP7.s:1056   .text:00000000000002e0 .LBE275
     /tmp/cc461iP7.s:1088   .text:00000000000002fc .LBB277
     /tmp/cc461iP7.s:1104   .text:0000000000000308 .LBE277
     /tmp/cc461iP7.s:6430   .debug_loc:0000000000000773 .LLST55
     /tmp/cc461iP7.s:6437   .debug_loc:0000000000000796 .LLST56
     /tmp/cc461iP7.s:1094   .text:0000000000000300 .LBB279
     /tmp/cc461iP7.s:1102   .text:0000000000000308 .LBE279
     /tmp/cc461iP7.s:6444   .debug_loc:00000000000007b9 .LLST57
     /tmp/cc461iP7.s:1125   .text:0000000000000318 .LBB281
     /tmp/cc461iP7.s:1136   .text:000000000000031c .LBE281
     /tmp/cc461iP7.s:6453   .debug_loc:00000000000007de .LLST58
     /tmp/cc461iP7.s:1138   .text:000000000000031c .LBB283
     /tmp/cc461iP7.s:1152   .text:0000000000000324 .LBE283
     /tmp/cc461iP7.s:6460   .debug_loc:0000000000000801 .LLST59
     /tmp/cc461iP7.s:1087   .text:00000000000002fc .LVL68
     /tmp/cc461iP7.s:1160   .text:000000000000032c .LBB250
     /tmp/cc461iP7.s:1317   .text:00000000000003c0 .LBE250
     /tmp/cc461iP7.s:6467   .debug_loc:0000000000000824 .LLST38
     /tmp/cc461iP7.s:6474   .debug_loc:0000000000000847 .LLST39
     /tmp/cc461iP7.s:6481   .debug_loc:000000000000086a .LLST40
     /tmp/cc461iP7.s:6746   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc461iP7.s:6488   .debug_loc:000000000000088d .LLST42
     /tmp/cc461iP7.s:1218   .text:0000000000000354 .LBB256
     /tmp/cc461iP7.s:6495   .debug_loc:00000000000008b0 .LLST43
     /tmp/cc461iP7.s:6510   .debug_loc:00000000000008ea .LLST44
     /tmp/cc461iP7.s:6521   .debug_loc:0000000000000920 .LLST45
     /tmp/cc461iP7.s:1228   .text:0000000000000364 .LVL82
GAS LISTING /tmp/cc461iP7.s 			page 67


     /tmp/cc461iP7.s:1245   .text:0000000000000384 .LVL83
     /tmp/cc461iP7.s:1162   .text:000000000000032c .LBB251
     /tmp/cc461iP7.s:1177   .text:0000000000000338 .LBE251
     /tmp/cc461iP7.s:1182   .text:000000000000033c .LBB253
     /tmp/cc461iP7.s:1198   .text:0000000000000348 .LBE253
     /tmp/cc461iP7.s:1250   .text:0000000000000384 .LBB260
     /tmp/cc461iP7.s:1260   .text:0000000000000390 .LBE260
     /tmp/cc461iP7.s:6528   .debug_loc:0000000000000943 .LLST46
     /tmp/cc461iP7.s:1289   .text:00000000000003b4 .LBB263
     /tmp/cc461iP7.s:1300   .text:00000000000003b8 .LBE263
     /tmp/cc461iP7.s:6537   .debug_loc:0000000000000968 .LLST47
     /tmp/cc461iP7.s:1302   .text:00000000000003b8 .LBB265
     /tmp/cc461iP7.s:1316   .text:00000000000003c0 .LBE265
     /tmp/cc461iP7.s:6544   .debug_loc:000000000000098b .LLST48
     /tmp/cc461iP7.s:1286   .text:00000000000003b4 .LVL87
     /tmp/cc461iP7.s:1319   .text:00000000000003c0 .LBB237
     /tmp/cc461iP7.s:1414   .text:00000000000003fc .LBE237
     /tmp/cc461iP7.s:6551   .debug_loc:00000000000009ae .LLST32
     /tmp/cc461iP7.s:6558   .debug_loc:00000000000009d1 .LLST33
     /tmp/cc461iP7.s:6565   .debug_loc:00000000000009f4 .LLST34
     /tmp/cc461iP7.s:6572   .debug_loc:0000000000000a17 .LLST35
     /tmp/cc461iP7.s:1321   .text:00000000000003c0 .LBB238
     /tmp/cc461iP7.s:1337   .text:00000000000003cc .LBE238
     /tmp/cc461iP7.s:1342   .text:00000000000003d0 .LBB240
     /tmp/cc461iP7.s:1358   .text:00000000000003dc .LBE240
     /tmp/cc461iP7.s:1386   .text:00000000000003f0 .LBB242
     /tmp/cc461iP7.s:1397   .text:00000000000003f4 .LBE242
     /tmp/cc461iP7.s:6579   .debug_loc:0000000000000a3a .LLST36
     /tmp/cc461iP7.s:1399   .text:00000000000003f4 .LBB244
     /tmp/cc461iP7.s:1413   .text:00000000000003fc .LBE244
     /tmp/cc461iP7.s:6586   .debug_loc:0000000000000a5d .LLST37
     /tmp/cc461iP7.s:1376   .text:00000000000003ec .LVL94
     /tmp/cc461iP7.s:1416   .text:00000000000003fc .LBB225
     /tmp/cc461iP7.s:1513   .text:000000000000043c .LBE225
     /tmp/cc461iP7.s:6593   .debug_loc:0000000000000a80 .LLST26
     /tmp/cc461iP7.s:6600   .debug_loc:0000000000000aa3 .LLST27
     /tmp/cc461iP7.s:6607   .debug_loc:0000000000000ac6 .LLST28
     /tmp/cc461iP7.s:6614   .debug_loc:0000000000000ae9 .LLST29
     /tmp/cc461iP7.s:1418   .text:00000000000003fc .LBB226
     /tmp/cc461iP7.s:1434   .text:0000000000000408 .LBE226
     /tmp/cc461iP7.s:1439   .text:000000000000040c .LBB228
     /tmp/cc461iP7.s:1455   .text:0000000000000418 .LBE228
     /tmp/cc461iP7.s:1485   .text:0000000000000430 .LBB230
     /tmp/cc461iP7.s:1496   .text:0000000000000434 .LBE230
     /tmp/cc461iP7.s:6622   .debug_loc:0000000000000b0d .LLST30
     /tmp/cc461iP7.s:1498   .text:0000000000000434 .LBB232
     /tmp/cc461iP7.s:1512   .text:000000000000043c .LBE232
     /tmp/cc461iP7.s:6629   .debug_loc:0000000000000b30 .LLST31
     /tmp/cc461iP7.s:1473   .text:0000000000000428 .LVL102
     /tmp/cc461iP7.s:1515   .text:000000000000043c .LBB211
     /tmp/cc461iP7.s:1628   .text:0000000000000488 .LBE211
     /tmp/cc461iP7.s:6636   .debug_loc:0000000000000b53 .LLST21
     /tmp/cc461iP7.s:6643   .debug_loc:0000000000000b76 .LLST22
     /tmp/cc461iP7.s:6650   .debug_loc:0000000000000b99 .LLST23
     /tmp/cc461iP7.s:1517   .text:000000000000043c .LBB212
     /tmp/cc461iP7.s:1533   .text:0000000000000448 .LBE212
     /tmp/cc461iP7.s:1538   .text:000000000000044c .LBB214
GAS LISTING /tmp/cc461iP7.s 			page 68


     /tmp/cc461iP7.s:1554   .text:0000000000000458 .LBE214
     /tmp/cc461iP7.s:1559   .text:0000000000000460 .LBB216
     /tmp/cc461iP7.s:1570   .text:0000000000000464 .LBE216
     /tmp/cc461iP7.s:1579   .text:0000000000000474 .LBB218
     /tmp/cc461iP7.s:1590   .text:0000000000000478 .LBE218
     /tmp/cc461iP7.s:1600   .text:000000000000047c .LBB220
     /tmp/cc461iP7.s:1611   .text:0000000000000480 .LBE220
     /tmp/cc461iP7.s:6657   .debug_loc:0000000000000bbc .LLST24
     /tmp/cc461iP7.s:1613   .text:0000000000000480 .LBB222
     /tmp/cc461iP7.s:1627   .text:0000000000000488 .LBE222
     /tmp/cc461iP7.s:6664   .debug_loc:0000000000000bdf .LLST25
     /tmp/cc461iP7.s:1574   .text:000000000000046c .LVL111
     /tmp/cc461iP7.s:316    .text:00000000000000e4 .LBB198
     /tmp/cc461iP7.s:436    .text:0000000000000138 .LBE198
     /tmp/cc461iP7.s:6671   .debug_loc:0000000000000c02 .LLST16
     /tmp/cc461iP7.s:6678   .debug_loc:0000000000000c25 .LLST17
     /tmp/cc461iP7.s:6685   .debug_loc:0000000000000c48 .LLST18
     /tmp/cc461iP7.s:318    .text:00000000000000e4 .LBB199
     /tmp/cc461iP7.s:334    .text:00000000000000f0 .LBE199
     /tmp/cc461iP7.s:339    .text:00000000000000f4 .LBB201
     /tmp/cc461iP7.s:355    .text:0000000000000100 .LBE201
     /tmp/cc461iP7.s:375    .text:0000000000000114 .LBB203
     /tmp/cc461iP7.s:386    .text:0000000000000118 .LBE203
     /tmp/cc461iP7.s:395    .text:0000000000000128 .LBB205
     /tmp/cc461iP7.s:406    .text:000000000000012c .LBE205
     /tmp/cc461iP7.s:408    .text:000000000000012c .LBB207
     /tmp/cc461iP7.s:419    .text:0000000000000130 .LBE207
     /tmp/cc461iP7.s:6692   .debug_loc:0000000000000c6b .LLST19
     /tmp/cc461iP7.s:421    .text:0000000000000130 .LBB209
     /tmp/cc461iP7.s:435    .text:0000000000000138 .LBE209
     /tmp/cc461iP7.s:6699   .debug_loc:0000000000000c8e .LLST20
     /tmp/cc461iP7.s:390    .text:0000000000000120 .LVL11
     /tmp/cc461iP7.s:1640   .text:0000000000000488 .LBB168
     /tmp/cc461iP7.s:1709   .text:00000000000004b0 .LBE168
     /tmp/cc461iP7.s:6706   .debug_loc:0000000000000cb1 .LLST3
     /tmp/cc461iP7.s:1642   .text:0000000000000488 .LBB169
     /tmp/cc461iP7.s:1659   .text:0000000000000494 .LBE169
     /tmp/cc461iP7.s:1661   .text:0000000000000494 .LBB171
     /tmp/cc461iP7.s:1676   .text:00000000000004a0 .LBE171
     /tmp/cc461iP7.s:1684   .text:00000000000004a8 .LBB173
     /tmp/cc461iP7.s:1695   .text:00000000000004ac .LBE173
     /tmp/cc461iP7.s:6719   .debug_loc:0000000000000ce9 .LLST4
     /tmp/cc461iP7.s:1697   .text:00000000000004ac .LBB175
     /tmp/cc461iP7.s:1708   .text:00000000000004b0 .LBE175
     /tmp/cc461iP7.s:6726   .debug_loc:0000000000000d0c .LLST5
     /tmp/cc461iP7.s:66     .text:0000000000000040 .LBB164
     /tmp/cc461iP7.s:82     .text:000000000000004c .LBE164
     /tmp/cc461iP7.s:10     .text:0000000000000000 .LFB49
     /tmp/cc461iP7.s:40     .text:0000000000000020 .LFE49
     /tmp/cc461iP7.s:6784   .debug_str:000000000000008f .LASF205
     /tmp/cc461iP7.s:7002   .debug_str:00000000000007dc .LASF204
     /tmp/cc461iP7.s:7140   .debug_str:0000000000000c94 .LASF206
     /tmp/cc461iP7.s:6946   .debug_str:00000000000005f2 .LASF207
     /tmp/cc461iP7.s:6866   .debug_str:0000000000000312 .LASF208
     /tmp/cc461iP7.s:6886   .debug_str:00000000000003c8 .LASF209
     /tmp/cc461iP7.s:6820   .debug_str:000000000000019c .LASF210
     /tmp/cc461iP7.s:1747   .text:00000000000004d0 .LVL123
GAS LISTING /tmp/cc461iP7.s 			page 69


     /tmp/cc461iP7.s:1760   .text:00000000000004f0 .LVL124
     /tmp/cc461iP7.s:1772   .text:0000000000000500 .LVL125
     /tmp/cc461iP7.s:1792   .text:0000000000000514 .LVL127
     /tmp/cc461iP7.s:1806   .text:000000000000051c .LVL128
     /tmp/cc461iP7.s:85     .text:0000000000000050 .LVL0
     /tmp/cc461iP7.s:107    .text:0000000000000064 .LVL2
     /tmp/cc461iP7.s:129    .text:0000000000000084 .LVL3
     /tmp/cc461iP7.s:136    .text:0000000000000088 .LVL4
     /tmp/cc461iP7.s:1624   .text:0000000000000488 .LVL116
     /tmp/cc461iP7.s:1651   .text:000000000000048c .LVL117
     /tmp/cc461iP7.s:94     .text:0000000000000054 .LVL1
     /tmp/cc461iP7.s:332    .text:00000000000000f0 .LVL5
     /tmp/cc461iP7.s:432    .text:0000000000000138 .LVL15
     /tmp/cc461iP7.s:613    .text:00000000000001ac .LVL28
     /tmp/cc461iP7.s:684    .text:00000000000001dc .LVL36
     /tmp/cc461iP7.s:706    .text:00000000000001e8 .LVL37
     /tmp/cc461iP7.s:775    .text:0000000000000214 .LVL44
     /tmp/cc461iP7.s:797    .text:0000000000000220 .LVL45
     /tmp/cc461iP7.s:857    .text:0000000000000258 .LVL50
     /tmp/cc461iP7.s:879    .text:0000000000000264 .LVL51
     /tmp/cc461iP7.s:932    .text:0000000000000288 .LVL56
     /tmp/cc461iP7.s:954    .text:0000000000000294 .LVL57
     /tmp/cc461iP7.s:1011   .text:00000000000002c4 .LVL62
     /tmp/cc461iP7.s:1033   .text:00000000000002d0 .LVL63
     /tmp/cc461iP7.s:1156   .text:000000000000032c .LVL76
     /tmp/cc461iP7.s:1211   .text:0000000000000350 .LVL79
     /tmp/cc461iP7.s:1313   .text:00000000000003c0 .LVL89
     /tmp/cc461iP7.s:1335   .text:00000000000003cc .LVL90
     /tmp/cc461iP7.s:1410   .text:00000000000003fc .LVL97
     /tmp/cc461iP7.s:1432   .text:0000000000000408 .LVL98
     /tmp/cc461iP7.s:1509   .text:000000000000043c .LVL105
     /tmp/cc461iP7.s:1531   .text:0000000000000448 .LVL106
     /tmp/cc461iP7.s:643    .text:00000000000001c0 .LVL31
     /tmp/cc461iP7.s:648    .text:00000000000001c4 .LVL32
     /tmp/cc461iP7.s:736    .text:00000000000001fc .LVL40
     /tmp/cc461iP7.s:469    .text:0000000000000148 .LVL16
     /tmp/cc461iP7.s:592    .text:00000000000001a0 .LVL27
     /tmp/cc461iP7.s:485    .text:0000000000000154 .LVL17
     /tmp/cc461iP7.s:518    .text:0000000000000168 .LVL18
     /tmp/cc461iP7.s:524    .text:000000000000016c .LVL19
     /tmp/cc461iP7.s:530    .text:0000000000000170 .LVL20
     /tmp/cc461iP7.s:536    .text:0000000000000174 .LVL21
     /tmp/cc461iP7.s:551    .text:0000000000000188 .LVL23
     /tmp/cc461iP7.s:585    .text:0000000000000198 .LVL26
     /tmp/cc461iP7.s:559    .text:000000000000018c .LVL24
     /tmp/cc461iP7.s:569    .text:0000000000000190 .LVL25
     /tmp/cc461iP7.s:618    .text:00000000000001b0 .LVL29
     /tmp/cc461iP7.s:634    .text:00000000000001bc .LVL30
     /tmp/cc461iP7.s:658    .text:00000000000001d0 .LVL34
     /tmp/cc461iP7.s:668    .text:00000000000001d4 .LVL35
     /tmp/cc461iP7.s:711    .text:00000000000001ec .LVL38
     /tmp/cc461iP7.s:727    .text:00000000000001f8 .LVL39
     /tmp/cc461iP7.s:749    .text:0000000000000208 .LVL42
     /tmp/cc461iP7.s:759    .text:000000000000020c .LVL43
     /tmp/cc461iP7.s:802    .text:0000000000000224 .LVL46
     /tmp/cc461iP7.s:818    .text:0000000000000230 .LVL47
     /tmp/cc461iP7.s:841    .text:0000000000000250 .LVL49
GAS LISTING /tmp/cc461iP7.s 			page 70


     /tmp/cc461iP7.s:884    .text:0000000000000268 .LVL52
     /tmp/cc461iP7.s:900    .text:0000000000000274 .LVL53
     /tmp/cc461iP7.s:916    .text:0000000000000280 .LVL55
     /tmp/cc461iP7.s:959    .text:0000000000000298 .LVL58
     /tmp/cc461iP7.s:975    .text:00000000000002a4 .LVL59
     /tmp/cc461iP7.s:995    .text:00000000000002bc .LVL61
     /tmp/cc461iP7.s:1038   .text:00000000000002d4 .LVL64
     /tmp/cc461iP7.s:1054   .text:00000000000002e0 .LVL65
     /tmp/cc461iP7.s:1075   .text:00000000000002ec .LVL66
     /tmp/cc461iP7.s:1081   .text:00000000000002f0 .LVL67
     /tmp/cc461iP7.s:1100   .text:0000000000000308 .LVL70
     /tmp/cc461iP7.s:1109   .text:000000000000030c .LVL71
     /tmp/cc461iP7.s:1115   .text:0000000000000314 .LVL72
     /tmp/cc461iP7.s:1149   .text:0000000000000324 .LVL75
     /tmp/cc461iP7.s:1093   .text:0000000000000300 .LVL69
     /tmp/cc461iP7.s:1123   .text:0000000000000318 .LVL73
     /tmp/cc461iP7.s:1133   .text:000000000000031c .LVL74
     /tmp/cc461iP7.s:1180   .text:000000000000033c .LVL77
     /tmp/cc461iP7.s:1196   .text:0000000000000348 .LVL78
     /tmp/cc461iP7.s:1215   .text:0000000000000354 .LVL80
     /tmp/cc461iP7.s:1265   .text:0000000000000394 .LVL85
     /tmp/cc461iP7.s:1275   .text:00000000000003a4 .LVL86
     /tmp/cc461iP7.s:1225   .text:000000000000035c .LVL81
     /tmp/cc461iP7.s:1258   .text:0000000000000390 .LVL84
     /tmp/cc461iP7.s:1297   .text:00000000000003b8 .LVL88
     /tmp/cc461iP7.s:1340   .text:00000000000003d0 .LVL91
     /tmp/cc461iP7.s:1356   .text:00000000000003dc .LVL92
     /tmp/cc461iP7.s:1371   .text:00000000000003e4 .LVL93
     /tmp/cc461iP7.s:1384   .text:00000000000003f0 .LVL95
     /tmp/cc461iP7.s:1394   .text:00000000000003f4 .LVL96
     /tmp/cc461iP7.s:1437   .text:000000000000040c .LVL99
     /tmp/cc461iP7.s:1453   .text:0000000000000418 .LVL100
     /tmp/cc461iP7.s:1468   .text:0000000000000420 .LVL101
     /tmp/cc461iP7.s:1483   .text:0000000000000430 .LVL103
     /tmp/cc461iP7.s:1493   .text:0000000000000434 .LVL104
     /tmp/cc461iP7.s:1536   .text:000000000000044c .LVL107
     /tmp/cc461iP7.s:1552   .text:0000000000000458 .LVL108
     /tmp/cc461iP7.s:1598   .text:000000000000047c .LVL114
     /tmp/cc461iP7.s:1608   .text:0000000000000480 .LVL115
     /tmp/cc461iP7.s:337    .text:00000000000000f4 .LVL6
     /tmp/cc461iP7.s:353    .text:0000000000000100 .LVL7
     /tmp/cc461iP7.s:370    .text:000000000000010c .LVL8
     /tmp/cc461iP7.s:403    .text:000000000000012c .LVL13
     /tmp/cc461iP7.s:416    .text:0000000000000130 .LVL14
     /tmp/cc461iP7.s:1657   .text:0000000000000494 .LVL118
     /tmp/cc461iP7.s:1683   .text:00000000000004a8 .LVL120
     /tmp/cc461iP7.s:1692   .text:00000000000004ac .LVL121
     /tmp/cc461iP7.s:1705   .text:00000000000004b0 .LVL122
     /tmp/cc461iP7.s:1823   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc461iP7.s:1217   .text:0000000000000354 .LBB255
     /tmp/cc461iP7.s:1247   .text:0000000000000384 .LBE255
     /tmp/cc461iP7.s:1263   .text:0000000000000394 .LBB262
     /tmp/cc461iP7.s:1279   .text:00000000000003a4 .LBE262
     /tmp/cc461iP7.s:1230   .text:0000000000000364 .LBE256
     /tmp/cc461iP7.s:1266   .text:0000000000000394 .LBB259
     /tmp/cc461iP7.s:1278   .text:00000000000003a4 .LBE259

GAS LISTING /tmp/cc461iP7.s 			page 71


UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
console_handler
