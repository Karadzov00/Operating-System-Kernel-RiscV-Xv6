GAS LISTING /tmp/cc3DoVoA.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB49:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE49:
GAS LISTING /tmp/cc3DoVoA.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB50:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101EF 		addi	sp,sp,-272
  50              		.cfi_def_cfa_offset 272
  51 0024 23341110 		sd	ra,264(sp)
  52 0028 23308110 		sd	s0,256(sp)
  53 002c 233C910E 		sd	s1,248(sp)
  54 0030 2338210F 		sd	s2,240(sp)
  55 0034 2334310F 		sd	s3,232(sp)
  56 0038 2330410F 		sd	s4,224(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040111 		addi	s0,sp,272
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB150:
  67              	.LBB151:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/cc3DoVoA.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
GAS LISTING /tmp/cc3DoVoA.s 			page 4


  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 94 5
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 95 5
  71              		.loc 2 95 72 is_stmt 0
  72              	#APP
  73              	# 95 "src/../h/Riscv.hpp" 1
  96              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 233CF4EE 		sd	a5,-264(s0)
  78              		.loc 2 96 5 is_stmt 1
  79              		.loc 2 96 12 is_stmt 0
  80 0048 833784EF 		ld	a5,-264(s0)
  81              	.LBE151:
  82              	.LBE150:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp **** //    uint64 arg0;
  24:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 24 5
  25:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 25 5
  89              		.loc 1 25 49 is_stmt 0
  90              	#APP
  91              	# 25 "src/Riscv.cpp" 1
  26              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  27:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL){
  95              		.loc 1 27 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB152:
  98 0054 13078000 		li	a4,8
  99 0058 6386E702 		beq	a5,a4,.L26
 100              	.LBE152:
  28:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp ****         //call from yield
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp ****         if(a0reg==0x11){
  33:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  34:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  35:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3DoVoA.s 			page 5


  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp ****             _thread::thread_t *arg1;
  38:src/Riscv.cpp ****             _thread::Body arg2;
  39:src/Riscv.cpp ****             uint64 arg3;
  40:src/Riscv.cpp ****             uint64 *arg4;
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  44:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  45:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  51:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  54:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  55:src/Riscv.cpp ****             *arg1=t;
  56:src/Riscv.cpp **** 
  57:src/Riscv.cpp ****             uint64 ret;
  58:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  59:src/Riscv.cpp ****             else ret =-1;
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp ****             //return _thread* adress through a0
  63:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             w_sstatus(sstatus);
  66:src/Riscv.cpp ****             w_sepc(sepc);
  67:src/Riscv.cpp ****         }
  68:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  69:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  70:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  71:src/Riscv.cpp ****             //kmem_alloc
  72:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  73:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             //write return value to a0 register
  76:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  77:src/Riscv.cpp **** 
  78:src/Riscv.cpp ****             w_sstatus(sstatus);
  79:src/Riscv.cpp ****             w_sepc(sepc);
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp ****         else if(a0reg==0x02){
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  84:src/Riscv.cpp **** 
  85:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  86:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  87:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             w_sstatus(sstatus);
  90:src/Riscv.cpp ****             w_sepc(sepc);
  91:src/Riscv.cpp ****         }
  92:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3DoVoA.s 			page 6


  93:src/Riscv.cpp ****         else if(a0reg==0x12){
  94:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****             _thread::running->finished=true;
  98:src/Riscv.cpp ****             _thread::dispatch();
  99:src/Riscv.cpp **** 
 100:src/Riscv.cpp ****             w_sstatus(sstatus);
 101:src/Riscv.cpp ****             w_sepc(sepc);
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****         }
 105:src/Riscv.cpp ****         else if(a0reg == 0x13){
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 121:src/Riscv.cpp ****             _thread::dispatch();
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp ****             w_sstatus(sstatus);
 124:src/Riscv.cpp ****             w_sepc(sepc);
 125:src/Riscv.cpp ****         }
 126:src/Riscv.cpp ****         else if(a0reg==0x21){
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 131:src/Riscv.cpp ****            uint64 arg2;
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 135:src/Riscv.cpp **** 
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 140:src/Riscv.cpp ****             *arg1=sem;
 141:src/Riscv.cpp **** 
 142:src/Riscv.cpp ****             uint64 ret=0;
 143:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 144:src/Riscv.cpp ****             else ret=-1;
 145:src/Riscv.cpp **** 
 146:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             w_sstatus(sstatus);
 149:src/Riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/cc3DoVoA.s 			page 7


 150:src/Riscv.cpp ****         }
 151:src/Riscv.cpp ****         else if(a0reg==0x22){
 152:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 154:src/Riscv.cpp **** 
 155:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 159:src/Riscv.cpp **** 
 160:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 165:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 167:src/Riscv.cpp ****                 t->deblocked=true;
 168:src/Riscv.cpp ****                 sem->val++;
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 170:src/Riscv.cpp ****             }
 171:src/Riscv.cpp **** 
 172:src/Riscv.cpp ****             delete sem;
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             w_sstatus(sstatus);
 175:src/Riscv.cpp ****             w_sepc(sepc);
 176:src/Riscv.cpp ****         }
 177:src/Riscv.cpp ****         else if(a0reg==0x23){
 178:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             w_sstatus(sstatus);
 194:src/Riscv.cpp ****             w_sepc(sepc);
 195:src/Riscv.cpp ****         }
 196:src/Riscv.cpp ****         else if(a0reg==0x24){
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3DoVoA.s 			page 8


 207:src/Riscv.cpp ****             arg1->signal();
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****             uint64 ret = 0;
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x41){
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             //call method from kernel Console class
 221:src/Riscv.cpp ****             char c = KConsole::getc();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             w_sstatus(sstatus);
 227:src/Riscv.cpp ****             w_sepc(sepc);
 228:src/Riscv.cpp ****         }
 229:src/Riscv.cpp ****         else if(a0reg==0x42){
 230:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 231:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp ****             char c;
 234:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             KConsole::putc(c);
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             w_sstatus(sstatus);
 241:src/Riscv.cpp ****             w_sepc(sepc);
 242:src/Riscv.cpp ****         }
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****     }
 246:src/Riscv.cpp ****     else if(scause == 0x0000000000000009UL){
 101              		.loc 1 246 10
 102              	.LBB362:
 103              	.LBB153:
 104 005c 13079000 		li	a4,9
 105 0060 638CE73E 		beq	a5,a4,.L27
 106              	.LVL2:
 107              	.L3:
 108              	.LBE153:
 109              	.LBE362:
 247:src/Riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 248:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 249:src/Riscv.cpp ****         w_sstatus(sstatus);
 250:src/Riscv.cpp ****         w_sepc(sepc);
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp ****     }
 253:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 254:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
GAS LISTING /tmp/cc3DoVoA.s 			page 9


 255:src/Riscv.cpp **** 
 256:src/Riscv.cpp ****     }
 257:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 258:src/Riscv.cpp ****     {
 259:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 260:src/Riscv.cpp **** 
 261:src/Riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 262:src/Riscv.cpp ****         uint64 sstatus = r_sstatus();
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****         console_handler();
 265:src/Riscv.cpp **** 
 266:src/Riscv.cpp ****         w_sstatus(sstatus);
 267:src/Riscv.cpp ****         w_sepc(sepc);
 268:src/Riscv.cpp ****     }
 269:src/Riscv.cpp ****     else{
 270:src/Riscv.cpp ****         // unexpected trap cause
 271:src/Riscv.cpp ****         //print(scause)
 272:src/Riscv.cpp ****         //print(sepc)
 273:src/Riscv.cpp ****         //print(stval) //trap value
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****     }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp **** }
 110              		.loc 1 277 1 is_stmt 0
 111 0064 83308110 		ld	ra,264(sp)
 112              		.cfi_remember_state
 113              		.cfi_restore 1
 114 0068 03340110 		ld	s0,256(sp)
 115              		.cfi_restore 8
 116              		.cfi_def_cfa 2, 272
 117 006c 8334810F 		ld	s1,248(sp)
 118              		.cfi_restore 9
 119 0070 0339010F 		ld	s2,240(sp)
 120              		.cfi_restore 18
 121 0074 8339810E 		ld	s3,232(sp)
 122              		.cfi_restore 19
 123 0078 033A010E 		ld	s4,224(sp)
 124              		.cfi_restore 20
 125 007c 13010111 		addi	sp,sp,272
 126              		.cfi_def_cfa_offset 0
 127 0080 67800000 		jr	ra
 128              	.LVL3:
 129              	.L26:
 130              		.cfi_restore_state
  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 131              		.loc 1 32 9 is_stmt 1
 132              	.LBB363:
 133              	.LBB163:
 134 0084 93071001 		li	a5,17
 135              	.LVL4:
 136 0088 638CF408 		beq	s1,a5,.L28
 137              	.L5:
 138              	.LBE163:
 139              	.LBE363:
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 140              		.loc 1 68 9
 141              	.LBB364:
GAS LISTING /tmp/cc3DoVoA.s 			page 10


 142              	.LBB173:
 143 008c 93071000 		li	a5,1
 144 0090 638CF40E 		beq	s1,a5,.L29
 145              	.LBE173:
 146              	.LBE364:
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 147              		.loc 1 81 14
 148              	.LBB365:
 149              	.LBB349:
 150              	.LBB174:
 151 0094 93072000 		li	a5,2
 152 0098 6386F412 		beq	s1,a5,.L30
 153              	.LBE174:
 154              	.LBE349:
 155              	.LBE365:
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 156              		.loc 1 93 14
 157              	.LBB366:
 158              	.LBB350:
 159              	.LBB330:
 160              	.LBB175:
 161 009c 93072001 		li	a5,18
 162 00a0 638EF414 		beq	s1,a5,.L31
 163              	.LBE175:
 164              	.LBE330:
 165              	.LBE350:
 166              	.LBE366:
 105:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 167              		.loc 1 105 14
 168              	.LBB367:
 169              	.LBB351:
 170              	.LBB331:
 171              	.LBB312:
 172              	.LBB176:
 173 00a4 93073001 		li	a5,19
 174 00a8 638CF418 		beq	s1,a5,.L32
 175              	.LBE176:
 176              	.LBE312:
 177              	.LBE331:
 178              	.LBE351:
 179              	.LBE367:
 116:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 180              		.loc 1 116 14
 181              	.LBB368:
 182              	.LBB352:
 183              	.LBB332:
 184              	.LBB313:
 185              	.LBB295:
 186              	.LBB177:
 187 00ac 93074000 		li	a5,4
 188 00b0 6380F41C 		beq	s1,a5,.L33
 189              	.LBE177:
 190              	.LBE295:
 191              	.LBE313:
 192              	.LBE332:
 193              	.LBE352:
 194              	.LBE368:
GAS LISTING /tmp/cc3DoVoA.s 			page 11


 126:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 195              		.loc 1 126 14
 196              	.LBB369:
 197              	.LBB353:
 198              	.LBB333:
 199              	.LBB314:
 200              	.LBB296:
 201              	.LBB279:
 202              	.LBB178:
 203 00b4 93071002 		li	a5,33
 204 00b8 638AF41E 		beq	s1,a5,.L34
 205              	.LBE178:
 206              	.LBE279:
 207              	.LBE296:
 208              	.LBE314:
 209              	.LBE333:
 210              	.LBE353:
 211              	.LBE369:
 151:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 212              		.loc 1 151 14
 213              	.LBB370:
 214              	.LBB354:
 215              	.LBB334:
 216              	.LBB315:
 217              	.LBB297:
 218              	.LBB280:
 219              	.LBB264:
 220              	.LBB179:
 221 00bc 93072002 		li	a5,34
 222 00c0 638AF424 		beq	s1,a5,.L35
 223              	.LBE179:
 224              	.LBE264:
 225              	.LBE280:
 226              	.LBE297:
 227              	.LBE315:
 228              	.LBE334:
 229              	.LBE354:
 230              	.LBE370:
 177:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 231              		.loc 1 177 14
 232              	.LBB371:
 233              	.LBB355:
 234              	.LBB335:
 235              	.LBB316:
 236              	.LBB298:
 237              	.LBB281:
 238              	.LBB265:
 239              	.LBB246:
 240              	.LBB180:
 241 00c4 93073002 		li	a5,35
 242 00c8 6380F42E 		beq	s1,a5,.L36
 243              	.LBE180:
 244              	.LBE246:
 245              	.LBE265:
 246              	.LBE281:
 247              	.LBE298:
 248              	.LBE316:
GAS LISTING /tmp/cc3DoVoA.s 			page 12


 249              	.LBE335:
 250              	.LBE355:
 251              	.LBE371:
 196:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 252              		.loc 1 196 14
 253              	.LBB372:
 254              	.LBB356:
 255              	.LBB336:
 256              	.LBB317:
 257              	.LBB299:
 258              	.LBB282:
 259              	.LBB266:
 260              	.LBB247:
 261              	.LBB225:
 262              	.LBB181:
 263 00cc 93074002 		li	a5,36
 264 00d0 638AF430 		beq	s1,a5,.L37
 265              	.LBE181:
 266              	.LBE225:
 267              	.LBE247:
 268              	.LBE266:
 269              	.LBE282:
 270              	.LBE299:
 271              	.LBE317:
 272              	.LBE336:
 273              	.LBE356:
 274              	.LBE372:
 216:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 275              		.loc 1 216 14
 276              	.LBB373:
 277              	.LBB357:
 278              	.LBB337:
 279              	.LBB318:
 280              	.LBB300:
 281              	.LBB283:
 282              	.LBB267:
 283              	.LBB248:
 284              	.LBB226:
 285              	.LBB213:
 286              	.LBB182:
 287 00d4 93071004 		li	a5,65
 288 00d8 6386F434 		beq	s1,a5,.L38
 289              	.LBE182:
 290              	.LBE213:
 291              	.LBE226:
 292              	.LBE248:
 293              	.LBE267:
 294              	.LBE283:
 295              	.LBE300:
 296              	.LBE318:
 297              	.LBE337:
 298              	.LBE357:
 299              	.LBE373:
 229:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 300              		.loc 1 229 14
 301              	.LBB374:
 302              	.LBB358:
GAS LISTING /tmp/cc3DoVoA.s 			page 13


 303              	.LBB338:
 304              	.LBB319:
 305              	.LBB301:
 306              	.LBB284:
 307              	.LBB268:
 308              	.LBB249:
 309              	.LBB227:
 310              	.LBB214:
 311              	.LBB202:
 312              	.LBB183:
 313 00dc 93072004 		li	a5,66
 314 00e0 E392F4F8 		bne	s1,a5,.L3
 315              	.LBB184:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 316              		.loc 1 230 13
 317              	.LBB185:
 318              	.LBB186:
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 319              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 320              		.loc 2 107 5
 321              		.loc 2 107 64 is_stmt 0
 322              	#APP
 323              	# 107 "src/../h/Riscv.hpp" 1
 108              	    return sepc;
 324              		csrr a5, sepc
 325              	# 0 "" 2
 326              	#NO_APP
 327 00e8 233CF4FA 		sd	a5,-72(s0)
 328              		.loc 2 108 5 is_stmt 1
 329              		.loc 2 108 12 is_stmt 0
 330 00ec 833484FB 		ld	s1,-72(s0)
 331              	.LVL5:
 332              	.LBE186:
 333              	.LBE185:
 230:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 334              		.loc 1 230 38
 335 00f0 93844400 		addi	s1,s1,4
 336              	.LVL6:
 231:src/Riscv.cpp **** 
 337              		.loc 1 231 13 is_stmt 1
 338              	.LBB187:
 339              	.LBB188:
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
GAS LISTING /tmp/cc3DoVoA.s 			page 14


 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/cc3DoVoA.s 			page 15


 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 175:src/../h/Riscv.hpp **** {
 176:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 340              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 341              		.loc 2 177 5
 342              		.loc 2 177 76 is_stmt 0
 343              	#APP
 344              	# 177 "src/../h/Riscv.hpp" 1
 178              	    return sstatus;
 345              		csrr a5, sstatus
 346              	# 0 "" 2
 347              	#NO_APP
 348 00f8 2338F4FA 		sd	a5,-80(s0)
 349              		.loc 2 178 5 is_stmt 1
 350              		.loc 2 178 12 is_stmt 0
 351 00fc 033904FB 		ld	s2,-80(s0)
 352              	.LVL7:
 353              	.LBE188:
 354              	.LBE187:
 233:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 355              		.loc 1 233 13 is_stmt 1
 234:src/Riscv.cpp **** 
 356              		.loc 1 234 13
 234:src/Riscv.cpp **** 
 357              		.loc 1 234 48 is_stmt 0
 358              	#APP
 359              	# 234 "src/Riscv.cpp" 1
 236:src/Riscv.cpp **** 
 360              		ld a1, 11*8(fp)
 361              	# 0 "" 2
 362              		.loc 1 236 13 is_stmt 1
 236:src/Riscv.cpp **** 
 363              		.loc 1 236 53 is_stmt 0
 364              	# 236 "src/Riscv.cpp" 1
 365              		mv a0, a1
 366              	# 0 "" 2
 367              	.LVL8:
 238:src/Riscv.cpp **** 
 368              		.loc 1 238 13 is_stmt 1
 238:src/Riscv.cpp **** 
 369              		.loc 1 238 27 is_stmt 0
 370              	#NO_APP
 371 0108 1375F50F 		andi	a0,a0,0xff
 372 010c 97000000 		call	_ZN8KConsole4putcEc@plt
 372      E7800000 
 373              	.LVL9:
 240:src/Riscv.cpp ****             w_sepc(sepc);
 374              		.loc 1 240 13 is_stmt 1
 375              	.LBB189:
 376              	.LBB190:
 179:src/../h/Riscv.hpp **** }
 180:src/../h/Riscv.hpp **** 
 181:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
GAS LISTING /tmp/cc3DoVoA.s 			page 16


 182:src/../h/Riscv.hpp **** {
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 377              		.loc 2 183 5
 378              		.loc 2 183 77 is_stmt 0
 379              	#APP
 380              	# 183 "src/../h/Riscv.hpp" 1
 184              	}
 381              		csrw sstatus, s2
 382              	# 0 "" 2
 383              	.LVL10:
 384              	#NO_APP
 385              	.LBE190:
 386              	.LBE189:
 241:src/Riscv.cpp ****         }
 387              		.loc 1 241 13 is_stmt 1
 388              	.LBB191:
 389              	.LBB192:
 113:src/../h/Riscv.hpp **** }
 390              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 391              		.loc 2 113 65 is_stmt 0
 392              	#APP
 393              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 394              		csrw sepc, s1
 395              	# 0 "" 2
 396              		.loc 2 114 1
 397              	#NO_APP
 398 011c 6FF09FF4 		j	.L3
 399              	.LVL11:
 400              	.L28:
 401              	.LBE192:
 402              	.LBE191:
 403              	.LBE184:
 404              	.LBE183:
 405              	.LBE202:
 406              	.LBE214:
 407              	.LBE227:
 408              	.LBE249:
 409              	.LBE268:
 410              	.LBE284:
 411              	.LBE301:
 412              	.LBE319:
 413              	.LBE338:
 414              	.LBE358:
 415              	.LBB359:
 416              	.LBB164:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 417              		.loc 1 33 13 is_stmt 1
 418              	.LBB165:
 419              	.LBB166:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 420              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 421              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 422              		.loc 2 107 64 is_stmt 0
GAS LISTING /tmp/cc3DoVoA.s 			page 17


 423              	#APP
 424              	# 107 "src/../h/Riscv.hpp" 1
 425              		csrr a5, sepc
 426              	# 0 "" 2
 427              	#NO_APP
 428 0124 2334F4F0 		sd	a5,-248(s0)
 108:src/../h/Riscv.hpp **** }
 429              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 430              		.loc 2 108 12 is_stmt 0
 431 0128 033984F0 		ld	s2,-248(s0)
 432              	.LBE166:
 433              	.LBE165:
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 434              		.loc 1 33 38
 435 012c 13094900 		addi	s2,s2,4
 436              	.LVL12:
  34:src/Riscv.cpp **** 
 437              		.loc 1 34 13 is_stmt 1
 438              	.LBB167:
 439              	.LBB168:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 440              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 441              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 442              		.loc 2 177 76 is_stmt 0
 443              	#APP
 444              	# 177 "src/../h/Riscv.hpp" 1
 445              		csrr a5, sstatus
 446              	# 0 "" 2
 447              	#NO_APP
 448 0134 2330F4F0 		sd	a5,-256(s0)
 178:src/../h/Riscv.hpp **** }
 449              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 450              		.loc 2 178 12 is_stmt 0
 451 0138 833904F0 		ld	s3,-256(s0)
 452              	.LVL13:
 453              	.LBE168:
 454              	.LBE167:
  37:src/Riscv.cpp ****             _thread::Body arg2;
 455              		.loc 1 37 13 is_stmt 1
  38:src/Riscv.cpp ****             uint64 arg3;
 456              		.loc 1 38 13
  39:src/Riscv.cpp ****             uint64 *arg4;
 457              		.loc 1 39 13
  40:src/Riscv.cpp **** 
 458              		.loc 1 40 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 459              		.loc 1 42 13
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 460              		.loc 1 42 48 is_stmt 0
 461              	#APP
 462              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 463              		ld a1, 11*8(fp)
GAS LISTING /tmp/cc3DoVoA.s 			page 18


 464              	# 0 "" 2
 465              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 466              		.loc 1 43 48 is_stmt 0
 467              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 468              		ld a2, 12*8(fp)
 469              	# 0 "" 2
 470              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 471              		.loc 1 44 48 is_stmt 0
 472              	# 44 "src/Riscv.cpp" 1
  45:src/Riscv.cpp **** 
 473              		ld a3, 13*8(fp)
 474              	# 0 "" 2
 475              		.loc 1 45 13 is_stmt 1
  45:src/Riscv.cpp **** 
 476              		.loc 1 45 48 is_stmt 0
 477              	# 45 "src/Riscv.cpp" 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 478              		ld a4, 14*8(fp)
 479              	# 0 "" 2
 480              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 481              		.loc 1 48 56 is_stmt 0
 482              	# 48 "src/Riscv.cpp" 1
 483              		mv s4, a1
 484              	# 0 "" 2
 485              	.LVL14:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 486              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 487              		.loc 1 49 56 is_stmt 0
 488              	# 49 "src/Riscv.cpp" 1
 489              		mv a0, a2
 490              	# 0 "" 2
 491              	.LVL15:
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 492              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 493              		.loc 1 50 56 is_stmt 0
 494              	# 50 "src/Riscv.cpp" 1
 495              		mv a1, a3
 496              	# 0 "" 2
 497              	.LVL16:
  51:src/Riscv.cpp **** 
 498              		.loc 1 51 13 is_stmt 1
  51:src/Riscv.cpp **** 
 499              		.loc 1 51 56 is_stmt 0
 500              	# 51 "src/Riscv.cpp" 1
 501              		mv a2, a4
 502              	# 0 "" 2
 503              	.LVL17:
  54:src/Riscv.cpp ****             *arg1=t;
 504              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp ****             *arg1=t;
 505              		.loc 1 54 47 is_stmt 0
GAS LISTING /tmp/cc3DoVoA.s 			page 19


 506              	#NO_APP
 507 015c 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 507      E7800000 
 508              	.LVL18:
  55:src/Riscv.cpp **** 
 509              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp **** 
 510              		.loc 1 55 18 is_stmt 0
 511 0164 2330AA00 		sd	a0,0(s4)
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 512              		.loc 1 57 13 is_stmt 1
  58:src/Riscv.cpp ****             else ret =-1;
 513              		.loc 1 58 13
 514 0168 630C0500 		beqz	a0,.L23
  58:src/Riscv.cpp ****             else ret =-1;
 515              		.loc 1 58 31 is_stmt 0
 516 016c 93070000 		li	a5,0
 517              	.L6:
 518              	.LVL19:
  63:src/Riscv.cpp **** 
 519              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp **** 
 520              		.loc 1 63 56 is_stmt 0
 521              	#APP
 522              	# 63 "src/Riscv.cpp" 1
  65:src/Riscv.cpp ****             w_sepc(sepc);
 523              		mv a0, a5
 524              	# 0 "" 2
 525              		.loc 1 65 13 is_stmt 1
 526              	.LVL20:
 527              	#NO_APP
 528              	.LBB169:
 529              	.LBB170:
 183:src/../h/Riscv.hpp **** }
 530              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 531              		.loc 2 183 77 is_stmt 0
 532              	#APP
 533              	# 183 "src/../h/Riscv.hpp" 1
 534              		csrw sstatus, s3
 535              	# 0 "" 2
 536              	.LVL21:
 537              	#NO_APP
 538              	.LBE170:
 539              	.LBE169:
  66:src/Riscv.cpp ****         }
 540              		.loc 1 66 13 is_stmt 1
 541              	.LBB171:
 542              	.LBB172:
 113:src/../h/Riscv.hpp **** }
 543              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 544              		.loc 2 113 65 is_stmt 0
 545              	#APP
 546              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 547              		csrw sepc, s2
GAS LISTING /tmp/cc3DoVoA.s 			page 20


 548              	# 0 "" 2
 549              		.loc 2 114 1
 550              	#NO_APP
 551 017c 6FF01FF1 		j	.L5
 552              	.LVL22:
 553              	.L23:
 554              	.LBE172:
 555              	.LBE171:
  59:src/Riscv.cpp **** 
 556              		.loc 1 59 22
 557 0180 9307F0FF 		li	a5,-1
 558 0184 6FF0DFFE 		j	.L6
 559              	.LVL23:
 560              	.L29:
 561              	.LBE164:
 562              	.LBE359:
 563              	.LBB360:
 564              	.LBB339:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 565              		.loc 1 69 13 is_stmt 1
 566              	.LBB340:
 567              	.LBB341:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 568              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 569              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 570              		.loc 2 107 64 is_stmt 0
 571              	#APP
 572              	# 107 "src/../h/Riscv.hpp" 1
 573              		csrr a5, sepc
 574              	# 0 "" 2
 575              	#NO_APP
 576 018c 233CF4F0 		sd	a5,-232(s0)
 108:src/../h/Riscv.hpp **** }
 577              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 578              		.loc 2 108 12 is_stmt 0
 579 0190 833484F1 		ld	s1,-232(s0)
 580              	.LVL24:
 581              	.LBE341:
 582              	.LBE340:
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 583              		.loc 1 69 38
 584 0194 93844400 		addi	s1,s1,4
 585              	.LVL25:
  70:src/Riscv.cpp ****             //kmem_alloc
 586              		.loc 1 70 13 is_stmt 1
 587              	.LBB342:
 588              	.LBB343:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 589              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 590              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 591              		.loc 2 177 76 is_stmt 0
 592              	#APP
GAS LISTING /tmp/cc3DoVoA.s 			page 21


 593              	# 177 "src/../h/Riscv.hpp" 1
 594              		csrr a5, sstatus
 595              	# 0 "" 2
 596              	#NO_APP
 597 019c 2338F4F0 		sd	a5,-240(s0)
 178:src/../h/Riscv.hpp **** }
 598              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 599              		.loc 2 178 12 is_stmt 0
 600 01a0 033904F1 		ld	s2,-240(s0)
 601              	.LVL26:
 602              	.LBE343:
 603              	.LBE342:
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 604              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 605              		.loc 1 72 56 is_stmt 0
 606              	#APP
 607              	# 72 "src/Riscv.cpp" 1
 608              		mv a0, a1
 609              	# 0 "" 2
 610              	.LVL27:
  73:src/Riscv.cpp **** 
 611              		.loc 1 73 13 is_stmt 1
  73:src/Riscv.cpp **** 
 612              		.loc 1 73 61 is_stmt 0
 613              	#NO_APP
 614 01a8 13156500 		slli	a0,a0,6
 615              	.LVL28:
 616 01ac 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 616      E7800000 
 617              	.LVL29:
  76:src/Riscv.cpp **** 
 618              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp **** 
 619              		.loc 1 76 56 is_stmt 0
 620              	#APP
 621              	# 76 "src/Riscv.cpp" 1
  78:src/Riscv.cpp ****             w_sepc(sepc);
 622              		mv a0, a0
 623              	# 0 "" 2
 624              		.loc 1 78 13 is_stmt 1
 625              	.LVL30:
 626              	#NO_APP
 627              	.LBB344:
 628              	.LBB345:
 183:src/../h/Riscv.hpp **** }
 629              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 630              		.loc 2 183 77 is_stmt 0
 631              	#APP
 632              	# 183 "src/../h/Riscv.hpp" 1
 633              		csrw sstatus, s2
 634              	# 0 "" 2
 635              	.LVL31:
 636              	#NO_APP
 637              	.LBE345:
GAS LISTING /tmp/cc3DoVoA.s 			page 22


 638              	.LBE344:
  79:src/Riscv.cpp ****         }
 639              		.loc 1 79 13 is_stmt 1
 640              	.LBB346:
 641              	.LBB347:
 113:src/../h/Riscv.hpp **** }
 642              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 643              		.loc 2 113 65 is_stmt 0
 644              	#APP
 645              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 646              		csrw sepc, s1
 647              	# 0 "" 2
 648              		.loc 2 114 1
 649              	#NO_APP
 650 01c0 6FF05FEA 		j	.L3
 651              	.LVL32:
 652              	.L30:
 653              	.LBE347:
 654              	.LBE346:
 655              	.LBE339:
 656              	.LBB348:
 657              	.LBB320:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 658              		.loc 1 82 13 is_stmt 1
 659              	.LBB321:
 660              	.LBB322:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 661              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 662              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 663              		.loc 2 107 64 is_stmt 0
 664              	#APP
 665              	# 107 "src/../h/Riscv.hpp" 1
 666              		csrr a5, sepc
 667              	# 0 "" 2
 668              	#NO_APP
 669 01c8 2334F4F2 		sd	a5,-216(s0)
 108:src/../h/Riscv.hpp **** }
 670              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 671              		.loc 2 108 12 is_stmt 0
 672 01cc 833484F2 		ld	s1,-216(s0)
 673              	.LVL33:
 674              	.LBE322:
 675              	.LBE321:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 676              		.loc 1 82 38
 677 01d0 93844400 		addi	s1,s1,4
 678              	.LVL34:
  83:src/Riscv.cpp **** 
 679              		.loc 1 83 13 is_stmt 1
 680              	.LBB323:
 681              	.LBB324:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/cc3DoVoA.s 			page 23


 682              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 683              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 684              		.loc 2 177 76 is_stmt 0
 685              	#APP
 686              	# 177 "src/../h/Riscv.hpp" 1
 687              		csrr a5, sstatus
 688              	# 0 "" 2
 689              	#NO_APP
 690 01d8 2330F4F2 		sd	a5,-224(s0)
 178:src/../h/Riscv.hpp **** }
 691              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 692              		.loc 2 178 12 is_stmt 0
 693 01dc 033904F2 		ld	s2,-224(s0)
 694              	.LVL35:
 695              	.LBE324:
 696              	.LBE323:
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 697              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 698              		.loc 1 85 56 is_stmt 0
 699              	#APP
 700              	# 85 "src/Riscv.cpp" 1
 701              		mv a0, a1
 702              	# 0 "" 2
 703              	.LVL36:
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 704              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 705              		.loc 1 86 49 is_stmt 0
 706              	#NO_APP
 707 01e4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 707      E7800000 
 708              	.LVL37:
  87:src/Riscv.cpp **** 
 709              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 710              		.loc 1 87 56 is_stmt 0
 711              	#APP
 712              	# 87 "src/Riscv.cpp" 1
  89:src/Riscv.cpp ****             w_sepc(sepc);
 713              		mv a0, a0
 714              	# 0 "" 2
 715              		.loc 1 89 13 is_stmt 1
 716              	.LVL38:
 717              	#NO_APP
 718              	.LBB325:
 719              	.LBB326:
 183:src/../h/Riscv.hpp **** }
 720              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 721              		.loc 2 183 77 is_stmt 0
 722              	#APP
 723              	# 183 "src/../h/Riscv.hpp" 1
 724              		csrw sstatus, s2
GAS LISTING /tmp/cc3DoVoA.s 			page 24


 725              	# 0 "" 2
 726              	.LVL39:
 727              	#NO_APP
 728              	.LBE326:
 729              	.LBE325:
  90:src/Riscv.cpp ****         }
 730              		.loc 1 90 13 is_stmt 1
 731              	.LBB327:
 732              	.LBB328:
 113:src/../h/Riscv.hpp **** }
 733              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 734              		.loc 2 113 65 is_stmt 0
 735              	#APP
 736              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 737              		csrw sepc, s1
 738              	# 0 "" 2
 739              		.loc 2 114 1
 740              	#NO_APP
 741 01f8 6FF0DFE6 		j	.L3
 742              	.LVL40:
 743              	.L31:
 744              	.LBE328:
 745              	.LBE327:
 746              	.LBE320:
 747              	.LBB329:
 748              	.LBB302:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 749              		.loc 1 94 13 is_stmt 1
 750              	.LBB303:
 751              	.LBB304:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 752              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 753              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 754              		.loc 2 107 64 is_stmt 0
 755              	#APP
 756              	# 107 "src/../h/Riscv.hpp" 1
 757              		csrr a5, sepc
 758              	# 0 "" 2
 759              	#NO_APP
 760 0200 233CF4F2 		sd	a5,-200(s0)
 108:src/../h/Riscv.hpp **** }
 761              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 762              		.loc 2 108 12 is_stmt 0
 763 0204 833484F3 		ld	s1,-200(s0)
 764              	.LVL41:
 765              	.LBE304:
 766              	.LBE303:
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 767              		.loc 1 94 38
 768 0208 93844400 		addi	s1,s1,4
 769              	.LVL42:
  95:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3DoVoA.s 			page 25


 770              		.loc 1 95 13 is_stmt 1
 771              	.LBB305:
 772              	.LBB306:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 773              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 774              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 775              		.loc 2 177 76 is_stmt 0
 776              	#APP
 777              	# 177 "src/../h/Riscv.hpp" 1
 778              		csrr a5, sstatus
 779              	# 0 "" 2
 780              	#NO_APP
 781 0210 2338F4F2 		sd	a5,-208(s0)
 178:src/../h/Riscv.hpp **** }
 782              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 783              		.loc 2 178 12 is_stmt 0
 784 0214 033904F3 		ld	s2,-208(s0)
 785              	.LVL43:
 786              	.LBE306:
 787              	.LBE305:
  97:src/Riscv.cpp ****             _thread::dispatch();
 788              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp ****             _thread::dispatch();
 789              		.loc 1 97 31 is_stmt 0
 790 0218 97070000 		la	a5,_ZN7_thread7runningE
 790      83B70700 
 791 0220 83B70700 		ld	a5,0(a5)
  97:src/Riscv.cpp ****             _thread::dispatch();
 792              		.loc 1 97 39
 793 0224 13071000 		li	a4,1
 794 0228 2384E702 		sb	a4,40(a5)
  98:src/Riscv.cpp **** 
 795              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp **** 
 796              		.loc 1 98 30 is_stmt 0
 797 022c 97000000 		call	_ZN7_thread8dispatchEv@plt
 797      E7800000 
 798              	.LVL44:
 100:src/Riscv.cpp ****             w_sepc(sepc);
 799              		.loc 1 100 13 is_stmt 1
 800              	.LBB307:
 801              	.LBB308:
 183:src/../h/Riscv.hpp **** }
 802              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 803              		.loc 2 183 77 is_stmt 0
 804              	#APP
 805              	# 183 "src/../h/Riscv.hpp" 1
 806              		csrw sstatus, s2
 807              	# 0 "" 2
 808              	.LVL45:
 809              	#NO_APP
 810              	.LBE308:
 811              	.LBE307:
GAS LISTING /tmp/cc3DoVoA.s 			page 26


 101:src/Riscv.cpp **** 
 812              		.loc 1 101 13 is_stmt 1
 813              	.LBB309:
 814              	.LBB310:
 113:src/../h/Riscv.hpp **** }
 815              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 816              		.loc 2 113 65 is_stmt 0
 817              	#APP
 818              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 819              		csrw sepc, s1
 820              	# 0 "" 2
 821              		.loc 2 114 1
 822              	#NO_APP
 823 023c 6FF09FE2 		j	.L3
 824              	.LVL46:
 825              	.L32:
 826              	.LBE310:
 827              	.LBE309:
 828              	.LBE302:
 829              	.LBB311:
 830              	.LBB285:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 831              		.loc 1 106 13 is_stmt 1
 832              	.LBB286:
 833              	.LBB287:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 834              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 835              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 836              		.loc 2 107 64 is_stmt 0
 837              	#APP
 838              	# 107 "src/../h/Riscv.hpp" 1
 839              		csrr a5, sepc
 840              	# 0 "" 2
 841              	#NO_APP
 842 0244 2334F4F4 		sd	a5,-184(s0)
 108:src/../h/Riscv.hpp **** }
 843              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 844              		.loc 2 108 12 is_stmt 0
 845 0248 833484F4 		ld	s1,-184(s0)
 846              	.LVL47:
 847              	.LBE287:
 848              	.LBE286:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 849              		.loc 1 106 38
 850 024c 93844400 		addi	s1,s1,4
 851              	.LVL48:
 107:src/Riscv.cpp **** 
 852              		.loc 1 107 13 is_stmt 1
 853              	.LBB288:
 854              	.LBB289:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 855              		.loc 2 176 5
GAS LISTING /tmp/cc3DoVoA.s 			page 27


 177:src/../h/Riscv.hpp ****     return sstatus;
 856              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 857              		.loc 2 177 76 is_stmt 0
 858              	#APP
 859              	# 177 "src/../h/Riscv.hpp" 1
 860              		csrr a5, sstatus
 861              	# 0 "" 2
 862              	#NO_APP
 863 0254 2330F4F4 		sd	a5,-192(s0)
 178:src/../h/Riscv.hpp **** }
 864              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 865              		.loc 2 178 12 is_stmt 0
 866 0258 033904F4 		ld	s2,-192(s0)
 867              	.LVL49:
 868              	.LBE289:
 869              	.LBE288:
 110:src/Riscv.cpp **** 
 870              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 871              		.loc 1 110 30 is_stmt 0
 872 025c 97000000 		call	_ZN7_thread8dispatchEv@plt
 872      E7800000 
 873              	.LVL50:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 874              		.loc 1 112 13 is_stmt 1
 875              	.LBB290:
 876              	.LBB291:
 183:src/../h/Riscv.hpp **** }
 877              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 878              		.loc 2 183 77 is_stmt 0
 879              	#APP
 880              	# 183 "src/../h/Riscv.hpp" 1
 881              		csrw sstatus, s2
 882              	# 0 "" 2
 883              	.LVL51:
 884              	#NO_APP
 885              	.LBE291:
 886              	.LBE290:
 113:src/Riscv.cpp ****         }
 887              		.loc 1 113 13 is_stmt 1
 888              	.LBB292:
 889              	.LBB293:
 113:src/../h/Riscv.hpp **** }
 890              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 891              		.loc 2 113 65 is_stmt 0
 892              	#APP
 893              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 894              		csrw sepc, s1
 895              	# 0 "" 2
 896              		.loc 2 114 1
 897              	#NO_APP
 898 026c 6FF09FDF 		j	.L3
GAS LISTING /tmp/cc3DoVoA.s 			page 28


 899              	.LVL52:
 900              	.L33:
 901              	.LBE293:
 902              	.LBE292:
 903              	.LBE285:
 904              	.LBB294:
 905              	.LBB269:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 906              		.loc 1 117 13 is_stmt 1
 907              	.LBB270:
 908              	.LBB271:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 909              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 910              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 911              		.loc 2 107 64 is_stmt 0
 912              	#APP
 913              	# 107 "src/../h/Riscv.hpp" 1
 914              		csrr a5, sepc
 915              	# 0 "" 2
 916              	#NO_APP
 917 0274 233CF4F4 		sd	a5,-168(s0)
 108:src/../h/Riscv.hpp **** }
 918              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 919              		.loc 2 108 12 is_stmt 0
 920 0278 833484F5 		ld	s1,-168(s0)
 921              	.LVL53:
 922              	.LBE271:
 923              	.LBE270:
 117:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 924              		.loc 1 117 38
 925 027c 93844400 		addi	s1,s1,4
 926              	.LVL54:
 118:src/Riscv.cpp **** 
 927              		.loc 1 118 13 is_stmt 1
 928              	.LBB272:
 929              	.LBB273:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 930              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 931              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 932              		.loc 2 177 76 is_stmt 0
 933              	#APP
 934              	# 177 "src/../h/Riscv.hpp" 1
 935              		csrr a5, sstatus
 936              	# 0 "" 2
 937              	#NO_APP
 938 0284 2338F4F4 		sd	a5,-176(s0)
 178:src/../h/Riscv.hpp **** }
 939              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 940              		.loc 2 178 12 is_stmt 0
 941 0288 033904F5 		ld	s2,-176(s0)
 942              	.LVL55:
GAS LISTING /tmp/cc3DoVoA.s 			page 29


 943              	.LBE273:
 944              	.LBE272:
 120:src/Riscv.cpp ****             _thread::dispatch();
 945              		.loc 1 120 13 is_stmt 1
 120:src/Riscv.cpp ****             _thread::dispatch();
 946              		.loc 1 120 39 is_stmt 0
 947 028c 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 947      83B70700 
 948 0294 23B00700 		sd	zero,0(a5)
 121:src/Riscv.cpp **** 
 949              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp **** 
 950              		.loc 1 121 30 is_stmt 0
 951 0298 97000000 		call	_ZN7_thread8dispatchEv@plt
 951      E7800000 
 952              	.LVL56:
 123:src/Riscv.cpp ****             w_sepc(sepc);
 953              		.loc 1 123 13 is_stmt 1
 954              	.LBB274:
 955              	.LBB275:
 183:src/../h/Riscv.hpp **** }
 956              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 957              		.loc 2 183 77 is_stmt 0
 958              	#APP
 959              	# 183 "src/../h/Riscv.hpp" 1
 960              		csrw sstatus, s2
 961              	# 0 "" 2
 962              	.LVL57:
 963              	#NO_APP
 964              	.LBE275:
 965              	.LBE274:
 124:src/Riscv.cpp ****         }
 966              		.loc 1 124 13 is_stmt 1
 967              	.LBB276:
 968              	.LBB277:
 113:src/../h/Riscv.hpp **** }
 969              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 970              		.loc 2 113 65 is_stmt 0
 971              	#APP
 972              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 973              		csrw sepc, s1
 974              	# 0 "" 2
 975              		.loc 2 114 1
 976              	#NO_APP
 977 02a8 6FF0DFDB 		j	.L3
 978              	.LVL58:
 979              	.L34:
 980              	.LBE277:
 981              	.LBE276:
 982              	.LBE269:
 983              	.LBB278:
 984              	.LBB250:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 985              		.loc 1 127 13 is_stmt 1
GAS LISTING /tmp/cc3DoVoA.s 			page 30


 986              	.LBB251:
 987              	.LBB252:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 988              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 989              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 990              		.loc 2 107 64 is_stmt 0
 991              	#APP
 992              	# 107 "src/../h/Riscv.hpp" 1
 993              		csrr a5, sepc
 994              	# 0 "" 2
 995              	#NO_APP
 996 02b0 2334F4F6 		sd	a5,-152(s0)
 108:src/../h/Riscv.hpp **** }
 997              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 998              		.loc 2 108 12 is_stmt 0
 999 02b4 833484F6 		ld	s1,-152(s0)
 1000              	.LVL59:
 1001              	.LBE252:
 1002              	.LBE251:
 127:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1003              		.loc 1 127 38
 1004 02b8 93844400 		addi	s1,s1,4
 1005              	.LVL60:
 128:src/Riscv.cpp **** 
 1006              		.loc 1 128 13 is_stmt 1
 1007              	.LBB253:
 1008              	.LBB254:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1009              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1010              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1011              		.loc 2 177 76 is_stmt 0
 1012              	#APP
 1013              	# 177 "src/../h/Riscv.hpp" 1
 1014              		csrr a5, sstatus
 1015              	# 0 "" 2
 1016              	#NO_APP
 1017 02c0 2330F4F6 		sd	a5,-160(s0)
 178:src/../h/Riscv.hpp **** }
 1018              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1019              		.loc 2 178 12 is_stmt 0
 1020 02c4 033904F6 		ld	s2,-160(s0)
 1021              	.LVL61:
 1022              	.LBE254:
 1023              	.LBE253:
 130:src/Riscv.cpp ****            uint64 arg2;
 1024              		.loc 1 130 12 is_stmt 1
 131:src/Riscv.cpp **** 
 1025              		.loc 1 131 12
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1026              		.loc 1 133 13
 133:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
GAS LISTING /tmp/cc3DoVoA.s 			page 31


 1027              		.loc 1 133 48 is_stmt 0
 1028              	#APP
 1029              	# 133 "src/Riscv.cpp" 1
 134:src/Riscv.cpp **** 
 1030              		ld a1, 11*8(fp)
 1031              	# 0 "" 2
 1032              		.loc 1 134 13 is_stmt 1
 134:src/Riscv.cpp **** 
 1033              		.loc 1 134 48 is_stmt 0
 1034              	# 134 "src/Riscv.cpp" 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1035              		ld a2, 12*8(fp)
 1036              	# 0 "" 2
 1037              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1038              		.loc 1 136 56 is_stmt 0
 1039              	# 136 "src/Riscv.cpp" 1
 1040              		mv s3, a1
 1041              	# 0 "" 2
 1042              	.LVL62:
 137:src/Riscv.cpp **** 
 1043              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp **** 
 1044              		.loc 1 137 56 is_stmt 0
 1045              	# 137 "src/Riscv.cpp" 1
 1046              		mv s4, a2
 1047              	# 0 "" 2
 1048              	.LVL63:
 139:src/Riscv.cpp ****             *arg1=sem;
 1049              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp ****             *arg1=sem;
 1050              		.loc 1 139 50 is_stmt 0
 1051              	#NO_APP
 1052 02d8 13058001 		li	a0,24
 1053 02dc 97000000 		call	_ZN10KSemaphorenwEm@plt
 1053      E7800000 
 1054              	.LVL64:
 1055              	.LBB255:
 1056              	.LBB256:
 1057              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1058              		.loc 3 14 40
 1059 02e4 23204501 		sw	s4,0(a0)
 1060              	.LVL65:
GAS LISTING /tmp/cc3DoVoA.s 			page 32


 1061              	.LBB257:
 1062              	.LBB258:
 1063              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1064              		.loc 4 26 29
 1065 02e8 23340500 		sd	zero,8(a0)
 1066 02ec 23380500 		sd	zero,16(a0)
 1067              	.LVL66:
 1068              	.LBE258:
 1069              	.LBE257:
 1070              	.LBE256:
 1071              	.LBE255:
 140:src/Riscv.cpp **** 
 1072              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp **** 
 1073              		.loc 1 140 18 is_stmt 0
 1074 02f0 23B0A900 		sd	a0,0(s3)
 142:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1075              		.loc 1 142 13 is_stmt 1
 1076              	.LVL67:
 143:src/Riscv.cpp ****             else ret=-1;
 1077              		.loc 1 143 13
 1078 02f4 630C0500 		beqz	a0,.L24
 143:src/Riscv.cpp ****             else ret=-1;
 1079              		.loc 1 143 33 is_stmt 0
 1080 02f8 93070000 		li	a5,0
 1081              	.L14:
 1082              	.LVL68:
 146:src/Riscv.cpp **** 
 1083              		.loc 1 146 13 is_stmt 1
 146:src/Riscv.cpp **** 
 1084              		.loc 1 146 56 is_stmt 0
GAS LISTING /tmp/cc3DoVoA.s 			page 33


 1085              	#APP
 1086              	# 146 "src/Riscv.cpp" 1
 148:src/Riscv.cpp ****             w_sepc(sepc);
 1087              		mv a0, a5
 1088              	# 0 "" 2
 1089              		.loc 1 148 13 is_stmt 1
 1090              	.LVL69:
 1091              	#NO_APP
 1092              	.LBB259:
 1093              	.LBB260:
 183:src/../h/Riscv.hpp **** }
 1094              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1095              		.loc 2 183 77 is_stmt 0
 1096              	#APP
 1097              	# 183 "src/../h/Riscv.hpp" 1
 1098              		csrw sstatus, s2
 1099              	# 0 "" 2
 1100              	.LVL70:
 1101              	#NO_APP
 1102              	.LBE260:
 1103              	.LBE259:
 149:src/Riscv.cpp ****         }
 1104              		.loc 1 149 13 is_stmt 1
 1105              	.LBB261:
 1106              	.LBB262:
 113:src/../h/Riscv.hpp **** }
 1107              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1108              		.loc 2 113 65 is_stmt 0
 1109              	#APP
 1110              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1111              		csrw sepc, s1
 1112              	# 0 "" 2
 1113              		.loc 2 114 1
 1114              	#NO_APP
 1115 0308 6FF0DFD5 		j	.L3
 1116              	.LVL71:
 1117              	.L24:
 1118              	.LBE262:
 1119              	.LBE261:
 144:src/Riscv.cpp **** 
 1120              		.loc 1 144 21
 1121 030c 9307F0FF 		li	a5,-1
 1122 0310 6FF0DFFE 		j	.L14
 1123              	.LVL72:
 1124              	.L35:
 1125              	.LBE250:
 1126              	.LBB263:
 1127              	.LBB228:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1128              		.loc 1 152 13 is_stmt 1
 1129              	.LBB229:
 1130              	.LBB230:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1131              		.loc 2 106 5
GAS LISTING /tmp/cc3DoVoA.s 			page 34


 107:src/../h/Riscv.hpp ****     return sepc;
 1132              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1133              		.loc 2 107 64 is_stmt 0
 1134              	#APP
 1135              	# 107 "src/../h/Riscv.hpp" 1
 1136              		csrr a5, sepc
 1137              	# 0 "" 2
 1138              	#NO_APP
 1139 0318 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/Riscv.hpp **** }
 1140              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1141              		.loc 2 108 12 is_stmt 0
 1142 031c 833984F7 		ld	s3,-136(s0)
 1143              	.LBE230:
 1144              	.LBE229:
 152:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1145              		.loc 1 152 38
 1146 0320 93894900 		addi	s3,s3,4
 1147              	.LVL73:
 153:src/Riscv.cpp **** 
 1148              		.loc 1 153 13 is_stmt 1
 1149              	.LBB231:
 1150              	.LBB232:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1151              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1152              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1153              		.loc 2 177 76 is_stmt 0
 1154              	#APP
 1155              	# 177 "src/../h/Riscv.hpp" 1
 1156              		csrr a5, sstatus
 1157              	# 0 "" 2
 1158              	#NO_APP
 1159 0328 2338F4F6 		sd	a5,-144(s0)
 178:src/../h/Riscv.hpp **** }
 1160              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1161              		.loc 2 178 12 is_stmt 0
 1162 032c 033A04F7 		ld	s4,-144(s0)
 1163              	.LVL74:
 1164              	.LBE232:
 1165              	.LBE231:
 155:src/Riscv.cpp **** 
 1166              		.loc 1 155 13 is_stmt 1
 158:src/Riscv.cpp **** 
 1167              		.loc 1 158 13
 158:src/Riscv.cpp **** 
 1168              		.loc 1 158 48 is_stmt 0
 1169              	#APP
 1170              	# 158 "src/Riscv.cpp" 1
 160:src/Riscv.cpp **** 
 1171              		ld a1, 11*8(fp)
 1172              	# 0 "" 2
 1173              		.loc 1 160 13 is_stmt 1
GAS LISTING /tmp/cc3DoVoA.s 			page 35


 160:src/Riscv.cpp **** 
 1174              		.loc 1 160 56 is_stmt 0
 1175              	# 160 "src/Riscv.cpp" 1
 1176              		mv s1, a1
 1177              	# 0 "" 2
 1178              	.LVL75:
 162:src/Riscv.cpp **** 
 1179              		.loc 1 162 13 is_stmt 1
 1180              	#NO_APP
 1181 0338 6F004003 		j	.L18
 1182              	.LVL76:
 1183              	.L39:
 1184              	.LBB233:
 1185              	.LBB234:
 1186              	.LBB235:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
GAS LISTING /tmp/cc3DoVoA.s 			page 36


  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1187              		.loc 4 70 22 is_stmt 0
 1188 033c 23B80400 		sd	zero,16(s1)
 1189              	.L17:
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1190              		.loc 4 72 12
 1191 0340 03390500 		ld	s2,0(a0)
 1192              	.LVL77:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1193              		.loc 4 73 35
 1194 0344 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1194      E7800000 
 1195              	.LVL78:
 1196              	.LBE235:
 1197              	.LBE234:
 167:src/Riscv.cpp ****                 sem->val++;
 1198              		.loc 1 167 17 is_stmt 1
 167:src/Riscv.cpp ****                 sem->val++;
 1199              		.loc 1 167 29 is_stmt 0
 1200 034c 93071000 		li	a5,1
 1201 0350 230CF902 		sb	a5,56(s2)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1202              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1203              		.loc 1 168 22 is_stmt 0
 1204 0354 83A70400 		lw	a5,0(s1)
 168:src/Riscv.cpp ****                 Scheduler::put(t);
 1205              		.loc 1 168 25
 1206 0358 9B871700 		addiw	a5,a5,1
 1207 035c 23A0F400 		sw	a5,0(s1)
 169:src/Riscv.cpp ****             }
 1208              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****             }
 1209              		.loc 1 169 31 is_stmt 0
 1210 0360 13050900 		mv	a0,s2
 1211 0364 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1211      E7800000 
 1212              	.LVL79:
 1213              	.L18:
 1214              	.LBE233:
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1215              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1216              		.loc 1 165 43
 1217              	.LBB238:
 1218              	.LBB239:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1219              		.loc 4 79 14 is_stmt 0
 1220 036c 03B58400 		ld	a0,8(s1)
 1221              		.loc 4 79 9
GAS LISTING /tmp/cc3DoVoA.s 			page 37


 1222 0370 630E0500 		beqz	a0,.L16
  80:src/../h/List.hpp ****         return head->data;
 1223              		.loc 4 80 22
 1224 0374 83370500 		ld	a5,0(a0)
 1225              	.LVL80:
 1226              	.LBE239:
 1227              	.LBE238:
 165:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1228              		.loc 1 165 43
 1229 0378 638A0700 		beqz	a5,.L16
 1230              	.LBB240:
 166:src/Riscv.cpp ****                 t->deblocked=true;
 1231              		.loc 1 166 17 is_stmt 1
 1232              	.LVL81:
 1233              	.LBB237:
 1234              	.LBB236:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1235              		.loc 4 69 22 is_stmt 0
 1236 037c 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1237              		.loc 4 69 9
 1238 0380 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1239              		.loc 4 70 9
 1240 0384 E39E07FA 		bnez	a5,.L17
 1241 0388 6FF05FFB 		j	.L39
 1242              	.LVL82:
 1243              	.L16:
 1244              	.LBE236:
 1245              	.LBE237:
 1246              	.LBE240:
 172:src/Riscv.cpp **** 
 1247              		.loc 1 172 13 is_stmt 1
 172:src/Riscv.cpp **** 
 1248              		.loc 1 172 23 is_stmt 0
 1249 038c 63880400 		beqz	s1,.L19
 172:src/Riscv.cpp **** 
 1250              		.loc 1 172 20 discriminator 1
 1251 0390 13850400 		mv	a0,s1
 1252 0394 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1252      E7800000 
 1253              	.LVL83:
 1254              	.L19:
 174:src/Riscv.cpp ****             w_sepc(sepc);
 1255              		.loc 1 174 13 is_stmt 1
 1256              	.LBB241:
 1257              	.LBB242:
 183:src/../h/Riscv.hpp **** }
 1258              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1259              		.loc 2 183 77 is_stmt 0
 1260              	#APP
 1261              	# 183 "src/../h/Riscv.hpp" 1
 1262              		csrw sstatus, s4
 1263              	# 0 "" 2
 1264              	.LVL84:
 1265              	#NO_APP
GAS LISTING /tmp/cc3DoVoA.s 			page 38


 1266              	.LBE242:
 1267              	.LBE241:
 175:src/Riscv.cpp ****         }
 1268              		.loc 1 175 13 is_stmt 1
 1269              	.LBB243:
 1270              	.LBB244:
 113:src/../h/Riscv.hpp **** }
 1271              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1272              		.loc 2 113 65 is_stmt 0
 1273              	#APP
 1274              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1275              		csrw sepc, s3
 1276              	# 0 "" 2
 1277              		.loc 2 114 1
 1278              	#NO_APP
 1279 03a4 6FF01FCC 		j	.L3
 1280              	.LVL85:
 1281              	.L36:
 1282              	.LBE244:
 1283              	.LBE243:
 1284              	.LBE228:
 1285              	.LBB245:
 1286              	.LBB215:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1287              		.loc 1 178 13 is_stmt 1
 1288              	.LBB216:
 1289              	.LBB217:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1290              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1291              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1292              		.loc 2 107 64 is_stmt 0
 1293              	#APP
 1294              	# 107 "src/../h/Riscv.hpp" 1
 1295              		csrr a5, sepc
 1296              	# 0 "" 2
 1297              	#NO_APP
 1298 03ac 2334F4F8 		sd	a5,-120(s0)
 108:src/../h/Riscv.hpp **** }
 1299              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1300              		.loc 2 108 12 is_stmt 0
 1301 03b0 833484F8 		ld	s1,-120(s0)
 1302              	.LVL86:
 1303              	.LBE217:
 1304              	.LBE216:
 178:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1305              		.loc 1 178 38
 1306 03b4 93844400 		addi	s1,s1,4
 1307              	.LVL87:
 179:src/Riscv.cpp **** 
 1308              		.loc 1 179 13 is_stmt 1
 1309              	.LBB218:
 1310              	.LBB219:
GAS LISTING /tmp/cc3DoVoA.s 			page 39


 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1311              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1312              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1313              		.loc 2 177 76 is_stmt 0
 1314              	#APP
 1315              	# 177 "src/../h/Riscv.hpp" 1
 1316              		csrr a5, sstatus
 1317              	# 0 "" 2
 1318              	#NO_APP
 1319 03bc 2330F4F8 		sd	a5,-128(s0)
 178:src/../h/Riscv.hpp **** }
 1320              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1321              		.loc 2 178 12 is_stmt 0
 1322 03c0 033904F8 		ld	s2,-128(s0)
 1323              	.LVL88:
 1324              	.LBE219:
 1325              	.LBE218:
 181:src/Riscv.cpp **** 
 1326              		.loc 1 181 13 is_stmt 1
 183:src/Riscv.cpp **** 
 1327              		.loc 1 183 13
 183:src/Riscv.cpp **** 
 1328              		.loc 1 183 48 is_stmt 0
 1329              	#APP
 1330              	# 183 "src/Riscv.cpp" 1
 185:src/Riscv.cpp **** 
 1331              		ld a1, 11*8(fp)
 1332              	# 0 "" 2
 1333              		.loc 1 185 13 is_stmt 1
 185:src/Riscv.cpp **** 
 1334              		.loc 1 185 56 is_stmt 0
 1335              	# 185 "src/Riscv.cpp" 1
 1336              		mv a0, a1
 1337              	# 0 "" 2
 1338              	.LVL89:
 189:src/Riscv.cpp **** 
 1339              		.loc 1 189 13 is_stmt 1
 189:src/Riscv.cpp **** 
 1340              		.loc 1 189 36 is_stmt 0
 1341              	#NO_APP
 1342 03cc 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1342      E7800000 
 1343              	.LVL90:
 191:src/Riscv.cpp **** 
 1344              		.loc 1 191 13 is_stmt 1
 191:src/Riscv.cpp **** 
 1345              		.loc 1 191 56 is_stmt 0
 1346              	#APP
 1347              	# 191 "src/Riscv.cpp" 1
 193:src/Riscv.cpp ****             w_sepc(sepc);
 1348              		mv a0, a0
 1349              	# 0 "" 2
 1350              		.loc 1 193 13 is_stmt 1
 1351              	.LVL91:
GAS LISTING /tmp/cc3DoVoA.s 			page 40


 1352              	#NO_APP
 1353              	.LBB220:
 1354              	.LBB221:
 183:src/../h/Riscv.hpp **** }
 1355              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1356              		.loc 2 183 77 is_stmt 0
 1357              	#APP
 1358              	# 183 "src/../h/Riscv.hpp" 1
 1359              		csrw sstatus, s2
 1360              	# 0 "" 2
 1361              	.LVL92:
 1362              	#NO_APP
 1363              	.LBE221:
 1364              	.LBE220:
 194:src/Riscv.cpp ****         }
 1365              		.loc 1 194 13 is_stmt 1
 1366              	.LBB222:
 1367              	.LBB223:
 113:src/../h/Riscv.hpp **** }
 1368              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1369              		.loc 2 113 65 is_stmt 0
 1370              	#APP
 1371              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1372              		csrw sepc, s1
 1373              	# 0 "" 2
 1374              		.loc 2 114 1
 1375              	#NO_APP
 1376 03e0 6FF05FC8 		j	.L3
 1377              	.LVL93:
 1378              	.L37:
 1379              	.LBE223:
 1380              	.LBE222:
 1381              	.LBE215:
 1382              	.LBB224:
 1383              	.LBB203:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1384              		.loc 1 197 13 is_stmt 1
 1385              	.LBB204:
 1386              	.LBB205:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1387              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1388              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1389              		.loc 2 107 64 is_stmt 0
 1390              	#APP
 1391              	# 107 "src/../h/Riscv.hpp" 1
 1392              		csrr a5, sepc
 1393              	# 0 "" 2
 1394              	#NO_APP
 1395 03e8 233CF4F8 		sd	a5,-104(s0)
 108:src/../h/Riscv.hpp **** }
 1396              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc3DoVoA.s 			page 41


 1397              		.loc 2 108 12 is_stmt 0
 1398 03ec 833484F9 		ld	s1,-104(s0)
 1399              	.LVL94:
 1400              	.LBE205:
 1401              	.LBE204:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1402              		.loc 1 197 38
 1403 03f0 93844400 		addi	s1,s1,4
 1404              	.LVL95:
 198:src/Riscv.cpp **** 
 1405              		.loc 1 198 13 is_stmt 1
 1406              	.LBB206:
 1407              	.LBB207:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1408              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1409              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1410              		.loc 2 177 76 is_stmt 0
 1411              	#APP
 1412              	# 177 "src/../h/Riscv.hpp" 1
 1413              		csrr a5, sstatus
 1414              	# 0 "" 2
 1415              	#NO_APP
 1416 03f8 2338F4F8 		sd	a5,-112(s0)
 178:src/../h/Riscv.hpp **** }
 1417              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1418              		.loc 2 178 12 is_stmt 0
 1419 03fc 033904F9 		ld	s2,-112(s0)
 1420              	.LVL96:
 1421              	.LBE207:
 1422              	.LBE206:
 200:src/Riscv.cpp **** 
 1423              		.loc 1 200 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1424              		.loc 1 202 13
 202:src/Riscv.cpp **** 
 1425              		.loc 1 202 48 is_stmt 0
 1426              	#APP
 1427              	# 202 "src/Riscv.cpp" 1
 204:src/Riscv.cpp **** 
 1428              		ld a1, 11*8(fp)
 1429              	# 0 "" 2
 1430              		.loc 1 204 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1431              		.loc 1 204 56 is_stmt 0
 1432              	# 204 "src/Riscv.cpp" 1
 1433              		mv a0, a1
 1434              	# 0 "" 2
 1435              	.LVL97:
 207:src/Riscv.cpp **** 
 1436              		.loc 1 207 13 is_stmt 1
 207:src/Riscv.cpp **** 
 1437              		.loc 1 207 25 is_stmt 0
 1438              	#NO_APP
 1439 0408 97000000 		call	_ZN10KSemaphore6signalEv@plt
GAS LISTING /tmp/cc3DoVoA.s 			page 42


 1439      E7800000 
 1440              	.LVL98:
 209:src/Riscv.cpp **** 
 1441              		.loc 1 209 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1442              		.loc 1 211 13
 211:src/Riscv.cpp **** 
 1443              		.loc 1 211 56 is_stmt 0
 1444 0410 93070000 		li	a5,0
 1445              	#APP
 1446              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1447              		mv a0, a5
 1448              	# 0 "" 2
 1449              		.loc 1 213 13 is_stmt 1
 1450              	.LVL99:
 1451              	#NO_APP
 1452              	.LBB208:
 1453              	.LBB209:
 183:src/../h/Riscv.hpp **** }
 1454              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1455              		.loc 2 183 77 is_stmt 0
 1456              	#APP
 1457              	# 183 "src/../h/Riscv.hpp" 1
 1458              		csrw sstatus, s2
 1459              	# 0 "" 2
 1460              	.LVL100:
 1461              	#NO_APP
 1462              	.LBE209:
 1463              	.LBE208:
 214:src/Riscv.cpp ****         }
 1464              		.loc 1 214 13 is_stmt 1
 1465              	.LBB210:
 1466              	.LBB211:
 113:src/../h/Riscv.hpp **** }
 1467              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1468              		.loc 2 113 65 is_stmt 0
 1469              	#APP
 1470              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1471              		csrw sepc, s1
 1472              	# 0 "" 2
 1473              		.loc 2 114 1
 1474              	#NO_APP
 1475 0420 6FF05FC4 		j	.L3
 1476              	.LVL101:
 1477              	.L38:
 1478              	.LBE211:
 1479              	.LBE210:
 1480              	.LBE203:
 1481              	.LBB212:
 1482              	.LBB193:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1483              		.loc 1 217 13 is_stmt 1
 1484              	.LBB194:
GAS LISTING /tmp/cc3DoVoA.s 			page 43


 1485              	.LBB195:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1486              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1487              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1488              		.loc 2 107 64 is_stmt 0
 1489              	#APP
 1490              	# 107 "src/../h/Riscv.hpp" 1
 1491              		csrr a5, sepc
 1492              	# 0 "" 2
 1493              	#NO_APP
 1494 0428 2334F4FA 		sd	a5,-88(s0)
 108:src/../h/Riscv.hpp **** }
 1495              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1496              		.loc 2 108 12 is_stmt 0
 1497 042c 833484FA 		ld	s1,-88(s0)
 1498              	.LVL102:
 1499              	.LBE195:
 1500              	.LBE194:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1501              		.loc 1 217 38
 1502 0430 93844400 		addi	s1,s1,4
 1503              	.LVL103:
 218:src/Riscv.cpp **** 
 1504              		.loc 1 218 13 is_stmt 1
 1505              	.LBB196:
 1506              	.LBB197:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1507              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1508              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1509              		.loc 2 177 76 is_stmt 0
 1510              	#APP
 1511              	# 177 "src/../h/Riscv.hpp" 1
 1512              		csrr a5, sstatus
 1513              	# 0 "" 2
 1514              	#NO_APP
 1515 0438 2330F4FA 		sd	a5,-96(s0)
 178:src/../h/Riscv.hpp **** }
 1516              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1517              		.loc 2 178 12 is_stmt 0
 1518 043c 033904FA 		ld	s2,-96(s0)
 1519              	.LVL104:
 1520              	.LBE197:
 1521              	.LBE196:
 221:src/Riscv.cpp **** 
 1522              		.loc 1 221 13 is_stmt 1
 221:src/Riscv.cpp **** 
 1523              		.loc 1 221 36 is_stmt 0
 1524 0440 97000000 		call	_ZN8KConsole4getcEv@plt
 1524      E7800000 
 1525              	.LVL105:
 223:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3DoVoA.s 			page 44


 1526              		.loc 1 223 13 is_stmt 1
 223:src/Riscv.cpp **** 
 1527              		.loc 1 223 54 is_stmt 0
 1528              	#APP
 1529              	# 223 "src/Riscv.cpp" 1
 226:src/Riscv.cpp ****             w_sepc(sepc);
 1530              		mv a0, a0
 1531              	# 0 "" 2
 1532              		.loc 1 226 13 is_stmt 1
 1533              	.LVL106:
 1534              	#NO_APP
 1535              	.LBB198:
 1536              	.LBB199:
 183:src/../h/Riscv.hpp **** }
 1537              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1538              		.loc 2 183 77 is_stmt 0
 1539              	#APP
 1540              	# 183 "src/../h/Riscv.hpp" 1
 1541              		csrw sstatus, s2
 1542              	# 0 "" 2
 1543              	.LVL107:
 1544              	#NO_APP
 1545              	.LBE199:
 1546              	.LBE198:
 227:src/Riscv.cpp ****         }
 1547              		.loc 1 227 13 is_stmt 1
 1548              	.LBB200:
 1549              	.LBB201:
 113:src/../h/Riscv.hpp **** }
 1550              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1551              		.loc 2 113 65 is_stmt 0
 1552              	#APP
 1553              	# 113 "src/../h/Riscv.hpp" 1
 114:src/../h/Riscv.hpp **** 
 1554              		csrw sepc, s1
 1555              	# 0 "" 2
 1556              		.loc 2 114 1
 1557              	#NO_APP
 1558 0454 6FF01FC1 		j	.L3
 1559              	.LVL108:
 1560              	.L27:
 1561              	.LBE201:
 1562              	.LBE200:
 1563              	.LBE193:
 1564              	.LBE212:
 1565              	.LBE224:
 1566              	.LBE245:
 1567              	.LBE263:
 1568              	.LBE278:
 1569              	.LBE294:
 1570              	.LBE311:
 1571              	.LBE329:
 1572              	.LBE348:
 1573              	.LBE360:
 1574              	.LBB361:
GAS LISTING /tmp/cc3DoVoA.s 			page 45


 1575              	.LBB154:
 247:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 1576              		.loc 1 247 9 is_stmt 1
 1577              	.LBB155:
 1578              	.LBB156:
 106:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1579              		.loc 2 106 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1580              		.loc 2 107 5
 107:src/../h/Riscv.hpp ****     return sepc;
 1581              		.loc 2 107 64 is_stmt 0
 1582              	#APP
 1583              	# 107 "src/../h/Riscv.hpp" 1
 1584              		csrr a5, sepc
 1585              	# 0 "" 2
 1586              	.LVL109:
 1587              	#NO_APP
 1588 045c 2334F4FC 		sd	a5,-56(s0)
 108:src/../h/Riscv.hpp **** }
 1589              		.loc 2 108 5 is_stmt 1
 108:src/../h/Riscv.hpp **** }
 1590              		.loc 2 108 12 is_stmt 0
 1591 0460 833784FC 		ld	a5,-56(s0)
 1592              	.LBE156:
 1593              	.LBE155:
 247:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 1594              		.loc 1 247 34
 1595 0464 93874700 		addi	a5,a5,4
 1596              	.LVL110:
 248:src/Riscv.cpp ****         w_sstatus(sstatus);
 1597              		.loc 1 248 9 is_stmt 1
 1598              	.LBB157:
 1599              	.LBB158:
 176:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1600              		.loc 2 176 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1601              		.loc 2 177 5
 177:src/../h/Riscv.hpp ****     return sstatus;
 1602              		.loc 2 177 76 is_stmt 0
 1603              	#APP
 1604              	# 177 "src/../h/Riscv.hpp" 1
 1605              		csrr a4, sstatus
 1606              	# 0 "" 2
 1607              	#NO_APP
 1608 046c 2330E4FC 		sd	a4,-64(s0)
 178:src/../h/Riscv.hpp **** }
 1609              		.loc 2 178 5 is_stmt 1
 178:src/../h/Riscv.hpp **** }
 1610              		.loc 2 178 12 is_stmt 0
 1611 0470 033704FC 		ld	a4,-64(s0)
 1612              	.LBE158:
 1613              	.LBE157:
 248:src/Riscv.cpp ****         w_sstatus(sstatus);
 1614              		.loc 1 248 53
 1615 0474 1377F7EF 		andi	a4,a4,-257
 1616              	.LVL111:
 249:src/Riscv.cpp ****         w_sepc(sepc);
GAS LISTING /tmp/cc3DoVoA.s 			page 46


 1617              		.loc 1 249 9 is_stmt 1
 1618              	.LBB159:
 1619              	.LBB160:
 183:src/../h/Riscv.hpp **** }
 1620              		.loc 2 183 5
 183:src/../h/Riscv.hpp **** }
 1621              		.loc 2 183 77 is_stmt 0
 1622              	#APP
 1623              	# 183 "src/../h/Riscv.hpp" 1
 1624              		csrw sstatus, a4
 1625              	# 0 "" 2
 1626              	.LVL112:
 1627              	#NO_APP
 1628              	.LBE160:
 1629              	.LBE159:
 250:src/Riscv.cpp **** 
 1630              		.loc 1 250 9 is_stmt 1
 1631              	.LBB161:
 1632              	.LBB162:
 113:src/../h/Riscv.hpp **** }
 1633              		.loc 2 113 5
 113:src/../h/Riscv.hpp **** }
 1634              		.loc 2 113 65 is_stmt 0
 1635              	#APP
 1636              	# 113 "src/../h/Riscv.hpp" 1
 1637              		csrw sepc, a5
 1638              	# 0 "" 2
 1639              	.LVL113:
 1640              	#NO_APP
 1641              	.LBE162:
 1642              	.LBE161:
 1643              	.LBE154:
 1644              	.LBE361:
 1645              	.LBE374:
 1646              		.loc 1 277 1
 1647 0480 6FF05FBE 		j	.L3
 1648              		.cfi_endproc
 1649              	.LFE50:
 1651              	.Letext0:
 1652              		.file 5 "src/../h/../lib/hw.h"
 1653              		.file 6 "src/../h/DoublyLinkedList.hpp"
 1654              		.file 7 "src/../h/MemoryAllocator.hpp"
 1655              		.file 8 "src/../h/Scheduler.hpp"
 1656              		.file 9 "src/../h/_thread.hpp"
 1657              		.file 10 "src/../h/KConsole.hpp"
GAS LISTING /tmp/cc3DoVoA.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc3DoVoA.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3DoVoA.s:13     .text:0000000000000000 .L0 
     /tmp/cc3DoVoA.s:14     .text:0000000000000000 .L0 
     /tmp/cc3DoVoA.s:15     .text:0000000000000004 .L0 
     /tmp/cc3DoVoA.s:17     .text:0000000000000008 .L0 
     /tmp/cc3DoVoA.s:19     .text:000000000000000c .L0 
     /tmp/cc3DoVoA.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/cc3DoVoA.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/cc3DoVoA.s:33     .text:0000000000000014 .L0 
     /tmp/cc3DoVoA.s:34     .text:0000000000000018 .L0 
     /tmp/cc3DoVoA.s:35     .text:0000000000000018 .L0 
     /tmp/cc3DoVoA.s:37     .text:000000000000001c .L0 
     /tmp/cc3DoVoA.s:39     .text:0000000000000020 .L0 
     /tmp/cc3DoVoA.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3DoVoA.s:48     .text:0000000000000020 .L0 
     /tmp/cc3DoVoA.s:49     .text:0000000000000020 .L0 
     /tmp/cc3DoVoA.s:50     .text:0000000000000024 .L0 
     /tmp/cc3DoVoA.s:57     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:58     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:59     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:60     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:61     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:62     .text:000000000000003c .L0 
     /tmp/cc3DoVoA.s:64     .text:0000000000000040 .L0 
     /tmp/cc3DoVoA.s:69     .text:0000000000000040 .L0 
     /tmp/cc3DoVoA.s:70     .text:0000000000000040 .L0 
     /tmp/cc3DoVoA.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:95     .text:0000000000000040 .L0 
     /tmp/cc3DoVoA.s:79     .text:0000000000000048 .L0 
     /tmp/cc3DoVoA.s:80     .text:0000000000000048 .L0 
     /tmp/cc3DoVoA.s:84     .text:000000000000004c .L0 
     /tmp/cc3DoVoA.s:87     .text:0000000000000050 .L0 
     /tmp/cc3DoVoA.s:88     .text:0000000000000050 .L0 
     /tmp/cc3DoVoA.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:25     .text:0000000000000050 .L0 
     /tmp/cc3DoVoA.s:98     .text:0000000000000054 .L0 
     /tmp/cc3DoVoA.s:104    .text:000000000000005c .L0 
     /tmp/cc3DoVoA.s:111    .text:0000000000000064 .L0 
     /tmp/cc3DoVoA.s:112    .text:0000000000000068 .L0 
     /tmp/cc3DoVoA.s:113    .text:0000000000000068 .L0 
     /tmp/cc3DoVoA.s:115    .text:000000000000006c .L0 
     /tmp/cc3DoVoA.s:116    .text:000000000000006c .L0 
     /tmp/cc3DoVoA.s:118    .text:0000000000000070 .L0 
     /tmp/cc3DoVoA.s:120    .text:0000000000000074 .L0 
     /tmp/cc3DoVoA.s:122    .text:0000000000000078 .L0 
     /tmp/cc3DoVoA.s:124    .text:000000000000007c .L0 
     /tmp/cc3DoVoA.s:126    .text:0000000000000080 .L0 
     /tmp/cc3DoVoA.s:130    .text:0000000000000084 .L0 
     /tmp/cc3DoVoA.s:134    .text:0000000000000084 .L0 
     /tmp/cc3DoVoA.s:143    .text:000000000000008c .L0 
     /tmp/cc3DoVoA.s:151    .text:0000000000000094 .L0 
     /tmp/cc3DoVoA.s:161    .text:000000000000009c .L0 
     /tmp/cc3DoVoA.s:173    .text:00000000000000a4 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 48


     /tmp/cc3DoVoA.s:187    .text:00000000000000ac .L0 
     /tmp/cc3DoVoA.s:203    .text:00000000000000b4 .L0 
     /tmp/cc3DoVoA.s:221    .text:00000000000000bc .L0 
     /tmp/cc3DoVoA.s:241    .text:00000000000000c4 .L0 
     /tmp/cc3DoVoA.s:263    .text:00000000000000cc .L0 
     /tmp/cc3DoVoA.s:287    .text:00000000000000d4 .L0 
     /tmp/cc3DoVoA.s:313    .text:00000000000000dc .L0 
     /tmp/cc3DoVoA.s:319    .text:00000000000000e4 .L0 
     /tmp/cc3DoVoA.s:320    .text:00000000000000e4 .L0 
     /tmp/cc3DoVoA.s:321    .text:00000000000000e4 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000000e4 .L0 
     /tmp/cc3DoVoA.s:329    .text:00000000000000ec .L0 
     /tmp/cc3DoVoA.s:330    .text:00000000000000ec .L0 
     /tmp/cc3DoVoA.s:335    .text:00000000000000f0 .L0 
     /tmp/cc3DoVoA.s:340    .text:00000000000000f4 .L0 
     /tmp/cc3DoVoA.s:341    .text:00000000000000f4 .L0 
     /tmp/cc3DoVoA.s:342    .text:00000000000000f4 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000000f4 .L0 
     /tmp/cc3DoVoA.s:350    .text:00000000000000fc .L0 
     /tmp/cc3DoVoA.s:351    .text:00000000000000fc .L0 
     /tmp/cc3DoVoA.s:356    .text:0000000000000100 .L0 
     /tmp/cc3DoVoA.s:357    .text:0000000000000100 .L0 
       src/Riscv.cpp:234    .text:0000000000000100 .L0 
     /tmp/cc3DoVoA.s:363    .text:0000000000000104 .L0 
       src/Riscv.cpp:236    .text:0000000000000104 .L0 
     /tmp/cc3DoVoA.s:369    .text:0000000000000108 .L0 
     /tmp/cc3DoVoA.s:371    .text:0000000000000108 .L0 
     /tmp/cc3DoVoA.s:377    .text:0000000000000114 .L0 
     /tmp/cc3DoVoA.s:378    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000114 .L0 
     /tmp/cc3DoVoA.s:390    .text:0000000000000118 .L0 
     /tmp/cc3DoVoA.s:391    .text:0000000000000118 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000118 .L0 
     /tmp/cc3DoVoA.s:398    .text:000000000000011c .L0 
     /tmp/cc3DoVoA.s:420    .text:0000000000000120 .L0 
     /tmp/cc3DoVoA.s:421    .text:0000000000000120 .L0 
     /tmp/cc3DoVoA.s:422    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000120 .L0 
     /tmp/cc3DoVoA.s:430    .text:0000000000000128 .L0 
     /tmp/cc3DoVoA.s:431    .text:0000000000000128 .L0 
     /tmp/cc3DoVoA.s:435    .text:000000000000012c .L0 
     /tmp/cc3DoVoA.s:440    .text:0000000000000130 .L0 
     /tmp/cc3DoVoA.s:441    .text:0000000000000130 .L0 
     /tmp/cc3DoVoA.s:442    .text:0000000000000130 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000130 .L0 
     /tmp/cc3DoVoA.s:450    .text:0000000000000138 .L0 
     /tmp/cc3DoVoA.s:451    .text:0000000000000138 .L0 
     /tmp/cc3DoVoA.s:456    .text:000000000000013c .L0 
     /tmp/cc3DoVoA.s:457    .text:000000000000013c .L0 
     /tmp/cc3DoVoA.s:458    .text:000000000000013c .L0 
     /tmp/cc3DoVoA.s:459    .text:000000000000013c .L0 
     /tmp/cc3DoVoA.s:460    .text:000000000000013c .L0 
       src/Riscv.cpp:42     .text:000000000000013c .L0 
     /tmp/cc3DoVoA.s:466    .text:0000000000000140 .L0 
       src/Riscv.cpp:43     .text:0000000000000140 .L0 
     /tmp/cc3DoVoA.s:471    .text:0000000000000144 .L0 
       src/Riscv.cpp:44     .text:0000000000000144 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 49


     /tmp/cc3DoVoA.s:476    .text:0000000000000148 .L0 
       src/Riscv.cpp:45     .text:0000000000000148 .L0 
     /tmp/cc3DoVoA.s:481    .text:000000000000014c .L0 
       src/Riscv.cpp:48     .text:000000000000014c .L0 
     /tmp/cc3DoVoA.s:487    .text:0000000000000150 .L0 
       src/Riscv.cpp:49     .text:0000000000000150 .L0 
     /tmp/cc3DoVoA.s:493    .text:0000000000000154 .L0 
       src/Riscv.cpp:50     .text:0000000000000154 .L0 
     /tmp/cc3DoVoA.s:499    .text:0000000000000158 .L0 
       src/Riscv.cpp:51     .text:0000000000000158 .L0 
     /tmp/cc3DoVoA.s:505    .text:000000000000015c .L0 
     /tmp/cc3DoVoA.s:507    .text:000000000000015c .L0 
     /tmp/cc3DoVoA.s:510    .text:0000000000000164 .L0 
     /tmp/cc3DoVoA.s:511    .text:0000000000000164 .L0 
     /tmp/cc3DoVoA.s:513    .text:0000000000000168 .L0 
     /tmp/cc3DoVoA.s:514    .text:0000000000000168 .L0 
     /tmp/cc3DoVoA.s:516    .text:000000000000016c .L0 
     /tmp/cc3DoVoA.s:520    .text:0000000000000170 .L0 
       src/Riscv.cpp:63     .text:0000000000000170 .L0 
     /tmp/cc3DoVoA.s:530    .text:0000000000000174 .L0 
     /tmp/cc3DoVoA.s:531    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000174 .L0 
     /tmp/cc3DoVoA.s:543    .text:0000000000000178 .L0 
     /tmp/cc3DoVoA.s:544    .text:0000000000000178 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000178 .L0 
     /tmp/cc3DoVoA.s:551    .text:000000000000017c .L0 
     /tmp/cc3DoVoA.s:557    .text:0000000000000180 .L0 
     /tmp/cc3DoVoA.s:568    .text:0000000000000188 .L0 
     /tmp/cc3DoVoA.s:569    .text:0000000000000188 .L0 
     /tmp/cc3DoVoA.s:570    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000188 .L0 
     /tmp/cc3DoVoA.s:578    .text:0000000000000190 .L0 
     /tmp/cc3DoVoA.s:579    .text:0000000000000190 .L0 
     /tmp/cc3DoVoA.s:584    .text:0000000000000194 .L0 
     /tmp/cc3DoVoA.s:589    .text:0000000000000198 .L0 
     /tmp/cc3DoVoA.s:590    .text:0000000000000198 .L0 
     /tmp/cc3DoVoA.s:591    .text:0000000000000198 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000198 .L0 
     /tmp/cc3DoVoA.s:599    .text:00000000000001a0 .L0 
     /tmp/cc3DoVoA.s:600    .text:00000000000001a0 .L0 
     /tmp/cc3DoVoA.s:605    .text:00000000000001a4 .L0 
       src/Riscv.cpp:72     .text:00000000000001a4 .L0 
     /tmp/cc3DoVoA.s:612    .text:00000000000001a8 .L0 
     /tmp/cc3DoVoA.s:614    .text:00000000000001a8 .L0 
     /tmp/cc3DoVoA.s:619    .text:00000000000001b4 .L0 
       src/Riscv.cpp:76     .text:00000000000001b4 .L0 
     /tmp/cc3DoVoA.s:629    .text:00000000000001b8 .L0 
     /tmp/cc3DoVoA.s:630    .text:00000000000001b8 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001b8 .L0 
     /tmp/cc3DoVoA.s:642    .text:00000000000001bc .L0 
     /tmp/cc3DoVoA.s:643    .text:00000000000001bc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001bc .L0 
     /tmp/cc3DoVoA.s:650    .text:00000000000001c0 .L0 
     /tmp/cc3DoVoA.s:661    .text:00000000000001c4 .L0 
     /tmp/cc3DoVoA.s:662    .text:00000000000001c4 .L0 
     /tmp/cc3DoVoA.s:663    .text:00000000000001c4 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001c4 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 50


     /tmp/cc3DoVoA.s:671    .text:00000000000001cc .L0 
     /tmp/cc3DoVoA.s:672    .text:00000000000001cc .L0 
     /tmp/cc3DoVoA.s:677    .text:00000000000001d0 .L0 
     /tmp/cc3DoVoA.s:682    .text:00000000000001d4 .L0 
     /tmp/cc3DoVoA.s:683    .text:00000000000001d4 .L0 
     /tmp/cc3DoVoA.s:684    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000001d4 .L0 
     /tmp/cc3DoVoA.s:692    .text:00000000000001dc .L0 
     /tmp/cc3DoVoA.s:693    .text:00000000000001dc .L0 
     /tmp/cc3DoVoA.s:698    .text:00000000000001e0 .L0 
       src/Riscv.cpp:85     .text:00000000000001e0 .L0 
     /tmp/cc3DoVoA.s:705    .text:00000000000001e4 .L0 
     /tmp/cc3DoVoA.s:707    .text:00000000000001e4 .L0 
     /tmp/cc3DoVoA.s:710    .text:00000000000001ec .L0 
       src/Riscv.cpp:87     .text:00000000000001ec .L0 
     /tmp/cc3DoVoA.s:720    .text:00000000000001f0 .L0 
     /tmp/cc3DoVoA.s:721    .text:00000000000001f0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001f0 .L0 
     /tmp/cc3DoVoA.s:733    .text:00000000000001f4 .L0 
     /tmp/cc3DoVoA.s:734    .text:00000000000001f4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001f4 .L0 
     /tmp/cc3DoVoA.s:741    .text:00000000000001f8 .L0 
     /tmp/cc3DoVoA.s:752    .text:00000000000001fc .L0 
     /tmp/cc3DoVoA.s:753    .text:00000000000001fc .L0 
     /tmp/cc3DoVoA.s:754    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:107    .text:00000000000001fc .L0 
     /tmp/cc3DoVoA.s:762    .text:0000000000000204 .L0 
     /tmp/cc3DoVoA.s:763    .text:0000000000000204 .L0 
     /tmp/cc3DoVoA.s:768    .text:0000000000000208 .L0 
     /tmp/cc3DoVoA.s:773    .text:000000000000020c .L0 
     /tmp/cc3DoVoA.s:774    .text:000000000000020c .L0 
     /tmp/cc3DoVoA.s:775    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:177    .text:000000000000020c .L0 
     /tmp/cc3DoVoA.s:783    .text:0000000000000214 .L0 
     /tmp/cc3DoVoA.s:784    .text:0000000000000214 .L0 
     /tmp/cc3DoVoA.s:789    .text:0000000000000218 .L0 
     /tmp/cc3DoVoA.s:790    .text:0000000000000218 .L0 
     /tmp/cc3DoVoA.s:793    .text:0000000000000224 .L0 
     /tmp/cc3DoVoA.s:796    .text:000000000000022c .L0 
     /tmp/cc3DoVoA.s:797    .text:000000000000022c .L0 
     /tmp/cc3DoVoA.s:802    .text:0000000000000234 .L0 
     /tmp/cc3DoVoA.s:803    .text:0000000000000234 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000234 .L0 
     /tmp/cc3DoVoA.s:815    .text:0000000000000238 .L0 
     /tmp/cc3DoVoA.s:816    .text:0000000000000238 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000238 .L0 
     /tmp/cc3DoVoA.s:823    .text:000000000000023c .L0 
     /tmp/cc3DoVoA.s:834    .text:0000000000000240 .L0 
     /tmp/cc3DoVoA.s:835    .text:0000000000000240 .L0 
     /tmp/cc3DoVoA.s:836    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000240 .L0 
     /tmp/cc3DoVoA.s:844    .text:0000000000000248 .L0 
     /tmp/cc3DoVoA.s:845    .text:0000000000000248 .L0 
     /tmp/cc3DoVoA.s:850    .text:000000000000024c .L0 
     /tmp/cc3DoVoA.s:855    .text:0000000000000250 .L0 
     /tmp/cc3DoVoA.s:856    .text:0000000000000250 .L0 
     /tmp/cc3DoVoA.s:857    .text:0000000000000250 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 51


  src/../h/Riscv.hpp:177    .text:0000000000000250 .L0 
     /tmp/cc3DoVoA.s:865    .text:0000000000000258 .L0 
     /tmp/cc3DoVoA.s:866    .text:0000000000000258 .L0 
     /tmp/cc3DoVoA.s:871    .text:000000000000025c .L0 
     /tmp/cc3DoVoA.s:872    .text:000000000000025c .L0 
     /tmp/cc3DoVoA.s:877    .text:0000000000000264 .L0 
     /tmp/cc3DoVoA.s:878    .text:0000000000000264 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000264 .L0 
     /tmp/cc3DoVoA.s:890    .text:0000000000000268 .L0 
     /tmp/cc3DoVoA.s:891    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000268 .L0 
     /tmp/cc3DoVoA.s:898    .text:000000000000026c .L0 
     /tmp/cc3DoVoA.s:909    .text:0000000000000270 .L0 
     /tmp/cc3DoVoA.s:910    .text:0000000000000270 .L0 
     /tmp/cc3DoVoA.s:911    .text:0000000000000270 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000270 .L0 
     /tmp/cc3DoVoA.s:919    .text:0000000000000278 .L0 
     /tmp/cc3DoVoA.s:920    .text:0000000000000278 .L0 
     /tmp/cc3DoVoA.s:925    .text:000000000000027c .L0 
     /tmp/cc3DoVoA.s:930    .text:0000000000000280 .L0 
     /tmp/cc3DoVoA.s:931    .text:0000000000000280 .L0 
     /tmp/cc3DoVoA.s:932    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000280 .L0 
     /tmp/cc3DoVoA.s:940    .text:0000000000000288 .L0 
     /tmp/cc3DoVoA.s:941    .text:0000000000000288 .L0 
     /tmp/cc3DoVoA.s:946    .text:000000000000028c .L0 
     /tmp/cc3DoVoA.s:947    .text:000000000000028c .L0 
     /tmp/cc3DoVoA.s:950    .text:0000000000000298 .L0 
     /tmp/cc3DoVoA.s:951    .text:0000000000000298 .L0 
     /tmp/cc3DoVoA.s:956    .text:00000000000002a0 .L0 
     /tmp/cc3DoVoA.s:957    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000002a0 .L0 
     /tmp/cc3DoVoA.s:969    .text:00000000000002a4 .L0 
     /tmp/cc3DoVoA.s:970    .text:00000000000002a4 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002a4 .L0 
     /tmp/cc3DoVoA.s:977    .text:00000000000002a8 .L0 
     /tmp/cc3DoVoA.s:988    .text:00000000000002ac .L0 
     /tmp/cc3DoVoA.s:989    .text:00000000000002ac .L0 
     /tmp/cc3DoVoA.s:990    .text:00000000000002ac .L0 
  src/../h/Riscv.hpp:107    .text:00000000000002ac .L0 
     /tmp/cc3DoVoA.s:998    .text:00000000000002b4 .L0 
     /tmp/cc3DoVoA.s:999    .text:00000000000002b4 .L0 
     /tmp/cc3DoVoA.s:1004   .text:00000000000002b8 .L0 
     /tmp/cc3DoVoA.s:1009   .text:00000000000002bc .L0 
     /tmp/cc3DoVoA.s:1010   .text:00000000000002bc .L0 
     /tmp/cc3DoVoA.s:1011   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:177    .text:00000000000002bc .L0 
     /tmp/cc3DoVoA.s:1019   .text:00000000000002c4 .L0 
     /tmp/cc3DoVoA.s:1020   .text:00000000000002c4 .L0 
     /tmp/cc3DoVoA.s:1025   .text:00000000000002c8 .L0 
     /tmp/cc3DoVoA.s:1026   .text:00000000000002c8 .L0 
     /tmp/cc3DoVoA.s:1027   .text:00000000000002c8 .L0 
       src/Riscv.cpp:133    .text:00000000000002c8 .L0 
     /tmp/cc3DoVoA.s:1033   .text:00000000000002cc .L0 
       src/Riscv.cpp:134    .text:00000000000002cc .L0 
     /tmp/cc3DoVoA.s:1038   .text:00000000000002d0 .L0 
       src/Riscv.cpp:136    .text:00000000000002d0 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 52


     /tmp/cc3DoVoA.s:1044   .text:00000000000002d4 .L0 
       src/Riscv.cpp:137    .text:00000000000002d4 .L0 
     /tmp/cc3DoVoA.s:1050   .text:00000000000002d8 .L0 
     /tmp/cc3DoVoA.s:1052   .text:00000000000002d8 .L0 
     /tmp/cc3DoVoA.s:1059   .text:00000000000002e4 .L0 
     /tmp/cc3DoVoA.s:1065   .text:00000000000002e8 .L0 
     /tmp/cc3DoVoA.s:1073   .text:00000000000002f0 .L0 
     /tmp/cc3DoVoA.s:1074   .text:00000000000002f0 .L0 
     /tmp/cc3DoVoA.s:1077   .text:00000000000002f4 .L0 
     /tmp/cc3DoVoA.s:1078   .text:00000000000002f4 .L0 
     /tmp/cc3DoVoA.s:1080   .text:00000000000002f8 .L0 
     /tmp/cc3DoVoA.s:1084   .text:00000000000002fc .L0 
       src/Riscv.cpp:146    .text:00000000000002fc .L0 
     /tmp/cc3DoVoA.s:1094   .text:0000000000000300 .L0 
     /tmp/cc3DoVoA.s:1095   .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000300 .L0 
     /tmp/cc3DoVoA.s:1107   .text:0000000000000304 .L0 
     /tmp/cc3DoVoA.s:1108   .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000304 .L0 
     /tmp/cc3DoVoA.s:1115   .text:0000000000000308 .L0 
     /tmp/cc3DoVoA.s:1121   .text:000000000000030c .L0 
     /tmp/cc3DoVoA.s:1131   .text:0000000000000314 .L0 
     /tmp/cc3DoVoA.s:1132   .text:0000000000000314 .L0 
     /tmp/cc3DoVoA.s:1133   .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000314 .L0 
     /tmp/cc3DoVoA.s:1141   .text:000000000000031c .L0 
     /tmp/cc3DoVoA.s:1142   .text:000000000000031c .L0 
     /tmp/cc3DoVoA.s:1146   .text:0000000000000320 .L0 
     /tmp/cc3DoVoA.s:1151   .text:0000000000000324 .L0 
     /tmp/cc3DoVoA.s:1152   .text:0000000000000324 .L0 
     /tmp/cc3DoVoA.s:1153   .text:0000000000000324 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000324 .L0 
     /tmp/cc3DoVoA.s:1161   .text:000000000000032c .L0 
     /tmp/cc3DoVoA.s:1162   .text:000000000000032c .L0 
     /tmp/cc3DoVoA.s:1167   .text:0000000000000330 .L0 
     /tmp/cc3DoVoA.s:1168   .text:0000000000000330 .L0 
       src/Riscv.cpp:158    .text:0000000000000330 .L0 
     /tmp/cc3DoVoA.s:1174   .text:0000000000000334 .L0 
       src/Riscv.cpp:160    .text:0000000000000334 .L0 
     /tmp/cc3DoVoA.s:1181   .text:0000000000000338 .L0 
     /tmp/cc3DoVoA.s:1188   .text:000000000000033c .L0 
     /tmp/cc3DoVoA.s:1191   .text:0000000000000340 .L0 
     /tmp/cc3DoVoA.s:1194   .text:0000000000000344 .L0 
     /tmp/cc3DoVoA.s:1199   .text:000000000000034c .L0 
     /tmp/cc3DoVoA.s:1200   .text:000000000000034c .L0 
     /tmp/cc3DoVoA.s:1203   .text:0000000000000354 .L0 
     /tmp/cc3DoVoA.s:1204   .text:0000000000000354 .L0 
     /tmp/cc3DoVoA.s:1206   .text:0000000000000358 .L0 
     /tmp/cc3DoVoA.s:1209   .text:0000000000000360 .L0 
     /tmp/cc3DoVoA.s:1210   .text:0000000000000360 .L0 
     /tmp/cc3DoVoA.s:1216   .text:000000000000036c .L0 
     /tmp/cc3DoVoA.s:1219   .text:000000000000036c .L0 
     /tmp/cc3DoVoA.s:1220   .text:000000000000036c .L0 
     /tmp/cc3DoVoA.s:1222   .text:0000000000000370 .L0 
     /tmp/cc3DoVoA.s:1224   .text:0000000000000374 .L0 
     /tmp/cc3DoVoA.s:1229   .text:0000000000000378 .L0 
     /tmp/cc3DoVoA.s:1235   .text:000000000000037c .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 53


     /tmp/cc3DoVoA.s:1236   .text:000000000000037c .L0 
     /tmp/cc3DoVoA.s:1238   .text:0000000000000380 .L0 
     /tmp/cc3DoVoA.s:1240   .text:0000000000000384 .L0 
     /tmp/cc3DoVoA.s:1248   .text:000000000000038c .L0 
     /tmp/cc3DoVoA.s:1249   .text:000000000000038c .L0 
     /tmp/cc3DoVoA.s:1251   .text:0000000000000390 .L0 
     /tmp/cc3DoVoA.s:1258   .text:000000000000039c .L0 
     /tmp/cc3DoVoA.s:1259   .text:000000000000039c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000039c .L0 
     /tmp/cc3DoVoA.s:1271   .text:00000000000003a0 .L0 
     /tmp/cc3DoVoA.s:1272   .text:00000000000003a0 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003a0 .L0 
     /tmp/cc3DoVoA.s:1279   .text:00000000000003a4 .L0 
     /tmp/cc3DoVoA.s:1290   .text:00000000000003a8 .L0 
     /tmp/cc3DoVoA.s:1291   .text:00000000000003a8 .L0 
     /tmp/cc3DoVoA.s:1292   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003a8 .L0 
     /tmp/cc3DoVoA.s:1300   .text:00000000000003b0 .L0 
     /tmp/cc3DoVoA.s:1301   .text:00000000000003b0 .L0 
     /tmp/cc3DoVoA.s:1306   .text:00000000000003b4 .L0 
     /tmp/cc3DoVoA.s:1311   .text:00000000000003b8 .L0 
     /tmp/cc3DoVoA.s:1312   .text:00000000000003b8 .L0 
     /tmp/cc3DoVoA.s:1313   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003b8 .L0 
     /tmp/cc3DoVoA.s:1321   .text:00000000000003c0 .L0 
     /tmp/cc3DoVoA.s:1322   .text:00000000000003c0 .L0 
     /tmp/cc3DoVoA.s:1327   .text:00000000000003c4 .L0 
     /tmp/cc3DoVoA.s:1328   .text:00000000000003c4 .L0 
       src/Riscv.cpp:183    .text:00000000000003c4 .L0 
     /tmp/cc3DoVoA.s:1334   .text:00000000000003c8 .L0 
       src/Riscv.cpp:185    .text:00000000000003c8 .L0 
     /tmp/cc3DoVoA.s:1340   .text:00000000000003cc .L0 
     /tmp/cc3DoVoA.s:1342   .text:00000000000003cc .L0 
     /tmp/cc3DoVoA.s:1345   .text:00000000000003d4 .L0 
       src/Riscv.cpp:191    .text:00000000000003d4 .L0 
     /tmp/cc3DoVoA.s:1355   .text:00000000000003d8 .L0 
     /tmp/cc3DoVoA.s:1356   .text:00000000000003d8 .L0 
  src/../h/Riscv.hpp:183    .text:00000000000003d8 .L0 
     /tmp/cc3DoVoA.s:1368   .text:00000000000003dc .L0 
     /tmp/cc3DoVoA.s:1369   .text:00000000000003dc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000003dc .L0 
     /tmp/cc3DoVoA.s:1376   .text:00000000000003e0 .L0 
     /tmp/cc3DoVoA.s:1387   .text:00000000000003e4 .L0 
     /tmp/cc3DoVoA.s:1388   .text:00000000000003e4 .L0 
     /tmp/cc3DoVoA.s:1389   .text:00000000000003e4 .L0 
  src/../h/Riscv.hpp:107    .text:00000000000003e4 .L0 
     /tmp/cc3DoVoA.s:1397   .text:00000000000003ec .L0 
     /tmp/cc3DoVoA.s:1398   .text:00000000000003ec .L0 
     /tmp/cc3DoVoA.s:1403   .text:00000000000003f0 .L0 
     /tmp/cc3DoVoA.s:1408   .text:00000000000003f4 .L0 
     /tmp/cc3DoVoA.s:1409   .text:00000000000003f4 .L0 
     /tmp/cc3DoVoA.s:1410   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:177    .text:00000000000003f4 .L0 
     /tmp/cc3DoVoA.s:1418   .text:00000000000003fc .L0 
     /tmp/cc3DoVoA.s:1419   .text:00000000000003fc .L0 
     /tmp/cc3DoVoA.s:1424   .text:0000000000000400 .L0 
     /tmp/cc3DoVoA.s:1425   .text:0000000000000400 .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 54


       src/Riscv.cpp:202    .text:0000000000000400 .L0 
     /tmp/cc3DoVoA.s:1431   .text:0000000000000404 .L0 
       src/Riscv.cpp:204    .text:0000000000000404 .L0 
     /tmp/cc3DoVoA.s:1437   .text:0000000000000408 .L0 
     /tmp/cc3DoVoA.s:1439   .text:0000000000000408 .L0 
     /tmp/cc3DoVoA.s:1442   .text:0000000000000410 .L0 
     /tmp/cc3DoVoA.s:1443   .text:0000000000000410 .L0 
     /tmp/cc3DoVoA.s:1444   .text:0000000000000410 .L0 
     /tmp/cc3DoVoA.s:1454   .text:0000000000000418 .L0 
     /tmp/cc3DoVoA.s:1455   .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000418 .L0 
     /tmp/cc3DoVoA.s:1467   .text:000000000000041c .L0 
     /tmp/cc3DoVoA.s:1468   .text:000000000000041c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000041c .L0 
     /tmp/cc3DoVoA.s:1475   .text:0000000000000420 .L0 
     /tmp/cc3DoVoA.s:1486   .text:0000000000000424 .L0 
     /tmp/cc3DoVoA.s:1487   .text:0000000000000424 .L0 
     /tmp/cc3DoVoA.s:1488   .text:0000000000000424 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000424 .L0 
     /tmp/cc3DoVoA.s:1496   .text:000000000000042c .L0 
     /tmp/cc3DoVoA.s:1497   .text:000000000000042c .L0 
     /tmp/cc3DoVoA.s:1502   .text:0000000000000430 .L0 
     /tmp/cc3DoVoA.s:1507   .text:0000000000000434 .L0 
     /tmp/cc3DoVoA.s:1508   .text:0000000000000434 .L0 
     /tmp/cc3DoVoA.s:1509   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000434 .L0 
     /tmp/cc3DoVoA.s:1517   .text:000000000000043c .L0 
     /tmp/cc3DoVoA.s:1518   .text:000000000000043c .L0 
     /tmp/cc3DoVoA.s:1523   .text:0000000000000440 .L0 
     /tmp/cc3DoVoA.s:1524   .text:0000000000000440 .L0 
     /tmp/cc3DoVoA.s:1527   .text:0000000000000448 .L0 
       src/Riscv.cpp:223    .text:0000000000000448 .L0 
     /tmp/cc3DoVoA.s:1537   .text:000000000000044c .L0 
     /tmp/cc3DoVoA.s:1538   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000044c .L0 
     /tmp/cc3DoVoA.s:1550   .text:0000000000000450 .L0 
     /tmp/cc3DoVoA.s:1551   .text:0000000000000450 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000450 .L0 
     /tmp/cc3DoVoA.s:1558   .text:0000000000000454 .L0 
     /tmp/cc3DoVoA.s:1579   .text:0000000000000458 .L0 
     /tmp/cc3DoVoA.s:1580   .text:0000000000000458 .L0 
     /tmp/cc3DoVoA.s:1581   .text:0000000000000458 .L0 
  src/../h/Riscv.hpp:107    .text:0000000000000458 .L0 
     /tmp/cc3DoVoA.s:1590   .text:0000000000000460 .L0 
     /tmp/cc3DoVoA.s:1591   .text:0000000000000460 .L0 
     /tmp/cc3DoVoA.s:1595   .text:0000000000000464 .L0 
     /tmp/cc3DoVoA.s:1600   .text:0000000000000468 .L0 
     /tmp/cc3DoVoA.s:1601   .text:0000000000000468 .L0 
     /tmp/cc3DoVoA.s:1602   .text:0000000000000468 .L0 
  src/../h/Riscv.hpp:177    .text:0000000000000468 .L0 
     /tmp/cc3DoVoA.s:1610   .text:0000000000000470 .L0 
     /tmp/cc3DoVoA.s:1611   .text:0000000000000470 .L0 
     /tmp/cc3DoVoA.s:1615   .text:0000000000000474 .L0 
     /tmp/cc3DoVoA.s:1620   .text:0000000000000478 .L0 
     /tmp/cc3DoVoA.s:1621   .text:0000000000000478 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000478 .L0 
     /tmp/cc3DoVoA.s:1633   .text:000000000000047c .L0 
GAS LISTING /tmp/cc3DoVoA.s 			page 55


     /tmp/cc3DoVoA.s:1634   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000047c .L0 
     /tmp/cc3DoVoA.s:1647   .text:0000000000000480 .L0 
     /tmp/cc3DoVoA.s:1648   .text:0000000000000484 .L0 
     /tmp/cc3DoVoA.s:1658   .text:0000000000000484 .L0 
     /tmp/cc3DoVoA.s:790    .text:0000000000000218 .L0 
     /tmp/cc3DoVoA.s:947    .text:000000000000028c .L0 
     /tmp/cc3DoVoA.s:129    .text:0000000000000084 .L26
     /tmp/cc3DoVoA.s:1560   .text:0000000000000458 .L27
     /tmp/cc3DoVoA.s:400    .text:0000000000000120 .L28
     /tmp/cc3DoVoA.s:560    .text:0000000000000188 .L29
     /tmp/cc3DoVoA.s:652    .text:00000000000001c4 .L30
     /tmp/cc3DoVoA.s:743    .text:00000000000001fc .L31
     /tmp/cc3DoVoA.s:825    .text:0000000000000240 .L32
     /tmp/cc3DoVoA.s:900    .text:0000000000000270 .L33
     /tmp/cc3DoVoA.s:979    .text:00000000000002ac .L34
     /tmp/cc3DoVoA.s:1124   .text:0000000000000314 .L35
     /tmp/cc3DoVoA.s:1281   .text:00000000000003a8 .L36
     /tmp/cc3DoVoA.s:1378   .text:00000000000003e4 .L37
     /tmp/cc3DoVoA.s:1477   .text:0000000000000424 .L38
     /tmp/cc3DoVoA.s:107    .text:0000000000000064 .L3
     /tmp/cc3DoVoA.s:553    .text:0000000000000180 .L23
     /tmp/cc3DoVoA.s:137    .text:000000000000008c .L5
     /tmp/cc3DoVoA.s:517    .text:0000000000000170 .L6
     /tmp/cc3DoVoA.s:1117   .text:000000000000030c .L24
     /tmp/cc3DoVoA.s:1081   .text:00000000000002fc .L14
     /tmp/cc3DoVoA.s:1213   .text:000000000000036c .L18
     /tmp/cc3DoVoA.s:1243   .text:000000000000038c .L16
     /tmp/cc3DoVoA.s:1189   .text:0000000000000340 .L17
     /tmp/cc3DoVoA.s:1183   .text:000000000000033c .L39
     /tmp/cc3DoVoA.s:1254   .text:000000000000039c .L19
     /tmp/cc3DoVoA.s:4591   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3DoVoA.s:6751   .debug_str:0000000000000aaa .LASF209
     /tmp/cc3DoVoA.s:6477   .debug_str:000000000000019a .LASF210
     /tmp/cc3DoVoA.s:6613   .debug_str:0000000000000635 .LASF211
     /tmp/cc3DoVoA.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3DoVoA.s:1651   .text:0000000000000484 .Letext0
     /tmp/cc3DoVoA.s:6417   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3DoVoA.s:6669   .debug_str:0000000000000860 .LASF3
     /tmp/cc3DoVoA.s:6545   .debug_str:00000000000003dd .LASF0
     /tmp/cc3DoVoA.s:6589   .debug_str:0000000000000597 .LASF1
     /tmp/cc3DoVoA.s:6685   .debug_str:00000000000008da .LASF2
     /tmp/cc3DoVoA.s:6697   .debug_str:0000000000000951 .LASF4
     /tmp/cc3DoVoA.s:6561   .debug_str:0000000000000454 .LASF5
     /tmp/cc3DoVoA.s:6431   .debug_str:0000000000000057 .LASF6
     /tmp/cc3DoVoA.s:6643   .debug_str:0000000000000741 .LASF7
     /tmp/cc3DoVoA.s:6577   .debug_str:0000000000000535 .LASF8
     /tmp/cc3DoVoA.s:6519   .debug_str:00000000000002f7 .LASF9
     /tmp/cc3DoVoA.s:6525   .debug_str:0000000000000329 .LASF10
     /tmp/cc3DoVoA.s:6465   .debug_str:000000000000013f .LASF11
     /tmp/cc3DoVoA.s:6509   .debug_str:00000000000002ad .LASF12
     /tmp/cc3DoVoA.s:6479   .debug_str:00000000000001a8 .LASF13
     /tmp/cc3DoVoA.s:6463   .debug_str:000000000000012f .LASF14
     /tmp/cc3DoVoA.s:6723   .debug_str:0000000000000a0e .LASF15
     /tmp/cc3DoVoA.s:6497   .debug_str:000000000000022c .LASF16
     /tmp/cc3DoVoA.s:6713   .debug_str:00000000000009d8 .LASF17
     /tmp/cc3DoVoA.s:6803   .debug_str:0000000000000ce5 .LASF57
GAS LISTING /tmp/cc3DoVoA.s 			page 56


     /tmp/cc3DoVoA.s:6789   .debug_str:0000000000000c62 .LASF116
     /tmp/cc3DoVoA.s:6503   .debug_str:0000000000000269 .LASF18
     /tmp/cc3DoVoA.s:6749   .debug_str:0000000000000a9d .LASF19
     /tmp/cc3DoVoA.s:6485   .debug_str:00000000000001dd .LASF20
     /tmp/cc3DoVoA.s:6537   .debug_str:00000000000003a2 .LASF53
     /tmp/cc3DoVoA.s:6543   .debug_str:00000000000003c5 .LASF55
     /tmp/cc3DoVoA.s:6781   .debug_str:0000000000000c2e .LASF21
     /tmp/cc3DoVoA.s:6769   .debug_str:0000000000000bee .LASF23
     /tmp/cc3DoVoA.s:6681   .debug_str:00000000000008c6 .LASF25
     /tmp/cc3DoVoA.s:6633   .debug_str:00000000000006f4 .LASF27
     /tmp/cc3DoVoA.s:6657   .debug_str:00000000000007f1 .LASF22
     /tmp/cc3DoVoA.s:6659   .debug_str:00000000000007f8 .LASF24
     /tmp/cc3DoVoA.s:6629   .debug_str:00000000000006d9 .LASF26
     /tmp/cc3DoVoA.s:6581   .debug_str:000000000000056a .LASF28
     /tmp/cc3DoVoA.s:6815   .debug_str:0000000000000d37 .LASF29
     /tmp/cc3DoVoA.s:6757   .debug_str:0000000000000b8f .LASF30
     /tmp/cc3DoVoA.s:6623   .debug_str:00000000000006b8 .LASF31
     /tmp/cc3DoVoA.s:6631   .debug_str:00000000000006e0 .LASF32
     /tmp/cc3DoVoA.s:6595   .debug_str:00000000000005bd .LASF33
     /tmp/cc3DoVoA.s:6663   .debug_str:0000000000000826 .LASF34
     /tmp/cc3DoVoA.s:6845   .debug_str:0000000000000e26 .LASF35
     /tmp/cc3DoVoA.s:6551   .debug_str:00000000000003f5 .LASF36
     /tmp/cc3DoVoA.s:6719   .debug_str:00000000000009fa .LASF37
     /tmp/cc3DoVoA.s:6701   .debug_str:000000000000097e .LASF38
     /tmp/cc3DoVoA.s:6703   .debug_str:0000000000000991 .LASF39
     /tmp/cc3DoVoA.s:6469   .debug_str:0000000000000153 .LASF40
     /tmp/cc3DoVoA.s:6495   .debug_str:0000000000000226 .LASF41
     /tmp/cc3DoVoA.s:6541   .debug_str:00000000000003b3 .LASF42
     /tmp/cc3DoVoA.s:6549   .debug_str:00000000000003ef .LASF43
     /tmp/cc3DoVoA.s:6487   .debug_str:00000000000001e9 .LASF44
     /tmp/cc3DoVoA.s:6433   .debug_str:000000000000005e .LASF45
     /tmp/cc3DoVoA.s:6691   .debug_str:0000000000000907 .LASF46
     /tmp/cc3DoVoA.s:6683   .debug_str:00000000000008cf .LASF47
     /tmp/cc3DoVoA.s:6837   .debug_str:0000000000000de7 .LASF48
     /tmp/cc3DoVoA.s:6807   .debug_str:0000000000000cf0 .LASF49
     /tmp/cc3DoVoA.s:6819   .debug_str:0000000000000d4b .LASF50
     /tmp/cc3DoVoA.s:6801   .debug_str:0000000000000cdb .LASF51
     /tmp/cc3DoVoA.s:6615   .debug_str:0000000000000665 .LASF52
     /tmp/cc3DoVoA.s:6813   .debug_str:0000000000000d28 .LASF54
     /tmp/cc3DoVoA.s:6523   .debug_str:000000000000030d .LASF56
     /tmp/cc3DoVoA.s:6645   .debug_str:0000000000000754 .LASF157
     /tmp/cc3DoVoA.s:6573   .debug_str:00000000000004f6 .LASF159
     /tmp/cc3DoVoA.s:6811   .debug_str:0000000000000d04 .LASF58
     /tmp/cc3DoVoA.s:6797   .debug_str:0000000000000cb6 .LASF92
     /tmp/cc3DoVoA.s:6587   .debug_str:0000000000000592 .LASF59
     /tmp/cc3DoVoA.s:6467   .debug_str:000000000000014e .LASF60
     /tmp/cc3DoVoA.s:6437   .debug_str:0000000000000082 .LASF61
     /tmp/cc3DoVoA.s:6557   .debug_str:0000000000000419 .LASF94
     /tmp/cc3DoVoA.s:6717   .debug_str:00000000000009f5 .LASF62
     /tmp/cc3DoVoA.s:6625   .debug_str:00000000000006c0 .LASF63
     /tmp/cc3DoVoA.s:6841   .debug_str:0000000000000e0c .LASF64
     /tmp/cc3DoVoA.s:6693   .debug_str:000000000000091f .LASF67
     /tmp/cc3DoVoA.s:6507   .debug_str:000000000000028c .LASF65
     /tmp/cc3DoVoA.s:6689   .debug_str:00000000000008fd .LASF66
     /tmp/cc3DoVoA.s:6673   .debug_str:000000000000086d .LASF68
     /tmp/cc3DoVoA.s:6637   .debug_str:000000000000070e .LASF69
     /tmp/cc3DoVoA.s:6817   .debug_str:0000000000000d3f .LASF70
GAS LISTING /tmp/cc3DoVoA.s 			page 57


     /tmp/cc3DoVoA.s:6617   .debug_str:000000000000067b .LASF71
     /tmp/cc3DoVoA.s:6731   .debug_str:0000000000000a3b .LASF72
     /tmp/cc3DoVoA.s:6457   .debug_str:00000000000000f1 .LASF73
     /tmp/cc3DoVoA.s:6783   .debug_str:0000000000000c37 .LASF74
     /tmp/cc3DoVoA.s:6499   .debug_str:0000000000000242 .LASF75
     /tmp/cc3DoVoA.s:6555   .debug_str:000000000000040f .LASF76
     /tmp/cc3DoVoA.s:6649   .debug_str:0000000000000784 .LASF77
     /tmp/cc3DoVoA.s:6743   .debug_str:0000000000000a7c .LASF132
     /tmp/cc3DoVoA.s:6567   .debug_str:00000000000004a6 .LASF78
     /tmp/cc3DoVoA.s:6787   .debug_str:0000000000000c46 .LASF79
     /tmp/cc3DoVoA.s:6435   .debug_str:0000000000000069 .LASF80
     /tmp/cc3DoVoA.s:6473   .debug_str:0000000000000184 .LASF81
     /tmp/cc3DoVoA.s:6763   .debug_str:0000000000000bc1 .LASF82
     /tmp/cc3DoVoA.s:6671   .debug_str:0000000000000865 .LASF83
     /tmp/cc3DoVoA.s:6517   .debug_str:00000000000002ed .LASF84
     /tmp/cc3DoVoA.s:6709   .debug_str:00000000000009b4 .LASF85
     /tmp/cc3DoVoA.s:6825   .debug_str:0000000000000d8d .LASF86
     /tmp/cc3DoVoA.s:6831   .debug_str:0000000000000dac .LASF212
     /tmp/cc3DoVoA.s:6571   .debug_str:00000000000004da .LASF213
     /tmp/cc3DoVoA.s:6575   .debug_str:0000000000000518 .LASF87
     /tmp/cc3DoVoA.s:6461   .debug_str:000000000000011a .LASF88
     /tmp/cc3DoVoA.s:6695   .debug_str:000000000000093c .LASF89
     /tmp/cc3DoVoA.s:6847   .debug_str:0000000000000e2e .LASF90
     /tmp/cc3DoVoA.s:6785   .debug_str:0000000000000c41 .LASF93
     /tmp/cc3DoVoA.s:6585   .debug_str:000000000000058d .LASF91
     /tmp/cc3DoVoA.s:6793   .debug_str:0000000000000c8c .LASF95
     /tmp/cc3DoVoA.s:6621   .debug_str:00000000000006b3 .LASF96
     /tmp/cc3DoVoA.s:6641   .debug_str:000000000000072a .LASF97
     /tmp/cc3DoVoA.s:6661   .debug_str:000000000000080b .LASF98
     /tmp/cc3DoVoA.s:6535   .debug_str:0000000000000387 .LASF214
     /tmp/cc3DoVoA.s:6839   .debug_str:0000000000000dff .LASF99
     /tmp/cc3DoVoA.s:6425   .debug_str:000000000000002b .LASF100
     /tmp/cc3DoVoA.s:6429   .debug_str:0000000000000047 .LASF101
     /tmp/cc3DoVoA.s:6569   .debug_str:00000000000004c2 .LASF102
     /tmp/cc3DoVoA.s:6679   .debug_str:00000000000008bd .LASF103
     /tmp/cc3DoVoA.s:6835   .debug_str:0000000000000dc6 .LASF104
     /tmp/cc3DoVoA.s:6599   .debug_str:00000000000005d9 .LASF105
     /tmp/cc3DoVoA.s:6799   .debug_str:0000000000000cbb .LASF106
     /tmp/cc3DoVoA.s:6639   .debug_str:000000000000071e .LASF107
     /tmp/cc3DoVoA.s:6579   .debug_str:0000000000000548 .LASF108
     /tmp/cc3DoVoA.s:6849   .debug_str:0000000000000e3c .LASF109
     /tmp/cc3DoVoA.s:6677   .debug_str:000000000000089e .LASF110
     /tmp/cc3DoVoA.s:6707   .debug_str:00000000000009a9 .LASF111
     /tmp/cc3DoVoA.s:6511   .debug_str:00000000000002bc .LASF112
     /tmp/cc3DoVoA.s:6665   .debug_str:000000000000083a .LASF113
     /tmp/cc3DoVoA.s:6471   .debug_str:0000000000000166 .LASF114
     /tmp/cc3DoVoA.s:6439   .debug_str:0000000000000087 .LASF115
     /tmp/cc3DoVoA.s:6827   .debug_str:0000000000000d9f .LASF117
     /tmp/cc3DoVoA.s:6459   .debug_str:0000000000000114 .LASF118
     /tmp/cc3DoVoA.s:6451   .debug_str:00000000000000ca .LASF119
     /tmp/cc3DoVoA.s:6607   .debug_str:0000000000000614 .LASF120
     /tmp/cc3DoVoA.s:6735   .debug_str:0000000000000a4f .LASF121
     /tmp/cc3DoVoA.s:6727   .debug_str:0000000000000a2b .LASF122
     /tmp/cc3DoVoA.s:6583   .debug_str:000000000000057d .LASF123
     /tmp/cc3DoVoA.s:6737   .debug_str:0000000000000a57 .LASF124
     /tmp/cc3DoVoA.s:6647   .debug_str:0000000000000769 .LASF125
     /tmp/cc3DoVoA.s:6445   .debug_str:00000000000000a8 .LASF126
GAS LISTING /tmp/cc3DoVoA.s 			page 58


     /tmp/cc3DoVoA.s:6791   .debug_str:0000000000000c71 .LASF127
     /tmp/cc3DoVoA.s:6593   .debug_str:00000000000005b0 .LASF128
     /tmp/cc3DoVoA.s:6489   .debug_str:00000000000001fb .LASF129
     /tmp/cc3DoVoA.s:6721   .debug_str:0000000000000a01 .LASF130
     /tmp/cc3DoVoA.s:6699   .debug_str:0000000000000958 .LASF131
     /tmp/cc3DoVoA.s:6635   .debug_str:0000000000000709 .LASF133
     /tmp/cc3DoVoA.s:6591   .debug_str:00000000000005aa .LASF134
     /tmp/cc3DoVoA.s:6421   .debug_str:0000000000000011 .LASF135
     /tmp/cc3DoVoA.s:6829   .debug_str:0000000000000da6 .LASF136
     /tmp/cc3DoVoA.s:6653   .debug_str:00000000000007c9 .LASF137
     /tmp/cc3DoVoA.s:6605   .debug_str:000000000000060b .LASF138
     /tmp/cc3DoVoA.s:6755   .debug_str:0000000000000b77 .LASF139
     /tmp/cc3DoVoA.s:6747   .debug_str:0000000000000a95 .LASF215
     /tmp/cc3DoVoA.s:6553   .debug_str:0000000000000409 .LASF140
     /tmp/cc3DoVoA.s:6563   .debug_str:0000000000000466 .LASF141
     /tmp/cc3DoVoA.s:6475   .debug_str:000000000000018d .LASF142
     /tmp/cc3DoVoA.s:6765   .debug_str:0000000000000bca .LASF143
     /tmp/cc3DoVoA.s:6675   .debug_str:000000000000088e .LASF144
     /tmp/cc3DoVoA.s:6455   .debug_str:00000000000000e1 .LASF145
     /tmp/cc3DoVoA.s:6823   .debug_str:0000000000000d7d .LASF146
     /tmp/cc3DoVoA.s:6725   .debug_str:0000000000000a1a .LASF147
     /tmp/cc3DoVoA.s:6711   .debug_str:00000000000009c5 .LASF148
     /tmp/cc3DoVoA.s:6419   .debug_str:0000000000000000 .LASF149
     /tmp/cc3DoVoA.s:6531   .debug_str:0000000000000364 .LASF150
     /tmp/cc3DoVoA.s:6427   .debug_str:0000000000000042 .LASF151
     /tmp/cc3DoVoA.s:6833   .debug_str:0000000000000dc0 .LASF152
     /tmp/cc3DoVoA.s:6767   .debug_str:0000000000000be6 .LASF153
     /tmp/cc3DoVoA.s:6761   .debug_str:0000000000000bb7 .LASF154
     /tmp/cc3DoVoA.s:6733   .debug_str:0000000000000a46 .LASF155
     /tmp/cc3DoVoA.s:6809   .debug_str:0000000000000cfa .LASF156
     /tmp/cc3DoVoA.s:6453   .debug_str:00000000000000d3 .LASF158
     /tmp/cc3DoVoA.s:6667   .debug_str:0000000000000843 .LASF160
     /tmp/cc3DoVoA.s:6481   .debug_str:00000000000001b8 .LASF161
     /tmp/cc3DoVoA.s:6565   .debug_str:000000000000047a .LASF162
     /tmp/cc3DoVoA.s:6491   .debug_str:0000000000000218 .LASF163
     /tmp/cc3DoVoA.s:6483   .debug_str:00000000000001c6 .LASF164
     /tmp/cc3DoVoA.s:6705   .debug_str:0000000000000998 .LASF165
     /tmp/cc3DoVoA.s:6753   .debug_str:0000000000000b6e .LASF166
     /tmp/cc3DoVoA.s:6795   .debug_str:0000000000000caf .LASF167
     /tmp/cc3DoVoA.s:6843   .debug_str:0000000000000e1d .LASF168
     /tmp/cc3DoVoA.s:6501   .debug_str:0000000000000264 .LASF169
     /tmp/cc3DoVoA.s:6515   .debug_str:00000000000002e2 .LASF170
     /tmp/cc3DoVoA.s:6527   .debug_str:0000000000000337 .LASF171
     /tmp/cc3DoVoA.s:6493   .debug_str:0000000000000221 .LASF172
     /tmp/cc3DoVoA.s:6771   .debug_str:0000000000000c03 .LASF173
     /tmp/cc3DoVoA.s:6729   .debug_str:0000000000000a34 .LASF174
     /tmp/cc3DoVoA.s:6559   .debug_str:000000000000043b .LASF175
     /tmp/cc3DoVoA.s:6539   .debug_str:00000000000003ad .LASF176
     /tmp/cc3DoVoA.s:6529   .debug_str:000000000000034b .LASF177
     /tmp/cc3DoVoA.s:6609   .debug_str:000000000000061c .LASF178
     /tmp/cc3DoVoA.s:6597   .debug_str:00000000000005c5 .LASF179
     /tmp/cc3DoVoA.s:6687   .debug_str:00000000000008e8 .LASF180
     /tmp/cc3DoVoA.s:6739   .debug_str:0000000000000a62 .LASF181
     /tmp/cc3DoVoA.s:6651   .debug_str:00000000000007c1 .LASF182
     /tmp/cc3DoVoA.s:6521   .debug_str:0000000000000307 .LASF183
     /tmp/cc3DoVoA.s:6601   .debug_str:00000000000005e1 .LASF184
     /tmp/cc3DoVoA.s:6821   .debug_str:0000000000000d61 .LASF185
GAS LISTING /tmp/cc3DoVoA.s 			page 59


     /tmp/cc3DoVoA.s:6611   .debug_str:0000000000000630 .LASF186
     /tmp/cc3DoVoA.s:6619   .debug_str:000000000000069f .LASF187
     /tmp/cc3DoVoA.s:6547   .debug_str:00000000000003ea .LASF188
     /tmp/cc3DoVoA.s:6441   .debug_str:000000000000008f .LASF189
     /tmp/cc3DoVoA.s:6449   .debug_str:00000000000000b9 .LASF190
     /tmp/cc3DoVoA.s:6603   .debug_str:00000000000005ea .LASF191
     /tmp/cc3DoVoA.s:6759   .debug_str:0000000000000ba3 .LASF192
     /tmp/cc3DoVoA.s:6627   .debug_str:00000000000006c5 .LASF193
     /tmp/cc3DoVoA.s:6745   .debug_str:0000000000000a84 .LASF194
     /tmp/cc3DoVoA.s:6741   .debug_str:0000000000000a77 .LASF195
     /tmp/cc3DoVoA.s:6513   .debug_str:00000000000002dd .LASF197
     /tmp/cc3DoVoA.s:6447   .debug_str:00000000000000b4 .LASF196
     /tmp/cc3DoVoA.s:6505   .debug_str:0000000000000275 .LASF206
     /tmp/cc3DoVoA.s:46     .text:0000000000000020 .LFB50
     /tmp/cc3DoVoA.s:1649   .text:0000000000000484 .LFE50
     /tmp/cc3DoVoA.s:6715   .debug_str:00000000000009ee .LASF198
     /tmp/cc3DoVoA.s:5743   .debug_loc:0000000000000000 .LLST0
     /tmp/cc3DoVoA.s:6423   .debug_str:0000000000000025 .LASF199
     /tmp/cc3DoVoA.s:5758   .debug_loc:0000000000000049 .LLST1
     /tmp/cc3DoVoA.s:6773   .debug_str:0000000000000c1a .LASF200
     /tmp/cc3DoVoA.s:5813   .debug_loc:0000000000000150 .LLST2
     /tmp/cc3DoVoA.s:416    .text:0000000000000120 .LBB164
     /tmp/cc3DoVoA.s:561    .text:0000000000000188 .LBE164
     /tmp/cc3DoVoA.s:6805   .debug_str:0000000000000ceb .LASF201
     /tmp/cc3DoVoA.s:5824   .debug_loc:0000000000000186 .LLST5
     /tmp/cc3DoVoA.s:6533   .debug_str:000000000000037f .LASF202
     /tmp/cc3DoVoA.s:5831   .debug_loc:00000000000001a9 .LLST6
     /tmp/cc3DoVoA.s:5838   .debug_loc:00000000000001cc .LLST7
     /tmp/cc3DoVoA.s:6775   .debug_str:0000000000000c1f .LASF203
     /tmp/cc3DoVoA.s:5845   .debug_loc:00000000000001ef .LLST8
     /tmp/cc3DoVoA.s:6777   .debug_str:0000000000000c24 .LASF204
     /tmp/cc3DoVoA.s:5852   .debug_loc:0000000000000212 .LLST9
     /tmp/cc3DoVoA.s:6779   .debug_str:0000000000000c29 .LASF205
     /tmp/cc3DoVoA.s:5859   .debug_loc:0000000000000235 .LLST10
     /tmp/cc3DoVoA.s:5866   .debug_loc:0000000000000258 .LLST11
     /tmp/cc3DoVoA.s:5873   .debug_loc:000000000000027b .LLST12
     /tmp/cc3DoVoA.s:418    .text:0000000000000120 .LBB165
     /tmp/cc3DoVoA.s:433    .text:000000000000012c .LBE165
     /tmp/cc3DoVoA.s:438    .text:0000000000000130 .LBB167
     /tmp/cc3DoVoA.s:454    .text:000000000000013c .LBE167
     /tmp/cc3DoVoA.s:528    .text:0000000000000174 .LBB169
     /tmp/cc3DoVoA.s:539    .text:0000000000000178 .LBE169
     /tmp/cc3DoVoA.s:5880   .debug_loc:000000000000029e .LLST13
     /tmp/cc3DoVoA.s:541    .text:0000000000000178 .LBB171
     /tmp/cc3DoVoA.s:555    .text:0000000000000180 .LBE171
     /tmp/cc3DoVoA.s:5887   .debug_loc:00000000000002c1 .LLST14
     /tmp/cc3DoVoA.s:508    .text:0000000000000164 .LVL18
     /tmp/cc3DoVoA.s:564    .text:0000000000000188 .LBB339
     /tmp/cc3DoVoA.s:655    .text:00000000000001c4 .LBE339
     /tmp/cc3DoVoA.s:5894   .debug_loc:00000000000002e4 .LLST76
     /tmp/cc3DoVoA.s:5901   .debug_loc:0000000000000307 .LLST77
     /tmp/cc3DoVoA.s:5908   .debug_loc:000000000000032a .LLST78
     /tmp/cc3DoVoA.s:566    .text:0000000000000188 .LBB340
     /tmp/cc3DoVoA.s:582    .text:0000000000000194 .LBE340
     /tmp/cc3DoVoA.s:587    .text:0000000000000198 .LBB342
     /tmp/cc3DoVoA.s:603    .text:00000000000001a4 .LBE342
     /tmp/cc3DoVoA.s:627    .text:00000000000001b8 .LBB344
GAS LISTING /tmp/cc3DoVoA.s 			page 60


     /tmp/cc3DoVoA.s:638    .text:00000000000001bc .LBE344
     /tmp/cc3DoVoA.s:5915   .debug_loc:000000000000034d .LLST79
     /tmp/cc3DoVoA.s:640    .text:00000000000001bc .LBB346
     /tmp/cc3DoVoA.s:654    .text:00000000000001c4 .LBE346
     /tmp/cc3DoVoA.s:5922   .debug_loc:0000000000000370 .LLST80
     /tmp/cc3DoVoA.s:617    .text:00000000000001b4 .LVL29
     /tmp/cc3DoVoA.s:657    .text:00000000000001c4 .LBB320
     /tmp/cc3DoVoA.s:746    .text:00000000000001fc .LBE320
     /tmp/cc3DoVoA.s:5929   .debug_loc:0000000000000393 .LLST71
     /tmp/cc3DoVoA.s:5936   .debug_loc:00000000000003b6 .LLST72
     /tmp/cc3DoVoA.s:5943   .debug_loc:00000000000003d9 .LLST73
     /tmp/cc3DoVoA.s:659    .text:00000000000001c4 .LBB321
     /tmp/cc3DoVoA.s:675    .text:00000000000001d0 .LBE321
     /tmp/cc3DoVoA.s:680    .text:00000000000001d4 .LBB323
     /tmp/cc3DoVoA.s:696    .text:00000000000001e0 .LBE323
     /tmp/cc3DoVoA.s:718    .text:00000000000001f0 .LBB325
     /tmp/cc3DoVoA.s:729    .text:00000000000001f4 .LBE325
     /tmp/cc3DoVoA.s:5950   .debug_loc:00000000000003fc .LLST74
     /tmp/cc3DoVoA.s:731    .text:00000000000001f4 .LBB327
     /tmp/cc3DoVoA.s:745    .text:00000000000001fc .LBE327
     /tmp/cc3DoVoA.s:5957   .debug_loc:000000000000041f .LLST75
     /tmp/cc3DoVoA.s:708    .text:00000000000001ec .LVL37
     /tmp/cc3DoVoA.s:748    .text:00000000000001fc .LBB302
     /tmp/cc3DoVoA.s:828    .text:0000000000000240 .LBE302
     /tmp/cc3DoVoA.s:5964   .debug_loc:0000000000000442 .LLST67
     /tmp/cc3DoVoA.s:5971   .debug_loc:0000000000000465 .LLST68
     /tmp/cc3DoVoA.s:750    .text:00000000000001fc .LBB303
     /tmp/cc3DoVoA.s:766    .text:0000000000000208 .LBE303
     /tmp/cc3DoVoA.s:771    .text:000000000000020c .LBB305
     /tmp/cc3DoVoA.s:787    .text:0000000000000218 .LBE305
     /tmp/cc3DoVoA.s:800    .text:0000000000000234 .LBB307
     /tmp/cc3DoVoA.s:811    .text:0000000000000238 .LBE307
     /tmp/cc3DoVoA.s:5978   .debug_loc:0000000000000488 .LLST69
     /tmp/cc3DoVoA.s:813    .text:0000000000000238 .LBB309
     /tmp/cc3DoVoA.s:827    .text:0000000000000240 .LBE309
     /tmp/cc3DoVoA.s:5985   .debug_loc:00000000000004ab .LLST70
     /tmp/cc3DoVoA.s:798    .text:0000000000000234 .LVL44
     /tmp/cc3DoVoA.s:830    .text:0000000000000240 .LBB285
     /tmp/cc3DoVoA.s:903    .text:0000000000000270 .LBE285
     /tmp/cc3DoVoA.s:5992   .debug_loc:00000000000004ce .LLST63
     /tmp/cc3DoVoA.s:5999   .debug_loc:00000000000004f1 .LLST64
     /tmp/cc3DoVoA.s:832    .text:0000000000000240 .LBB286
     /tmp/cc3DoVoA.s:848    .text:000000000000024c .LBE286
     /tmp/cc3DoVoA.s:853    .text:0000000000000250 .LBB288
     /tmp/cc3DoVoA.s:869    .text:000000000000025c .LBE288
     /tmp/cc3DoVoA.s:875    .text:0000000000000264 .LBB290
     /tmp/cc3DoVoA.s:886    .text:0000000000000268 .LBE290
     /tmp/cc3DoVoA.s:6006   .debug_loc:0000000000000514 .LLST65
     /tmp/cc3DoVoA.s:888    .text:0000000000000268 .LBB292
     /tmp/cc3DoVoA.s:902    .text:0000000000000270 .LBE292
     /tmp/cc3DoVoA.s:6013   .debug_loc:0000000000000537 .LLST66
     /tmp/cc3DoVoA.s:873    .text:0000000000000264 .LVL50
     /tmp/cc3DoVoA.s:905    .text:0000000000000270 .LBB269
     /tmp/cc3DoVoA.s:982    .text:00000000000002ac .LBE269
     /tmp/cc3DoVoA.s:6020   .debug_loc:000000000000055a .LLST59
     /tmp/cc3DoVoA.s:6027   .debug_loc:000000000000057d .LLST60
     /tmp/cc3DoVoA.s:907    .text:0000000000000270 .LBB270
GAS LISTING /tmp/cc3DoVoA.s 			page 61


     /tmp/cc3DoVoA.s:923    .text:000000000000027c .LBE270
     /tmp/cc3DoVoA.s:928    .text:0000000000000280 .LBB272
     /tmp/cc3DoVoA.s:944    .text:000000000000028c .LBE272
     /tmp/cc3DoVoA.s:954    .text:00000000000002a0 .LBB274
     /tmp/cc3DoVoA.s:965    .text:00000000000002a4 .LBE274
     /tmp/cc3DoVoA.s:6034   .debug_loc:00000000000005a0 .LLST61
     /tmp/cc3DoVoA.s:967    .text:00000000000002a4 .LBB276
     /tmp/cc3DoVoA.s:981    .text:00000000000002ac .LBE276
     /tmp/cc3DoVoA.s:6041   .debug_loc:00000000000005c3 .LLST62
     /tmp/cc3DoVoA.s:952    .text:00000000000002a0 .LVL56
     /tmp/cc3DoVoA.s:984    .text:00000000000002ac .LBB250
     /tmp/cc3DoVoA.s:1125   .text:0000000000000314 .LBE250
     /tmp/cc3DoVoA.s:6048   .debug_loc:00000000000005e6 .LLST48
     /tmp/cc3DoVoA.s:6055   .debug_loc:0000000000000609 .LLST49
     /tmp/cc3DoVoA.s:6062   .debug_loc:000000000000062c .LLST50
     /tmp/cc3DoVoA.s:6069   .debug_loc:000000000000064f .LLST51
     /tmp/cc3DoVoA.s:6076   .debug_loc:0000000000000672 .LLST52
     /tmp/cc3DoVoA.s:6083   .debug_loc:0000000000000695 .LLST53
     /tmp/cc3DoVoA.s:986    .text:00000000000002ac .LBB251
     /tmp/cc3DoVoA.s:1002   .text:00000000000002b8 .LBE251
     /tmp/cc3DoVoA.s:1007   .text:00000000000002bc .LBB253
     /tmp/cc3DoVoA.s:1023   .text:00000000000002c8 .LBE253
     /tmp/cc3DoVoA.s:1055   .text:00000000000002e4 .LBB255
     /tmp/cc3DoVoA.s:1071   .text:00000000000002f0 .LBE255
     /tmp/cc3DoVoA.s:6100   .debug_loc:00000000000006e0 .LLST54
     /tmp/cc3DoVoA.s:6107   .debug_loc:0000000000000703 .LLST55
     /tmp/cc3DoVoA.s:1061   .text:00000000000002e8 .LBB257
     /tmp/cc3DoVoA.s:1069   .text:00000000000002f0 .LBE257
     /tmp/cc3DoVoA.s:6114   .debug_loc:0000000000000726 .LLST56
     /tmp/cc3DoVoA.s:1092   .text:0000000000000300 .LBB259
     /tmp/cc3DoVoA.s:1103   .text:0000000000000304 .LBE259
     /tmp/cc3DoVoA.s:6123   .debug_loc:000000000000074b .LLST57
     /tmp/cc3DoVoA.s:1105   .text:0000000000000304 .LBB261
     /tmp/cc3DoVoA.s:1119   .text:000000000000030c .LBE261
     /tmp/cc3DoVoA.s:6130   .debug_loc:000000000000076e .LLST58
     /tmp/cc3DoVoA.s:1054   .text:00000000000002e4 .LVL64
     /tmp/cc3DoVoA.s:1127   .text:0000000000000314 .LBB228
     /tmp/cc3DoVoA.s:1284   .text:00000000000003a8 .LBE228
     /tmp/cc3DoVoA.s:6137   .debug_loc:0000000000000791 .LLST37
     /tmp/cc3DoVoA.s:6144   .debug_loc:00000000000007b4 .LLST38
     /tmp/cc3DoVoA.s:6151   .debug_loc:00000000000007d7 .LLST39
     /tmp/cc3DoVoA.s:6403   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3DoVoA.s:6158   .debug_loc:00000000000007fa .LLST41
     /tmp/cc3DoVoA.s:1185   .text:000000000000033c .LBB234
     /tmp/cc3DoVoA.s:6165   .debug_loc:000000000000081d .LLST42
     /tmp/cc3DoVoA.s:6180   .debug_loc:0000000000000857 .LLST43
     /tmp/cc3DoVoA.s:6191   .debug_loc:000000000000088d .LLST44
     /tmp/cc3DoVoA.s:1195   .text:000000000000034c .LVL78
     /tmp/cc3DoVoA.s:1212   .text:000000000000036c .LVL79
     /tmp/cc3DoVoA.s:1129   .text:0000000000000314 .LBB229
     /tmp/cc3DoVoA.s:1144   .text:0000000000000320 .LBE229
     /tmp/cc3DoVoA.s:1149   .text:0000000000000324 .LBB231
     /tmp/cc3DoVoA.s:1165   .text:0000000000000330 .LBE231
     /tmp/cc3DoVoA.s:1217   .text:000000000000036c .LBB238
     /tmp/cc3DoVoA.s:1227   .text:0000000000000378 .LBE238
     /tmp/cc3DoVoA.s:6198   .debug_loc:00000000000008b0 .LLST45
     /tmp/cc3DoVoA.s:1256   .text:000000000000039c .LBB241
GAS LISTING /tmp/cc3DoVoA.s 			page 62


     /tmp/cc3DoVoA.s:1267   .text:00000000000003a0 .LBE241
     /tmp/cc3DoVoA.s:6207   .debug_loc:00000000000008d5 .LLST46
     /tmp/cc3DoVoA.s:1269   .text:00000000000003a0 .LBB243
     /tmp/cc3DoVoA.s:1283   .text:00000000000003a8 .LBE243
     /tmp/cc3DoVoA.s:6214   .debug_loc:00000000000008f8 .LLST47
     /tmp/cc3DoVoA.s:1253   .text:000000000000039c .LVL83
     /tmp/cc3DoVoA.s:1286   .text:00000000000003a8 .LBB215
     /tmp/cc3DoVoA.s:1381   .text:00000000000003e4 .LBE215
     /tmp/cc3DoVoA.s:6221   .debug_loc:000000000000091b .LLST31
     /tmp/cc3DoVoA.s:6228   .debug_loc:000000000000093e .LLST32
     /tmp/cc3DoVoA.s:6235   .debug_loc:0000000000000961 .LLST33
     /tmp/cc3DoVoA.s:6242   .debug_loc:0000000000000984 .LLST34
     /tmp/cc3DoVoA.s:1288   .text:00000000000003a8 .LBB216
     /tmp/cc3DoVoA.s:1304   .text:00000000000003b4 .LBE216
     /tmp/cc3DoVoA.s:1309   .text:00000000000003b8 .LBB218
     /tmp/cc3DoVoA.s:1325   .text:00000000000003c4 .LBE218
     /tmp/cc3DoVoA.s:1353   .text:00000000000003d8 .LBB220
     /tmp/cc3DoVoA.s:1364   .text:00000000000003dc .LBE220
     /tmp/cc3DoVoA.s:6249   .debug_loc:00000000000009a7 .LLST35
     /tmp/cc3DoVoA.s:1366   .text:00000000000003dc .LBB222
     /tmp/cc3DoVoA.s:1380   .text:00000000000003e4 .LBE222
     /tmp/cc3DoVoA.s:6256   .debug_loc:00000000000009ca .LLST36
     /tmp/cc3DoVoA.s:1343   .text:00000000000003d4 .LVL90
     /tmp/cc3DoVoA.s:1383   .text:00000000000003e4 .LBB203
     /tmp/cc3DoVoA.s:1480   .text:0000000000000424 .LBE203
     /tmp/cc3DoVoA.s:6263   .debug_loc:00000000000009ed .LLST25
     /tmp/cc3DoVoA.s:6270   .debug_loc:0000000000000a10 .LLST26
     /tmp/cc3DoVoA.s:6277   .debug_loc:0000000000000a33 .LLST27
     /tmp/cc3DoVoA.s:6284   .debug_loc:0000000000000a56 .LLST28
     /tmp/cc3DoVoA.s:1385   .text:00000000000003e4 .LBB204
     /tmp/cc3DoVoA.s:1401   .text:00000000000003f0 .LBE204
     /tmp/cc3DoVoA.s:1406   .text:00000000000003f4 .LBB206
     /tmp/cc3DoVoA.s:1422   .text:0000000000000400 .LBE206
     /tmp/cc3DoVoA.s:1452   .text:0000000000000418 .LBB208
     /tmp/cc3DoVoA.s:1463   .text:000000000000041c .LBE208
     /tmp/cc3DoVoA.s:6292   .debug_loc:0000000000000a7a .LLST29
     /tmp/cc3DoVoA.s:1465   .text:000000000000041c .LBB210
     /tmp/cc3DoVoA.s:1479   .text:0000000000000424 .LBE210
     /tmp/cc3DoVoA.s:6299   .debug_loc:0000000000000a9d .LLST30
     /tmp/cc3DoVoA.s:1440   .text:0000000000000410 .LVL98
     /tmp/cc3DoVoA.s:1482   .text:0000000000000424 .LBB193
     /tmp/cc3DoVoA.s:1563   .text:0000000000000458 .LBE193
     /tmp/cc3DoVoA.s:6306   .debug_loc:0000000000000ac0 .LLST20
     /tmp/cc3DoVoA.s:6313   .debug_loc:0000000000000ae3 .LLST21
     /tmp/cc3DoVoA.s:6320   .debug_loc:0000000000000b06 .LLST22
     /tmp/cc3DoVoA.s:1484   .text:0000000000000424 .LBB194
     /tmp/cc3DoVoA.s:1500   .text:0000000000000430 .LBE194
     /tmp/cc3DoVoA.s:1505   .text:0000000000000434 .LBB196
     /tmp/cc3DoVoA.s:1521   .text:0000000000000440 .LBE196
     /tmp/cc3DoVoA.s:1535   .text:000000000000044c .LBB198
     /tmp/cc3DoVoA.s:1546   .text:0000000000000450 .LBE198
     /tmp/cc3DoVoA.s:6327   .debug_loc:0000000000000b29 .LLST23
     /tmp/cc3DoVoA.s:1548   .text:0000000000000450 .LBB200
     /tmp/cc3DoVoA.s:1562   .text:0000000000000458 .LBE200
     /tmp/cc3DoVoA.s:6334   .debug_loc:0000000000000b4c .LLST24
     /tmp/cc3DoVoA.s:1525   .text:0000000000000448 .LVL105
     /tmp/cc3DoVoA.s:315    .text:00000000000000e4 .LBB184
GAS LISTING /tmp/cc3DoVoA.s 			page 63


     /tmp/cc3DoVoA.s:403    .text:0000000000000120 .LBE184
     /tmp/cc3DoVoA.s:6341   .debug_loc:0000000000000b6f .LLST15
     /tmp/cc3DoVoA.s:6348   .debug_loc:0000000000000b92 .LLST16
     /tmp/cc3DoVoA.s:6355   .debug_loc:0000000000000bb5 .LLST17
     /tmp/cc3DoVoA.s:317    .text:00000000000000e4 .LBB185
     /tmp/cc3DoVoA.s:333    .text:00000000000000f0 .LBE185
     /tmp/cc3DoVoA.s:338    .text:00000000000000f4 .LBB187
     /tmp/cc3DoVoA.s:354    .text:0000000000000100 .LBE187
     /tmp/cc3DoVoA.s:375    .text:0000000000000114 .LBB189
     /tmp/cc3DoVoA.s:386    .text:0000000000000118 .LBE189
     /tmp/cc3DoVoA.s:6362   .debug_loc:0000000000000bd8 .LLST18
     /tmp/cc3DoVoA.s:388    .text:0000000000000118 .LBB191
     /tmp/cc3DoVoA.s:402    .text:0000000000000120 .LBE191
     /tmp/cc3DoVoA.s:6369   .debug_loc:0000000000000bfb .LLST19
     /tmp/cc3DoVoA.s:373    .text:0000000000000114 .LVL9
     /tmp/cc3DoVoA.s:1575   .text:0000000000000458 .LBB154
     /tmp/cc3DoVoA.s:1643   .text:0000000000000480 .LBE154
     /tmp/cc3DoVoA.s:1577   .text:0000000000000458 .LBB155
     /tmp/cc3DoVoA.s:1593   .text:0000000000000464 .LBE155
     /tmp/cc3DoVoA.s:1598   .text:0000000000000468 .LBB157
     /tmp/cc3DoVoA.s:1613   .text:0000000000000474 .LBE157
     /tmp/cc3DoVoA.s:1618   .text:0000000000000478 .LBB159
     /tmp/cc3DoVoA.s:1629   .text:000000000000047c .LBE159
     /tmp/cc3DoVoA.s:6376   .debug_loc:0000000000000c1e .LLST3
     /tmp/cc3DoVoA.s:1631   .text:000000000000047c .LBB161
     /tmp/cc3DoVoA.s:1642   .text:0000000000000480 .LBE161
     /tmp/cc3DoVoA.s:6383   .debug_loc:0000000000000c41 .LLST4
     /tmp/cc3DoVoA.s:66     .text:0000000000000040 .LBB150
     /tmp/cc3DoVoA.s:82     .text:000000000000004c .LBE150
     /tmp/cc3DoVoA.s:10     .text:0000000000000000 .LFB49
     /tmp/cc3DoVoA.s:40     .text:0000000000000020 .LFE49
     /tmp/cc3DoVoA.s:6443   .debug_str:00000000000000a3 .LASF208
     /tmp/cc3DoVoA.s:6655   .debug_str:00000000000007dd .LASF207
     /tmp/cc3DoVoA.s:85     .text:0000000000000050 .LVL0
     /tmp/cc3DoVoA.s:106    .text:0000000000000064 .LVL2
     /tmp/cc3DoVoA.s:128    .text:0000000000000084 .LVL3
     /tmp/cc3DoVoA.s:135    .text:0000000000000088 .LVL4
     /tmp/cc3DoVoA.s:1559   .text:0000000000000458 .LVL108
     /tmp/cc3DoVoA.s:1586   .text:000000000000045c .LVL109
     /tmp/cc3DoVoA.s:94     .text:0000000000000054 .LVL1
     /tmp/cc3DoVoA.s:331    .text:00000000000000f0 .LVL5
     /tmp/cc3DoVoA.s:399    .text:0000000000000120 .LVL11
     /tmp/cc3DoVoA.s:580    .text:0000000000000194 .LVL24
     /tmp/cc3DoVoA.s:651    .text:00000000000001c4 .LVL32
     /tmp/cc3DoVoA.s:673    .text:00000000000001d0 .LVL33
     /tmp/cc3DoVoA.s:742    .text:00000000000001fc .LVL40
     /tmp/cc3DoVoA.s:764    .text:0000000000000208 .LVL41
     /tmp/cc3DoVoA.s:824    .text:0000000000000240 .LVL46
     /tmp/cc3DoVoA.s:846    .text:000000000000024c .LVL47
     /tmp/cc3DoVoA.s:899    .text:0000000000000270 .LVL52
     /tmp/cc3DoVoA.s:921    .text:000000000000027c .LVL53
     /tmp/cc3DoVoA.s:978    .text:00000000000002ac .LVL58
     /tmp/cc3DoVoA.s:1000   .text:00000000000002b8 .LVL59
     /tmp/cc3DoVoA.s:1123   .text:0000000000000314 .LVL72
     /tmp/cc3DoVoA.s:1178   .text:0000000000000338 .LVL75
     /tmp/cc3DoVoA.s:1280   .text:00000000000003a8 .LVL85
     /tmp/cc3DoVoA.s:1302   .text:00000000000003b4 .LVL86
GAS LISTING /tmp/cc3DoVoA.s 			page 64


     /tmp/cc3DoVoA.s:1377   .text:00000000000003e4 .LVL93
     /tmp/cc3DoVoA.s:1399   .text:00000000000003f0 .LVL94
     /tmp/cc3DoVoA.s:1476   .text:0000000000000424 .LVL101
     /tmp/cc3DoVoA.s:1498   .text:0000000000000430 .LVL102
     /tmp/cc3DoVoA.s:610    .text:00000000000001a8 .LVL27
     /tmp/cc3DoVoA.s:615    .text:00000000000001ac .LVL28
     /tmp/cc3DoVoA.s:703    .text:00000000000001e4 .LVL36
     /tmp/cc3DoVoA.s:436    .text:0000000000000130 .LVL12
     /tmp/cc3DoVoA.s:559    .text:0000000000000188 .LVL23
     /tmp/cc3DoVoA.s:452    .text:000000000000013c .LVL13
     /tmp/cc3DoVoA.s:485    .text:0000000000000150 .LVL14
     /tmp/cc3DoVoA.s:491    .text:0000000000000154 .LVL15
     /tmp/cc3DoVoA.s:497    .text:0000000000000158 .LVL16
     /tmp/cc3DoVoA.s:503    .text:000000000000015c .LVL17
     /tmp/cc3DoVoA.s:518    .text:0000000000000170 .LVL19
     /tmp/cc3DoVoA.s:552    .text:0000000000000180 .LVL22
     /tmp/cc3DoVoA.s:526    .text:0000000000000174 .LVL20
     /tmp/cc3DoVoA.s:536    .text:0000000000000178 .LVL21
     /tmp/cc3DoVoA.s:585    .text:0000000000000198 .LVL25
     /tmp/cc3DoVoA.s:601    .text:00000000000001a4 .LVL26
     /tmp/cc3DoVoA.s:625    .text:00000000000001b8 .LVL30
     /tmp/cc3DoVoA.s:635    .text:00000000000001bc .LVL31
     /tmp/cc3DoVoA.s:678    .text:00000000000001d4 .LVL34
     /tmp/cc3DoVoA.s:694    .text:00000000000001e0 .LVL35
     /tmp/cc3DoVoA.s:716    .text:00000000000001f0 .LVL38
     /tmp/cc3DoVoA.s:726    .text:00000000000001f4 .LVL39
     /tmp/cc3DoVoA.s:769    .text:000000000000020c .LVL42
     /tmp/cc3DoVoA.s:785    .text:0000000000000218 .LVL43
     /tmp/cc3DoVoA.s:808    .text:0000000000000238 .LVL45
     /tmp/cc3DoVoA.s:851    .text:0000000000000250 .LVL48
     /tmp/cc3DoVoA.s:867    .text:000000000000025c .LVL49
     /tmp/cc3DoVoA.s:883    .text:0000000000000268 .LVL51
     /tmp/cc3DoVoA.s:926    .text:0000000000000280 .LVL54
     /tmp/cc3DoVoA.s:942    .text:000000000000028c .LVL55
     /tmp/cc3DoVoA.s:962    .text:00000000000002a4 .LVL57
     /tmp/cc3DoVoA.s:1005   .text:00000000000002bc .LVL60
     /tmp/cc3DoVoA.s:1021   .text:00000000000002c8 .LVL61
     /tmp/cc3DoVoA.s:1042   .text:00000000000002d4 .LVL62
     /tmp/cc3DoVoA.s:1048   .text:00000000000002d8 .LVL63
     /tmp/cc3DoVoA.s:1067   .text:00000000000002f0 .LVL66
     /tmp/cc3DoVoA.s:1076   .text:00000000000002f4 .LVL67
     /tmp/cc3DoVoA.s:1082   .text:00000000000002fc .LVL68
     /tmp/cc3DoVoA.s:1116   .text:000000000000030c .LVL71
     /tmp/cc3DoVoA.s:1060   .text:00000000000002e8 .LVL65
     /tmp/cc3DoVoA.s:1090   .text:0000000000000300 .LVL69
     /tmp/cc3DoVoA.s:1100   .text:0000000000000304 .LVL70
     /tmp/cc3DoVoA.s:1147   .text:0000000000000324 .LVL73
     /tmp/cc3DoVoA.s:1163   .text:0000000000000330 .LVL74
     /tmp/cc3DoVoA.s:1182   .text:000000000000033c .LVL76
     /tmp/cc3DoVoA.s:1232   .text:000000000000037c .LVL81
     /tmp/cc3DoVoA.s:1242   .text:000000000000038c .LVL82
     /tmp/cc3DoVoA.s:1192   .text:0000000000000344 .LVL77
     /tmp/cc3DoVoA.s:1225   .text:0000000000000378 .LVL80
     /tmp/cc3DoVoA.s:1264   .text:00000000000003a0 .LVL84
     /tmp/cc3DoVoA.s:1307   .text:00000000000003b8 .LVL87
     /tmp/cc3DoVoA.s:1323   .text:00000000000003c4 .LVL88
     /tmp/cc3DoVoA.s:1338   .text:00000000000003cc .LVL89
GAS LISTING /tmp/cc3DoVoA.s 			page 65


     /tmp/cc3DoVoA.s:1351   .text:00000000000003d8 .LVL91
     /tmp/cc3DoVoA.s:1361   .text:00000000000003dc .LVL92
     /tmp/cc3DoVoA.s:1404   .text:00000000000003f4 .LVL95
     /tmp/cc3DoVoA.s:1420   .text:0000000000000400 .LVL96
     /tmp/cc3DoVoA.s:1435   .text:0000000000000408 .LVL97
     /tmp/cc3DoVoA.s:1450   .text:0000000000000418 .LVL99
     /tmp/cc3DoVoA.s:1460   .text:000000000000041c .LVL100
     /tmp/cc3DoVoA.s:1503   .text:0000000000000434 .LVL103
     /tmp/cc3DoVoA.s:1519   .text:0000000000000440 .LVL104
     /tmp/cc3DoVoA.s:1533   .text:000000000000044c .LVL106
     /tmp/cc3DoVoA.s:1543   .text:0000000000000450 .LVL107
     /tmp/cc3DoVoA.s:336    .text:00000000000000f4 .LVL6
     /tmp/cc3DoVoA.s:352    .text:0000000000000100 .LVL7
     /tmp/cc3DoVoA.s:367    .text:0000000000000108 .LVL8
     /tmp/cc3DoVoA.s:383    .text:0000000000000118 .LVL10
     /tmp/cc3DoVoA.s:1616   .text:0000000000000478 .LVL111
     /tmp/cc3DoVoA.s:1626   .text:000000000000047c .LVL112
     /tmp/cc3DoVoA.s:1639   .text:0000000000000480 .LVL113
     /tmp/cc3DoVoA.s:1659   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3DoVoA.s:1184   .text:000000000000033c .LBB233
     /tmp/cc3DoVoA.s:1214   .text:000000000000036c .LBE233
     /tmp/cc3DoVoA.s:1230   .text:000000000000037c .LBB240
     /tmp/cc3DoVoA.s:1246   .text:000000000000038c .LBE240
     /tmp/cc3DoVoA.s:1197   .text:000000000000034c .LBE234
     /tmp/cc3DoVoA.s:1233   .text:000000000000037c .LBB237
     /tmp/cc3DoVoA.s:1245   .text:000000000000038c .LBE237

UNDEFINED SYMBOLS
_ZN8KConsole4putcEc
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN8KConsole4getcEv
