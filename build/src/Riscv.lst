GAS LISTING /tmp/ccB4Vddo.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB51:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp **** //    __asm__ volatile ("csrw sepc, ra");
  17:src/Riscv.cpp **** //    mc_sstatus(SSTATUS_SPP);
  18:src/Riscv.cpp **** //    __asm__ volatile ("sret");  //exit privileged regime
  19:src/Riscv.cpp **** }
  20              		.loc 1 19 1 is_stmt 0
  21 000c 03348100 		ld	s0,8(sp)
  22              		.cfi_restore 8
  23              		.cfi_def_cfa 2, 16
  24 0010 13010101 		addi	sp,sp,16
  25              		.cfi_def_cfa_offset 0
  26 0014 67800000 		jr	ra
  27              		.cfi_endproc
  28              	.LFE51:
  30              		.align	2
  31              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  33              	_ZN5Riscv20handleSupervisorTrapEv:
  34              	.LFB52:
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** bool Riscv::privilege=false;
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  35              		.loc 1 23 35 is_stmt 1
  36              		.cfi_startproc
  37 0018 130101EF 		addi	sp,sp,-272
GAS LISTING /tmp/ccB4Vddo.s 			page 2


  38              		.cfi_def_cfa_offset 272
  39 001c 23341110 		sd	ra,264(sp)
  40 0020 23308110 		sd	s0,256(sp)
  41 0024 233C910E 		sd	s1,248(sp)
  42 0028 2338210F 		sd	s2,240(sp)
  43 002c 2334310F 		sd	s3,232(sp)
  44 0030 2330410F 		sd	s4,224(sp)
  45 0034 233C510D 		sd	s5,216(sp)
  46 0038 2338610D 		sd	s6,208(sp)
  47              		.cfi_offset 1, -8
  48              		.cfi_offset 8, -16
  49              		.cfi_offset 9, -24
  50              		.cfi_offset 18, -32
  51              		.cfi_offset 19, -40
  52              		.cfi_offset 20, -48
  53              		.cfi_offset 21, -56
  54              		.cfi_offset 22, -64
  55 003c 13040111 		addi	s0,sp,272
  56              		.cfi_def_cfa 8, 0
  24:src/Riscv.cpp ****     uint64 scause = r_scause();
  57              		.loc 1 24 5
  58              	.LBB168:
  59              	.LBB169:
  60              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/Riscv.hpp ****     static void popSppSpie();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     // read register scause
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     // write register scause
  24:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     // read register sepc
  27:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     // write register sepc
  30:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     // read register stvec
  33:src/../h/Riscv.hpp ****     static uint64 r_stvec();
GAS LISTING /tmp/ccB4Vddo.s 			page 3


  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     // write register stvec
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     // read register stval
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     // write register stval
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     // mask set register sip
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     // mask clear register sip
  55:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     // read register sip
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     // write register sip
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // mask set register sstatus
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // mask clear register sstatus
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     // read register sstatus
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     // write register sstatus
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     // supervisor trap
  83:src/../h/Riscv.hpp ****     static void supervisorTrap();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void TrapConsole();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void initKernel();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccB4Vddo.s 			page 4


  91:src/../h/Riscv.hpp ****     // supervisor trap handler
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** //    static void syscallHandler();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     uint64 volatile scause;
  61              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  62              		.loc 2 103 5
  63              		.loc 2 103 72 is_stmt 0
  64              	#APP
  65              	# 103 "src/../h/Riscv.hpp" 1
 104              	    return scause;
  66              		csrr a5, scause
  67              	# 0 "" 2
  68              	#NO_APP
  69 0044 2338F4EE 		sd	a5,-272(s0)
  70              		.loc 2 104 5 is_stmt 1
  71              		.loc 2 104 12 is_stmt 0
  72 0048 033704EF 		ld	a4,-272(s0)
  73              	.LVL0:
  74              	.LBE169:
  75              	.LBE168:
  25:src/Riscv.cpp ****     uint64 a0reg;
  76              		.loc 1 25 5 is_stmt 1
  26:src/Riscv.cpp ****     uint64 arg1;
  77              		.loc 1 26 5
  27:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  78              		.loc 1 27 5
  79              		.loc 1 27 49 is_stmt 0
  80              	#APP
  81              	# 27 "src/Riscv.cpp" 1
  28              	
  82              		mv s1, a0
  83              	# 0 "" 2
  84              	.LVL1:
  29:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  85              		.loc 1 29 5 is_stmt 1
  86              	#NO_APP
  87              	.LBB170:
  88 0050 9307F0FF 		li	a5,-1
  89 0054 9397F703 		slli	a5,a5,63
  90 0058 93871700 		addi	a5,a5,1
  91 005c 630EF702 		beq	a4,a5,.L28
  92              	.LBE170:
  30:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  31:src/Riscv.cpp ****     }
  32:src/Riscv.cpp ****     else if(!privilege){
  93              		.loc 1 32 10
  94              	.LBB433:
  95              	.LBB171:
GAS LISTING /tmp/ccB4Vddo.s 			page 5


  96              		.loc 1 32 13 is_stmt 0
  97 0060 97070000 		lbu	a5,.LANCHOR0
  97      83C70700 
  98              		.loc 1 32 10
  99 0068 63900706 		bnez	a5,.L6
 100              	.LBB172:
  33:src/Riscv.cpp ****         uint64 sepc = r_sepc();
 101              		.loc 1 33 9 is_stmt 1
 102              	.LBB173:
 103              	.LBB174:
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/Riscv.hpp **** {
 109:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/Riscv.hpp **** {
 114:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 104              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 105              		.loc 2 115 5
 106              		.loc 2 115 64 is_stmt 0
 107              	#APP
 108              	# 115 "src/../h/Riscv.hpp" 1
 116              	    return sepc;
 109              		csrr a5, sepc
 110              	# 0 "" 2
 111              	#NO_APP
 112 0070 233CF4EE 		sd	a5,-264(s0)
 113              		.loc 2 116 5 is_stmt 1
 114              		.loc 2 116 12 is_stmt 0
 115 0074 833784EF 		ld	a5,-264(s0)
 116              	.LVL2:
 117              	.LBE174:
 118              	.LBE173:
  34:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 119              		.loc 1 34 9 is_stmt 1
 120              	.LBB175:
 121              	.LBB176:
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/Riscv.hpp **** {
 121:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/ccB4Vddo.s 			page 6


 133:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/Riscv.hpp **** {
 138:src/../h/Riscv.hpp ****     uint64 volatile stval;
 139:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/Riscv.hpp ****     return stval;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/Riscv.hpp **** {
 155:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sip;
 161:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/Riscv.hpp ****     return sip;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** //mask set
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** //mask clear
 177:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 178:src/../h/Riscv.hpp **** {
 179:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 122              		.loc 2 179 5
 123              		.loc 2 179 68 is_stmt 0
 124 0078 13070010 		li	a4,256
 125              	.LVL3:
 126              	#APP
 127              	# 179 "src/../h/Riscv.hpp" 1
 180              	}
 128              		csrc sstatus, a4
 129              	# 0 "" 2
 130              	.LVL4:
GAS LISTING /tmp/ccB4Vddo.s 			page 7


 131              	#NO_APP
 132              	.LBE176:
 133              	.LBE175:
  35:src/Riscv.cpp ****         privilege=true;
 134              		.loc 1 35 9 is_stmt 1
 135              		.loc 1 35 18 is_stmt 0
 136 0080 13071000 		li	a4,1
 137 0084 97060000 		sb	a4,.LANCHOR0,a3
 137      2380E600 
  36:src/Riscv.cpp ****         w_sepc(sepc + 4);
 138              		.loc 1 36 9 is_stmt 1
 139              		.loc 1 36 15 is_stmt 0
 140 008c 93874700 		addi	a5,a5,4
 141              	.LVL5:
 142              	.LBB177:
 143              	.LBB178:
 121:src/../h/Riscv.hpp **** }
 144              		.loc 2 121 5 is_stmt 1
 121:src/../h/Riscv.hpp **** }
 145              		.loc 2 121 65 is_stmt 0
 146              	#APP
 147              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 148              		csrw sepc, a5
 149              	# 0 "" 2
 150              		.loc 2 122 1
 151              	#NO_APP
 152 0094 6F00C000 		j	.L3
 153              	.LVL6:
 154              	.L28:
 155              	.LBE178:
 156              	.LBE177:
 157              	.LBE172:
 158              	.LBE171:
  30:src/Riscv.cpp ****     }
 159              		.loc 1 30 9 is_stmt 1
 160              	.LBB416:
 161              	.LBB417:
 155:src/../h/Riscv.hpp **** }
 162              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 163              		.loc 2 155 64 is_stmt 0
 164 0098 93072000 		li	a5,2
 165              	#APP
 166              	# 155 "src/../h/Riscv.hpp" 1
 167              		csrc sip, a5
 168              	# 0 "" 2
 169              	.LVL7:
 170              	#NO_APP
 171              	.L3:
 172              	.LBE417:
 173              	.LBE416:
 174              	.LBE433:
  37:src/Riscv.cpp ****     }
  38:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
  39:src/Riscv.cpp ****         console_handler();
  40:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccB4Vddo.s 			page 8


  41:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
  42:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp ****         if(a0reg==0x11){
  46:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  47:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****             _thread::thread_t *arg1;
  51:src/Riscv.cpp ****             _thread::Body arg2;
  52:src/Riscv.cpp ****             uint64 arg3;
  53:src/Riscv.cpp **** 
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  57:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  58:src/Riscv.cpp **** 
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             uint64* stack =(uint64*) MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64)
  65:src/Riscv.cpp **** 
  66:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  67:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, stack);    //t je thread_t
  68:src/Riscv.cpp ****             *arg1=t;
  69:src/Riscv.cpp **** 
  70:src/Riscv.cpp ****             uint64 ret;
  71:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  72:src/Riscv.cpp ****             else ret =-1;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //return _thread* adress through a0
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp ****             //kmem_alloc
  84:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  85:src/Riscv.cpp **** 
  86:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  87:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  88:src/Riscv.cpp **** 
  89:src/Riscv.cpp ****             //write return value to a0 register
  90:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             w_sstatus(sstatus);
  93:src/Riscv.cpp ****             w_sepc(sepc);
  94:src/Riscv.cpp ****         }
  95:src/Riscv.cpp ****         else if(a0reg==0x02){
  96:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  97:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccB4Vddo.s 			page 9


  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 102:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 103:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 104:src/Riscv.cpp **** 
 105:src/Riscv.cpp ****             w_sstatus(sstatus);
 106:src/Riscv.cpp ****             w_sepc(sepc);
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****         else if(a0reg==0x12){
 110:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 111:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             _thread::running->finished=true;
 114:src/Riscv.cpp ****             _thread::dispatch();
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             w_sstatus(sstatus);
 117:src/Riscv.cpp ****             w_sepc(sepc);
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****         }
 121:src/Riscv.cpp ****         else if(a0reg == 0x13){
 122:src/Riscv.cpp ****             //thread dispatch
 123:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 124:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             _thread::dispatch();
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****             w_sstatus(sstatus);
 130:src/Riscv.cpp ****             w_sepc(sepc);
 131:src/Riscv.cpp ****         }
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         else if(a0reg==0x04){
 134:src/Riscv.cpp ****             //call from yield
 135:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 136:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 139:src/Riscv.cpp ****             _thread::dispatch();
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****             w_sstatus(sstatus);
 142:src/Riscv.cpp ****             w_sepc(sepc);
 143:src/Riscv.cpp ****         }
 144:src/Riscv.cpp ****         else if(a0reg==0x21){
 145:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 146:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 149:src/Riscv.cpp ****            uint64 arg2;
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 152:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
GAS LISTING /tmp/ccB4Vddo.s 			page 10


 155:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 158:src/Riscv.cpp ****             sem->opened=true;
 159:src/Riscv.cpp ****             *arg1=sem;
 160:src/Riscv.cpp **** 
 161:src/Riscv.cpp ****             uint64 ret=0;
 162:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 163:src/Riscv.cpp ****             else ret=-1;
 164:src/Riscv.cpp **** 
 165:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 166:src/Riscv.cpp **** 
 167:src/Riscv.cpp ****             w_sstatus(sstatus);
 168:src/Riscv.cpp ****             w_sepc(sepc);
 169:src/Riscv.cpp ****         }
 170:src/Riscv.cpp ****         else if(a0reg==0x22){
 171:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 172:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 182:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 183:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 184:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 185:src/Riscv.cpp ****                 t->setDeblocked();
 186:src/Riscv.cpp ****                 sem->val++;
 187:src/Riscv.cpp ****                 Scheduler::put(t);
 188:src/Riscv.cpp ****             }
 189:src/Riscv.cpp ****              sem->opened=false;
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****             delete sem;
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             w_sstatus(sstatus);
 194:src/Riscv.cpp ****             w_sepc(sepc);
 195:src/Riscv.cpp ****         }
 196:src/Riscv.cpp ****         else if(a0reg==0x23){
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             uint64 ret;
 207:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 208:src/Riscv.cpp **** 
 209:src/Riscv.cpp ****                  ret = arg1->wait();
 210:src/Riscv.cpp **** 
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/ccB4Vddo.s 			page 11


 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x24){
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 223:src/Riscv.cpp **** 
 224:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             uint64 ret;
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp ****                 arg1->signal();
 229:src/Riscv.cpp ****                 ret=0;
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 233:src/Riscv.cpp **** 
 234:src/Riscv.cpp ****             w_sstatus(sstatus);
 235:src/Riscv.cpp ****             w_sepc(sepc);
 236:src/Riscv.cpp ****         }
 237:src/Riscv.cpp ****         else if(a0reg==0x41){
 238:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 239:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp ****             //call method from kernel Console class
 242:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 243:src/Riscv.cpp ****             char c = __getc();
 244:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 245:src/Riscv.cpp **** 
 246:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 247:src/Riscv.cpp **** 
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****             w_sstatus(sstatus);
 250:src/Riscv.cpp ****             w_sepc(sepc);
 251:src/Riscv.cpp ****         }
 252:src/Riscv.cpp ****         else if(a0reg==0x42){
 253:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 254:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 255:src/Riscv.cpp **** 
 256:src/Riscv.cpp ****             char c;
 257:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 260:src/Riscv.cpp **** 
 261:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 262:src/Riscv.cpp ****             __putc(c);
 263:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****             w_sstatus(sstatus);
 266:src/Riscv.cpp ****             w_sepc(sepc);
 267:src/Riscv.cpp ****         }
 268:src/Riscv.cpp ****         else{
GAS LISTING /tmp/ccB4Vddo.s 			page 12


 269:src/Riscv.cpp ****             // unexpected trap cause
 270:src/Riscv.cpp ****         }
 271:src/Riscv.cpp **** 
 272:src/Riscv.cpp ****     }
 273:src/Riscv.cpp **** 
 274:src/Riscv.cpp **** }
 175              		.loc 1 274 1
 176 00a0 83308110 		ld	ra,264(sp)
 177              		.cfi_remember_state
 178              		.cfi_restore 1
 179 00a4 03340110 		ld	s0,256(sp)
 180              		.cfi_restore 8
 181              		.cfi_def_cfa 2, 272
 182 00a8 8334810F 		ld	s1,248(sp)
 183              		.cfi_restore 9
 184 00ac 0339010F 		ld	s2,240(sp)
 185              		.cfi_restore 18
 186 00b0 8339810E 		ld	s3,232(sp)
 187              		.cfi_restore 19
 188 00b4 033A010E 		ld	s4,224(sp)
 189              		.cfi_restore 20
 190 00b8 833A810D 		ld	s5,216(sp)
 191              		.cfi_restore 21
 192 00bc 033B010D 		ld	s6,208(sp)
 193              		.cfi_restore 22
 194 00c0 13010111 		addi	sp,sp,272
 195              		.cfi_def_cfa_offset 0
 196 00c4 67800000 		jr	ra
 197              	.LVL8:
 198              	.L6:
 199              		.cfi_restore_state
  38:src/Riscv.cpp ****         console_handler();
 200              		.loc 1 38 10 is_stmt 1
 201              	.LBB434:
 202              	.LBB418:
 203              	.LBB179:
 204 00c8 9307F0FF 		li	a5,-1
 205 00cc 9397F703 		slli	a5,a5,63
 206 00d0 93879700 		addi	a5,a5,9
 207 00d4 6302F70C 		beq	a4,a5,.L29
 208              	.LBE179:
 209              	.LBE418:
 210              	.LBE434:
  41:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 211              		.loc 1 41 10
 212              	.LBB435:
 213              	.LBB419:
 214              	.LBB402:
 215              	.LBB180:
  41:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 216              		.loc 1 41 45 is_stmt 0
 217 00d8 130787FF 		addi	a4,a4,-8
 218              	.LVL9:
  41:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
 219              		.loc 1 41 10
 220 00dc 93071000 		li	a5,1
 221 00e0 E3E0E7FC 		bgtu	a4,a5,.L3
GAS LISTING /tmp/ccB4Vddo.s 			page 13


 222              	.LBE180:
 223              	.LBE402:
 224              	.LBE419:
 225              	.LBE435:
  45:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 226              		.loc 1 45 9 is_stmt 1
 227              	.LBB436:
 228              	.LBB420:
 229              	.LBB403:
 230              	.LBB389:
 231              	.LBB181:
 232 00e4 93071001 		li	a5,17
 233 00e8 638EF40A 		beq	s1,a5,.L30
 234              	.LVL10:
 235              	.L8:
 236              	.LBE181:
 237              	.LBE389:
 238              	.LBE403:
 239              	.LBE420:
 240              	.LBE436:
  80:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 241              		.loc 1 80 9
 242              	.LBB437:
 243              	.LBB421:
 244              	.LBB404:
 245              	.LBB390:
 246              	.LBB191:
 247 00ec 93071000 		li	a5,1
 248 00f0 6386F412 		beq	s1,a5,.L31
 249              	.LBE191:
 250              	.LBE390:
 251              	.LBE404:
 252              	.LBE421:
 253              	.LBE437:
  95:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 254              		.loc 1 95 14
 255              	.LBB438:
 256              	.LBB422:
 257              	.LBB405:
 258              	.LBB391:
 259              	.LBB377:
 260              	.LBB192:
 261 00f4 93072000 		li	a5,2
 262 00f8 6382F416 		beq	s1,a5,.L32
 263              	.LBE192:
 264              	.LBE377:
 265              	.LBE391:
 266              	.LBE405:
 267              	.LBE422:
 268              	.LBE438:
 109:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 269              		.loc 1 109 14
 270              	.LBB439:
 271              	.LBB423:
 272              	.LBB406:
 273              	.LBB392:
 274              	.LBB378:
GAS LISTING /tmp/ccB4Vddo.s 			page 14


 275              	.LBB358:
 276              	.LBB193:
 277 00fc 93072001 		li	a5,18
 278 0100 638CF418 		beq	s1,a5,.L33
 279              	.LBE193:
 280              	.LBE358:
 281              	.LBE378:
 282              	.LBE392:
 283              	.LBE406:
 284              	.LBE423:
 285              	.LBE439:
 121:src/Riscv.cpp ****             //thread dispatch
 286              		.loc 1 121 14
 287              	.LBB440:
 288              	.LBB424:
 289              	.LBB407:
 290              	.LBB393:
 291              	.LBB379:
 292              	.LBB359:
 293              	.LBB340:
 294              	.LBB194:
 295 0104 93073001 		li	a5,19
 296 0108 638AF41C 		beq	s1,a5,.L34
 297              	.LBE194:
 298              	.LBE340:
 299              	.LBE359:
 300              	.LBE379:
 301              	.LBE393:
 302              	.LBE407:
 303              	.LBE424:
 304              	.LBE440:
 133:src/Riscv.cpp ****             //call from yield
 305              		.loc 1 133 14
 306              	.LBB441:
 307              	.LBB425:
 308              	.LBB408:
 309              	.LBB394:
 310              	.LBB380:
 311              	.LBB360:
 312              	.LBB341:
 313              	.LBB323:
 314              	.LBB195:
 315 010c 93074000 		li	a5,4
 316 0110 638EF41E 		beq	s1,a5,.L35
 317              	.LBE195:
 318              	.LBE323:
 319              	.LBE341:
 320              	.LBE360:
 321              	.LBE380:
 322              	.LBE394:
 323              	.LBE408:
 324              	.LBE425:
 325              	.LBE441:
 144:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 326              		.loc 1 144 14
 327              	.LBB442:
 328              	.LBB426:
GAS LISTING /tmp/ccB4Vddo.s 			page 15


 329              	.LBB409:
 330              	.LBB395:
 331              	.LBB381:
 332              	.LBB361:
 333              	.LBB342:
 334              	.LBB324:
 335              	.LBB307:
 336              	.LBB196:
 337 0114 93071002 		li	a5,33
 338 0118 6388F422 		beq	s1,a5,.L36
 339              	.LBE196:
 340              	.LBE307:
 341              	.LBE324:
 342              	.LBE342:
 343              	.LBE361:
 344              	.LBE381:
 345              	.LBE395:
 346              	.LBE409:
 347              	.LBE426:
 348              	.LBE442:
 170:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 349              		.loc 1 170 14
 350              	.LBB443:
 351              	.LBB427:
 352              	.LBB410:
 353              	.LBB396:
 354              	.LBB382:
 355              	.LBB362:
 356              	.LBB343:
 357              	.LBB325:
 358              	.LBB308:
 359              	.LBB292:
 360              	.LBB197:
 361 011c 93072002 		li	a5,34
 362 0120 638CF428 		beq	s1,a5,.L37
 363              	.LBE197:
 364              	.LBE292:
 365              	.LBE308:
 366              	.LBE325:
 367              	.LBE343:
 368              	.LBE362:
 369              	.LBE382:
 370              	.LBE396:
 371              	.LBE410:
 372              	.LBE427:
 373              	.LBE443:
 196:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 374              		.loc 1 196 14
 375              	.LBB444:
 376              	.LBB428:
 377              	.LBB411:
 378              	.LBB397:
 379              	.LBB383:
 380              	.LBB363:
 381              	.LBB344:
 382              	.LBB326:
 383              	.LBB309:
GAS LISTING /tmp/ccB4Vddo.s 			page 16


 384              	.LBB293:
 385              	.LBB274:
 386              	.LBB198:
 387 0124 93073002 		li	a5,35
 388 0128 6384F432 		beq	s1,a5,.L38
 389              	.LBE198:
 390              	.LBE274:
 391              	.LBE293:
 392              	.LBE309:
 393              	.LBE326:
 394              	.LBE344:
 395              	.LBE363:
 396              	.LBE383:
 397              	.LBE397:
 398              	.LBE411:
 399              	.LBE428:
 400              	.LBE444:
 216:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 401              		.loc 1 216 14
 402              	.LBB445:
 403              	.LBB429:
 404              	.LBB412:
 405              	.LBB398:
 406              	.LBB384:
 407              	.LBB364:
 408              	.LBB345:
 409              	.LBB327:
 410              	.LBB310:
 411              	.LBB294:
 412              	.LBB275:
 413              	.LBB251:
 414              	.LBB199:
 415 012c 93074002 		li	a5,36
 416 0130 638EF434 		beq	s1,a5,.L39
 417              	.LBE199:
 418              	.LBE251:
 419              	.LBE275:
 420              	.LBE294:
 421              	.LBE310:
 422              	.LBE327:
 423              	.LBE345:
 424              	.LBE364:
 425              	.LBE384:
 426              	.LBE398:
 427              	.LBE412:
 428              	.LBE429:
 429              	.LBE445:
 237:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 430              		.loc 1 237 14
 431              	.LBB446:
 432              	.LBB430:
 433              	.LBB413:
 434              	.LBB399:
 435              	.LBB385:
 436              	.LBB365:
 437              	.LBB346:
 438              	.LBB328:
GAS LISTING /tmp/ccB4Vddo.s 			page 17


 439              	.LBB311:
 440              	.LBB295:
 441              	.LBB276:
 442              	.LBB252:
 443              	.LBB239:
 444              	.LBB200:
 445 0134 93071004 		li	a5,65
 446 0138 638AF438 		beq	s1,a5,.L40
 447              	.LBE200:
 448              	.LBE239:
 449              	.LBE252:
 450              	.LBE276:
 451              	.LBE295:
 452              	.LBE311:
 453              	.LBE328:
 454              	.LBE346:
 455              	.LBE365:
 456              	.LBE385:
 457              	.LBE399:
 458              	.LBE413:
 459              	.LBE430:
 460              	.LBE446:
 252:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 461              		.loc 1 252 14
 462              	.LBB447:
 463              	.LBB431:
 464              	.LBB414:
 465              	.LBB400:
 466              	.LBB386:
 467              	.LBB366:
 468              	.LBB347:
 469              	.LBB329:
 470              	.LBB312:
 471              	.LBB296:
 472              	.LBB277:
 473              	.LBB253:
 474              	.LBB240:
 475              	.LBB228:
 476              	.LBB201:
 477 013c 93072004 		li	a5,66
 478 0140 E390F4F6 		bne	s1,a5,.L3
 479              	.LBB202:
 253:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 480              		.loc 1 253 13
 481              	.LBB203:
 482              	.LBB204:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 483              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 484              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 485              		.loc 2 115 64 is_stmt 0
 486              	#APP
 487              	# 115 "src/../h/Riscv.hpp" 1
 488              		csrr a5, sepc
 489              	# 0 "" 2
 490              	#NO_APP
GAS LISTING /tmp/ccB4Vddo.s 			page 18


 491 0148 233CF4FA 		sd	a5,-72(s0)
 116:src/../h/Riscv.hpp **** }
 492              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 493              		.loc 2 116 12 is_stmt 0
 494 014c 833484FB 		ld	s1,-72(s0)
 495              	.LVL11:
 496              	.LBE204:
 497              	.LBE203:
 253:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 498              		.loc 1 253 38
 499 0150 93844400 		addi	s1,s1,4
 500              	.LVL12:
 254:src/Riscv.cpp **** 
 501              		.loc 1 254 13 is_stmt 1
 502              	.LBB205:
 503              	.LBB206:
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 183:src/../h/Riscv.hpp **** {
 184:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 504              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 505              		.loc 2 185 5
 506              		.loc 2 185 76 is_stmt 0
 507              	#APP
 508              	# 185 "src/../h/Riscv.hpp" 1
 186              	    return sstatus;
 509              		csrr a5, sstatus
 510              	# 0 "" 2
 511              	#NO_APP
 512 0158 2338F4FA 		sd	a5,-80(s0)
 513              		.loc 2 186 5 is_stmt 1
 514              		.loc 2 186 12 is_stmt 0
 515 015c 033904FB 		ld	s2,-80(s0)
 516              	.LVL13:
 517              	.LBE206:
 518              	.LBE205:
 256:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 519              		.loc 1 256 13 is_stmt 1
 257:src/Riscv.cpp **** 
 520              		.loc 1 257 13
 257:src/Riscv.cpp **** 
 521              		.loc 1 257 48 is_stmt 0
 522              	#APP
 523              	# 257 "src/Riscv.cpp" 1
 259:src/Riscv.cpp **** 
 524              		ld a1, 11*8(fp)
 525              	# 0 "" 2
 526              		.loc 1 259 13 is_stmt 1
 259:src/Riscv.cpp **** 
 527              		.loc 1 259 53 is_stmt 0
 528              	# 259 "src/Riscv.cpp" 1
 529              		mv a0, a1
 530              	# 0 "" 2
 531              	#NO_APP
 532 0168 1375F50F 		andi	a0,a0,0xff
GAS LISTING /tmp/ccB4Vddo.s 			page 19


 533              	.LVL14:
 261:src/Riscv.cpp ****             __putc(c);
 534              		.loc 1 261 13 is_stmt 1
 261:src/Riscv.cpp ****             __putc(c);
 535              		.loc 1 261 27 is_stmt 0
 536 016c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 536      83B70700 
 537              	.LVL15:
 538              	.LBB207:
 539              	.LBB208:
 133:src/../h/Riscv.hpp **** }
 540              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 541              		.loc 2 133 69 is_stmt 0
 542              	#APP
 543              	# 133 "src/../h/Riscv.hpp" 1
 544              		csrw stvec, a5
 545              	# 0 "" 2
 546              	.LVL16:
 547              	#NO_APP
 548              	.LBE208:
 549              	.LBE207:
 262:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 550              		.loc 1 262 13 is_stmt 1
 262:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 551              		.loc 1 262 19 is_stmt 0
 552 0178 97000000 		call	__putc@plt
 552      E7800000 
 553              	.LVL17:
 263:src/Riscv.cpp **** 
 554              		.loc 1 263 13 is_stmt 1
 263:src/Riscv.cpp **** 
 555              		.loc 1 263 27 is_stmt 0
 556 0180 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 556      83B70700 
 557              	.LVL18:
 558              	.LBB209:
 559              	.LBB210:
 133:src/../h/Riscv.hpp **** }
 560              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 561              		.loc 2 133 69 is_stmt 0
 562              	#APP
 563              	# 133 "src/../h/Riscv.hpp" 1
 564              		csrw stvec, a5
 565              	# 0 "" 2
 566              	.LVL19:
 567              	#NO_APP
 568              	.LBE210:
 569              	.LBE209:
 265:src/Riscv.cpp ****             w_sepc(sepc);
 570              		.loc 1 265 13 is_stmt 1
 571              	.LBB211:
 572              	.LBB212:
 187:src/../h/Riscv.hpp **** }
 188:src/../h/Riscv.hpp **** 
 189:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
GAS LISTING /tmp/ccB4Vddo.s 			page 20


 190:src/../h/Riscv.hpp **** {
 191:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 573              		.loc 2 191 5
 574              		.loc 2 191 77 is_stmt 0
 575              	#APP
 576              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
 577              		csrw sstatus, s2
 578              	# 0 "" 2
 579              	.LVL20:
 580              	#NO_APP
 581              	.LBE212:
 582              	.LBE211:
 266:src/Riscv.cpp ****         }
 583              		.loc 1 266 13 is_stmt 1
 584              	.LBB213:
 585              	.LBB214:
 121:src/../h/Riscv.hpp **** }
 586              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 587              		.loc 2 121 65 is_stmt 0
 588              	#APP
 589              	# 121 "src/../h/Riscv.hpp" 1
 590              		csrw sepc, s1
 591              	# 0 "" 2
 592              	.LVL21:
 593              	#NO_APP
 594              	.LBE214:
 595              	.LBE213:
 596              	.LBE202:
 597              	.LBE201:
 598              	.LBE228:
 599              	.LBE240:
 600              	.LBE253:
 601              	.LBE277:
 602              	.LBE296:
 603              	.LBE312:
 604              	.LBE329:
 605              	.LBE347:
 606              	.LBE366:
 607              	.LBE386:
 608              	.LBE400:
 609              	.LBE414:
 610              	.LBE431:
 611              	.LBE447:
 612              		.loc 1 274 1
 613 0194 6FF0DFF0 		j	.L3
 614              	.LVL22:
 615              	.L29:
 616              	.LBB448:
 617              	.LBB432:
 618              	.LBB415:
  39:src/Riscv.cpp ****     }
 619              		.loc 1 39 9 is_stmt 1
  39:src/Riscv.cpp ****     }
 620              		.loc 1 39 24 is_stmt 0
 621 0198 97000000 		call	console_handler@plt
GAS LISTING /tmp/ccB4Vddo.s 			page 21


 621      E7800000 
 622              	.LVL23:
 623 01a0 6FF01FF0 		j	.L3
 624              	.LVL24:
 625              	.L30:
 626              	.LBB401:
 627              	.LBB387:
 628              	.LBB182:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 629              		.loc 1 46 13 is_stmt 1
 630              	.LBB183:
 631              	.LBB184:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 632              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 633              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 634              		.loc 2 115 64 is_stmt 0
 635              	#APP
 636              	# 115 "src/../h/Riscv.hpp" 1
 637              		csrr a5, sepc
 638              	# 0 "" 2
 639              	#NO_APP
 640 01a8 2334F4F0 		sd	a5,-248(s0)
 116:src/../h/Riscv.hpp **** }
 641              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 642              		.loc 2 116 12 is_stmt 0
 643 01ac 033984F0 		ld	s2,-248(s0)
 644              	.LBE184:
 645              	.LBE183:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 646              		.loc 1 46 38
 647 01b0 13094900 		addi	s2,s2,4
 648              	.LVL25:
  47:src/Riscv.cpp **** 
 649              		.loc 1 47 13 is_stmt 1
 650              	.LBB185:
 651              	.LBB186:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 652              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 653              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 654              		.loc 2 185 76 is_stmt 0
 655              	#APP
 656              	# 185 "src/../h/Riscv.hpp" 1
 657              		csrr a5, sstatus
 658              	# 0 "" 2
 659              	#NO_APP
 660 01b8 2330F4F0 		sd	a5,-256(s0)
 186:src/../h/Riscv.hpp **** }
 661              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 662              		.loc 2 186 12 is_stmt 0
 663 01bc 833904F0 		ld	s3,-256(s0)
 664              	.LVL26:
GAS LISTING /tmp/ccB4Vddo.s 			page 22


 665              	.LBE186:
 666              	.LBE185:
  50:src/Riscv.cpp ****             _thread::Body arg2;
 667              		.loc 1 50 13 is_stmt 1
  51:src/Riscv.cpp ****             uint64 arg3;
 668              		.loc 1 51 13
  52:src/Riscv.cpp **** 
 669              		.loc 1 52 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 670              		.loc 1 55 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 671              		.loc 1 55 48 is_stmt 0
 672              	#APP
 673              	# 55 "src/Riscv.cpp" 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 674              		ld a1, 11*8(fp)
 675              	# 0 "" 2
 676              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 677              		.loc 1 56 48 is_stmt 0
 678              	# 56 "src/Riscv.cpp" 1
  57:src/Riscv.cpp **** 
 679              		ld a2, 12*8(fp)
 680              	# 0 "" 2
 681              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp **** 
 682              		.loc 1 57 48 is_stmt 0
 683              	# 57 "src/Riscv.cpp" 1
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 684              		ld a3, 13*8(fp)
 685              	# 0 "" 2
 686              		.loc 1 60 13 is_stmt 1
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 687              		.loc 1 60 56 is_stmt 0
 688              	# 60 "src/Riscv.cpp" 1
 689              		mv s4, a1
 690              	# 0 "" 2
 691              	.LVL27:
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 692              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 693              		.loc 1 61 56 is_stmt 0
 694              	# 61 "src/Riscv.cpp" 1
 695              		mv s5, a2
 696              	# 0 "" 2
 697              	.LVL28:
  62:src/Riscv.cpp **** 
 698              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 699              		.loc 1 62 56 is_stmt 0
 700              	# 62 "src/Riscv.cpp" 1
 701              		mv s6, a3
 702              	# 0 "" 2
 703              	.LVL29:
  64:src/Riscv.cpp **** 
 704              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp **** 
GAS LISTING /tmp/ccB4Vddo.s 			page 23


 705              		.loc 1 64 65 is_stmt 0
 706              	#NO_APP
 707 01d8 37850000 		li	a0,32768
 708 01dc 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 708      E7800000 
 709              	.LVL30:
 710 01e4 13060500 		mv	a2,a0
 711              	.LVL31:
  67:src/Riscv.cpp ****             *arg1=t;
 712              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp ****             *arg1=t;
 713              		.loc 1 67 47 is_stmt 0
 714 01e8 93050B00 		mv	a1,s6
 715 01ec 13850A00 		mv	a0,s5
 716              	.LVL32:
 717 01f0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 717      E7800000 
 718              	.LVL33:
  68:src/Riscv.cpp **** 
 719              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp **** 
 720              		.loc 1 68 18 is_stmt 0
 721 01f8 2330AA00 		sd	a0,0(s4)
  70:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 722              		.loc 1 70 13 is_stmt 1
  71:src/Riscv.cpp ****             else ret =-1;
 723              		.loc 1 71 13
 724 01fc 630C0500 		beqz	a0,.L25
  71:src/Riscv.cpp ****             else ret =-1;
 725              		.loc 1 71 31 is_stmt 0
 726 0200 93070000 		li	a5,0
 727              	.L9:
 728              	.LVL34:
  75:src/Riscv.cpp **** 
 729              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 730              		.loc 1 75 56 is_stmt 0
 731              	#APP
 732              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 733              		mv a0, a5
 734              	# 0 "" 2
 735              		.loc 1 77 13 is_stmt 1
 736              	.LVL35:
 737              	#NO_APP
 738              	.LBB187:
 739              	.LBB188:
 191:src/../h/Riscv.hpp **** }
 740              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 741              		.loc 2 191 77 is_stmt 0
 742              	#APP
 743              	# 191 "src/../h/Riscv.hpp" 1
 744              		csrw sstatus, s3
 745              	# 0 "" 2
 746              	.LVL36:
 747              	#NO_APP
GAS LISTING /tmp/ccB4Vddo.s 			page 24


 748              	.LBE188:
 749              	.LBE187:
  78:src/Riscv.cpp ****         }
 750              		.loc 1 78 13 is_stmt 1
 751              	.LBB189:
 752              	.LBB190:
 121:src/../h/Riscv.hpp **** }
 753              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 754              		.loc 2 121 65 is_stmt 0
 755              	#APP
 756              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 757              		csrw sepc, s2
 758              	# 0 "" 2
 759              		.loc 2 122 1
 760              	#NO_APP
 761 0210 6FF0DFED 		j	.L8
 762              	.LVL37:
 763              	.L25:
 764              	.LBE190:
 765              	.LBE189:
  72:src/Riscv.cpp **** 
 766              		.loc 1 72 22
 767 0214 9307F0FF 		li	a5,-1
 768 0218 6FF0DFFE 		j	.L9
 769              	.LVL38:
 770              	.L31:
 771              	.LBE182:
 772              	.LBE387:
 773              	.LBB388:
 774              	.LBB367:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 775              		.loc 1 81 13 is_stmt 1
 776              	.LBB368:
 777              	.LBB369:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 778              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 779              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 780              		.loc 2 115 64 is_stmt 0
 781              	#APP
 782              	# 115 "src/../h/Riscv.hpp" 1
 783              		csrr a5, sepc
 784              	# 0 "" 2
 785              	#NO_APP
 786 0220 233CF4F0 		sd	a5,-232(s0)
 116:src/../h/Riscv.hpp **** }
 787              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 788              		.loc 2 116 12 is_stmt 0
 789 0224 833484F1 		ld	s1,-232(s0)
 790              	.LVL39:
 791              	.LBE369:
 792              	.LBE368:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccB4Vddo.s 			page 25


 793              		.loc 1 81 38
 794 0228 93844400 		addi	s1,s1,4
 795              	.LVL40:
  82:src/Riscv.cpp ****             //kmem_alloc
 796              		.loc 1 82 13 is_stmt 1
 797              	.LBB370:
 798              	.LBB371:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 799              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 800              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 801              		.loc 2 185 76 is_stmt 0
 802              	#APP
 803              	# 185 "src/../h/Riscv.hpp" 1
 804              		csrr a5, sstatus
 805              	# 0 "" 2
 806              	#NO_APP
 807 0230 2338F4F0 		sd	a5,-240(s0)
 186:src/../h/Riscv.hpp **** }
 808              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 809              		.loc 2 186 12 is_stmt 0
 810 0234 033904F1 		ld	s2,-240(s0)
 811              	.LVL41:
 812              	.LBE371:
 813              	.LBE370:
  84:src/Riscv.cpp **** 
 814              		.loc 1 84 13 is_stmt 1
  84:src/Riscv.cpp **** 
 815              		.loc 1 84 48 is_stmt 0
 816              	#APP
 817              	# 84 "src/Riscv.cpp" 1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 818              		ld a0, 11*8(fp)
 819              	# 0 "" 2
 820              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 821              		.loc 1 86 56 is_stmt 0
 822              	# 86 "src/Riscv.cpp" 1
 823              		mv a0, a0
 824              	# 0 "" 2
 825              	.LVL42:
  87:src/Riscv.cpp **** 
 826              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 827              		.loc 1 87 61 is_stmt 0
 828              	#NO_APP
 829 0240 13156500 		slli	a0,a0,6
 830              	.LVL43:
 831 0244 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 831      E7800000 
 832              	.LVL44:
  90:src/Riscv.cpp **** 
 833              		.loc 1 90 13 is_stmt 1
  90:src/Riscv.cpp **** 
 834              		.loc 1 90 56 is_stmt 0
GAS LISTING /tmp/ccB4Vddo.s 			page 26


 835              	#APP
 836              	# 90 "src/Riscv.cpp" 1
  92:src/Riscv.cpp ****             w_sepc(sepc);
 837              		mv a0, a0
 838              	# 0 "" 2
 839              		.loc 1 92 13 is_stmt 1
 840              	.LVL45:
 841              	#NO_APP
 842              	.LBB372:
 843              	.LBB373:
 191:src/../h/Riscv.hpp **** }
 844              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 845              		.loc 2 191 77 is_stmt 0
 846              	#APP
 847              	# 191 "src/../h/Riscv.hpp" 1
 848              		csrw sstatus, s2
 849              	# 0 "" 2
 850              	.LVL46:
 851              	#NO_APP
 852              	.LBE373:
 853              	.LBE372:
  93:src/Riscv.cpp ****         }
 854              		.loc 1 93 13 is_stmt 1
 855              	.LBB374:
 856              	.LBB375:
 121:src/../h/Riscv.hpp **** }
 857              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 858              		.loc 2 121 65 is_stmt 0
 859              	#APP
 860              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 861              		csrw sepc, s1
 862              	# 0 "" 2
 863              		.loc 2 122 1
 864              	#NO_APP
 865 0258 6FF09FE4 		j	.L3
 866              	.LVL47:
 867              	.L32:
 868              	.LBE375:
 869              	.LBE374:
 870              	.LBE367:
 871              	.LBB376:
 872              	.LBB348:
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 873              		.loc 1 96 13 is_stmt 1
 874              	.LBB349:
 875              	.LBB350:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 876              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 877              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 878              		.loc 2 115 64 is_stmt 0
 879              	#APP
 880              	# 115 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccB4Vddo.s 			page 27


 881              		csrr a5, sepc
 882              	# 0 "" 2
 883              	#NO_APP
 884 0260 2334F4F2 		sd	a5,-216(s0)
 116:src/../h/Riscv.hpp **** }
 885              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 886              		.loc 2 116 12 is_stmt 0
 887 0264 833484F2 		ld	s1,-216(s0)
 888              	.LVL48:
 889              	.LBE350:
 890              	.LBE349:
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 891              		.loc 1 96 38
 892 0268 93844400 		addi	s1,s1,4
 893              	.LVL49:
  97:src/Riscv.cpp **** 
 894              		.loc 1 97 13 is_stmt 1
 895              	.LBB351:
 896              	.LBB352:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 897              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 898              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 899              		.loc 2 185 76 is_stmt 0
 900              	#APP
 901              	# 185 "src/../h/Riscv.hpp" 1
 902              		csrr a5, sstatus
 903              	# 0 "" 2
 904              	#NO_APP
 905 0270 2330F4F2 		sd	a5,-224(s0)
 186:src/../h/Riscv.hpp **** }
 906              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 907              		.loc 2 186 12 is_stmt 0
 908 0274 033904F2 		ld	s2,-224(s0)
 909              	.LVL50:
 910              	.LBE352:
 911              	.LBE351:
  99:src/Riscv.cpp **** 
 912              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp **** 
 913              		.loc 1 99 48 is_stmt 0
 914              	#APP
 915              	# 99 "src/Riscv.cpp" 1
 101:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 916              		ld a0, 11*8(fp)
 917              	# 0 "" 2
 918              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 919              		.loc 1 101 56 is_stmt 0
 920              	# 101 "src/Riscv.cpp" 1
 921              		mv a0, a0
 922              	# 0 "" 2
 923              	.LVL51:
 102:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
GAS LISTING /tmp/ccB4Vddo.s 			page 28


 924              		.loc 1 102 13 is_stmt 1
 102:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 925              		.loc 1 102 49 is_stmt 0
 926              	#NO_APP
 927 0280 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 927      E7800000 
 928              	.LVL52:
 103:src/Riscv.cpp **** 
 929              		.loc 1 103 13 is_stmt 1
 103:src/Riscv.cpp **** 
 930              		.loc 1 103 56 is_stmt 0
 931              	#APP
 932              	# 103 "src/Riscv.cpp" 1
 105:src/Riscv.cpp ****             w_sepc(sepc);
 933              		mv a0, a0
 934              	# 0 "" 2
 935              		.loc 1 105 13 is_stmt 1
 936              	.LVL53:
 937              	#NO_APP
 938              	.LBB353:
 939              	.LBB354:
 191:src/../h/Riscv.hpp **** }
 940              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 941              		.loc 2 191 77 is_stmt 0
 942              	#APP
 943              	# 191 "src/../h/Riscv.hpp" 1
 944              		csrw sstatus, s2
 945              	# 0 "" 2
 946              	.LVL54:
 947              	#NO_APP
 948              	.LBE354:
 949              	.LBE353:
 106:src/Riscv.cpp ****         }
 950              		.loc 1 106 13 is_stmt 1
 951              	.LBB355:
 952              	.LBB356:
 121:src/../h/Riscv.hpp **** }
 953              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 954              		.loc 2 121 65 is_stmt 0
 955              	#APP
 956              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 957              		csrw sepc, s1
 958              	# 0 "" 2
 959              		.loc 2 122 1
 960              	#NO_APP
 961 0294 6FF0DFE0 		j	.L3
 962              	.LVL55:
 963              	.L33:
 964              	.LBE356:
 965              	.LBE355:
 966              	.LBE348:
 967              	.LBB357:
 968              	.LBB330:
 110:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccB4Vddo.s 			page 29


 969              		.loc 1 110 13 is_stmt 1
 970              	.LBB331:
 971              	.LBB332:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 972              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 973              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 974              		.loc 2 115 64 is_stmt 0
 975              	#APP
 976              	# 115 "src/../h/Riscv.hpp" 1
 977              		csrr a5, sepc
 978              	# 0 "" 2
 979              	#NO_APP
 980 029c 233CF4F2 		sd	a5,-200(s0)
 116:src/../h/Riscv.hpp **** }
 981              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 982              		.loc 2 116 12 is_stmt 0
 983 02a0 833484F3 		ld	s1,-200(s0)
 984              	.LVL56:
 985              	.LBE332:
 986              	.LBE331:
 110:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 987              		.loc 1 110 38
 988 02a4 93844400 		addi	s1,s1,4
 989              	.LVL57:
 111:src/Riscv.cpp **** 
 990              		.loc 1 111 13 is_stmt 1
 991              	.LBB333:
 992              	.LBB334:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 993              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 994              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 995              		.loc 2 185 76 is_stmt 0
 996              	#APP
 997              	# 185 "src/../h/Riscv.hpp" 1
 998              		csrr a5, sstatus
 999              	# 0 "" 2
 1000              	#NO_APP
 1001 02ac 2338F4F2 		sd	a5,-208(s0)
 186:src/../h/Riscv.hpp **** }
 1002              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1003              		.loc 2 186 12 is_stmt 0
 1004 02b0 033904F3 		ld	s2,-208(s0)
 1005              	.LVL58:
 1006              	.LBE334:
 1007              	.LBE333:
 113:src/Riscv.cpp ****             _thread::dispatch();
 1008              		.loc 1 113 13 is_stmt 1
 113:src/Riscv.cpp ****             _thread::dispatch();
 1009              		.loc 1 113 31 is_stmt 0
 1010 02b4 97070000 		la	a5,_ZN7_thread7runningE
 1010      83B70700 
GAS LISTING /tmp/ccB4Vddo.s 			page 30


 1011 02bc 83B70700 		ld	a5,0(a5)
 113:src/Riscv.cpp ****             _thread::dispatch();
 1012              		.loc 1 113 39
 1013 02c0 13071000 		li	a4,1
 1014 02c4 2384E702 		sb	a4,40(a5)
 114:src/Riscv.cpp **** 
 1015              		.loc 1 114 13 is_stmt 1
 114:src/Riscv.cpp **** 
 1016              		.loc 1 114 30 is_stmt 0
 1017 02c8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1017      E7800000 
 1018              	.LVL59:
 116:src/Riscv.cpp ****             w_sepc(sepc);
 1019              		.loc 1 116 13 is_stmt 1
 1020              	.LBB335:
 1021              	.LBB336:
 191:src/../h/Riscv.hpp **** }
 1022              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1023              		.loc 2 191 77 is_stmt 0
 1024              	#APP
 1025              	# 191 "src/../h/Riscv.hpp" 1
 1026              		csrw sstatus, s2
 1027              	# 0 "" 2
 1028              	.LVL60:
 1029              	#NO_APP
 1030              	.LBE336:
 1031              	.LBE335:
 117:src/Riscv.cpp **** 
 1032              		.loc 1 117 13 is_stmt 1
 1033              	.LBB337:
 1034              	.LBB338:
 121:src/../h/Riscv.hpp **** }
 1035              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1036              		.loc 2 121 65 is_stmt 0
 1037              	#APP
 1038              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1039              		csrw sepc, s1
 1040              	# 0 "" 2
 1041              		.loc 2 122 1
 1042              	#NO_APP
 1043 02d8 6FF09FDC 		j	.L3
 1044              	.LVL61:
 1045              	.L34:
 1046              	.LBE338:
 1047              	.LBE337:
 1048              	.LBE330:
 1049              	.LBB339:
 1050              	.LBB313:
 123:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1051              		.loc 1 123 13 is_stmt 1
 1052              	.LBB314:
 1053              	.LBB315:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1054              		.loc 2 114 5
GAS LISTING /tmp/ccB4Vddo.s 			page 31


 115:src/../h/Riscv.hpp ****     return sepc;
 1055              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1056              		.loc 2 115 64 is_stmt 0
 1057              	#APP
 1058              	# 115 "src/../h/Riscv.hpp" 1
 1059              		csrr a5, sepc
 1060              	# 0 "" 2
 1061              	#NO_APP
 1062 02e0 2334F4F4 		sd	a5,-184(s0)
 116:src/../h/Riscv.hpp **** }
 1063              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1064              		.loc 2 116 12 is_stmt 0
 1065 02e4 833484F4 		ld	s1,-184(s0)
 1066              	.LVL62:
 1067              	.LBE315:
 1068              	.LBE314:
 123:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1069              		.loc 1 123 38
 1070 02e8 93844400 		addi	s1,s1,4
 1071              	.LVL63:
 124:src/Riscv.cpp **** 
 1072              		.loc 1 124 13 is_stmt 1
 1073              	.LBB316:
 1074              	.LBB317:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1075              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1076              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1077              		.loc 2 185 76 is_stmt 0
 1078              	#APP
 1079              	# 185 "src/../h/Riscv.hpp" 1
 1080              		csrr a5, sstatus
 1081              	# 0 "" 2
 1082              	#NO_APP
 1083 02f0 2330F4F4 		sd	a5,-192(s0)
 186:src/../h/Riscv.hpp **** }
 1084              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1085              		.loc 2 186 12 is_stmt 0
 1086 02f4 033904F4 		ld	s2,-192(s0)
 1087              	.LVL64:
 1088              	.LBE317:
 1089              	.LBE316:
 127:src/Riscv.cpp **** 
 1090              		.loc 1 127 13 is_stmt 1
 127:src/Riscv.cpp **** 
 1091              		.loc 1 127 30 is_stmt 0
 1092 02f8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1092      E7800000 
 1093              	.LVL65:
 129:src/Riscv.cpp ****             w_sepc(sepc);
 1094              		.loc 1 129 13 is_stmt 1
 1095              	.LBB318:
 1096              	.LBB319:
GAS LISTING /tmp/ccB4Vddo.s 			page 32


 191:src/../h/Riscv.hpp **** }
 1097              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1098              		.loc 2 191 77 is_stmt 0
 1099              	#APP
 1100              	# 191 "src/../h/Riscv.hpp" 1
 1101              		csrw sstatus, s2
 1102              	# 0 "" 2
 1103              	.LVL66:
 1104              	#NO_APP
 1105              	.LBE319:
 1106              	.LBE318:
 130:src/Riscv.cpp ****         }
 1107              		.loc 1 130 13 is_stmt 1
 1108              	.LBB320:
 1109              	.LBB321:
 121:src/../h/Riscv.hpp **** }
 1110              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1111              		.loc 2 121 65 is_stmt 0
 1112              	#APP
 1113              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1114              		csrw sepc, s1
 1115              	# 0 "" 2
 1116              		.loc 2 122 1
 1117              	#NO_APP
 1118 0308 6FF09FD9 		j	.L3
 1119              	.LVL67:
 1120              	.L35:
 1121              	.LBE321:
 1122              	.LBE320:
 1123              	.LBE313:
 1124              	.LBB322:
 1125              	.LBB297:
 135:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1126              		.loc 1 135 13 is_stmt 1
 1127              	.LBB298:
 1128              	.LBB299:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1129              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1130              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1131              		.loc 2 115 64 is_stmt 0
 1132              	#APP
 1133              	# 115 "src/../h/Riscv.hpp" 1
 1134              		csrr a5, sepc
 1135              	# 0 "" 2
 1136              	#NO_APP
 1137 0310 233CF4F4 		sd	a5,-168(s0)
 116:src/../h/Riscv.hpp **** }
 1138              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1139              		.loc 2 116 12 is_stmt 0
 1140 0314 833484F5 		ld	s1,-168(s0)
 1141              	.LVL68:
GAS LISTING /tmp/ccB4Vddo.s 			page 33


 1142              	.LBE299:
 1143              	.LBE298:
 135:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1144              		.loc 1 135 38
 1145 0318 93844400 		addi	s1,s1,4
 1146              	.LVL69:
 136:src/Riscv.cpp **** 
 1147              		.loc 1 136 13 is_stmt 1
 1148              	.LBB300:
 1149              	.LBB301:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1150              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1151              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1152              		.loc 2 185 76 is_stmt 0
 1153              	#APP
 1154              	# 185 "src/../h/Riscv.hpp" 1
 1155              		csrr a5, sstatus
 1156              	# 0 "" 2
 1157              	#NO_APP
 1158 0320 2338F4F4 		sd	a5,-176(s0)
 186:src/../h/Riscv.hpp **** }
 1159              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1160              		.loc 2 186 12 is_stmt 0
 1161 0324 033904F5 		ld	s2,-176(s0)
 1162              	.LVL70:
 1163              	.LBE301:
 1164              	.LBE300:
 138:src/Riscv.cpp ****             _thread::dispatch();
 1165              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp ****             _thread::dispatch();
 1166              		.loc 1 138 39 is_stmt 0
 1167 0328 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1167      83B70700 
 1168 0330 23B00700 		sd	zero,0(a5)
 139:src/Riscv.cpp **** 
 1169              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp **** 
 1170              		.loc 1 139 30 is_stmt 0
 1171 0334 97000000 		call	_ZN7_thread8dispatchEv@plt
 1171      E7800000 
 1172              	.LVL71:
 141:src/Riscv.cpp ****             w_sepc(sepc);
 1173              		.loc 1 141 13 is_stmt 1
 1174              	.LBB302:
 1175              	.LBB303:
 191:src/../h/Riscv.hpp **** }
 1176              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1177              		.loc 2 191 77 is_stmt 0
 1178              	#APP
 1179              	# 191 "src/../h/Riscv.hpp" 1
 1180              		csrw sstatus, s2
 1181              	# 0 "" 2
 1182              	.LVL72:
GAS LISTING /tmp/ccB4Vddo.s 			page 34


 1183              	#NO_APP
 1184              	.LBE303:
 1185              	.LBE302:
 142:src/Riscv.cpp ****         }
 1186              		.loc 1 142 13 is_stmt 1
 1187              	.LBB304:
 1188              	.LBB305:
 121:src/../h/Riscv.hpp **** }
 1189              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1190              		.loc 2 121 65 is_stmt 0
 1191              	#APP
 1192              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1193              		csrw sepc, s1
 1194              	# 0 "" 2
 1195              		.loc 2 122 1
 1196              	#NO_APP
 1197 0344 6FF0DFD5 		j	.L3
 1198              	.LVL73:
 1199              	.L36:
 1200              	.LBE305:
 1201              	.LBE304:
 1202              	.LBE297:
 1203              	.LBB306:
 1204              	.LBB278:
 145:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1205              		.loc 1 145 13 is_stmt 1
 1206              	.LBB279:
 1207              	.LBB280:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1208              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1209              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1210              		.loc 2 115 64 is_stmt 0
 1211              	#APP
 1212              	# 115 "src/../h/Riscv.hpp" 1
 1213              		csrr a5, sepc
 1214              	# 0 "" 2
 1215              	#NO_APP
 1216 034c 2334F4F6 		sd	a5,-152(s0)
 116:src/../h/Riscv.hpp **** }
 1217              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1218              		.loc 2 116 12 is_stmt 0
 1219 0350 833484F6 		ld	s1,-152(s0)
 1220              	.LVL74:
 1221              	.LBE280:
 1222              	.LBE279:
 145:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1223              		.loc 1 145 38
 1224 0354 93844400 		addi	s1,s1,4
 1225              	.LVL75:
 146:src/Riscv.cpp **** 
 1226              		.loc 1 146 13 is_stmt 1
 1227              	.LBB281:
GAS LISTING /tmp/ccB4Vddo.s 			page 35


 1228              	.LBB282:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1229              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1230              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1231              		.loc 2 185 76 is_stmt 0
 1232              	#APP
 1233              	# 185 "src/../h/Riscv.hpp" 1
 1234              		csrr a5, sstatus
 1235              	# 0 "" 2
 1236              	#NO_APP
 1237 035c 2330F4F6 		sd	a5,-160(s0)
 186:src/../h/Riscv.hpp **** }
 1238              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1239              		.loc 2 186 12 is_stmt 0
 1240 0360 033904F6 		ld	s2,-160(s0)
 1241              	.LVL76:
 1242              	.LBE282:
 1243              	.LBE281:
 148:src/Riscv.cpp ****            uint64 arg2;
 1244              		.loc 1 148 12 is_stmt 1
 149:src/Riscv.cpp **** 
 1245              		.loc 1 149 12
 151:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1246              		.loc 1 151 13
 151:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1247              		.loc 1 151 48 is_stmt 0
 1248              	#APP
 1249              	# 151 "src/Riscv.cpp" 1
 152:src/Riscv.cpp **** 
 1250              		ld a1, 11*8(fp)
 1251              	# 0 "" 2
 1252              		.loc 1 152 13 is_stmt 1
 152:src/Riscv.cpp **** 
 1253              		.loc 1 152 48 is_stmt 0
 1254              	# 152 "src/Riscv.cpp" 1
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1255              		ld a2, 12*8(fp)
 1256              	# 0 "" 2
 1257              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1258              		.loc 1 154 56 is_stmt 0
 1259              	# 154 "src/Riscv.cpp" 1
 1260              		mv s3, a1
 1261              	# 0 "" 2
 1262              	.LVL77:
 155:src/Riscv.cpp **** 
 1263              		.loc 1 155 13 is_stmt 1
 155:src/Riscv.cpp **** 
 1264              		.loc 1 155 56 is_stmt 0
 1265              	# 155 "src/Riscv.cpp" 1
 1266              		mv s4, a2
 1267              	# 0 "" 2
 1268              	.LVL78:
 157:src/Riscv.cpp ****             sem->opened=true;
GAS LISTING /tmp/ccB4Vddo.s 			page 36


 1269              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp ****             sem->opened=true;
 1270              		.loc 1 157 50 is_stmt 0
 1271              	#NO_APP
 1272 0374 13058001 		li	a0,24
 1273 0378 97000000 		call	_ZN10KSemaphorenwEm@plt
 1273      E7800000 
 1274              	.LVL79:
 1275              	.LBB283:
 1276              	.LBB284:
 1277              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1278              		.loc 3 14 40
 1279 0380 23224501 		sw	s4,4(a0)
 1280              	.LVL80:
 1281              	.LBB285:
 1282              	.LBB286:
 1283              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
GAS LISTING /tmp/ccB4Vddo.s 			page 37


 1284              		.loc 4 26 29
 1285 0384 23340500 		sd	zero,8(a0)
 1286 0388 23380500 		sd	zero,16(a0)
 1287              	.LVL81:
 1288              	.LBE286:
 1289              	.LBE285:
 1290              	.LBE284:
 1291              	.LBE283:
 158:src/Riscv.cpp ****             *arg1=sem;
 1292              		.loc 1 158 13 is_stmt 1
 158:src/Riscv.cpp ****             *arg1=sem;
 1293              		.loc 1 158 24 is_stmt 0
 1294 038c 93071000 		li	a5,1
 1295 0390 2300F500 		sb	a5,0(a0)
 159:src/Riscv.cpp **** 
 1296              		.loc 1 159 13 is_stmt 1
 159:src/Riscv.cpp **** 
 1297              		.loc 1 159 18 is_stmt 0
 1298 0394 23B0A900 		sd	a0,0(s3)
 161:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1299              		.loc 1 161 13 is_stmt 1
 1300              	.LVL82:
 162:src/Riscv.cpp ****             else ret=-1;
 1301              		.loc 1 162 13
 1302 0398 630C0500 		beqz	a0,.L26
 162:src/Riscv.cpp ****             else ret=-1;
 1303              		.loc 1 162 33 is_stmt 0
 1304 039c 93070000 		li	a5,0
 1305              	.L16:
 1306              	.LVL83:
 165:src/Riscv.cpp **** 
 1307              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp **** 
 1308              		.loc 1 165 56 is_stmt 0
 1309              	#APP
 1310              	# 165 "src/Riscv.cpp" 1
 167:src/Riscv.cpp ****             w_sepc(sepc);
 1311              		mv a0, a5
 1312              	# 0 "" 2
 1313              		.loc 1 167 13 is_stmt 1
 1314              	.LVL84:
 1315              	#NO_APP
 1316              	.LBB287:
 1317              	.LBB288:
 191:src/../h/Riscv.hpp **** }
 1318              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1319              		.loc 2 191 77 is_stmt 0
 1320              	#APP
 1321              	# 191 "src/../h/Riscv.hpp" 1
 1322              		csrw sstatus, s2
 1323              	# 0 "" 2
 1324              	.LVL85:
 1325              	#NO_APP
 1326              	.LBE288:
 1327              	.LBE287:
 168:src/Riscv.cpp ****         }
GAS LISTING /tmp/ccB4Vddo.s 			page 38


 1328              		.loc 1 168 13 is_stmt 1
 1329              	.LBB289:
 1330              	.LBB290:
 121:src/../h/Riscv.hpp **** }
 1331              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1332              		.loc 2 121 65 is_stmt 0
 1333              	#APP
 1334              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1335              		csrw sepc, s1
 1336              	# 0 "" 2
 1337              		.loc 2 122 1
 1338              	#NO_APP
 1339 03ac 6FF05FCF 		j	.L3
 1340              	.LVL86:
 1341              	.L26:
 1342              	.LBE290:
 1343              	.LBE289:
 163:src/Riscv.cpp **** 
 1344              		.loc 1 163 21
 1345 03b0 9307F0FF 		li	a5,-1
 1346 03b4 6FF0DFFE 		j	.L16
 1347              	.LVL87:
 1348              	.L37:
 1349              	.LBE278:
 1350              	.LBB291:
 1351              	.LBB254:
 171:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1352              		.loc 1 171 13 is_stmt 1
 1353              	.LBB255:
 1354              	.LBB256:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1355              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1356              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1357              		.loc 2 115 64 is_stmt 0
 1358              	#APP
 1359              	# 115 "src/../h/Riscv.hpp" 1
 1360              		csrr a5, sepc
 1361              	# 0 "" 2
 1362              	#NO_APP
 1363 03bc 233CF4F6 		sd	a5,-136(s0)
 116:src/../h/Riscv.hpp **** }
 1364              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1365              		.loc 2 116 12 is_stmt 0
 1366 03c0 833984F7 		ld	s3,-136(s0)
 1367              	.LBE256:
 1368              	.LBE255:
 171:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1369              		.loc 1 171 38
 1370 03c4 93894900 		addi	s3,s3,4
 1371              	.LVL88:
 172:src/Riscv.cpp **** 
 1372              		.loc 1 172 13 is_stmt 1
GAS LISTING /tmp/ccB4Vddo.s 			page 39


 1373              	.LBB257:
 1374              	.LBB258:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1375              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1376              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1377              		.loc 2 185 76 is_stmt 0
 1378              	#APP
 1379              	# 185 "src/../h/Riscv.hpp" 1
 1380              		csrr a5, sstatus
 1381              	# 0 "" 2
 1382              	#NO_APP
 1383 03cc 2338F4F6 		sd	a5,-144(s0)
 186:src/../h/Riscv.hpp **** }
 1384              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1385              		.loc 2 186 12 is_stmt 0
 1386 03d0 033A04F7 		ld	s4,-144(s0)
 1387              	.LVL89:
 1388              	.LBE258:
 1389              	.LBE257:
 174:src/Riscv.cpp **** 
 1390              		.loc 1 174 13 is_stmt 1
 177:src/Riscv.cpp **** 
 1391              		.loc 1 177 13
 177:src/Riscv.cpp **** 
 1392              		.loc 1 177 48 is_stmt 0
 1393              	#APP
 1394              	# 177 "src/Riscv.cpp" 1
 179:src/Riscv.cpp **** 
 1395              		ld a1, 11*8(fp)
 1396              	# 0 "" 2
 1397              		.loc 1 179 13 is_stmt 1
 179:src/Riscv.cpp **** 
 1398              		.loc 1 179 56 is_stmt 0
 1399              	# 179 "src/Riscv.cpp" 1
 1400              		mv s1, a1
 1401              	# 0 "" 2
 1402              	.LVL90:
 181:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1403              		.loc 1 181 13 is_stmt 1
 1404              	#NO_APP
 1405 03dc 6F000003 		j	.L20
 1406              	.LVL91:
 1407              	.L19:
 1408              	.LBB259:
 1409              	.LBB260:
 1410              	.LBB261:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
GAS LISTING /tmp/ccB4Vddo.s 			page 40


  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1411              		.loc 4 72 12 is_stmt 0
 1412 03e0 03390500 		ld	s2,0(a0)
 1413              	.LVL92:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1414              		.loc 4 73 35
 1415 03e4 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1415      E7800000 
 1416              	.LVL93:
 1417              	.LBE261:
 1418              	.LBE260:
 185:src/Riscv.cpp ****                 sem->val++;
 1419              		.loc 1 185 17 is_stmt 1
 1420              	.LBB263:
 1421              	.LBB264:
 1422              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
GAS LISTING /tmp/ccB4Vddo.s 			page 41


   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void setDeblocked(){
  31:src/../h/_thread.hpp ****         deblocked = true;
 1423              		.loc 5 31 9
 1424              		.loc 5 31 19 is_stmt 0
 1425 03ec 93071000 		li	a5,1
 1426 03f0 230CF902 		sb	a5,56(s2)
 1427              	.LVL94:
 1428              	.LBE264:
 1429              	.LBE263:
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1430              		.loc 1 186 17 is_stmt 1
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1431              		.loc 1 186 22 is_stmt 0
 1432 03f4 83A74400 		lw	a5,4(s1)
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1433              		.loc 1 186 25
 1434 03f8 9B871700 		addiw	a5,a5,1
 1435 03fc 23A2F400 		sw	a5,4(s1)
 187:src/Riscv.cpp ****             }
 1436              		.loc 1 187 17 is_stmt 1
 187:src/Riscv.cpp ****             }
 1437              		.loc 1 187 31 is_stmt 0
 1438 0400 13050900 		mv	a0,s2
 1439 0404 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1439      E7800000 
 1440              	.LVL95:
 1441              	.L20:
 1442              	.LBE259:
 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1443              		.loc 1 183 13 is_stmt 1
 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1444              		.loc 1 183 43
GAS LISTING /tmp/ccB4Vddo.s 			page 42


 1445              	.LBB266:
 1446              	.LBB267:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1447              		.loc 4 79 14 is_stmt 0
 1448 040c 03B58400 		ld	a0,8(s1)
 1449              		.loc 4 79 9
 1450 0410 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1451              		.loc 4 80 22
 1452 0414 83370500 		ld	a5,0(a0)
 1453              	.LVL96:
 1454              	.LBE267:
 1455              	.LBE266:
 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1456              		.loc 1 183 43
 1457 0418 638C0700 		beqz	a5,.L18
 1458              	.LBB268:
 184:src/Riscv.cpp ****                 t->setDeblocked();
 1459              		.loc 1 184 17 is_stmt 1
 1460              	.LVL97:
 1461              	.LBB265:
 1462              	.LBB262:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1463              		.loc 4 69 22 is_stmt 0
 1464 041c 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1465              		.loc 4 69 9
 1466 0420 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1467              		.loc 4 70 9
 1468 0424 E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1469              		.loc 4 70 22
 1470 0428 23B80400 		sd	zero,16(s1)
 1471 042c 6FF05FFB 		j	.L19
 1472              	.LVL98:
 1473              	.L18:
 1474              	.LBE262:
 1475              	.LBE265:
 1476              	.LBE268:
 189:src/Riscv.cpp **** 
 1477              		.loc 1 189 14 is_stmt 1
 189:src/Riscv.cpp **** 
 1478              		.loc 1 189 25 is_stmt 0
 1479 0430 23800400 		sb	zero,0(s1)
 191:src/Riscv.cpp **** 
 1480              		.loc 1 191 13 is_stmt 1
 191:src/Riscv.cpp **** 
 1481              		.loc 1 191 23 is_stmt 0
 1482 0434 63880400 		beqz	s1,.L21
 191:src/Riscv.cpp **** 
 1483              		.loc 1 191 20 discriminator 1
GAS LISTING /tmp/ccB4Vddo.s 			page 43


 1484 0438 13850400 		mv	a0,s1
 1485 043c 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1485      E7800000 
 1486              	.LVL99:
 1487              	.L21:
 193:src/Riscv.cpp ****             w_sepc(sepc);
 1488              		.loc 1 193 13 is_stmt 1
 1489              	.LBB269:
 1490              	.LBB270:
 191:src/../h/Riscv.hpp **** }
 1491              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1492              		.loc 2 191 77 is_stmt 0
 1493              	#APP
 1494              	# 191 "src/../h/Riscv.hpp" 1
 1495              		csrw sstatus, s4
 1496              	# 0 "" 2
 1497              	.LVL100:
 1498              	#NO_APP
 1499              	.LBE270:
 1500              	.LBE269:
 194:src/Riscv.cpp ****         }
 1501              		.loc 1 194 13 is_stmt 1
 1502              	.LBB271:
 1503              	.LBB272:
 121:src/../h/Riscv.hpp **** }
 1504              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1505              		.loc 2 121 65 is_stmt 0
 1506              	#APP
 1507              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1508              		csrw sepc, s3
 1509              	# 0 "" 2
 1510              		.loc 2 122 1
 1511              	#NO_APP
 1512 044c 6FF05FC5 		j	.L3
 1513              	.LVL101:
 1514              	.L38:
 1515              	.LBE272:
 1516              	.LBE271:
 1517              	.LBE254:
 1518              	.LBB273:
 1519              	.LBB241:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1520              		.loc 1 197 13 is_stmt 1
 1521              	.LBB242:
 1522              	.LBB243:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1523              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1524              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1525              		.loc 2 115 64 is_stmt 0
 1526              	#APP
 1527              	# 115 "src/../h/Riscv.hpp" 1
 1528              		csrr a5, sepc
GAS LISTING /tmp/ccB4Vddo.s 			page 44


 1529              	# 0 "" 2
 1530              	#NO_APP
 1531 0454 2334F4F8 		sd	a5,-120(s0)
 116:src/../h/Riscv.hpp **** }
 1532              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1533              		.loc 2 116 12 is_stmt 0
 1534 0458 833484F8 		ld	s1,-120(s0)
 1535              	.LVL102:
 1536              	.LBE243:
 1537              	.LBE242:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1538              		.loc 1 197 38
 1539 045c 93844400 		addi	s1,s1,4
 1540              	.LVL103:
 198:src/Riscv.cpp **** 
 1541              		.loc 1 198 13 is_stmt 1
 1542              	.LBB244:
 1543              	.LBB245:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1544              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1545              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1546              		.loc 2 185 76 is_stmt 0
 1547              	#APP
 1548              	# 185 "src/../h/Riscv.hpp" 1
 1549              		csrr a5, sstatus
 1550              	# 0 "" 2
 1551              	#NO_APP
 1552 0464 2330F4F8 		sd	a5,-128(s0)
 186:src/../h/Riscv.hpp **** }
 1553              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1554              		.loc 2 186 12 is_stmt 0
 1555 0468 033904F8 		ld	s2,-128(s0)
 1556              	.LVL104:
 1557              	.LBE245:
 1558              	.LBE244:
 200:src/Riscv.cpp **** 
 1559              		.loc 1 200 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1560              		.loc 1 202 13
 202:src/Riscv.cpp **** 
 1561              		.loc 1 202 48 is_stmt 0
 1562              	#APP
 1563              	# 202 "src/Riscv.cpp" 1
 204:src/Riscv.cpp **** 
 1564              		ld a1, 11*8(fp)
 1565              	# 0 "" 2
 1566              		.loc 1 204 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1567              		.loc 1 204 56 is_stmt 0
 1568              	# 204 "src/Riscv.cpp" 1
 1569              		mv a0, a1
 1570              	# 0 "" 2
 1571              	.LVL105:
GAS LISTING /tmp/ccB4Vddo.s 			page 45


 206:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1572              		.loc 1 206 13 is_stmt 1
 209:src/Riscv.cpp **** 
 1573              		.loc 1 209 18
 209:src/Riscv.cpp **** 
 1574              		.loc 1 209 34 is_stmt 0
 1575              	#NO_APP
 1576 0474 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1576      E7800000 
 1577              	.LVL106:
 211:src/Riscv.cpp **** 
 1578              		.loc 1 211 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1579              		.loc 1 211 56 is_stmt 0
 1580              	#APP
 1581              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1582              		mv a0, a0
 1583              	# 0 "" 2
 1584              		.loc 1 213 13 is_stmt 1
 1585              	.LVL107:
 1586              	#NO_APP
 1587              	.LBB246:
 1588              	.LBB247:
 191:src/../h/Riscv.hpp **** }
 1589              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1590              		.loc 2 191 77 is_stmt 0
 1591              	#APP
 1592              	# 191 "src/../h/Riscv.hpp" 1
 1593              		csrw sstatus, s2
 1594              	# 0 "" 2
 1595              	.LVL108:
 1596              	#NO_APP
 1597              	.LBE247:
 1598              	.LBE246:
 214:src/Riscv.cpp ****         }
 1599              		.loc 1 214 13 is_stmt 1
 1600              	.LBB248:
 1601              	.LBB249:
 121:src/../h/Riscv.hpp **** }
 1602              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1603              		.loc 2 121 65 is_stmt 0
 1604              	#APP
 1605              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1606              		csrw sepc, s1
 1607              	# 0 "" 2
 1608              		.loc 2 122 1
 1609              	#NO_APP
 1610 0488 6FF09FC1 		j	.L3
 1611              	.LVL109:
 1612              	.L39:
 1613              	.LBE249:
 1614              	.LBE248:
 1615              	.LBE241:
GAS LISTING /tmp/ccB4Vddo.s 			page 46


 1616              	.LBB250:
 1617              	.LBB229:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1618              		.loc 1 217 13 is_stmt 1
 1619              	.LBB230:
 1620              	.LBB231:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1621              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1622              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1623              		.loc 2 115 64 is_stmt 0
 1624              	#APP
 1625              	# 115 "src/../h/Riscv.hpp" 1
 1626              		csrr a5, sepc
 1627              	# 0 "" 2
 1628              	#NO_APP
 1629 0490 233CF4F8 		sd	a5,-104(s0)
 116:src/../h/Riscv.hpp **** }
 1630              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1631              		.loc 2 116 12 is_stmt 0
 1632 0494 833484F9 		ld	s1,-104(s0)
 1633              	.LVL110:
 1634              	.LBE231:
 1635              	.LBE230:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1636              		.loc 1 217 38
 1637 0498 93844400 		addi	s1,s1,4
 1638              	.LVL111:
 218:src/Riscv.cpp **** 
 1639              		.loc 1 218 13 is_stmt 1
 1640              	.LBB232:
 1641              	.LBB233:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1642              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1643              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1644              		.loc 2 185 76 is_stmt 0
 1645              	#APP
 1646              	# 185 "src/../h/Riscv.hpp" 1
 1647              		csrr a5, sstatus
 1648              	# 0 "" 2
 1649              	#NO_APP
 1650 04a0 2338F4F8 		sd	a5,-112(s0)
 186:src/../h/Riscv.hpp **** }
 1651              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1652              		.loc 2 186 12 is_stmt 0
 1653 04a4 033904F9 		ld	s2,-112(s0)
 1654              	.LVL112:
 1655              	.LBE233:
 1656              	.LBE232:
 220:src/Riscv.cpp **** 
 1657              		.loc 1 220 13 is_stmt 1
 222:src/Riscv.cpp **** 
GAS LISTING /tmp/ccB4Vddo.s 			page 47


 1658              		.loc 1 222 13
 222:src/Riscv.cpp **** 
 1659              		.loc 1 222 48 is_stmt 0
 1660              	#APP
 1661              	# 222 "src/Riscv.cpp" 1
 224:src/Riscv.cpp **** 
 1662              		ld a1, 11*8(fp)
 1663              	# 0 "" 2
 1664              		.loc 1 224 13 is_stmt 1
 224:src/Riscv.cpp **** 
 1665              		.loc 1 224 56 is_stmt 0
 1666              	# 224 "src/Riscv.cpp" 1
 1667              		mv a0, a1
 1668              	# 0 "" 2
 1669              	.LVL113:
 226:src/Riscv.cpp **** 
 1670              		.loc 1 226 13 is_stmt 1
 228:src/Riscv.cpp ****                 ret=0;
 1671              		.loc 1 228 17
 228:src/Riscv.cpp ****                 ret=0;
 1672              		.loc 1 228 29 is_stmt 0
 1673              	#NO_APP
 1674 04b0 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1674      E7800000 
 1675              	.LVL114:
 229:src/Riscv.cpp **** 
 1676              		.loc 1 229 17 is_stmt 1
 232:src/Riscv.cpp **** 
 1677              		.loc 1 232 13
 232:src/Riscv.cpp **** 
 1678              		.loc 1 232 56 is_stmt 0
 1679 04b8 93070000 		li	a5,0
 1680              	#APP
 1681              	# 232 "src/Riscv.cpp" 1
 234:src/Riscv.cpp ****             w_sepc(sepc);
 1682              		mv a0, a5
 1683              	# 0 "" 2
 1684              		.loc 1 234 13 is_stmt 1
 1685              	.LVL115:
 1686              	#NO_APP
 1687              	.LBB234:
 1688              	.LBB235:
 191:src/../h/Riscv.hpp **** }
 1689              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1690              		.loc 2 191 77 is_stmt 0
 1691              	#APP
 1692              	# 191 "src/../h/Riscv.hpp" 1
 1693              		csrw sstatus, s2
 1694              	# 0 "" 2
 1695              	.LVL116:
 1696              	#NO_APP
 1697              	.LBE235:
 1698              	.LBE234:
 235:src/Riscv.cpp ****         }
 1699              		.loc 1 235 13 is_stmt 1
 1700              	.LBB236:
GAS LISTING /tmp/ccB4Vddo.s 			page 48


 1701              	.LBB237:
 121:src/../h/Riscv.hpp **** }
 1702              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1703              		.loc 2 121 65 is_stmt 0
 1704              	#APP
 1705              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1706              		csrw sepc, s1
 1707              	# 0 "" 2
 1708              		.loc 2 122 1
 1709              	#NO_APP
 1710 04c8 6FF09FBD 		j	.L3
 1711              	.LVL117:
 1712              	.L40:
 1713              	.LBE237:
 1714              	.LBE236:
 1715              	.LBE229:
 1716              	.LBB238:
 1717              	.LBB215:
 238:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1718              		.loc 1 238 13 is_stmt 1
 1719              	.LBB216:
 1720              	.LBB217:
 114:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1721              		.loc 2 114 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1722              		.loc 2 115 5
 115:src/../h/Riscv.hpp ****     return sepc;
 1723              		.loc 2 115 64 is_stmt 0
 1724              	#APP
 1725              	# 115 "src/../h/Riscv.hpp" 1
 1726              		csrr a5, sepc
 1727              	# 0 "" 2
 1728              	#NO_APP
 1729 04d0 2334F4FA 		sd	a5,-88(s0)
 116:src/../h/Riscv.hpp **** }
 1730              		.loc 2 116 5 is_stmt 1
 116:src/../h/Riscv.hpp **** }
 1731              		.loc 2 116 12 is_stmt 0
 1732 04d4 833484FA 		ld	s1,-88(s0)
 1733              	.LVL118:
 1734              	.LBE217:
 1735              	.LBE216:
 238:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1736              		.loc 1 238 38
 1737 04d8 93844400 		addi	s1,s1,4
 1738              	.LVL119:
 239:src/Riscv.cpp **** 
 1739              		.loc 1 239 13 is_stmt 1
 1740              	.LBB218:
 1741              	.LBB219:
 184:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1742              		.loc 2 184 5
 185:src/../h/Riscv.hpp ****     return sstatus;
 1743              		.loc 2 185 5
 185:src/../h/Riscv.hpp ****     return sstatus;
GAS LISTING /tmp/ccB4Vddo.s 			page 49


 1744              		.loc 2 185 76 is_stmt 0
 1745              	#APP
 1746              	# 185 "src/../h/Riscv.hpp" 1
 1747              		csrr a5, sstatus
 1748              	# 0 "" 2
 1749              	#NO_APP
 1750 04e0 2330F4FA 		sd	a5,-96(s0)
 186:src/../h/Riscv.hpp **** }
 1751              		.loc 2 186 5 is_stmt 1
 186:src/../h/Riscv.hpp **** }
 1752              		.loc 2 186 12 is_stmt 0
 1753 04e4 033904FA 		ld	s2,-96(s0)
 1754              	.LVL120:
 1755              	.LBE219:
 1756              	.LBE218:
 242:src/Riscv.cpp ****             char c = __getc();
 1757              		.loc 1 242 13 is_stmt 1
 242:src/Riscv.cpp ****             char c = __getc();
 1758              		.loc 1 242 27 is_stmt 0
 1759 04e8 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1759      83B70700 
 1760              	.LVL121:
 1761              	.LBB220:
 1762              	.LBB221:
 133:src/../h/Riscv.hpp **** }
 1763              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1764              		.loc 2 133 69 is_stmt 0
 1765              	#APP
 1766              	# 133 "src/../h/Riscv.hpp" 1
 1767              		csrw stvec, a5
 1768              	# 0 "" 2
 1769              	.LVL122:
 1770              	#NO_APP
 1771              	.LBE221:
 1772              	.LBE220:
 243:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1773              		.loc 1 243 13 is_stmt 1
 243:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1774              		.loc 1 243 28 is_stmt 0
 1775 04f4 97000000 		call	__getc@plt
 1775      E7800000 
 1776              	.LVL123:
 244:src/Riscv.cpp **** 
 1777              		.loc 1 244 13 is_stmt 1
 244:src/Riscv.cpp **** 
 1778              		.loc 1 244 27 is_stmt 0
 1779 04fc 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1779      83B70700 
 1780              	.LVL124:
 1781              	.LBB222:
 1782              	.LBB223:
 133:src/../h/Riscv.hpp **** }
 1783              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 1784              		.loc 2 133 69 is_stmt 0
 1785              	#APP
GAS LISTING /tmp/ccB4Vddo.s 			page 50


 1786              	# 133 "src/../h/Riscv.hpp" 1
 1787              		csrw stvec, a5
 1788              	# 0 "" 2
 1789              	.LVL125:
 1790              	#NO_APP
 1791              	.LBE223:
 1792              	.LBE222:
 246:src/Riscv.cpp **** 
 1793              		.loc 1 246 13 is_stmt 1
 246:src/Riscv.cpp **** 
 1794              		.loc 1 246 54 is_stmt 0
 1795              	#APP
 1796              	# 246 "src/Riscv.cpp" 1
 249:src/Riscv.cpp ****             w_sepc(sepc);
 1797              		mv a0, a0
 1798              	# 0 "" 2
 1799              		.loc 1 249 13 is_stmt 1
 1800              	.LVL126:
 1801              	#NO_APP
 1802              	.LBB224:
 1803              	.LBB225:
 191:src/../h/Riscv.hpp **** }
 1804              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 1805              		.loc 2 191 77 is_stmt 0
 1806              	#APP
 1807              	# 191 "src/../h/Riscv.hpp" 1
 1808              		csrw sstatus, s2
 1809              	# 0 "" 2
 1810              	.LVL127:
 1811              	#NO_APP
 1812              	.LBE225:
 1813              	.LBE224:
 250:src/Riscv.cpp ****         }
 1814              		.loc 1 250 13 is_stmt 1
 1815              	.LBB226:
 1816              	.LBB227:
 121:src/../h/Riscv.hpp **** }
 1817              		.loc 2 121 5
 121:src/../h/Riscv.hpp **** }
 1818              		.loc 2 121 65 is_stmt 0
 1819              	#APP
 1820              	# 121 "src/../h/Riscv.hpp" 1
 122:src/../h/Riscv.hpp **** 
 1821              		csrw sepc, s1
 1822              	# 0 "" 2
 1823              		.loc 2 122 1
 1824              	#NO_APP
 1825 0514 6FF0DFB8 		j	.L3
 1826              	.LBE227:
 1827              	.LBE226:
 1828              	.LBE215:
 1829              	.LBE238:
 1830              	.LBE250:
 1831              	.LBE273:
 1832              	.LBE291:
 1833              	.LBE306:
GAS LISTING /tmp/ccB4Vddo.s 			page 51


 1834              	.LBE322:
 1835              	.LBE339:
 1836              	.LBE357:
 1837              	.LBE376:
 1838              	.LBE388:
 1839              	.LBE401:
 1840              	.LBE415:
 1841              	.LBE432:
 1842              	.LBE448:
 1843              		.cfi_endproc
 1844              	.LFE52:
 1846              		.align	2
 1847              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1849              	_ZN5Riscv17handleTrapConsoleEv:
 1850              	.LFB53:
 275:src/Riscv.cpp **** 
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1851              		.loc 1 277 33 is_stmt 1
 1852              		.cfi_startproc
 1853 0518 130101FE 		addi	sp,sp,-32
 1854              		.cfi_def_cfa_offset 32
 1855 051c 233C1100 		sd	ra,24(sp)
 1856 0520 23388100 		sd	s0,16(sp)
 1857              		.cfi_offset 1, -8
 1858              		.cfi_offset 8, -16
 1859 0524 13040102 		addi	s0,sp,32
 1860              		.cfi_def_cfa 8, 0
 278:src/Riscv.cpp ****     uint64 scause = r_scause();
 1861              		.loc 1 278 5
 1862              	.LBB449:
 1863              	.LBB450:
 102:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1864              		.loc 2 102 5
 103:src/../h/Riscv.hpp ****     return scause;
 1865              		.loc 2 103 5
 103:src/../h/Riscv.hpp ****     return scause;
 1866              		.loc 2 103 72 is_stmt 0
 1867              	#APP
 1868              	# 103 "src/../h/Riscv.hpp" 1
 1869              		csrr a5, scause
 1870              	# 0 "" 2
 1871              	#NO_APP
 1872 052c 2334F4FE 		sd	a5,-24(s0)
 104:src/../h/Riscv.hpp **** }
 1873              		.loc 2 104 5 is_stmt 1
 104:src/../h/Riscv.hpp **** }
 1874              		.loc 2 104 12 is_stmt 0
 1875 0530 033784FE 		ld	a4,-24(s0)
 1876              	.LVL128:
 1877              	.LBE450:
 1878              	.LBE449:
 279:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1879              		.loc 1 279 5 is_stmt 1
 1880 0534 9307F0FF 		li	a5,-1
 1881 0538 9397F703 		slli	a5,a5,63
 1882 053c 93879700 		addi	a5,a5,9
GAS LISTING /tmp/ccB4Vddo.s 			page 52


 1883 0540 6302F702 		beq	a4,a5,.L45
 280:src/Riscv.cpp ****         console_handler();
 281:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 282:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1884              		.loc 1 282 12
 1885 0544 9307F0FF 		li	a5,-1
 1886 0548 9397F703 		slli	a5,a5,63
 1887 054c 93871700 		addi	a5,a5,1
 1888 0550 6304F702 		beq	a4,a5,.L46
 1889              	.LVL129:
 1890              	.L41:
 283:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 284:src/Riscv.cpp ****     }
 285:src/Riscv.cpp **** 
 286:src/Riscv.cpp **** }
 1891              		.loc 1 286 1 is_stmt 0
 1892 0554 83308101 		ld	ra,24(sp)
 1893              		.cfi_remember_state
 1894              		.cfi_restore 1
 1895 0558 03340101 		ld	s0,16(sp)
 1896              		.cfi_restore 8
 1897              		.cfi_def_cfa 2, 32
 1898 055c 13010102 		addi	sp,sp,32
 1899              		.cfi_def_cfa_offset 0
 1900 0560 67800000 		jr	ra
 1901              	.LVL130:
 1902              	.L45:
 1903              		.cfi_restore_state
 280:src/Riscv.cpp ****         console_handler();
 1904              		.loc 1 280 9 is_stmt 1
 280:src/Riscv.cpp ****         console_handler();
 1905              		.loc 1 280 24 is_stmt 0
 1906 0564 97000000 		call	console_handler@plt
 1906      E7800000 
 1907              	.LVL131:
 281:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1908              		.loc 1 281 9 is_stmt 1
 1909              	.LBB451:
 1910              	.LBB452:
 155:src/../h/Riscv.hpp **** }
 1911              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1912              		.loc 2 155 64 is_stmt 0
 1913 056c 93070020 		li	a5,512
 1914              	#APP
 1915              	# 155 "src/../h/Riscv.hpp" 1
 156:src/../h/Riscv.hpp **** 
 1916              		csrc sip, a5
 1917              	# 0 "" 2
 1918              		.loc 2 156 1
 1919              	#NO_APP
 1920 0574 6FF01FFE 		j	.L41
 1921              	.LVL132:
 1922              	.L46:
 1923              	.LBE452:
 1924              	.LBE451:
 283:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccB4Vddo.s 			page 53


 1925              		.loc 1 283 9 is_stmt 1
 1926              	.LBB453:
 1927              	.LBB454:
 155:src/../h/Riscv.hpp **** }
 1928              		.loc 2 155 5
 155:src/../h/Riscv.hpp **** }
 1929              		.loc 2 155 64 is_stmt 0
 1930 0578 93072000 		li	a5,2
 1931              	#APP
 1932              	# 155 "src/../h/Riscv.hpp" 1
 1933              		csrc sip, a5
 1934              	# 0 "" 2
 1935              	.LVL133:
 1936              	#NO_APP
 1937              	.LBE454:
 1938              	.LBE453:
 1939              		.loc 1 286 1
 1940 0580 6FF05FFD 		j	.L41
 1941              		.cfi_endproc
 1942              	.LFE53:
 1944              		.globl	_ZN5Riscv9privilegeE
 1945              		.bss
 1946              		.set	.LANCHOR0,. + 0
 1949              	_ZN5Riscv9privilegeE:
 1950 0000 00       		.zero	1
 1951              		.text
 1952              	.Letext0:
 1953              		.file 6 "src/../h/../lib/hw.h"
 1954              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1955              		.file 8 "src/../h/MemoryAllocator.hpp"
 1956              		.file 9 "src/../h/Scheduler.hpp"
 1957              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccB4Vddo.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccB4Vddo.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccB4Vddo.s:13     .text:0000000000000000 .L0 
     /tmp/ccB4Vddo.s:14     .text:0000000000000000 .L0 
     /tmp/ccB4Vddo.s:15     .text:0000000000000004 .L0 
     /tmp/ccB4Vddo.s:17     .text:0000000000000008 .L0 
     /tmp/ccB4Vddo.s:19     .text:000000000000000c .L0 
     /tmp/ccB4Vddo.s:21     .text:000000000000000c .L0 
     /tmp/ccB4Vddo.s:22     .text:0000000000000010 .L0 
     /tmp/ccB4Vddo.s:23     .text:0000000000000010 .L0 
     /tmp/ccB4Vddo.s:25     .text:0000000000000014 .L0 
     /tmp/ccB4Vddo.s:27     .text:0000000000000018 .L0 
     /tmp/ccB4Vddo.s:33     .text:0000000000000018 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccB4Vddo.s:36     .text:0000000000000018 .L0 
     /tmp/ccB4Vddo.s:37     .text:0000000000000018 .L0 
     /tmp/ccB4Vddo.s:38     .text:000000000000001c .L0 
     /tmp/ccB4Vddo.s:47     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:48     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:49     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:50     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:51     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:52     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:53     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:54     .text:000000000000003c .L0 
     /tmp/ccB4Vddo.s:56     .text:0000000000000040 .L0 
     /tmp/ccB4Vddo.s:61     .text:0000000000000040 .L0 
     /tmp/ccB4Vddo.s:62     .text:0000000000000040 .L0 
     /tmp/ccB4Vddo.s:63     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000040 .L0 
     /tmp/ccB4Vddo.s:71     .text:0000000000000048 .L0 
     /tmp/ccB4Vddo.s:72     .text:0000000000000048 .L0 
     /tmp/ccB4Vddo.s:77     .text:000000000000004c .L0 
     /tmp/ccB4Vddo.s:78     .text:000000000000004c .L0 
     /tmp/ccB4Vddo.s:79     .text:000000000000004c .L0 
       src/Riscv.cpp:27     .text:000000000000004c .L0 
     /tmp/ccB4Vddo.s:88     .text:0000000000000050 .L0 
     /tmp/ccB4Vddo.s:96     .text:0000000000000060 .L0 
     /tmp/ccB4Vddo.s:97     .text:0000000000000060 .L0 
     /tmp/ccB4Vddo.s:99     .text:0000000000000068 .L0 
     /tmp/ccB4Vddo.s:104    .text:000000000000006c .L0 
     /tmp/ccB4Vddo.s:105    .text:000000000000006c .L0 
     /tmp/ccB4Vddo.s:106    .text:000000000000006c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000006c .L0 
     /tmp/ccB4Vddo.s:114    .text:0000000000000074 .L0 
     /tmp/ccB4Vddo.s:115    .text:0000000000000074 .L0 
     /tmp/ccB4Vddo.s:122    .text:0000000000000078 .L0 
     /tmp/ccB4Vddo.s:123    .text:0000000000000078 .L0 
     /tmp/ccB4Vddo.s:124    .text:0000000000000078 .L0 
     /tmp/ccB4Vddo.s:135    .text:0000000000000080 .L0 
     /tmp/ccB4Vddo.s:136    .text:0000000000000080 .L0 
     /tmp/ccB4Vddo.s:139    .text:000000000000008c .L0 
     /tmp/ccB4Vddo.s:140    .text:000000000000008c .L0 
     /tmp/ccB4Vddo.s:145    .text:0000000000000090 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000090 .L0 
     /tmp/ccB4Vddo.s:152    .text:0000000000000094 .L0 
     /tmp/ccB4Vddo.s:162    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 55


     /tmp/ccB4Vddo.s:163    .text:0000000000000098 .L0 
     /tmp/ccB4Vddo.s:164    .text:0000000000000098 .L0 
     /tmp/ccB4Vddo.s:176    .text:00000000000000a0 .L0 
     /tmp/ccB4Vddo.s:177    .text:00000000000000a4 .L0 
     /tmp/ccB4Vddo.s:178    .text:00000000000000a4 .L0 
     /tmp/ccB4Vddo.s:180    .text:00000000000000a8 .L0 
     /tmp/ccB4Vddo.s:181    .text:00000000000000a8 .L0 
     /tmp/ccB4Vddo.s:183    .text:00000000000000ac .L0 
     /tmp/ccB4Vddo.s:185    .text:00000000000000b0 .L0 
     /tmp/ccB4Vddo.s:187    .text:00000000000000b4 .L0 
     /tmp/ccB4Vddo.s:189    .text:00000000000000b8 .L0 
     /tmp/ccB4Vddo.s:191    .text:00000000000000bc .L0 
     /tmp/ccB4Vddo.s:193    .text:00000000000000c0 .L0 
     /tmp/ccB4Vddo.s:195    .text:00000000000000c4 .L0 
     /tmp/ccB4Vddo.s:199    .text:00000000000000c8 .L0 
     /tmp/ccB4Vddo.s:204    .text:00000000000000c8 .L0 
     /tmp/ccB4Vddo.s:216    .text:00000000000000d8 .L0 
     /tmp/ccB4Vddo.s:217    .text:00000000000000d8 .L0 
     /tmp/ccB4Vddo.s:220    .text:00000000000000dc .L0 
     /tmp/ccB4Vddo.s:232    .text:00000000000000e4 .L0 
     /tmp/ccB4Vddo.s:247    .text:00000000000000ec .L0 
     /tmp/ccB4Vddo.s:261    .text:00000000000000f4 .L0 
     /tmp/ccB4Vddo.s:277    .text:00000000000000fc .L0 
     /tmp/ccB4Vddo.s:295    .text:0000000000000104 .L0 
     /tmp/ccB4Vddo.s:315    .text:000000000000010c .L0 
     /tmp/ccB4Vddo.s:337    .text:0000000000000114 .L0 
     /tmp/ccB4Vddo.s:361    .text:000000000000011c .L0 
     /tmp/ccB4Vddo.s:387    .text:0000000000000124 .L0 
     /tmp/ccB4Vddo.s:415    .text:000000000000012c .L0 
     /tmp/ccB4Vddo.s:445    .text:0000000000000134 .L0 
     /tmp/ccB4Vddo.s:477    .text:000000000000013c .L0 
     /tmp/ccB4Vddo.s:483    .text:0000000000000144 .L0 
     /tmp/ccB4Vddo.s:484    .text:0000000000000144 .L0 
     /tmp/ccB4Vddo.s:485    .text:0000000000000144 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000144 .L0 
     /tmp/ccB4Vddo.s:493    .text:000000000000014c .L0 
     /tmp/ccB4Vddo.s:494    .text:000000000000014c .L0 
     /tmp/ccB4Vddo.s:499    .text:0000000000000150 .L0 
     /tmp/ccB4Vddo.s:504    .text:0000000000000154 .L0 
     /tmp/ccB4Vddo.s:505    .text:0000000000000154 .L0 
     /tmp/ccB4Vddo.s:506    .text:0000000000000154 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000154 .L0 
     /tmp/ccB4Vddo.s:514    .text:000000000000015c .L0 
     /tmp/ccB4Vddo.s:515    .text:000000000000015c .L0 
     /tmp/ccB4Vddo.s:520    .text:0000000000000160 .L0 
     /tmp/ccB4Vddo.s:521    .text:0000000000000160 .L0 
       src/Riscv.cpp:257    .text:0000000000000160 .L0 
     /tmp/ccB4Vddo.s:527    .text:0000000000000164 .L0 
       src/Riscv.cpp:259    .text:0000000000000164 .L0 
     /tmp/ccB4Vddo.s:535    .text:000000000000016c .L0 
     /tmp/ccB4Vddo.s:536    .text:000000000000016c .L0 
     /tmp/ccB4Vddo.s:541    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000174 .L0 
     /tmp/ccB4Vddo.s:551    .text:0000000000000178 .L0 
     /tmp/ccB4Vddo.s:552    .text:0000000000000178 .L0 
     /tmp/ccB4Vddo.s:555    .text:0000000000000180 .L0 
     /tmp/ccB4Vddo.s:556    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 56


     /tmp/ccB4Vddo.s:561    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000188 .L0 
     /tmp/ccB4Vddo.s:573    .text:000000000000018c .L0 
     /tmp/ccB4Vddo.s:574    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000018c .L0 
     /tmp/ccB4Vddo.s:586    .text:0000000000000190 .L0 
     /tmp/ccB4Vddo.s:587    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000190 .L0 
     /tmp/ccB4Vddo.s:613    .text:0000000000000194 .L0 
     /tmp/ccB4Vddo.s:620    .text:0000000000000198 .L0 
     /tmp/ccB4Vddo.s:621    .text:0000000000000198 .L0 
     /tmp/ccB4Vddo.s:632    .text:00000000000001a4 .L0 
     /tmp/ccB4Vddo.s:633    .text:00000000000001a4 .L0 
     /tmp/ccB4Vddo.s:634    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000001a4 .L0 
     /tmp/ccB4Vddo.s:642    .text:00000000000001ac .L0 
     /tmp/ccB4Vddo.s:643    .text:00000000000001ac .L0 
     /tmp/ccB4Vddo.s:647    .text:00000000000001b0 .L0 
     /tmp/ccB4Vddo.s:652    .text:00000000000001b4 .L0 
     /tmp/ccB4Vddo.s:653    .text:00000000000001b4 .L0 
     /tmp/ccB4Vddo.s:654    .text:00000000000001b4 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000001b4 .L0 
     /tmp/ccB4Vddo.s:662    .text:00000000000001bc .L0 
     /tmp/ccB4Vddo.s:663    .text:00000000000001bc .L0 
     /tmp/ccB4Vddo.s:668    .text:00000000000001c0 .L0 
     /tmp/ccB4Vddo.s:669    .text:00000000000001c0 .L0 
     /tmp/ccB4Vddo.s:670    .text:00000000000001c0 .L0 
     /tmp/ccB4Vddo.s:671    .text:00000000000001c0 .L0 
       src/Riscv.cpp:55     .text:00000000000001c0 .L0 
     /tmp/ccB4Vddo.s:677    .text:00000000000001c4 .L0 
       src/Riscv.cpp:56     .text:00000000000001c4 .L0 
     /tmp/ccB4Vddo.s:682    .text:00000000000001c8 .L0 
       src/Riscv.cpp:57     .text:00000000000001c8 .L0 
     /tmp/ccB4Vddo.s:687    .text:00000000000001cc .L0 
       src/Riscv.cpp:60     .text:00000000000001cc .L0 
     /tmp/ccB4Vddo.s:693    .text:00000000000001d0 .L0 
       src/Riscv.cpp:61     .text:00000000000001d0 .L0 
     /tmp/ccB4Vddo.s:699    .text:00000000000001d4 .L0 
       src/Riscv.cpp:62     .text:00000000000001d4 .L0 
     /tmp/ccB4Vddo.s:705    .text:00000000000001d8 .L0 
     /tmp/ccB4Vddo.s:707    .text:00000000000001d8 .L0 
     /tmp/ccB4Vddo.s:713    .text:00000000000001e8 .L0 
     /tmp/ccB4Vddo.s:714    .text:00000000000001e8 .L0 
     /tmp/ccB4Vddo.s:720    .text:00000000000001f8 .L0 
     /tmp/ccB4Vddo.s:721    .text:00000000000001f8 .L0 
     /tmp/ccB4Vddo.s:723    .text:00000000000001fc .L0 
     /tmp/ccB4Vddo.s:724    .text:00000000000001fc .L0 
     /tmp/ccB4Vddo.s:726    .text:0000000000000200 .L0 
     /tmp/ccB4Vddo.s:730    .text:0000000000000204 .L0 
       src/Riscv.cpp:75     .text:0000000000000204 .L0 
     /tmp/ccB4Vddo.s:740    .text:0000000000000208 .L0 
     /tmp/ccB4Vddo.s:741    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000208 .L0 
     /tmp/ccB4Vddo.s:753    .text:000000000000020c .L0 
     /tmp/ccB4Vddo.s:754    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:121    .text:000000000000020c .L0 
     /tmp/ccB4Vddo.s:761    .text:0000000000000210 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 57


     /tmp/ccB4Vddo.s:767    .text:0000000000000214 .L0 
     /tmp/ccB4Vddo.s:778    .text:000000000000021c .L0 
     /tmp/ccB4Vddo.s:779    .text:000000000000021c .L0 
     /tmp/ccB4Vddo.s:780    .text:000000000000021c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000021c .L0 
     /tmp/ccB4Vddo.s:788    .text:0000000000000224 .L0 
     /tmp/ccB4Vddo.s:789    .text:0000000000000224 .L0 
     /tmp/ccB4Vddo.s:794    .text:0000000000000228 .L0 
     /tmp/ccB4Vddo.s:799    .text:000000000000022c .L0 
     /tmp/ccB4Vddo.s:800    .text:000000000000022c .L0 
     /tmp/ccB4Vddo.s:801    .text:000000000000022c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000022c .L0 
     /tmp/ccB4Vddo.s:809    .text:0000000000000234 .L0 
     /tmp/ccB4Vddo.s:810    .text:0000000000000234 .L0 
     /tmp/ccB4Vddo.s:815    .text:0000000000000238 .L0 
       src/Riscv.cpp:84     .text:0000000000000238 .L0 
     /tmp/ccB4Vddo.s:821    .text:000000000000023c .L0 
       src/Riscv.cpp:86     .text:000000000000023c .L0 
     /tmp/ccB4Vddo.s:827    .text:0000000000000240 .L0 
     /tmp/ccB4Vddo.s:829    .text:0000000000000240 .L0 
     /tmp/ccB4Vddo.s:834    .text:000000000000024c .L0 
       src/Riscv.cpp:90     .text:000000000000024c .L0 
     /tmp/ccB4Vddo.s:844    .text:0000000000000250 .L0 
     /tmp/ccB4Vddo.s:845    .text:0000000000000250 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000250 .L0 
     /tmp/ccB4Vddo.s:857    .text:0000000000000254 .L0 
     /tmp/ccB4Vddo.s:858    .text:0000000000000254 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000254 .L0 
     /tmp/ccB4Vddo.s:865    .text:0000000000000258 .L0 
     /tmp/ccB4Vddo.s:876    .text:000000000000025c .L0 
     /tmp/ccB4Vddo.s:877    .text:000000000000025c .L0 
     /tmp/ccB4Vddo.s:878    .text:000000000000025c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000025c .L0 
     /tmp/ccB4Vddo.s:886    .text:0000000000000264 .L0 
     /tmp/ccB4Vddo.s:887    .text:0000000000000264 .L0 
     /tmp/ccB4Vddo.s:892    .text:0000000000000268 .L0 
     /tmp/ccB4Vddo.s:897    .text:000000000000026c .L0 
     /tmp/ccB4Vddo.s:898    .text:000000000000026c .L0 
     /tmp/ccB4Vddo.s:899    .text:000000000000026c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000026c .L0 
     /tmp/ccB4Vddo.s:907    .text:0000000000000274 .L0 
     /tmp/ccB4Vddo.s:908    .text:0000000000000274 .L0 
     /tmp/ccB4Vddo.s:913    .text:0000000000000278 .L0 
       src/Riscv.cpp:99     .text:0000000000000278 .L0 
     /tmp/ccB4Vddo.s:919    .text:000000000000027c .L0 
       src/Riscv.cpp:101    .text:000000000000027c .L0 
     /tmp/ccB4Vddo.s:925    .text:0000000000000280 .L0 
     /tmp/ccB4Vddo.s:927    .text:0000000000000280 .L0 
     /tmp/ccB4Vddo.s:930    .text:0000000000000288 .L0 
       src/Riscv.cpp:103    .text:0000000000000288 .L0 
     /tmp/ccB4Vddo.s:940    .text:000000000000028c .L0 
     /tmp/ccB4Vddo.s:941    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000028c .L0 
     /tmp/ccB4Vddo.s:953    .text:0000000000000290 .L0 
     /tmp/ccB4Vddo.s:954    .text:0000000000000290 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000290 .L0 
     /tmp/ccB4Vddo.s:961    .text:0000000000000294 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 58


     /tmp/ccB4Vddo.s:972    .text:0000000000000298 .L0 
     /tmp/ccB4Vddo.s:973    .text:0000000000000298 .L0 
     /tmp/ccB4Vddo.s:974    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000298 .L0 
     /tmp/ccB4Vddo.s:982    .text:00000000000002a0 .L0 
     /tmp/ccB4Vddo.s:983    .text:00000000000002a0 .L0 
     /tmp/ccB4Vddo.s:988    .text:00000000000002a4 .L0 
     /tmp/ccB4Vddo.s:993    .text:00000000000002a8 .L0 
     /tmp/ccB4Vddo.s:994    .text:00000000000002a8 .L0 
     /tmp/ccB4Vddo.s:995    .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002a8 .L0 
     /tmp/ccB4Vddo.s:1003   .text:00000000000002b0 .L0 
     /tmp/ccB4Vddo.s:1004   .text:00000000000002b0 .L0 
     /tmp/ccB4Vddo.s:1009   .text:00000000000002b4 .L0 
     /tmp/ccB4Vddo.s:1010   .text:00000000000002b4 .L0 
     /tmp/ccB4Vddo.s:1013   .text:00000000000002c0 .L0 
     /tmp/ccB4Vddo.s:1016   .text:00000000000002c8 .L0 
     /tmp/ccB4Vddo.s:1017   .text:00000000000002c8 .L0 
     /tmp/ccB4Vddo.s:1022   .text:00000000000002d0 .L0 
     /tmp/ccB4Vddo.s:1023   .text:00000000000002d0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000002d0 .L0 
     /tmp/ccB4Vddo.s:1035   .text:00000000000002d4 .L0 
     /tmp/ccB4Vddo.s:1036   .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000002d4 .L0 
     /tmp/ccB4Vddo.s:1043   .text:00000000000002d8 .L0 
     /tmp/ccB4Vddo.s:1054   .text:00000000000002dc .L0 
     /tmp/ccB4Vddo.s:1055   .text:00000000000002dc .L0 
     /tmp/ccB4Vddo.s:1056   .text:00000000000002dc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000002dc .L0 
     /tmp/ccB4Vddo.s:1064   .text:00000000000002e4 .L0 
     /tmp/ccB4Vddo.s:1065   .text:00000000000002e4 .L0 
     /tmp/ccB4Vddo.s:1070   .text:00000000000002e8 .L0 
     /tmp/ccB4Vddo.s:1075   .text:00000000000002ec .L0 
     /tmp/ccB4Vddo.s:1076   .text:00000000000002ec .L0 
     /tmp/ccB4Vddo.s:1077   .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:185    .text:00000000000002ec .L0 
     /tmp/ccB4Vddo.s:1085   .text:00000000000002f4 .L0 
     /tmp/ccB4Vddo.s:1086   .text:00000000000002f4 .L0 
     /tmp/ccB4Vddo.s:1091   .text:00000000000002f8 .L0 
     /tmp/ccB4Vddo.s:1092   .text:00000000000002f8 .L0 
     /tmp/ccB4Vddo.s:1097   .text:0000000000000300 .L0 
     /tmp/ccB4Vddo.s:1098   .text:0000000000000300 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000300 .L0 
     /tmp/ccB4Vddo.s:1110   .text:0000000000000304 .L0 
     /tmp/ccB4Vddo.s:1111   .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000304 .L0 
     /tmp/ccB4Vddo.s:1118   .text:0000000000000308 .L0 
     /tmp/ccB4Vddo.s:1129   .text:000000000000030c .L0 
     /tmp/ccB4Vddo.s:1130   .text:000000000000030c .L0 
     /tmp/ccB4Vddo.s:1131   .text:000000000000030c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000030c .L0 
     /tmp/ccB4Vddo.s:1139   .text:0000000000000314 .L0 
     /tmp/ccB4Vddo.s:1140   .text:0000000000000314 .L0 
     /tmp/ccB4Vddo.s:1145   .text:0000000000000318 .L0 
     /tmp/ccB4Vddo.s:1150   .text:000000000000031c .L0 
     /tmp/ccB4Vddo.s:1151   .text:000000000000031c .L0 
     /tmp/ccB4Vddo.s:1152   .text:000000000000031c .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 59


  src/../h/Riscv.hpp:185    .text:000000000000031c .L0 
     /tmp/ccB4Vddo.s:1160   .text:0000000000000324 .L0 
     /tmp/ccB4Vddo.s:1161   .text:0000000000000324 .L0 
     /tmp/ccB4Vddo.s:1166   .text:0000000000000328 .L0 
     /tmp/ccB4Vddo.s:1167   .text:0000000000000328 .L0 
     /tmp/ccB4Vddo.s:1170   .text:0000000000000334 .L0 
     /tmp/ccB4Vddo.s:1171   .text:0000000000000334 .L0 
     /tmp/ccB4Vddo.s:1176   .text:000000000000033c .L0 
     /tmp/ccB4Vddo.s:1177   .text:000000000000033c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000033c .L0 
     /tmp/ccB4Vddo.s:1189   .text:0000000000000340 .L0 
     /tmp/ccB4Vddo.s:1190   .text:0000000000000340 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000340 .L0 
     /tmp/ccB4Vddo.s:1197   .text:0000000000000344 .L0 
     /tmp/ccB4Vddo.s:1208   .text:0000000000000348 .L0 
     /tmp/ccB4Vddo.s:1209   .text:0000000000000348 .L0 
     /tmp/ccB4Vddo.s:1210   .text:0000000000000348 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000348 .L0 
     /tmp/ccB4Vddo.s:1218   .text:0000000000000350 .L0 
     /tmp/ccB4Vddo.s:1219   .text:0000000000000350 .L0 
     /tmp/ccB4Vddo.s:1224   .text:0000000000000354 .L0 
     /tmp/ccB4Vddo.s:1229   .text:0000000000000358 .L0 
     /tmp/ccB4Vddo.s:1230   .text:0000000000000358 .L0 
     /tmp/ccB4Vddo.s:1231   .text:0000000000000358 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000358 .L0 
     /tmp/ccB4Vddo.s:1239   .text:0000000000000360 .L0 
     /tmp/ccB4Vddo.s:1240   .text:0000000000000360 .L0 
     /tmp/ccB4Vddo.s:1245   .text:0000000000000364 .L0 
     /tmp/ccB4Vddo.s:1246   .text:0000000000000364 .L0 
     /tmp/ccB4Vddo.s:1247   .text:0000000000000364 .L0 
       src/Riscv.cpp:151    .text:0000000000000364 .L0 
     /tmp/ccB4Vddo.s:1253   .text:0000000000000368 .L0 
       src/Riscv.cpp:152    .text:0000000000000368 .L0 
     /tmp/ccB4Vddo.s:1258   .text:000000000000036c .L0 
       src/Riscv.cpp:154    .text:000000000000036c .L0 
     /tmp/ccB4Vddo.s:1264   .text:0000000000000370 .L0 
       src/Riscv.cpp:155    .text:0000000000000370 .L0 
     /tmp/ccB4Vddo.s:1270   .text:0000000000000374 .L0 
     /tmp/ccB4Vddo.s:1272   .text:0000000000000374 .L0 
     /tmp/ccB4Vddo.s:1279   .text:0000000000000380 .L0 
     /tmp/ccB4Vddo.s:1285   .text:0000000000000384 .L0 
     /tmp/ccB4Vddo.s:1293   .text:000000000000038c .L0 
     /tmp/ccB4Vddo.s:1294   .text:000000000000038c .L0 
     /tmp/ccB4Vddo.s:1297   .text:0000000000000394 .L0 
     /tmp/ccB4Vddo.s:1298   .text:0000000000000394 .L0 
     /tmp/ccB4Vddo.s:1301   .text:0000000000000398 .L0 
     /tmp/ccB4Vddo.s:1302   .text:0000000000000398 .L0 
     /tmp/ccB4Vddo.s:1304   .text:000000000000039c .L0 
     /tmp/ccB4Vddo.s:1308   .text:00000000000003a0 .L0 
       src/Riscv.cpp:165    .text:00000000000003a0 .L0 
     /tmp/ccB4Vddo.s:1318   .text:00000000000003a4 .L0 
     /tmp/ccB4Vddo.s:1319   .text:00000000000003a4 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000003a4 .L0 
     /tmp/ccB4Vddo.s:1331   .text:00000000000003a8 .L0 
     /tmp/ccB4Vddo.s:1332   .text:00000000000003a8 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000003a8 .L0 
     /tmp/ccB4Vddo.s:1339   .text:00000000000003ac .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 60


     /tmp/ccB4Vddo.s:1345   .text:00000000000003b0 .L0 
     /tmp/ccB4Vddo.s:1355   .text:00000000000003b8 .L0 
     /tmp/ccB4Vddo.s:1356   .text:00000000000003b8 .L0 
     /tmp/ccB4Vddo.s:1357   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:115    .text:00000000000003b8 .L0 
     /tmp/ccB4Vddo.s:1365   .text:00000000000003c0 .L0 
     /tmp/ccB4Vddo.s:1366   .text:00000000000003c0 .L0 
     /tmp/ccB4Vddo.s:1370   .text:00000000000003c4 .L0 
     /tmp/ccB4Vddo.s:1375   .text:00000000000003c8 .L0 
     /tmp/ccB4Vddo.s:1376   .text:00000000000003c8 .L0 
     /tmp/ccB4Vddo.s:1377   .text:00000000000003c8 .L0 
  src/../h/Riscv.hpp:185    .text:00000000000003c8 .L0 
     /tmp/ccB4Vddo.s:1385   .text:00000000000003d0 .L0 
     /tmp/ccB4Vddo.s:1386   .text:00000000000003d0 .L0 
     /tmp/ccB4Vddo.s:1391   .text:00000000000003d4 .L0 
     /tmp/ccB4Vddo.s:1392   .text:00000000000003d4 .L0 
       src/Riscv.cpp:177    .text:00000000000003d4 .L0 
     /tmp/ccB4Vddo.s:1398   .text:00000000000003d8 .L0 
       src/Riscv.cpp:179    .text:00000000000003d8 .L0 
     /tmp/ccB4Vddo.s:1405   .text:00000000000003dc .L0 
     /tmp/ccB4Vddo.s:1412   .text:00000000000003e0 .L0 
     /tmp/ccB4Vddo.s:1415   .text:00000000000003e4 .L0 
     /tmp/ccB4Vddo.s:1423   .text:00000000000003ec .L0 
     /tmp/ccB4Vddo.s:1424   .text:00000000000003ec .L0 
     /tmp/ccB4Vddo.s:1425   .text:00000000000003ec .L0 
     /tmp/ccB4Vddo.s:1431   .text:00000000000003f4 .L0 
     /tmp/ccB4Vddo.s:1432   .text:00000000000003f4 .L0 
     /tmp/ccB4Vddo.s:1434   .text:00000000000003f8 .L0 
     /tmp/ccB4Vddo.s:1437   .text:0000000000000400 .L0 
     /tmp/ccB4Vddo.s:1438   .text:0000000000000400 .L0 
     /tmp/ccB4Vddo.s:1444   .text:000000000000040c .L0 
     /tmp/ccB4Vddo.s:1447   .text:000000000000040c .L0 
     /tmp/ccB4Vddo.s:1448   .text:000000000000040c .L0 
     /tmp/ccB4Vddo.s:1450   .text:0000000000000410 .L0 
     /tmp/ccB4Vddo.s:1452   .text:0000000000000414 .L0 
     /tmp/ccB4Vddo.s:1457   .text:0000000000000418 .L0 
     /tmp/ccB4Vddo.s:1463   .text:000000000000041c .L0 
     /tmp/ccB4Vddo.s:1464   .text:000000000000041c .L0 
     /tmp/ccB4Vddo.s:1466   .text:0000000000000420 .L0 
     /tmp/ccB4Vddo.s:1468   .text:0000000000000424 .L0 
     /tmp/ccB4Vddo.s:1470   .text:0000000000000428 .L0 
     /tmp/ccB4Vddo.s:1478   .text:0000000000000430 .L0 
     /tmp/ccB4Vddo.s:1479   .text:0000000000000430 .L0 
     /tmp/ccB4Vddo.s:1481   .text:0000000000000434 .L0 
     /tmp/ccB4Vddo.s:1482   .text:0000000000000434 .L0 
     /tmp/ccB4Vddo.s:1484   .text:0000000000000438 .L0 
     /tmp/ccB4Vddo.s:1491   .text:0000000000000444 .L0 
     /tmp/ccB4Vddo.s:1492   .text:0000000000000444 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000444 .L0 
     /tmp/ccB4Vddo.s:1504   .text:0000000000000448 .L0 
     /tmp/ccB4Vddo.s:1505   .text:0000000000000448 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000448 .L0 
     /tmp/ccB4Vddo.s:1512   .text:000000000000044c .L0 
     /tmp/ccB4Vddo.s:1523   .text:0000000000000450 .L0 
     /tmp/ccB4Vddo.s:1524   .text:0000000000000450 .L0 
     /tmp/ccB4Vddo.s:1525   .text:0000000000000450 .L0 
  src/../h/Riscv.hpp:115    .text:0000000000000450 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 61


     /tmp/ccB4Vddo.s:1533   .text:0000000000000458 .L0 
     /tmp/ccB4Vddo.s:1534   .text:0000000000000458 .L0 
     /tmp/ccB4Vddo.s:1539   .text:000000000000045c .L0 
     /tmp/ccB4Vddo.s:1544   .text:0000000000000460 .L0 
     /tmp/ccB4Vddo.s:1545   .text:0000000000000460 .L0 
     /tmp/ccB4Vddo.s:1546   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:185    .text:0000000000000460 .L0 
     /tmp/ccB4Vddo.s:1554   .text:0000000000000468 .L0 
     /tmp/ccB4Vddo.s:1555   .text:0000000000000468 .L0 
     /tmp/ccB4Vddo.s:1560   .text:000000000000046c .L0 
     /tmp/ccB4Vddo.s:1561   .text:000000000000046c .L0 
       src/Riscv.cpp:202    .text:000000000000046c .L0 
     /tmp/ccB4Vddo.s:1567   .text:0000000000000470 .L0 
       src/Riscv.cpp:204    .text:0000000000000470 .L0 
     /tmp/ccB4Vddo.s:1573   .text:0000000000000474 .L0 
     /tmp/ccB4Vddo.s:1574   .text:0000000000000474 .L0 
     /tmp/ccB4Vddo.s:1576   .text:0000000000000474 .L0 
     /tmp/ccB4Vddo.s:1579   .text:000000000000047c .L0 
       src/Riscv.cpp:211    .text:000000000000047c .L0 
     /tmp/ccB4Vddo.s:1589   .text:0000000000000480 .L0 
     /tmp/ccB4Vddo.s:1590   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:191    .text:0000000000000480 .L0 
     /tmp/ccB4Vddo.s:1602   .text:0000000000000484 .L0 
     /tmp/ccB4Vddo.s:1603   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000484 .L0 
     /tmp/ccB4Vddo.s:1610   .text:0000000000000488 .L0 
     /tmp/ccB4Vddo.s:1621   .text:000000000000048c .L0 
     /tmp/ccB4Vddo.s:1622   .text:000000000000048c .L0 
     /tmp/ccB4Vddo.s:1623   .text:000000000000048c .L0 
  src/../h/Riscv.hpp:115    .text:000000000000048c .L0 
     /tmp/ccB4Vddo.s:1631   .text:0000000000000494 .L0 
     /tmp/ccB4Vddo.s:1632   .text:0000000000000494 .L0 
     /tmp/ccB4Vddo.s:1637   .text:0000000000000498 .L0 
     /tmp/ccB4Vddo.s:1642   .text:000000000000049c .L0 
     /tmp/ccB4Vddo.s:1643   .text:000000000000049c .L0 
     /tmp/ccB4Vddo.s:1644   .text:000000000000049c .L0 
  src/../h/Riscv.hpp:185    .text:000000000000049c .L0 
     /tmp/ccB4Vddo.s:1652   .text:00000000000004a4 .L0 
     /tmp/ccB4Vddo.s:1653   .text:00000000000004a4 .L0 
     /tmp/ccB4Vddo.s:1658   .text:00000000000004a8 .L0 
     /tmp/ccB4Vddo.s:1659   .text:00000000000004a8 .L0 
       src/Riscv.cpp:222    .text:00000000000004a8 .L0 
     /tmp/ccB4Vddo.s:1665   .text:00000000000004ac .L0 
       src/Riscv.cpp:224    .text:00000000000004ac .L0 
     /tmp/ccB4Vddo.s:1671   .text:00000000000004b0 .L0 
     /tmp/ccB4Vddo.s:1672   .text:00000000000004b0 .L0 
     /tmp/ccB4Vddo.s:1674   .text:00000000000004b0 .L0 
     /tmp/ccB4Vddo.s:1677   .text:00000000000004b8 .L0 
     /tmp/ccB4Vddo.s:1678   .text:00000000000004b8 .L0 
     /tmp/ccB4Vddo.s:1679   .text:00000000000004b8 .L0 
     /tmp/ccB4Vddo.s:1689   .text:00000000000004c0 .L0 
     /tmp/ccB4Vddo.s:1690   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:191    .text:00000000000004c0 .L0 
     /tmp/ccB4Vddo.s:1702   .text:00000000000004c4 .L0 
     /tmp/ccB4Vddo.s:1703   .text:00000000000004c4 .L0 
  src/../h/Riscv.hpp:121    .text:00000000000004c4 .L0 
     /tmp/ccB4Vddo.s:1710   .text:00000000000004c8 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 62


     /tmp/ccB4Vddo.s:1721   .text:00000000000004cc .L0 
     /tmp/ccB4Vddo.s:1722   .text:00000000000004cc .L0 
     /tmp/ccB4Vddo.s:1723   .text:00000000000004cc .L0 
  src/../h/Riscv.hpp:115    .text:00000000000004cc .L0 
     /tmp/ccB4Vddo.s:1731   .text:00000000000004d4 .L0 
     /tmp/ccB4Vddo.s:1732   .text:00000000000004d4 .L0 
     /tmp/ccB4Vddo.s:1737   .text:00000000000004d8 .L0 
     /tmp/ccB4Vddo.s:1742   .text:00000000000004dc .L0 
     /tmp/ccB4Vddo.s:1743   .text:00000000000004dc .L0 
     /tmp/ccB4Vddo.s:1744   .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:185    .text:00000000000004dc .L0 
     /tmp/ccB4Vddo.s:1752   .text:00000000000004e4 .L0 
     /tmp/ccB4Vddo.s:1753   .text:00000000000004e4 .L0 
     /tmp/ccB4Vddo.s:1758   .text:00000000000004e8 .L0 
     /tmp/ccB4Vddo.s:1759   .text:00000000000004e8 .L0 
     /tmp/ccB4Vddo.s:1764   .text:00000000000004f0 .L0 
  src/../h/Riscv.hpp:133    .text:00000000000004f0 .L0 
     /tmp/ccB4Vddo.s:1774   .text:00000000000004f4 .L0 
     /tmp/ccB4Vddo.s:1775   .text:00000000000004f4 .L0 
     /tmp/ccB4Vddo.s:1778   .text:00000000000004fc .L0 
     /tmp/ccB4Vddo.s:1779   .text:00000000000004fc .L0 
     /tmp/ccB4Vddo.s:1784   .text:0000000000000504 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000504 .L0 
     /tmp/ccB4Vddo.s:1794   .text:0000000000000508 .L0 
       src/Riscv.cpp:246    .text:0000000000000508 .L0 
     /tmp/ccB4Vddo.s:1804   .text:000000000000050c .L0 
     /tmp/ccB4Vddo.s:1805   .text:000000000000050c .L0 
  src/../h/Riscv.hpp:191    .text:000000000000050c .L0 
     /tmp/ccB4Vddo.s:1817   .text:0000000000000510 .L0 
     /tmp/ccB4Vddo.s:1818   .text:0000000000000510 .L0 
  src/../h/Riscv.hpp:121    .text:0000000000000510 .L0 
     /tmp/ccB4Vddo.s:1825   .text:0000000000000514 .L0 
     /tmp/ccB4Vddo.s:1843   .text:0000000000000518 .L0 
     /tmp/ccB4Vddo.s:1849   .text:0000000000000518 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccB4Vddo.s:1852   .text:0000000000000518 .L0 
     /tmp/ccB4Vddo.s:1853   .text:0000000000000518 .L0 
     /tmp/ccB4Vddo.s:1854   .text:000000000000051c .L0 
     /tmp/ccB4Vddo.s:1857   .text:0000000000000524 .L0 
     /tmp/ccB4Vddo.s:1858   .text:0000000000000524 .L0 
     /tmp/ccB4Vddo.s:1860   .text:0000000000000528 .L0 
     /tmp/ccB4Vddo.s:1864   .text:0000000000000528 .L0 
     /tmp/ccB4Vddo.s:1865   .text:0000000000000528 .L0 
     /tmp/ccB4Vddo.s:1866   .text:0000000000000528 .L0 
  src/../h/Riscv.hpp:103    .text:0000000000000528 .L0 
     /tmp/ccB4Vddo.s:1874   .text:0000000000000530 .L0 
     /tmp/ccB4Vddo.s:1875   .text:0000000000000530 .L0 
     /tmp/ccB4Vddo.s:1880   .text:0000000000000534 .L0 
     /tmp/ccB4Vddo.s:1885   .text:0000000000000544 .L0 
     /tmp/ccB4Vddo.s:1892   .text:0000000000000554 .L0 
     /tmp/ccB4Vddo.s:1893   .text:0000000000000558 .L0 
     /tmp/ccB4Vddo.s:1894   .text:0000000000000558 .L0 
     /tmp/ccB4Vddo.s:1896   .text:000000000000055c .L0 
     /tmp/ccB4Vddo.s:1897   .text:000000000000055c .L0 
     /tmp/ccB4Vddo.s:1899   .text:0000000000000560 .L0 
     /tmp/ccB4Vddo.s:1903   .text:0000000000000564 .L0 
     /tmp/ccB4Vddo.s:1905   .text:0000000000000564 .L0 
     /tmp/ccB4Vddo.s:1906   .text:0000000000000564 .L0 
GAS LISTING /tmp/ccB4Vddo.s 			page 63


     /tmp/ccB4Vddo.s:1911   .text:000000000000056c .L0 
     /tmp/ccB4Vddo.s:1912   .text:000000000000056c .L0 
     /tmp/ccB4Vddo.s:1913   .text:000000000000056c .L0 
     /tmp/ccB4Vddo.s:1920   .text:0000000000000574 .L0 
     /tmp/ccB4Vddo.s:1928   .text:0000000000000578 .L0 
     /tmp/ccB4Vddo.s:1929   .text:0000000000000578 .L0 
     /tmp/ccB4Vddo.s:1930   .text:0000000000000578 .L0 
     /tmp/ccB4Vddo.s:1940   .text:0000000000000580 .L0 
     /tmp/ccB4Vddo.s:1941   .text:0000000000000584 .L0 
     /tmp/ccB4Vddo.s:1949   .bss:0000000000000000 _ZN5Riscv9privilegeE
     /tmp/ccB4Vddo.s:1946   .bss:0000000000000000 .LANCHOR0
     /tmp/ccB4Vddo.s:1958   .text:0000000000000584 .L0 
     /tmp/ccB4Vddo.s:97     .text:0000000000000060 .L0 
     /tmp/ccB4Vddo.s:137    .text:0000000000000084 .L0 
     /tmp/ccB4Vddo.s:536    .text:000000000000016c .L0 
     /tmp/ccB4Vddo.s:556    .text:0000000000000180 .L0 
     /tmp/ccB4Vddo.s:1010   .text:00000000000002b4 .L0 
     /tmp/ccB4Vddo.s:1167   .text:0000000000000328 .L0 
     /tmp/ccB4Vddo.s:1759   .text:00000000000004e8 .L0 
     /tmp/ccB4Vddo.s:1779   .text:00000000000004fc .L0 
     /tmp/ccB4Vddo.s:154    .text:0000000000000098 .L28
     /tmp/ccB4Vddo.s:198    .text:00000000000000c8 .L6
     /tmp/ccB4Vddo.s:171    .text:00000000000000a0 .L3
     /tmp/ccB4Vddo.s:615    .text:0000000000000198 .L29
     /tmp/ccB4Vddo.s:625    .text:00000000000001a4 .L30
     /tmp/ccB4Vddo.s:770    .text:000000000000021c .L31
     /tmp/ccB4Vddo.s:867    .text:000000000000025c .L32
     /tmp/ccB4Vddo.s:963    .text:0000000000000298 .L33
     /tmp/ccB4Vddo.s:1045   .text:00000000000002dc .L34
     /tmp/ccB4Vddo.s:1120   .text:000000000000030c .L35
     /tmp/ccB4Vddo.s:1199   .text:0000000000000348 .L36
     /tmp/ccB4Vddo.s:1348   .text:00000000000003b8 .L37
     /tmp/ccB4Vddo.s:1514   .text:0000000000000450 .L38
     /tmp/ccB4Vddo.s:1612   .text:000000000000048c .L39
     /tmp/ccB4Vddo.s:1712   .text:00000000000004cc .L40
     /tmp/ccB4Vddo.s:763    .text:0000000000000214 .L25
     /tmp/ccB4Vddo.s:235    .text:00000000000000ec .L8
     /tmp/ccB4Vddo.s:727    .text:0000000000000204 .L9
     /tmp/ccB4Vddo.s:1341   .text:00000000000003b0 .L26
     /tmp/ccB4Vddo.s:1305   .text:00000000000003a0 .L16
     /tmp/ccB4Vddo.s:1441   .text:000000000000040c .L20
     /tmp/ccB4Vddo.s:1473   .text:0000000000000430 .L18
     /tmp/ccB4Vddo.s:1407   .text:00000000000003e0 .L19
     /tmp/ccB4Vddo.s:1487   .text:0000000000000444 .L21
     /tmp/ccB4Vddo.s:1902   .text:0000000000000564 .L45
     /tmp/ccB4Vddo.s:1922   .text:0000000000000578 .L46
     /tmp/ccB4Vddo.s:1890   .text:0000000000000554 .L41
     /tmp/ccB4Vddo.s:5047   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccB4Vddo.s:7385   .debug_str:0000000000000b0f .LASF214
     /tmp/ccB4Vddo.s:7093   .debug_str:0000000000000177 .LASF215
     /tmp/ccB4Vddo.s:7243   .debug_str:0000000000000690 .LASF216
     /tmp/ccB4Vddo.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccB4Vddo.s:1952   .text:0000000000000584 .Letext0
     /tmp/ccB4Vddo.s:7037   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccB4Vddo.s:7175   .debug_str:0000000000000448 .LASF0
     /tmp/ccB4Vddo.s:7219   .debug_str:0000000000000602 .LASF1
     /tmp/ccB4Vddo.s:7317   .debug_str:0000000000000944 .LASF2
GAS LISTING /tmp/ccB4Vddo.s 			page 64


     /tmp/ccB4Vddo.s:7329   .debug_str:00000000000009b2 .LASF4
     /tmp/ccB4Vddo.s:7191   .debug_str:00000000000004bf .LASF3
     /tmp/ccB4Vddo.s:7051   .debug_str:0000000000000057 .LASF5
     /tmp/ccB4Vddo.s:7273   .debug_str:000000000000079f .LASF6
     /tmp/ccB4Vddo.s:7207   .debug_str:00000000000005a0 .LASF7
     /tmp/ccB4Vddo.s:7143   .debug_str:0000000000000336 .LASF8
     /tmp/ccB4Vddo.s:7151   .debug_str:0000000000000378 .LASF9
     /tmp/ccB4Vddo.s:7081   .debug_str:000000000000011c .LASF10
     /tmp/ccB4Vddo.s:7131   .debug_str:00000000000002d4 .LASF11
     /tmp/ccB4Vddo.s:7095   .debug_str:0000000000000185 .LASF12
     /tmp/ccB4Vddo.s:7079   .debug_str:000000000000010c .LASF13
     /tmp/ccB4Vddo.s:7359   .debug_str:0000000000000a86 .LASF14
     /tmp/ccB4Vddo.s:7115   .debug_str:0000000000000228 .LASF15
     /tmp/ccB4Vddo.s:7349   .debug_str:0000000000000a50 .LASF16
     /tmp/ccB4Vddo.s:7435   .debug_str:0000000000000d2f .LASF70
     /tmp/ccB4Vddo.s:7297   .debug_str:0000000000000895 .LASF20
     /tmp/ccB4Vddo.s:7223   .debug_str:000000000000061b .LASF17
     /tmp/ccB4Vddo.s:7121   .debug_str:000000000000027c .LASF18
     /tmp/ccB4Vddo.s:7451   .debug_str:0000000000000d95 .LASF19
     /tmp/ccB4Vddo.s:7419   .debug_str:0000000000000ca7 .LASF21
     /tmp/ccB4Vddo.s:7125   .debug_str:0000000000000290 .LASF22
     /tmp/ccB4Vddo.s:7383   .debug_str:0000000000000b02 .LASF23
     /tmp/ccB4Vddo.s:7101   .debug_str:00000000000001ba .LASF24
     /tmp/ccB4Vddo.s:7343   .debug_str:0000000000000a22 .LASF152
     /tmp/ccB4Vddo.s:7163   .debug_str:00000000000003f1 .LASF57
     /tmp/ccB4Vddo.s:7173   .debug_str:0000000000000430 .LASF59
     /tmp/ccB4Vddo.s:7411   .debug_str:0000000000000c73 .LASF25
     /tmp/ccB4Vddo.s:7401   .debug_str:0000000000000c38 .LASF27
     /tmp/ccB4Vddo.s:7311   .debug_str:000000000000091e .LASF29
     /tmp/ccB4Vddo.s:7261   .debug_str:0000000000000734 .LASF31
     /tmp/ccB4Vddo.s:7289   .debug_str:000000000000084c .LASF26
     /tmp/ccB4Vddo.s:7291   .debug_str:0000000000000853 .LASF28
     /tmp/ccB4Vddo.s:7257   .debug_str:0000000000000719 .LASF30
     /tmp/ccB4Vddo.s:7211   .debug_str:00000000000005d5 .LASF32
     /tmp/ccB4Vddo.s:7447   .debug_str:0000000000000d81 .LASF33
     /tmp/ccB4Vddo.s:7391   .debug_str:0000000000000bed .LASF34
     /tmp/ccB4Vddo.s:7253   .debug_str:000000000000070c .LASF35
     /tmp/ccB4Vddo.s:7259   .debug_str:0000000000000720 .LASF36
     /tmp/ccB4Vddo.s:7225   .debug_str:0000000000000624 .LASF37
     /tmp/ccB4Vddo.s:7295   .debug_str:0000000000000881 .LASF38
     /tmp/ccB4Vddo.s:7475   .debug_str:0000000000000e63 .LASF39
     /tmp/ccB4Vddo.s:7181   .debug_str:0000000000000460 .LASF40
     /tmp/ccB4Vddo.s:7355   .debug_str:0000000000000a72 .LASF41
     /tmp/ccB4Vddo.s:7333   .debug_str:00000000000009df .LASF42
     /tmp/ccB4Vddo.s:7335   .debug_str:00000000000009f2 .LASF43
     /tmp/ccB4Vddo.s:7085   .debug_str:0000000000000130 .LASF44
     /tmp/ccB4Vddo.s:7111   .debug_str:0000000000000203 .LASF45
     /tmp/ccB4Vddo.s:7169   .debug_str:0000000000000409 .LASF46
     /tmp/ccB4Vddo.s:7179   .debug_str:000000000000045a .LASF47
     /tmp/ccB4Vddo.s:7103   .debug_str:00000000000001c6 .LASF48
     /tmp/ccB4Vddo.s:7053   .debug_str:000000000000005e .LASF49
     /tmp/ccB4Vddo.s:7323   .debug_str:0000000000000968 .LASF50
     /tmp/ccB4Vddo.s:7315   .debug_str:0000000000000939 .LASF51
     /tmp/ccB4Vddo.s:7467   .debug_str:0000000000000e18 .LASF52
     /tmp/ccB4Vddo.s:7439   .debug_str:0000000000000d3a .LASF53
     /tmp/ccB4Vddo.s:7453   .debug_str:0000000000000d9e .LASF54
     /tmp/ccB4Vddo.s:7433   .debug_str:0000000000000d25 .LASF55
GAS LISTING /tmp/ccB4Vddo.s 			page 65


     /tmp/ccB4Vddo.s:7245   .debug_str:00000000000006c0 .LASF56
     /tmp/ccB4Vddo.s:7445   .debug_str:0000000000000d72 .LASF58
     /tmp/ccB4Vddo.s:7149   .debug_str:000000000000035c .LASF60
     /tmp/ccB4Vddo.s:7319   .debug_str:0000000000000952 .LASF61
     /tmp/ccB4Vddo.s:7469   .debug_str:0000000000000e30 .LASF62
     /tmp/ccB4Vddo.s:7123   .debug_str:0000000000000285 .LASF63
     /tmp/ccB4Vddo.s:7139   .debug_str:0000000000000314 .LASF64
     /tmp/ccB4Vddo.s:7275   .debug_str:00000000000007b2 .LASF65
     /tmp/ccB4Vddo.s:7203   .debug_str:0000000000000561 .LASF67
     /tmp/ccB4Vddo.s:7313   .debug_str:0000000000000927 .LASF66
     /tmp/ccB4Vddo.s:7113   .debug_str:0000000000000209 .LASF68
     /tmp/ccB4Vddo.s:7237   .debug_str:000000000000066a .LASF69
     /tmp/ccB4Vddo.s:7443   .debug_str:0000000000000d4e .LASF71
     /tmp/ccB4Vddo.s:7429   .debug_str:0000000000000d00 .LASF105
     /tmp/ccB4Vddo.s:7217   .debug_str:00000000000005fd .LASF72
     /tmp/ccB4Vddo.s:7083   .debug_str:000000000000012b .LASF73
     /tmp/ccB4Vddo.s:7059   .debug_str:0000000000000089 .LASF74
     /tmp/ccB4Vddo.s:7187   .debug_str:0000000000000484 .LASF107
     /tmp/ccB4Vddo.s:7353   .debug_str:0000000000000a6d .LASF75
     /tmp/ccB4Vddo.s:7255   .debug_str:0000000000000714 .LASF76
     /tmp/ccB4Vddo.s:7471   .debug_str:0000000000000e49 .LASF77
     /tmp/ccB4Vddo.s:7325   .debug_str:0000000000000980 .LASF80
     /tmp/ccB4Vddo.s:7129   .debug_str:00000000000002b3 .LASF78
     /tmp/ccB4Vddo.s:7321   .debug_str:000000000000095e .LASF79
     /tmp/ccB4Vddo.s:7303   .debug_str:00000000000008c5 .LASF81
     /tmp/ccB4Vddo.s:7267   .debug_str:000000000000076c .LASF82
     /tmp/ccB4Vddo.s:7449   .debug_str:0000000000000d89 .LASF83
     /tmp/ccB4Vddo.s:7247   .debug_str:00000000000006d6 .LASF84
     /tmp/ccB4Vddo.s:7365   .debug_str:0000000000000aa2 .LASF85
     /tmp/ccB4Vddo.s:7073   .debug_str:00000000000000ce .LASF86
     /tmp/ccB4Vddo.s:7413   .debug_str:0000000000000c7c .LASF87
     /tmp/ccB4Vddo.s:7117   .debug_str:000000000000023e .LASF88
     /tmp/ccB4Vddo.s:7185   .debug_str:000000000000047a .LASF89
     /tmp/ccB4Vddo.s:7283   .debug_str:00000000000007f3 .LASF90
     /tmp/ccB4Vddo.s:7379   .debug_str:0000000000000af2 .LASF144
     /tmp/ccB4Vddo.s:7197   .debug_str:0000000000000511 .LASF91
     /tmp/ccB4Vddo.s:7417   .debug_str:0000000000000c8b .LASF92
     /tmp/ccB4Vddo.s:7057   .debug_str:0000000000000070 .LASF93
     /tmp/ccB4Vddo.s:7089   .debug_str:0000000000000161 .LASF94
     /tmp/ccB4Vddo.s:7395   .debug_str:0000000000000c0b .LASF95
     /tmp/ccB4Vddo.s:7301   .debug_str:00000000000008bd .LASF96
     /tmp/ccB4Vddo.s:7141   .debug_str:000000000000032c .LASF97
     /tmp/ccB4Vddo.s:7345   .debug_str:0000000000000a2c .LASF98
     /tmp/ccB4Vddo.s:7457   .debug_str:0000000000000dc4 .LASF99
     /tmp/ccB4Vddo.s:7461   .debug_str:0000000000000ddd .LASF217
     /tmp/ccB4Vddo.s:7201   .debug_str:0000000000000545 .LASF218
     /tmp/ccB4Vddo.s:7205   .debug_str:0000000000000583 .LASF100
     /tmp/ccB4Vddo.s:7077   .debug_str:00000000000000f7 .LASF101
     /tmp/ccB4Vddo.s:7327   .debug_str:000000000000099d .LASF102
     /tmp/ccB4Vddo.s:7477   .debug_str:0000000000000e6b .LASF103
     /tmp/ccB4Vddo.s:7415   .debug_str:0000000000000c86 .LASF106
     /tmp/ccB4Vddo.s:7215   .debug_str:00000000000005f8 .LASF104
     /tmp/ccB4Vddo.s:7423   .debug_str:0000000000000cd1 .LASF108
     /tmp/ccB4Vddo.s:7249   .debug_str:00000000000006fa .LASF109
     /tmp/ccB4Vddo.s:7271   .debug_str:0000000000000788 .LASF110
     /tmp/ccB4Vddo.s:7293   .debug_str:0000000000000866 .LASF111
     /tmp/ccB4Vddo.s:7161   .debug_str:00000000000003d6 .LASF219
GAS LISTING /tmp/ccB4Vddo.s 			page 66


     /tmp/ccB4Vddo.s:7241   .debug_str:0000000000000683 .LASF112
     /tmp/ccB4Vddo.s:7045   .debug_str:000000000000002b .LASF113
     /tmp/ccB4Vddo.s:7049   .debug_str:0000000000000047 .LASF114
     /tmp/ccB4Vddo.s:7199   .debug_str:000000000000052d .LASF115
     /tmp/ccB4Vddo.s:7309   .debug_str:0000000000000915 .LASF116
     /tmp/ccB4Vddo.s:7465   .debug_str:0000000000000df7 .LASF117
     /tmp/ccB4Vddo.s:7231   .debug_str:0000000000000646 .LASF118
     /tmp/ccB4Vddo.s:7431   .debug_str:0000000000000d05 .LASF119
     /tmp/ccB4Vddo.s:7269   .debug_str:000000000000077c .LASF120
     /tmp/ccB4Vddo.s:7209   .debug_str:00000000000005b3 .LASF121
     /tmp/ccB4Vddo.s:7479   .debug_str:0000000000000e79 .LASF122
     /tmp/ccB4Vddo.s:7307   .debug_str:00000000000008f6 .LASF123
     /tmp/ccB4Vddo.s:7341   .debug_str:0000000000000a17 .LASF124
     /tmp/ccB4Vddo.s:7133   .debug_str:00000000000002e3 .LASF125
     /tmp/ccB4Vddo.s:7281   .debug_str:00000000000007ea .LASF126
     /tmp/ccB4Vddo.s:7087   .debug_str:0000000000000143 .LASF127
     /tmp/ccB4Vddo.s:7061   .debug_str:000000000000008e .LASF128
     /tmp/ccB4Vddo.s:7459   .debug_str:0000000000000dd6 .LASF129
     /tmp/ccB4Vddo.s:7075   .debug_str:00000000000000f1 .LASF130
     /tmp/ccB4Vddo.s:7067   .debug_str:00000000000000a7 .LASF131
     /tmp/ccB4Vddo.s:7277   .debug_str:00000000000007c7 .LASF132
     /tmp/ccB4Vddo.s:7369   .debug_str:0000000000000ab6 .LASF133
     /tmp/ccB4Vddo.s:7361   .debug_str:0000000000000a92 .LASF134
     /tmp/ccB4Vddo.s:7213   .debug_str:00000000000005e8 .LASF135
     /tmp/ccB4Vddo.s:7371   .debug_str:0000000000000abe .LASF136
     /tmp/ccB4Vddo.s:7279   .debug_str:00000000000007cf .LASF137
     /tmp/ccB4Vddo.s:7065   .debug_str:000000000000009b .LASF138
     /tmp/ccB4Vddo.s:7421   .debug_str:0000000000000cb6 .LASF139
     /tmp/ccB4Vddo.s:7251   .debug_str:00000000000006ff .LASF140
     /tmp/ccB4Vddo.s:7105   .debug_str:00000000000001d8 .LASF141
     /tmp/ccB4Vddo.s:7357   .debug_str:0000000000000a79 .LASF142
     /tmp/ccB4Vddo.s:7331   .debug_str:00000000000009b9 .LASF143
     /tmp/ccB4Vddo.s:7263   .debug_str:0000000000000749 .LASF145
     /tmp/ccB4Vddo.s:7221   .debug_str:0000000000000615 .LASF146
     /tmp/ccB4Vddo.s:7041   .debug_str:0000000000000011 .LASF147
     /tmp/ccB4Vddo.s:7339   .debug_str:0000000000000a0a .LASF148
     /tmp/ccB4Vddo.s:7119   .debug_str:0000000000000260 .LASF149
     /tmp/ccB4Vddo.s:7377   .debug_str:0000000000000ae3 .LASF150
     /tmp/ccB4Vddo.s:7265   .debug_str:000000000000074e .LASF151
     /tmp/ccB4Vddo.s:7381   .debug_str:0000000000000afa .LASF153
     /tmp/ccB4Vddo.s:7183   .debug_str:0000000000000474 .LASF154
     /tmp/ccB4Vddo.s:7193   .debug_str:00000000000004d1 .LASF155
     /tmp/ccB4Vddo.s:7091   .debug_str:000000000000016a .LASF156
     /tmp/ccB4Vddo.s:7397   .debug_str:0000000000000c14 .LASF157
     /tmp/ccB4Vddo.s:7305   .debug_str:00000000000008e6 .LASF158
     /tmp/ccB4Vddo.s:7071   .debug_str:00000000000000be .LASF159
     /tmp/ccB4Vddo.s:7455   .debug_str:0000000000000db4 .LASF160
     /tmp/ccB4Vddo.s:7389   .debug_str:0000000000000bdc .LASF161
     /tmp/ccB4Vddo.s:7347   .debug_str:0000000000000a3d .LASF162
     /tmp/ccB4Vddo.s:7039   .debug_str:0000000000000000 .LASF163
     /tmp/ccB4Vddo.s:7157   .debug_str:00000000000003b3 .LASF164
     /tmp/ccB4Vddo.s:7047   .debug_str:0000000000000042 .LASF165
     /tmp/ccB4Vddo.s:7463   .debug_str:0000000000000df1 .LASF166
     /tmp/ccB4Vddo.s:7399   .debug_str:0000000000000c30 .LASF167
     /tmp/ccB4Vddo.s:7393   .debug_str:0000000000000c01 .LASF168
     /tmp/ccB4Vddo.s:7367   .debug_str:0000000000000aad .LASF169
     /tmp/ccB4Vddo.s:7441   .debug_str:0000000000000d44 .LASF170
GAS LISTING /tmp/ccB4Vddo.s 			page 67


     /tmp/ccB4Vddo.s:7069   .debug_str:00000000000000b0 .LASF171
     /tmp/ccB4Vddo.s:7299   .debug_str:00000000000008a0 .LASF172
     /tmp/ccB4Vddo.s:7097   .debug_str:0000000000000195 .LASF173
     /tmp/ccB4Vddo.s:7195   .debug_str:00000000000004e5 .LASF174
     /tmp/ccB4Vddo.s:7107   .debug_str:00000000000001f5 .LASF175
     /tmp/ccB4Vddo.s:7099   .debug_str:00000000000001a3 .LASF176
     /tmp/ccB4Vddo.s:7337   .debug_str:00000000000009f9 .LASF177
     /tmp/ccB4Vddo.s:7387   .debug_str:0000000000000bd3 .LASF178
     /tmp/ccB4Vddo.s:7427   .debug_str:0000000000000cf9 .LASF179
     /tmp/ccB4Vddo.s:7473   .debug_str:0000000000000e5a .LASF180
     /tmp/ccB4Vddo.s:7137   .debug_str:0000000000000309 .LASF181
     /tmp/ccB4Vddo.s:7153   .debug_str:0000000000000386 .LASF182
     /tmp/ccB4Vddo.s:7109   .debug_str:00000000000001fe .LASF183
     /tmp/ccB4Vddo.s:7403   .debug_str:0000000000000c4d .LASF184
     /tmp/ccB4Vddo.s:7363   .debug_str:0000000000000a9b .LASF185
     /tmp/ccB4Vddo.s:7189   .debug_str:00000000000004a6 .LASF186
     /tmp/ccB4Vddo.s:7165   .debug_str:00000000000003fc .LASF187
     /tmp/ccB4Vddo.s:7155   .debug_str:000000000000039a .LASF188
     /tmp/ccB4Vddo.s:7239   .debug_str:000000000000066f .LASF189
     /tmp/ccB4Vddo.s:7229   .debug_str:0000000000000632 .LASF190
     /tmp/ccB4Vddo.s:7171   .debug_str:000000000000041b .LASF191
     /tmp/ccB4Vddo.s:7373   .debug_str:0000000000000ac9 .LASF192
     /tmp/ccB4Vddo.s:7055   .debug_str:0000000000000069 .LASF193
     /tmp/ccB4Vddo.s:7285   .debug_str:0000000000000830 .LASF194
     /tmp/ccB4Vddo.s:7145   .debug_str:0000000000000346 .LASF195
     /tmp/ccB4Vddo.s:7375   .debug_str:0000000000000ade .LASF196
     /tmp/ccB4Vddo.s:7233   .debug_str:000000000000064e .LASF220
     /tmp/ccB4Vddo.s:7135   .debug_str:0000000000000304 .LASF198
     /tmp/ccB4Vddo.s:7177   .debug_str:0000000000000455 .LASF197
     /tmp/ccB4Vddo.s:7127   .debug_str:000000000000029c .LASF206
     /tmp/ccB4Vddo.s:1850   .text:0000000000000518 .LFB53
     /tmp/ccB4Vddo.s:1942   .text:0000000000000584 .LFE53
     /tmp/ccB4Vddo.s:7351   .debug_str:0000000000000a66 .LASF199
     /tmp/ccB4Vddo.s:6313   .debug_loc:0000000000000000 .LLST80
     /tmp/ccB4Vddo.s:1862   .text:0000000000000528 .LBB449
     /tmp/ccB4Vddo.s:1878   .text:0000000000000534 .LBE449
     /tmp/ccB4Vddo.s:1909   .text:000000000000056c .LBB451
     /tmp/ccB4Vddo.s:1924   .text:0000000000000578 .LBE451
     /tmp/ccB4Vddo.s:6328   .debug_loc:0000000000000049 .LLST81
     /tmp/ccB4Vddo.s:1926   .text:0000000000000578 .LBB453
     /tmp/ccB4Vddo.s:1938   .text:0000000000000580 .LBE453
     /tmp/ccB4Vddo.s:6337   .debug_loc:000000000000006f .LLST82
     /tmp/ccB4Vddo.s:1907   .text:000000000000056c .LVL131
     /tmp/ccB4Vddo.s:34     .text:0000000000000018 .LFB52
     /tmp/ccB4Vddo.s:1844   .text:0000000000000518 .LFE52
     /tmp/ccB4Vddo.s:6345   .debug_loc:0000000000000093 .LLST0
     /tmp/ccB4Vddo.s:7043   .debug_str:0000000000000025 .LASF200
     /tmp/ccB4Vddo.s:6376   .debug_loc:0000000000000119 .LLST1
     /tmp/ccB4Vddo.s:7405   .debug_str:0000000000000c64 .LASF201
     /tmp/ccB4Vddo.s:6427   .debug_loc:000000000000020d .LLST2
     /tmp/ccB4Vddo.s:100    .text:000000000000006c .LBB172
     /tmp/ccB4Vddo.s:157    .text:0000000000000098 .LBE172
     /tmp/ccB4Vddo.s:7437   .debug_str:0000000000000d35 .LASF202
     /tmp/ccB4Vddo.s:6438   .debug_loc:0000000000000243 .LLST3
     /tmp/ccB4Vddo.s:102    .text:000000000000006c .LBB173
     /tmp/ccB4Vddo.s:118    .text:0000000000000078 .LBE173
     /tmp/ccB4Vddo.s:120    .text:0000000000000078 .LBB175
GAS LISTING /tmp/ccB4Vddo.s 			page 68


     /tmp/ccB4Vddo.s:133    .text:0000000000000080 .LBE175
     /tmp/ccB4Vddo.s:6451   .debug_loc:000000000000027b .LLST4
     /tmp/ccB4Vddo.s:142    .text:0000000000000090 .LBB177
     /tmp/ccB4Vddo.s:156    .text:0000000000000098 .LBE177
     /tmp/ccB4Vddo.s:6460   .debug_loc:00000000000002a1 .LLST5
     /tmp/ccB4Vddo.s:628    .text:00000000000001a4 .LBB182
     /tmp/ccB4Vddo.s:771    .text:000000000000021c .LBE182
     /tmp/ccB4Vddo.s:6467   .debug_loc:00000000000002c4 .LLST6
     /tmp/ccB4Vddo.s:7159   .debug_str:00000000000003ce .LASF203
     /tmp/ccB4Vddo.s:6474   .debug_loc:00000000000002e7 .LLST7
     /tmp/ccB4Vddo.s:6481   .debug_loc:000000000000030a .LLST8
     /tmp/ccB4Vddo.s:7407   .debug_str:0000000000000c69 .LASF204
     /tmp/ccB4Vddo.s:6488   .debug_loc:000000000000032d .LLST9
     /tmp/ccB4Vddo.s:7409   .debug_str:0000000000000c6e .LASF205
     /tmp/ccB4Vddo.s:6495   .debug_loc:0000000000000350 .LLST10
     /tmp/ccB4Vddo.s:6502   .debug_loc:0000000000000373 .LLST11
     /tmp/ccB4Vddo.s:6513   .debug_loc:00000000000003a9 .LLST12
     /tmp/ccB4Vddo.s:6520   .debug_loc:00000000000003cc .LLST13
     /tmp/ccB4Vddo.s:630    .text:00000000000001a4 .LBB183
     /tmp/ccB4Vddo.s:645    .text:00000000000001b0 .LBE183
     /tmp/ccB4Vddo.s:650    .text:00000000000001b4 .LBB185
     /tmp/ccB4Vddo.s:666    .text:00000000000001c0 .LBE185
     /tmp/ccB4Vddo.s:738    .text:0000000000000208 .LBB187
     /tmp/ccB4Vddo.s:749    .text:000000000000020c .LBE187
     /tmp/ccB4Vddo.s:6527   .debug_loc:00000000000003ef .LLST14
     /tmp/ccB4Vddo.s:751    .text:000000000000020c .LBB189
     /tmp/ccB4Vddo.s:765    .text:0000000000000214 .LBE189
     /tmp/ccB4Vddo.s:6534   .debug_loc:0000000000000412 .LLST15
     /tmp/ccB4Vddo.s:709    .text:00000000000001e4 .LVL30
     /tmp/ccB4Vddo.s:718    .text:00000000000001f8 .LVL33
     /tmp/ccB4Vddo.s:774    .text:000000000000021c .LBB367
     /tmp/ccB4Vddo.s:870    .text:000000000000025c .LBE367
     /tmp/ccB4Vddo.s:6541   .debug_loc:0000000000000435 .LLST74
     /tmp/ccB4Vddo.s:6548   .debug_loc:0000000000000458 .LLST75
     /tmp/ccB4Vddo.s:6555   .debug_loc:000000000000047b .LLST76
     /tmp/ccB4Vddo.s:776    .text:000000000000021c .LBB368
     /tmp/ccB4Vddo.s:792    .text:0000000000000228 .LBE368
     /tmp/ccB4Vddo.s:797    .text:000000000000022c .LBB370
     /tmp/ccB4Vddo.s:813    .text:0000000000000238 .LBE370
     /tmp/ccB4Vddo.s:842    .text:0000000000000250 .LBB372
     /tmp/ccB4Vddo.s:853    .text:0000000000000254 .LBE372
     /tmp/ccB4Vddo.s:6562   .debug_loc:000000000000049e .LLST77
     /tmp/ccB4Vddo.s:855    .text:0000000000000254 .LBB374
     /tmp/ccB4Vddo.s:869    .text:000000000000025c .LBE374
     /tmp/ccB4Vddo.s:6569   .debug_loc:00000000000004c1 .LLST78
     /tmp/ccB4Vddo.s:832    .text:000000000000024c .LVL44
     /tmp/ccB4Vddo.s:872    .text:000000000000025c .LBB348
     /tmp/ccB4Vddo.s:966    .text:0000000000000298 .LBE348
     /tmp/ccB4Vddo.s:6576   .debug_loc:00000000000004e4 .LLST69
     /tmp/ccB4Vddo.s:6583   .debug_loc:0000000000000507 .LLST70
     /tmp/ccB4Vddo.s:6590   .debug_loc:000000000000052a .LLST71
     /tmp/ccB4Vddo.s:874    .text:000000000000025c .LBB349
     /tmp/ccB4Vddo.s:890    .text:0000000000000268 .LBE349
     /tmp/ccB4Vddo.s:895    .text:000000000000026c .LBB351
     /tmp/ccB4Vddo.s:911    .text:0000000000000278 .LBE351
     /tmp/ccB4Vddo.s:938    .text:000000000000028c .LBB353
     /tmp/ccB4Vddo.s:949    .text:0000000000000290 .LBE353
GAS LISTING /tmp/ccB4Vddo.s 			page 69


     /tmp/ccB4Vddo.s:6597   .debug_loc:000000000000054d .LLST72
     /tmp/ccB4Vddo.s:951    .text:0000000000000290 .LBB355
     /tmp/ccB4Vddo.s:965    .text:0000000000000298 .LBE355
     /tmp/ccB4Vddo.s:6604   .debug_loc:0000000000000570 .LLST73
     /tmp/ccB4Vddo.s:928    .text:0000000000000288 .LVL52
     /tmp/ccB4Vddo.s:968    .text:0000000000000298 .LBB330
     /tmp/ccB4Vddo.s:1048   .text:00000000000002dc .LBE330
     /tmp/ccB4Vddo.s:6611   .debug_loc:0000000000000593 .LLST65
     /tmp/ccB4Vddo.s:6618   .debug_loc:00000000000005b6 .LLST66
     /tmp/ccB4Vddo.s:970    .text:0000000000000298 .LBB331
     /tmp/ccB4Vddo.s:986    .text:00000000000002a4 .LBE331
     /tmp/ccB4Vddo.s:991    .text:00000000000002a8 .LBB333
     /tmp/ccB4Vddo.s:1007   .text:00000000000002b4 .LBE333
     /tmp/ccB4Vddo.s:1020   .text:00000000000002d0 .LBB335
     /tmp/ccB4Vddo.s:1031   .text:00000000000002d4 .LBE335
     /tmp/ccB4Vddo.s:6625   .debug_loc:00000000000005d9 .LLST67
     /tmp/ccB4Vddo.s:1033   .text:00000000000002d4 .LBB337
     /tmp/ccB4Vddo.s:1047   .text:00000000000002dc .LBE337
     /tmp/ccB4Vddo.s:6632   .debug_loc:00000000000005fc .LLST68
     /tmp/ccB4Vddo.s:1018   .text:00000000000002d0 .LVL59
     /tmp/ccB4Vddo.s:1050   .text:00000000000002dc .LBB313
     /tmp/ccB4Vddo.s:1123   .text:000000000000030c .LBE313
     /tmp/ccB4Vddo.s:6639   .debug_loc:000000000000061f .LLST61
     /tmp/ccB4Vddo.s:6646   .debug_loc:0000000000000642 .LLST62
     /tmp/ccB4Vddo.s:1052   .text:00000000000002dc .LBB314
     /tmp/ccB4Vddo.s:1068   .text:00000000000002e8 .LBE314
     /tmp/ccB4Vddo.s:1073   .text:00000000000002ec .LBB316
     /tmp/ccB4Vddo.s:1089   .text:00000000000002f8 .LBE316
     /tmp/ccB4Vddo.s:1095   .text:0000000000000300 .LBB318
     /tmp/ccB4Vddo.s:1106   .text:0000000000000304 .LBE318
     /tmp/ccB4Vddo.s:6653   .debug_loc:0000000000000665 .LLST63
     /tmp/ccB4Vddo.s:1108   .text:0000000000000304 .LBB320
     /tmp/ccB4Vddo.s:1122   .text:000000000000030c .LBE320
     /tmp/ccB4Vddo.s:6660   .debug_loc:0000000000000688 .LLST64
     /tmp/ccB4Vddo.s:1093   .text:0000000000000300 .LVL65
     /tmp/ccB4Vddo.s:1125   .text:000000000000030c .LBB297
     /tmp/ccB4Vddo.s:1202   .text:0000000000000348 .LBE297
     /tmp/ccB4Vddo.s:6667   .debug_loc:00000000000006ab .LLST57
     /tmp/ccB4Vddo.s:6674   .debug_loc:00000000000006ce .LLST58
     /tmp/ccB4Vddo.s:1127   .text:000000000000030c .LBB298
     /tmp/ccB4Vddo.s:1143   .text:0000000000000318 .LBE298
     /tmp/ccB4Vddo.s:1148   .text:000000000000031c .LBB300
     /tmp/ccB4Vddo.s:1164   .text:0000000000000328 .LBE300
     /tmp/ccB4Vddo.s:1174   .text:000000000000033c .LBB302
     /tmp/ccB4Vddo.s:1185   .text:0000000000000340 .LBE302
     /tmp/ccB4Vddo.s:6681   .debug_loc:00000000000006f1 .LLST59
     /tmp/ccB4Vddo.s:1187   .text:0000000000000340 .LBB304
     /tmp/ccB4Vddo.s:1201   .text:0000000000000348 .LBE304
     /tmp/ccB4Vddo.s:6688   .debug_loc:0000000000000714 .LLST60
     /tmp/ccB4Vddo.s:1172   .text:000000000000033c .LVL71
     /tmp/ccB4Vddo.s:1204   .text:0000000000000348 .LBB278
     /tmp/ccB4Vddo.s:1349   .text:00000000000003b8 .LBE278
     /tmp/ccB4Vddo.s:6695   .debug_loc:0000000000000737 .LLST46
     /tmp/ccB4Vddo.s:6702   .debug_loc:000000000000075a .LLST47
     /tmp/ccB4Vddo.s:6709   .debug_loc:000000000000077d .LLST48
     /tmp/ccB4Vddo.s:6716   .debug_loc:00000000000007a0 .LLST49
     /tmp/ccB4Vddo.s:6723   .debug_loc:00000000000007c3 .LLST50
GAS LISTING /tmp/ccB4Vddo.s 			page 70


     /tmp/ccB4Vddo.s:6730   .debug_loc:00000000000007e6 .LLST51
     /tmp/ccB4Vddo.s:1206   .text:0000000000000348 .LBB279
     /tmp/ccB4Vddo.s:1222   .text:0000000000000354 .LBE279
     /tmp/ccB4Vddo.s:1227   .text:0000000000000358 .LBB281
     /tmp/ccB4Vddo.s:1243   .text:0000000000000364 .LBE281
     /tmp/ccB4Vddo.s:1275   .text:0000000000000380 .LBB283
     /tmp/ccB4Vddo.s:1291   .text:000000000000038c .LBE283
     /tmp/ccB4Vddo.s:6747   .debug_loc:0000000000000831 .LLST52
     /tmp/ccB4Vddo.s:6754   .debug_loc:0000000000000854 .LLST53
     /tmp/ccB4Vddo.s:1281   .text:0000000000000384 .LBB285
     /tmp/ccB4Vddo.s:1289   .text:000000000000038c .LBE285
     /tmp/ccB4Vddo.s:6761   .debug_loc:0000000000000877 .LLST54
     /tmp/ccB4Vddo.s:1316   .text:00000000000003a4 .LBB287
     /tmp/ccB4Vddo.s:1327   .text:00000000000003a8 .LBE287
     /tmp/ccB4Vddo.s:6770   .debug_loc:000000000000089c .LLST55
     /tmp/ccB4Vddo.s:1329   .text:00000000000003a8 .LBB289
     /tmp/ccB4Vddo.s:1343   .text:00000000000003b0 .LBE289
     /tmp/ccB4Vddo.s:6777   .debug_loc:00000000000008bf .LLST56
     /tmp/ccB4Vddo.s:1274   .text:0000000000000380 .LVL79
     /tmp/ccB4Vddo.s:1351   .text:00000000000003b8 .LBB254
     /tmp/ccB4Vddo.s:1517   .text:0000000000000450 .LBE254
     /tmp/ccB4Vddo.s:6784   .debug_loc:00000000000008e2 .LLST34
     /tmp/ccB4Vddo.s:6791   .debug_loc:0000000000000905 .LLST35
     /tmp/ccB4Vddo.s:6798   .debug_loc:0000000000000928 .LLST36
     /tmp/ccB4Vddo.s:7023   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccB4Vddo.s:6805   .debug_loc:000000000000094b .LLST38
     /tmp/ccB4Vddo.s:1409   .text:00000000000003e0 .LBB260
     /tmp/ccB4Vddo.s:6812   .debug_loc:000000000000096e .LLST39
     /tmp/ccB4Vddo.s:6827   .debug_loc:00000000000009a8 .LLST40
     /tmp/ccB4Vddo.s:6838   .debug_loc:00000000000009de .LLST41
     /tmp/ccB4Vddo.s:1416   .text:00000000000003ec .LVL93
     /tmp/ccB4Vddo.s:1420   .text:00000000000003ec .LBB263
     /tmp/ccB4Vddo.s:1429   .text:00000000000003f4 .LBE263
     /tmp/ccB4Vddo.s:6845   .debug_loc:0000000000000a01 .LLST42
     /tmp/ccB4Vddo.s:1440   .text:000000000000040c .LVL95
     /tmp/ccB4Vddo.s:1353   .text:00000000000003b8 .LBB255
     /tmp/ccB4Vddo.s:1368   .text:00000000000003c4 .LBE255
     /tmp/ccB4Vddo.s:1373   .text:00000000000003c8 .LBB257
     /tmp/ccB4Vddo.s:1389   .text:00000000000003d4 .LBE257
     /tmp/ccB4Vddo.s:1445   .text:000000000000040c .LBB266
     /tmp/ccB4Vddo.s:1455   .text:0000000000000418 .LBE266
     /tmp/ccB4Vddo.s:6852   .debug_loc:0000000000000a24 .LLST43
     /tmp/ccB4Vddo.s:1489   .text:0000000000000444 .LBB269
     /tmp/ccB4Vddo.s:1500   .text:0000000000000448 .LBE269
     /tmp/ccB4Vddo.s:6861   .debug_loc:0000000000000a49 .LLST44
     /tmp/ccB4Vddo.s:1502   .text:0000000000000448 .LBB271
     /tmp/ccB4Vddo.s:1516   .text:0000000000000450 .LBE271
     /tmp/ccB4Vddo.s:6868   .debug_loc:0000000000000a6c .LLST45
     /tmp/ccB4Vddo.s:1486   .text:0000000000000444 .LVL99
     /tmp/ccB4Vddo.s:1519   .text:0000000000000450 .LBB241
     /tmp/ccB4Vddo.s:1615   .text:000000000000048c .LBE241
     /tmp/ccB4Vddo.s:6875   .debug_loc:0000000000000a8f .LLST28
     /tmp/ccB4Vddo.s:6882   .debug_loc:0000000000000ab2 .LLST29
     /tmp/ccB4Vddo.s:6889   .debug_loc:0000000000000ad5 .LLST30
     /tmp/ccB4Vddo.s:6896   .debug_loc:0000000000000af8 .LLST31
     /tmp/ccB4Vddo.s:1521   .text:0000000000000450 .LBB242
     /tmp/ccB4Vddo.s:1537   .text:000000000000045c .LBE242
GAS LISTING /tmp/ccB4Vddo.s 			page 71


     /tmp/ccB4Vddo.s:1542   .text:0000000000000460 .LBB244
     /tmp/ccB4Vddo.s:1558   .text:000000000000046c .LBE244
     /tmp/ccB4Vddo.s:1587   .text:0000000000000480 .LBB246
     /tmp/ccB4Vddo.s:1598   .text:0000000000000484 .LBE246
     /tmp/ccB4Vddo.s:6903   .debug_loc:0000000000000b1b .LLST32
     /tmp/ccB4Vddo.s:1600   .text:0000000000000484 .LBB248
     /tmp/ccB4Vddo.s:1614   .text:000000000000048c .LBE248
     /tmp/ccB4Vddo.s:6910   .debug_loc:0000000000000b3e .LLST33
     /tmp/ccB4Vddo.s:1577   .text:000000000000047c .LVL106
     /tmp/ccB4Vddo.s:1617   .text:000000000000048c .LBB229
     /tmp/ccB4Vddo.s:1715   .text:00000000000004cc .LBE229
     /tmp/ccB4Vddo.s:6917   .debug_loc:0000000000000b61 .LLST22
     /tmp/ccB4Vddo.s:6924   .debug_loc:0000000000000b84 .LLST23
     /tmp/ccB4Vddo.s:6931   .debug_loc:0000000000000ba7 .LLST24
     /tmp/ccB4Vddo.s:6938   .debug_loc:0000000000000bca .LLST25
     /tmp/ccB4Vddo.s:1619   .text:000000000000048c .LBB230
     /tmp/ccB4Vddo.s:1635   .text:0000000000000498 .LBE230
     /tmp/ccB4Vddo.s:1640   .text:000000000000049c .LBB232
     /tmp/ccB4Vddo.s:1656   .text:00000000000004a8 .LBE232
     /tmp/ccB4Vddo.s:1687   .text:00000000000004c0 .LBB234
     /tmp/ccB4Vddo.s:1698   .text:00000000000004c4 .LBE234
     /tmp/ccB4Vddo.s:6946   .debug_loc:0000000000000bee .LLST26
     /tmp/ccB4Vddo.s:1700   .text:00000000000004c4 .LBB236
     /tmp/ccB4Vddo.s:1714   .text:00000000000004cc .LBE236
     /tmp/ccB4Vddo.s:6953   .debug_loc:0000000000000c11 .LLST27
     /tmp/ccB4Vddo.s:1675   .text:00000000000004b8 .LVL114
     /tmp/ccB4Vddo.s:1717   .text:00000000000004cc .LBB215
     /tmp/ccB4Vddo.s:1828   .text:0000000000000518 .LBE215
     /tmp/ccB4Vddo.s:1719   .text:00000000000004cc .LBB216
     /tmp/ccB4Vddo.s:1735   .text:00000000000004d8 .LBE216
     /tmp/ccB4Vddo.s:1740   .text:00000000000004dc .LBB218
     /tmp/ccB4Vddo.s:1756   .text:00000000000004e8 .LBE218
     /tmp/ccB4Vddo.s:1761   .text:00000000000004f0 .LBB220
     /tmp/ccB4Vddo.s:1772   .text:00000000000004f4 .LBE220
     /tmp/ccB4Vddo.s:1781   .text:0000000000000504 .LBB222
     /tmp/ccB4Vddo.s:1792   .text:0000000000000508 .LBE222
     /tmp/ccB4Vddo.s:1802   .text:000000000000050c .LBB224
     /tmp/ccB4Vddo.s:1813   .text:0000000000000510 .LBE224
     /tmp/ccB4Vddo.s:6960   .debug_loc:0000000000000c34 .LLST21
     /tmp/ccB4Vddo.s:1815   .text:0000000000000510 .LBB226
     /tmp/ccB4Vddo.s:1827   .text:0000000000000518 .LBE226
     /tmp/ccB4Vddo.s:1776   .text:00000000000004fc .LVL123
     /tmp/ccB4Vddo.s:479    .text:0000000000000144 .LBB202
     /tmp/ccB4Vddo.s:596    .text:0000000000000194 .LBE202
     /tmp/ccB4Vddo.s:6967   .debug_loc:0000000000000c57 .LLST16
     /tmp/ccB4Vddo.s:6974   .debug_loc:0000000000000c7a .LLST17
     /tmp/ccB4Vddo.s:6981   .debug_loc:0000000000000c9d .LLST18
     /tmp/ccB4Vddo.s:481    .text:0000000000000144 .LBB203
     /tmp/ccB4Vddo.s:497    .text:0000000000000150 .LBE203
     /tmp/ccB4Vddo.s:502    .text:0000000000000154 .LBB205
     /tmp/ccB4Vddo.s:518    .text:0000000000000160 .LBE205
     /tmp/ccB4Vddo.s:538    .text:0000000000000174 .LBB207
     /tmp/ccB4Vddo.s:549    .text:0000000000000178 .LBE207
     /tmp/ccB4Vddo.s:558    .text:0000000000000188 .LBB209
     /tmp/ccB4Vddo.s:569    .text:000000000000018c .LBE209
     /tmp/ccB4Vddo.s:571    .text:000000000000018c .LBB211
     /tmp/ccB4Vddo.s:582    .text:0000000000000190 .LBE211
GAS LISTING /tmp/ccB4Vddo.s 			page 72


     /tmp/ccB4Vddo.s:6988   .debug_loc:0000000000000cc0 .LLST19
     /tmp/ccB4Vddo.s:584    .text:0000000000000190 .LBB213
     /tmp/ccB4Vddo.s:595    .text:0000000000000194 .LBE213
     /tmp/ccB4Vddo.s:6995   .debug_loc:0000000000000ce3 .LLST20
     /tmp/ccB4Vddo.s:553    .text:0000000000000180 .LVL17
     /tmp/ccB4Vddo.s:58     .text:0000000000000040 .LBB168
     /tmp/ccB4Vddo.s:75     .text:000000000000004c .LBE168
     /tmp/ccB4Vddo.s:160    .text:0000000000000098 .LBB416
     /tmp/ccB4Vddo.s:173    .text:00000000000000a0 .LBE416
     /tmp/ccB4Vddo.s:7002   .debug_loc:0000000000000d06 .LLST79
     /tmp/ccB4Vddo.s:622    .text:00000000000001a0 .LVL23
     /tmp/ccB4Vddo.s:10     .text:0000000000000000 .LFB51
     /tmp/ccB4Vddo.s:28     .text:0000000000000018 .LFE51
     /tmp/ccB4Vddo.s:7063   .debug_str:0000000000000096 .LASF208
     /tmp/ccB4Vddo.s:7287   .debug_str:0000000000000838 .LASF207
     /tmp/ccB4Vddo.s:7425   .debug_str:0000000000000cf4 .LASF209
     /tmp/ccB4Vddo.s:7227   .debug_str:000000000000062c .LASF210
     /tmp/ccB4Vddo.s:7147   .debug_str:000000000000034c .LASF211
     /tmp/ccB4Vddo.s:7167   .debug_str:0000000000000402 .LASF212
     /tmp/ccB4Vddo.s:7235   .debug_str:0000000000000663 .LASF213
     /tmp/ccB4Vddo.s:1876   .text:0000000000000534 .LVL128
     /tmp/ccB4Vddo.s:1889   .text:0000000000000554 .LVL129
     /tmp/ccB4Vddo.s:1901   .text:0000000000000564 .LVL130
     /tmp/ccB4Vddo.s:1921   .text:0000000000000578 .LVL132
     /tmp/ccB4Vddo.s:1935   .text:0000000000000580 .LVL133
     /tmp/ccB4Vddo.s:73     .text:000000000000004c .LVL0
     /tmp/ccB4Vddo.s:125    .text:000000000000007c .LVL3
     /tmp/ccB4Vddo.s:153    .text:0000000000000098 .LVL6
     /tmp/ccB4Vddo.s:169    .text:00000000000000a0 .LVL7
     /tmp/ccB4Vddo.s:197    .text:00000000000000c8 .LVL8
     /tmp/ccB4Vddo.s:218    .text:00000000000000dc .LVL9
     /tmp/ccB4Vddo.s:234    .text:00000000000000ec .LVL10
     /tmp/ccB4Vddo.s:614    .text:0000000000000198 .LVL22
     /tmp/ccB4Vddo.s:624    .text:00000000000001a4 .LVL24
     /tmp/ccB4Vddo.s:84     .text:0000000000000050 .LVL1
     /tmp/ccB4Vddo.s:495    .text:0000000000000150 .LVL11
     /tmp/ccB4Vddo.s:790    .text:0000000000000228 .LVL39
     /tmp/ccB4Vddo.s:866    .text:000000000000025c .LVL47
     /tmp/ccB4Vddo.s:888    .text:0000000000000268 .LVL48
     /tmp/ccB4Vddo.s:962    .text:0000000000000298 .LVL55
     /tmp/ccB4Vddo.s:984    .text:00000000000002a4 .LVL56
     /tmp/ccB4Vddo.s:1044   .text:00000000000002dc .LVL61
     /tmp/ccB4Vddo.s:1066   .text:00000000000002e8 .LVL62
     /tmp/ccB4Vddo.s:1119   .text:000000000000030c .LVL67
     /tmp/ccB4Vddo.s:1141   .text:0000000000000318 .LVL68
     /tmp/ccB4Vddo.s:1198   .text:0000000000000348 .LVL73
     /tmp/ccB4Vddo.s:1220   .text:0000000000000354 .LVL74
     /tmp/ccB4Vddo.s:1347   .text:00000000000003b8 .LVL87
     /tmp/ccB4Vddo.s:1402   .text:00000000000003dc .LVL90
     /tmp/ccB4Vddo.s:1513   .text:0000000000000450 .LVL101
     /tmp/ccB4Vddo.s:1535   .text:000000000000045c .LVL102
     /tmp/ccB4Vddo.s:1611   .text:000000000000048c .LVL109
     /tmp/ccB4Vddo.s:1633   .text:0000000000000498 .LVL110
     /tmp/ccB4Vddo.s:1711   .text:00000000000004cc .LVL117
     /tmp/ccB4Vddo.s:1733   .text:00000000000004d8 .LVL118
     /tmp/ccB4Vddo.s:825    .text:0000000000000240 .LVL42
     /tmp/ccB4Vddo.s:830    .text:0000000000000244 .LVL43
GAS LISTING /tmp/ccB4Vddo.s 			page 73


     /tmp/ccB4Vddo.s:923    .text:0000000000000280 .LVL51
     /tmp/ccB4Vddo.s:116    .text:0000000000000078 .LVL2
     /tmp/ccB4Vddo.s:141    .text:0000000000000090 .LVL5
     /tmp/ccB4Vddo.s:130    .text:0000000000000080 .LVL4
     /tmp/ccB4Vddo.s:648    .text:00000000000001b4 .LVL25
     /tmp/ccB4Vddo.s:769    .text:000000000000021c .LVL38
     /tmp/ccB4Vddo.s:664    .text:00000000000001c0 .LVL26
     /tmp/ccB4Vddo.s:691    .text:00000000000001d0 .LVL27
     /tmp/ccB4Vddo.s:697    .text:00000000000001d4 .LVL28
     /tmp/ccB4Vddo.s:703    .text:00000000000001d8 .LVL29
     /tmp/ccB4Vddo.s:711    .text:00000000000001e8 .LVL31
     /tmp/ccB4Vddo.s:716    .text:00000000000001f0 .LVL32
     /tmp/ccB4Vddo.s:728    .text:0000000000000204 .LVL34
     /tmp/ccB4Vddo.s:762    .text:0000000000000214 .LVL37
     /tmp/ccB4Vddo.s:736    .text:0000000000000208 .LVL35
     /tmp/ccB4Vddo.s:746    .text:000000000000020c .LVL36
     /tmp/ccB4Vddo.s:795    .text:000000000000022c .LVL40
     /tmp/ccB4Vddo.s:811    .text:0000000000000238 .LVL41
     /tmp/ccB4Vddo.s:840    .text:0000000000000250 .LVL45
     /tmp/ccB4Vddo.s:850    .text:0000000000000254 .LVL46
     /tmp/ccB4Vddo.s:893    .text:000000000000026c .LVL49
     /tmp/ccB4Vddo.s:909    .text:0000000000000278 .LVL50
     /tmp/ccB4Vddo.s:936    .text:000000000000028c .LVL53
     /tmp/ccB4Vddo.s:946    .text:0000000000000290 .LVL54
     /tmp/ccB4Vddo.s:989    .text:00000000000002a8 .LVL57
     /tmp/ccB4Vddo.s:1005   .text:00000000000002b4 .LVL58
     /tmp/ccB4Vddo.s:1028   .text:00000000000002d4 .LVL60
     /tmp/ccB4Vddo.s:1071   .text:00000000000002ec .LVL63
     /tmp/ccB4Vddo.s:1087   .text:00000000000002f8 .LVL64
     /tmp/ccB4Vddo.s:1103   .text:0000000000000304 .LVL66
     /tmp/ccB4Vddo.s:1146   .text:000000000000031c .LVL69
     /tmp/ccB4Vddo.s:1162   .text:0000000000000328 .LVL70
     /tmp/ccB4Vddo.s:1182   .text:0000000000000340 .LVL72
     /tmp/ccB4Vddo.s:1225   .text:0000000000000358 .LVL75
     /tmp/ccB4Vddo.s:1241   .text:0000000000000364 .LVL76
     /tmp/ccB4Vddo.s:1262   .text:0000000000000370 .LVL77
     /tmp/ccB4Vddo.s:1268   .text:0000000000000374 .LVL78
     /tmp/ccB4Vddo.s:1287   .text:000000000000038c .LVL81
     /tmp/ccB4Vddo.s:1300   .text:0000000000000398 .LVL82
     /tmp/ccB4Vddo.s:1306   .text:00000000000003a0 .LVL83
     /tmp/ccB4Vddo.s:1340   .text:00000000000003b0 .LVL86
     /tmp/ccB4Vddo.s:1280   .text:0000000000000384 .LVL80
     /tmp/ccB4Vddo.s:1314   .text:00000000000003a4 .LVL84
     /tmp/ccB4Vddo.s:1324   .text:00000000000003a8 .LVL85
     /tmp/ccB4Vddo.s:1371   .text:00000000000003c8 .LVL88
     /tmp/ccB4Vddo.s:1387   .text:00000000000003d4 .LVL89
     /tmp/ccB4Vddo.s:1406   .text:00000000000003e0 .LVL91
     /tmp/ccB4Vddo.s:1460   .text:000000000000041c .LVL97
     /tmp/ccB4Vddo.s:1472   .text:0000000000000430 .LVL98
     /tmp/ccB4Vddo.s:1413   .text:00000000000003e4 .LVL92
     /tmp/ccB4Vddo.s:1427   .text:00000000000003f4 .LVL94
     /tmp/ccB4Vddo.s:1453   .text:0000000000000418 .LVL96
     /tmp/ccB4Vddo.s:1497   .text:0000000000000448 .LVL100
     /tmp/ccB4Vddo.s:1540   .text:0000000000000460 .LVL103
     /tmp/ccB4Vddo.s:1556   .text:000000000000046c .LVL104
     /tmp/ccB4Vddo.s:1571   .text:0000000000000474 .LVL105
     /tmp/ccB4Vddo.s:1585   .text:0000000000000480 .LVL107
GAS LISTING /tmp/ccB4Vddo.s 			page 74


     /tmp/ccB4Vddo.s:1595   .text:0000000000000484 .LVL108
     /tmp/ccB4Vddo.s:1638   .text:000000000000049c .LVL111
     /tmp/ccB4Vddo.s:1654   .text:00000000000004a8 .LVL112
     /tmp/ccB4Vddo.s:1669   .text:00000000000004b0 .LVL113
     /tmp/ccB4Vddo.s:1685   .text:00000000000004c0 .LVL115
     /tmp/ccB4Vddo.s:1695   .text:00000000000004c4 .LVL116
     /tmp/ccB4Vddo.s:1800   .text:000000000000050c .LVL126
     /tmp/ccB4Vddo.s:1810   .text:0000000000000510 .LVL127
     /tmp/ccB4Vddo.s:500    .text:0000000000000154 .LVL12
     /tmp/ccB4Vddo.s:516    .text:0000000000000160 .LVL13
     /tmp/ccB4Vddo.s:533    .text:000000000000016c .LVL14
     /tmp/ccB4Vddo.s:566    .text:000000000000018c .LVL19
     /tmp/ccB4Vddo.s:579    .text:0000000000000190 .LVL20
     /tmp/ccB4Vddo.s:592    .text:0000000000000194 .LVL21
     /tmp/ccB4Vddo.s:1959   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccB4Vddo.s:1408   .text:00000000000003e0 .LBB259
     /tmp/ccB4Vddo.s:1442   .text:000000000000040c .LBE259
     /tmp/ccB4Vddo.s:1458   .text:000000000000041c .LBB268
     /tmp/ccB4Vddo.s:1476   .text:0000000000000430 .LBE268
     /tmp/ccB4Vddo.s:1418   .text:00000000000003ec .LBE260
     /tmp/ccB4Vddo.s:1461   .text:000000000000041c .LBB265
     /tmp/ccB4Vddo.s:1475   .text:0000000000000430 .LBE265

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN15MemoryAllocator10kmem_allocEm
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
