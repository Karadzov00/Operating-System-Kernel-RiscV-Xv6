GAS LISTING /tmp/ccmH7fgW.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB49:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE49:
GAS LISTING /tmp/ccmH7fgW.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB50:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101EF 		addi	sp,sp,-272
  50              		.cfi_def_cfa_offset 272
  51 0024 23341110 		sd	ra,264(sp)
  52 0028 23308110 		sd	s0,256(sp)
  53 002c 233C910E 		sd	s1,248(sp)
  54 0030 2338210F 		sd	s2,240(sp)
  55 0034 2334310F 		sd	s3,232(sp)
  56 0038 2330410F 		sd	s4,224(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040111 		addi	s0,sp,272
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB160:
  67              	.LBB161:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccmH7fgW.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/ccmH7fgW.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 233CF4EE 		sd	a5,-264(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 833784EF 		ld	a5,-264(s0)
  81              	.LBE161:
  82              	.LBE160:
  83              		.loc 1 21 28
  84 004c 9B870700 		sext.w	a5,a5
  85              	.LVL0:
  22:src/Riscv.cpp ****     uint64 a0reg;
  86              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  87              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  88              		.loc 1 24 5
  89              		.loc 1 24 49 is_stmt 0
  90              	#APP
  91              	# 24 "src/Riscv.cpp" 1
  25              	
  92              		mv s1, a0
  93              	# 0 "" 2
  94              	.LVL1:
  26:src/Riscv.cpp ****     if (scause == 0x0000000000000008UL){
  95              		.loc 1 26 5 is_stmt 1
  96              	#NO_APP
  97              	.LBB162:
  98 0054 13078000 		li	a4,8
  99 0058 6386E702 		beq	a5,a4,.L26
 100              	.LBE162:
  27:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp ****         //call from yield
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp ****         if(a0reg==0x11){
GAS LISTING /tmp/ccmH7fgW.s 			page 5


  32:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  33:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** 
  36:src/Riscv.cpp ****             _thread::thread_t *arg1;
  37:src/Riscv.cpp ****             _thread::Body arg2;
  38:src/Riscv.cpp ****             uint64 arg3;
  39:src/Riscv.cpp ****             uint64 *arg4;
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  43:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  44:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  50:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  53:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  54:src/Riscv.cpp ****             *arg1=t;
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp ****             uint64 ret;
  57:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  58:src/Riscv.cpp ****             else ret =-1;
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             //return _thread* adress through a0
  62:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  63:src/Riscv.cpp **** 
  64:src/Riscv.cpp ****             w_sstatus(sstatus);
  65:src/Riscv.cpp ****             w_sepc(sepc);
  66:src/Riscv.cpp ****         }
  67:src/Riscv.cpp ****         if(a0reg== 0x01 ){
  68:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  69:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  70:src/Riscv.cpp ****             //kmem_alloc
  71:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  72:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //write return value to a0 register
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         else if(a0reg==0x02){
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  85:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
  86:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             w_sstatus(sstatus);
GAS LISTING /tmp/ccmH7fgW.s 			page 6


  89:src/Riscv.cpp ****             w_sepc(sepc);
  90:src/Riscv.cpp ****         }
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****         else if(a0reg==0x12){
  93:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  94:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****             _thread::running->finished=true;
  97:src/Riscv.cpp ****             _thread::dispatch();
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             w_sstatus(sstatus);
 100:src/Riscv.cpp ****             w_sepc(sepc);
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         else if(a0reg == 0x13){
 105:src/Riscv.cpp ****             //thread dispatch
 106:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::dispatch();
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****             w_sstatus(sstatus);
 113:src/Riscv.cpp ****             w_sepc(sepc);
 114:src/Riscv.cpp ****         }
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****         else if(a0reg==0x04){
 117:src/Riscv.cpp ****             //call from yield
 118:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 119:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 122:src/Riscv.cpp ****             _thread::dispatch();
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             w_sstatus(sstatus);
 125:src/Riscv.cpp ****             w_sepc(sepc);
 126:src/Riscv.cpp ****         }
 127:src/Riscv.cpp ****         else if(a0reg==0x21){
 128:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 129:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 132:src/Riscv.cpp ****            uint64 arg2;
 133:src/Riscv.cpp **** 
 134:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 135:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 136:src/Riscv.cpp **** 
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 138:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 141:src/Riscv.cpp ****             *arg1=sem;
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             uint64 ret=0;
 144:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 145:src/Riscv.cpp ****             else ret=-1;
GAS LISTING /tmp/ccmH7fgW.s 			page 7


 146:src/Riscv.cpp **** 
 147:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             w_sstatus(sstatus);
 150:src/Riscv.cpp ****             w_sepc(sepc);
 151:src/Riscv.cpp ****         }
 152:src/Riscv.cpp ****         else if(a0reg==0x22){
 153:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 154:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 160:src/Riscv.cpp **** 
 161:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 164:src/Riscv.cpp **** 
 165:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 166:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 167:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 168:src/Riscv.cpp ****                 t->deblocked=true;
 169:src/Riscv.cpp ****                 sem->val++;
 170:src/Riscv.cpp ****                 Scheduler::put(t);
 171:src/Riscv.cpp ****             }
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp ****             delete sem;
 174:src/Riscv.cpp **** 
 175:src/Riscv.cpp ****             w_sstatus(sstatus);
 176:src/Riscv.cpp ****             w_sepc(sepc);
 177:src/Riscv.cpp ****         }
 178:src/Riscv.cpp ****         else if(a0reg==0x23){
 179:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 180:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 183:src/Riscv.cpp **** 
 184:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 185:src/Riscv.cpp **** 
 186:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp ****             uint64 ret = arg1->wait();
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 193:src/Riscv.cpp **** 
 194:src/Riscv.cpp ****             w_sstatus(sstatus);
 195:src/Riscv.cpp ****             w_sepc(sepc);
 196:src/Riscv.cpp ****         }
 197:src/Riscv.cpp ****         else if(a0reg==0x24){
 198:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 202:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 8


 203:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 206:src/Riscv.cpp **** 
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****             arg1->signal();
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp ****             uint64 ret = 0;
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 213:src/Riscv.cpp **** 
 214:src/Riscv.cpp ****             w_sstatus(sstatus);
 215:src/Riscv.cpp ****             w_sepc(sepc);
 216:src/Riscv.cpp ****         }
 217:src/Riscv.cpp ****         else if(a0reg==0x41){
 218:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 219:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****             //call method from kernel Console class
 222:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 223:src/Riscv.cpp ****             char c = KConsole::getc();
 224:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             w_sstatus(sstatus);
 230:src/Riscv.cpp ****             w_sepc(sepc);
 231:src/Riscv.cpp ****         }
 232:src/Riscv.cpp ****         else if(a0reg==0x42){
 233:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 234:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 235:src/Riscv.cpp **** 
 236:src/Riscv.cpp ****             char c;
 237:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 238:src/Riscv.cpp **** 
 239:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 240:src/Riscv.cpp **** 
 241:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 242:src/Riscv.cpp ****             KConsole::putc(c);
 243:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 244:src/Riscv.cpp **** 
 245:src/Riscv.cpp ****             w_sstatus(sstatus);
 246:src/Riscv.cpp ****             w_sepc(sepc);
 247:src/Riscv.cpp ****         }
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp **** 
 250:src/Riscv.cpp ****     }
 251:src/Riscv.cpp ****     else if(scause == 0x0000000000000009UL){
 101              		.loc 1 251 10
 102              	.LBB380:
 103              	.LBB163:
 104 005c 13079000 		li	a4,9
 105 0060 6384E742 		beq	a5,a4,.L27
 106              	.LVL2:
 107              	.L3:
 108              	.LBE163:
GAS LISTING /tmp/ccmH7fgW.s 			page 9


 109              	.LBE380:
 252:src/Riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 253:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 254:src/Riscv.cpp ****         w_sepc(sepc);
 255:src/Riscv.cpp ****         w_sstatus(sstatus);
 256:src/Riscv.cpp **** 
 257:src/Riscv.cpp ****     }
 258:src/Riscv.cpp ****     else if (scause == 0x8000000000000001UL){
 259:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 260:src/Riscv.cpp ****         uint64 sepc = r_sepc() + 4;
 261:src/Riscv.cpp ****         uint64 sstatus = r_sstatus();
 262:src/Riscv.cpp **** 
 263:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 264:src/Riscv.cpp **** 
 265:src/Riscv.cpp ****         w_sstatus(sstatus);
 266:src/Riscv.cpp ****         w_sepc(sepc);
 267:src/Riscv.cpp ****     }
 268:src/Riscv.cpp **** 
 269:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 270:src/Riscv.cpp ****     {
 271:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 272:src/Riscv.cpp ****         console_handler();
 273:src/Riscv.cpp ****     }
 274:src/Riscv.cpp ****     else{
 275:src/Riscv.cpp ****         // unexpected trap cause
 276:src/Riscv.cpp ****         //print(scause)
 277:src/Riscv.cpp ****         //print(sepc)
 278:src/Riscv.cpp ****         //print(stval) //trap value
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp ****     }
 281:src/Riscv.cpp **** }
 110              		.loc 1 281 1 is_stmt 0
 111 0064 83308110 		ld	ra,264(sp)
 112              		.cfi_remember_state
 113              		.cfi_restore 1
 114 0068 03340110 		ld	s0,256(sp)
 115              		.cfi_restore 8
 116              		.cfi_def_cfa 2, 272
 117 006c 8334810F 		ld	s1,248(sp)
 118              		.cfi_restore 9
 119 0070 0339010F 		ld	s2,240(sp)
 120              		.cfi_restore 18
 121 0074 8339810E 		ld	s3,232(sp)
 122              		.cfi_restore 19
 123 0078 033A010E 		ld	s4,224(sp)
 124              		.cfi_restore 20
 125 007c 13010111 		addi	sp,sp,272
 126              		.cfi_def_cfa_offset 0
 127 0080 67800000 		jr	ra
 128              	.LVL3:
 129              	.L26:
 130              		.cfi_restore_state
  31:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 131              		.loc 1 31 9 is_stmt 1
 132              	.LBB381:
 133              	.LBB173:
 134 0084 93071001 		li	a5,17
GAS LISTING /tmp/ccmH7fgW.s 			page 10


 135              	.LVL4:
 136 0088 6388F40A 		beq	s1,a5,.L28
 137              	.L5:
 138              	.LBE173:
 139              	.LBE381:
  67:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 140              		.loc 1 67 9
 141              	.LBB382:
 142              	.LBB183:
 143 008c 93071000 		li	a5,1
 144 0090 6388F410 		beq	s1,a5,.L29
 145              	.LBE183:
 146              	.LBE382:
  80:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 147              		.loc 1 80 14
 148              	.LBB383:
 149              	.LBB367:
 150              	.LBB184:
 151 0094 93072000 		li	a5,2
 152 0098 6382F414 		beq	s1,a5,.L30
 153              	.LBE184:
 154              	.LBE367:
 155              	.LBE383:
  92:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 156              		.loc 1 92 14
 157              	.LBB384:
 158              	.LBB368:
 159              	.LBB348:
 160              	.LBB185:
 161 009c 93072001 		li	a5,18
 162 00a0 638AF416 		beq	s1,a5,.L31
 163              	.LBE185:
 164              	.LBE348:
 165              	.LBE368:
 166              	.LBE384:
 104:src/Riscv.cpp ****             //thread dispatch
 167              		.loc 1 104 14
 168              	.LBB385:
 169              	.LBB369:
 170              	.LBB349:
 171              	.LBB330:
 172              	.LBB186:
 173 00a4 93073001 		li	a5,19
 174 00a8 6388F41A 		beq	s1,a5,.L32
 175              	.LBE186:
 176              	.LBE330:
 177              	.LBE349:
 178              	.LBE369:
 179              	.LBE385:
 116:src/Riscv.cpp ****             //call from yield
 180              		.loc 1 116 14
 181              	.LBB386:
 182              	.LBB370:
 183              	.LBB350:
 184              	.LBB331:
 185              	.LBB313:
 186              	.LBB187:
GAS LISTING /tmp/ccmH7fgW.s 			page 11


 187 00ac 93074000 		li	a5,4
 188 00b0 638CF41C 		beq	s1,a5,.L33
 189              	.LBE187:
 190              	.LBE313:
 191              	.LBE331:
 192              	.LBE350:
 193              	.LBE370:
 194              	.LBE386:
 127:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 195              		.loc 1 127 14
 196              	.LBB387:
 197              	.LBB371:
 198              	.LBB351:
 199              	.LBB332:
 200              	.LBB314:
 201              	.LBB297:
 202              	.LBB188:
 203 00b4 93071002 		li	a5,33
 204 00b8 6386F420 		beq	s1,a5,.L34
 205              	.LBE188:
 206              	.LBE297:
 207              	.LBE314:
 208              	.LBE332:
 209              	.LBE351:
 210              	.LBE371:
 211              	.LBE387:
 152:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 212              		.loc 1 152 14
 213              	.LBB388:
 214              	.LBB372:
 215              	.LBB352:
 216              	.LBB333:
 217              	.LBB315:
 218              	.LBB298:
 219              	.LBB282:
 220              	.LBB189:
 221 00bc 93072002 		li	a5,34
 222 00c0 6386F426 		beq	s1,a5,.L35
 223              	.LBE189:
 224              	.LBE282:
 225              	.LBE298:
 226              	.LBE315:
 227              	.LBE333:
 228              	.LBE352:
 229              	.LBE372:
 230              	.LBE388:
 178:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 231              		.loc 1 178 14
 232              	.LBB389:
 233              	.LBB373:
 234              	.LBB353:
 235              	.LBB334:
 236              	.LBB316:
 237              	.LBB299:
 238              	.LBB283:
 239              	.LBB264:
 240              	.LBB190:
GAS LISTING /tmp/ccmH7fgW.s 			page 12


 241 00c4 93073002 		li	a5,35
 242 00c8 638CF42E 		beq	s1,a5,.L36
 243              	.LBE190:
 244              	.LBE264:
 245              	.LBE283:
 246              	.LBE299:
 247              	.LBE316:
 248              	.LBE334:
 249              	.LBE353:
 250              	.LBE373:
 251              	.LBE389:
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 252              		.loc 1 197 14
 253              	.LBB390:
 254              	.LBB374:
 255              	.LBB354:
 256              	.LBB335:
 257              	.LBB317:
 258              	.LBB300:
 259              	.LBB284:
 260              	.LBB265:
 261              	.LBB243:
 262              	.LBB191:
 263 00cc 93074002 		li	a5,36
 264 00d0 6386F432 		beq	s1,a5,.L37
 265              	.LBE191:
 266              	.LBE243:
 267              	.LBE265:
 268              	.LBE284:
 269              	.LBE300:
 270              	.LBE317:
 271              	.LBE335:
 272              	.LBE354:
 273              	.LBE374:
 274              	.LBE390:
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 275              		.loc 1 217 14
 276              	.LBB391:
 277              	.LBB375:
 278              	.LBB355:
 279              	.LBB336:
 280              	.LBB318:
 281              	.LBB301:
 282              	.LBB285:
 283              	.LBB266:
 284              	.LBB244:
 285              	.LBB231:
 286              	.LBB192:
 287 00d4 93071004 		li	a5,65
 288 00d8 6382F436 		beq	s1,a5,.L38
 289              	.LBE192:
 290              	.LBE231:
 291              	.LBE244:
 292              	.LBE266:
 293              	.LBE285:
 294              	.LBE301:
 295              	.LBE318:
GAS LISTING /tmp/ccmH7fgW.s 			page 13


 296              	.LBE336:
 297              	.LBE355:
 298              	.LBE375:
 299              	.LBE391:
 232:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 300              		.loc 1 232 14
 301              	.LBB392:
 302              	.LBB376:
 303              	.LBB356:
 304              	.LBB337:
 305              	.LBB319:
 306              	.LBB302:
 307              	.LBB286:
 308              	.LBB267:
 309              	.LBB245:
 310              	.LBB232:
 311              	.LBB220:
 312              	.LBB193:
 313 00dc 93072004 		li	a5,66
 314 00e0 E392F4F8 		bne	s1,a5,.L3
 315              	.LBB194:
 233:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 316              		.loc 1 233 13
 317              	.LBB195:
 318              	.LBB196:
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 319              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 320              		.loc 2 111 5
 321              		.loc 2 111 64 is_stmt 0
 322              	#APP
 323              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 324              		csrr a5, sepc
 325              	# 0 "" 2
 326              	#NO_APP
 327 00e8 233CF4FA 		sd	a5,-72(s0)
 328              		.loc 2 112 5 is_stmt 1
 329              		.loc 2 112 12 is_stmt 0
 330 00ec 833484FB 		ld	s1,-72(s0)
 331              	.LVL5:
 332              	.LBE196:
 333              	.LBE195:
 233:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 334              		.loc 1 233 38
 335 00f0 93844400 		addi	s1,s1,4
 336              	.LVL6:
 234:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 14


 337              		.loc 1 234 13 is_stmt 1
 338              	.LBB197:
 339              	.LBB198:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
GAS LISTING /tmp/ccmH7fgW.s 			page 15


 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 340              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 341              		.loc 2 181 5
 342              		.loc 2 181 76 is_stmt 0
 343              	#APP
 344              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 345              		csrr a5, sstatus
 346              	# 0 "" 2
 347              	#NO_APP
 348 00f8 2338F4FA 		sd	a5,-80(s0)
 349              		.loc 2 182 5 is_stmt 1
 350              		.loc 2 182 12 is_stmt 0
 351 00fc 033904FB 		ld	s2,-80(s0)
 352              	.LVL7:
 353              	.LBE198:
 354              	.LBE197:
 236:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 355              		.loc 1 236 13 is_stmt 1
 237:src/Riscv.cpp **** 
 356              		.loc 1 237 13
 237:src/Riscv.cpp **** 
 357              		.loc 1 237 48 is_stmt 0
 358              	#APP
 359              	# 237 "src/Riscv.cpp" 1
 239:src/Riscv.cpp **** 
 360              		ld a1, 11*8(fp)
 361              	# 0 "" 2
 362              		.loc 1 239 13 is_stmt 1
 239:src/Riscv.cpp **** 
 363              		.loc 1 239 53 is_stmt 0
 364              	# 239 "src/Riscv.cpp" 1
 365              		mv a0, a1
 366              	# 0 "" 2
 367              	#NO_APP
 368 0108 1375F50F 		andi	a0,a0,0xff
 369              	.LVL8:
 241:src/Riscv.cpp ****             KConsole::putc(c);
 370              		.loc 1 241 13 is_stmt 1
 241:src/Riscv.cpp ****             KConsole::putc(c);
 371              		.loc 1 241 27 is_stmt 0
 372 010c 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 372      83B70700 
GAS LISTING /tmp/ccmH7fgW.s 			page 16


 373              	.LVL9:
 374              	.LBB199:
 375              	.LBB200:
 129:src/../h/Riscv.hpp **** }
 376              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 377              		.loc 2 129 69 is_stmt 0
 378              	#APP
 379              	# 129 "src/../h/Riscv.hpp" 1
 380              		csrw stvec, a5
 381              	# 0 "" 2
 382              	.LVL10:
 383              	#NO_APP
 384              	.LBE200:
 385              	.LBE199:
 242:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 386              		.loc 1 242 13 is_stmt 1
 242:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 387              		.loc 1 242 27 is_stmt 0
 388 0118 97000000 		call	_ZN8KConsole4putcEc@plt
 388      E7800000 
 389              	.LVL11:
 243:src/Riscv.cpp **** 
 390              		.loc 1 243 13 is_stmt 1
 243:src/Riscv.cpp **** 
 391              		.loc 1 243 27 is_stmt 0
 392 0120 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 392      83B70700 
 393              	.LVL12:
 394              	.LBB201:
 395              	.LBB202:
 129:src/../h/Riscv.hpp **** }
 396              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 397              		.loc 2 129 69 is_stmt 0
 398              	#APP
 399              	# 129 "src/../h/Riscv.hpp" 1
 400              		csrw stvec, a5
 401              	# 0 "" 2
 402              	.LVL13:
 403              	#NO_APP
 404              	.LBE202:
 405              	.LBE201:
 245:src/Riscv.cpp ****             w_sepc(sepc);
 406              		.loc 1 245 13 is_stmt 1
 407              	.LBB203:
 408              	.LBB204:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 409              		.loc 2 187 5
 410              		.loc 2 187 77 is_stmt 0
 411              	#APP
 412              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
GAS LISTING /tmp/ccmH7fgW.s 			page 17


 413              		csrw sstatus, s2
 414              	# 0 "" 2
 415              	.LVL14:
 416              	#NO_APP
 417              	.LBE204:
 418              	.LBE203:
 246:src/Riscv.cpp ****         }
 419              		.loc 1 246 13 is_stmt 1
 420              	.LBB205:
 421              	.LBB206:
 117:src/../h/Riscv.hpp **** }
 422              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 423              		.loc 2 117 65 is_stmt 0
 424              	#APP
 425              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 426              		csrw sepc, s1
 427              	# 0 "" 2
 428              		.loc 2 118 1
 429              	#NO_APP
 430 0134 6FF01FF3 		j	.L3
 431              	.LVL15:
 432              	.L28:
 433              	.LBE206:
 434              	.LBE205:
 435              	.LBE194:
 436              	.LBE193:
 437              	.LBE220:
 438              	.LBE232:
 439              	.LBE245:
 440              	.LBE267:
 441              	.LBE286:
 442              	.LBE302:
 443              	.LBE319:
 444              	.LBE337:
 445              	.LBE356:
 446              	.LBE376:
 447              	.LBB377:
 448              	.LBB174:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 449              		.loc 1 32 13 is_stmt 1
 450              	.LBB175:
 451              	.LBB176:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 452              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 453              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 454              		.loc 2 111 64 is_stmt 0
 455              	#APP
 456              	# 111 "src/../h/Riscv.hpp" 1
 457              		csrr a5, sepc
 458              	# 0 "" 2
 459              	#NO_APP
 460 013c 2334F4F0 		sd	a5,-248(s0)
 112:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccmH7fgW.s 			page 18


 461              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 462              		.loc 2 112 12 is_stmt 0
 463 0140 033984F0 		ld	s2,-248(s0)
 464              	.LBE176:
 465              	.LBE175:
  32:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 466              		.loc 1 32 38
 467 0144 13094900 		addi	s2,s2,4
 468              	.LVL16:
  33:src/Riscv.cpp **** 
 469              		.loc 1 33 13 is_stmt 1
 470              	.LBB177:
 471              	.LBB178:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 472              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 473              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 474              		.loc 2 181 76 is_stmt 0
 475              	#APP
 476              	# 181 "src/../h/Riscv.hpp" 1
 477              		csrr a5, sstatus
 478              	# 0 "" 2
 479              	#NO_APP
 480 014c 2330F4F0 		sd	a5,-256(s0)
 182:src/../h/Riscv.hpp **** }
 481              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 482              		.loc 2 182 12 is_stmt 0
 483 0150 833904F0 		ld	s3,-256(s0)
 484              	.LVL17:
 485              	.LBE178:
 486              	.LBE177:
  36:src/Riscv.cpp ****             _thread::Body arg2;
 487              		.loc 1 36 13 is_stmt 1
  37:src/Riscv.cpp ****             uint64 arg3;
 488              		.loc 1 37 13
  38:src/Riscv.cpp ****             uint64 *arg4;
 489              		.loc 1 38 13
  39:src/Riscv.cpp **** 
 490              		.loc 1 39 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 491              		.loc 1 41 13
  41:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 492              		.loc 1 41 48 is_stmt 0
 493              	#APP
 494              	# 41 "src/Riscv.cpp" 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 495              		ld a1, 11*8(fp)
 496              	# 0 "" 2
 497              		.loc 1 42 13 is_stmt 1
  42:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 498              		.loc 1 42 48 is_stmt 0
 499              	# 42 "src/Riscv.cpp" 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 500              		ld a2, 12*8(fp)
GAS LISTING /tmp/ccmH7fgW.s 			page 19


 501              	# 0 "" 2
 502              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 503              		.loc 1 43 48 is_stmt 0
 504              	# 43 "src/Riscv.cpp" 1
  44:src/Riscv.cpp **** 
 505              		ld a3, 13*8(fp)
 506              	# 0 "" 2
 507              		.loc 1 44 13 is_stmt 1
  44:src/Riscv.cpp **** 
 508              		.loc 1 44 48 is_stmt 0
 509              	# 44 "src/Riscv.cpp" 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 510              		ld a4, 14*8(fp)
 511              	# 0 "" 2
 512              		.loc 1 47 13 is_stmt 1
  47:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 513              		.loc 1 47 56 is_stmt 0
 514              	# 47 "src/Riscv.cpp" 1
 515              		mv s4, a1
 516              	# 0 "" 2
 517              	.LVL18:
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 518              		.loc 1 48 13 is_stmt 1
  48:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 519              		.loc 1 48 56 is_stmt 0
 520              	# 48 "src/Riscv.cpp" 1
 521              		mv a0, a2
 522              	# 0 "" 2
 523              	.LVL19:
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 524              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 525              		.loc 1 49 56 is_stmt 0
 526              	# 49 "src/Riscv.cpp" 1
 527              		mv a1, a3
 528              	# 0 "" 2
 529              	.LVL20:
  50:src/Riscv.cpp **** 
 530              		.loc 1 50 13 is_stmt 1
  50:src/Riscv.cpp **** 
 531              		.loc 1 50 56 is_stmt 0
 532              	# 50 "src/Riscv.cpp" 1
 533              		mv a2, a4
 534              	# 0 "" 2
 535              	.LVL21:
  53:src/Riscv.cpp ****             *arg1=t;
 536              		.loc 1 53 13 is_stmt 1
  53:src/Riscv.cpp ****             *arg1=t;
 537              		.loc 1 53 47 is_stmt 0
 538              	#NO_APP
 539 0174 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 539      E7800000 
 540              	.LVL22:
  54:src/Riscv.cpp **** 
 541              		.loc 1 54 13 is_stmt 1
  54:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 20


 542              		.loc 1 54 18 is_stmt 0
 543 017c 2330AA00 		sd	a0,0(s4)
  56:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 544              		.loc 1 56 13 is_stmt 1
  57:src/Riscv.cpp ****             else ret =-1;
 545              		.loc 1 57 13
 546 0180 630C0500 		beqz	a0,.L23
  57:src/Riscv.cpp ****             else ret =-1;
 547              		.loc 1 57 31 is_stmt 0
 548 0184 93070000 		li	a5,0
 549              	.L6:
 550              	.LVL23:
  62:src/Riscv.cpp **** 
 551              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp **** 
 552              		.loc 1 62 56 is_stmt 0
 553              	#APP
 554              	# 62 "src/Riscv.cpp" 1
  64:src/Riscv.cpp ****             w_sepc(sepc);
 555              		mv a0, a5
 556              	# 0 "" 2
 557              		.loc 1 64 13 is_stmt 1
 558              	.LVL24:
 559              	#NO_APP
 560              	.LBB179:
 561              	.LBB180:
 187:src/../h/Riscv.hpp **** }
 562              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 563              		.loc 2 187 77 is_stmt 0
 564              	#APP
 565              	# 187 "src/../h/Riscv.hpp" 1
 566              		csrw sstatus, s3
 567              	# 0 "" 2
 568              	.LVL25:
 569              	#NO_APP
 570              	.LBE180:
 571              	.LBE179:
  65:src/Riscv.cpp ****         }
 572              		.loc 1 65 13 is_stmt 1
 573              	.LBB181:
 574              	.LBB182:
 117:src/../h/Riscv.hpp **** }
 575              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 576              		.loc 2 117 65 is_stmt 0
 577              	#APP
 578              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 579              		csrw sepc, s2
 580              	# 0 "" 2
 581              		.loc 2 118 1
 582              	#NO_APP
 583 0194 6FF09FEF 		j	.L5
 584              	.LVL26:
 585              	.L23:
 586              	.LBE182:
GAS LISTING /tmp/ccmH7fgW.s 			page 21


 587              	.LBE181:
  58:src/Riscv.cpp **** 
 588              		.loc 1 58 22
 589 0198 9307F0FF 		li	a5,-1
 590 019c 6FF0DFFE 		j	.L6
 591              	.LVL27:
 592              	.L29:
 593              	.LBE174:
 594              	.LBE377:
 595              	.LBB378:
 596              	.LBB357:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 597              		.loc 1 68 13 is_stmt 1
 598              	.LBB358:
 599              	.LBB359:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 600              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 601              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 602              		.loc 2 111 64 is_stmt 0
 603              	#APP
 604              	# 111 "src/../h/Riscv.hpp" 1
 605              		csrr a5, sepc
 606              	# 0 "" 2
 607              	#NO_APP
 608 01a4 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 609              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 610              		.loc 2 112 12 is_stmt 0
 611 01a8 833484F1 		ld	s1,-232(s0)
 612              	.LVL28:
 613              	.LBE359:
 614              	.LBE358:
  68:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 615              		.loc 1 68 38
 616 01ac 93844400 		addi	s1,s1,4
 617              	.LVL29:
  69:src/Riscv.cpp ****             //kmem_alloc
 618              		.loc 1 69 13 is_stmt 1
 619              	.LBB360:
 620              	.LBB361:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 621              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 622              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 623              		.loc 2 181 76 is_stmt 0
 624              	#APP
 625              	# 181 "src/../h/Riscv.hpp" 1
 626              		csrr a5, sstatus
 627              	# 0 "" 2
 628              	#NO_APP
 629 01b4 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 630              		.loc 2 182 5 is_stmt 1
GAS LISTING /tmp/ccmH7fgW.s 			page 22


 182:src/../h/Riscv.hpp **** }
 631              		.loc 2 182 12 is_stmt 0
 632 01b8 033904F1 		ld	s2,-240(s0)
 633              	.LVL30:
 634              	.LBE361:
 635              	.LBE360:
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 636              		.loc 1 71 13 is_stmt 1
  71:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 637              		.loc 1 71 56 is_stmt 0
 638              	#APP
 639              	# 71 "src/Riscv.cpp" 1
 640              		mv a0, a1
 641              	# 0 "" 2
 642              	.LVL31:
  72:src/Riscv.cpp **** 
 643              		.loc 1 72 13 is_stmt 1
  72:src/Riscv.cpp **** 
 644              		.loc 1 72 61 is_stmt 0
 645              	#NO_APP
 646 01c0 13156500 		slli	a0,a0,6
 647              	.LVL32:
 648 01c4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 648      E7800000 
 649              	.LVL33:
  75:src/Riscv.cpp **** 
 650              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 651              		.loc 1 75 56 is_stmt 0
 652              	#APP
 653              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 654              		mv a0, a0
 655              	# 0 "" 2
 656              		.loc 1 77 13 is_stmt 1
 657              	.LVL34:
 658              	#NO_APP
 659              	.LBB362:
 660              	.LBB363:
 187:src/../h/Riscv.hpp **** }
 661              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 662              		.loc 2 187 77 is_stmt 0
 663              	#APP
 664              	# 187 "src/../h/Riscv.hpp" 1
 665              		csrw sstatus, s2
 666              	# 0 "" 2
 667              	.LVL35:
 668              	#NO_APP
 669              	.LBE363:
 670              	.LBE362:
  78:src/Riscv.cpp ****         }
 671              		.loc 1 78 13 is_stmt 1
 672              	.LBB364:
 673              	.LBB365:
 117:src/../h/Riscv.hpp **** }
 674              		.loc 2 117 5
GAS LISTING /tmp/ccmH7fgW.s 			page 23


 117:src/../h/Riscv.hpp **** }
 675              		.loc 2 117 65 is_stmt 0
 676              	#APP
 677              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 678              		csrw sepc, s1
 679              	# 0 "" 2
 680              		.loc 2 118 1
 681              	#NO_APP
 682 01d8 6FF0DFE8 		j	.L3
 683              	.LVL36:
 684              	.L30:
 685              	.LBE365:
 686              	.LBE364:
 687              	.LBE357:
 688              	.LBB366:
 689              	.LBB338:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 690              		.loc 1 81 13 is_stmt 1
 691              	.LBB339:
 692              	.LBB340:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 693              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 694              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 695              		.loc 2 111 64 is_stmt 0
 696              	#APP
 697              	# 111 "src/../h/Riscv.hpp" 1
 698              		csrr a5, sepc
 699              	# 0 "" 2
 700              	#NO_APP
 701 01e0 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 702              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 703              		.loc 2 112 12 is_stmt 0
 704 01e4 833484F2 		ld	s1,-216(s0)
 705              	.LVL37:
 706              	.LBE340:
 707              	.LBE339:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 708              		.loc 1 81 38
 709 01e8 93844400 		addi	s1,s1,4
 710              	.LVL38:
  82:src/Riscv.cpp **** 
 711              		.loc 1 82 13 is_stmt 1
 712              	.LBB341:
 713              	.LBB342:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 714              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 715              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 716              		.loc 2 181 76 is_stmt 0
 717              	#APP
 718              	# 181 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccmH7fgW.s 			page 24


 719              		csrr a5, sstatus
 720              	# 0 "" 2
 721              	#NO_APP
 722 01f0 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 723              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 724              		.loc 2 182 12 is_stmt 0
 725 01f4 033904F2 		ld	s2,-224(s0)
 726              	.LVL39:
 727              	.LBE342:
 728              	.LBE341:
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 729              		.loc 1 84 13 is_stmt 1
  84:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 730              		.loc 1 84 56 is_stmt 0
 731              	#APP
 732              	# 84 "src/Riscv.cpp" 1
 733              		mv a0, a1
 734              	# 0 "" 2
 735              	.LVL40:
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 736              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 737              		.loc 1 85 49 is_stmt 0
 738              	#NO_APP
 739 01fc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 739      E7800000 
 740              	.LVL41:
  86:src/Riscv.cpp **** 
 741              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 742              		.loc 1 86 56 is_stmt 0
 743              	#APP
 744              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             w_sepc(sepc);
 745              		mv a0, a0
 746              	# 0 "" 2
 747              		.loc 1 88 13 is_stmt 1
 748              	.LVL42:
 749              	#NO_APP
 750              	.LBB343:
 751              	.LBB344:
 187:src/../h/Riscv.hpp **** }
 752              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 753              		.loc 2 187 77 is_stmt 0
 754              	#APP
 755              	# 187 "src/../h/Riscv.hpp" 1
 756              		csrw sstatus, s2
 757              	# 0 "" 2
 758              	.LVL43:
 759              	#NO_APP
 760              	.LBE344:
 761              	.LBE343:
  89:src/Riscv.cpp ****         }
 762              		.loc 1 89 13 is_stmt 1
GAS LISTING /tmp/ccmH7fgW.s 			page 25


 763              	.LBB345:
 764              	.LBB346:
 117:src/../h/Riscv.hpp **** }
 765              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 766              		.loc 2 117 65 is_stmt 0
 767              	#APP
 768              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 769              		csrw sepc, s1
 770              	# 0 "" 2
 771              		.loc 2 118 1
 772              	#NO_APP
 773 0210 6FF05FE5 		j	.L3
 774              	.LVL44:
 775              	.L31:
 776              	.LBE346:
 777              	.LBE345:
 778              	.LBE338:
 779              	.LBB347:
 780              	.LBB320:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 781              		.loc 1 93 13 is_stmt 1
 782              	.LBB321:
 783              	.LBB322:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 784              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 785              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 786              		.loc 2 111 64 is_stmt 0
 787              	#APP
 788              	# 111 "src/../h/Riscv.hpp" 1
 789              		csrr a5, sepc
 790              	# 0 "" 2
 791              	#NO_APP
 792 0218 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 793              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 794              		.loc 2 112 12 is_stmt 0
 795 021c 833484F3 		ld	s1,-200(s0)
 796              	.LVL45:
 797              	.LBE322:
 798              	.LBE321:
  93:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 799              		.loc 1 93 38
 800 0220 93844400 		addi	s1,s1,4
 801              	.LVL46:
  94:src/Riscv.cpp **** 
 802              		.loc 1 94 13 is_stmt 1
 803              	.LBB323:
 804              	.LBB324:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 805              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 806              		.loc 2 181 5
GAS LISTING /tmp/ccmH7fgW.s 			page 26


 181:src/../h/Riscv.hpp ****     return sstatus;
 807              		.loc 2 181 76 is_stmt 0
 808              	#APP
 809              	# 181 "src/../h/Riscv.hpp" 1
 810              		csrr a5, sstatus
 811              	# 0 "" 2
 812              	#NO_APP
 813 0228 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 814              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 815              		.loc 2 182 12 is_stmt 0
 816 022c 033904F3 		ld	s2,-208(s0)
 817              	.LVL47:
 818              	.LBE324:
 819              	.LBE323:
  96:src/Riscv.cpp ****             _thread::dispatch();
 820              		.loc 1 96 13 is_stmt 1
  96:src/Riscv.cpp ****             _thread::dispatch();
 821              		.loc 1 96 31 is_stmt 0
 822 0230 97070000 		la	a5,_ZN7_thread7runningE
 822      83B70700 
 823 0238 83B70700 		ld	a5,0(a5)
  96:src/Riscv.cpp ****             _thread::dispatch();
 824              		.loc 1 96 39
 825 023c 13071000 		li	a4,1
 826 0240 2384E702 		sb	a4,40(a5)
  97:src/Riscv.cpp **** 
 827              		.loc 1 97 13 is_stmt 1
  97:src/Riscv.cpp **** 
 828              		.loc 1 97 30 is_stmt 0
 829 0244 97000000 		call	_ZN7_thread8dispatchEv@plt
 829      E7800000 
 830              	.LVL48:
  99:src/Riscv.cpp ****             w_sepc(sepc);
 831              		.loc 1 99 13 is_stmt 1
 832              	.LBB325:
 833              	.LBB326:
 187:src/../h/Riscv.hpp **** }
 834              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 835              		.loc 2 187 77 is_stmt 0
 836              	#APP
 837              	# 187 "src/../h/Riscv.hpp" 1
 838              		csrw sstatus, s2
 839              	# 0 "" 2
 840              	.LVL49:
 841              	#NO_APP
 842              	.LBE326:
 843              	.LBE325:
 100:src/Riscv.cpp **** 
 844              		.loc 1 100 13 is_stmt 1
 845              	.LBB327:
 846              	.LBB328:
 117:src/../h/Riscv.hpp **** }
 847              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccmH7fgW.s 			page 27


 848              		.loc 2 117 65 is_stmt 0
 849              	#APP
 850              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 851              		csrw sepc, s1
 852              	# 0 "" 2
 853              		.loc 2 118 1
 854              	#NO_APP
 855 0254 6FF01FE1 		j	.L3
 856              	.LVL50:
 857              	.L32:
 858              	.LBE328:
 859              	.LBE327:
 860              	.LBE320:
 861              	.LBB329:
 862              	.LBB303:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 863              		.loc 1 106 13 is_stmt 1
 864              	.LBB304:
 865              	.LBB305:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 866              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 867              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 868              		.loc 2 111 64 is_stmt 0
 869              	#APP
 870              	# 111 "src/../h/Riscv.hpp" 1
 871              		csrr a5, sepc
 872              	# 0 "" 2
 873              	#NO_APP
 874 025c 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 875              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 876              		.loc 2 112 12 is_stmt 0
 877 0260 833484F4 		ld	s1,-184(s0)
 878              	.LVL51:
 879              	.LBE305:
 880              	.LBE304:
 106:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 881              		.loc 1 106 38
 882 0264 93844400 		addi	s1,s1,4
 883              	.LVL52:
 107:src/Riscv.cpp **** 
 884              		.loc 1 107 13 is_stmt 1
 885              	.LBB306:
 886              	.LBB307:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 887              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 888              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 889              		.loc 2 181 76 is_stmt 0
 890              	#APP
 891              	# 181 "src/../h/Riscv.hpp" 1
 892              		csrr a5, sstatus
GAS LISTING /tmp/ccmH7fgW.s 			page 28


 893              	# 0 "" 2
 894              	#NO_APP
 895 026c 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 896              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 897              		.loc 2 182 12 is_stmt 0
 898 0270 033904F4 		ld	s2,-192(s0)
 899              	.LVL53:
 900              	.LBE307:
 901              	.LBE306:
 110:src/Riscv.cpp **** 
 902              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp **** 
 903              		.loc 1 110 30 is_stmt 0
 904 0274 97000000 		call	_ZN7_thread8dispatchEv@plt
 904      E7800000 
 905              	.LVL54:
 112:src/Riscv.cpp ****             w_sepc(sepc);
 906              		.loc 1 112 13 is_stmt 1
 907              	.LBB308:
 908              	.LBB309:
 187:src/../h/Riscv.hpp **** }
 909              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 910              		.loc 2 187 77 is_stmt 0
 911              	#APP
 912              	# 187 "src/../h/Riscv.hpp" 1
 913              		csrw sstatus, s2
 914              	# 0 "" 2
 915              	.LVL55:
 916              	#NO_APP
 917              	.LBE309:
 918              	.LBE308:
 113:src/Riscv.cpp ****         }
 919              		.loc 1 113 13 is_stmt 1
 920              	.LBB310:
 921              	.LBB311:
 117:src/../h/Riscv.hpp **** }
 922              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 923              		.loc 2 117 65 is_stmt 0
 924              	#APP
 925              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 926              		csrw sepc, s1
 927              	# 0 "" 2
 928              		.loc 2 118 1
 929              	#NO_APP
 930 0284 6FF01FDE 		j	.L3
 931              	.LVL56:
 932              	.L33:
 933              	.LBE311:
 934              	.LBE310:
 935              	.LBE303:
 936              	.LBB312:
 937              	.LBB287:
GAS LISTING /tmp/ccmH7fgW.s 			page 29


 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 938              		.loc 1 118 13 is_stmt 1
 939              	.LBB288:
 940              	.LBB289:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 941              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 942              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 943              		.loc 2 111 64 is_stmt 0
 944              	#APP
 945              	# 111 "src/../h/Riscv.hpp" 1
 946              		csrr a5, sepc
 947              	# 0 "" 2
 948              	#NO_APP
 949 028c 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 950              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 951              		.loc 2 112 12 is_stmt 0
 952 0290 833484F5 		ld	s1,-168(s0)
 953              	.LVL57:
 954              	.LBE289:
 955              	.LBE288:
 118:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 956              		.loc 1 118 38
 957 0294 93844400 		addi	s1,s1,4
 958              	.LVL58:
 119:src/Riscv.cpp **** 
 959              		.loc 1 119 13 is_stmt 1
 960              	.LBB290:
 961              	.LBB291:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 962              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 963              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 964              		.loc 2 181 76 is_stmt 0
 965              	#APP
 966              	# 181 "src/../h/Riscv.hpp" 1
 967              		csrr a5, sstatus
 968              	# 0 "" 2
 969              	#NO_APP
 970 029c 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 971              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 972              		.loc 2 182 12 is_stmt 0
 973 02a0 033904F5 		ld	s2,-176(s0)
 974              	.LVL59:
 975              	.LBE291:
 976              	.LBE290:
 121:src/Riscv.cpp ****             _thread::dispatch();
 977              		.loc 1 121 13 is_stmt 1
 121:src/Riscv.cpp ****             _thread::dispatch();
 978              		.loc 1 121 39 is_stmt 0
 979 02a4 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
GAS LISTING /tmp/ccmH7fgW.s 			page 30


 979      83B70700 
 980 02ac 23B00700 		sd	zero,0(a5)
 122:src/Riscv.cpp **** 
 981              		.loc 1 122 13 is_stmt 1
 122:src/Riscv.cpp **** 
 982              		.loc 1 122 30 is_stmt 0
 983 02b0 97000000 		call	_ZN7_thread8dispatchEv@plt
 983      E7800000 
 984              	.LVL60:
 124:src/Riscv.cpp ****             w_sepc(sepc);
 985              		.loc 1 124 13 is_stmt 1
 986              	.LBB292:
 987              	.LBB293:
 187:src/../h/Riscv.hpp **** }
 988              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 989              		.loc 2 187 77 is_stmt 0
 990              	#APP
 991              	# 187 "src/../h/Riscv.hpp" 1
 992              		csrw sstatus, s2
 993              	# 0 "" 2
 994              	.LVL61:
 995              	#NO_APP
 996              	.LBE293:
 997              	.LBE292:
 125:src/Riscv.cpp ****         }
 998              		.loc 1 125 13 is_stmt 1
 999              	.LBB294:
 1000              	.LBB295:
 117:src/../h/Riscv.hpp **** }
 1001              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1002              		.loc 2 117 65 is_stmt 0
 1003              	#APP
 1004              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1005              		csrw sepc, s1
 1006              	# 0 "" 2
 1007              		.loc 2 118 1
 1008              	#NO_APP
 1009 02c0 6FF05FDA 		j	.L3
 1010              	.LVL62:
 1011              	.L34:
 1012              	.LBE295:
 1013              	.LBE294:
 1014              	.LBE287:
 1015              	.LBB296:
 1016              	.LBB268:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1017              		.loc 1 128 13 is_stmt 1
 1018              	.LBB269:
 1019              	.LBB270:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1020              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1021              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccmH7fgW.s 			page 31


 1022              		.loc 2 111 64 is_stmt 0
 1023              	#APP
 1024              	# 111 "src/../h/Riscv.hpp" 1
 1025              		csrr a5, sepc
 1026              	# 0 "" 2
 1027              	#NO_APP
 1028 02c8 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 1029              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1030              		.loc 2 112 12 is_stmt 0
 1031 02cc 833484F6 		ld	s1,-152(s0)
 1032              	.LVL63:
 1033              	.LBE270:
 1034              	.LBE269:
 128:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1035              		.loc 1 128 38
 1036 02d0 93844400 		addi	s1,s1,4
 1037              	.LVL64:
 129:src/Riscv.cpp **** 
 1038              		.loc 1 129 13 is_stmt 1
 1039              	.LBB271:
 1040              	.LBB272:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1041              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1042              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1043              		.loc 2 181 76 is_stmt 0
 1044              	#APP
 1045              	# 181 "src/../h/Riscv.hpp" 1
 1046              		csrr a5, sstatus
 1047              	# 0 "" 2
 1048              	#NO_APP
 1049 02d8 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 1050              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1051              		.loc 2 182 12 is_stmt 0
 1052 02dc 033904F6 		ld	s2,-160(s0)
 1053              	.LVL65:
 1054              	.LBE272:
 1055              	.LBE271:
 131:src/Riscv.cpp ****            uint64 arg2;
 1056              		.loc 1 131 12 is_stmt 1
 132:src/Riscv.cpp **** 
 1057              		.loc 1 132 12
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1058              		.loc 1 134 13
 134:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1059              		.loc 1 134 48 is_stmt 0
 1060              	#APP
 1061              	# 134 "src/Riscv.cpp" 1
 135:src/Riscv.cpp **** 
 1062              		ld a1, 11*8(fp)
 1063              	# 0 "" 2
 1064              		.loc 1 135 13 is_stmt 1
GAS LISTING /tmp/ccmH7fgW.s 			page 32


 135:src/Riscv.cpp **** 
 1065              		.loc 1 135 48 is_stmt 0
 1066              	# 135 "src/Riscv.cpp" 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1067              		ld a2, 12*8(fp)
 1068              	# 0 "" 2
 1069              		.loc 1 137 13 is_stmt 1
 137:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1070              		.loc 1 137 56 is_stmt 0
 1071              	# 137 "src/Riscv.cpp" 1
 1072              		mv s3, a1
 1073              	# 0 "" 2
 1074              	.LVL66:
 138:src/Riscv.cpp **** 
 1075              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp **** 
 1076              		.loc 1 138 56 is_stmt 0
 1077              	# 138 "src/Riscv.cpp" 1
 1078              		mv s4, a2
 1079              	# 0 "" 2
 1080              	.LVL67:
 140:src/Riscv.cpp ****             *arg1=sem;
 1081              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp ****             *arg1=sem;
 1082              		.loc 1 140 50 is_stmt 0
 1083              	#NO_APP
 1084 02f0 13058001 		li	a0,24
 1085 02f4 97000000 		call	_ZN10KSemaphorenwEm@plt
 1085      E7800000 
 1086              	.LVL68:
 1087              	.LBB273:
 1088              	.LBB274:
 1089              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1090              		.loc 3 14 40
 1091 02fc 23204501 		sw	s4,0(a0)
 1092              	.LVL69:
 1093              	.LBB275:
 1094              	.LBB276:
 1095              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 33


   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1096              		.loc 4 26 29
 1097 0300 23340500 		sd	zero,8(a0)
 1098 0304 23380500 		sd	zero,16(a0)
 1099              	.LVL70:
 1100              	.LBE276:
 1101              	.LBE275:
 1102              	.LBE274:
 1103              	.LBE273:
 141:src/Riscv.cpp **** 
 1104              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 1105              		.loc 1 141 18 is_stmt 0
 1106 0308 23B0A900 		sd	a0,0(s3)
 143:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1107              		.loc 1 143 13 is_stmt 1
 1108              	.LVL71:
 144:src/Riscv.cpp ****             else ret=-1;
 1109              		.loc 1 144 13
 1110 030c 630C0500 		beqz	a0,.L24
 144:src/Riscv.cpp ****             else ret=-1;
 1111              		.loc 1 144 33 is_stmt 0
 1112 0310 93070000 		li	a5,0
 1113              	.L14:
 1114              	.LVL72:
 147:src/Riscv.cpp **** 
 1115              		.loc 1 147 13 is_stmt 1
 147:src/Riscv.cpp **** 
 1116              		.loc 1 147 56 is_stmt 0
 1117              	#APP
 1118              	# 147 "src/Riscv.cpp" 1
 149:src/Riscv.cpp ****             w_sepc(sepc);
 1119              		mv a0, a5
 1120              	# 0 "" 2
 1121              		.loc 1 149 13 is_stmt 1
 1122              	.LVL73:
GAS LISTING /tmp/ccmH7fgW.s 			page 34


 1123              	#NO_APP
 1124              	.LBB277:
 1125              	.LBB278:
 187:src/../h/Riscv.hpp **** }
 1126              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1127              		.loc 2 187 77 is_stmt 0
 1128              	#APP
 1129              	# 187 "src/../h/Riscv.hpp" 1
 1130              		csrw sstatus, s2
 1131              	# 0 "" 2
 1132              	.LVL74:
 1133              	#NO_APP
 1134              	.LBE278:
 1135              	.LBE277:
 150:src/Riscv.cpp ****         }
 1136              		.loc 1 150 13 is_stmt 1
 1137              	.LBB279:
 1138              	.LBB280:
 117:src/../h/Riscv.hpp **** }
 1139              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1140              		.loc 2 117 65 is_stmt 0
 1141              	#APP
 1142              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1143              		csrw sepc, s1
 1144              	# 0 "" 2
 1145              		.loc 2 118 1
 1146              	#NO_APP
 1147 0320 6FF05FD4 		j	.L3
 1148              	.LVL75:
 1149              	.L24:
 1150              	.LBE280:
 1151              	.LBE279:
 145:src/Riscv.cpp **** 
 1152              		.loc 1 145 21
 1153 0324 9307F0FF 		li	a5,-1
 1154 0328 6FF0DFFE 		j	.L14
 1155              	.LVL76:
 1156              	.L35:
 1157              	.LBE268:
 1158              	.LBB281:
 1159              	.LBB246:
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1160              		.loc 1 153 13 is_stmt 1
 1161              	.LBB247:
 1162              	.LBB248:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1163              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1164              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1165              		.loc 2 111 64 is_stmt 0
 1166              	#APP
 1167              	# 111 "src/../h/Riscv.hpp" 1
 1168              		csrr a5, sepc
GAS LISTING /tmp/ccmH7fgW.s 			page 35


 1169              	# 0 "" 2
 1170              	#NO_APP
 1171 0330 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1172              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1173              		.loc 2 112 12 is_stmt 0
 1174 0334 833984F7 		ld	s3,-136(s0)
 1175              	.LBE248:
 1176              	.LBE247:
 153:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1177              		.loc 1 153 38
 1178 0338 93894900 		addi	s3,s3,4
 1179              	.LVL77:
 154:src/Riscv.cpp **** 
 1180              		.loc 1 154 13 is_stmt 1
 1181              	.LBB249:
 1182              	.LBB250:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1183              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1184              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1185              		.loc 2 181 76 is_stmt 0
 1186              	#APP
 1187              	# 181 "src/../h/Riscv.hpp" 1
 1188              		csrr a5, sstatus
 1189              	# 0 "" 2
 1190              	#NO_APP
 1191 0340 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1192              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1193              		.loc 2 182 12 is_stmt 0
 1194 0344 033A04F7 		ld	s4,-144(s0)
 1195              	.LVL78:
 1196              	.LBE250:
 1197              	.LBE249:
 156:src/Riscv.cpp **** 
 1198              		.loc 1 156 13 is_stmt 1
 159:src/Riscv.cpp **** 
 1199              		.loc 1 159 13
 159:src/Riscv.cpp **** 
 1200              		.loc 1 159 48 is_stmt 0
 1201              	#APP
 1202              	# 159 "src/Riscv.cpp" 1
 161:src/Riscv.cpp **** 
 1203              		ld a1, 11*8(fp)
 1204              	# 0 "" 2
 1205              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp **** 
 1206              		.loc 1 161 56 is_stmt 0
 1207              	# 161 "src/Riscv.cpp" 1
 1208              		mv s1, a1
 1209              	# 0 "" 2
 1210              	.LVL79:
 163:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 36


 1211              		.loc 1 163 13 is_stmt 1
 1212              	#NO_APP
 1213 0350 6F004003 		j	.L18
 1214              	.LVL80:
 1215              	.L39:
 1216              	.LBB251:
 1217              	.LBB252:
 1218              	.LBB253:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1219              		.loc 4 70 22 is_stmt 0
 1220 0354 23B80400 		sd	zero,16(s1)
 1221              	.L17:
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
GAS LISTING /tmp/ccmH7fgW.s 			page 37


 1222              		.loc 4 72 12
 1223 0358 03390500 		ld	s2,0(a0)
 1224              	.LVL81:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1225              		.loc 4 73 35
 1226 035c 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1226      E7800000 
 1227              	.LVL82:
 1228              	.LBE253:
 1229              	.LBE252:
 168:src/Riscv.cpp ****                 sem->val++;
 1230              		.loc 1 168 17 is_stmt 1
 168:src/Riscv.cpp ****                 sem->val++;
 1231              		.loc 1 168 29 is_stmt 0
 1232 0364 93071000 		li	a5,1
 1233 0368 230CF902 		sb	a5,56(s2)
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1234              		.loc 1 169 17 is_stmt 1
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1235              		.loc 1 169 22 is_stmt 0
 1236 036c 83A70400 		lw	a5,0(s1)
 169:src/Riscv.cpp ****                 Scheduler::put(t);
 1237              		.loc 1 169 25
 1238 0370 9B871700 		addiw	a5,a5,1
 1239 0374 23A0F400 		sw	a5,0(s1)
 170:src/Riscv.cpp ****             }
 1240              		.loc 1 170 17 is_stmt 1
 170:src/Riscv.cpp ****             }
 1241              		.loc 1 170 31 is_stmt 0
 1242 0378 13050900 		mv	a0,s2
 1243 037c 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1243      E7800000 
 1244              	.LVL83:
 1245              	.L18:
 1246              	.LBE251:
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1247              		.loc 1 166 13 is_stmt 1
 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1248              		.loc 1 166 43
 1249              	.LBB256:
 1250              	.LBB257:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1251              		.loc 4 79 14 is_stmt 0
 1252 0384 03B58400 		ld	a0,8(s1)
 1253              		.loc 4 79 9
 1254 0388 630E0500 		beqz	a0,.L16
  80:src/../h/List.hpp ****         return head->data;
 1255              		.loc 4 80 22
 1256 038c 83370500 		ld	a5,0(a0)
 1257              	.LVL84:
 1258              	.LBE257:
 1259              	.LBE256:
GAS LISTING /tmp/ccmH7fgW.s 			page 38


 166:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1260              		.loc 1 166 43
 1261 0390 638A0700 		beqz	a5,.L16
 1262              	.LBB258:
 167:src/Riscv.cpp ****                 t->deblocked=true;
 1263              		.loc 1 167 17 is_stmt 1
 1264              	.LVL85:
 1265              	.LBB255:
 1266              	.LBB254:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1267              		.loc 4 69 22 is_stmt 0
 1268 0394 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1269              		.loc 4 69 9
 1270 0398 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1271              		.loc 4 70 9
 1272 039c E39E07FA 		bnez	a5,.L17
 1273 03a0 6FF05FFB 		j	.L39
 1274              	.LVL86:
 1275              	.L16:
 1276              	.LBE254:
 1277              	.LBE255:
 1278              	.LBE258:
 173:src/Riscv.cpp **** 
 1279              		.loc 1 173 13 is_stmt 1
 173:src/Riscv.cpp **** 
 1280              		.loc 1 173 23 is_stmt 0
 1281 03a4 63880400 		beqz	s1,.L19
 173:src/Riscv.cpp **** 
 1282              		.loc 1 173 20 discriminator 1
 1283 03a8 13850400 		mv	a0,s1
 1284 03ac 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1284      E7800000 
 1285              	.LVL87:
 1286              	.L19:
 175:src/Riscv.cpp ****             w_sepc(sepc);
 1287              		.loc 1 175 13 is_stmt 1
 1288              	.LBB259:
 1289              	.LBB260:
 187:src/../h/Riscv.hpp **** }
 1290              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1291              		.loc 2 187 77 is_stmt 0
 1292              	#APP
 1293              	# 187 "src/../h/Riscv.hpp" 1
 1294              		csrw sstatus, s4
 1295              	# 0 "" 2
 1296              	.LVL88:
 1297              	#NO_APP
 1298              	.LBE260:
 1299              	.LBE259:
 176:src/Riscv.cpp ****         }
 1300              		.loc 1 176 13 is_stmt 1
 1301              	.LBB261:
 1302              	.LBB262:
 117:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccmH7fgW.s 			page 39


 1303              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1304              		.loc 2 117 65 is_stmt 0
 1305              	#APP
 1306              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1307              		csrw sepc, s3
 1308              	# 0 "" 2
 1309              		.loc 2 118 1
 1310              	#NO_APP
 1311 03bc 6FF09FCA 		j	.L3
 1312              	.LVL89:
 1313              	.L36:
 1314              	.LBE262:
 1315              	.LBE261:
 1316              	.LBE246:
 1317              	.LBB263:
 1318              	.LBB233:
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1319              		.loc 1 179 13 is_stmt 1
 1320              	.LBB234:
 1321              	.LBB235:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1322              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1323              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1324              		.loc 2 111 64 is_stmt 0
 1325              	#APP
 1326              	# 111 "src/../h/Riscv.hpp" 1
 1327              		csrr a5, sepc
 1328              	# 0 "" 2
 1329              	#NO_APP
 1330 03c4 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1331              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1332              		.loc 2 112 12 is_stmt 0
 1333 03c8 833484F8 		ld	s1,-120(s0)
 1334              	.LVL90:
 1335              	.LBE235:
 1336              	.LBE234:
 179:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1337              		.loc 1 179 38
 1338 03cc 93844400 		addi	s1,s1,4
 1339              	.LVL91:
 180:src/Riscv.cpp **** 
 1340              		.loc 1 180 13 is_stmt 1
 1341              	.LBB236:
 1342              	.LBB237:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1343              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1344              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1345              		.loc 2 181 76 is_stmt 0
 1346              	#APP
GAS LISTING /tmp/ccmH7fgW.s 			page 40


 1347              	# 181 "src/../h/Riscv.hpp" 1
 1348              		csrr a5, sstatus
 1349              	# 0 "" 2
 1350              	#NO_APP
 1351 03d4 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1352              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1353              		.loc 2 182 12 is_stmt 0
 1354 03d8 033904F8 		ld	s2,-128(s0)
 1355              	.LVL92:
 1356              	.LBE237:
 1357              	.LBE236:
 182:src/Riscv.cpp **** 
 1358              		.loc 1 182 13 is_stmt 1
 184:src/Riscv.cpp **** 
 1359              		.loc 1 184 13
 184:src/Riscv.cpp **** 
 1360              		.loc 1 184 48 is_stmt 0
 1361              	#APP
 1362              	# 184 "src/Riscv.cpp" 1
 186:src/Riscv.cpp **** 
 1363              		ld a1, 11*8(fp)
 1364              	# 0 "" 2
 1365              		.loc 1 186 13 is_stmt 1
 186:src/Riscv.cpp **** 
 1366              		.loc 1 186 56 is_stmt 0
 1367              	# 186 "src/Riscv.cpp" 1
 1368              		mv a0, a1
 1369              	# 0 "" 2
 1370              	.LVL93:
 190:src/Riscv.cpp **** 
 1371              		.loc 1 190 13 is_stmt 1
 190:src/Riscv.cpp **** 
 1372              		.loc 1 190 36 is_stmt 0
 1373              	#NO_APP
 1374 03e4 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1374      E7800000 
 1375              	.LVL94:
 192:src/Riscv.cpp **** 
 1376              		.loc 1 192 13 is_stmt 1
 192:src/Riscv.cpp **** 
 1377              		.loc 1 192 56 is_stmt 0
 1378              	#APP
 1379              	# 192 "src/Riscv.cpp" 1
 194:src/Riscv.cpp ****             w_sepc(sepc);
 1380              		mv a0, a0
 1381              	# 0 "" 2
 1382              		.loc 1 194 13 is_stmt 1
 1383              	.LVL95:
 1384              	#NO_APP
 1385              	.LBB238:
 1386              	.LBB239:
 187:src/../h/Riscv.hpp **** }
 1387              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1388              		.loc 2 187 77 is_stmt 0
GAS LISTING /tmp/ccmH7fgW.s 			page 41


 1389              	#APP
 1390              	# 187 "src/../h/Riscv.hpp" 1
 1391              		csrw sstatus, s2
 1392              	# 0 "" 2
 1393              	.LVL96:
 1394              	#NO_APP
 1395              	.LBE239:
 1396              	.LBE238:
 195:src/Riscv.cpp ****         }
 1397              		.loc 1 195 13 is_stmt 1
 1398              	.LBB240:
 1399              	.LBB241:
 117:src/../h/Riscv.hpp **** }
 1400              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1401              		.loc 2 117 65 is_stmt 0
 1402              	#APP
 1403              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1404              		csrw sepc, s1
 1405              	# 0 "" 2
 1406              		.loc 2 118 1
 1407              	#NO_APP
 1408 03f8 6FF0DFC6 		j	.L3
 1409              	.LVL97:
 1410              	.L37:
 1411              	.LBE241:
 1412              	.LBE240:
 1413              	.LBE233:
 1414              	.LBB242:
 1415              	.LBB221:
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1416              		.loc 1 198 13 is_stmt 1
 1417              	.LBB222:
 1418              	.LBB223:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1419              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1420              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1421              		.loc 2 111 64 is_stmt 0
 1422              	#APP
 1423              	# 111 "src/../h/Riscv.hpp" 1
 1424              		csrr a5, sepc
 1425              	# 0 "" 2
 1426              	#NO_APP
 1427 0400 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1428              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1429              		.loc 2 112 12 is_stmt 0
 1430 0404 833484F9 		ld	s1,-104(s0)
 1431              	.LVL98:
 1432              	.LBE223:
 1433              	.LBE222:
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1434              		.loc 1 198 38
GAS LISTING /tmp/ccmH7fgW.s 			page 42


 1435 0408 93844400 		addi	s1,s1,4
 1436              	.LVL99:
 199:src/Riscv.cpp **** 
 1437              		.loc 1 199 13 is_stmt 1
 1438              	.LBB224:
 1439              	.LBB225:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1440              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1441              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1442              		.loc 2 181 76 is_stmt 0
 1443              	#APP
 1444              	# 181 "src/../h/Riscv.hpp" 1
 1445              		csrr a5, sstatus
 1446              	# 0 "" 2
 1447              	#NO_APP
 1448 0410 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1449              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1450              		.loc 2 182 12 is_stmt 0
 1451 0414 033904F9 		ld	s2,-112(s0)
 1452              	.LVL100:
 1453              	.LBE225:
 1454              	.LBE224:
 201:src/Riscv.cpp **** 
 1455              		.loc 1 201 13 is_stmt 1
 203:src/Riscv.cpp **** 
 1456              		.loc 1 203 13
 203:src/Riscv.cpp **** 
 1457              		.loc 1 203 48 is_stmt 0
 1458              	#APP
 1459              	# 203 "src/Riscv.cpp" 1
 205:src/Riscv.cpp **** 
 1460              		ld a1, 11*8(fp)
 1461              	# 0 "" 2
 1462              		.loc 1 205 13 is_stmt 1
 205:src/Riscv.cpp **** 
 1463              		.loc 1 205 56 is_stmt 0
 1464              	# 205 "src/Riscv.cpp" 1
 1465              		mv a0, a1
 1466              	# 0 "" 2
 1467              	.LVL101:
 208:src/Riscv.cpp **** 
 1468              		.loc 1 208 13 is_stmt 1
 208:src/Riscv.cpp **** 
 1469              		.loc 1 208 25 is_stmt 0
 1470              	#NO_APP
 1471 0420 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1471      E7800000 
 1472              	.LVL102:
 210:src/Riscv.cpp **** 
 1473              		.loc 1 210 13 is_stmt 1
 212:src/Riscv.cpp **** 
 1474              		.loc 1 212 13
 212:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 43


 1475              		.loc 1 212 56 is_stmt 0
 1476 0428 93070000 		li	a5,0
 1477              	#APP
 1478              	# 212 "src/Riscv.cpp" 1
 214:src/Riscv.cpp ****             w_sepc(sepc);
 1479              		mv a0, a5
 1480              	# 0 "" 2
 1481              		.loc 1 214 13 is_stmt 1
 1482              	.LVL103:
 1483              	#NO_APP
 1484              	.LBB226:
 1485              	.LBB227:
 187:src/../h/Riscv.hpp **** }
 1486              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1487              		.loc 2 187 77 is_stmt 0
 1488              	#APP
 1489              	# 187 "src/../h/Riscv.hpp" 1
 1490              		csrw sstatus, s2
 1491              	# 0 "" 2
 1492              	.LVL104:
 1493              	#NO_APP
 1494              	.LBE227:
 1495              	.LBE226:
 215:src/Riscv.cpp ****         }
 1496              		.loc 1 215 13 is_stmt 1
 1497              	.LBB228:
 1498              	.LBB229:
 117:src/../h/Riscv.hpp **** }
 1499              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1500              		.loc 2 117 65 is_stmt 0
 1501              	#APP
 1502              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1503              		csrw sepc, s1
 1504              	# 0 "" 2
 1505              		.loc 2 118 1
 1506              	#NO_APP
 1507 0438 6FF0DFC2 		j	.L3
 1508              	.LVL105:
 1509              	.L38:
 1510              	.LBE229:
 1511              	.LBE228:
 1512              	.LBE221:
 1513              	.LBB230:
 1514              	.LBB207:
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1515              		.loc 1 218 13 is_stmt 1
 1516              	.LBB208:
 1517              	.LBB209:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1518              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1519              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1520              		.loc 2 111 64 is_stmt 0
GAS LISTING /tmp/ccmH7fgW.s 			page 44


 1521              	#APP
 1522              	# 111 "src/../h/Riscv.hpp" 1
 1523              		csrr a5, sepc
 1524              	# 0 "" 2
 1525              	#NO_APP
 1526 0440 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1527              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1528              		.loc 2 112 12 is_stmt 0
 1529 0444 833484FA 		ld	s1,-88(s0)
 1530              	.LVL106:
 1531              	.LBE209:
 1532              	.LBE208:
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1533              		.loc 1 218 38
 1534 0448 93844400 		addi	s1,s1,4
 1535              	.LVL107:
 219:src/Riscv.cpp **** 
 1536              		.loc 1 219 13 is_stmt 1
 1537              	.LBB210:
 1538              	.LBB211:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1539              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1540              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1541              		.loc 2 181 76 is_stmt 0
 1542              	#APP
 1543              	# 181 "src/../h/Riscv.hpp" 1
 1544              		csrr a5, sstatus
 1545              	# 0 "" 2
 1546              	#NO_APP
 1547 0450 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1548              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1549              		.loc 2 182 12 is_stmt 0
 1550 0454 033904FA 		ld	s2,-96(s0)
 1551              	.LVL108:
 1552              	.LBE211:
 1553              	.LBE210:
 222:src/Riscv.cpp ****             char c = KConsole::getc();
 1554              		.loc 1 222 13 is_stmt 1
 222:src/Riscv.cpp ****             char c = KConsole::getc();
 1555              		.loc 1 222 27 is_stmt 0
 1556 0458 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1556      83B70700 
 1557              	.LVL109:
 1558              	.LBB212:
 1559              	.LBB213:
 129:src/../h/Riscv.hpp **** }
 1560              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1561              		.loc 2 129 69 is_stmt 0
 1562              	#APP
 1563              	# 129 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccmH7fgW.s 			page 45


 1564              		csrw stvec, a5
 1565              	# 0 "" 2
 1566              	.LVL110:
 1567              	#NO_APP
 1568              	.LBE213:
 1569              	.LBE212:
 223:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1570              		.loc 1 223 13 is_stmt 1
 223:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1571              		.loc 1 223 36 is_stmt 0
 1572 0464 97000000 		call	_ZN8KConsole4getcEv@plt
 1572      E7800000 
 1573              	.LVL111:
 224:src/Riscv.cpp **** 
 1574              		.loc 1 224 13 is_stmt 1
 224:src/Riscv.cpp **** 
 1575              		.loc 1 224 27 is_stmt 0
 1576 046c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1576      83B70700 
 1577              	.LVL112:
 1578              	.LBB214:
 1579              	.LBB215:
 129:src/../h/Riscv.hpp **** }
 1580              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1581              		.loc 2 129 69 is_stmt 0
 1582              	#APP
 1583              	# 129 "src/../h/Riscv.hpp" 1
 1584              		csrw stvec, a5
 1585              	# 0 "" 2
 1586              	.LVL113:
 1587              	#NO_APP
 1588              	.LBE215:
 1589              	.LBE214:
 226:src/Riscv.cpp **** 
 1590              		.loc 1 226 13 is_stmt 1
 226:src/Riscv.cpp **** 
 1591              		.loc 1 226 54 is_stmt 0
 1592              	#APP
 1593              	# 226 "src/Riscv.cpp" 1
 229:src/Riscv.cpp ****             w_sepc(sepc);
 1594              		mv a0, a0
 1595              	# 0 "" 2
 1596              		.loc 1 229 13 is_stmt 1
 1597              	.LVL114:
 1598              	#NO_APP
 1599              	.LBB216:
 1600              	.LBB217:
 187:src/../h/Riscv.hpp **** }
 1601              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1602              		.loc 2 187 77 is_stmt 0
 1603              	#APP
 1604              	# 187 "src/../h/Riscv.hpp" 1
 1605              		csrw sstatus, s2
 1606              	# 0 "" 2
 1607              	.LVL115:
GAS LISTING /tmp/ccmH7fgW.s 			page 46


 1608              	#NO_APP
 1609              	.LBE217:
 1610              	.LBE216:
 230:src/Riscv.cpp ****         }
 1611              		.loc 1 230 13 is_stmt 1
 1612              	.LBB218:
 1613              	.LBB219:
 117:src/../h/Riscv.hpp **** }
 1614              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1615              		.loc 2 117 65 is_stmt 0
 1616              	#APP
 1617              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1618              		csrw sepc, s1
 1619              	# 0 "" 2
 1620              		.loc 2 118 1
 1621              	#NO_APP
 1622 0484 6FF01FBE 		j	.L3
 1623              	.LVL116:
 1624              	.L27:
 1625              	.LBE219:
 1626              	.LBE218:
 1627              	.LBE207:
 1628              	.LBE230:
 1629              	.LBE242:
 1630              	.LBE263:
 1631              	.LBE281:
 1632              	.LBE296:
 1633              	.LBE312:
 1634              	.LBE329:
 1635              	.LBE347:
 1636              	.LBE366:
 1637              	.LBE378:
 1638              	.LBB379:
 1639              	.LBB164:
 252:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 1640              		.loc 1 252 9 is_stmt 1
 1641              	.LBB165:
 1642              	.LBB166:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1643              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1644              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1645              		.loc 2 111 64 is_stmt 0
 1646              	#APP
 1647              	# 111 "src/../h/Riscv.hpp" 1
 1648              		csrr a5, sepc
 1649              	# 0 "" 2
 1650              	.LVL117:
 1651              	#NO_APP
 1652 048c 2334F4FC 		sd	a5,-56(s0)
 112:src/../h/Riscv.hpp **** }
 1653              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1654              		.loc 2 112 12 is_stmt 0
GAS LISTING /tmp/ccmH7fgW.s 			page 47


 1655 0490 033784FC 		ld	a4,-56(s0)
 1656              	.LBE166:
 1657              	.LBE165:
 252:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 1658              		.loc 1 252 34
 1659 0494 13074700 		addi	a4,a4,4
 1660              	.LVL118:
 253:src/Riscv.cpp ****         w_sepc(sepc);
 1661              		.loc 1 253 9 is_stmt 1
 1662              	.LBB167:
 1663              	.LBB168:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1664              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1665              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1666              		.loc 2 181 76 is_stmt 0
 1667              	#APP
 1668              	# 181 "src/../h/Riscv.hpp" 1
 1669              		csrr a5, sstatus
 1670              	# 0 "" 2
 1671              	#NO_APP
 1672 049c 2330F4FC 		sd	a5,-64(s0)
 182:src/../h/Riscv.hpp **** }
 1673              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1674              		.loc 2 182 12 is_stmt 0
 1675 04a0 833704FC 		ld	a5,-64(s0)
 1676              	.LBE168:
 1677              	.LBE167:
 253:src/Riscv.cpp ****         w_sepc(sepc);
 1678              		.loc 1 253 53
 1679 04a4 93F7F7EF 		andi	a5,a5,-257
 1680              	.LVL119:
 254:src/Riscv.cpp ****         w_sstatus(sstatus);
 1681              		.loc 1 254 9 is_stmt 1
 1682              	.LBB169:
 1683              	.LBB170:
 117:src/../h/Riscv.hpp **** }
 1684              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1685              		.loc 2 117 65 is_stmt 0
 1686              	#APP
 1687              	# 117 "src/../h/Riscv.hpp" 1
 1688              		csrw sepc, a4
 1689              	# 0 "" 2
 1690              	.LVL120:
 1691              	#NO_APP
 1692              	.LBE170:
 1693              	.LBE169:
 255:src/Riscv.cpp **** 
 1694              		.loc 1 255 9 is_stmt 1
 1695              	.LBB171:
 1696              	.LBB172:
 187:src/../h/Riscv.hpp **** }
 1697              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccmH7fgW.s 			page 48


 1698              		.loc 2 187 77 is_stmt 0
 1699              	#APP
 1700              	# 187 "src/../h/Riscv.hpp" 1
 1701              		csrw sstatus, a5
 1702              	# 0 "" 2
 1703              	.LVL121:
 1704              	#NO_APP
 1705              	.LBE172:
 1706              	.LBE171:
 1707              	.LBE164:
 1708              	.LBE379:
 1709              	.LBE392:
 1710              		.loc 1 281 1
 1711 04b0 6FF05FBB 		j	.L3
 1712              		.cfi_endproc
 1713              	.LFE50:
 1715              		.align	2
 1716              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1718              	_ZN5Riscv17handleTrapConsoleEv:
 1719              	.LFB51:
 282:src/Riscv.cpp **** 
 283:src/Riscv.cpp **** 
 284:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1720              		.loc 1 284 33 is_stmt 1
 1721              		.cfi_startproc
 1722 04b4 130101FE 		addi	sp,sp,-32
 1723              		.cfi_def_cfa_offset 32
 1724 04b8 233C8100 		sd	s0,24(sp)
 1725              		.cfi_offset 8, -8
 1726 04bc 13040102 		addi	s0,sp,32
 1727              		.cfi_def_cfa 8, 0
 285:src/Riscv.cpp ****     uint scause = r_scause();
 1728              		.loc 1 285 5
 1729              	.LBB393:
 1730              	.LBB394:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1731              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1732              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1733              		.loc 2 99 72 is_stmt 0
 1734              	#APP
 1735              	# 99 "src/../h/Riscv.hpp" 1
 1736              		csrr a5, scause
 1737              	# 0 "" 2
 1738              	#NO_APP
 1739 04c4 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1740              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 1741              		.loc 2 100 12 is_stmt 0
 1742 04c8 833784FE 		ld	a5,-24(s0)
 1743              	.LBE394:
 1744              	.LBE393:
 286:src/Riscv.cpp **** 
 287:src/Riscv.cpp **** //    uint64 sepc = r_sepc() + 4;
 288:src/Riscv.cpp **** 
GAS LISTING /tmp/ccmH7fgW.s 			page 49


 289:src/Riscv.cpp ****     if (scause == 0x8000000000000001UL){
 1745              		.loc 1 289 5 is_stmt 1
 290:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
 291:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 292:src/Riscv.cpp **** 
 293:src/Riscv.cpp ****     }
 294:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 1746              		.loc 1 294 10
 295:src/Riscv.cpp ****     {
 296:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 297:src/Riscv.cpp ****         console_handler();
 298:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 299:src/Riscv.cpp ****     }
 300:src/Riscv.cpp **** //    w_sepc(sepc);
 301:src/Riscv.cpp **** }
 1747              		.loc 1 301 1 is_stmt 0
 1748 04cc 03348101 		ld	s0,24(sp)
 1749              		.cfi_restore 8
 1750              		.cfi_def_cfa 2, 32
 1751 04d0 13010102 		addi	sp,sp,32
 1752              		.cfi_def_cfa_offset 0
 1753 04d4 67800000 		jr	ra
 1754              		.cfi_endproc
 1755              	.LFE51:
 1757              	.Letext0:
 1758              		.file 5 "src/../h/../lib/hw.h"
 1759              		.file 6 "src/../h/DoublyLinkedList.hpp"
 1760              		.file 7 "src/../h/MemoryAllocator.hpp"
 1761              		.file 8 "src/../h/Scheduler.hpp"
 1762              		.file 9 "src/../h/_thread.hpp"
 1763              		.file 10 "src/../h/KConsole.hpp"
GAS LISTING /tmp/ccmH7fgW.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccmH7fgW.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccmH7fgW.s:13     .text:0000000000000000 .L0 
     /tmp/ccmH7fgW.s:14     .text:0000000000000000 .L0 
     /tmp/ccmH7fgW.s:15     .text:0000000000000004 .L0 
     /tmp/ccmH7fgW.s:17     .text:0000000000000008 .L0 
     /tmp/ccmH7fgW.s:19     .text:000000000000000c .L0 
     /tmp/ccmH7fgW.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccmH7fgW.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccmH7fgW.s:33     .text:0000000000000014 .L0 
     /tmp/ccmH7fgW.s:34     .text:0000000000000018 .L0 
     /tmp/ccmH7fgW.s:35     .text:0000000000000018 .L0 
     /tmp/ccmH7fgW.s:37     .text:000000000000001c .L0 
     /tmp/ccmH7fgW.s:39     .text:0000000000000020 .L0 
     /tmp/ccmH7fgW.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccmH7fgW.s:48     .text:0000000000000020 .L0 
     /tmp/ccmH7fgW.s:49     .text:0000000000000020 .L0 
     /tmp/ccmH7fgW.s:50     .text:0000000000000024 .L0 
     /tmp/ccmH7fgW.s:57     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:58     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:59     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:60     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:61     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:62     .text:000000000000003c .L0 
     /tmp/ccmH7fgW.s:64     .text:0000000000000040 .L0 
     /tmp/ccmH7fgW.s:69     .text:0000000000000040 .L0 
     /tmp/ccmH7fgW.s:70     .text:0000000000000040 .L0 
     /tmp/ccmH7fgW.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/ccmH7fgW.s:79     .text:0000000000000048 .L0 
     /tmp/ccmH7fgW.s:80     .text:0000000000000048 .L0 
     /tmp/ccmH7fgW.s:84     .text:000000000000004c .L0 
     /tmp/ccmH7fgW.s:87     .text:0000000000000050 .L0 
     /tmp/ccmH7fgW.s:88     .text:0000000000000050 .L0 
     /tmp/ccmH7fgW.s:89     .text:0000000000000050 .L0 
       src/Riscv.cpp:24     .text:0000000000000050 .L0 
     /tmp/ccmH7fgW.s:98     .text:0000000000000054 .L0 
     /tmp/ccmH7fgW.s:104    .text:000000000000005c .L0 
     /tmp/ccmH7fgW.s:111    .text:0000000000000064 .L0 
     /tmp/ccmH7fgW.s:112    .text:0000000000000068 .L0 
     /tmp/ccmH7fgW.s:113    .text:0000000000000068 .L0 
     /tmp/ccmH7fgW.s:115    .text:000000000000006c .L0 
     /tmp/ccmH7fgW.s:116    .text:000000000000006c .L0 
     /tmp/ccmH7fgW.s:118    .text:0000000000000070 .L0 
     /tmp/ccmH7fgW.s:120    .text:0000000000000074 .L0 
     /tmp/ccmH7fgW.s:122    .text:0000000000000078 .L0 
     /tmp/ccmH7fgW.s:124    .text:000000000000007c .L0 
     /tmp/ccmH7fgW.s:126    .text:0000000000000080 .L0 
     /tmp/ccmH7fgW.s:130    .text:0000000000000084 .L0 
     /tmp/ccmH7fgW.s:134    .text:0000000000000084 .L0 
     /tmp/ccmH7fgW.s:143    .text:000000000000008c .L0 
     /tmp/ccmH7fgW.s:151    .text:0000000000000094 .L0 
     /tmp/ccmH7fgW.s:161    .text:000000000000009c .L0 
     /tmp/ccmH7fgW.s:173    .text:00000000000000a4 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 51


     /tmp/ccmH7fgW.s:187    .text:00000000000000ac .L0 
     /tmp/ccmH7fgW.s:203    .text:00000000000000b4 .L0 
     /tmp/ccmH7fgW.s:221    .text:00000000000000bc .L0 
     /tmp/ccmH7fgW.s:241    .text:00000000000000c4 .L0 
     /tmp/ccmH7fgW.s:263    .text:00000000000000cc .L0 
     /tmp/ccmH7fgW.s:287    .text:00000000000000d4 .L0 
     /tmp/ccmH7fgW.s:313    .text:00000000000000dc .L0 
     /tmp/ccmH7fgW.s:319    .text:00000000000000e4 .L0 
     /tmp/ccmH7fgW.s:320    .text:00000000000000e4 .L0 
     /tmp/ccmH7fgW.s:321    .text:00000000000000e4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000000e4 .L0 
     /tmp/ccmH7fgW.s:329    .text:00000000000000ec .L0 
     /tmp/ccmH7fgW.s:330    .text:00000000000000ec .L0 
     /tmp/ccmH7fgW.s:335    .text:00000000000000f0 .L0 
     /tmp/ccmH7fgW.s:340    .text:00000000000000f4 .L0 
     /tmp/ccmH7fgW.s:341    .text:00000000000000f4 .L0 
     /tmp/ccmH7fgW.s:342    .text:00000000000000f4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000000f4 .L0 
     /tmp/ccmH7fgW.s:350    .text:00000000000000fc .L0 
     /tmp/ccmH7fgW.s:351    .text:00000000000000fc .L0 
     /tmp/ccmH7fgW.s:356    .text:0000000000000100 .L0 
     /tmp/ccmH7fgW.s:357    .text:0000000000000100 .L0 
       src/Riscv.cpp:237    .text:0000000000000100 .L0 
     /tmp/ccmH7fgW.s:363    .text:0000000000000104 .L0 
       src/Riscv.cpp:239    .text:0000000000000104 .L0 
     /tmp/ccmH7fgW.s:371    .text:000000000000010c .L0 
     /tmp/ccmH7fgW.s:372    .text:000000000000010c .L0 
     /tmp/ccmH7fgW.s:377    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000114 .L0 
     /tmp/ccmH7fgW.s:387    .text:0000000000000118 .L0 
     /tmp/ccmH7fgW.s:388    .text:0000000000000118 .L0 
     /tmp/ccmH7fgW.s:391    .text:0000000000000120 .L0 
     /tmp/ccmH7fgW.s:392    .text:0000000000000120 .L0 
     /tmp/ccmH7fgW.s:397    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000128 .L0 
     /tmp/ccmH7fgW.s:409    .text:000000000000012c .L0 
     /tmp/ccmH7fgW.s:410    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000012c .L0 
     /tmp/ccmH7fgW.s:422    .text:0000000000000130 .L0 
     /tmp/ccmH7fgW.s:423    .text:0000000000000130 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000130 .L0 
     /tmp/ccmH7fgW.s:430    .text:0000000000000134 .L0 
     /tmp/ccmH7fgW.s:452    .text:0000000000000138 .L0 
     /tmp/ccmH7fgW.s:453    .text:0000000000000138 .L0 
     /tmp/ccmH7fgW.s:454    .text:0000000000000138 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000138 .L0 
     /tmp/ccmH7fgW.s:462    .text:0000000000000140 .L0 
     /tmp/ccmH7fgW.s:463    .text:0000000000000140 .L0 
     /tmp/ccmH7fgW.s:467    .text:0000000000000144 .L0 
     /tmp/ccmH7fgW.s:472    .text:0000000000000148 .L0 
     /tmp/ccmH7fgW.s:473    .text:0000000000000148 .L0 
     /tmp/ccmH7fgW.s:474    .text:0000000000000148 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000148 .L0 
     /tmp/ccmH7fgW.s:482    .text:0000000000000150 .L0 
     /tmp/ccmH7fgW.s:483    .text:0000000000000150 .L0 
     /tmp/ccmH7fgW.s:488    .text:0000000000000154 .L0 
     /tmp/ccmH7fgW.s:489    .text:0000000000000154 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 52


     /tmp/ccmH7fgW.s:490    .text:0000000000000154 .L0 
     /tmp/ccmH7fgW.s:491    .text:0000000000000154 .L0 
     /tmp/ccmH7fgW.s:492    .text:0000000000000154 .L0 
       src/Riscv.cpp:41     .text:0000000000000154 .L0 
     /tmp/ccmH7fgW.s:498    .text:0000000000000158 .L0 
       src/Riscv.cpp:42     .text:0000000000000158 .L0 
     /tmp/ccmH7fgW.s:503    .text:000000000000015c .L0 
       src/Riscv.cpp:43     .text:000000000000015c .L0 
     /tmp/ccmH7fgW.s:508    .text:0000000000000160 .L0 
       src/Riscv.cpp:44     .text:0000000000000160 .L0 
     /tmp/ccmH7fgW.s:513    .text:0000000000000164 .L0 
       src/Riscv.cpp:47     .text:0000000000000164 .L0 
     /tmp/ccmH7fgW.s:519    .text:0000000000000168 .L0 
       src/Riscv.cpp:48     .text:0000000000000168 .L0 
     /tmp/ccmH7fgW.s:525    .text:000000000000016c .L0 
       src/Riscv.cpp:49     .text:000000000000016c .L0 
     /tmp/ccmH7fgW.s:531    .text:0000000000000170 .L0 
       src/Riscv.cpp:50     .text:0000000000000170 .L0 
     /tmp/ccmH7fgW.s:537    .text:0000000000000174 .L0 
     /tmp/ccmH7fgW.s:539    .text:0000000000000174 .L0 
     /tmp/ccmH7fgW.s:542    .text:000000000000017c .L0 
     /tmp/ccmH7fgW.s:543    .text:000000000000017c .L0 
     /tmp/ccmH7fgW.s:545    .text:0000000000000180 .L0 
     /tmp/ccmH7fgW.s:546    .text:0000000000000180 .L0 
     /tmp/ccmH7fgW.s:548    .text:0000000000000184 .L0 
     /tmp/ccmH7fgW.s:552    .text:0000000000000188 .L0 
       src/Riscv.cpp:62     .text:0000000000000188 .L0 
     /tmp/ccmH7fgW.s:562    .text:000000000000018c .L0 
     /tmp/ccmH7fgW.s:563    .text:000000000000018c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000018c .L0 
     /tmp/ccmH7fgW.s:575    .text:0000000000000190 .L0 
     /tmp/ccmH7fgW.s:576    .text:0000000000000190 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000190 .L0 
     /tmp/ccmH7fgW.s:583    .text:0000000000000194 .L0 
     /tmp/ccmH7fgW.s:589    .text:0000000000000198 .L0 
     /tmp/ccmH7fgW.s:600    .text:00000000000001a0 .L0 
     /tmp/ccmH7fgW.s:601    .text:00000000000001a0 .L0 
     /tmp/ccmH7fgW.s:602    .text:00000000000001a0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001a0 .L0 
     /tmp/ccmH7fgW.s:610    .text:00000000000001a8 .L0 
     /tmp/ccmH7fgW.s:611    .text:00000000000001a8 .L0 
     /tmp/ccmH7fgW.s:616    .text:00000000000001ac .L0 
     /tmp/ccmH7fgW.s:621    .text:00000000000001b0 .L0 
     /tmp/ccmH7fgW.s:622    .text:00000000000001b0 .L0 
     /tmp/ccmH7fgW.s:623    .text:00000000000001b0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001b0 .L0 
     /tmp/ccmH7fgW.s:631    .text:00000000000001b8 .L0 
     /tmp/ccmH7fgW.s:632    .text:00000000000001b8 .L0 
     /tmp/ccmH7fgW.s:637    .text:00000000000001bc .L0 
       src/Riscv.cpp:71     .text:00000000000001bc .L0 
     /tmp/ccmH7fgW.s:644    .text:00000000000001c0 .L0 
     /tmp/ccmH7fgW.s:646    .text:00000000000001c0 .L0 
     /tmp/ccmH7fgW.s:651    .text:00000000000001cc .L0 
       src/Riscv.cpp:75     .text:00000000000001cc .L0 
     /tmp/ccmH7fgW.s:661    .text:00000000000001d0 .L0 
     /tmp/ccmH7fgW.s:662    .text:00000000000001d0 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001d0 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 53


     /tmp/ccmH7fgW.s:674    .text:00000000000001d4 .L0 
     /tmp/ccmH7fgW.s:675    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001d4 .L0 
     /tmp/ccmH7fgW.s:682    .text:00000000000001d8 .L0 
     /tmp/ccmH7fgW.s:693    .text:00000000000001dc .L0 
     /tmp/ccmH7fgW.s:694    .text:00000000000001dc .L0 
     /tmp/ccmH7fgW.s:695    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001dc .L0 
     /tmp/ccmH7fgW.s:703    .text:00000000000001e4 .L0 
     /tmp/ccmH7fgW.s:704    .text:00000000000001e4 .L0 
     /tmp/ccmH7fgW.s:709    .text:00000000000001e8 .L0 
     /tmp/ccmH7fgW.s:714    .text:00000000000001ec .L0 
     /tmp/ccmH7fgW.s:715    .text:00000000000001ec .L0 
     /tmp/ccmH7fgW.s:716    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001ec .L0 
     /tmp/ccmH7fgW.s:724    .text:00000000000001f4 .L0 
     /tmp/ccmH7fgW.s:725    .text:00000000000001f4 .L0 
     /tmp/ccmH7fgW.s:730    .text:00000000000001f8 .L0 
       src/Riscv.cpp:84     .text:00000000000001f8 .L0 
     /tmp/ccmH7fgW.s:737    .text:00000000000001fc .L0 
     /tmp/ccmH7fgW.s:739    .text:00000000000001fc .L0 
     /tmp/ccmH7fgW.s:742    .text:0000000000000204 .L0 
       src/Riscv.cpp:86     .text:0000000000000204 .L0 
     /tmp/ccmH7fgW.s:752    .text:0000000000000208 .L0 
     /tmp/ccmH7fgW.s:753    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000208 .L0 
     /tmp/ccmH7fgW.s:765    .text:000000000000020c .L0 
     /tmp/ccmH7fgW.s:766    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000020c .L0 
     /tmp/ccmH7fgW.s:773    .text:0000000000000210 .L0 
     /tmp/ccmH7fgW.s:784    .text:0000000000000214 .L0 
     /tmp/ccmH7fgW.s:785    .text:0000000000000214 .L0 
     /tmp/ccmH7fgW.s:786    .text:0000000000000214 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000214 .L0 
     /tmp/ccmH7fgW.s:794    .text:000000000000021c .L0 
     /tmp/ccmH7fgW.s:795    .text:000000000000021c .L0 
     /tmp/ccmH7fgW.s:800    .text:0000000000000220 .L0 
     /tmp/ccmH7fgW.s:805    .text:0000000000000224 .L0 
     /tmp/ccmH7fgW.s:806    .text:0000000000000224 .L0 
     /tmp/ccmH7fgW.s:807    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000224 .L0 
     /tmp/ccmH7fgW.s:815    .text:000000000000022c .L0 
     /tmp/ccmH7fgW.s:816    .text:000000000000022c .L0 
     /tmp/ccmH7fgW.s:821    .text:0000000000000230 .L0 
     /tmp/ccmH7fgW.s:822    .text:0000000000000230 .L0 
     /tmp/ccmH7fgW.s:825    .text:000000000000023c .L0 
     /tmp/ccmH7fgW.s:828    .text:0000000000000244 .L0 
     /tmp/ccmH7fgW.s:829    .text:0000000000000244 .L0 
     /tmp/ccmH7fgW.s:834    .text:000000000000024c .L0 
     /tmp/ccmH7fgW.s:835    .text:000000000000024c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000024c .L0 
     /tmp/ccmH7fgW.s:847    .text:0000000000000250 .L0 
     /tmp/ccmH7fgW.s:848    .text:0000000000000250 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000250 .L0 
     /tmp/ccmH7fgW.s:855    .text:0000000000000254 .L0 
     /tmp/ccmH7fgW.s:866    .text:0000000000000258 .L0 
     /tmp/ccmH7fgW.s:867    .text:0000000000000258 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 54


     /tmp/ccmH7fgW.s:868    .text:0000000000000258 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000258 .L0 
     /tmp/ccmH7fgW.s:876    .text:0000000000000260 .L0 
     /tmp/ccmH7fgW.s:877    .text:0000000000000260 .L0 
     /tmp/ccmH7fgW.s:882    .text:0000000000000264 .L0 
     /tmp/ccmH7fgW.s:887    .text:0000000000000268 .L0 
     /tmp/ccmH7fgW.s:888    .text:0000000000000268 .L0 
     /tmp/ccmH7fgW.s:889    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000268 .L0 
     /tmp/ccmH7fgW.s:897    .text:0000000000000270 .L0 
     /tmp/ccmH7fgW.s:898    .text:0000000000000270 .L0 
     /tmp/ccmH7fgW.s:903    .text:0000000000000274 .L0 
     /tmp/ccmH7fgW.s:904    .text:0000000000000274 .L0 
     /tmp/ccmH7fgW.s:909    .text:000000000000027c .L0 
     /tmp/ccmH7fgW.s:910    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000027c .L0 
     /tmp/ccmH7fgW.s:922    .text:0000000000000280 .L0 
     /tmp/ccmH7fgW.s:923    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000280 .L0 
     /tmp/ccmH7fgW.s:930    .text:0000000000000284 .L0 
     /tmp/ccmH7fgW.s:941    .text:0000000000000288 .L0 
     /tmp/ccmH7fgW.s:942    .text:0000000000000288 .L0 
     /tmp/ccmH7fgW.s:943    .text:0000000000000288 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000288 .L0 
     /tmp/ccmH7fgW.s:951    .text:0000000000000290 .L0 
     /tmp/ccmH7fgW.s:952    .text:0000000000000290 .L0 
     /tmp/ccmH7fgW.s:957    .text:0000000000000294 .L0 
     /tmp/ccmH7fgW.s:962    .text:0000000000000298 .L0 
     /tmp/ccmH7fgW.s:963    .text:0000000000000298 .L0 
     /tmp/ccmH7fgW.s:964    .text:0000000000000298 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000298 .L0 
     /tmp/ccmH7fgW.s:972    .text:00000000000002a0 .L0 
     /tmp/ccmH7fgW.s:973    .text:00000000000002a0 .L0 
     /tmp/ccmH7fgW.s:978    .text:00000000000002a4 .L0 
     /tmp/ccmH7fgW.s:979    .text:00000000000002a4 .L0 
     /tmp/ccmH7fgW.s:982    .text:00000000000002b0 .L0 
     /tmp/ccmH7fgW.s:983    .text:00000000000002b0 .L0 
     /tmp/ccmH7fgW.s:988    .text:00000000000002b8 .L0 
     /tmp/ccmH7fgW.s:989    .text:00000000000002b8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002b8 .L0 
     /tmp/ccmH7fgW.s:1001   .text:00000000000002bc .L0 
     /tmp/ccmH7fgW.s:1002   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002bc .L0 
     /tmp/ccmH7fgW.s:1009   .text:00000000000002c0 .L0 
     /tmp/ccmH7fgW.s:1020   .text:00000000000002c4 .L0 
     /tmp/ccmH7fgW.s:1021   .text:00000000000002c4 .L0 
     /tmp/ccmH7fgW.s:1022   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002c4 .L0 
     /tmp/ccmH7fgW.s:1030   .text:00000000000002cc .L0 
     /tmp/ccmH7fgW.s:1031   .text:00000000000002cc .L0 
     /tmp/ccmH7fgW.s:1036   .text:00000000000002d0 .L0 
     /tmp/ccmH7fgW.s:1041   .text:00000000000002d4 .L0 
     /tmp/ccmH7fgW.s:1042   .text:00000000000002d4 .L0 
     /tmp/ccmH7fgW.s:1043   .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002d4 .L0 
     /tmp/ccmH7fgW.s:1051   .text:00000000000002dc .L0 
     /tmp/ccmH7fgW.s:1052   .text:00000000000002dc .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 55


     /tmp/ccmH7fgW.s:1057   .text:00000000000002e0 .L0 
     /tmp/ccmH7fgW.s:1058   .text:00000000000002e0 .L0 
     /tmp/ccmH7fgW.s:1059   .text:00000000000002e0 .L0 
       src/Riscv.cpp:134    .text:00000000000002e0 .L0 
     /tmp/ccmH7fgW.s:1065   .text:00000000000002e4 .L0 
       src/Riscv.cpp:135    .text:00000000000002e4 .L0 
     /tmp/ccmH7fgW.s:1070   .text:00000000000002e8 .L0 
       src/Riscv.cpp:137    .text:00000000000002e8 .L0 
     /tmp/ccmH7fgW.s:1076   .text:00000000000002ec .L0 
       src/Riscv.cpp:138    .text:00000000000002ec .L0 
     /tmp/ccmH7fgW.s:1082   .text:00000000000002f0 .L0 
     /tmp/ccmH7fgW.s:1084   .text:00000000000002f0 .L0 
     /tmp/ccmH7fgW.s:1091   .text:00000000000002fc .L0 
     /tmp/ccmH7fgW.s:1097   .text:0000000000000300 .L0 
     /tmp/ccmH7fgW.s:1105   .text:0000000000000308 .L0 
     /tmp/ccmH7fgW.s:1106   .text:0000000000000308 .L0 
     /tmp/ccmH7fgW.s:1109   .text:000000000000030c .L0 
     /tmp/ccmH7fgW.s:1110   .text:000000000000030c .L0 
     /tmp/ccmH7fgW.s:1112   .text:0000000000000310 .L0 
     /tmp/ccmH7fgW.s:1116   .text:0000000000000314 .L0 
       src/Riscv.cpp:147    .text:0000000000000314 .L0 
     /tmp/ccmH7fgW.s:1126   .text:0000000000000318 .L0 
     /tmp/ccmH7fgW.s:1127   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000318 .L0 
     /tmp/ccmH7fgW.s:1139   .text:000000000000031c .L0 
     /tmp/ccmH7fgW.s:1140   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000031c .L0 
     /tmp/ccmH7fgW.s:1147   .text:0000000000000320 .L0 
     /tmp/ccmH7fgW.s:1153   .text:0000000000000324 .L0 
     /tmp/ccmH7fgW.s:1163   .text:000000000000032c .L0 
     /tmp/ccmH7fgW.s:1164   .text:000000000000032c .L0 
     /tmp/ccmH7fgW.s:1165   .text:000000000000032c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000032c .L0 
     /tmp/ccmH7fgW.s:1173   .text:0000000000000334 .L0 
     /tmp/ccmH7fgW.s:1174   .text:0000000000000334 .L0 
     /tmp/ccmH7fgW.s:1178   .text:0000000000000338 .L0 
     /tmp/ccmH7fgW.s:1183   .text:000000000000033c .L0 
     /tmp/ccmH7fgW.s:1184   .text:000000000000033c .L0 
     /tmp/ccmH7fgW.s:1185   .text:000000000000033c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000033c .L0 
     /tmp/ccmH7fgW.s:1193   .text:0000000000000344 .L0 
     /tmp/ccmH7fgW.s:1194   .text:0000000000000344 .L0 
     /tmp/ccmH7fgW.s:1199   .text:0000000000000348 .L0 
     /tmp/ccmH7fgW.s:1200   .text:0000000000000348 .L0 
       src/Riscv.cpp:159    .text:0000000000000348 .L0 
     /tmp/ccmH7fgW.s:1206   .text:000000000000034c .L0 
       src/Riscv.cpp:161    .text:000000000000034c .L0 
     /tmp/ccmH7fgW.s:1213   .text:0000000000000350 .L0 
     /tmp/ccmH7fgW.s:1220   .text:0000000000000354 .L0 
     /tmp/ccmH7fgW.s:1223   .text:0000000000000358 .L0 
     /tmp/ccmH7fgW.s:1226   .text:000000000000035c .L0 
     /tmp/ccmH7fgW.s:1231   .text:0000000000000364 .L0 
     /tmp/ccmH7fgW.s:1232   .text:0000000000000364 .L0 
     /tmp/ccmH7fgW.s:1235   .text:000000000000036c .L0 
     /tmp/ccmH7fgW.s:1236   .text:000000000000036c .L0 
     /tmp/ccmH7fgW.s:1238   .text:0000000000000370 .L0 
     /tmp/ccmH7fgW.s:1241   .text:0000000000000378 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 56


     /tmp/ccmH7fgW.s:1242   .text:0000000000000378 .L0 
     /tmp/ccmH7fgW.s:1248   .text:0000000000000384 .L0 
     /tmp/ccmH7fgW.s:1251   .text:0000000000000384 .L0 
     /tmp/ccmH7fgW.s:1252   .text:0000000000000384 .L0 
     /tmp/ccmH7fgW.s:1254   .text:0000000000000388 .L0 
     /tmp/ccmH7fgW.s:1256   .text:000000000000038c .L0 
     /tmp/ccmH7fgW.s:1261   .text:0000000000000390 .L0 
     /tmp/ccmH7fgW.s:1267   .text:0000000000000394 .L0 
     /tmp/ccmH7fgW.s:1268   .text:0000000000000394 .L0 
     /tmp/ccmH7fgW.s:1270   .text:0000000000000398 .L0 
     /tmp/ccmH7fgW.s:1272   .text:000000000000039c .L0 
     /tmp/ccmH7fgW.s:1280   .text:00000000000003a4 .L0 
     /tmp/ccmH7fgW.s:1281   .text:00000000000003a4 .L0 
     /tmp/ccmH7fgW.s:1283   .text:00000000000003a8 .L0 
     /tmp/ccmH7fgW.s:1290   .text:00000000000003b4 .L0 
     /tmp/ccmH7fgW.s:1291   .text:00000000000003b4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003b4 .L0 
     /tmp/ccmH7fgW.s:1303   .text:00000000000003b8 .L0 
     /tmp/ccmH7fgW.s:1304   .text:00000000000003b8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003b8 .L0 
     /tmp/ccmH7fgW.s:1311   .text:00000000000003bc .L0 
     /tmp/ccmH7fgW.s:1322   .text:00000000000003c0 .L0 
     /tmp/ccmH7fgW.s:1323   .text:00000000000003c0 .L0 
     /tmp/ccmH7fgW.s:1324   .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003c0 .L0 
     /tmp/ccmH7fgW.s:1332   .text:00000000000003c8 .L0 
     /tmp/ccmH7fgW.s:1333   .text:00000000000003c8 .L0 
     /tmp/ccmH7fgW.s:1338   .text:00000000000003cc .L0 
     /tmp/ccmH7fgW.s:1343   .text:00000000000003d0 .L0 
     /tmp/ccmH7fgW.s:1344   .text:00000000000003d0 .L0 
     /tmp/ccmH7fgW.s:1345   .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000003d0 .L0 
     /tmp/ccmH7fgW.s:1353   .text:00000000000003d8 .L0 
     /tmp/ccmH7fgW.s:1354   .text:00000000000003d8 .L0 
     /tmp/ccmH7fgW.s:1359   .text:00000000000003dc .L0 
     /tmp/ccmH7fgW.s:1360   .text:00000000000003dc .L0 
       src/Riscv.cpp:184    .text:00000000000003dc .L0 
     /tmp/ccmH7fgW.s:1366   .text:00000000000003e0 .L0 
       src/Riscv.cpp:186    .text:00000000000003e0 .L0 
     /tmp/ccmH7fgW.s:1372   .text:00000000000003e4 .L0 
     /tmp/ccmH7fgW.s:1374   .text:00000000000003e4 .L0 
     /tmp/ccmH7fgW.s:1377   .text:00000000000003ec .L0 
       src/Riscv.cpp:192    .text:00000000000003ec .L0 
     /tmp/ccmH7fgW.s:1387   .text:00000000000003f0 .L0 
     /tmp/ccmH7fgW.s:1388   .text:00000000000003f0 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000003f0 .L0 
     /tmp/ccmH7fgW.s:1400   .text:00000000000003f4 .L0 
     /tmp/ccmH7fgW.s:1401   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000003f4 .L0 
     /tmp/ccmH7fgW.s:1408   .text:00000000000003f8 .L0 
     /tmp/ccmH7fgW.s:1419   .text:00000000000003fc .L0 
     /tmp/ccmH7fgW.s:1420   .text:00000000000003fc .L0 
     /tmp/ccmH7fgW.s:1421   .text:00000000000003fc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000003fc .L0 
     /tmp/ccmH7fgW.s:1429   .text:0000000000000404 .L0 
     /tmp/ccmH7fgW.s:1430   .text:0000000000000404 .L0 
     /tmp/ccmH7fgW.s:1435   .text:0000000000000408 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 57


     /tmp/ccmH7fgW.s:1440   .text:000000000000040c .L0 
     /tmp/ccmH7fgW.s:1441   .text:000000000000040c .L0 
     /tmp/ccmH7fgW.s:1442   .text:000000000000040c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000040c .L0 
     /tmp/ccmH7fgW.s:1450   .text:0000000000000414 .L0 
     /tmp/ccmH7fgW.s:1451   .text:0000000000000414 .L0 
     /tmp/ccmH7fgW.s:1456   .text:0000000000000418 .L0 
     /tmp/ccmH7fgW.s:1457   .text:0000000000000418 .L0 
       src/Riscv.cpp:203    .text:0000000000000418 .L0 
     /tmp/ccmH7fgW.s:1463   .text:000000000000041c .L0 
       src/Riscv.cpp:205    .text:000000000000041c .L0 
     /tmp/ccmH7fgW.s:1469   .text:0000000000000420 .L0 
     /tmp/ccmH7fgW.s:1471   .text:0000000000000420 .L0 
     /tmp/ccmH7fgW.s:1474   .text:0000000000000428 .L0 
     /tmp/ccmH7fgW.s:1475   .text:0000000000000428 .L0 
     /tmp/ccmH7fgW.s:1476   .text:0000000000000428 .L0 
     /tmp/ccmH7fgW.s:1486   .text:0000000000000430 .L0 
     /tmp/ccmH7fgW.s:1487   .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000430 .L0 
     /tmp/ccmH7fgW.s:1499   .text:0000000000000434 .L0 
     /tmp/ccmH7fgW.s:1500   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000434 .L0 
     /tmp/ccmH7fgW.s:1507   .text:0000000000000438 .L0 
     /tmp/ccmH7fgW.s:1518   .text:000000000000043c .L0 
     /tmp/ccmH7fgW.s:1519   .text:000000000000043c .L0 
     /tmp/ccmH7fgW.s:1520   .text:000000000000043c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000043c .L0 
     /tmp/ccmH7fgW.s:1528   .text:0000000000000444 .L0 
     /tmp/ccmH7fgW.s:1529   .text:0000000000000444 .L0 
     /tmp/ccmH7fgW.s:1534   .text:0000000000000448 .L0 
     /tmp/ccmH7fgW.s:1539   .text:000000000000044c .L0 
     /tmp/ccmH7fgW.s:1540   .text:000000000000044c .L0 
     /tmp/ccmH7fgW.s:1541   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000044c .L0 
     /tmp/ccmH7fgW.s:1549   .text:0000000000000454 .L0 
     /tmp/ccmH7fgW.s:1550   .text:0000000000000454 .L0 
     /tmp/ccmH7fgW.s:1555   .text:0000000000000458 .L0 
     /tmp/ccmH7fgW.s:1556   .text:0000000000000458 .L0 
     /tmp/ccmH7fgW.s:1561   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000460 .L0 
     /tmp/ccmH7fgW.s:1571   .text:0000000000000464 .L0 
     /tmp/ccmH7fgW.s:1572   .text:0000000000000464 .L0 
     /tmp/ccmH7fgW.s:1575   .text:000000000000046c .L0 
     /tmp/ccmH7fgW.s:1576   .text:000000000000046c .L0 
     /tmp/ccmH7fgW.s:1581   .text:0000000000000474 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000474 .L0 
     /tmp/ccmH7fgW.s:1591   .text:0000000000000478 .L0 
       src/Riscv.cpp:226    .text:0000000000000478 .L0 
     /tmp/ccmH7fgW.s:1601   .text:000000000000047c .L0 
     /tmp/ccmH7fgW.s:1602   .text:000000000000047c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000047c .L0 
     /tmp/ccmH7fgW.s:1614   .text:0000000000000480 .L0 
     /tmp/ccmH7fgW.s:1615   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000480 .L0 
     /tmp/ccmH7fgW.s:1622   .text:0000000000000484 .L0 
     /tmp/ccmH7fgW.s:1643   .text:0000000000000488 .L0 
     /tmp/ccmH7fgW.s:1644   .text:0000000000000488 .L0 
GAS LISTING /tmp/ccmH7fgW.s 			page 58


     /tmp/ccmH7fgW.s:1645   .text:0000000000000488 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000488 .L0 
     /tmp/ccmH7fgW.s:1654   .text:0000000000000490 .L0 
     /tmp/ccmH7fgW.s:1655   .text:0000000000000490 .L0 
     /tmp/ccmH7fgW.s:1659   .text:0000000000000494 .L0 
     /tmp/ccmH7fgW.s:1664   .text:0000000000000498 .L0 
     /tmp/ccmH7fgW.s:1665   .text:0000000000000498 .L0 
     /tmp/ccmH7fgW.s:1666   .text:0000000000000498 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000498 .L0 
     /tmp/ccmH7fgW.s:1674   .text:00000000000004a0 .L0 
     /tmp/ccmH7fgW.s:1675   .text:00000000000004a0 .L0 
     /tmp/ccmH7fgW.s:1679   .text:00000000000004a4 .L0 
     /tmp/ccmH7fgW.s:1684   .text:00000000000004a8 .L0 
     /tmp/ccmH7fgW.s:1685   .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004a8 .L0 
     /tmp/ccmH7fgW.s:1697   .text:00000000000004ac .L0 
     /tmp/ccmH7fgW.s:1698   .text:00000000000004ac .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004ac .L0 
     /tmp/ccmH7fgW.s:1711   .text:00000000000004b0 .L0 
     /tmp/ccmH7fgW.s:1712   .text:00000000000004b4 .L0 
     /tmp/ccmH7fgW.s:1718   .text:00000000000004b4 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccmH7fgW.s:1721   .text:00000000000004b4 .L0 
     /tmp/ccmH7fgW.s:1722   .text:00000000000004b4 .L0 
     /tmp/ccmH7fgW.s:1723   .text:00000000000004b8 .L0 
     /tmp/ccmH7fgW.s:1725   .text:00000000000004bc .L0 
     /tmp/ccmH7fgW.s:1727   .text:00000000000004c0 .L0 
     /tmp/ccmH7fgW.s:1731   .text:00000000000004c0 .L0 
     /tmp/ccmH7fgW.s:1732   .text:00000000000004c0 .L0 
     /tmp/ccmH7fgW.s:1733   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:99     .text:00000000000004c0 .L0 
     /tmp/ccmH7fgW.s:1741   .text:00000000000004c8 .L0 
     /tmp/ccmH7fgW.s:1742   .text:00000000000004c8 .L0 
     /tmp/ccmH7fgW.s:1746   .text:00000000000004cc .L0 
     /tmp/ccmH7fgW.s:1747   .text:00000000000004cc .L0 
     /tmp/ccmH7fgW.s:1748   .text:00000000000004cc .L0 
     /tmp/ccmH7fgW.s:1749   .text:00000000000004d0 .L0 
     /tmp/ccmH7fgW.s:1750   .text:00000000000004d0 .L0 
     /tmp/ccmH7fgW.s:1752   .text:00000000000004d4 .L0 
     /tmp/ccmH7fgW.s:1754   .text:00000000000004d8 .L0 
     /tmp/ccmH7fgW.s:1764   .text:00000000000004d8 .L0 
     /tmp/ccmH7fgW.s:372    .text:000000000000010c .L0 
     /tmp/ccmH7fgW.s:392    .text:0000000000000120 .L0 
     /tmp/ccmH7fgW.s:822    .text:0000000000000230 .L0 
     /tmp/ccmH7fgW.s:979    .text:00000000000002a4 .L0 
     /tmp/ccmH7fgW.s:1556   .text:0000000000000458 .L0 
     /tmp/ccmH7fgW.s:1576   .text:000000000000046c .L0 
     /tmp/ccmH7fgW.s:129    .text:0000000000000084 .L26
     /tmp/ccmH7fgW.s:1624   .text:0000000000000488 .L27
     /tmp/ccmH7fgW.s:432    .text:0000000000000138 .L28
     /tmp/ccmH7fgW.s:592    .text:00000000000001a0 .L29
     /tmp/ccmH7fgW.s:684    .text:00000000000001dc .L30
     /tmp/ccmH7fgW.s:775    .text:0000000000000214 .L31
     /tmp/ccmH7fgW.s:857    .text:0000000000000258 .L32
     /tmp/ccmH7fgW.s:932    .text:0000000000000288 .L33
     /tmp/ccmH7fgW.s:1011   .text:00000000000002c4 .L34
     /tmp/ccmH7fgW.s:1156   .text:000000000000032c .L35
     /tmp/ccmH7fgW.s:1313   .text:00000000000003c0 .L36
GAS LISTING /tmp/ccmH7fgW.s 			page 59


     /tmp/ccmH7fgW.s:1410   .text:00000000000003fc .L37
     /tmp/ccmH7fgW.s:1509   .text:000000000000043c .L38
     /tmp/ccmH7fgW.s:107    .text:0000000000000064 .L3
     /tmp/ccmH7fgW.s:585    .text:0000000000000198 .L23
     /tmp/ccmH7fgW.s:137    .text:000000000000008c .L5
     /tmp/ccmH7fgW.s:549    .text:0000000000000188 .L6
     /tmp/ccmH7fgW.s:1149   .text:0000000000000324 .L24
     /tmp/ccmH7fgW.s:1113   .text:0000000000000314 .L14
     /tmp/ccmH7fgW.s:1245   .text:0000000000000384 .L18
     /tmp/ccmH7fgW.s:1275   .text:00000000000003a4 .L16
     /tmp/ccmH7fgW.s:1221   .text:0000000000000358 .L17
     /tmp/ccmH7fgW.s:1215   .text:0000000000000354 .L39
     /tmp/ccmH7fgW.s:1286   .text:00000000000003b4 .L19
     /tmp/ccmH7fgW.s:4817   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccmH7fgW.s:7033   .debug_str:0000000000000b17 .LASF218
     /tmp/ccmH7fgW.s:6743   .debug_str:000000000000019a .LASF219
     /tmp/ccmH7fgW.s:6889   .debug_str:0000000000000681 .LASF220
     /tmp/ccmH7fgW.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccmH7fgW.s:1757   .text:00000000000004d8 .Letext0
     /tmp/ccmH7fgW.s:6683   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccmH7fgW.s:6949   .debug_str:00000000000008c4 .LASF3
     /tmp/ccmH7fgW.s:6817   .debug_str:000000000000041a .LASF0
     /tmp/ccmH7fgW.s:6861   .debug_str:00000000000005d4 .LASF1
     /tmp/ccmH7fgW.s:6967   .debug_str:0000000000000950 .LASF2
     /tmp/ccmH7fgW.s:6979   .debug_str:00000000000009be .LASF4
     /tmp/ccmH7fgW.s:6833   .debug_str:0000000000000491 .LASF5
     /tmp/ccmH7fgW.s:6697   .debug_str:0000000000000057 .LASF6
     /tmp/ccmH7fgW.s:6921   .debug_str:000000000000079a .LASF7
     /tmp/ccmH7fgW.s:6849   .debug_str:0000000000000572 .LASF8
     /tmp/ccmH7fgW.s:6789   .debug_str:000000000000031f .LASF9
     /tmp/ccmH7fgW.s:6795   .debug_str:0000000000000351 .LASF10
     /tmp/ccmH7fgW.s:6731   .debug_str:000000000000013f .LASF11
     /tmp/ccmH7fgW.s:6779   .debug_str:00000000000002d5 .LASF12
     /tmp/ccmH7fgW.s:6745   .debug_str:00000000000001a8 .LASF13
     /tmp/ccmH7fgW.s:6729   .debug_str:000000000000012f .LASF14
     /tmp/ccmH7fgW.s:7005   .debug_str:0000000000000a7b .LASF15
     /tmp/ccmH7fgW.s:6765   .debug_str:000000000000024b .LASF16
     /tmp/ccmH7fgW.s:6995   .debug_str:0000000000000a45 .LASF17
     /tmp/ccmH7fgW.s:7085   .debug_str:0000000000000d52 .LASF68
     /tmp/ccmH7fgW.s:6945   .debug_str:000000000000089c .LASF21
     /tmp/ccmH7fgW.s:6865   .debug_str:00000000000005ed .LASF18
     /tmp/ccmH7fgW.s:6771   .debug_str:0000000000000288 .LASF19
     /tmp/ccmH7fgW.s:7101   .debug_str:0000000000000db8 .LASF20
     /tmp/ccmH7fgW.s:7071   .debug_str:0000000000000ccf .LASF22
     /tmp/ccmH7fgW.s:6773   .debug_str:0000000000000291 .LASF23
     /tmp/ccmH7fgW.s:7031   .debug_str:0000000000000b0a .LASF24
     /tmp/ccmH7fgW.s:6751   .debug_str:00000000000001dd .LASF25
     /tmp/ccmH7fgW.s:6807   .debug_str:00000000000003ca .LASF58
     /tmp/ccmH7fgW.s:6815   .debug_str:0000000000000402 .LASF60
     /tmp/ccmH7fgW.s:7063   .debug_str:0000000000000c9b .LASF26
     /tmp/ccmH7fgW.s:7051   .debug_str:0000000000000c5b .LASF28
     /tmp/ccmH7fgW.s:6961   .debug_str:000000000000092a .LASF30
     /tmp/ccmH7fgW.s:6911   .debug_str:000000000000074d .LASF32
     /tmp/ccmH7fgW.s:6937   .debug_str:0000000000000853 .LASF27
     /tmp/ccmH7fgW.s:6939   .debug_str:000000000000085a .LASF29
     /tmp/ccmH7fgW.s:6907   .debug_str:0000000000000732 .LASF31
     /tmp/ccmH7fgW.s:6853   .debug_str:00000000000005a7 .LASF33
GAS LISTING /tmp/ccmH7fgW.s 			page 60


     /tmp/ccmH7fgW.s:7097   .debug_str:0000000000000da4 .LASF34
     /tmp/ccmH7fgW.s:7039   .debug_str:0000000000000bfc .LASF35
     /tmp/ccmH7fgW.s:6901   .debug_str:0000000000000711 .LASF36
     /tmp/ccmH7fgW.s:6909   .debug_str:0000000000000739 .LASF37
     /tmp/ccmH7fgW.s:6867   .debug_str:00000000000005f6 .LASF38
     /tmp/ccmH7fgW.s:6943   .debug_str:0000000000000888 .LASF39
     /tmp/ccmH7fgW.s:7129   .debug_str:0000000000000ea8 .LASF40
     /tmp/ccmH7fgW.s:6823   .debug_str:0000000000000432 .LASF41
     /tmp/ccmH7fgW.s:7001   .debug_str:0000000000000a67 .LASF42
     /tmp/ccmH7fgW.s:6983   .debug_str:00000000000009eb .LASF43
     /tmp/ccmH7fgW.s:6985   .debug_str:00000000000009fe .LASF44
     /tmp/ccmH7fgW.s:6735   .debug_str:0000000000000153 .LASF45
     /tmp/ccmH7fgW.s:6761   .debug_str:0000000000000226 .LASF46
     /tmp/ccmH7fgW.s:6811   .debug_str:00000000000003db .LASF47
     /tmp/ccmH7fgW.s:6821   .debug_str:000000000000042c .LASF48
     /tmp/ccmH7fgW.s:6753   .debug_str:00000000000001e9 .LASF49
     /tmp/ccmH7fgW.s:6699   .debug_str:000000000000005e .LASF50
     /tmp/ccmH7fgW.s:6973   .debug_str:0000000000000974 .LASF51
     /tmp/ccmH7fgW.s:6965   .debug_str:0000000000000945 .LASF52
     /tmp/ccmH7fgW.s:7121   .debug_str:0000000000000e5d .LASF53
     /tmp/ccmH7fgW.s:7089   .debug_str:0000000000000d5d .LASF54
     /tmp/ccmH7fgW.s:7103   .debug_str:0000000000000dc1 .LASF55
     /tmp/ccmH7fgW.s:7083   .debug_str:0000000000000d48 .LASF56
     /tmp/ccmH7fgW.s:6891   .debug_str:00000000000006b1 .LASF57
     /tmp/ccmH7fgW.s:7095   .debug_str:0000000000000d95 .LASF59
     /tmp/ccmH7fgW.s:6793   .debug_str:0000000000000335 .LASF61
     /tmp/ccmH7fgW.s:6969   .debug_str:000000000000095e .LASF62
     /tmp/ccmH7fgW.s:7123   .debug_str:0000000000000e75 .LASF63
     /tmp/ccmH7fgW.s:6923   .debug_str:00000000000007ad .LASF64
     /tmp/ccmH7fgW.s:6845   .debug_str:0000000000000533 .LASF66
     /tmp/ccmH7fgW.s:6963   .debug_str:0000000000000933 .LASF65
     /tmp/ccmH7fgW.s:6763   .debug_str:000000000000022c .LASF67
     /tmp/ccmH7fgW.s:7093   .debug_str:0000000000000d71 .LASF69
     /tmp/ccmH7fgW.s:7079   .debug_str:0000000000000d23 .LASF103
     /tmp/ccmH7fgW.s:6859   .debug_str:00000000000005cf .LASF70
     /tmp/ccmH7fgW.s:6733   .debug_str:000000000000014e .LASF71
     /tmp/ccmH7fgW.s:6703   .debug_str:0000000000000082 .LASF72
     /tmp/ccmH7fgW.s:6829   .debug_str:0000000000000456 .LASF105
     /tmp/ccmH7fgW.s:6999   .debug_str:0000000000000a62 .LASF73
     /tmp/ccmH7fgW.s:6903   .debug_str:0000000000000719 .LASF74
     /tmp/ccmH7fgW.s:7125   .debug_str:0000000000000e8e .LASF75
     /tmp/ccmH7fgW.s:6975   .debug_str:000000000000098c .LASF78
     /tmp/ccmH7fgW.s:6777   .debug_str:00000000000002b4 .LASF76
     /tmp/ccmH7fgW.s:6971   .debug_str:000000000000096a .LASF77
     /tmp/ccmH7fgW.s:6953   .debug_str:00000000000008d1 .LASF79
     /tmp/ccmH7fgW.s:6915   .debug_str:0000000000000767 .LASF80
     /tmp/ccmH7fgW.s:7099   .debug_str:0000000000000dac .LASF81
     /tmp/ccmH7fgW.s:6893   .debug_str:00000000000006c7 .LASF82
     /tmp/ccmH7fgW.s:7013   .debug_str:0000000000000aa8 .LASF83
     /tmp/ccmH7fgW.s:6723   .debug_str:00000000000000f1 .LASF84
     /tmp/ccmH7fgW.s:7065   .debug_str:0000000000000ca4 .LASF85
     /tmp/ccmH7fgW.s:6767   .debug_str:0000000000000261 .LASF86
     /tmp/ccmH7fgW.s:6827   .debug_str:000000000000044c .LASF87
     /tmp/ccmH7fgW.s:6929   .debug_str:00000000000007e6 .LASF88
     /tmp/ccmH7fgW.s:7025   .debug_str:0000000000000ae9 .LASF142
     /tmp/ccmH7fgW.s:6839   .debug_str:00000000000004e3 .LASF89
     /tmp/ccmH7fgW.s:7069   .debug_str:0000000000000cb3 .LASF90
GAS LISTING /tmp/ccmH7fgW.s 			page 61


     /tmp/ccmH7fgW.s:6701   .debug_str:0000000000000069 .LASF91
     /tmp/ccmH7fgW.s:6739   .debug_str:0000000000000184 .LASF92
     /tmp/ccmH7fgW.s:7045   .debug_str:0000000000000c2e .LASF93
     /tmp/ccmH7fgW.s:6951   .debug_str:00000000000008c9 .LASF94
     /tmp/ccmH7fgW.s:6787   .debug_str:0000000000000315 .LASF95
     /tmp/ccmH7fgW.s:6991   .debug_str:0000000000000a21 .LASF96
     /tmp/ccmH7fgW.s:7109   .debug_str:0000000000000e03 .LASF97
     /tmp/ccmH7fgW.s:7115   .debug_str:0000000000000e22 .LASF221
     /tmp/ccmH7fgW.s:6843   .debug_str:0000000000000517 .LASF222
     /tmp/ccmH7fgW.s:6847   .debug_str:0000000000000555 .LASF98
     /tmp/ccmH7fgW.s:6727   .debug_str:000000000000011a .LASF99
     /tmp/ccmH7fgW.s:6977   .debug_str:00000000000009a9 .LASF100
     /tmp/ccmH7fgW.s:7131   .debug_str:0000000000000eb0 .LASF101
     /tmp/ccmH7fgW.s:7067   .debug_str:0000000000000cae .LASF104
     /tmp/ccmH7fgW.s:6857   .debug_str:00000000000005ca .LASF102
     /tmp/ccmH7fgW.s:7075   .debug_str:0000000000000cf9 .LASF106
     /tmp/ccmH7fgW.s:6897   .debug_str:00000000000006ff .LASF107
     /tmp/ccmH7fgW.s:6919   .debug_str:0000000000000783 .LASF108
     /tmp/ccmH7fgW.s:6941   .debug_str:000000000000086d .LASF109
     /tmp/ccmH7fgW.s:6805   .debug_str:00000000000003af .LASF223
     /tmp/ccmH7fgW.s:6885   .debug_str:000000000000066f .LASF110
     /tmp/ccmH7fgW.s:6691   .debug_str:000000000000002b .LASF111
     /tmp/ccmH7fgW.s:6695   .debug_str:0000000000000047 .LASF112
     /tmp/ccmH7fgW.s:6841   .debug_str:00000000000004ff .LASF113
     /tmp/ccmH7fgW.s:6959   .debug_str:0000000000000921 .LASF114
     /tmp/ccmH7fgW.s:7119   .debug_str:0000000000000e3c .LASF115
     /tmp/ccmH7fgW.s:6873   .debug_str:0000000000000618 .LASF116
     /tmp/ccmH7fgW.s:7081   .debug_str:0000000000000d28 .LASF117
     /tmp/ccmH7fgW.s:6917   .debug_str:0000000000000777 .LASF118
     /tmp/ccmH7fgW.s:6851   .debug_str:0000000000000585 .LASF119
     /tmp/ccmH7fgW.s:7133   .debug_str:0000000000000ebe .LASF120
     /tmp/ccmH7fgW.s:6957   .debug_str:0000000000000902 .LASF121
     /tmp/ccmH7fgW.s:6989   .debug_str:0000000000000a16 .LASF122
     /tmp/ccmH7fgW.s:6781   .debug_str:00000000000002e4 .LASF123
     /tmp/ccmH7fgW.s:6927   .debug_str:00000000000007dd .LASF124
     /tmp/ccmH7fgW.s:6737   .debug_str:0000000000000166 .LASF125
     /tmp/ccmH7fgW.s:6705   .debug_str:0000000000000087 .LASF126
     /tmp/ccmH7fgW.s:7111   .debug_str:0000000000000e15 .LASF127
     /tmp/ccmH7fgW.s:6725   .debug_str:0000000000000114 .LASF128
     /tmp/ccmH7fgW.s:6717   .debug_str:00000000000000ca .LASF129
     /tmp/ccmH7fgW.s:6881   .debug_str:0000000000000653 .LASF130
     /tmp/ccmH7fgW.s:7017   .debug_str:0000000000000abc .LASF131
     /tmp/ccmH7fgW.s:7009   .debug_str:0000000000000a98 .LASF132
     /tmp/ccmH7fgW.s:6855   .debug_str:00000000000005ba .LASF133
     /tmp/ccmH7fgW.s:7019   .debug_str:0000000000000ac4 .LASF134
     /tmp/ccmH7fgW.s:6925   .debug_str:00000000000007c2 .LASF135
     /tmp/ccmH7fgW.s:6711   .debug_str:00000000000000a8 .LASF136
     /tmp/ccmH7fgW.s:7073   .debug_str:0000000000000cde .LASF137
     /tmp/ccmH7fgW.s:6899   .debug_str:0000000000000704 .LASF138
     /tmp/ccmH7fgW.s:6755   .debug_str:00000000000001fb .LASF139
     /tmp/ccmH7fgW.s:7003   .debug_str:0000000000000a6e .LASF140
     /tmp/ccmH7fgW.s:6981   .debug_str:00000000000009c5 .LASF141
     /tmp/ccmH7fgW.s:6913   .debug_str:0000000000000762 .LASF143
     /tmp/ccmH7fgW.s:6863   .debug_str:00000000000005e7 .LASF144
     /tmp/ccmH7fgW.s:6687   .debug_str:0000000000000011 .LASF145
     /tmp/ccmH7fgW.s:7113   .debug_str:0000000000000e1c .LASF146
     /tmp/ccmH7fgW.s:6933   .debug_str:000000000000082b .LASF147
GAS LISTING /tmp/ccmH7fgW.s 			page 62


     /tmp/ccmH7fgW.s:6879   .debug_str:000000000000064a .LASF148
     /tmp/ccmH7fgW.s:7037   .debug_str:0000000000000be4 .LASF149
     /tmp/ccmH7fgW.s:7029   .debug_str:0000000000000b02 .LASF224
     /tmp/ccmH7fgW.s:6825   .debug_str:0000000000000446 .LASF150
     /tmp/ccmH7fgW.s:6835   .debug_str:00000000000004a3 .LASF151
     /tmp/ccmH7fgW.s:6741   .debug_str:000000000000018d .LASF152
     /tmp/ccmH7fgW.s:7047   .debug_str:0000000000000c37 .LASF153
     /tmp/ccmH7fgW.s:6955   .debug_str:00000000000008f2 .LASF154
     /tmp/ccmH7fgW.s:6721   .debug_str:00000000000000e1 .LASF155
     /tmp/ccmH7fgW.s:7107   .debug_str:0000000000000df3 .LASF156
     /tmp/ccmH7fgW.s:7007   .debug_str:0000000000000a87 .LASF157
     /tmp/ccmH7fgW.s:6993   .debug_str:0000000000000a32 .LASF158
     /tmp/ccmH7fgW.s:6685   .debug_str:0000000000000000 .LASF159
     /tmp/ccmH7fgW.s:6801   .debug_str:000000000000038c .LASF160
     /tmp/ccmH7fgW.s:6693   .debug_str:0000000000000042 .LASF161
     /tmp/ccmH7fgW.s:7117   .debug_str:0000000000000e36 .LASF162
     /tmp/ccmH7fgW.s:7049   .debug_str:0000000000000c53 .LASF163
     /tmp/ccmH7fgW.s:7043   .debug_str:0000000000000c24 .LASF164
     /tmp/ccmH7fgW.s:7015   .debug_str:0000000000000ab3 .LASF165
     /tmp/ccmH7fgW.s:7091   .debug_str:0000000000000d67 .LASF166
     /tmp/ccmH7fgW.s:6719   .debug_str:00000000000000d3 .LASF167
     /tmp/ccmH7fgW.s:6947   .debug_str:00000000000008a7 .LASF168
     /tmp/ccmH7fgW.s:6747   .debug_str:00000000000001b8 .LASF169
     /tmp/ccmH7fgW.s:6837   .debug_str:00000000000004b7 .LASF170
     /tmp/ccmH7fgW.s:6757   .debug_str:0000000000000218 .LASF171
     /tmp/ccmH7fgW.s:6749   .debug_str:00000000000001c6 .LASF172
     /tmp/ccmH7fgW.s:6987   .debug_str:0000000000000a05 .LASF173
     /tmp/ccmH7fgW.s:7035   .debug_str:0000000000000bdb .LASF174
     /tmp/ccmH7fgW.s:7077   .debug_str:0000000000000d1c .LASF175
     /tmp/ccmH7fgW.s:7127   .debug_str:0000000000000e9f .LASF176
     /tmp/ccmH7fgW.s:6769   .debug_str:0000000000000283 .LASF177
     /tmp/ccmH7fgW.s:6785   .debug_str:000000000000030a .LASF178
     /tmp/ccmH7fgW.s:6797   .debug_str:000000000000035f .LASF179
     /tmp/ccmH7fgW.s:6759   .debug_str:0000000000000221 .LASF180
     /tmp/ccmH7fgW.s:7053   .debug_str:0000000000000c70 .LASF181
     /tmp/ccmH7fgW.s:7011   .debug_str:0000000000000aa1 .LASF182
     /tmp/ccmH7fgW.s:6831   .debug_str:0000000000000478 .LASF183
     /tmp/ccmH7fgW.s:6809   .debug_str:00000000000003d5 .LASF184
     /tmp/ccmH7fgW.s:6799   .debug_str:0000000000000373 .LASF185
     /tmp/ccmH7fgW.s:6883   .debug_str:000000000000065b .LASF186
     /tmp/ccmH7fgW.s:6871   .debug_str:0000000000000604 .LASF187
     /tmp/ccmH7fgW.s:6813   .debug_str:00000000000003ed .LASF188
     /tmp/ccmH7fgW.s:7021   .debug_str:0000000000000acf .LASF189
     /tmp/ccmH7fgW.s:6931   .debug_str:0000000000000823 .LASF190
     /tmp/ccmH7fgW.s:6791   .debug_str:000000000000032f .LASF191
     /tmp/ccmH7fgW.s:6875   .debug_str:0000000000000620 .LASF192
     /tmp/ccmH7fgW.s:7105   .debug_str:0000000000000dd7 .LASF193
     /tmp/ccmH7fgW.s:6887   .debug_str:000000000000067c .LASF194
     /tmp/ccmH7fgW.s:6895   .debug_str:00000000000006eb .LASF195
     /tmp/ccmH7fgW.s:6819   .debug_str:0000000000000427 .LASF196
     /tmp/ccmH7fgW.s:6707   .debug_str:000000000000008f .LASF197
     /tmp/ccmH7fgW.s:6715   .debug_str:00000000000000b9 .LASF198
     /tmp/ccmH7fgW.s:6877   .debug_str:0000000000000629 .LASF199
     /tmp/ccmH7fgW.s:7041   .debug_str:0000000000000c10 .LASF200
     /tmp/ccmH7fgW.s:6905   .debug_str:000000000000071e .LASF201
     /tmp/ccmH7fgW.s:7027   .debug_str:0000000000000af1 .LASF202
     /tmp/ccmH7fgW.s:7023   .debug_str:0000000000000ae4 .LASF203
GAS LISTING /tmp/ccmH7fgW.s 			page 63


     /tmp/ccmH7fgW.s:6783   .debug_str:0000000000000305 .LASF205
     /tmp/ccmH7fgW.s:6713   .debug_str:00000000000000b4 .LASF204
     /tmp/ccmH7fgW.s:6775   .debug_str:000000000000029d .LASF214
     /tmp/ccmH7fgW.s:1719   .text:00000000000004b4 .LFB51
     /tmp/ccmH7fgW.s:1755   .text:00000000000004d8 .LFE51
     /tmp/ccmH7fgW.s:6997   .debug_str:0000000000000a5b .LASF206
     /tmp/ccmH7fgW.s:1729   .text:00000000000004c0 .LBB393
     /tmp/ccmH7fgW.s:1744   .text:00000000000004cc .LBE393
     /tmp/ccmH7fgW.s:46     .text:0000000000000020 .LFB50
     /tmp/ccmH7fgW.s:1713   .text:00000000000004b4 .LFE50
     /tmp/ccmH7fgW.s:6009   .debug_loc:0000000000000000 .LLST0
     /tmp/ccmH7fgW.s:6689   .debug_str:0000000000000025 .LASF207
     /tmp/ccmH7fgW.s:6024   .debug_loc:0000000000000049 .LLST1
     /tmp/ccmH7fgW.s:7055   .debug_str:0000000000000c87 .LASF208
     /tmp/ccmH7fgW.s:6079   .debug_loc:0000000000000150 .LLST2
     /tmp/ccmH7fgW.s:448    .text:0000000000000138 .LBB174
     /tmp/ccmH7fgW.s:593    .text:00000000000001a0 .LBE174
     /tmp/ccmH7fgW.s:7087   .debug_str:0000000000000d58 .LASF209
     /tmp/ccmH7fgW.s:6090   .debug_loc:0000000000000186 .LLST5
     /tmp/ccmH7fgW.s:6803   .debug_str:00000000000003a7 .LASF210
     /tmp/ccmH7fgW.s:6097   .debug_loc:00000000000001a9 .LLST6
     /tmp/ccmH7fgW.s:6104   .debug_loc:00000000000001cc .LLST7
     /tmp/ccmH7fgW.s:7057   .debug_str:0000000000000c8c .LASF211
     /tmp/ccmH7fgW.s:6111   .debug_loc:00000000000001ef .LLST8
     /tmp/ccmH7fgW.s:7059   .debug_str:0000000000000c91 .LASF212
     /tmp/ccmH7fgW.s:6118   .debug_loc:0000000000000212 .LLST9
     /tmp/ccmH7fgW.s:7061   .debug_str:0000000000000c96 .LASF213
     /tmp/ccmH7fgW.s:6125   .debug_loc:0000000000000235 .LLST10
     /tmp/ccmH7fgW.s:6132   .debug_loc:0000000000000258 .LLST11
     /tmp/ccmH7fgW.s:6139   .debug_loc:000000000000027b .LLST12
     /tmp/ccmH7fgW.s:450    .text:0000000000000138 .LBB175
     /tmp/ccmH7fgW.s:465    .text:0000000000000144 .LBE175
     /tmp/ccmH7fgW.s:470    .text:0000000000000148 .LBB177
     /tmp/ccmH7fgW.s:486    .text:0000000000000154 .LBE177
     /tmp/ccmH7fgW.s:560    .text:000000000000018c .LBB179
     /tmp/ccmH7fgW.s:571    .text:0000000000000190 .LBE179
     /tmp/ccmH7fgW.s:6146   .debug_loc:000000000000029e .LLST13
     /tmp/ccmH7fgW.s:573    .text:0000000000000190 .LBB181
     /tmp/ccmH7fgW.s:587    .text:0000000000000198 .LBE181
     /tmp/ccmH7fgW.s:6153   .debug_loc:00000000000002c1 .LLST14
     /tmp/ccmH7fgW.s:540    .text:000000000000017c .LVL22
     /tmp/ccmH7fgW.s:596    .text:00000000000001a0 .LBB357
     /tmp/ccmH7fgW.s:687    .text:00000000000001dc .LBE357
     /tmp/ccmH7fgW.s:6160   .debug_loc:00000000000002e4 .LLST76
     /tmp/ccmH7fgW.s:6167   .debug_loc:0000000000000307 .LLST77
     /tmp/ccmH7fgW.s:6174   .debug_loc:000000000000032a .LLST78
     /tmp/ccmH7fgW.s:598    .text:00000000000001a0 .LBB358
     /tmp/ccmH7fgW.s:614    .text:00000000000001ac .LBE358
     /tmp/ccmH7fgW.s:619    .text:00000000000001b0 .LBB360
     /tmp/ccmH7fgW.s:635    .text:00000000000001bc .LBE360
     /tmp/ccmH7fgW.s:659    .text:00000000000001d0 .LBB362
     /tmp/ccmH7fgW.s:670    .text:00000000000001d4 .LBE362
     /tmp/ccmH7fgW.s:6181   .debug_loc:000000000000034d .LLST79
     /tmp/ccmH7fgW.s:672    .text:00000000000001d4 .LBB364
     /tmp/ccmH7fgW.s:686    .text:00000000000001dc .LBE364
     /tmp/ccmH7fgW.s:6188   .debug_loc:0000000000000370 .LLST80
     /tmp/ccmH7fgW.s:649    .text:00000000000001cc .LVL33
GAS LISTING /tmp/ccmH7fgW.s 			page 64


     /tmp/ccmH7fgW.s:689    .text:00000000000001dc .LBB338
     /tmp/ccmH7fgW.s:778    .text:0000000000000214 .LBE338
     /tmp/ccmH7fgW.s:6195   .debug_loc:0000000000000393 .LLST71
     /tmp/ccmH7fgW.s:6202   .debug_loc:00000000000003b6 .LLST72
     /tmp/ccmH7fgW.s:6209   .debug_loc:00000000000003d9 .LLST73
     /tmp/ccmH7fgW.s:691    .text:00000000000001dc .LBB339
     /tmp/ccmH7fgW.s:707    .text:00000000000001e8 .LBE339
     /tmp/ccmH7fgW.s:712    .text:00000000000001ec .LBB341
     /tmp/ccmH7fgW.s:728    .text:00000000000001f8 .LBE341
     /tmp/ccmH7fgW.s:750    .text:0000000000000208 .LBB343
     /tmp/ccmH7fgW.s:761    .text:000000000000020c .LBE343
     /tmp/ccmH7fgW.s:6216   .debug_loc:00000000000003fc .LLST74
     /tmp/ccmH7fgW.s:763    .text:000000000000020c .LBB345
     /tmp/ccmH7fgW.s:777    .text:0000000000000214 .LBE345
     /tmp/ccmH7fgW.s:6223   .debug_loc:000000000000041f .LLST75
     /tmp/ccmH7fgW.s:740    .text:0000000000000204 .LVL41
     /tmp/ccmH7fgW.s:780    .text:0000000000000214 .LBB320
     /tmp/ccmH7fgW.s:860    .text:0000000000000258 .LBE320
     /tmp/ccmH7fgW.s:6230   .debug_loc:0000000000000442 .LLST67
     /tmp/ccmH7fgW.s:6237   .debug_loc:0000000000000465 .LLST68
     /tmp/ccmH7fgW.s:782    .text:0000000000000214 .LBB321
     /tmp/ccmH7fgW.s:798    .text:0000000000000220 .LBE321
     /tmp/ccmH7fgW.s:803    .text:0000000000000224 .LBB323
     /tmp/ccmH7fgW.s:819    .text:0000000000000230 .LBE323
     /tmp/ccmH7fgW.s:832    .text:000000000000024c .LBB325
     /tmp/ccmH7fgW.s:843    .text:0000000000000250 .LBE325
     /tmp/ccmH7fgW.s:6244   .debug_loc:0000000000000488 .LLST69
     /tmp/ccmH7fgW.s:845    .text:0000000000000250 .LBB327
     /tmp/ccmH7fgW.s:859    .text:0000000000000258 .LBE327
     /tmp/ccmH7fgW.s:6251   .debug_loc:00000000000004ab .LLST70
     /tmp/ccmH7fgW.s:830    .text:000000000000024c .LVL48
     /tmp/ccmH7fgW.s:862    .text:0000000000000258 .LBB303
     /tmp/ccmH7fgW.s:935    .text:0000000000000288 .LBE303
     /tmp/ccmH7fgW.s:6258   .debug_loc:00000000000004ce .LLST63
     /tmp/ccmH7fgW.s:6265   .debug_loc:00000000000004f1 .LLST64
     /tmp/ccmH7fgW.s:864    .text:0000000000000258 .LBB304
     /tmp/ccmH7fgW.s:880    .text:0000000000000264 .LBE304
     /tmp/ccmH7fgW.s:885    .text:0000000000000268 .LBB306
     /tmp/ccmH7fgW.s:901    .text:0000000000000274 .LBE306
     /tmp/ccmH7fgW.s:907    .text:000000000000027c .LBB308
     /tmp/ccmH7fgW.s:918    .text:0000000000000280 .LBE308
     /tmp/ccmH7fgW.s:6272   .debug_loc:0000000000000514 .LLST65
     /tmp/ccmH7fgW.s:920    .text:0000000000000280 .LBB310
     /tmp/ccmH7fgW.s:934    .text:0000000000000288 .LBE310
     /tmp/ccmH7fgW.s:6279   .debug_loc:0000000000000537 .LLST66
     /tmp/ccmH7fgW.s:905    .text:000000000000027c .LVL54
     /tmp/ccmH7fgW.s:937    .text:0000000000000288 .LBB287
     /tmp/ccmH7fgW.s:1014   .text:00000000000002c4 .LBE287
     /tmp/ccmH7fgW.s:6286   .debug_loc:000000000000055a .LLST59
     /tmp/ccmH7fgW.s:6293   .debug_loc:000000000000057d .LLST60
     /tmp/ccmH7fgW.s:939    .text:0000000000000288 .LBB288
     /tmp/ccmH7fgW.s:955    .text:0000000000000294 .LBE288
     /tmp/ccmH7fgW.s:960    .text:0000000000000298 .LBB290
     /tmp/ccmH7fgW.s:976    .text:00000000000002a4 .LBE290
     /tmp/ccmH7fgW.s:986    .text:00000000000002b8 .LBB292
     /tmp/ccmH7fgW.s:997    .text:00000000000002bc .LBE292
     /tmp/ccmH7fgW.s:6300   .debug_loc:00000000000005a0 .LLST61
GAS LISTING /tmp/ccmH7fgW.s 			page 65


     /tmp/ccmH7fgW.s:999    .text:00000000000002bc .LBB294
     /tmp/ccmH7fgW.s:1013   .text:00000000000002c4 .LBE294
     /tmp/ccmH7fgW.s:6307   .debug_loc:00000000000005c3 .LLST62
     /tmp/ccmH7fgW.s:984    .text:00000000000002b8 .LVL60
     /tmp/ccmH7fgW.s:1016   .text:00000000000002c4 .LBB268
     /tmp/ccmH7fgW.s:1157   .text:000000000000032c .LBE268
     /tmp/ccmH7fgW.s:6314   .debug_loc:00000000000005e6 .LLST48
     /tmp/ccmH7fgW.s:6321   .debug_loc:0000000000000609 .LLST49
     /tmp/ccmH7fgW.s:6328   .debug_loc:000000000000062c .LLST50
     /tmp/ccmH7fgW.s:6335   .debug_loc:000000000000064f .LLST51
     /tmp/ccmH7fgW.s:6342   .debug_loc:0000000000000672 .LLST52
     /tmp/ccmH7fgW.s:6349   .debug_loc:0000000000000695 .LLST53
     /tmp/ccmH7fgW.s:1018   .text:00000000000002c4 .LBB269
     /tmp/ccmH7fgW.s:1034   .text:00000000000002d0 .LBE269
     /tmp/ccmH7fgW.s:1039   .text:00000000000002d4 .LBB271
     /tmp/ccmH7fgW.s:1055   .text:00000000000002e0 .LBE271
     /tmp/ccmH7fgW.s:1087   .text:00000000000002fc .LBB273
     /tmp/ccmH7fgW.s:1103   .text:0000000000000308 .LBE273
     /tmp/ccmH7fgW.s:6366   .debug_loc:00000000000006e0 .LLST54
     /tmp/ccmH7fgW.s:6373   .debug_loc:0000000000000703 .LLST55
     /tmp/ccmH7fgW.s:1093   .text:0000000000000300 .LBB275
     /tmp/ccmH7fgW.s:1101   .text:0000000000000308 .LBE275
     /tmp/ccmH7fgW.s:6380   .debug_loc:0000000000000726 .LLST56
     /tmp/ccmH7fgW.s:1124   .text:0000000000000318 .LBB277
     /tmp/ccmH7fgW.s:1135   .text:000000000000031c .LBE277
     /tmp/ccmH7fgW.s:6389   .debug_loc:000000000000074b .LLST57
     /tmp/ccmH7fgW.s:1137   .text:000000000000031c .LBB279
     /tmp/ccmH7fgW.s:1151   .text:0000000000000324 .LBE279
     /tmp/ccmH7fgW.s:6396   .debug_loc:000000000000076e .LLST58
     /tmp/ccmH7fgW.s:1086   .text:00000000000002fc .LVL68
     /tmp/ccmH7fgW.s:1159   .text:000000000000032c .LBB246
     /tmp/ccmH7fgW.s:1316   .text:00000000000003c0 .LBE246
     /tmp/ccmH7fgW.s:6403   .debug_loc:0000000000000791 .LLST37
     /tmp/ccmH7fgW.s:6410   .debug_loc:00000000000007b4 .LLST38
     /tmp/ccmH7fgW.s:6417   .debug_loc:00000000000007d7 .LLST39
     /tmp/ccmH7fgW.s:6669   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccmH7fgW.s:6424   .debug_loc:00000000000007fa .LLST41
     /tmp/ccmH7fgW.s:1217   .text:0000000000000354 .LBB252
     /tmp/ccmH7fgW.s:6431   .debug_loc:000000000000081d .LLST42
     /tmp/ccmH7fgW.s:6446   .debug_loc:0000000000000857 .LLST43
     /tmp/ccmH7fgW.s:6457   .debug_loc:000000000000088d .LLST44
     /tmp/ccmH7fgW.s:1227   .text:0000000000000364 .LVL82
     /tmp/ccmH7fgW.s:1244   .text:0000000000000384 .LVL83
     /tmp/ccmH7fgW.s:1161   .text:000000000000032c .LBB247
     /tmp/ccmH7fgW.s:1176   .text:0000000000000338 .LBE247
     /tmp/ccmH7fgW.s:1181   .text:000000000000033c .LBB249
     /tmp/ccmH7fgW.s:1197   .text:0000000000000348 .LBE249
     /tmp/ccmH7fgW.s:1249   .text:0000000000000384 .LBB256
     /tmp/ccmH7fgW.s:1259   .text:0000000000000390 .LBE256
     /tmp/ccmH7fgW.s:6464   .debug_loc:00000000000008b0 .LLST45
     /tmp/ccmH7fgW.s:1288   .text:00000000000003b4 .LBB259
     /tmp/ccmH7fgW.s:1299   .text:00000000000003b8 .LBE259
     /tmp/ccmH7fgW.s:6473   .debug_loc:00000000000008d5 .LLST46
     /tmp/ccmH7fgW.s:1301   .text:00000000000003b8 .LBB261
     /tmp/ccmH7fgW.s:1315   .text:00000000000003c0 .LBE261
     /tmp/ccmH7fgW.s:6480   .debug_loc:00000000000008f8 .LLST47
     /tmp/ccmH7fgW.s:1285   .text:00000000000003b4 .LVL87
GAS LISTING /tmp/ccmH7fgW.s 			page 66


     /tmp/ccmH7fgW.s:1318   .text:00000000000003c0 .LBB233
     /tmp/ccmH7fgW.s:1413   .text:00000000000003fc .LBE233
     /tmp/ccmH7fgW.s:6487   .debug_loc:000000000000091b .LLST31
     /tmp/ccmH7fgW.s:6494   .debug_loc:000000000000093e .LLST32
     /tmp/ccmH7fgW.s:6501   .debug_loc:0000000000000961 .LLST33
     /tmp/ccmH7fgW.s:6508   .debug_loc:0000000000000984 .LLST34
     /tmp/ccmH7fgW.s:1320   .text:00000000000003c0 .LBB234
     /tmp/ccmH7fgW.s:1336   .text:00000000000003cc .LBE234
     /tmp/ccmH7fgW.s:1341   .text:00000000000003d0 .LBB236
     /tmp/ccmH7fgW.s:1357   .text:00000000000003dc .LBE236
     /tmp/ccmH7fgW.s:1385   .text:00000000000003f0 .LBB238
     /tmp/ccmH7fgW.s:1396   .text:00000000000003f4 .LBE238
     /tmp/ccmH7fgW.s:6515   .debug_loc:00000000000009a7 .LLST35
     /tmp/ccmH7fgW.s:1398   .text:00000000000003f4 .LBB240
     /tmp/ccmH7fgW.s:1412   .text:00000000000003fc .LBE240
     /tmp/ccmH7fgW.s:6522   .debug_loc:00000000000009ca .LLST36
     /tmp/ccmH7fgW.s:1375   .text:00000000000003ec .LVL94
     /tmp/ccmH7fgW.s:1415   .text:00000000000003fc .LBB221
     /tmp/ccmH7fgW.s:1512   .text:000000000000043c .LBE221
     /tmp/ccmH7fgW.s:6529   .debug_loc:00000000000009ed .LLST25
     /tmp/ccmH7fgW.s:6536   .debug_loc:0000000000000a10 .LLST26
     /tmp/ccmH7fgW.s:6543   .debug_loc:0000000000000a33 .LLST27
     /tmp/ccmH7fgW.s:6550   .debug_loc:0000000000000a56 .LLST28
     /tmp/ccmH7fgW.s:1417   .text:00000000000003fc .LBB222
     /tmp/ccmH7fgW.s:1433   .text:0000000000000408 .LBE222
     /tmp/ccmH7fgW.s:1438   .text:000000000000040c .LBB224
     /tmp/ccmH7fgW.s:1454   .text:0000000000000418 .LBE224
     /tmp/ccmH7fgW.s:1484   .text:0000000000000430 .LBB226
     /tmp/ccmH7fgW.s:1495   .text:0000000000000434 .LBE226
     /tmp/ccmH7fgW.s:6558   .debug_loc:0000000000000a7a .LLST29
     /tmp/ccmH7fgW.s:1497   .text:0000000000000434 .LBB228
     /tmp/ccmH7fgW.s:1511   .text:000000000000043c .LBE228
     /tmp/ccmH7fgW.s:6565   .debug_loc:0000000000000a9d .LLST30
     /tmp/ccmH7fgW.s:1472   .text:0000000000000428 .LVL102
     /tmp/ccmH7fgW.s:1514   .text:000000000000043c .LBB207
     /tmp/ccmH7fgW.s:1627   .text:0000000000000488 .LBE207
     /tmp/ccmH7fgW.s:6572   .debug_loc:0000000000000ac0 .LLST20
     /tmp/ccmH7fgW.s:6579   .debug_loc:0000000000000ae3 .LLST21
     /tmp/ccmH7fgW.s:6586   .debug_loc:0000000000000b06 .LLST22
     /tmp/ccmH7fgW.s:1516   .text:000000000000043c .LBB208
     /tmp/ccmH7fgW.s:1532   .text:0000000000000448 .LBE208
     /tmp/ccmH7fgW.s:1537   .text:000000000000044c .LBB210
     /tmp/ccmH7fgW.s:1553   .text:0000000000000458 .LBE210
     /tmp/ccmH7fgW.s:1558   .text:0000000000000460 .LBB212
     /tmp/ccmH7fgW.s:1569   .text:0000000000000464 .LBE212
     /tmp/ccmH7fgW.s:1578   .text:0000000000000474 .LBB214
     /tmp/ccmH7fgW.s:1589   .text:0000000000000478 .LBE214
     /tmp/ccmH7fgW.s:1599   .text:000000000000047c .LBB216
     /tmp/ccmH7fgW.s:1610   .text:0000000000000480 .LBE216
     /tmp/ccmH7fgW.s:6593   .debug_loc:0000000000000b29 .LLST23
     /tmp/ccmH7fgW.s:1612   .text:0000000000000480 .LBB218
     /tmp/ccmH7fgW.s:1626   .text:0000000000000488 .LBE218
     /tmp/ccmH7fgW.s:6600   .debug_loc:0000000000000b4c .LLST24
     /tmp/ccmH7fgW.s:1573   .text:000000000000046c .LVL111
     /tmp/ccmH7fgW.s:315    .text:00000000000000e4 .LBB194
     /tmp/ccmH7fgW.s:435    .text:0000000000000138 .LBE194
     /tmp/ccmH7fgW.s:6607   .debug_loc:0000000000000b6f .LLST15
GAS LISTING /tmp/ccmH7fgW.s 			page 67


     /tmp/ccmH7fgW.s:6614   .debug_loc:0000000000000b92 .LLST16
     /tmp/ccmH7fgW.s:6621   .debug_loc:0000000000000bb5 .LLST17
     /tmp/ccmH7fgW.s:317    .text:00000000000000e4 .LBB195
     /tmp/ccmH7fgW.s:333    .text:00000000000000f0 .LBE195
     /tmp/ccmH7fgW.s:338    .text:00000000000000f4 .LBB197
     /tmp/ccmH7fgW.s:354    .text:0000000000000100 .LBE197
     /tmp/ccmH7fgW.s:374    .text:0000000000000114 .LBB199
     /tmp/ccmH7fgW.s:385    .text:0000000000000118 .LBE199
     /tmp/ccmH7fgW.s:394    .text:0000000000000128 .LBB201
     /tmp/ccmH7fgW.s:405    .text:000000000000012c .LBE201
     /tmp/ccmH7fgW.s:407    .text:000000000000012c .LBB203
     /tmp/ccmH7fgW.s:418    .text:0000000000000130 .LBE203
     /tmp/ccmH7fgW.s:6628   .debug_loc:0000000000000bd8 .LLST18
     /tmp/ccmH7fgW.s:420    .text:0000000000000130 .LBB205
     /tmp/ccmH7fgW.s:434    .text:0000000000000138 .LBE205
     /tmp/ccmH7fgW.s:6635   .debug_loc:0000000000000bfb .LLST19
     /tmp/ccmH7fgW.s:389    .text:0000000000000120 .LVL11
     /tmp/ccmH7fgW.s:1639   .text:0000000000000488 .LBB164
     /tmp/ccmH7fgW.s:1707   .text:00000000000004b0 .LBE164
     /tmp/ccmH7fgW.s:1641   .text:0000000000000488 .LBB165
     /tmp/ccmH7fgW.s:1657   .text:0000000000000494 .LBE165
     /tmp/ccmH7fgW.s:1662   .text:0000000000000498 .LBB167
     /tmp/ccmH7fgW.s:1677   .text:00000000000004a4 .LBE167
     /tmp/ccmH7fgW.s:1682   .text:00000000000004a8 .LBB169
     /tmp/ccmH7fgW.s:1693   .text:00000000000004ac .LBE169
     /tmp/ccmH7fgW.s:6642   .debug_loc:0000000000000c1e .LLST3
     /tmp/ccmH7fgW.s:1695   .text:00000000000004ac .LBB171
     /tmp/ccmH7fgW.s:1706   .text:00000000000004b0 .LBE171
     /tmp/ccmH7fgW.s:6649   .debug_loc:0000000000000c41 .LLST4
     /tmp/ccmH7fgW.s:66     .text:0000000000000040 .LBB160
     /tmp/ccmH7fgW.s:82     .text:000000000000004c .LBE160
     /tmp/ccmH7fgW.s:10     .text:0000000000000000 .LFB49
     /tmp/ccmH7fgW.s:40     .text:0000000000000020 .LFE49
     /tmp/ccmH7fgW.s:6709   .debug_str:00000000000000a3 .LASF216
     /tmp/ccmH7fgW.s:6935   .debug_str:000000000000083f .LASF215
     /tmp/ccmH7fgW.s:6869   .debug_str:00000000000005fe .LASF217
     /tmp/ccmH7fgW.s:85     .text:0000000000000050 .LVL0
     /tmp/ccmH7fgW.s:106    .text:0000000000000064 .LVL2
     /tmp/ccmH7fgW.s:128    .text:0000000000000084 .LVL3
     /tmp/ccmH7fgW.s:135    .text:0000000000000088 .LVL4
     /tmp/ccmH7fgW.s:1623   .text:0000000000000488 .LVL116
     /tmp/ccmH7fgW.s:1650   .text:000000000000048c .LVL117
     /tmp/ccmH7fgW.s:94     .text:0000000000000054 .LVL1
     /tmp/ccmH7fgW.s:331    .text:00000000000000f0 .LVL5
     /tmp/ccmH7fgW.s:431    .text:0000000000000138 .LVL15
     /tmp/ccmH7fgW.s:612    .text:00000000000001ac .LVL28
     /tmp/ccmH7fgW.s:683    .text:00000000000001dc .LVL36
     /tmp/ccmH7fgW.s:705    .text:00000000000001e8 .LVL37
     /tmp/ccmH7fgW.s:774    .text:0000000000000214 .LVL44
     /tmp/ccmH7fgW.s:796    .text:0000000000000220 .LVL45
     /tmp/ccmH7fgW.s:856    .text:0000000000000258 .LVL50
     /tmp/ccmH7fgW.s:878    .text:0000000000000264 .LVL51
     /tmp/ccmH7fgW.s:931    .text:0000000000000288 .LVL56
     /tmp/ccmH7fgW.s:953    .text:0000000000000294 .LVL57
     /tmp/ccmH7fgW.s:1010   .text:00000000000002c4 .LVL62
     /tmp/ccmH7fgW.s:1032   .text:00000000000002d0 .LVL63
     /tmp/ccmH7fgW.s:1155   .text:000000000000032c .LVL76
GAS LISTING /tmp/ccmH7fgW.s 			page 68


     /tmp/ccmH7fgW.s:1210   .text:0000000000000350 .LVL79
     /tmp/ccmH7fgW.s:1312   .text:00000000000003c0 .LVL89
     /tmp/ccmH7fgW.s:1334   .text:00000000000003cc .LVL90
     /tmp/ccmH7fgW.s:1409   .text:00000000000003fc .LVL97
     /tmp/ccmH7fgW.s:1431   .text:0000000000000408 .LVL98
     /tmp/ccmH7fgW.s:1508   .text:000000000000043c .LVL105
     /tmp/ccmH7fgW.s:1530   .text:0000000000000448 .LVL106
     /tmp/ccmH7fgW.s:642    .text:00000000000001c0 .LVL31
     /tmp/ccmH7fgW.s:647    .text:00000000000001c4 .LVL32
     /tmp/ccmH7fgW.s:735    .text:00000000000001fc .LVL40
     /tmp/ccmH7fgW.s:468    .text:0000000000000148 .LVL16
     /tmp/ccmH7fgW.s:591    .text:00000000000001a0 .LVL27
     /tmp/ccmH7fgW.s:484    .text:0000000000000154 .LVL17
     /tmp/ccmH7fgW.s:517    .text:0000000000000168 .LVL18
     /tmp/ccmH7fgW.s:523    .text:000000000000016c .LVL19
     /tmp/ccmH7fgW.s:529    .text:0000000000000170 .LVL20
     /tmp/ccmH7fgW.s:535    .text:0000000000000174 .LVL21
     /tmp/ccmH7fgW.s:550    .text:0000000000000188 .LVL23
     /tmp/ccmH7fgW.s:584    .text:0000000000000198 .LVL26
     /tmp/ccmH7fgW.s:558    .text:000000000000018c .LVL24
     /tmp/ccmH7fgW.s:568    .text:0000000000000190 .LVL25
     /tmp/ccmH7fgW.s:617    .text:00000000000001b0 .LVL29
     /tmp/ccmH7fgW.s:633    .text:00000000000001bc .LVL30
     /tmp/ccmH7fgW.s:657    .text:00000000000001d0 .LVL34
     /tmp/ccmH7fgW.s:667    .text:00000000000001d4 .LVL35
     /tmp/ccmH7fgW.s:710    .text:00000000000001ec .LVL38
     /tmp/ccmH7fgW.s:726    .text:00000000000001f8 .LVL39
     /tmp/ccmH7fgW.s:748    .text:0000000000000208 .LVL42
     /tmp/ccmH7fgW.s:758    .text:000000000000020c .LVL43
     /tmp/ccmH7fgW.s:801    .text:0000000000000224 .LVL46
     /tmp/ccmH7fgW.s:817    .text:0000000000000230 .LVL47
     /tmp/ccmH7fgW.s:840    .text:0000000000000250 .LVL49
     /tmp/ccmH7fgW.s:883    .text:0000000000000268 .LVL52
     /tmp/ccmH7fgW.s:899    .text:0000000000000274 .LVL53
     /tmp/ccmH7fgW.s:915    .text:0000000000000280 .LVL55
     /tmp/ccmH7fgW.s:958    .text:0000000000000298 .LVL58
     /tmp/ccmH7fgW.s:974    .text:00000000000002a4 .LVL59
     /tmp/ccmH7fgW.s:994    .text:00000000000002bc .LVL61
     /tmp/ccmH7fgW.s:1037   .text:00000000000002d4 .LVL64
     /tmp/ccmH7fgW.s:1053   .text:00000000000002e0 .LVL65
     /tmp/ccmH7fgW.s:1074   .text:00000000000002ec .LVL66
     /tmp/ccmH7fgW.s:1080   .text:00000000000002f0 .LVL67
     /tmp/ccmH7fgW.s:1099   .text:0000000000000308 .LVL70
     /tmp/ccmH7fgW.s:1108   .text:000000000000030c .LVL71
     /tmp/ccmH7fgW.s:1114   .text:0000000000000314 .LVL72
     /tmp/ccmH7fgW.s:1148   .text:0000000000000324 .LVL75
     /tmp/ccmH7fgW.s:1092   .text:0000000000000300 .LVL69
     /tmp/ccmH7fgW.s:1122   .text:0000000000000318 .LVL73
     /tmp/ccmH7fgW.s:1132   .text:000000000000031c .LVL74
     /tmp/ccmH7fgW.s:1179   .text:000000000000033c .LVL77
     /tmp/ccmH7fgW.s:1195   .text:0000000000000348 .LVL78
     /tmp/ccmH7fgW.s:1214   .text:0000000000000354 .LVL80
     /tmp/ccmH7fgW.s:1264   .text:0000000000000394 .LVL85
     /tmp/ccmH7fgW.s:1274   .text:00000000000003a4 .LVL86
     /tmp/ccmH7fgW.s:1224   .text:000000000000035c .LVL81
     /tmp/ccmH7fgW.s:1257   .text:0000000000000390 .LVL84
     /tmp/ccmH7fgW.s:1296   .text:00000000000003b8 .LVL88
GAS LISTING /tmp/ccmH7fgW.s 			page 69


     /tmp/ccmH7fgW.s:1339   .text:00000000000003d0 .LVL91
     /tmp/ccmH7fgW.s:1355   .text:00000000000003dc .LVL92
     /tmp/ccmH7fgW.s:1370   .text:00000000000003e4 .LVL93
     /tmp/ccmH7fgW.s:1383   .text:00000000000003f0 .LVL95
     /tmp/ccmH7fgW.s:1393   .text:00000000000003f4 .LVL96
     /tmp/ccmH7fgW.s:1436   .text:000000000000040c .LVL99
     /tmp/ccmH7fgW.s:1452   .text:0000000000000418 .LVL100
     /tmp/ccmH7fgW.s:1467   .text:0000000000000420 .LVL101
     /tmp/ccmH7fgW.s:1482   .text:0000000000000430 .LVL103
     /tmp/ccmH7fgW.s:1492   .text:0000000000000434 .LVL104
     /tmp/ccmH7fgW.s:1535   .text:000000000000044c .LVL107
     /tmp/ccmH7fgW.s:1551   .text:0000000000000458 .LVL108
     /tmp/ccmH7fgW.s:1597   .text:000000000000047c .LVL114
     /tmp/ccmH7fgW.s:1607   .text:0000000000000480 .LVL115
     /tmp/ccmH7fgW.s:336    .text:00000000000000f4 .LVL6
     /tmp/ccmH7fgW.s:352    .text:0000000000000100 .LVL7
     /tmp/ccmH7fgW.s:369    .text:000000000000010c .LVL8
     /tmp/ccmH7fgW.s:402    .text:000000000000012c .LVL13
     /tmp/ccmH7fgW.s:415    .text:0000000000000130 .LVL14
     /tmp/ccmH7fgW.s:1680   .text:00000000000004a8 .LVL119
     /tmp/ccmH7fgW.s:1690   .text:00000000000004ac .LVL120
     /tmp/ccmH7fgW.s:1703   .text:00000000000004b0 .LVL121
     /tmp/ccmH7fgW.s:1765   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccmH7fgW.s:1216   .text:0000000000000354 .LBB251
     /tmp/ccmH7fgW.s:1246   .text:0000000000000384 .LBE251
     /tmp/ccmH7fgW.s:1262   .text:0000000000000394 .LBB258
     /tmp/ccmH7fgW.s:1278   .text:00000000000003a4 .LBE258
     /tmp/ccmH7fgW.s:1229   .text:0000000000000364 .LBE252
     /tmp/ccmH7fgW.s:1265   .text:0000000000000394 .LBB255
     /tmp/ccmH7fgW.s:1277   .text:00000000000003a4 .LBE255

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
_ZN8KConsole4putcEc
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
_ZN8KConsole4getcEv
