GAS LISTING /tmp/ccd0QvNp.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/ccd0QvNp.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101EF 		addi	sp,sp,-272
  50              		.cfi_def_cfa_offset 272
  51 0024 23341110 		sd	ra,264(sp)
  52 0028 23308110 		sd	s0,256(sp)
  53 002c 233C910E 		sd	s1,248(sp)
  54 0030 2338210F 		sd	s2,240(sp)
  55 0034 2334310F 		sd	s3,232(sp)
  56 0038 2330410F 		sd	s4,224(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040111 		addi	s0,sp,272
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint64 scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB178:
  67              	.LBB179:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccd0QvNp.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/ccd0QvNp.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 233CF4EE 		sd	a5,-264(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 033784EF 		ld	a4,-264(s0)
  81              	.LVL0:
  82              	.LBE179:
  83              	.LBE178:
  22:src/Riscv.cpp ****     uint64 a0reg;
  84              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  85              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  86              		.loc 1 24 5
  87              		.loc 1 24 49 is_stmt 0
  88              	#APP
  89              	# 24 "src/Riscv.cpp" 1
  25              	
  90              		mv s1, a0
  91              	# 0 "" 2
  92              	.LVL1:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  93              		.loc 1 27 5 is_stmt 1
  94              	#NO_APP
  95              	.LBB180:
  96 0050 9307F0FF 		li	a5,-1
  97 0054 9397F703 		slli	a5,a5,63
  98 0058 93871700 		addi	a5,a5,1
  99 005c 630CF70C 		beq	a4,a5,.L32
 100              	.LBE180:
  28:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  29:src/Riscv.cpp ****     }
  30:src/Riscv.cpp ****     else if(scause == 0x0000000000000009UL){
 101              		.loc 1 30 10
GAS LISTING /tmp/ccd0QvNp.s 			page 5


 102              	.LBB453:
 103              	.LBB181:
 104 0060 93079000 		li	a5,9
 105 0064 630CF70E 		beq	a4,a5,.L33
 106              	.LBE181:
 107              	.LBE453:
  31:src/Riscv.cpp ****         uint64 sepc = r_sepc();
  32:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
  33:src/Riscv.cpp **** 
  34:src/Riscv.cpp ****         w_sepc(sepc + 4);
  35:src/Riscv.cpp ****         w_sstatus(sstatus);
  36:src/Riscv.cpp ****     }
  37:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
 108              		.loc 1 37 10
 109              	.LBB454:
 110              	.LBB436:
 111              	.LBB182:
 112 0068 9307F0FF 		li	a5,-1
 113 006c 9397F703 		slli	a5,a5,63
 114 0070 93879700 		addi	a5,a5,9
 115 0074 630AF710 		beq	a4,a5,.L34
 116              	.LBE182:
 117              	.LBE436:
 118              	.LBE454:
  38:src/Riscv.cpp ****         console_handler();
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL){
 119              		.loc 1 40 10
 120              	.LBB455:
 121              	.LBB437:
 122              	.LBB413:
 123              	.LBB183:
 124 0078 93078000 		li	a5,8
 125 007c 6310F70C 		bne	a4,a5,.L3
 126              	.LBE183:
 127              	.LBE413:
 128              	.LBE437:
 129              	.LBE455:
  41:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  42:src/Riscv.cpp **** 
  43:src/Riscv.cpp ****         //call from yield
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp ****         if(a0reg==0x11){
 130              		.loc 1 45 9
 131              	.LBB456:
 132              	.LBB438:
 133              	.LBB414:
 134              	.LBB400:
 135              	.LBB184:
 136 0080 93071001 		li	a5,17
 137 0084 6388F410 		beq	s1,a5,.L35
 138              	.LVL2:
 139              	.L8:
 140              	.LBE184:
 141              	.LBE400:
 142              	.LBE414:
 143              	.LBE438:
GAS LISTING /tmp/ccd0QvNp.s 			page 6


 144              	.LBE456:
  46:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  47:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp ****             _thread::thread_t *arg1;
  51:src/Riscv.cpp ****             _thread::Body arg2;
  52:src/Riscv.cpp ****             uint64 arg3;
  53:src/Riscv.cpp ****             uint64 *arg4;
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  57:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  58:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  65:src/Riscv.cpp **** 
  66:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  67:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  68:src/Riscv.cpp ****             *arg1=t;
  69:src/Riscv.cpp **** 
  70:src/Riscv.cpp ****             uint64 ret;
  71:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  72:src/Riscv.cpp ****             else ret =-1;
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****             //return _thread* adress through a0
  76:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  77:src/Riscv.cpp **** 
  78:src/Riscv.cpp ****             w_sstatus(sstatus);
  79:src/Riscv.cpp ****             w_sepc(sepc);
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp ****         if(a0reg== 0x01 ){
 145              		.loc 1 81 9
 146              	.LBB457:
 147              	.LBB439:
 148              	.LBB415:
 149              	.LBB401:
 150              	.LBB194:
 151 0088 93071000 		li	a5,1
 152 008c 6388F416 		beq	s1,a5,.L36
 153              	.LBE194:
 154              	.LBE401:
 155              	.LBE415:
 156              	.LBE439:
 157              	.LBE457:
  82:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  84:src/Riscv.cpp ****             //kmem_alloc
  85:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read size from a1 and move it to arg1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             //write return value to a0 register
GAS LISTING /tmp/ccd0QvNp.s 			page 7


  89:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****             w_sstatus(sstatus);
  92:src/Riscv.cpp ****             w_sepc(sepc);
  93:src/Riscv.cpp ****         }
  94:src/Riscv.cpp ****         else if(a0reg==0x02){
 158              		.loc 1 94 14
 159              	.LBB458:
 160              	.LBB440:
 161              	.LBB416:
 162              	.LBB402:
 163              	.LBB388:
 164              	.LBB195:
 165 0090 93072000 		li	a5,2
 166 0094 6382F41A 		beq	s1,a5,.L37
 167              	.LBE195:
 168              	.LBE388:
 169              	.LBE402:
 170              	.LBE416:
 171              	.LBE440:
 172              	.LBE458:
  95:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //read pointer to free from a1 and move
  99:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 100:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 101:src/Riscv.cpp **** 
 102:src/Riscv.cpp ****             w_sstatus(sstatus);
 103:src/Riscv.cpp ****             w_sepc(sepc);
 104:src/Riscv.cpp ****         }
 105:src/Riscv.cpp **** 
 106:src/Riscv.cpp ****         else if(a0reg==0x12){
 173              		.loc 1 106 14
 174              	.LBB459:
 175              	.LBB441:
 176              	.LBB417:
 177              	.LBB403:
 178              	.LBB389:
 179              	.LBB369:
 180              	.LBB196:
 181 0098 93072001 		li	a5,18
 182 009c 638AF41C 		beq	s1,a5,.L38
 183              	.LBE196:
 184              	.LBE369:
 185              	.LBE389:
 186              	.LBE403:
 187              	.LBE417:
 188              	.LBE441:
 189              	.LBE459:
 107:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 108:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 109:src/Riscv.cpp **** 
 110:src/Riscv.cpp ****             _thread::running->finished=true;
 111:src/Riscv.cpp ****             _thread::dispatch();
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             w_sstatus(sstatus);
GAS LISTING /tmp/ccd0QvNp.s 			page 8


 114:src/Riscv.cpp ****             w_sepc(sepc);
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****         }
 118:src/Riscv.cpp ****         else if(a0reg == 0x13){
 190              		.loc 1 118 14
 191              	.LBB460:
 192              	.LBB442:
 193              	.LBB418:
 194              	.LBB404:
 195              	.LBB390:
 196              	.LBB370:
 197              	.LBB351:
 198              	.LBB197:
 199 00a0 93073001 		li	a5,19
 200 00a4 6388F420 		beq	s1,a5,.L39
 201              	.LBE197:
 202              	.LBE351:
 203              	.LBE370:
 204              	.LBE390:
 205              	.LBE404:
 206              	.LBE418:
 207              	.LBE442:
 208              	.LBE460:
 119:src/Riscv.cpp ****             //thread dispatch
 120:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 121:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 122:src/Riscv.cpp **** 
 123:src/Riscv.cpp **** 
 124:src/Riscv.cpp ****             _thread::dispatch();
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp ****             w_sstatus(sstatus);
 127:src/Riscv.cpp ****             w_sepc(sepc);
 128:src/Riscv.cpp ****         }
 129:src/Riscv.cpp **** 
 130:src/Riscv.cpp ****         else if(a0reg==0x04){
 209              		.loc 1 130 14
 210              	.LBB461:
 211              	.LBB443:
 212              	.LBB419:
 213              	.LBB405:
 214              	.LBB391:
 215              	.LBB371:
 216              	.LBB352:
 217              	.LBB334:
 218              	.LBB198:
 219 00a8 93074000 		li	a5,4
 220 00ac 638CF422 		beq	s1,a5,.L40
 221              	.LBE198:
 222              	.LBE334:
 223              	.LBE352:
 224              	.LBE371:
 225              	.LBE391:
 226              	.LBE405:
 227              	.LBE419:
 228              	.LBE443:
 229              	.LBE461:
GAS LISTING /tmp/ccd0QvNp.s 			page 9


 131:src/Riscv.cpp ****             //call from yield
 132:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 133:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 136:src/Riscv.cpp ****             _thread::dispatch();
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             w_sstatus(sstatus);
 139:src/Riscv.cpp ****             w_sepc(sepc);
 140:src/Riscv.cpp ****         }
 141:src/Riscv.cpp ****         else if(a0reg==0x21){
 230              		.loc 1 141 14
 231              	.LBB462:
 232              	.LBB444:
 233              	.LBB420:
 234              	.LBB406:
 235              	.LBB392:
 236              	.LBB372:
 237              	.LBB353:
 238              	.LBB335:
 239              	.LBB318:
 240              	.LBB199:
 241 00b0 93071002 		li	a5,33
 242 00b4 6386F426 		beq	s1,a5,.L41
 243              	.LBE199:
 244              	.LBE318:
 245              	.LBE335:
 246              	.LBE353:
 247              	.LBE372:
 248              	.LBE392:
 249              	.LBE406:
 250              	.LBE420:
 251              	.LBE444:
 252              	.LBE462:
 142:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 143:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 144:src/Riscv.cpp **** 
 145:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 146:src/Riscv.cpp ****            uint64 arg2;
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 149:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 152:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 155:src/Riscv.cpp ****             sem->open();
 156:src/Riscv.cpp ****             *arg1=sem;
 157:src/Riscv.cpp **** 
 158:src/Riscv.cpp ****             uint64 ret=0;
 159:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 160:src/Riscv.cpp ****             else ret=-1;
 161:src/Riscv.cpp **** 
 162:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 163:src/Riscv.cpp **** 
 164:src/Riscv.cpp ****             w_sstatus(sstatus);
GAS LISTING /tmp/ccd0QvNp.s 			page 10


 165:src/Riscv.cpp ****             w_sepc(sepc);
 166:src/Riscv.cpp ****         }
 167:src/Riscv.cpp ****         else if(a0reg==0x22){
 253              		.loc 1 167 14
 254              	.LBB463:
 255              	.LBB445:
 256              	.LBB421:
 257              	.LBB407:
 258              	.LBB393:
 259              	.LBB373:
 260              	.LBB354:
 261              	.LBB336:
 262              	.LBB319:
 263              	.LBB303:
 264              	.LBB200:
 265 00b8 93072002 		li	a5,34
 266 00bc 638AF42C 		beq	s1,a5,.L42
 267              	.LBE200:
 268              	.LBE303:
 269              	.LBE319:
 270              	.LBE336:
 271              	.LBE354:
 272              	.LBE373:
 273              	.LBE393:
 274              	.LBE407:
 275              	.LBE421:
 276              	.LBE445:
 277              	.LBE463:
 168:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 169:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 170:src/Riscv.cpp **** 
 171:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 172:src/Riscv.cpp **** 
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 179:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 180:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 181:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 182:src/Riscv.cpp ****                 t->setDeblocked();
 183:src/Riscv.cpp ****                 sem->val++;
 184:src/Riscv.cpp ****                 Scheduler::put(t);
 185:src/Riscv.cpp ****             }
 186:src/Riscv.cpp ****              sem->close();
 187:src/Riscv.cpp **** 
 188:src/Riscv.cpp ****             delete sem;
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp ****             w_sstatus(sstatus);
 191:src/Riscv.cpp ****             w_sepc(sepc);
 192:src/Riscv.cpp ****         }
 193:src/Riscv.cpp ****         else if(a0reg==0x23){
 278              		.loc 1 193 14
 279              	.LBB464:
 280              	.LBB446:
GAS LISTING /tmp/ccd0QvNp.s 			page 11


 281              	.LBB422:
 282              	.LBB408:
 283              	.LBB394:
 284              	.LBB374:
 285              	.LBB355:
 286              	.LBB337:
 287              	.LBB320:
 288              	.LBB304:
 289              	.LBB283:
 290              	.LBB201:
 291 00c0 93073002 		li	a5,35
 292 00c4 6382F436 		beq	s1,a5,.L43
 293              	.LBE201:
 294              	.LBE283:
 295              	.LBE304:
 296              	.LBE320:
 297              	.LBE337:
 298              	.LBE355:
 299              	.LBE374:
 300              	.LBE394:
 301              	.LBE408:
 302              	.LBE422:
 303              	.LBE446:
 304              	.LBE464:
 194:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 195:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 202:src/Riscv.cpp **** 
 203:src/Riscv.cpp ****             uint64 ret;
 204:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 205:src/Riscv.cpp ****             if(arg1->isOpened()) {
 206:src/Riscv.cpp ****                  ret = arg1->wait();
 207:src/Riscv.cpp ****             }
 208:src/Riscv.cpp ****             else{
 209:src/Riscv.cpp ****                 ret=-1;
 210:src/Riscv.cpp ****             }
 211:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 212:src/Riscv.cpp **** 
 213:src/Riscv.cpp ****             w_sstatus(sstatus);
 214:src/Riscv.cpp ****             w_sepc(sepc);
 215:src/Riscv.cpp ****         }
 216:src/Riscv.cpp ****         else if(a0reg==0x24){
 305              		.loc 1 216 14
 306              	.LBB465:
 307              	.LBB447:
 308              	.LBB423:
 309              	.LBB409:
 310              	.LBB395:
 311              	.LBB375:
 312              	.LBB356:
 313              	.LBB338:
 314              	.LBB321:
GAS LISTING /tmp/ccd0QvNp.s 			page 12


 315              	.LBB305:
 316              	.LBB284:
 317              	.LBB258:
 318              	.LBB202:
 319 00c8 93074002 		li	a5,36
 320 00cc 6384F43A 		beq	s1,a5,.L44
 321              	.LBE202:
 322              	.LBE258:
 323              	.LBE284:
 324              	.LBE305:
 325              	.LBE321:
 326              	.LBE338:
 327              	.LBE356:
 328              	.LBE375:
 329              	.LBE395:
 330              	.LBE409:
 331              	.LBE423:
 332              	.LBE447:
 333              	.LBE465:
 217:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 218:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 219:src/Riscv.cpp **** 
 220:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 221:src/Riscv.cpp **** 
 222:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 223:src/Riscv.cpp **** 
 224:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 225:src/Riscv.cpp **** 
 226:src/Riscv.cpp ****             uint64 ret;
 227:src/Riscv.cpp ****             if(arg1->isOpened()) {
 228:src/Riscv.cpp ****                 arg1->signal();
 229:src/Riscv.cpp ****                 ret=0;
 230:src/Riscv.cpp ****             }
 231:src/Riscv.cpp ****             else{
 232:src/Riscv.cpp ****                 ret = -1;
 233:src/Riscv.cpp ****             }
 234:src/Riscv.cpp **** 
 235:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp ****             w_sstatus(sstatus);
 238:src/Riscv.cpp ****             w_sepc(sepc);
 239:src/Riscv.cpp ****         }
 240:src/Riscv.cpp ****         else if(a0reg==0x41){
 334              		.loc 1 240 14
 335              	.LBB466:
 336              	.LBB448:
 337              	.LBB424:
 338              	.LBB410:
 339              	.LBB396:
 340              	.LBB376:
 341              	.LBB357:
 342              	.LBB339:
 343              	.LBB322:
 344              	.LBB306:
 345              	.LBB285:
 346              	.LBB259:
 347              	.LBB244:
GAS LISTING /tmp/ccd0QvNp.s 			page 13


 348              	.LBB203:
 349 00d0 93071004 		li	a5,65
 350 00d4 6388F43E 		beq	s1,a5,.L45
 351              	.LBE203:
 352              	.LBE244:
 353              	.LBE259:
 354              	.LBE285:
 355              	.LBE306:
 356              	.LBE322:
 357              	.LBE339:
 358              	.LBE357:
 359              	.LBE376:
 360              	.LBE396:
 361              	.LBE410:
 362              	.LBE424:
 363              	.LBE448:
 364              	.LBE466:
 241:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 242:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp ****             //call method from kernel Console class
 245:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 246:src/Riscv.cpp ****             char c = __getc();
 247:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 250:src/Riscv.cpp **** 
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp ****             w_sstatus(sstatus);
 253:src/Riscv.cpp ****             w_sepc(sepc);
 254:src/Riscv.cpp ****         }
 255:src/Riscv.cpp ****         else if(a0reg==0x42){
 365              		.loc 1 255 14
 366              	.LBB467:
 367              	.LBB449:
 368              	.LBB425:
 369              	.LBB411:
 370              	.LBB397:
 371              	.LBB377:
 372              	.LBB358:
 373              	.LBB340:
 374              	.LBB323:
 375              	.LBB307:
 376              	.LBB286:
 377              	.LBB260:
 378              	.LBB245:
 379              	.LBB231:
 380              	.LBB204:
 381 00d8 93072004 		li	a5,66
 382 00dc 6390F406 		bne	s1,a5,.L3
 383              	.LBB205:
 256:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 384              		.loc 1 256 13
 385              	.LBB206:
 386              	.LBB207:
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 14


 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 387              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 388              		.loc 2 111 5
 389              		.loc 2 111 64 is_stmt 0
 390              	#APP
 391              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 392              		csrr a5, sepc
 393              	# 0 "" 2
 394              	#NO_APP
 395 00e4 2334F4FC 		sd	a5,-56(s0)
 396              		.loc 2 112 5 is_stmt 1
 397              		.loc 2 112 12 is_stmt 0
 398 00e8 833484FC 		ld	s1,-56(s0)
 399              	.LVL3:
 400              	.LBE207:
 401              	.LBE206:
 402              		.loc 1 256 38
 403 00ec 93844400 		addi	s1,s1,4
 404              	.LVL4:
 257:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 405              		.loc 1 257 13 is_stmt 1
 406              	.LBB208:
 407              	.LBB209:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccd0QvNp.s 			page 15


 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 408              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 409              		.loc 2 181 5
 410              		.loc 2 181 76 is_stmt 0
 411              	#APP
 412              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 413              		csrr a5, sstatus
 414              	# 0 "" 2
 415              	#NO_APP
 416 00f4 2330F4FC 		sd	a5,-64(s0)
 417              		.loc 2 182 5 is_stmt 1
 418              		.loc 2 182 12 is_stmt 0
 419 00f8 033904FC 		ld	s2,-64(s0)
GAS LISTING /tmp/ccd0QvNp.s 			page 16


 420              	.LVL5:
 421              	.LBE209:
 422              	.LBE208:
 258:src/Riscv.cpp **** 
 259:src/Riscv.cpp ****             char c;
 423              		.loc 1 259 13 is_stmt 1
 260:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 424              		.loc 1 260 13
 425              		.loc 1 260 48 is_stmt 0
 426              	#APP
 427              	# 260 "src/Riscv.cpp" 1
 261              	
 262:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 428              		ld a1, 11*8(fp)
 429              	# 0 "" 2
 430              		.loc 1 262 13 is_stmt 1
 431              		.loc 1 262 53 is_stmt 0
 432              	# 262 "src/Riscv.cpp" 1
 263              	
 433              		mv a0, a1
 434              	# 0 "" 2
 435              	#NO_APP
 436 0104 1375F50F 		andi	a0,a0,0xff
 437              	.LVL6:
 264:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 438              		.loc 1 264 13 is_stmt 1
 439              		.loc 1 264 27 is_stmt 0
 440 0108 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 440      83B70700 
 441              	.LVL7:
 442              	.LBB210:
 443              	.LBB211:
 129:src/../h/Riscv.hpp **** }
 444              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 445              		.loc 2 129 69 is_stmt 0
 446              	#APP
 447              	# 129 "src/../h/Riscv.hpp" 1
 448              		csrw stvec, a5
 449              	# 0 "" 2
 450              	.LVL8:
 451              	#NO_APP
 452              	.LBE211:
 453              	.LBE210:
 265:src/Riscv.cpp ****             __putc(c);
 454              		.loc 1 265 13 is_stmt 1
 455              		.loc 1 265 19 is_stmt 0
 456 0114 97000000 		call	__putc@plt
 456      E7800000 
 457              	.LVL9:
 266:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 458              		.loc 1 266 13 is_stmt 1
 459              		.loc 1 266 27 is_stmt 0
 460 011c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 460      83B70700 
 461              	.LVL10:
 462              	.LBB212:
GAS LISTING /tmp/ccd0QvNp.s 			page 17


 463              	.LBB213:
 129:src/../h/Riscv.hpp **** }
 464              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 465              		.loc 2 129 69 is_stmt 0
 466              	#APP
 467              	# 129 "src/../h/Riscv.hpp" 1
 468              		csrw stvec, a5
 469              	# 0 "" 2
 470              	.LVL11:
 471              	#NO_APP
 472              	.LBE213:
 473              	.LBE212:
 267:src/Riscv.cpp **** 
 268:src/Riscv.cpp ****             w_sstatus(sstatus);
 474              		.loc 1 268 13 is_stmt 1
 475              	.LBB214:
 476              	.LBB215:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 477              		.loc 2 187 5
 478              		.loc 2 187 77 is_stmt 0
 479              	#APP
 480              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 481              		csrw sstatus, s2
 482              	# 0 "" 2
 483              	.LVL12:
 484              	#NO_APP
 485              	.LBE215:
 486              	.LBE214:
 269:src/Riscv.cpp ****             w_sepc(sepc);
 487              		.loc 1 269 13 is_stmt 1
 488              	.LBB216:
 489              	.LBB217:
 117:src/../h/Riscv.hpp **** }
 490              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 491              		.loc 2 117 65 is_stmt 0
 492              	#APP
 493              	# 117 "src/../h/Riscv.hpp" 1
 494              		csrw sepc, s1
 495              	# 0 "" 2
 496              	.LVL13:
 497              	#NO_APP
 498              	.LBE217:
 499              	.LBE216:
 500              	.LBE205:
 501              	.LBE204:
 502              	.LBE231:
 503              	.LBE245:
 504              	.LBE260:
 505              	.LBE286:
 506              	.LBE307:
GAS LISTING /tmp/ccd0QvNp.s 			page 18


 507              	.LBE323:
 508              	.LBE340:
 509              	.LBE358:
 510              	.LBE377:
 511              	.LBE397:
 512              	.LBE411:
 513              	.LBE425:
 514              	.LBE449:
 515              	.LBE467:
 270:src/Riscv.cpp ****         }
 271:src/Riscv.cpp ****         else{
 272:src/Riscv.cpp ****             // unexpected trap cause
 273:src/Riscv.cpp ****         }
 274:src/Riscv.cpp **** 
 275:src/Riscv.cpp ****     }
 276:src/Riscv.cpp **** 
 277:src/Riscv.cpp **** }
 516              		.loc 1 277 1
 517 0130 6F00C000 		j	.L3
 518              	.LVL14:
 519              	.L32:
 520              	.LBB468:
  28:src/Riscv.cpp ****     }
 521              		.loc 1 28 9 is_stmt 1
 522              	.LBB450:
 523              	.LBB451:
 151:src/../h/Riscv.hpp **** }
 524              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 525              		.loc 2 151 64 is_stmt 0
 526 0134 93072000 		li	a5,2
 527              	#APP
 528              	# 151 "src/../h/Riscv.hpp" 1
 529              		csrc sip, a5
 530              	# 0 "" 2
 531              	.LVL15:
 532              	#NO_APP
 533              	.L3:
 534              	.LBE451:
 535              	.LBE450:
 536              	.LBE468:
 537              		.loc 1 277 1
 538 013c 83308110 		ld	ra,264(sp)
 539              		.cfi_remember_state
 540              		.cfi_restore 1
 541 0140 03340110 		ld	s0,256(sp)
 542              		.cfi_restore 8
 543              		.cfi_def_cfa 2, 272
 544 0144 8334810F 		ld	s1,248(sp)
 545              		.cfi_restore 9
 546 0148 0339010F 		ld	s2,240(sp)
 547              		.cfi_restore 18
 548 014c 8339810E 		ld	s3,232(sp)
 549              		.cfi_restore 19
 550 0150 033A010E 		ld	s4,224(sp)
 551              		.cfi_restore 20
 552 0154 13010111 		addi	sp,sp,272
GAS LISTING /tmp/ccd0QvNp.s 			page 19


 553              		.cfi_def_cfa_offset 0
 554 0158 67800000 		jr	ra
 555              	.LVL16:
 556              	.L33:
 557              		.cfi_restore_state
 558              	.LBB469:
 559              	.LBB452:
 560              	.LBB426:
  31:src/Riscv.cpp ****         uint64 sstatus = r_sstatus() & ~(SSTATUS_SPP);
 561              		.loc 1 31 9 is_stmt 1
 562              	.LBB427:
 563              	.LBB428:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 564              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 565              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 566              		.loc 2 111 64 is_stmt 0
 567              	#APP
 568              	# 111 "src/../h/Riscv.hpp" 1
 569              		csrr a5, sepc
 570              	# 0 "" 2
 571              	#NO_APP
 572 0160 2334F4F0 		sd	a5,-248(s0)
 112:src/../h/Riscv.hpp **** }
 573              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 574              		.loc 2 112 12 is_stmt 0
 575 0164 033784F0 		ld	a4,-248(s0)
 576              	.LVL17:
 577              	.LBE428:
 578              	.LBE427:
  32:src/Riscv.cpp **** 
 579              		.loc 1 32 9 is_stmt 1
 580              	.LBB429:
 581              	.LBB430:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 582              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 583              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 584              		.loc 2 181 76 is_stmt 0
 585              	#APP
 586              	# 181 "src/../h/Riscv.hpp" 1
 587              		csrr a5, sstatus
 588              	# 0 "" 2
 589              	#NO_APP
 590 016c 2330F4F0 		sd	a5,-256(s0)
 182:src/../h/Riscv.hpp **** }
 591              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 592              		.loc 2 182 12 is_stmt 0
 593 0170 833704F0 		ld	a5,-256(s0)
 594              	.LBE430:
 595              	.LBE429:
  32:src/Riscv.cpp **** 
 596              		.loc 1 32 53
GAS LISTING /tmp/ccd0QvNp.s 			page 20


 597 0174 93F7F7EF 		andi	a5,a5,-257
 598              	.LVL18:
  34:src/Riscv.cpp ****         w_sstatus(sstatus);
 599              		.loc 1 34 9 is_stmt 1
  34:src/Riscv.cpp ****         w_sstatus(sstatus);
 600              		.loc 1 34 15 is_stmt 0
 601 0178 13074700 		addi	a4,a4,4
 602              	.LVL19:
 603              	.LBB431:
 604              	.LBB432:
 117:src/../h/Riscv.hpp **** }
 605              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 606              		.loc 2 117 65 is_stmt 0
 607              	#APP
 608              	# 117 "src/../h/Riscv.hpp" 1
 609              		csrw sepc, a4
 610              	# 0 "" 2
 611              	.LVL20:
 612              	#NO_APP
 613              	.LBE432:
 614              	.LBE431:
  35:src/Riscv.cpp ****     }
 615              		.loc 1 35 9 is_stmt 1
 616              	.LBB433:
 617              	.LBB434:
 187:src/../h/Riscv.hpp **** }
 618              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 619              		.loc 2 187 77 is_stmt 0
 620              	#APP
 621              	# 187 "src/../h/Riscv.hpp" 1
 622              		csrw sstatus, a5
 623              	# 0 "" 2
 624              		.loc 2 188 1
 625              	#NO_APP
 626 0184 6FF09FFB 		j	.L3
 627              	.LVL21:
 628              	.L34:
 629              	.LBE434:
 630              	.LBE433:
 631              	.LBE426:
 632              	.LBB435:
  38:src/Riscv.cpp ****     }
 633              		.loc 1 38 9 is_stmt 1
  38:src/Riscv.cpp ****     }
 634              		.loc 1 38 24 is_stmt 0
 635 0188 97000000 		call	console_handler@plt
 635      E7800000 
 636              	.LVL22:
 637 0190 6FF0DFFA 		j	.L3
 638              	.LVL23:
 639              	.L35:
 640              	.LBB412:
 641              	.LBB398:
 642              	.LBB185:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccd0QvNp.s 			page 21


 643              		.loc 1 46 13 is_stmt 1
 644              	.LBB186:
 645              	.LBB187:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 646              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 647              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 648              		.loc 2 111 64 is_stmt 0
 649              	#APP
 650              	# 111 "src/../h/Riscv.hpp" 1
 651              		csrr a5, sepc
 652              	# 0 "" 2
 653              	#NO_APP
 654 0198 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 655              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 656              		.loc 2 112 12 is_stmt 0
 657 019c 033984F1 		ld	s2,-232(s0)
 658              	.LBE187:
 659              	.LBE186:
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 660              		.loc 1 46 38
 661 01a0 13094900 		addi	s2,s2,4
 662              	.LVL24:
  47:src/Riscv.cpp **** 
 663              		.loc 1 47 13 is_stmt 1
 664              	.LBB188:
 665              	.LBB189:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 666              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 667              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 668              		.loc 2 181 76 is_stmt 0
 669              	#APP
 670              	# 181 "src/../h/Riscv.hpp" 1
 671              		csrr a5, sstatus
 672              	# 0 "" 2
 673              	#NO_APP
 674 01a8 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 675              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 676              		.loc 2 182 12 is_stmt 0
 677 01ac 833904F1 		ld	s3,-240(s0)
 678              	.LVL25:
 679              	.LBE189:
 680              	.LBE188:
  50:src/Riscv.cpp ****             _thread::Body arg2;
 681              		.loc 1 50 13 is_stmt 1
  51:src/Riscv.cpp ****             uint64 arg3;
 682              		.loc 1 51 13
  52:src/Riscv.cpp ****             uint64 *arg4;
 683              		.loc 1 52 13
  53:src/Riscv.cpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 22


 684              		.loc 1 53 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 685              		.loc 1 55 13
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 686              		.loc 1 55 48 is_stmt 0
 687              	#APP
 688              	# 55 "src/Riscv.cpp" 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 689              		ld a1, 11*8(fp)
 690              	# 0 "" 2
 691              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 692              		.loc 1 56 48 is_stmt 0
 693              	# 56 "src/Riscv.cpp" 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 694              		ld a2, 12*8(fp)
 695              	# 0 "" 2
 696              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 697              		.loc 1 57 48 is_stmt 0
 698              	# 57 "src/Riscv.cpp" 1
  58:src/Riscv.cpp **** 
 699              		ld a3, 13*8(fp)
 700              	# 0 "" 2
 701              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp **** 
 702              		.loc 1 58 48 is_stmt 0
 703              	# 58 "src/Riscv.cpp" 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 704              		ld a4, 14*8(fp)
 705              	# 0 "" 2
 706              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 707              		.loc 1 61 56 is_stmt 0
 708              	# 61 "src/Riscv.cpp" 1
 709              		mv s4, a1
 710              	# 0 "" 2
 711              	.LVL26:
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 712              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 713              		.loc 1 62 56 is_stmt 0
 714              	# 62 "src/Riscv.cpp" 1
 715              		mv a0, a2
 716              	# 0 "" 2
 717              	.LVL27:
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 718              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 719              		.loc 1 63 56 is_stmt 0
 720              	# 63 "src/Riscv.cpp" 1
 721              		mv a1, a3
 722              	# 0 "" 2
 723              	.LVL28:
  64:src/Riscv.cpp **** 
 724              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 23


 725              		.loc 1 64 56 is_stmt 0
 726              	# 64 "src/Riscv.cpp" 1
 727              		mv a2, a4
 728              	# 0 "" 2
 729              	.LVL29:
  67:src/Riscv.cpp ****             *arg1=t;
 730              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp ****             *arg1=t;
 731              		.loc 1 67 47 is_stmt 0
 732              	#NO_APP
 733 01d0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 733      E7800000 
 734              	.LVL30:
  68:src/Riscv.cpp **** 
 735              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp **** 
 736              		.loc 1 68 18 is_stmt 0
 737 01d8 2330AA00 		sd	a0,0(s4)
  70:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 738              		.loc 1 70 13 is_stmt 1
  71:src/Riscv.cpp ****             else ret =-1;
 739              		.loc 1 71 13
 740 01dc 630C0500 		beqz	a0,.L27
  71:src/Riscv.cpp ****             else ret =-1;
 741              		.loc 1 71 31 is_stmt 0
 742 01e0 93070000 		li	a5,0
 743              	.L9:
 744              	.LVL31:
  76:src/Riscv.cpp **** 
 745              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp **** 
 746              		.loc 1 76 56 is_stmt 0
 747              	#APP
 748              	# 76 "src/Riscv.cpp" 1
  78:src/Riscv.cpp ****             w_sepc(sepc);
 749              		mv a0, a5
 750              	# 0 "" 2
 751              		.loc 1 78 13 is_stmt 1
 752              	.LVL32:
 753              	#NO_APP
 754              	.LBB190:
 755              	.LBB191:
 187:src/../h/Riscv.hpp **** }
 756              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 757              		.loc 2 187 77 is_stmt 0
 758              	#APP
 759              	# 187 "src/../h/Riscv.hpp" 1
 760              		csrw sstatus, s3
 761              	# 0 "" 2
 762              	.LVL33:
 763              	#NO_APP
 764              	.LBE191:
 765              	.LBE190:
  79:src/Riscv.cpp ****         }
 766              		.loc 1 79 13 is_stmt 1
 767              	.LBB192:
GAS LISTING /tmp/ccd0QvNp.s 			page 24


 768              	.LBB193:
 117:src/../h/Riscv.hpp **** }
 769              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 770              		.loc 2 117 65 is_stmt 0
 771              	#APP
 772              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 773              		csrw sepc, s2
 774              	# 0 "" 2
 775              		.loc 2 118 1
 776              	#NO_APP
 777 01f0 6FF09FE9 		j	.L8
 778              	.LVL34:
 779              	.L27:
 780              	.LBE193:
 781              	.LBE192:
  72:src/Riscv.cpp **** 
 782              		.loc 1 72 22
 783 01f4 9307F0FF 		li	a5,-1
 784 01f8 6FF0DFFE 		j	.L9
 785              	.LVL35:
 786              	.L36:
 787              	.LBE185:
 788              	.LBE398:
 789              	.LBB399:
 790              	.LBB378:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 791              		.loc 1 82 13 is_stmt 1
 792              	.LBB379:
 793              	.LBB380:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 794              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 795              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 796              		.loc 2 111 64 is_stmt 0
 797              	#APP
 798              	# 111 "src/../h/Riscv.hpp" 1
 799              		csrr a5, sepc
 800              	# 0 "" 2
 801              	#NO_APP
 802 0200 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 803              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 804              		.loc 2 112 12 is_stmt 0
 805 0204 833484F2 		ld	s1,-216(s0)
 806              	.LVL36:
 807              	.LBE380:
 808              	.LBE379:
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 809              		.loc 1 82 38
 810 0208 93844400 		addi	s1,s1,4
 811              	.LVL37:
  83:src/Riscv.cpp ****             //kmem_alloc
 812              		.loc 1 83 13 is_stmt 1
GAS LISTING /tmp/ccd0QvNp.s 			page 25


 813              	.LBB381:
 814              	.LBB382:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 815              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 816              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 817              		.loc 2 181 76 is_stmt 0
 818              	#APP
 819              	# 181 "src/../h/Riscv.hpp" 1
 820              		csrr a5, sstatus
 821              	# 0 "" 2
 822              	#NO_APP
 823 0210 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 824              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 825              		.loc 2 182 12 is_stmt 0
 826 0214 033904F2 		ld	s2,-224(s0)
 827              	.LVL38:
 828              	.LBE382:
 829              	.LBE381:
  85:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 830              		.loc 1 85 13 is_stmt 1
  85:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 831              		.loc 1 85 56 is_stmt 0
 832              	#APP
 833              	# 85 "src/Riscv.cpp" 1
 834              		mv a0, a1
 835              	# 0 "" 2
 836              	.LVL39:
  86:src/Riscv.cpp **** 
 837              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 838              		.loc 1 86 61 is_stmt 0
 839              	#NO_APP
 840 021c 13156500 		slli	a0,a0,6
 841              	.LVL40:
 842 0220 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 842      E7800000 
 843              	.LVL41:
  89:src/Riscv.cpp **** 
 844              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp **** 
 845              		.loc 1 89 56 is_stmt 0
 846              	#APP
 847              	# 89 "src/Riscv.cpp" 1
  91:src/Riscv.cpp ****             w_sepc(sepc);
 848              		mv a0, a0
 849              	# 0 "" 2
 850              		.loc 1 91 13 is_stmt 1
 851              	.LVL42:
 852              	#NO_APP
 853              	.LBB383:
 854              	.LBB384:
 187:src/../h/Riscv.hpp **** }
 855              		.loc 2 187 5
GAS LISTING /tmp/ccd0QvNp.s 			page 26


 187:src/../h/Riscv.hpp **** }
 856              		.loc 2 187 77 is_stmt 0
 857              	#APP
 858              	# 187 "src/../h/Riscv.hpp" 1
 859              		csrw sstatus, s2
 860              	# 0 "" 2
 861              	.LVL43:
 862              	#NO_APP
 863              	.LBE384:
 864              	.LBE383:
  92:src/Riscv.cpp ****         }
 865              		.loc 1 92 13 is_stmt 1
 866              	.LBB385:
 867              	.LBB386:
 117:src/../h/Riscv.hpp **** }
 868              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 869              		.loc 2 117 65 is_stmt 0
 870              	#APP
 871              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 872              		csrw sepc, s1
 873              	# 0 "" 2
 874              		.loc 2 118 1
 875              	#NO_APP
 876 0234 6FF09FF0 		j	.L3
 877              	.LVL44:
 878              	.L37:
 879              	.LBE386:
 880              	.LBE385:
 881              	.LBE378:
 882              	.LBB387:
 883              	.LBB359:
  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 884              		.loc 1 95 13 is_stmt 1
 885              	.LBB360:
 886              	.LBB361:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 887              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 888              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 889              		.loc 2 111 64 is_stmt 0
 890              	#APP
 891              	# 111 "src/../h/Riscv.hpp" 1
 892              		csrr a5, sepc
 893              	# 0 "" 2
 894              	#NO_APP
 895 023c 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 896              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 897              		.loc 2 112 12 is_stmt 0
 898 0240 833484F3 		ld	s1,-200(s0)
 899              	.LVL45:
 900              	.LBE361:
 901              	.LBE360:
GAS LISTING /tmp/ccd0QvNp.s 			page 27


  95:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 902              		.loc 1 95 38
 903 0244 93844400 		addi	s1,s1,4
 904              	.LVL46:
  96:src/Riscv.cpp **** 
 905              		.loc 1 96 13 is_stmt 1
 906              	.LBB362:
 907              	.LBB363:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 908              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 909              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 910              		.loc 2 181 76 is_stmt 0
 911              	#APP
 912              	# 181 "src/../h/Riscv.hpp" 1
 913              		csrr a5, sstatus
 914              	# 0 "" 2
 915              	#NO_APP
 916 024c 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 917              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 918              		.loc 2 182 12 is_stmt 0
 919 0250 033904F3 		ld	s2,-208(s0)
 920              	.LVL47:
 921              	.LBE363:
 922              	.LBE362:
  98:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 923              		.loc 1 98 13 is_stmt 1
  98:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 924              		.loc 1 98 56 is_stmt 0
 925              	#APP
 926              	# 98 "src/Riscv.cpp" 1
 927              		mv a0, a1
 928              	# 0 "" 2
 929              	.LVL48:
  99:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 930              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 931              		.loc 1 99 49 is_stmt 0
 932              	#NO_APP
 933 0258 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 933      E7800000 
 934              	.LVL49:
 100:src/Riscv.cpp **** 
 935              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp **** 
 936              		.loc 1 100 56 is_stmt 0
 937              	#APP
 938              	# 100 "src/Riscv.cpp" 1
 102:src/Riscv.cpp ****             w_sepc(sepc);
 939              		mv a0, a0
 940              	# 0 "" 2
 941              		.loc 1 102 13 is_stmt 1
 942              	.LVL50:
 943              	#NO_APP
GAS LISTING /tmp/ccd0QvNp.s 			page 28


 944              	.LBB364:
 945              	.LBB365:
 187:src/../h/Riscv.hpp **** }
 946              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 947              		.loc 2 187 77 is_stmt 0
 948              	#APP
 949              	# 187 "src/../h/Riscv.hpp" 1
 950              		csrw sstatus, s2
 951              	# 0 "" 2
 952              	.LVL51:
 953              	#NO_APP
 954              	.LBE365:
 955              	.LBE364:
 103:src/Riscv.cpp ****         }
 956              		.loc 1 103 13 is_stmt 1
 957              	.LBB366:
 958              	.LBB367:
 117:src/../h/Riscv.hpp **** }
 959              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 960              		.loc 2 117 65 is_stmt 0
 961              	#APP
 962              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 963              		csrw sepc, s1
 964              	# 0 "" 2
 965              		.loc 2 118 1
 966              	#NO_APP
 967 026c 6FF01FED 		j	.L3
 968              	.LVL52:
 969              	.L38:
 970              	.LBE367:
 971              	.LBE366:
 972              	.LBE359:
 973              	.LBB368:
 974              	.LBB341:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 975              		.loc 1 107 13 is_stmt 1
 976              	.LBB342:
 977              	.LBB343:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 978              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 979              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 980              		.loc 2 111 64 is_stmt 0
 981              	#APP
 982              	# 111 "src/../h/Riscv.hpp" 1
 983              		csrr a5, sepc
 984              	# 0 "" 2
 985              	#NO_APP
 986 0274 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 987              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 988              		.loc 2 112 12 is_stmt 0
GAS LISTING /tmp/ccd0QvNp.s 			page 29


 989 0278 833484F4 		ld	s1,-184(s0)
 990              	.LVL53:
 991              	.LBE343:
 992              	.LBE342:
 107:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 993              		.loc 1 107 38
 994 027c 93844400 		addi	s1,s1,4
 995              	.LVL54:
 108:src/Riscv.cpp **** 
 996              		.loc 1 108 13 is_stmt 1
 997              	.LBB344:
 998              	.LBB345:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 999              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1000              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1001              		.loc 2 181 76 is_stmt 0
 1002              	#APP
 1003              	# 181 "src/../h/Riscv.hpp" 1
 1004              		csrr a5, sstatus
 1005              	# 0 "" 2
 1006              	#NO_APP
 1007 0284 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 1008              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1009              		.loc 2 182 12 is_stmt 0
 1010 0288 033904F4 		ld	s2,-192(s0)
 1011              	.LVL55:
 1012              	.LBE345:
 1013              	.LBE344:
 110:src/Riscv.cpp ****             _thread::dispatch();
 1014              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp ****             _thread::dispatch();
 1015              		.loc 1 110 31 is_stmt 0
 1016 028c 97070000 		la	a5,_ZN7_thread7runningE
 1016      83B70700 
 1017 0294 83B70700 		ld	a5,0(a5)
 110:src/Riscv.cpp ****             _thread::dispatch();
 1018              		.loc 1 110 39
 1019 0298 13071000 		li	a4,1
 1020 029c 2384E702 		sb	a4,40(a5)
 111:src/Riscv.cpp **** 
 1021              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp **** 
 1022              		.loc 1 111 30 is_stmt 0
 1023 02a0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1023      E7800000 
 1024              	.LVL56:
 113:src/Riscv.cpp ****             w_sepc(sepc);
 1025              		.loc 1 113 13 is_stmt 1
 1026              	.LBB346:
 1027              	.LBB347:
 187:src/../h/Riscv.hpp **** }
 1028              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccd0QvNp.s 			page 30


 1029              		.loc 2 187 77 is_stmt 0
 1030              	#APP
 1031              	# 187 "src/../h/Riscv.hpp" 1
 1032              		csrw sstatus, s2
 1033              	# 0 "" 2
 1034              	.LVL57:
 1035              	#NO_APP
 1036              	.LBE347:
 1037              	.LBE346:
 114:src/Riscv.cpp **** 
 1038              		.loc 1 114 13 is_stmt 1
 1039              	.LBB348:
 1040              	.LBB349:
 117:src/../h/Riscv.hpp **** }
 1041              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1042              		.loc 2 117 65 is_stmt 0
 1043              	#APP
 1044              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1045              		csrw sepc, s1
 1046              	# 0 "" 2
 1047              		.loc 2 118 1
 1048              	#NO_APP
 1049 02b0 6FF0DFE8 		j	.L3
 1050              	.LVL58:
 1051              	.L39:
 1052              	.LBE349:
 1053              	.LBE348:
 1054              	.LBE341:
 1055              	.LBB350:
 1056              	.LBB324:
 120:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1057              		.loc 1 120 13 is_stmt 1
 1058              	.LBB325:
 1059              	.LBB326:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1060              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1061              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1062              		.loc 2 111 64 is_stmt 0
 1063              	#APP
 1064              	# 111 "src/../h/Riscv.hpp" 1
 1065              		csrr a5, sepc
 1066              	# 0 "" 2
 1067              	#NO_APP
 1068 02b8 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 1069              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1070              		.loc 2 112 12 is_stmt 0
 1071 02bc 833484F5 		ld	s1,-168(s0)
 1072              	.LVL59:
 1073              	.LBE326:
 1074              	.LBE325:
 120:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccd0QvNp.s 			page 31


 1075              		.loc 1 120 38
 1076 02c0 93844400 		addi	s1,s1,4
 1077              	.LVL60:
 121:src/Riscv.cpp **** 
 1078              		.loc 1 121 13 is_stmt 1
 1079              	.LBB327:
 1080              	.LBB328:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1081              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1082              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1083              		.loc 2 181 76 is_stmt 0
 1084              	#APP
 1085              	# 181 "src/../h/Riscv.hpp" 1
 1086              		csrr a5, sstatus
 1087              	# 0 "" 2
 1088              	#NO_APP
 1089 02c8 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 1090              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1091              		.loc 2 182 12 is_stmt 0
 1092 02cc 033904F5 		ld	s2,-176(s0)
 1093              	.LVL61:
 1094              	.LBE328:
 1095              	.LBE327:
 124:src/Riscv.cpp **** 
 1096              		.loc 1 124 13 is_stmt 1
 124:src/Riscv.cpp **** 
 1097              		.loc 1 124 30 is_stmt 0
 1098 02d0 97000000 		call	_ZN7_thread8dispatchEv@plt
 1098      E7800000 
 1099              	.LVL62:
 126:src/Riscv.cpp ****             w_sepc(sepc);
 1100              		.loc 1 126 13 is_stmt 1
 1101              	.LBB329:
 1102              	.LBB330:
 187:src/../h/Riscv.hpp **** }
 1103              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1104              		.loc 2 187 77 is_stmt 0
 1105              	#APP
 1106              	# 187 "src/../h/Riscv.hpp" 1
 1107              		csrw sstatus, s2
 1108              	# 0 "" 2
 1109              	.LVL63:
 1110              	#NO_APP
 1111              	.LBE330:
 1112              	.LBE329:
 127:src/Riscv.cpp ****         }
 1113              		.loc 1 127 13 is_stmt 1
 1114              	.LBB331:
 1115              	.LBB332:
 117:src/../h/Riscv.hpp **** }
 1116              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccd0QvNp.s 			page 32


 1117              		.loc 2 117 65 is_stmt 0
 1118              	#APP
 1119              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1120              		csrw sepc, s1
 1121              	# 0 "" 2
 1122              		.loc 2 118 1
 1123              	#NO_APP
 1124 02e0 6FF0DFE5 		j	.L3
 1125              	.LVL64:
 1126              	.L40:
 1127              	.LBE332:
 1128              	.LBE331:
 1129              	.LBE324:
 1130              	.LBB333:
 1131              	.LBB308:
 132:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1132              		.loc 1 132 13 is_stmt 1
 1133              	.LBB309:
 1134              	.LBB310:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1135              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1136              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1137              		.loc 2 111 64 is_stmt 0
 1138              	#APP
 1139              	# 111 "src/../h/Riscv.hpp" 1
 1140              		csrr a5, sepc
 1141              	# 0 "" 2
 1142              	#NO_APP
 1143 02e8 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 1144              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1145              		.loc 2 112 12 is_stmt 0
 1146 02ec 833484F6 		ld	s1,-152(s0)
 1147              	.LVL65:
 1148              	.LBE310:
 1149              	.LBE309:
 132:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1150              		.loc 1 132 38
 1151 02f0 93844400 		addi	s1,s1,4
 1152              	.LVL66:
 133:src/Riscv.cpp **** 
 1153              		.loc 1 133 13 is_stmt 1
 1154              	.LBB311:
 1155              	.LBB312:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1156              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1157              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1158              		.loc 2 181 76 is_stmt 0
 1159              	#APP
 1160              	# 181 "src/../h/Riscv.hpp" 1
 1161              		csrr a5, sstatus
GAS LISTING /tmp/ccd0QvNp.s 			page 33


 1162              	# 0 "" 2
 1163              	#NO_APP
 1164 02f8 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 1165              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1166              		.loc 2 182 12 is_stmt 0
 1167 02fc 033904F6 		ld	s2,-160(s0)
 1168              	.LVL67:
 1169              	.LBE312:
 1170              	.LBE311:
 135:src/Riscv.cpp ****             _thread::dispatch();
 1171              		.loc 1 135 13 is_stmt 1
 135:src/Riscv.cpp ****             _thread::dispatch();
 1172              		.loc 1 135 39 is_stmt 0
 1173 0300 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1173      83B70700 
 1174 0308 23B00700 		sd	zero,0(a5)
 136:src/Riscv.cpp **** 
 1175              		.loc 1 136 13 is_stmt 1
 136:src/Riscv.cpp **** 
 1176              		.loc 1 136 30 is_stmt 0
 1177 030c 97000000 		call	_ZN7_thread8dispatchEv@plt
 1177      E7800000 
 1178              	.LVL68:
 138:src/Riscv.cpp ****             w_sepc(sepc);
 1179              		.loc 1 138 13 is_stmt 1
 1180              	.LBB313:
 1181              	.LBB314:
 187:src/../h/Riscv.hpp **** }
 1182              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1183              		.loc 2 187 77 is_stmt 0
 1184              	#APP
 1185              	# 187 "src/../h/Riscv.hpp" 1
 1186              		csrw sstatus, s2
 1187              	# 0 "" 2
 1188              	.LVL69:
 1189              	#NO_APP
 1190              	.LBE314:
 1191              	.LBE313:
 139:src/Riscv.cpp ****         }
 1192              		.loc 1 139 13 is_stmt 1
 1193              	.LBB315:
 1194              	.LBB316:
 117:src/../h/Riscv.hpp **** }
 1195              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1196              		.loc 2 117 65 is_stmt 0
 1197              	#APP
 1198              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1199              		csrw sepc, s1
 1200              	# 0 "" 2
 1201              		.loc 2 118 1
 1202              	#NO_APP
 1203 031c 6FF01FE2 		j	.L3
GAS LISTING /tmp/ccd0QvNp.s 			page 34


 1204              	.LVL70:
 1205              	.L41:
 1206              	.LBE316:
 1207              	.LBE315:
 1208              	.LBE308:
 1209              	.LBB317:
 1210              	.LBB287:
 142:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1211              		.loc 1 142 13 is_stmt 1
 1212              	.LBB288:
 1213              	.LBB289:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1214              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1215              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1216              		.loc 2 111 64 is_stmt 0
 1217              	#APP
 1218              	# 111 "src/../h/Riscv.hpp" 1
 1219              		csrr a5, sepc
 1220              	# 0 "" 2
 1221              	#NO_APP
 1222 0324 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1223              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1224              		.loc 2 112 12 is_stmt 0
 1225 0328 833484F7 		ld	s1,-136(s0)
 1226              	.LVL71:
 1227              	.LBE289:
 1228              	.LBE288:
 142:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1229              		.loc 1 142 38
 1230 032c 93844400 		addi	s1,s1,4
 1231              	.LVL72:
 143:src/Riscv.cpp **** 
 1232              		.loc 1 143 13 is_stmt 1
 1233              	.LBB290:
 1234              	.LBB291:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1235              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1236              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1237              		.loc 2 181 76 is_stmt 0
 1238              	#APP
 1239              	# 181 "src/../h/Riscv.hpp" 1
 1240              		csrr a5, sstatus
 1241              	# 0 "" 2
 1242              	#NO_APP
 1243 0334 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1244              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1245              		.loc 2 182 12 is_stmt 0
 1246 0338 033904F7 		ld	s2,-144(s0)
 1247              	.LVL73:
GAS LISTING /tmp/ccd0QvNp.s 			page 35


 1248              	.LBE291:
 1249              	.LBE290:
 145:src/Riscv.cpp ****            uint64 arg2;
 1250              		.loc 1 145 12 is_stmt 1
 146:src/Riscv.cpp **** 
 1251              		.loc 1 146 12
 148:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1252              		.loc 1 148 13
 148:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1253              		.loc 1 148 48 is_stmt 0
 1254              	#APP
 1255              	# 148 "src/Riscv.cpp" 1
 149:src/Riscv.cpp **** 
 1256              		ld a1, 11*8(fp)
 1257              	# 0 "" 2
 1258              		.loc 1 149 13 is_stmt 1
 149:src/Riscv.cpp **** 
 1259              		.loc 1 149 48 is_stmt 0
 1260              	# 149 "src/Riscv.cpp" 1
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1261              		ld a2, 12*8(fp)
 1262              	# 0 "" 2
 1263              		.loc 1 151 13 is_stmt 1
 151:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1264              		.loc 1 151 56 is_stmt 0
 1265              	# 151 "src/Riscv.cpp" 1
 1266              		mv s3, a1
 1267              	# 0 "" 2
 1268              	.LVL74:
 152:src/Riscv.cpp **** 
 1269              		.loc 1 152 13 is_stmt 1
 152:src/Riscv.cpp **** 
 1270              		.loc 1 152 56 is_stmt 0
 1271              	# 152 "src/Riscv.cpp" 1
 1272              		mv s4, a2
 1273              	# 0 "" 2
 1274              	.LVL75:
 154:src/Riscv.cpp ****             sem->open();
 1275              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp ****             sem->open();
 1276              		.loc 1 154 50 is_stmt 0
 1277              	#NO_APP
 1278 034c 13050002 		li	a0,32
 1279 0350 97000000 		call	_ZN10KSemaphorenwEm@plt
 1279      E7800000 
 1280              	.LVL76:
 1281              	.LBB292:
 1282              	.LBB293:
 1283              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 36


   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1284              		.loc 3 14 40
 1285 0358 23204501 		sw	s4,0(a0)
 1286              	.LVL77:
 1287              	.LBB294:
 1288              	.LBB295:
 1289              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1290              		.loc 4 26 29
 1291 035c 23340500 		sd	zero,8(a0)
 1292 0360 23380500 		sd	zero,16(a0)
 1293              	.LVL78:
 1294              	.LBE295:
 1295              	.LBE294:
 1296              	.LBE293:
 1297              	.LBE292:
 155:src/Riscv.cpp ****             *arg1=sem;
 1298              		.loc 1 155 13 is_stmt 1
 1299              	.LBB296:
 1300              	.LBB297:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
GAS LISTING /tmp/ccd0QvNp.s 			page 37


  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1301              		.loc 3 35 9
 1302              		.loc 3 35 15 is_stmt 0
 1303 0364 93071000 		li	a5,1
 1304 0368 230CF500 		sb	a5,24(a0)
 1305              	.LVL79:
 1306              	.LBE297:
 1307              	.LBE296:
 156:src/Riscv.cpp **** 
 1308              		.loc 1 156 13 is_stmt 1
 156:src/Riscv.cpp **** 
 1309              		.loc 1 156 18 is_stmt 0
 1310 036c 23B0A900 		sd	a0,0(s3)
 158:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1311              		.loc 1 158 13 is_stmt 1
 1312              	.LVL80:
 159:src/Riscv.cpp ****             else ret=-1;
 1313              		.loc 1 159 13
 1314 0370 630C0500 		beqz	a0,.L28
 159:src/Riscv.cpp ****             else ret=-1;
 1315              		.loc 1 159 33 is_stmt 0
 1316 0374 93070000 		li	a5,0
 1317              	.L16:
 1318              	.LVL81:
 162:src/Riscv.cpp **** 
 1319              		.loc 1 162 13 is_stmt 1
 162:src/Riscv.cpp **** 
 1320              		.loc 1 162 56 is_stmt 0
 1321              	#APP
 1322              	# 162 "src/Riscv.cpp" 1
 164:src/Riscv.cpp ****             w_sepc(sepc);
 1323              		mv a0, a5
 1324              	# 0 "" 2
 1325              		.loc 1 164 13 is_stmt 1
 1326              	.LVL82:
 1327              	#NO_APP
 1328              	.LBB298:
 1329              	.LBB299:
 187:src/../h/Riscv.hpp **** }
 1330              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1331              		.loc 2 187 77 is_stmt 0
 1332              	#APP
 1333              	# 187 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccd0QvNp.s 			page 38


 1334              		csrw sstatus, s2
 1335              	# 0 "" 2
 1336              	.LVL83:
 1337              	#NO_APP
 1338              	.LBE299:
 1339              	.LBE298:
 165:src/Riscv.cpp ****         }
 1340              		.loc 1 165 13 is_stmt 1
 1341              	.LBB300:
 1342              	.LBB301:
 117:src/../h/Riscv.hpp **** }
 1343              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1344              		.loc 2 117 65 is_stmt 0
 1345              	#APP
 1346              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1347              		csrw sepc, s1
 1348              	# 0 "" 2
 1349              		.loc 2 118 1
 1350              	#NO_APP
 1351 0384 6FF09FDB 		j	.L3
 1352              	.LVL84:
 1353              	.L28:
 1354              	.LBE301:
 1355              	.LBE300:
 160:src/Riscv.cpp **** 
 1356              		.loc 1 160 21
 1357 0388 9307F0FF 		li	a5,-1
 1358 038c 6FF0DFFE 		j	.L16
 1359              	.LVL85:
 1360              	.L42:
 1361              	.LBE287:
 1362              	.LBB302:
 1363              	.LBB261:
 168:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1364              		.loc 1 168 13 is_stmt 1
 1365              	.LBB262:
 1366              	.LBB263:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1367              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1368              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1369              		.loc 2 111 64 is_stmt 0
 1370              	#APP
 1371              	# 111 "src/../h/Riscv.hpp" 1
 1372              		csrr a5, sepc
 1373              	# 0 "" 2
 1374              	#NO_APP
 1375 0394 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1376              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1377              		.loc 2 112 12 is_stmt 0
 1378 0398 833984F8 		ld	s3,-120(s0)
 1379              	.LBE263:
GAS LISTING /tmp/ccd0QvNp.s 			page 39


 1380              	.LBE262:
 168:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1381              		.loc 1 168 38
 1382 039c 93894900 		addi	s3,s3,4
 1383              	.LVL86:
 169:src/Riscv.cpp **** 
 1384              		.loc 1 169 13 is_stmt 1
 1385              	.LBB264:
 1386              	.LBB265:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1387              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1388              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1389              		.loc 2 181 76 is_stmt 0
 1390              	#APP
 1391              	# 181 "src/../h/Riscv.hpp" 1
 1392              		csrr a5, sstatus
 1393              	# 0 "" 2
 1394              	#NO_APP
 1395 03a4 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1396              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1397              		.loc 2 182 12 is_stmt 0
 1398 03a8 033A04F8 		ld	s4,-128(s0)
 1399              	.LVL87:
 1400              	.LBE265:
 1401              	.LBE264:
 171:src/Riscv.cpp **** 
 1402              		.loc 1 171 13 is_stmt 1
 174:src/Riscv.cpp **** 
 1403              		.loc 1 174 13
 174:src/Riscv.cpp **** 
 1404              		.loc 1 174 48 is_stmt 0
 1405              	#APP
 1406              	# 174 "src/Riscv.cpp" 1
 176:src/Riscv.cpp **** 
 1407              		ld a1, 11*8(fp)
 1408              	# 0 "" 2
 1409              		.loc 1 176 13 is_stmt 1
 176:src/Riscv.cpp **** 
 1410              		.loc 1 176 56 is_stmt 0
 1411              	# 176 "src/Riscv.cpp" 1
 1412              		mv s1, a1
 1413              	# 0 "" 2
 1414              	.LVL88:
 178:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1415              		.loc 1 178 13 is_stmt 1
 1416              	#NO_APP
 1417 03b4 6F000003 		j	.L20
 1418              	.LVL89:
 1419              	.L19:
 1420              	.LBB266:
 1421              	.LBB267:
 1422              	.LBB268:
  27:src/../h/List.hpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 40


  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1423              		.loc 4 72 12 is_stmt 0
 1424 03b8 03390500 		ld	s2,0(a0)
 1425              	.LVL90:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1426              		.loc 4 73 35
 1427 03bc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1427      E7800000 
 1428              	.LVL91:
 1429              	.LBE268:
 1430              	.LBE267:
 182:src/Riscv.cpp ****                 sem->val++;
 1431              		.loc 1 182 17 is_stmt 1
GAS LISTING /tmp/ccd0QvNp.s 			page 41


 1432              	.LBB270:
 1433              	.LBB271:
 1434              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1435              		.loc 5 35 9
 1436              		.loc 5 35 19 is_stmt 0
 1437 03c4 93071000 		li	a5,1
 1438 03c8 230CF902 		sb	a5,56(s2)
 1439              	.LVL92:
 1440              	.LBE271:
 1441              	.LBE270:
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1442              		.loc 1 183 17 is_stmt 1
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1443              		.loc 1 183 22 is_stmt 0
 1444 03cc 83A70400 		lw	a5,0(s1)
 183:src/Riscv.cpp ****                 Scheduler::put(t);
 1445              		.loc 1 183 25
 1446 03d0 9B871700 		addiw	a5,a5,1
 1447 03d4 23A0F400 		sw	a5,0(s1)
 184:src/Riscv.cpp ****             }
 1448              		.loc 1 184 17 is_stmt 1
 184:src/Riscv.cpp ****             }
GAS LISTING /tmp/ccd0QvNp.s 			page 42


 1449              		.loc 1 184 31 is_stmt 0
 1450 03d8 13050900 		mv	a0,s2
 1451 03dc 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1451      E7800000 
 1452              	.LVL93:
 1453              	.L20:
 1454              	.LBE266:
 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1455              		.loc 1 180 13 is_stmt 1
 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1456              		.loc 1 180 43
 1457              	.LBB273:
 1458              	.LBB274:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1459              		.loc 4 79 14 is_stmt 0
 1460 03e4 03B58400 		ld	a0,8(s1)
 1461              		.loc 4 79 9
 1462 03e8 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1463              		.loc 4 80 22
 1464 03ec 83370500 		ld	a5,0(a0)
 1465              	.LVL94:
 1466              	.LBE274:
 1467              	.LBE273:
 180:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1468              		.loc 1 180 43
 1469 03f0 638C0700 		beqz	a5,.L18
 1470              	.LBB275:
 181:src/Riscv.cpp ****                 t->setDeblocked();
 1471              		.loc 1 181 17 is_stmt 1
 1472              	.LVL95:
 1473              	.LBB272:
 1474              	.LBB269:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1475              		.loc 4 69 22 is_stmt 0
 1476 03f4 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1477              		.loc 4 69 9
 1478 03f8 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1479              		.loc 4 70 9
 1480 03fc E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1481              		.loc 4 70 22
 1482 0400 23B80400 		sd	zero,16(s1)
 1483 0404 6FF05FFB 		j	.L19
 1484              	.LVL96:
 1485              	.L18:
 1486              	.LBE269:
 1487              	.LBE272:
 1488              	.LBE275:
 186:src/Riscv.cpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 43


 1489              		.loc 1 186 14 is_stmt 1
 1490              	.LBB276:
 1491              	.LBB277:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1492              		.loc 3 38 9
 1493              		.loc 3 38 16 is_stmt 0
 1494 0408 238C0400 		sb	zero,24(s1)
 1495              	.LVL97:
 1496              	.LBE277:
 1497              	.LBE276:
 188:src/Riscv.cpp **** 
 1498              		.loc 1 188 13 is_stmt 1
 188:src/Riscv.cpp **** 
 1499              		.loc 1 188 23 is_stmt 0
 1500 040c 63880400 		beqz	s1,.L21
 188:src/Riscv.cpp **** 
 1501              		.loc 1 188 20 discriminator 1
 1502 0410 13850400 		mv	a0,s1
 1503 0414 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1503      E7800000 
 1504              	.LVL98:
 1505              	.L21:
 190:src/Riscv.cpp ****             w_sepc(sepc);
 1506              		.loc 1 190 13 is_stmt 1
 1507              	.LBB278:
 1508              	.LBB279:
 187:src/../h/Riscv.hpp **** }
 1509              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1510              		.loc 2 187 77 is_stmt 0
 1511              	#APP
 1512              	# 187 "src/../h/Riscv.hpp" 1
 1513              		csrw sstatus, s4
 1514              	# 0 "" 2
 1515              	.LVL99:
 1516              	#NO_APP
 1517              	.LBE279:
 1518              	.LBE278:
 191:src/Riscv.cpp ****         }
 1519              		.loc 1 191 13 is_stmt 1
 1520              	.LBB280:
 1521              	.LBB281:
 117:src/../h/Riscv.hpp **** }
 1522              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1523              		.loc 2 117 65 is_stmt 0
 1524              	#APP
 1525              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1526              		csrw sepc, s3
 1527              	# 0 "" 2
 1528              		.loc 2 118 1
 1529              	#NO_APP
 1530 0424 6FF09FD1 		j	.L3
 1531              	.LVL100:
GAS LISTING /tmp/ccd0QvNp.s 			page 44


 1532              	.L43:
 1533              	.LBE281:
 1534              	.LBE280:
 1535              	.LBE261:
 1536              	.LBB282:
 1537              	.LBB246:
 194:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1538              		.loc 1 194 13 is_stmt 1
 1539              	.LBB247:
 1540              	.LBB248:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1541              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1542              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1543              		.loc 2 111 64 is_stmt 0
 1544              	#APP
 1545              	# 111 "src/../h/Riscv.hpp" 1
 1546              		csrr a5, sepc
 1547              	# 0 "" 2
 1548              	#NO_APP
 1549 042c 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1550              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1551              		.loc 2 112 12 is_stmt 0
 1552 0430 833484F9 		ld	s1,-104(s0)
 1553              	.LVL101:
 1554              	.LBE248:
 1555              	.LBE247:
 194:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1556              		.loc 1 194 38
 1557 0434 93844400 		addi	s1,s1,4
 1558              	.LVL102:
 195:src/Riscv.cpp **** 
 1559              		.loc 1 195 13 is_stmt 1
 1560              	.LBB249:
 1561              	.LBB250:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1562              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1563              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1564              		.loc 2 181 76 is_stmt 0
 1565              	#APP
 1566              	# 181 "src/../h/Riscv.hpp" 1
 1567              		csrr a5, sstatus
 1568              	# 0 "" 2
 1569              	#NO_APP
 1570 043c 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1571              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1572              		.loc 2 182 12 is_stmt 0
 1573 0440 033904F9 		ld	s2,-112(s0)
 1574              	.LVL103:
 1575              	.LBE250:
GAS LISTING /tmp/ccd0QvNp.s 			page 45


 1576              	.LBE249:
 197:src/Riscv.cpp **** 
 1577              		.loc 1 197 13 is_stmt 1
 199:src/Riscv.cpp **** 
 1578              		.loc 1 199 13
 199:src/Riscv.cpp **** 
 1579              		.loc 1 199 48 is_stmt 0
 1580              	#APP
 1581              	# 199 "src/Riscv.cpp" 1
 201:src/Riscv.cpp **** 
 1582              		ld a1, 11*8(fp)
 1583              	# 0 "" 2
 1584              		.loc 1 201 13 is_stmt 1
 201:src/Riscv.cpp **** 
 1585              		.loc 1 201 56 is_stmt 0
 1586              	# 201 "src/Riscv.cpp" 1
 1587              		mv a0, a1
 1588              	# 0 "" 2
 1589              	.LVL104:
 203:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1590              		.loc 1 203 13 is_stmt 1
 205:src/Riscv.cpp ****                  ret = arg1->wait();
 1591              		.loc 1 205 13
 1592              	#NO_APP
 1593              	.LBB251:
 1594              	.LBB252:
  32:src/../h/KSemaphore.hpp **** 
 1595              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1596              		.loc 3 32 28 is_stmt 0
 1597 044c 83478501 		lbu	a5,24(a0)
 1598              	.LVL105:
 1599              	.LBE252:
 1600              	.LBE251:
 205:src/Riscv.cpp ****                  ret = arg1->wait();
 1601              		.loc 1 205 13
 1602 0450 639C0700 		bnez	a5,.L46
 209:src/Riscv.cpp ****             }
 1603              		.loc 1 209 20
 1604 0454 1305F0FF 		li	a0,-1
 1605              	.LVL106:
 1606              	.L23:
 211:src/Riscv.cpp **** 
 1607              		.loc 1 211 13 is_stmt 1
 211:src/Riscv.cpp **** 
 1608              		.loc 1 211 56 is_stmt 0
 1609              	#APP
 1610              	# 211 "src/Riscv.cpp" 1
 213:src/Riscv.cpp ****             w_sepc(sepc);
 1611              		mv a0, a0
 1612              	# 0 "" 2
 1613              		.loc 1 213 13 is_stmt 1
 1614              	.LVL107:
 1615              	#NO_APP
 1616              	.LBB253:
 1617              	.LBB254:
 187:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccd0QvNp.s 			page 46


 1618              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1619              		.loc 2 187 77 is_stmt 0
 1620              	#APP
 1621              	# 187 "src/../h/Riscv.hpp" 1
 1622              		csrw sstatus, s2
 1623              	# 0 "" 2
 1624              	.LVL108:
 1625              	#NO_APP
 1626              	.LBE254:
 1627              	.LBE253:
 214:src/Riscv.cpp ****         }
 1628              		.loc 1 214 13 is_stmt 1
 1629              	.LBB255:
 1630              	.LBB256:
 117:src/../h/Riscv.hpp **** }
 1631              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1632              		.loc 2 117 65 is_stmt 0
 1633              	#APP
 1634              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1635              		csrw sepc, s1
 1636              	# 0 "" 2
 1637              		.loc 2 118 1
 1638              	#NO_APP
 1639 0464 6FF09FCD 		j	.L3
 1640              	.LVL109:
 1641              	.L46:
 1642              	.LBE256:
 1643              	.LBE255:
 206:src/Riscv.cpp ****             }
 1644              		.loc 1 206 18 is_stmt 1
 206:src/Riscv.cpp ****             }
 1645              		.loc 1 206 34 is_stmt 0
 1646 0468 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1646      E7800000 
 1647              	.LVL110:
 1648 0470 6FF09FFE 		j	.L23
 1649              	.LVL111:
 1650              	.L44:
 1651              	.LBE246:
 1652              	.LBB257:
 1653              	.LBB232:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1654              		.loc 1 217 13 is_stmt 1
 1655              	.LBB233:
 1656              	.LBB234:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1657              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1658              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1659              		.loc 2 111 64 is_stmt 0
 1660              	#APP
 1661              	# 111 "src/../h/Riscv.hpp" 1
 1662              		csrr a5, sepc
GAS LISTING /tmp/ccd0QvNp.s 			page 47


 1663              	# 0 "" 2
 1664              	#NO_APP
 1665 0478 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1666              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1667              		.loc 2 112 12 is_stmt 0
 1668 047c 833484FA 		ld	s1,-88(s0)
 1669              	.LVL112:
 1670              	.LBE234:
 1671              	.LBE233:
 217:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1672              		.loc 1 217 38
 1673 0480 93844400 		addi	s1,s1,4
 1674              	.LVL113:
 218:src/Riscv.cpp **** 
 1675              		.loc 1 218 13 is_stmt 1
 1676              	.LBB235:
 1677              	.LBB236:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1678              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1679              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1680              		.loc 2 181 76 is_stmt 0
 1681              	#APP
 1682              	# 181 "src/../h/Riscv.hpp" 1
 1683              		csrr a5, sstatus
 1684              	# 0 "" 2
 1685              	#NO_APP
 1686 0488 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1687              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1688              		.loc 2 182 12 is_stmt 0
 1689 048c 033904FA 		ld	s2,-96(s0)
 1690              	.LVL114:
 1691              	.LBE236:
 1692              	.LBE235:
 220:src/Riscv.cpp **** 
 1693              		.loc 1 220 13 is_stmt 1
 222:src/Riscv.cpp **** 
 1694              		.loc 1 222 13
 222:src/Riscv.cpp **** 
 1695              		.loc 1 222 48 is_stmt 0
 1696              	#APP
 1697              	# 222 "src/Riscv.cpp" 1
 224:src/Riscv.cpp **** 
 1698              		ld a1, 11*8(fp)
 1699              	# 0 "" 2
 1700              		.loc 1 224 13 is_stmt 1
 224:src/Riscv.cpp **** 
 1701              		.loc 1 224 56 is_stmt 0
 1702              	# 224 "src/Riscv.cpp" 1
 1703              		mv a0, a1
 1704              	# 0 "" 2
 1705              	.LVL115:
GAS LISTING /tmp/ccd0QvNp.s 			page 48


 226:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1706              		.loc 1 226 13 is_stmt 1
 227:src/Riscv.cpp ****                 arg1->signal();
 1707              		.loc 1 227 13
 1708              	#NO_APP
 1709              	.LBB237:
 1710              	.LBB238:
  32:src/../h/KSemaphore.hpp **** 
 1711              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1712              		.loc 3 32 28 is_stmt 0
 1713 0498 83478501 		lbu	a5,24(a0)
 1714              	.LVL116:
 1715              	.LBE238:
 1716              	.LBE237:
 227:src/Riscv.cpp ****                 arg1->signal();
 1717              		.loc 1 227 13
 1718 049c 639C0700 		bnez	a5,.L47
 232:src/Riscv.cpp ****             }
 1719              		.loc 1 232 21
 1720 04a0 9307F0FF 		li	a5,-1
 1721              	.LVL117:
 1722              	.L25:
 235:src/Riscv.cpp **** 
 1723              		.loc 1 235 13 is_stmt 1
 235:src/Riscv.cpp **** 
 1724              		.loc 1 235 56 is_stmt 0
 1725              	#APP
 1726              	# 235 "src/Riscv.cpp" 1
 237:src/Riscv.cpp ****             w_sepc(sepc);
 1727              		mv a0, a5
 1728              	# 0 "" 2
 1729              		.loc 1 237 13 is_stmt 1
 1730              	.LVL118:
 1731              	#NO_APP
 1732              	.LBB239:
 1733              	.LBB240:
 187:src/../h/Riscv.hpp **** }
 1734              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1735              		.loc 2 187 77 is_stmt 0
 1736              	#APP
 1737              	# 187 "src/../h/Riscv.hpp" 1
 1738              		csrw sstatus, s2
 1739              	# 0 "" 2
 1740              	.LVL119:
 1741              	#NO_APP
 1742              	.LBE240:
 1743              	.LBE239:
 238:src/Riscv.cpp ****         }
 1744              		.loc 1 238 13 is_stmt 1
 1745              	.LBB241:
 1746              	.LBB242:
 117:src/../h/Riscv.hpp **** }
 1747              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1748              		.loc 2 117 65 is_stmt 0
GAS LISTING /tmp/ccd0QvNp.s 			page 49


 1749              	#APP
 1750              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1751              		csrw sepc, s1
 1752              	# 0 "" 2
 1753              		.loc 2 118 1
 1754              	#NO_APP
 1755 04b0 6FF0DFC8 		j	.L3
 1756              	.LVL120:
 1757              	.L47:
 1758              	.LBE242:
 1759              	.LBE241:
 228:src/Riscv.cpp ****                 ret=0;
 1760              		.loc 1 228 17 is_stmt 1
 228:src/Riscv.cpp ****                 ret=0;
 1761              		.loc 1 228 29 is_stmt 0
 1762 04b4 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1762      E7800000 
 1763              	.LVL121:
 229:src/Riscv.cpp ****             }
 1764              		.loc 1 229 17 is_stmt 1
 229:src/Riscv.cpp ****             }
 1765              		.loc 1 229 20 is_stmt 0
 1766 04bc 93070000 		li	a5,0
 1767 04c0 6FF05FFE 		j	.L25
 1768              	.LVL122:
 1769              	.L45:
 1770              	.LBE232:
 1771              	.LBB243:
 1772              	.LBB218:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1773              		.loc 1 241 13 is_stmt 1
 1774              	.LBB219:
 1775              	.LBB220:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1776              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1777              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1778              		.loc 2 111 64 is_stmt 0
 1779              	#APP
 1780              	# 111 "src/../h/Riscv.hpp" 1
 1781              		csrr a5, sepc
 1782              	# 0 "" 2
 1783              	#NO_APP
 1784 04c8 233CF4FA 		sd	a5,-72(s0)
 112:src/../h/Riscv.hpp **** }
 1785              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1786              		.loc 2 112 12 is_stmt 0
 1787 04cc 833484FB 		ld	s1,-72(s0)
 1788              	.LVL123:
 1789              	.LBE220:
 1790              	.LBE219:
 241:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1791              		.loc 1 241 38
 1792 04d0 93844400 		addi	s1,s1,4
GAS LISTING /tmp/ccd0QvNp.s 			page 50


 1793              	.LVL124:
 242:src/Riscv.cpp **** 
 1794              		.loc 1 242 13 is_stmt 1
 1795              	.LBB221:
 1796              	.LBB222:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1797              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1798              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1799              		.loc 2 181 76 is_stmt 0
 1800              	#APP
 1801              	# 181 "src/../h/Riscv.hpp" 1
 1802              		csrr a5, sstatus
 1803              	# 0 "" 2
 1804              	#NO_APP
 1805 04d8 2338F4FA 		sd	a5,-80(s0)
 182:src/../h/Riscv.hpp **** }
 1806              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1807              		.loc 2 182 12 is_stmt 0
 1808 04dc 033904FB 		ld	s2,-80(s0)
 1809              	.LVL125:
 1810              	.LBE222:
 1811              	.LBE221:
 245:src/Riscv.cpp ****             char c = __getc();
 1812              		.loc 1 245 13 is_stmt 1
 245:src/Riscv.cpp ****             char c = __getc();
 1813              		.loc 1 245 27 is_stmt 0
 1814 04e0 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1814      83B70700 
 1815              	.LVL126:
 1816              	.LBB223:
 1817              	.LBB224:
 129:src/../h/Riscv.hpp **** }
 1818              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1819              		.loc 2 129 69 is_stmt 0
 1820              	#APP
 1821              	# 129 "src/../h/Riscv.hpp" 1
 1822              		csrw stvec, a5
 1823              	# 0 "" 2
 1824              	.LVL127:
 1825              	#NO_APP
 1826              	.LBE224:
 1827              	.LBE223:
 246:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1828              		.loc 1 246 13 is_stmt 1
 246:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1829              		.loc 1 246 28 is_stmt 0
 1830 04ec 97000000 		call	__getc@plt
 1830      E7800000 
 1831              	.LVL128:
 247:src/Riscv.cpp **** 
 1832              		.loc 1 247 13 is_stmt 1
 247:src/Riscv.cpp **** 
 1833              		.loc 1 247 27 is_stmt 0
GAS LISTING /tmp/ccd0QvNp.s 			page 51


 1834 04f4 17070000 		la	a4,_ZN5Riscv14supervisorTrapEv
 1834      03370700 
 1835              	.LVL129:
 1836              	.LBB225:
 1837              	.LBB226:
 129:src/../h/Riscv.hpp **** }
 1838              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1839              		.loc 2 129 69 is_stmt 0
 1840              	#APP
 1841              	# 129 "src/../h/Riscv.hpp" 1
 1842              		csrw stvec, a4
 1843              	# 0 "" 2
 1844              	.LVL130:
 1845              	#NO_APP
 1846              	.LBE226:
 1847              	.LBE225:
 249:src/Riscv.cpp **** 
 1848              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp **** 
 1849              		.loc 1 249 54 is_stmt 0
 1850              	#APP
 1851              	# 249 "src/Riscv.cpp" 1
 252:src/Riscv.cpp ****             w_sepc(sepc);
 1852              		mv a0, a0
 1853              	# 0 "" 2
 1854              		.loc 1 252 13 is_stmt 1
 1855              	.LVL131:
 1856              	#NO_APP
 1857              	.LBB227:
 1858              	.LBB228:
 187:src/../h/Riscv.hpp **** }
 1859              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1860              		.loc 2 187 77 is_stmt 0
 1861              	#APP
 1862              	# 187 "src/../h/Riscv.hpp" 1
 1863              		csrw sstatus, s2
 1864              	# 0 "" 2
 1865              	.LVL132:
 1866              	#NO_APP
 1867              	.LBE228:
 1868              	.LBE227:
 253:src/Riscv.cpp ****         }
 1869              		.loc 1 253 13 is_stmt 1
 1870              	.LBB229:
 1871              	.LBB230:
 117:src/../h/Riscv.hpp **** }
 1872              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1873              		.loc 2 117 65 is_stmt 0
 1874              	#APP
 1875              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1876              		csrw sepc, s1
 1877              	# 0 "" 2
 1878              		.loc 2 118 1
GAS LISTING /tmp/ccd0QvNp.s 			page 52


 1879              	#NO_APP
 1880 050c 6FF01FC3 		j	.L3
 1881              	.LBE230:
 1882              	.LBE229:
 1883              	.LBE218:
 1884              	.LBE243:
 1885              	.LBE257:
 1886              	.LBE282:
 1887              	.LBE302:
 1888              	.LBE317:
 1889              	.LBE333:
 1890              	.LBE350:
 1891              	.LBE368:
 1892              	.LBE387:
 1893              	.LBE399:
 1894              	.LBE412:
 1895              	.LBE435:
 1896              	.LBE452:
 1897              	.LBE469:
 1898              		.cfi_endproc
 1899              	.LFE55:
 1901              		.align	2
 1902              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1904              	_ZN5Riscv17handleTrapConsoleEv:
 1905              	.LFB56:
 278:src/Riscv.cpp **** 
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1906              		.loc 1 280 33 is_stmt 1
 1907              		.cfi_startproc
 1908 0510 130101FE 		addi	sp,sp,-32
 1909              		.cfi_def_cfa_offset 32
 1910 0514 233C1100 		sd	ra,24(sp)
 1911 0518 23388100 		sd	s0,16(sp)
 1912              		.cfi_offset 1, -8
 1913              		.cfi_offset 8, -16
 1914 051c 13040102 		addi	s0,sp,32
 1915              		.cfi_def_cfa 8, 0
 281:src/Riscv.cpp ****     uint64 scause = r_scause();
 1916              		.loc 1 281 5
 1917              	.LBB470:
 1918              	.LBB471:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1919              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1920              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1921              		.loc 2 99 72 is_stmt 0
 1922              	#APP
 1923              	# 99 "src/../h/Riscv.hpp" 1
 1924              		csrr a5, scause
 1925              	# 0 "" 2
 1926              	#NO_APP
 1927 0524 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1928              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccd0QvNp.s 			page 53


 1929              		.loc 2 100 12 is_stmt 0
 1930 0528 033784FE 		ld	a4,-24(s0)
 1931              	.LVL133:
 1932              	.LBE471:
 1933              	.LBE470:
 282:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1934              		.loc 1 282 5 is_stmt 1
 1935 052c 9307F0FF 		li	a5,-1
 1936 0530 9397F703 		slli	a5,a5,63
 1937 0534 93879700 		addi	a5,a5,9
 1938 0538 6302F702 		beq	a4,a5,.L52
 283:src/Riscv.cpp ****         console_handler();
 284:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 285:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1939              		.loc 1 285 12
 1940 053c 9307F0FF 		li	a5,-1
 1941 0540 9397F703 		slli	a5,a5,63
 1942 0544 93871700 		addi	a5,a5,1
 1943 0548 6304F702 		beq	a4,a5,.L53
 1944              	.LVL134:
 1945              	.L48:
 286:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 287:src/Riscv.cpp ****     }
 288:src/Riscv.cpp **** 
 289:src/Riscv.cpp **** }...
 1946              		.loc 1 289 1 is_stmt 0
 1947 054c 83308101 		ld	ra,24(sp)
 1948              		.cfi_remember_state
 1949              		.cfi_restore 1
 1950 0550 03340101 		ld	s0,16(sp)
 1951              		.cfi_restore 8
 1952              		.cfi_def_cfa 2, 32
 1953 0554 13010102 		addi	sp,sp,32
 1954              		.cfi_def_cfa_offset 0
 1955 0558 67800000 		jr	ra
 1956              	.LVL135:
 1957              	.L52:
 1958              		.cfi_restore_state
 283:src/Riscv.cpp ****         console_handler();
 1959              		.loc 1 283 9 is_stmt 1
 283:src/Riscv.cpp ****         console_handler();
 1960              		.loc 1 283 24 is_stmt 0
 1961 055c 97000000 		call	console_handler@plt
 1961      E7800000 
 1962              	.LVL136:
 284:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 1963              		.loc 1 284 9 is_stmt 1
 1964              	.LBB472:
 1965              	.LBB473:
 151:src/../h/Riscv.hpp **** }
 1966              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1967              		.loc 2 151 64 is_stmt 0
 1968 0564 93070020 		li	a5,512
 1969              	#APP
 1970              	# 151 "src/../h/Riscv.hpp" 1
 152:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccd0QvNp.s 			page 54


 1971              		csrc sip, a5
 1972              	# 0 "" 2
 1973              		.loc 2 152 1
 1974              	#NO_APP
 1975 056c 6FF01FFE 		j	.L48
 1976              	.LVL137:
 1977              	.L53:
 1978              	.LBE473:
 1979              	.LBE472:
 286:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1980              		.loc 1 286 9 is_stmt 1
 1981              	.LBB474:
 1982              	.LBB475:
 151:src/../h/Riscv.hpp **** }
 1983              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1984              		.loc 2 151 64 is_stmt 0
 1985 0570 93072000 		li	a5,2
 1986              	#APP
 1987              	# 151 "src/../h/Riscv.hpp" 1
 1988              		csrc sip, a5
 1989              	# 0 "" 2
 1990              	.LVL138:
 1991              	#NO_APP
 1992              	.LBE475:
 1993              	.LBE474:
 1994              		.loc 1 289 1
 1995 0578 6FF05FFD 		j	.L48
 1996              		.cfi_endproc
 1997              	.LFE56:
 1999              	.Letext0:
 2000              		.file 6 "src/../h/../lib/hw.h"
 2001              		.file 7 "src/../h/DoublyLinkedList.hpp"
 2002              		.file 8 "src/../h/MemoryAllocator.hpp"
 2003              		.file 9 "src/../h/Scheduler.hpp"
 2004              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccd0QvNp.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccd0QvNp.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccd0QvNp.s:13     .text:0000000000000000 .L0 
     /tmp/ccd0QvNp.s:14     .text:0000000000000000 .L0 
     /tmp/ccd0QvNp.s:15     .text:0000000000000004 .L0 
     /tmp/ccd0QvNp.s:17     .text:0000000000000008 .L0 
     /tmp/ccd0QvNp.s:19     .text:000000000000000c .L0 
     /tmp/ccd0QvNp.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccd0QvNp.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccd0QvNp.s:33     .text:0000000000000014 .L0 
     /tmp/ccd0QvNp.s:34     .text:0000000000000018 .L0 
     /tmp/ccd0QvNp.s:35     .text:0000000000000018 .L0 
     /tmp/ccd0QvNp.s:37     .text:000000000000001c .L0 
     /tmp/ccd0QvNp.s:39     .text:0000000000000020 .L0 
     /tmp/ccd0QvNp.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccd0QvNp.s:48     .text:0000000000000020 .L0 
     /tmp/ccd0QvNp.s:49     .text:0000000000000020 .L0 
     /tmp/ccd0QvNp.s:50     .text:0000000000000024 .L0 
     /tmp/ccd0QvNp.s:57     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:58     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:59     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:60     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:61     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:62     .text:000000000000003c .L0 
     /tmp/ccd0QvNp.s:64     .text:0000000000000040 .L0 
     /tmp/ccd0QvNp.s:69     .text:0000000000000040 .L0 
     /tmp/ccd0QvNp.s:70     .text:0000000000000040 .L0 
     /tmp/ccd0QvNp.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/ccd0QvNp.s:79     .text:0000000000000048 .L0 
     /tmp/ccd0QvNp.s:80     .text:0000000000000048 .L0 
     /tmp/ccd0QvNp.s:85     .text:000000000000004c .L0 
     /tmp/ccd0QvNp.s:86     .text:000000000000004c .L0 
     /tmp/ccd0QvNp.s:87     .text:000000000000004c .L0 
       src/Riscv.cpp:24     .text:000000000000004c .L0 
     /tmp/ccd0QvNp.s:96     .text:0000000000000050 .L0 
     /tmp/ccd0QvNp.s:104    .text:0000000000000060 .L0 
     /tmp/ccd0QvNp.s:112    .text:0000000000000068 .L0 
     /tmp/ccd0QvNp.s:124    .text:0000000000000078 .L0 
     /tmp/ccd0QvNp.s:136    .text:0000000000000080 .L0 
     /tmp/ccd0QvNp.s:151    .text:0000000000000088 .L0 
     /tmp/ccd0QvNp.s:165    .text:0000000000000090 .L0 
     /tmp/ccd0QvNp.s:181    .text:0000000000000098 .L0 
     /tmp/ccd0QvNp.s:199    .text:00000000000000a0 .L0 
     /tmp/ccd0QvNp.s:219    .text:00000000000000a8 .L0 
     /tmp/ccd0QvNp.s:241    .text:00000000000000b0 .L0 
     /tmp/ccd0QvNp.s:265    .text:00000000000000b8 .L0 
     /tmp/ccd0QvNp.s:291    .text:00000000000000c0 .L0 
     /tmp/ccd0QvNp.s:319    .text:00000000000000c8 .L0 
     /tmp/ccd0QvNp.s:349    .text:00000000000000d0 .L0 
     /tmp/ccd0QvNp.s:381    .text:00000000000000d8 .L0 
     /tmp/ccd0QvNp.s:387    .text:00000000000000e0 .L0 
     /tmp/ccd0QvNp.s:388    .text:00000000000000e0 .L0 
     /tmp/ccd0QvNp.s:389    .text:00000000000000e0 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 56


  src/../h/Riscv.hpp:111    .text:00000000000000e0 .L0 
     /tmp/ccd0QvNp.s:397    .text:00000000000000e8 .L0 
     /tmp/ccd0QvNp.s:398    .text:00000000000000e8 .L0 
     /tmp/ccd0QvNp.s:403    .text:00000000000000ec .L0 
     /tmp/ccd0QvNp.s:408    .text:00000000000000f0 .L0 
     /tmp/ccd0QvNp.s:409    .text:00000000000000f0 .L0 
     /tmp/ccd0QvNp.s:410    .text:00000000000000f0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000000f0 .L0 
     /tmp/ccd0QvNp.s:418    .text:00000000000000f8 .L0 
     /tmp/ccd0QvNp.s:419    .text:00000000000000f8 .L0 
     /tmp/ccd0QvNp.s:424    .text:00000000000000fc .L0 
     /tmp/ccd0QvNp.s:425    .text:00000000000000fc .L0 
       src/Riscv.cpp:260    .text:00000000000000fc .L0 
     /tmp/ccd0QvNp.s:431    .text:0000000000000100 .L0 
       src/Riscv.cpp:262    .text:0000000000000100 .L0 
     /tmp/ccd0QvNp.s:439    .text:0000000000000108 .L0 
     /tmp/ccd0QvNp.s:440    .text:0000000000000108 .L0 
     /tmp/ccd0QvNp.s:445    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000110 .L0 
     /tmp/ccd0QvNp.s:455    .text:0000000000000114 .L0 
     /tmp/ccd0QvNp.s:456    .text:0000000000000114 .L0 
     /tmp/ccd0QvNp.s:459    .text:000000000000011c .L0 
     /tmp/ccd0QvNp.s:460    .text:000000000000011c .L0 
     /tmp/ccd0QvNp.s:465    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000124 .L0 
     /tmp/ccd0QvNp.s:477    .text:0000000000000128 .L0 
     /tmp/ccd0QvNp.s:478    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000128 .L0 
     /tmp/ccd0QvNp.s:490    .text:000000000000012c .L0 
     /tmp/ccd0QvNp.s:491    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000012c .L0 
     /tmp/ccd0QvNp.s:517    .text:0000000000000130 .L0 
     /tmp/ccd0QvNp.s:524    .text:0000000000000134 .L0 
     /tmp/ccd0QvNp.s:525    .text:0000000000000134 .L0 
     /tmp/ccd0QvNp.s:526    .text:0000000000000134 .L0 
     /tmp/ccd0QvNp.s:538    .text:000000000000013c .L0 
     /tmp/ccd0QvNp.s:539    .text:0000000000000140 .L0 
     /tmp/ccd0QvNp.s:540    .text:0000000000000140 .L0 
     /tmp/ccd0QvNp.s:542    .text:0000000000000144 .L0 
     /tmp/ccd0QvNp.s:543    .text:0000000000000144 .L0 
     /tmp/ccd0QvNp.s:545    .text:0000000000000148 .L0 
     /tmp/ccd0QvNp.s:547    .text:000000000000014c .L0 
     /tmp/ccd0QvNp.s:549    .text:0000000000000150 .L0 
     /tmp/ccd0QvNp.s:551    .text:0000000000000154 .L0 
     /tmp/ccd0QvNp.s:553    .text:0000000000000158 .L0 
     /tmp/ccd0QvNp.s:557    .text:000000000000015c .L0 
     /tmp/ccd0QvNp.s:564    .text:000000000000015c .L0 
     /tmp/ccd0QvNp.s:565    .text:000000000000015c .L0 
     /tmp/ccd0QvNp.s:566    .text:000000000000015c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000015c .L0 
     /tmp/ccd0QvNp.s:574    .text:0000000000000164 .L0 
     /tmp/ccd0QvNp.s:575    .text:0000000000000164 .L0 
     /tmp/ccd0QvNp.s:582    .text:0000000000000168 .L0 
     /tmp/ccd0QvNp.s:583    .text:0000000000000168 .L0 
     /tmp/ccd0QvNp.s:584    .text:0000000000000168 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000168 .L0 
     /tmp/ccd0QvNp.s:592    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 57


     /tmp/ccd0QvNp.s:593    .text:0000000000000170 .L0 
     /tmp/ccd0QvNp.s:597    .text:0000000000000174 .L0 
     /tmp/ccd0QvNp.s:600    .text:0000000000000178 .L0 
     /tmp/ccd0QvNp.s:601    .text:0000000000000178 .L0 
     /tmp/ccd0QvNp.s:606    .text:000000000000017c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000017c .L0 
     /tmp/ccd0QvNp.s:618    .text:0000000000000180 .L0 
     /tmp/ccd0QvNp.s:619    .text:0000000000000180 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000180 .L0 
     /tmp/ccd0QvNp.s:626    .text:0000000000000184 .L0 
     /tmp/ccd0QvNp.s:634    .text:0000000000000188 .L0 
     /tmp/ccd0QvNp.s:635    .text:0000000000000188 .L0 
     /tmp/ccd0QvNp.s:646    .text:0000000000000194 .L0 
     /tmp/ccd0QvNp.s:647    .text:0000000000000194 .L0 
     /tmp/ccd0QvNp.s:648    .text:0000000000000194 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000194 .L0 
     /tmp/ccd0QvNp.s:656    .text:000000000000019c .L0 
     /tmp/ccd0QvNp.s:657    .text:000000000000019c .L0 
     /tmp/ccd0QvNp.s:661    .text:00000000000001a0 .L0 
     /tmp/ccd0QvNp.s:666    .text:00000000000001a4 .L0 
     /tmp/ccd0QvNp.s:667    .text:00000000000001a4 .L0 
     /tmp/ccd0QvNp.s:668    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000001a4 .L0 
     /tmp/ccd0QvNp.s:676    .text:00000000000001ac .L0 
     /tmp/ccd0QvNp.s:677    .text:00000000000001ac .L0 
     /tmp/ccd0QvNp.s:682    .text:00000000000001b0 .L0 
     /tmp/ccd0QvNp.s:683    .text:00000000000001b0 .L0 
     /tmp/ccd0QvNp.s:684    .text:00000000000001b0 .L0 
     /tmp/ccd0QvNp.s:685    .text:00000000000001b0 .L0 
     /tmp/ccd0QvNp.s:686    .text:00000000000001b0 .L0 
       src/Riscv.cpp:55     .text:00000000000001b0 .L0 
     /tmp/ccd0QvNp.s:692    .text:00000000000001b4 .L0 
       src/Riscv.cpp:56     .text:00000000000001b4 .L0 
     /tmp/ccd0QvNp.s:697    .text:00000000000001b8 .L0 
       src/Riscv.cpp:57     .text:00000000000001b8 .L0 
     /tmp/ccd0QvNp.s:702    .text:00000000000001bc .L0 
       src/Riscv.cpp:58     .text:00000000000001bc .L0 
     /tmp/ccd0QvNp.s:707    .text:00000000000001c0 .L0 
       src/Riscv.cpp:61     .text:00000000000001c0 .L0 
     /tmp/ccd0QvNp.s:713    .text:00000000000001c4 .L0 
       src/Riscv.cpp:62     .text:00000000000001c4 .L0 
     /tmp/ccd0QvNp.s:719    .text:00000000000001c8 .L0 
       src/Riscv.cpp:63     .text:00000000000001c8 .L0 
     /tmp/ccd0QvNp.s:725    .text:00000000000001cc .L0 
       src/Riscv.cpp:64     .text:00000000000001cc .L0 
     /tmp/ccd0QvNp.s:731    .text:00000000000001d0 .L0 
     /tmp/ccd0QvNp.s:733    .text:00000000000001d0 .L0 
     /tmp/ccd0QvNp.s:736    .text:00000000000001d8 .L0 
     /tmp/ccd0QvNp.s:737    .text:00000000000001d8 .L0 
     /tmp/ccd0QvNp.s:739    .text:00000000000001dc .L0 
     /tmp/ccd0QvNp.s:740    .text:00000000000001dc .L0 
     /tmp/ccd0QvNp.s:742    .text:00000000000001e0 .L0 
     /tmp/ccd0QvNp.s:746    .text:00000000000001e4 .L0 
       src/Riscv.cpp:76     .text:00000000000001e4 .L0 
     /tmp/ccd0QvNp.s:756    .text:00000000000001e8 .L0 
     /tmp/ccd0QvNp.s:757    .text:00000000000001e8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001e8 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 58


     /tmp/ccd0QvNp.s:769    .text:00000000000001ec .L0 
     /tmp/ccd0QvNp.s:770    .text:00000000000001ec .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001ec .L0 
     /tmp/ccd0QvNp.s:777    .text:00000000000001f0 .L0 
     /tmp/ccd0QvNp.s:783    .text:00000000000001f4 .L0 
     /tmp/ccd0QvNp.s:794    .text:00000000000001fc .L0 
     /tmp/ccd0QvNp.s:795    .text:00000000000001fc .L0 
     /tmp/ccd0QvNp.s:796    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001fc .L0 
     /tmp/ccd0QvNp.s:804    .text:0000000000000204 .L0 
     /tmp/ccd0QvNp.s:805    .text:0000000000000204 .L0 
     /tmp/ccd0QvNp.s:810    .text:0000000000000208 .L0 
     /tmp/ccd0QvNp.s:815    .text:000000000000020c .L0 
     /tmp/ccd0QvNp.s:816    .text:000000000000020c .L0 
     /tmp/ccd0QvNp.s:817    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000020c .L0 
     /tmp/ccd0QvNp.s:825    .text:0000000000000214 .L0 
     /tmp/ccd0QvNp.s:826    .text:0000000000000214 .L0 
     /tmp/ccd0QvNp.s:831    .text:0000000000000218 .L0 
       src/Riscv.cpp:85     .text:0000000000000218 .L0 
     /tmp/ccd0QvNp.s:838    .text:000000000000021c .L0 
     /tmp/ccd0QvNp.s:840    .text:000000000000021c .L0 
     /tmp/ccd0QvNp.s:845    .text:0000000000000228 .L0 
       src/Riscv.cpp:89     .text:0000000000000228 .L0 
     /tmp/ccd0QvNp.s:855    .text:000000000000022c .L0 
     /tmp/ccd0QvNp.s:856    .text:000000000000022c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000022c .L0 
     /tmp/ccd0QvNp.s:868    .text:0000000000000230 .L0 
     /tmp/ccd0QvNp.s:869    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000230 .L0 
     /tmp/ccd0QvNp.s:876    .text:0000000000000234 .L0 
     /tmp/ccd0QvNp.s:887    .text:0000000000000238 .L0 
     /tmp/ccd0QvNp.s:888    .text:0000000000000238 .L0 
     /tmp/ccd0QvNp.s:889    .text:0000000000000238 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000238 .L0 
     /tmp/ccd0QvNp.s:897    .text:0000000000000240 .L0 
     /tmp/ccd0QvNp.s:898    .text:0000000000000240 .L0 
     /tmp/ccd0QvNp.s:903    .text:0000000000000244 .L0 
     /tmp/ccd0QvNp.s:908    .text:0000000000000248 .L0 
     /tmp/ccd0QvNp.s:909    .text:0000000000000248 .L0 
     /tmp/ccd0QvNp.s:910    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000248 .L0 
     /tmp/ccd0QvNp.s:918    .text:0000000000000250 .L0 
     /tmp/ccd0QvNp.s:919    .text:0000000000000250 .L0 
     /tmp/ccd0QvNp.s:924    .text:0000000000000254 .L0 
       src/Riscv.cpp:98     .text:0000000000000254 .L0 
     /tmp/ccd0QvNp.s:931    .text:0000000000000258 .L0 
     /tmp/ccd0QvNp.s:933    .text:0000000000000258 .L0 
     /tmp/ccd0QvNp.s:936    .text:0000000000000260 .L0 
       src/Riscv.cpp:100    .text:0000000000000260 .L0 
     /tmp/ccd0QvNp.s:946    .text:0000000000000264 .L0 
     /tmp/ccd0QvNp.s:947    .text:0000000000000264 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000264 .L0 
     /tmp/ccd0QvNp.s:959    .text:0000000000000268 .L0 
     /tmp/ccd0QvNp.s:960    .text:0000000000000268 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000268 .L0 
     /tmp/ccd0QvNp.s:967    .text:000000000000026c .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 59


     /tmp/ccd0QvNp.s:978    .text:0000000000000270 .L0 
     /tmp/ccd0QvNp.s:979    .text:0000000000000270 .L0 
     /tmp/ccd0QvNp.s:980    .text:0000000000000270 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000270 .L0 
     /tmp/ccd0QvNp.s:988    .text:0000000000000278 .L0 
     /tmp/ccd0QvNp.s:989    .text:0000000000000278 .L0 
     /tmp/ccd0QvNp.s:994    .text:000000000000027c .L0 
     /tmp/ccd0QvNp.s:999    .text:0000000000000280 .L0 
     /tmp/ccd0QvNp.s:1000   .text:0000000000000280 .L0 
     /tmp/ccd0QvNp.s:1001   .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000280 .L0 
     /tmp/ccd0QvNp.s:1009   .text:0000000000000288 .L0 
     /tmp/ccd0QvNp.s:1010   .text:0000000000000288 .L0 
     /tmp/ccd0QvNp.s:1015   .text:000000000000028c .L0 
     /tmp/ccd0QvNp.s:1016   .text:000000000000028c .L0 
     /tmp/ccd0QvNp.s:1019   .text:0000000000000298 .L0 
     /tmp/ccd0QvNp.s:1022   .text:00000000000002a0 .L0 
     /tmp/ccd0QvNp.s:1023   .text:00000000000002a0 .L0 
     /tmp/ccd0QvNp.s:1028   .text:00000000000002a8 .L0 
     /tmp/ccd0QvNp.s:1029   .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002a8 .L0 
     /tmp/ccd0QvNp.s:1041   .text:00000000000002ac .L0 
     /tmp/ccd0QvNp.s:1042   .text:00000000000002ac .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002ac .L0 
     /tmp/ccd0QvNp.s:1049   .text:00000000000002b0 .L0 
     /tmp/ccd0QvNp.s:1060   .text:00000000000002b4 .L0 
     /tmp/ccd0QvNp.s:1061   .text:00000000000002b4 .L0 
     /tmp/ccd0QvNp.s:1062   .text:00000000000002b4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002b4 .L0 
     /tmp/ccd0QvNp.s:1070   .text:00000000000002bc .L0 
     /tmp/ccd0QvNp.s:1071   .text:00000000000002bc .L0 
     /tmp/ccd0QvNp.s:1076   .text:00000000000002c0 .L0 
     /tmp/ccd0QvNp.s:1081   .text:00000000000002c4 .L0 
     /tmp/ccd0QvNp.s:1082   .text:00000000000002c4 .L0 
     /tmp/ccd0QvNp.s:1083   .text:00000000000002c4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002c4 .L0 
     /tmp/ccd0QvNp.s:1091   .text:00000000000002cc .L0 
     /tmp/ccd0QvNp.s:1092   .text:00000000000002cc .L0 
     /tmp/ccd0QvNp.s:1097   .text:00000000000002d0 .L0 
     /tmp/ccd0QvNp.s:1098   .text:00000000000002d0 .L0 
     /tmp/ccd0QvNp.s:1103   .text:00000000000002d8 .L0 
     /tmp/ccd0QvNp.s:1104   .text:00000000000002d8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002d8 .L0 
     /tmp/ccd0QvNp.s:1116   .text:00000000000002dc .L0 
     /tmp/ccd0QvNp.s:1117   .text:00000000000002dc .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002dc .L0 
     /tmp/ccd0QvNp.s:1124   .text:00000000000002e0 .L0 
     /tmp/ccd0QvNp.s:1135   .text:00000000000002e4 .L0 
     /tmp/ccd0QvNp.s:1136   .text:00000000000002e4 .L0 
     /tmp/ccd0QvNp.s:1137   .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002e4 .L0 
     /tmp/ccd0QvNp.s:1145   .text:00000000000002ec .L0 
     /tmp/ccd0QvNp.s:1146   .text:00000000000002ec .L0 
     /tmp/ccd0QvNp.s:1151   .text:00000000000002f0 .L0 
     /tmp/ccd0QvNp.s:1156   .text:00000000000002f4 .L0 
     /tmp/ccd0QvNp.s:1157   .text:00000000000002f4 .L0 
     /tmp/ccd0QvNp.s:1158   .text:00000000000002f4 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 60


  src/../h/Riscv.hpp:181    .text:00000000000002f4 .L0 
     /tmp/ccd0QvNp.s:1166   .text:00000000000002fc .L0 
     /tmp/ccd0QvNp.s:1167   .text:00000000000002fc .L0 
     /tmp/ccd0QvNp.s:1172   .text:0000000000000300 .L0 
     /tmp/ccd0QvNp.s:1173   .text:0000000000000300 .L0 
     /tmp/ccd0QvNp.s:1176   .text:000000000000030c .L0 
     /tmp/ccd0QvNp.s:1177   .text:000000000000030c .L0 
     /tmp/ccd0QvNp.s:1182   .text:0000000000000314 .L0 
     /tmp/ccd0QvNp.s:1183   .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000314 .L0 
     /tmp/ccd0QvNp.s:1195   .text:0000000000000318 .L0 
     /tmp/ccd0QvNp.s:1196   .text:0000000000000318 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000318 .L0 
     /tmp/ccd0QvNp.s:1203   .text:000000000000031c .L0 
     /tmp/ccd0QvNp.s:1214   .text:0000000000000320 .L0 
     /tmp/ccd0QvNp.s:1215   .text:0000000000000320 .L0 
     /tmp/ccd0QvNp.s:1216   .text:0000000000000320 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000320 .L0 
     /tmp/ccd0QvNp.s:1224   .text:0000000000000328 .L0 
     /tmp/ccd0QvNp.s:1225   .text:0000000000000328 .L0 
     /tmp/ccd0QvNp.s:1230   .text:000000000000032c .L0 
     /tmp/ccd0QvNp.s:1235   .text:0000000000000330 .L0 
     /tmp/ccd0QvNp.s:1236   .text:0000000000000330 .L0 
     /tmp/ccd0QvNp.s:1237   .text:0000000000000330 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000330 .L0 
     /tmp/ccd0QvNp.s:1245   .text:0000000000000338 .L0 
     /tmp/ccd0QvNp.s:1246   .text:0000000000000338 .L0 
     /tmp/ccd0QvNp.s:1251   .text:000000000000033c .L0 
     /tmp/ccd0QvNp.s:1252   .text:000000000000033c .L0 
     /tmp/ccd0QvNp.s:1253   .text:000000000000033c .L0 
       src/Riscv.cpp:148    .text:000000000000033c .L0 
     /tmp/ccd0QvNp.s:1259   .text:0000000000000340 .L0 
       src/Riscv.cpp:149    .text:0000000000000340 .L0 
     /tmp/ccd0QvNp.s:1264   .text:0000000000000344 .L0 
       src/Riscv.cpp:151    .text:0000000000000344 .L0 
     /tmp/ccd0QvNp.s:1270   .text:0000000000000348 .L0 
       src/Riscv.cpp:152    .text:0000000000000348 .L0 
     /tmp/ccd0QvNp.s:1276   .text:000000000000034c .L0 
     /tmp/ccd0QvNp.s:1278   .text:000000000000034c .L0 
     /tmp/ccd0QvNp.s:1285   .text:0000000000000358 .L0 
     /tmp/ccd0QvNp.s:1291   .text:000000000000035c .L0 
     /tmp/ccd0QvNp.s:1301   .text:0000000000000364 .L0 
     /tmp/ccd0QvNp.s:1302   .text:0000000000000364 .L0 
     /tmp/ccd0QvNp.s:1303   .text:0000000000000364 .L0 
     /tmp/ccd0QvNp.s:1309   .text:000000000000036c .L0 
     /tmp/ccd0QvNp.s:1310   .text:000000000000036c .L0 
     /tmp/ccd0QvNp.s:1313   .text:0000000000000370 .L0 
     /tmp/ccd0QvNp.s:1314   .text:0000000000000370 .L0 
     /tmp/ccd0QvNp.s:1316   .text:0000000000000374 .L0 
     /tmp/ccd0QvNp.s:1320   .text:0000000000000378 .L0 
       src/Riscv.cpp:162    .text:0000000000000378 .L0 
     /tmp/ccd0QvNp.s:1330   .text:000000000000037c .L0 
     /tmp/ccd0QvNp.s:1331   .text:000000000000037c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000037c .L0 
     /tmp/ccd0QvNp.s:1343   .text:0000000000000380 .L0 
     /tmp/ccd0QvNp.s:1344   .text:0000000000000380 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000380 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 61


     /tmp/ccd0QvNp.s:1351   .text:0000000000000384 .L0 
     /tmp/ccd0QvNp.s:1357   .text:0000000000000388 .L0 
     /tmp/ccd0QvNp.s:1367   .text:0000000000000390 .L0 
     /tmp/ccd0QvNp.s:1368   .text:0000000000000390 .L0 
     /tmp/ccd0QvNp.s:1369   .text:0000000000000390 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000390 .L0 
     /tmp/ccd0QvNp.s:1377   .text:0000000000000398 .L0 
     /tmp/ccd0QvNp.s:1378   .text:0000000000000398 .L0 
     /tmp/ccd0QvNp.s:1382   .text:000000000000039c .L0 
     /tmp/ccd0QvNp.s:1387   .text:00000000000003a0 .L0 
     /tmp/ccd0QvNp.s:1388   .text:00000000000003a0 .L0 
     /tmp/ccd0QvNp.s:1389   .text:00000000000003a0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000003a0 .L0 
     /tmp/ccd0QvNp.s:1397   .text:00000000000003a8 .L0 
     /tmp/ccd0QvNp.s:1398   .text:00000000000003a8 .L0 
     /tmp/ccd0QvNp.s:1403   .text:00000000000003ac .L0 
     /tmp/ccd0QvNp.s:1404   .text:00000000000003ac .L0 
       src/Riscv.cpp:174    .text:00000000000003ac .L0 
     /tmp/ccd0QvNp.s:1410   .text:00000000000003b0 .L0 
       src/Riscv.cpp:176    .text:00000000000003b0 .L0 
     /tmp/ccd0QvNp.s:1417   .text:00000000000003b4 .L0 
     /tmp/ccd0QvNp.s:1424   .text:00000000000003b8 .L0 
     /tmp/ccd0QvNp.s:1427   .text:00000000000003bc .L0 
     /tmp/ccd0QvNp.s:1435   .text:00000000000003c4 .L0 
     /tmp/ccd0QvNp.s:1436   .text:00000000000003c4 .L0 
     /tmp/ccd0QvNp.s:1437   .text:00000000000003c4 .L0 
     /tmp/ccd0QvNp.s:1443   .text:00000000000003cc .L0 
     /tmp/ccd0QvNp.s:1444   .text:00000000000003cc .L0 
     /tmp/ccd0QvNp.s:1446   .text:00000000000003d0 .L0 
     /tmp/ccd0QvNp.s:1449   .text:00000000000003d8 .L0 
     /tmp/ccd0QvNp.s:1450   .text:00000000000003d8 .L0 
     /tmp/ccd0QvNp.s:1456   .text:00000000000003e4 .L0 
     /tmp/ccd0QvNp.s:1459   .text:00000000000003e4 .L0 
     /tmp/ccd0QvNp.s:1460   .text:00000000000003e4 .L0 
     /tmp/ccd0QvNp.s:1462   .text:00000000000003e8 .L0 
     /tmp/ccd0QvNp.s:1464   .text:00000000000003ec .L0 
     /tmp/ccd0QvNp.s:1469   .text:00000000000003f0 .L0 
     /tmp/ccd0QvNp.s:1475   .text:00000000000003f4 .L0 
     /tmp/ccd0QvNp.s:1476   .text:00000000000003f4 .L0 
     /tmp/ccd0QvNp.s:1478   .text:00000000000003f8 .L0 
     /tmp/ccd0QvNp.s:1480   .text:00000000000003fc .L0 
     /tmp/ccd0QvNp.s:1482   .text:0000000000000400 .L0 
     /tmp/ccd0QvNp.s:1492   .text:0000000000000408 .L0 
     /tmp/ccd0QvNp.s:1493   .text:0000000000000408 .L0 
     /tmp/ccd0QvNp.s:1494   .text:0000000000000408 .L0 
     /tmp/ccd0QvNp.s:1499   .text:000000000000040c .L0 
     /tmp/ccd0QvNp.s:1500   .text:000000000000040c .L0 
     /tmp/ccd0QvNp.s:1502   .text:0000000000000410 .L0 
     /tmp/ccd0QvNp.s:1509   .text:000000000000041c .L0 
     /tmp/ccd0QvNp.s:1510   .text:000000000000041c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000041c .L0 
     /tmp/ccd0QvNp.s:1522   .text:0000000000000420 .L0 
     /tmp/ccd0QvNp.s:1523   .text:0000000000000420 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000420 .L0 
     /tmp/ccd0QvNp.s:1530   .text:0000000000000424 .L0 
     /tmp/ccd0QvNp.s:1541   .text:0000000000000428 .L0 
     /tmp/ccd0QvNp.s:1542   .text:0000000000000428 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 62


     /tmp/ccd0QvNp.s:1543   .text:0000000000000428 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000428 .L0 
     /tmp/ccd0QvNp.s:1551   .text:0000000000000430 .L0 
     /tmp/ccd0QvNp.s:1552   .text:0000000000000430 .L0 
     /tmp/ccd0QvNp.s:1557   .text:0000000000000434 .L0 
     /tmp/ccd0QvNp.s:1562   .text:0000000000000438 .L0 
     /tmp/ccd0QvNp.s:1563   .text:0000000000000438 .L0 
     /tmp/ccd0QvNp.s:1564   .text:0000000000000438 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000438 .L0 
     /tmp/ccd0QvNp.s:1572   .text:0000000000000440 .L0 
     /tmp/ccd0QvNp.s:1573   .text:0000000000000440 .L0 
     /tmp/ccd0QvNp.s:1578   .text:0000000000000444 .L0 
     /tmp/ccd0QvNp.s:1579   .text:0000000000000444 .L0 
       src/Riscv.cpp:199    .text:0000000000000444 .L0 
     /tmp/ccd0QvNp.s:1585   .text:0000000000000448 .L0 
       src/Riscv.cpp:201    .text:0000000000000448 .L0 
     /tmp/ccd0QvNp.s:1591   .text:000000000000044c .L0 
     /tmp/ccd0QvNp.s:1595   .text:000000000000044c .L0 
     /tmp/ccd0QvNp.s:1596   .text:000000000000044c .L0 
     /tmp/ccd0QvNp.s:1597   .text:000000000000044c .L0 
     /tmp/ccd0QvNp.s:1602   .text:0000000000000450 .L0 
     /tmp/ccd0QvNp.s:1604   .text:0000000000000454 .L0 
     /tmp/ccd0QvNp.s:1608   .text:0000000000000458 .L0 
       src/Riscv.cpp:211    .text:0000000000000458 .L0 
     /tmp/ccd0QvNp.s:1618   .text:000000000000045c .L0 
     /tmp/ccd0QvNp.s:1619   .text:000000000000045c .L0 
  src/../h/Riscv.hpp:187    .text:000000000000045c .L0 
     /tmp/ccd0QvNp.s:1631   .text:0000000000000460 .L0 
     /tmp/ccd0QvNp.s:1632   .text:0000000000000460 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000460 .L0 
     /tmp/ccd0QvNp.s:1639   .text:0000000000000464 .L0 
     /tmp/ccd0QvNp.s:1645   .text:0000000000000468 .L0 
     /tmp/ccd0QvNp.s:1646   .text:0000000000000468 .L0 
     /tmp/ccd0QvNp.s:1657   .text:0000000000000474 .L0 
     /tmp/ccd0QvNp.s:1658   .text:0000000000000474 .L0 
     /tmp/ccd0QvNp.s:1659   .text:0000000000000474 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000474 .L0 
     /tmp/ccd0QvNp.s:1667   .text:000000000000047c .L0 
     /tmp/ccd0QvNp.s:1668   .text:000000000000047c .L0 
     /tmp/ccd0QvNp.s:1673   .text:0000000000000480 .L0 
     /tmp/ccd0QvNp.s:1678   .text:0000000000000484 .L0 
     /tmp/ccd0QvNp.s:1679   .text:0000000000000484 .L0 
     /tmp/ccd0QvNp.s:1680   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000484 .L0 
     /tmp/ccd0QvNp.s:1688   .text:000000000000048c .L0 
     /tmp/ccd0QvNp.s:1689   .text:000000000000048c .L0 
     /tmp/ccd0QvNp.s:1694   .text:0000000000000490 .L0 
     /tmp/ccd0QvNp.s:1695   .text:0000000000000490 .L0 
       src/Riscv.cpp:222    .text:0000000000000490 .L0 
     /tmp/ccd0QvNp.s:1701   .text:0000000000000494 .L0 
       src/Riscv.cpp:224    .text:0000000000000494 .L0 
     /tmp/ccd0QvNp.s:1707   .text:0000000000000498 .L0 
     /tmp/ccd0QvNp.s:1711   .text:0000000000000498 .L0 
     /tmp/ccd0QvNp.s:1712   .text:0000000000000498 .L0 
     /tmp/ccd0QvNp.s:1713   .text:0000000000000498 .L0 
     /tmp/ccd0QvNp.s:1718   .text:000000000000049c .L0 
     /tmp/ccd0QvNp.s:1720   .text:00000000000004a0 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 63


     /tmp/ccd0QvNp.s:1724   .text:00000000000004a4 .L0 
       src/Riscv.cpp:235    .text:00000000000004a4 .L0 
     /tmp/ccd0QvNp.s:1734   .text:00000000000004a8 .L0 
     /tmp/ccd0QvNp.s:1735   .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004a8 .L0 
     /tmp/ccd0QvNp.s:1747   .text:00000000000004ac .L0 
     /tmp/ccd0QvNp.s:1748   .text:00000000000004ac .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004ac .L0 
     /tmp/ccd0QvNp.s:1755   .text:00000000000004b0 .L0 
     /tmp/ccd0QvNp.s:1761   .text:00000000000004b4 .L0 
     /tmp/ccd0QvNp.s:1762   .text:00000000000004b4 .L0 
     /tmp/ccd0QvNp.s:1765   .text:00000000000004bc .L0 
     /tmp/ccd0QvNp.s:1766   .text:00000000000004bc .L0 
     /tmp/ccd0QvNp.s:1776   .text:00000000000004c4 .L0 
     /tmp/ccd0QvNp.s:1777   .text:00000000000004c4 .L0 
     /tmp/ccd0QvNp.s:1778   .text:00000000000004c4 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000004c4 .L0 
     /tmp/ccd0QvNp.s:1786   .text:00000000000004cc .L0 
     /tmp/ccd0QvNp.s:1787   .text:00000000000004cc .L0 
     /tmp/ccd0QvNp.s:1792   .text:00000000000004d0 .L0 
     /tmp/ccd0QvNp.s:1797   .text:00000000000004d4 .L0 
     /tmp/ccd0QvNp.s:1798   .text:00000000000004d4 .L0 
     /tmp/ccd0QvNp.s:1799   .text:00000000000004d4 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000004d4 .L0 
     /tmp/ccd0QvNp.s:1807   .text:00000000000004dc .L0 
     /tmp/ccd0QvNp.s:1808   .text:00000000000004dc .L0 
     /tmp/ccd0QvNp.s:1813   .text:00000000000004e0 .L0 
     /tmp/ccd0QvNp.s:1814   .text:00000000000004e0 .L0 
     /tmp/ccd0QvNp.s:1819   .text:00000000000004e8 .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004e8 .L0 
     /tmp/ccd0QvNp.s:1829   .text:00000000000004ec .L0 
     /tmp/ccd0QvNp.s:1830   .text:00000000000004ec .L0 
     /tmp/ccd0QvNp.s:1833   .text:00000000000004f4 .L0 
     /tmp/ccd0QvNp.s:1834   .text:00000000000004f4 .L0 
     /tmp/ccd0QvNp.s:1839   .text:00000000000004fc .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004fc .L0 
     /tmp/ccd0QvNp.s:1849   .text:0000000000000500 .L0 
       src/Riscv.cpp:249    .text:0000000000000500 .L0 
     /tmp/ccd0QvNp.s:1859   .text:0000000000000504 .L0 
     /tmp/ccd0QvNp.s:1860   .text:0000000000000504 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000504 .L0 
     /tmp/ccd0QvNp.s:1872   .text:0000000000000508 .L0 
     /tmp/ccd0QvNp.s:1873   .text:0000000000000508 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000508 .L0 
     /tmp/ccd0QvNp.s:1880   .text:000000000000050c .L0 
     /tmp/ccd0QvNp.s:1898   .text:0000000000000510 .L0 
     /tmp/ccd0QvNp.s:1904   .text:0000000000000510 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccd0QvNp.s:1907   .text:0000000000000510 .L0 
     /tmp/ccd0QvNp.s:1908   .text:0000000000000510 .L0 
     /tmp/ccd0QvNp.s:1909   .text:0000000000000514 .L0 
     /tmp/ccd0QvNp.s:1912   .text:000000000000051c .L0 
     /tmp/ccd0QvNp.s:1913   .text:000000000000051c .L0 
     /tmp/ccd0QvNp.s:1915   .text:0000000000000520 .L0 
     /tmp/ccd0QvNp.s:1919   .text:0000000000000520 .L0 
     /tmp/ccd0QvNp.s:1920   .text:0000000000000520 .L0 
     /tmp/ccd0QvNp.s:1921   .text:0000000000000520 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000520 .L0 
GAS LISTING /tmp/ccd0QvNp.s 			page 64


     /tmp/ccd0QvNp.s:1929   .text:0000000000000528 .L0 
     /tmp/ccd0QvNp.s:1930   .text:0000000000000528 .L0 
     /tmp/ccd0QvNp.s:1935   .text:000000000000052c .L0 
     /tmp/ccd0QvNp.s:1940   .text:000000000000053c .L0 
     /tmp/ccd0QvNp.s:1947   .text:000000000000054c .L0 
     /tmp/ccd0QvNp.s:1948   .text:0000000000000550 .L0 
     /tmp/ccd0QvNp.s:1949   .text:0000000000000550 .L0 
     /tmp/ccd0QvNp.s:1951   .text:0000000000000554 .L0 
     /tmp/ccd0QvNp.s:1952   .text:0000000000000554 .L0 
     /tmp/ccd0QvNp.s:1954   .text:0000000000000558 .L0 
     /tmp/ccd0QvNp.s:1958   .text:000000000000055c .L0 
     /tmp/ccd0QvNp.s:1960   .text:000000000000055c .L0 
     /tmp/ccd0QvNp.s:1961   .text:000000000000055c .L0 
     /tmp/ccd0QvNp.s:1966   .text:0000000000000564 .L0 
     /tmp/ccd0QvNp.s:1967   .text:0000000000000564 .L0 
     /tmp/ccd0QvNp.s:1968   .text:0000000000000564 .L0 
     /tmp/ccd0QvNp.s:1975   .text:000000000000056c .L0 
     /tmp/ccd0QvNp.s:1983   .text:0000000000000570 .L0 
     /tmp/ccd0QvNp.s:1984   .text:0000000000000570 .L0 
     /tmp/ccd0QvNp.s:1985   .text:0000000000000570 .L0 
     /tmp/ccd0QvNp.s:1995   .text:0000000000000578 .L0 
     /tmp/ccd0QvNp.s:1996   .text:000000000000057c .L0 
     /tmp/ccd0QvNp.s:2005   .text:000000000000057c .L0 
     /tmp/ccd0QvNp.s:440    .text:0000000000000108 .L0 
     /tmp/ccd0QvNp.s:460    .text:000000000000011c .L0 
     /tmp/ccd0QvNp.s:1016   .text:000000000000028c .L0 
     /tmp/ccd0QvNp.s:1173   .text:0000000000000300 .L0 
     /tmp/ccd0QvNp.s:1814   .text:00000000000004e0 .L0 
     /tmp/ccd0QvNp.s:1834   .text:00000000000004f4 .L0 
     /tmp/ccd0QvNp.s:519    .text:0000000000000134 .L32
     /tmp/ccd0QvNp.s:556    .text:000000000000015c .L33
     /tmp/ccd0QvNp.s:628    .text:0000000000000188 .L34
     /tmp/ccd0QvNp.s:533    .text:000000000000013c .L3
     /tmp/ccd0QvNp.s:639    .text:0000000000000194 .L35
     /tmp/ccd0QvNp.s:786    .text:00000000000001fc .L36
     /tmp/ccd0QvNp.s:878    .text:0000000000000238 .L37
     /tmp/ccd0QvNp.s:969    .text:0000000000000270 .L38
     /tmp/ccd0QvNp.s:1051   .text:00000000000002b4 .L39
     /tmp/ccd0QvNp.s:1126   .text:00000000000002e4 .L40
     /tmp/ccd0QvNp.s:1205   .text:0000000000000320 .L41
     /tmp/ccd0QvNp.s:1360   .text:0000000000000390 .L42
     /tmp/ccd0QvNp.s:1532   .text:0000000000000428 .L43
     /tmp/ccd0QvNp.s:1650   .text:0000000000000474 .L44
     /tmp/ccd0QvNp.s:1769   .text:00000000000004c4 .L45
     /tmp/ccd0QvNp.s:779    .text:00000000000001f4 .L27
     /tmp/ccd0QvNp.s:139    .text:0000000000000088 .L8
     /tmp/ccd0QvNp.s:743    .text:00000000000001e4 .L9
     /tmp/ccd0QvNp.s:1353   .text:0000000000000388 .L28
     /tmp/ccd0QvNp.s:1317   .text:0000000000000378 .L16
     /tmp/ccd0QvNp.s:1453   .text:00000000000003e4 .L20
     /tmp/ccd0QvNp.s:1485   .text:0000000000000408 .L18
     /tmp/ccd0QvNp.s:1419   .text:00000000000003b8 .L19
     /tmp/ccd0QvNp.s:1505   .text:000000000000041c .L21
     /tmp/ccd0QvNp.s:1641   .text:0000000000000468 .L46
     /tmp/ccd0QvNp.s:1606   .text:0000000000000458 .L23
     /tmp/ccd0QvNp.s:1757   .text:00000000000004b4 .L47
     /tmp/ccd0QvNp.s:1722   .text:00000000000004a4 .L25
GAS LISTING /tmp/ccd0QvNp.s 			page 65


     /tmp/ccd0QvNp.s:1957   .text:000000000000055c .L52
     /tmp/ccd0QvNp.s:1977   .text:0000000000000570 .L53
     /tmp/ccd0QvNp.s:1945   .text:000000000000054c .L48
     /tmp/ccd0QvNp.s:5193   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccd0QvNp.s:7550   .debug_str:0000000000000b59 .LASF221
     /tmp/ccd0QvNp.s:7252   .debug_str:0000000000000198 .LASF222
     /tmp/ccd0QvNp.s:7404   .debug_str:00000000000006ab .LASF223
     /tmp/ccd0QvNp.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccd0QvNp.s:1999   .text:000000000000057c .Letext0
     /tmp/ccd0QvNp.s:7192   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccd0QvNp.s:7338   .debug_str:0000000000000473 .LASF0
     /tmp/ccd0QvNp.s:7382   .debug_str:000000000000062d .LASF1
     /tmp/ccd0QvNp.s:7480   .debug_str:0000000000000970 .LASF2
     /tmp/ccd0QvNp.s:7492   .debug_str:00000000000009de .LASF4
     /tmp/ccd0QvNp.s:7354   .debug_str:00000000000004ea .LASF3
     /tmp/ccd0QvNp.s:7206   .debug_str:0000000000000057 .LASF5
     /tmp/ccd0QvNp.s:7436   .debug_str:00000000000007bf .LASF6
     /tmp/ccd0QvNp.s:7370   .debug_str:00000000000005cb .LASF7
     /tmp/ccd0QvNp.s:7304   .debug_str:0000000000000358 .LASF8
     /tmp/ccd0QvNp.s:7312   .debug_str:000000000000039a .LASF9
     /tmp/ccd0QvNp.s:7238   .debug_str:0000000000000122 .LASF10
     /tmp/ccd0QvNp.s:7294   .debug_str:000000000000030e .LASF11
     /tmp/ccd0QvNp.s:7254   .debug_str:00000000000001a6 .LASF12
     /tmp/ccd0QvNp.s:7236   .debug_str:0000000000000112 .LASF13
     /tmp/ccd0QvNp.s:7520   .debug_str:0000000000000aa8 .LASF14
     /tmp/ccd0QvNp.s:7276   .debug_str:0000000000000250 .LASF15
     /tmp/ccd0QvNp.s:7510   .debug_str:0000000000000a72 .LASF16
     /tmp/ccd0QvNp.s:7602   .debug_str:0000000000000d85 .LASF67
     /tmp/ccd0QvNp.s:7460   .debug_str:00000000000008c1 .LASF20
     /tmp/ccd0QvNp.s:7386   .debug_str:0000000000000646 .LASF17
     /tmp/ccd0QvNp.s:7284   .debug_str:00000000000002a9 .LASF18
     /tmp/ccd0QvNp.s:7618   .debug_str:0000000000000deb .LASF19
     /tmp/ccd0QvNp.s:7586   .debug_str:0000000000000cfd .LASF21
     /tmp/ccd0QvNp.s:7286   .debug_str:00000000000002b2 .LASF22
     /tmp/ccd0QvNp.s:7548   .debug_str:0000000000000b4c .LASF23
     /tmp/ccd0QvNp.s:7262   .debug_str:00000000000001e2 .LASF24
     /tmp/ccd0QvNp.s:7324   .debug_str:0000000000000413 .LASF57
     /tmp/ccd0QvNp.s:7336   .debug_str:000000000000045b .LASF59
     /tmp/ccd0QvNp.s:7578   .debug_str:0000000000000cc9 .LASF25
     /tmp/ccd0QvNp.s:7566   .debug_str:0000000000000c89 .LASF27
     /tmp/ccd0QvNp.s:7474   .debug_str:000000000000094a .LASF29
     /tmp/ccd0QvNp.s:7424   .debug_str:0000000000000754 .LASF31
     /tmp/ccd0QvNp.s:7452   .debug_str:0000000000000878 .LASF26
     /tmp/ccd0QvNp.s:7454   .debug_str:000000000000087f .LASF28
     /tmp/ccd0QvNp.s:7418   .debug_str:0000000000000734 .LASF30
     /tmp/ccd0QvNp.s:7374   .debug_str:0000000000000600 .LASF32
     /tmp/ccd0QvNp.s:7614   .debug_str:0000000000000dd7 .LASF33
     /tmp/ccd0QvNp.s:7556   .debug_str:0000000000000c3e .LASF34
     /tmp/ccd0QvNp.s:7414   .debug_str:0000000000000727 .LASF35
     /tmp/ccd0QvNp.s:7422   .debug_str:0000000000000740 .LASF36
     /tmp/ccd0QvNp.s:7388   .debug_str:000000000000064f .LASF37
     /tmp/ccd0QvNp.s:7458   .debug_str:00000000000008ad .LASF38
     /tmp/ccd0QvNp.s:7644   .debug_str:0000000000000ebf .LASF39
     /tmp/ccd0QvNp.s:7344   .debug_str:000000000000048b .LASF40
     /tmp/ccd0QvNp.s:7516   .debug_str:0000000000000a94 .LASF41
     /tmp/ccd0QvNp.s:7496   .debug_str:0000000000000a0b .LASF42
     /tmp/ccd0QvNp.s:7498   .debug_str:0000000000000a1e .LASF43
GAS LISTING /tmp/ccd0QvNp.s 			page 66


     /tmp/ccd0QvNp.s:7242   .debug_str:0000000000000136 .LASF44
     /tmp/ccd0QvNp.s:7272   .debug_str:000000000000022b .LASF45
     /tmp/ccd0QvNp.s:7332   .debug_str:0000000000000434 .LASF46
     /tmp/ccd0QvNp.s:7342   .debug_str:0000000000000485 .LASF47
     /tmp/ccd0QvNp.s:7264   .debug_str:00000000000001ee .LASF48
     /tmp/ccd0QvNp.s:7208   .debug_str:000000000000005e .LASF49
     /tmp/ccd0QvNp.s:7486   .debug_str:0000000000000994 .LASF50
     /tmp/ccd0QvNp.s:7478   .debug_str:0000000000000965 .LASF51
     /tmp/ccd0QvNp.s:7636   .debug_str:0000000000000e74 .LASF52
     /tmp/ccd0QvNp.s:7606   .debug_str:0000000000000d90 .LASF53
     /tmp/ccd0QvNp.s:7620   .debug_str:0000000000000df4 .LASF54
     /tmp/ccd0QvNp.s:7600   .debug_str:0000000000000d7b .LASF55
     /tmp/ccd0QvNp.s:7406   .debug_str:00000000000006db .LASF56
     /tmp/ccd0QvNp.s:7612   .debug_str:0000000000000dc8 .LASF58
     /tmp/ccd0QvNp.s:7310   .debug_str:000000000000037e .LASF60
     /tmp/ccd0QvNp.s:7482   .debug_str:000000000000097e .LASF61
     /tmp/ccd0QvNp.s:7638   .debug_str:0000000000000e8c .LASF62
     /tmp/ccd0QvNp.s:7438   .debug_str:00000000000007d2 .LASF63
     /tmp/ccd0QvNp.s:7366   .debug_str:000000000000058c .LASF65
     /tmp/ccd0QvNp.s:7476   .debug_str:0000000000000953 .LASF64
     /tmp/ccd0QvNp.s:7274   .debug_str:0000000000000231 .LASF66
     /tmp/ccd0QvNp.s:7610   .debug_str:0000000000000da4 .LASF68
     /tmp/ccd0QvNp.s:7596   .debug_str:0000000000000d56 .LASF102
     /tmp/ccd0QvNp.s:7380   .debug_str:0000000000000628 .LASF69
     /tmp/ccd0QvNp.s:7240   .debug_str:0000000000000131 .LASF70
     /tmp/ccd0QvNp.s:7216   .debug_str:000000000000008f .LASF71
     /tmp/ccd0QvNp.s:7350   .debug_str:00000000000004af .LASF104
     /tmp/ccd0QvNp.s:7514   .debug_str:0000000000000a8f .LASF72
     /tmp/ccd0QvNp.s:7416   .debug_str:000000000000072f .LASF73
     /tmp/ccd0QvNp.s:7640   .debug_str:0000000000000ea5 .LASF74
     /tmp/ccd0QvNp.s:7488   .debug_str:00000000000009ac .LASF77
     /tmp/ccd0QvNp.s:7290   .debug_str:00000000000002d5 .LASF75
     /tmp/ccd0QvNp.s:7484   .debug_str:000000000000098a .LASF76
     /tmp/ccd0QvNp.s:7466   .debug_str:00000000000008f1 .LASF78
     /tmp/ccd0QvNp.s:7430   .debug_str:000000000000078c .LASF79
     /tmp/ccd0QvNp.s:7616   .debug_str:0000000000000ddf .LASF80
     /tmp/ccd0QvNp.s:7408   .debug_str:00000000000006f1 .LASF81
     /tmp/ccd0QvNp.s:7528   .debug_str:0000000000000ad5 .LASF82
     /tmp/ccd0QvNp.s:7230   .debug_str:00000000000000d4 .LASF83
     /tmp/ccd0QvNp.s:7580   .debug_str:0000000000000cd2 .LASF84
     /tmp/ccd0QvNp.s:7278   .debug_str:0000000000000266 .LASF85
     /tmp/ccd0QvNp.s:7348   .debug_str:00000000000004a5 .LASF86
     /tmp/ccd0QvNp.s:7444   .debug_str:000000000000080b .LASF87
     /tmp/ccd0QvNp.s:7544   .debug_str:0000000000000b3c .LASF141
     /tmp/ccd0QvNp.s:7360   .debug_str:000000000000053c .LASF88
     /tmp/ccd0QvNp.s:7584   .debug_str:0000000000000ce1 .LASF89
     /tmp/ccd0QvNp.s:7214   .debug_str:0000000000000076 .LASF90
     /tmp/ccd0QvNp.s:7248   .debug_str:0000000000000182 .LASF91
     /tmp/ccd0QvNp.s:7560   .debug_str:0000000000000c5c .LASF92
     /tmp/ccd0QvNp.s:7464   .debug_str:00000000000008e9 .LASF93
     /tmp/ccd0QvNp.s:7302   .debug_str:000000000000034e .LASF94
     /tmp/ccd0QvNp.s:7506   .debug_str:0000000000000a4e .LASF95
     /tmp/ccd0QvNp.s:7624   .debug_str:0000000000000e1a .LASF96
     /tmp/ccd0QvNp.s:7630   .debug_str:0000000000000e39 .LASF224
     /tmp/ccd0QvNp.s:7364   .debug_str:0000000000000570 .LASF225
     /tmp/ccd0QvNp.s:7368   .debug_str:00000000000005ae .LASF97
     /tmp/ccd0QvNp.s:7234   .debug_str:00000000000000fd .LASF98
GAS LISTING /tmp/ccd0QvNp.s 			page 67


     /tmp/ccd0QvNp.s:7490   .debug_str:00000000000009c9 .LASF99
     /tmp/ccd0QvNp.s:7646   .debug_str:0000000000000ec7 .LASF100
     /tmp/ccd0QvNp.s:7582   .debug_str:0000000000000cdc .LASF103
     /tmp/ccd0QvNp.s:7378   .debug_str:0000000000000623 .LASF101
     /tmp/ccd0QvNp.s:7590   .debug_str:0000000000000d27 .LASF105
     /tmp/ccd0QvNp.s:7410   .debug_str:0000000000000715 .LASF106
     /tmp/ccd0QvNp.s:7434   .debug_str:00000000000007a8 .LASF107
     /tmp/ccd0QvNp.s:7456   .debug_str:0000000000000892 .LASF108
     /tmp/ccd0QvNp.s:7322   .debug_str:00000000000003f8 .LASF226
     /tmp/ccd0QvNp.s:7402   .debug_str:000000000000069e .LASF109
     /tmp/ccd0QvNp.s:7200   .debug_str:000000000000002b .LASF110
     /tmp/ccd0QvNp.s:7204   .debug_str:0000000000000047 .LASF111
     /tmp/ccd0QvNp.s:7362   .debug_str:0000000000000558 .LASF112
     /tmp/ccd0QvNp.s:7472   .debug_str:0000000000000941 .LASF113
     /tmp/ccd0QvNp.s:7634   .debug_str:0000000000000e53 .LASF114
     /tmp/ccd0QvNp.s:7394   .debug_str:0000000000000671 .LASF115
     /tmp/ccd0QvNp.s:7598   .debug_str:0000000000000d5b .LASF116
     /tmp/ccd0QvNp.s:7432   .debug_str:000000000000079c .LASF117
     /tmp/ccd0QvNp.s:7372   .debug_str:00000000000005de .LASF118
     /tmp/ccd0QvNp.s:7648   .debug_str:0000000000000ed5 .LASF119
     /tmp/ccd0QvNp.s:7470   .debug_str:0000000000000922 .LASF120
     /tmp/ccd0QvNp.s:7504   .debug_str:0000000000000a43 .LASF121
     /tmp/ccd0QvNp.s:7296   .debug_str:000000000000031d .LASF122
     /tmp/ccd0QvNp.s:7442   .debug_str:0000000000000802 .LASF123
     /tmp/ccd0QvNp.s:7244   .debug_str:0000000000000149 .LASF124
     /tmp/ccd0QvNp.s:7218   .debug_str:0000000000000094 .LASF125
     /tmp/ccd0QvNp.s:7626   .debug_str:0000000000000e2c .LASF126
     /tmp/ccd0QvNp.s:7232   .debug_str:00000000000000f7 .LASF127
     /tmp/ccd0QvNp.s:7224   .debug_str:00000000000000ad .LASF128
     /tmp/ccd0QvNp.s:7398   .debug_str:0000000000000682 .LASF129
     /tmp/ccd0QvNp.s:7532   .debug_str:0000000000000ae9 .LASF130
     /tmp/ccd0QvNp.s:7524   .debug_str:0000000000000ac5 .LASF131
     /tmp/ccd0QvNp.s:7376   .debug_str:0000000000000613 .LASF132
     /tmp/ccd0QvNp.s:7534   .debug_str:0000000000000af1 .LASF133
     /tmp/ccd0QvNp.s:7440   .debug_str:00000000000007e7 .LASF134
     /tmp/ccd0QvNp.s:7222   .debug_str:00000000000000a1 .LASF135
     /tmp/ccd0QvNp.s:7588   .debug_str:0000000000000d0c .LASF136
     /tmp/ccd0QvNp.s:7412   .debug_str:000000000000071a .LASF137
     /tmp/ccd0QvNp.s:7266   .debug_str:0000000000000200 .LASF138
     /tmp/ccd0QvNp.s:7518   .debug_str:0000000000000a9b .LASF139
     /tmp/ccd0QvNp.s:7494   .debug_str:00000000000009e5 .LASF140
     /tmp/ccd0QvNp.s:7426   .debug_str:0000000000000769 .LASF142
     /tmp/ccd0QvNp.s:7384   .debug_str:0000000000000640 .LASF143
     /tmp/ccd0QvNp.s:7196   .debug_str:0000000000000011 .LASF144
     /tmp/ccd0QvNp.s:7628   .debug_str:0000000000000e33 .LASF145
     /tmp/ccd0QvNp.s:7448   .debug_str:0000000000000850 .LASF146
     /tmp/ccd0QvNp.s:7396   .debug_str:0000000000000679 .LASF147
     /tmp/ccd0QvNp.s:7554   .debug_str:0000000000000c26 .LASF148
     /tmp/ccd0QvNp.s:7502   .debug_str:0000000000000a36 .LASF149
     /tmp/ccd0QvNp.s:7280   .debug_str:0000000000000288 .LASF150
     /tmp/ccd0QvNp.s:7540   .debug_str:0000000000000b16 .LASF151
     /tmp/ccd0QvNp.s:7428   .debug_str:000000000000076e .LASF152
     /tmp/ccd0QvNp.s:7546   .debug_str:0000000000000b44 .LASF227
     /tmp/ccd0QvNp.s:7346   .debug_str:000000000000049f .LASF153
     /tmp/ccd0QvNp.s:7356   .debug_str:00000000000004fc .LASF154
     /tmp/ccd0QvNp.s:7250   .debug_str:000000000000018b .LASF155
     /tmp/ccd0QvNp.s:7562   .debug_str:0000000000000c65 .LASF156
GAS LISTING /tmp/ccd0QvNp.s 			page 68


     /tmp/ccd0QvNp.s:7468   .debug_str:0000000000000912 .LASF157
     /tmp/ccd0QvNp.s:7228   .debug_str:00000000000000c4 .LASF158
     /tmp/ccd0QvNp.s:7622   .debug_str:0000000000000e0a .LASF159
     /tmp/ccd0QvNp.s:7522   .debug_str:0000000000000ab4 .LASF160
     /tmp/ccd0QvNp.s:7508   .debug_str:0000000000000a5f .LASF161
     /tmp/ccd0QvNp.s:7194   .debug_str:0000000000000000 .LASF162
     /tmp/ccd0QvNp.s:7318   .debug_str:00000000000003d5 .LASF163
     /tmp/ccd0QvNp.s:7202   .debug_str:0000000000000042 .LASF164
     /tmp/ccd0QvNp.s:7632   .debug_str:0000000000000e4d .LASF165
     /tmp/ccd0QvNp.s:7564   .debug_str:0000000000000c81 .LASF166
     /tmp/ccd0QvNp.s:7558   .debug_str:0000000000000c52 .LASF167
     /tmp/ccd0QvNp.s:7530   .debug_str:0000000000000ae0 .LASF168
     /tmp/ccd0QvNp.s:7608   .debug_str:0000000000000d9a .LASF169
     /tmp/ccd0QvNp.s:7226   .debug_str:00000000000000b6 .LASF170
     /tmp/ccd0QvNp.s:7462   .debug_str:00000000000008cc .LASF171
     /tmp/ccd0QvNp.s:7256   .debug_str:00000000000001b6 .LASF172
     /tmp/ccd0QvNp.s:7358   .debug_str:0000000000000510 .LASF173
     /tmp/ccd0QvNp.s:7268   .debug_str:000000000000021d .LASF174
     /tmp/ccd0QvNp.s:7260   .debug_str:00000000000001cb .LASF175
     /tmp/ccd0QvNp.s:7500   .debug_str:0000000000000a25 .LASF176
     /tmp/ccd0QvNp.s:7552   .debug_str:0000000000000c1d .LASF177
     /tmp/ccd0QvNp.s:7594   .debug_str:0000000000000d4f .LASF178
     /tmp/ccd0QvNp.s:7642   .debug_str:0000000000000eb6 .LASF179
     /tmp/ccd0QvNp.s:7282   .debug_str:00000000000002a4 .LASF180
     /tmp/ccd0QvNp.s:7300   .debug_str:0000000000000343 .LASF181
     /tmp/ccd0QvNp.s:7314   .debug_str:00000000000003a8 .LASF182
     /tmp/ccd0QvNp.s:7270   .debug_str:0000000000000226 .LASF183
     /tmp/ccd0QvNp.s:7568   .debug_str:0000000000000c9e .LASF184
     /tmp/ccd0QvNp.s:7526   .debug_str:0000000000000ace .LASF185
     /tmp/ccd0QvNp.s:7352   .debug_str:00000000000004d1 .LASF186
     /tmp/ccd0QvNp.s:7328   .debug_str:0000000000000427 .LASF187
     /tmp/ccd0QvNp.s:7316   .debug_str:00000000000003bc .LASF188
     /tmp/ccd0QvNp.s:7400   .debug_str:000000000000068a .LASF189
     /tmp/ccd0QvNp.s:7392   .debug_str:000000000000065d .LASF190
     /tmp/ccd0QvNp.s:7334   .debug_str:0000000000000446 .LASF191
     /tmp/ccd0QvNp.s:7536   .debug_str:0000000000000afc .LASF192
     /tmp/ccd0QvNp.s:7326   .debug_str:000000000000041e .LASF193
     /tmp/ccd0QvNp.s:7246   .debug_str:0000000000000167 .LASF194
     /tmp/ccd0QvNp.s:7420   .debug_str:000000000000073b .LASF195
     /tmp/ccd0QvNp.s:7542   .debug_str:0000000000000b25 .LASF196
     /tmp/ccd0QvNp.s:7212   .debug_str:0000000000000070 .LASF197
     /tmp/ccd0QvNp.s:7292   .debug_str:00000000000002f6 .LASF198
     /tmp/ccd0QvNp.s:7446   .debug_str:0000000000000848 .LASF199
     /tmp/ccd0QvNp.s:7210   .debug_str:0000000000000069 .LASF200
     /tmp/ccd0QvNp.s:7306   .debug_str:0000000000000368 .LASF201
     /tmp/ccd0QvNp.s:7538   .debug_str:0000000000000b11 .LASF202
     /tmp/ccd0QvNp.s:7298   .debug_str:000000000000033e .LASF204
     /tmp/ccd0QvNp.s:7340   .debug_str:0000000000000480 .LASF203
     /tmp/ccd0QvNp.s:7288   .debug_str:00000000000002be .LASF213
     /tmp/ccd0QvNp.s:1905   .text:0000000000000510 .LFB56
     /tmp/ccd0QvNp.s:1997   .text:000000000000057c .LFE56
     /tmp/ccd0QvNp.s:7512   .debug_str:0000000000000a88 .LASF205
     /tmp/ccd0QvNp.s:6431   .debug_loc:0000000000000000 .LLST85
     /tmp/ccd0QvNp.s:1917   .text:0000000000000520 .LBB470
     /tmp/ccd0QvNp.s:1933   .text:000000000000052c .LBE470
     /tmp/ccd0QvNp.s:1964   .text:0000000000000564 .LBB472
     /tmp/ccd0QvNp.s:1979   .text:0000000000000570 .LBE472
GAS LISTING /tmp/ccd0QvNp.s 			page 69


     /tmp/ccd0QvNp.s:6446   .debug_loc:0000000000000049 .LLST86
     /tmp/ccd0QvNp.s:1981   .text:0000000000000570 .LBB474
     /tmp/ccd0QvNp.s:1993   .text:0000000000000578 .LBE474
     /tmp/ccd0QvNp.s:6455   .debug_loc:000000000000006f .LLST87
     /tmp/ccd0QvNp.s:1962   .text:0000000000000564 .LVL136
     /tmp/ccd0QvNp.s:46     .text:0000000000000020 .LFB55
     /tmp/ccd0QvNp.s:1899   .text:0000000000000510 .LFE55
     /tmp/ccd0QvNp.s:6463   .debug_loc:0000000000000093 .LLST0
     /tmp/ccd0QvNp.s:7198   .debug_str:0000000000000025 .LASF206
     /tmp/ccd0QvNp.s:6486   .debug_loc:0000000000000102 .LLST1
     /tmp/ccd0QvNp.s:7570   .debug_str:0000000000000cb5 .LASF207
     /tmp/ccd0QvNp.s:6537   .debug_loc:00000000000001f6 .LLST2
     /tmp/ccd0QvNp.s:560    .text:000000000000015c .LBB426
     /tmp/ccd0QvNp.s:631    .text:0000000000000188 .LBE426
     /tmp/ccd0QvNp.s:7604   .debug_str:0000000000000d8b .LASF208
     /tmp/ccd0QvNp.s:6548   .debug_loc:000000000000022c .LLST80
     /tmp/ccd0QvNp.s:7320   .debug_str:00000000000003f0 .LASF209
     /tmp/ccd0QvNp.s:6561   .debug_loc:0000000000000264 .LLST81
     /tmp/ccd0QvNp.s:562    .text:000000000000015c .LBB427
     /tmp/ccd0QvNp.s:578    .text:0000000000000168 .LBE427
     /tmp/ccd0QvNp.s:580    .text:0000000000000168 .LBB429
     /tmp/ccd0QvNp.s:595    .text:0000000000000174 .LBE429
     /tmp/ccd0QvNp.s:603    .text:000000000000017c .LBB431
     /tmp/ccd0QvNp.s:614    .text:0000000000000180 .LBE431
     /tmp/ccd0QvNp.s:6568   .debug_loc:0000000000000287 .LLST82
     /tmp/ccd0QvNp.s:616    .text:0000000000000180 .LBB433
     /tmp/ccd0QvNp.s:630    .text:0000000000000188 .LBE433
     /tmp/ccd0QvNp.s:6575   .debug_loc:00000000000002aa .LLST83
     /tmp/ccd0QvNp.s:642    .text:0000000000000194 .LBB185
     /tmp/ccd0QvNp.s:787    .text:00000000000001fc .LBE185
     /tmp/ccd0QvNp.s:6582   .debug_loc:00000000000002cd .LLST3
     /tmp/ccd0QvNp.s:6589   .debug_loc:00000000000002f0 .LLST4
     /tmp/ccd0QvNp.s:6596   .debug_loc:0000000000000313 .LLST5
     /tmp/ccd0QvNp.s:7572   .debug_str:0000000000000cba .LASF210
     /tmp/ccd0QvNp.s:6603   .debug_loc:0000000000000336 .LLST6
     /tmp/ccd0QvNp.s:7574   .debug_str:0000000000000cbf .LASF211
     /tmp/ccd0QvNp.s:6610   .debug_loc:0000000000000359 .LLST7
     /tmp/ccd0QvNp.s:7576   .debug_str:0000000000000cc4 .LASF212
     /tmp/ccd0QvNp.s:6617   .debug_loc:000000000000037c .LLST8
     /tmp/ccd0QvNp.s:6624   .debug_loc:000000000000039f .LLST9
     /tmp/ccd0QvNp.s:6631   .debug_loc:00000000000003c2 .LLST10
     /tmp/ccd0QvNp.s:644    .text:0000000000000194 .LBB186
     /tmp/ccd0QvNp.s:659    .text:00000000000001a0 .LBE186
     /tmp/ccd0QvNp.s:664    .text:00000000000001a4 .LBB188
     /tmp/ccd0QvNp.s:680    .text:00000000000001b0 .LBE188
     /tmp/ccd0QvNp.s:754    .text:00000000000001e8 .LBB190
     /tmp/ccd0QvNp.s:765    .text:00000000000001ec .LBE190
     /tmp/ccd0QvNp.s:6638   .debug_loc:00000000000003e5 .LLST11
     /tmp/ccd0QvNp.s:767    .text:00000000000001ec .LBB192
     /tmp/ccd0QvNp.s:781    .text:00000000000001f4 .LBE192
     /tmp/ccd0QvNp.s:6645   .debug_loc:0000000000000408 .LLST12
     /tmp/ccd0QvNp.s:734    .text:00000000000001d8 .LVL30
     /tmp/ccd0QvNp.s:790    .text:00000000000001fc .LBB378
     /tmp/ccd0QvNp.s:881    .text:0000000000000238 .LBE378
     /tmp/ccd0QvNp.s:6652   .debug_loc:000000000000042b .LLST75
     /tmp/ccd0QvNp.s:6659   .debug_loc:000000000000044e .LLST76
     /tmp/ccd0QvNp.s:6666   .debug_loc:0000000000000471 .LLST77
GAS LISTING /tmp/ccd0QvNp.s 			page 70


     /tmp/ccd0QvNp.s:792    .text:00000000000001fc .LBB379
     /tmp/ccd0QvNp.s:808    .text:0000000000000208 .LBE379
     /tmp/ccd0QvNp.s:813    .text:000000000000020c .LBB381
     /tmp/ccd0QvNp.s:829    .text:0000000000000218 .LBE381
     /tmp/ccd0QvNp.s:853    .text:000000000000022c .LBB383
     /tmp/ccd0QvNp.s:864    .text:0000000000000230 .LBE383
     /tmp/ccd0QvNp.s:6673   .debug_loc:0000000000000494 .LLST78
     /tmp/ccd0QvNp.s:866    .text:0000000000000230 .LBB385
     /tmp/ccd0QvNp.s:880    .text:0000000000000238 .LBE385
     /tmp/ccd0QvNp.s:6680   .debug_loc:00000000000004b7 .LLST79
     /tmp/ccd0QvNp.s:843    .text:0000000000000228 .LVL41
     /tmp/ccd0QvNp.s:883    .text:0000000000000238 .LBB359
     /tmp/ccd0QvNp.s:972    .text:0000000000000270 .LBE359
     /tmp/ccd0QvNp.s:6687   .debug_loc:00000000000004da .LLST70
     /tmp/ccd0QvNp.s:6694   .debug_loc:00000000000004fd .LLST71
     /tmp/ccd0QvNp.s:6701   .debug_loc:0000000000000520 .LLST72
     /tmp/ccd0QvNp.s:885    .text:0000000000000238 .LBB360
     /tmp/ccd0QvNp.s:901    .text:0000000000000244 .LBE360
     /tmp/ccd0QvNp.s:906    .text:0000000000000248 .LBB362
     /tmp/ccd0QvNp.s:922    .text:0000000000000254 .LBE362
     /tmp/ccd0QvNp.s:944    .text:0000000000000264 .LBB364
     /tmp/ccd0QvNp.s:955    .text:0000000000000268 .LBE364
     /tmp/ccd0QvNp.s:6708   .debug_loc:0000000000000543 .LLST73
     /tmp/ccd0QvNp.s:957    .text:0000000000000268 .LBB366
     /tmp/ccd0QvNp.s:971    .text:0000000000000270 .LBE366
     /tmp/ccd0QvNp.s:6715   .debug_loc:0000000000000566 .LLST74
     /tmp/ccd0QvNp.s:934    .text:0000000000000260 .LVL49
     /tmp/ccd0QvNp.s:974    .text:0000000000000270 .LBB341
     /tmp/ccd0QvNp.s:1054   .text:00000000000002b4 .LBE341
     /tmp/ccd0QvNp.s:6722   .debug_loc:0000000000000589 .LLST66
     /tmp/ccd0QvNp.s:6729   .debug_loc:00000000000005ac .LLST67
     /tmp/ccd0QvNp.s:976    .text:0000000000000270 .LBB342
     /tmp/ccd0QvNp.s:992    .text:000000000000027c .LBE342
     /tmp/ccd0QvNp.s:997    .text:0000000000000280 .LBB344
     /tmp/ccd0QvNp.s:1013   .text:000000000000028c .LBE344
     /tmp/ccd0QvNp.s:1026   .text:00000000000002a8 .LBB346
     /tmp/ccd0QvNp.s:1037   .text:00000000000002ac .LBE346
     /tmp/ccd0QvNp.s:6736   .debug_loc:00000000000005cf .LLST68
     /tmp/ccd0QvNp.s:1039   .text:00000000000002ac .LBB348
     /tmp/ccd0QvNp.s:1053   .text:00000000000002b4 .LBE348
     /tmp/ccd0QvNp.s:6743   .debug_loc:00000000000005f2 .LLST69
     /tmp/ccd0QvNp.s:1024   .text:00000000000002a8 .LVL56
     /tmp/ccd0QvNp.s:1056   .text:00000000000002b4 .LBB324
     /tmp/ccd0QvNp.s:1129   .text:00000000000002e4 .LBE324
     /tmp/ccd0QvNp.s:6750   .debug_loc:0000000000000615 .LLST62
     /tmp/ccd0QvNp.s:6757   .debug_loc:0000000000000638 .LLST63
     /tmp/ccd0QvNp.s:1058   .text:00000000000002b4 .LBB325
     /tmp/ccd0QvNp.s:1074   .text:00000000000002c0 .LBE325
     /tmp/ccd0QvNp.s:1079   .text:00000000000002c4 .LBB327
     /tmp/ccd0QvNp.s:1095   .text:00000000000002d0 .LBE327
     /tmp/ccd0QvNp.s:1101   .text:00000000000002d8 .LBB329
     /tmp/ccd0QvNp.s:1112   .text:00000000000002dc .LBE329
     /tmp/ccd0QvNp.s:6764   .debug_loc:000000000000065b .LLST64
     /tmp/ccd0QvNp.s:1114   .text:00000000000002dc .LBB331
     /tmp/ccd0QvNp.s:1128   .text:00000000000002e4 .LBE331
     /tmp/ccd0QvNp.s:6771   .debug_loc:000000000000067e .LLST65
     /tmp/ccd0QvNp.s:1099   .text:00000000000002d8 .LVL62
GAS LISTING /tmp/ccd0QvNp.s 			page 71


     /tmp/ccd0QvNp.s:1131   .text:00000000000002e4 .LBB308
     /tmp/ccd0QvNp.s:1208   .text:0000000000000320 .LBE308
     /tmp/ccd0QvNp.s:6778   .debug_loc:00000000000006a1 .LLST58
     /tmp/ccd0QvNp.s:6785   .debug_loc:00000000000006c4 .LLST59
     /tmp/ccd0QvNp.s:1133   .text:00000000000002e4 .LBB309
     /tmp/ccd0QvNp.s:1149   .text:00000000000002f0 .LBE309
     /tmp/ccd0QvNp.s:1154   .text:00000000000002f4 .LBB311
     /tmp/ccd0QvNp.s:1170   .text:0000000000000300 .LBE311
     /tmp/ccd0QvNp.s:1180   .text:0000000000000314 .LBB313
     /tmp/ccd0QvNp.s:1191   .text:0000000000000318 .LBE313
     /tmp/ccd0QvNp.s:6792   .debug_loc:00000000000006e7 .LLST60
     /tmp/ccd0QvNp.s:1193   .text:0000000000000318 .LBB315
     /tmp/ccd0QvNp.s:1207   .text:0000000000000320 .LBE315
     /tmp/ccd0QvNp.s:6799   .debug_loc:000000000000070a .LLST61
     /tmp/ccd0QvNp.s:1178   .text:0000000000000314 .LVL68
     /tmp/ccd0QvNp.s:1210   .text:0000000000000320 .LBB287
     /tmp/ccd0QvNp.s:1361   .text:0000000000000390 .LBE287
     /tmp/ccd0QvNp.s:6806   .debug_loc:000000000000072d .LLST46
     /tmp/ccd0QvNp.s:6813   .debug_loc:0000000000000750 .LLST47
     /tmp/ccd0QvNp.s:6820   .debug_loc:0000000000000773 .LLST48
     /tmp/ccd0QvNp.s:6827   .debug_loc:0000000000000796 .LLST49
     /tmp/ccd0QvNp.s:6834   .debug_loc:00000000000007b9 .LLST50
     /tmp/ccd0QvNp.s:6841   .debug_loc:00000000000007dc .LLST51
     /tmp/ccd0QvNp.s:1212   .text:0000000000000320 .LBB288
     /tmp/ccd0QvNp.s:1228   .text:000000000000032c .LBE288
     /tmp/ccd0QvNp.s:1233   .text:0000000000000330 .LBB290
     /tmp/ccd0QvNp.s:1249   .text:000000000000033c .LBE290
     /tmp/ccd0QvNp.s:1281   .text:0000000000000358 .LBB292
     /tmp/ccd0QvNp.s:1297   .text:0000000000000364 .LBE292
     /tmp/ccd0QvNp.s:6858   .debug_loc:0000000000000827 .LLST52
     /tmp/ccd0QvNp.s:6865   .debug_loc:000000000000084a .LLST53
     /tmp/ccd0QvNp.s:1287   .text:000000000000035c .LBB294
     /tmp/ccd0QvNp.s:1295   .text:0000000000000364 .LBE294
     /tmp/ccd0QvNp.s:6872   .debug_loc:000000000000086d .LLST54
     /tmp/ccd0QvNp.s:1299   .text:0000000000000364 .LBB296
     /tmp/ccd0QvNp.s:1307   .text:000000000000036c .LBE296
     /tmp/ccd0QvNp.s:6881   .debug_loc:0000000000000892 .LLST55
     /tmp/ccd0QvNp.s:1328   .text:000000000000037c .LBB298
     /tmp/ccd0QvNp.s:1339   .text:0000000000000380 .LBE298
     /tmp/ccd0QvNp.s:6888   .debug_loc:00000000000008b5 .LLST56
     /tmp/ccd0QvNp.s:1341   .text:0000000000000380 .LBB300
     /tmp/ccd0QvNp.s:1355   .text:0000000000000388 .LBE300
     /tmp/ccd0QvNp.s:6895   .debug_loc:00000000000008d8 .LLST57
     /tmp/ccd0QvNp.s:1280   .text:0000000000000358 .LVL76
     /tmp/ccd0QvNp.s:1363   .text:0000000000000390 .LBB261
     /tmp/ccd0QvNp.s:1535   .text:0000000000000428 .LBE261
     /tmp/ccd0QvNp.s:6902   .debug_loc:00000000000008fb .LLST33
     /tmp/ccd0QvNp.s:6909   .debug_loc:000000000000091e .LLST34
     /tmp/ccd0QvNp.s:6916   .debug_loc:0000000000000941 .LLST35
     /tmp/ccd0QvNp.s:7178   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccd0QvNp.s:6923   .debug_loc:0000000000000964 .LLST37
     /tmp/ccd0QvNp.s:1421   .text:00000000000003b8 .LBB267
     /tmp/ccd0QvNp.s:6930   .debug_loc:0000000000000987 .LLST38
     /tmp/ccd0QvNp.s:6945   .debug_loc:00000000000009c1 .LLST39
     /tmp/ccd0QvNp.s:6956   .debug_loc:00000000000009f7 .LLST40
     /tmp/ccd0QvNp.s:1428   .text:00000000000003c4 .LVL91
     /tmp/ccd0QvNp.s:1432   .text:00000000000003c4 .LBB270
GAS LISTING /tmp/ccd0QvNp.s 			page 72


     /tmp/ccd0QvNp.s:1441   .text:00000000000003cc .LBE270
     /tmp/ccd0QvNp.s:6963   .debug_loc:0000000000000a1a .LLST41
     /tmp/ccd0QvNp.s:1452   .text:00000000000003e4 .LVL93
     /tmp/ccd0QvNp.s:1365   .text:0000000000000390 .LBB262
     /tmp/ccd0QvNp.s:1380   .text:000000000000039c .LBE262
     /tmp/ccd0QvNp.s:1385   .text:00000000000003a0 .LBB264
     /tmp/ccd0QvNp.s:1401   .text:00000000000003ac .LBE264
     /tmp/ccd0QvNp.s:1457   .text:00000000000003e4 .LBB273
     /tmp/ccd0QvNp.s:1467   .text:00000000000003f0 .LBE273
     /tmp/ccd0QvNp.s:6970   .debug_loc:0000000000000a3d .LLST42
     /tmp/ccd0QvNp.s:1490   .text:0000000000000408 .LBB276
     /tmp/ccd0QvNp.s:1497   .text:000000000000040c .LBE276
     /tmp/ccd0QvNp.s:6979   .debug_loc:0000000000000a62 .LLST43
     /tmp/ccd0QvNp.s:1507   .text:000000000000041c .LBB278
     /tmp/ccd0QvNp.s:1518   .text:0000000000000420 .LBE278
     /tmp/ccd0QvNp.s:6986   .debug_loc:0000000000000a85 .LLST44
     /tmp/ccd0QvNp.s:1520   .text:0000000000000420 .LBB280
     /tmp/ccd0QvNp.s:1534   .text:0000000000000428 .LBE280
     /tmp/ccd0QvNp.s:6993   .debug_loc:0000000000000aa8 .LLST45
     /tmp/ccd0QvNp.s:1504   .text:000000000000041c .LVL98
     /tmp/ccd0QvNp.s:1537   .text:0000000000000428 .LBB246
     /tmp/ccd0QvNp.s:1651   .text:0000000000000474 .LBE246
     /tmp/ccd0QvNp.s:7000   .debug_loc:0000000000000acb .LLST26
     /tmp/ccd0QvNp.s:7007   .debug_loc:0000000000000aee .LLST27
     /tmp/ccd0QvNp.s:7014   .debug_loc:0000000000000b11 .LLST28
     /tmp/ccd0QvNp.s:7025   .debug_loc:0000000000000b47 .LLST29
     /tmp/ccd0QvNp.s:1539   .text:0000000000000428 .LBB247
     /tmp/ccd0QvNp.s:1555   .text:0000000000000434 .LBE247
     /tmp/ccd0QvNp.s:1560   .text:0000000000000438 .LBB249
     /tmp/ccd0QvNp.s:1576   .text:0000000000000444 .LBE249
     /tmp/ccd0QvNp.s:1593   .text:000000000000044c .LBB251
     /tmp/ccd0QvNp.s:1600   .text:0000000000000450 .LBE251
     /tmp/ccd0QvNp.s:7036   .debug_loc:0000000000000b7d .LLST30
     /tmp/ccd0QvNp.s:1616   .text:000000000000045c .LBB253
     /tmp/ccd0QvNp.s:1627   .text:0000000000000460 .LBE253
     /tmp/ccd0QvNp.s:7043   .debug_loc:0000000000000ba0 .LLST31
     /tmp/ccd0QvNp.s:1629   .text:0000000000000460 .LBB255
     /tmp/ccd0QvNp.s:1643   .text:0000000000000468 .LBE255
     /tmp/ccd0QvNp.s:7050   .debug_loc:0000000000000bc3 .LLST32
     /tmp/ccd0QvNp.s:1647   .text:0000000000000470 .LVL110
     /tmp/ccd0QvNp.s:1653   .text:0000000000000474 .LBB232
     /tmp/ccd0QvNp.s:1770   .text:00000000000004c4 .LBE232
     /tmp/ccd0QvNp.s:7057   .debug_loc:0000000000000be6 .LLST19
     /tmp/ccd0QvNp.s:7064   .debug_loc:0000000000000c09 .LLST20
     /tmp/ccd0QvNp.s:7071   .debug_loc:0000000000000c2c .LLST21
     /tmp/ccd0QvNp.s:7082   .debug_loc:0000000000000c62 .LLST22
     /tmp/ccd0QvNp.s:1655   .text:0000000000000474 .LBB233
     /tmp/ccd0QvNp.s:1671   .text:0000000000000480 .LBE233
     /tmp/ccd0QvNp.s:1676   .text:0000000000000484 .LBB235
     /tmp/ccd0QvNp.s:1692   .text:0000000000000490 .LBE235
     /tmp/ccd0QvNp.s:1709   .text:0000000000000498 .LBB237
     /tmp/ccd0QvNp.s:1716   .text:000000000000049c .LBE237
     /tmp/ccd0QvNp.s:7094   .debug_loc:0000000000000c99 .LLST23
     /tmp/ccd0QvNp.s:1732   .text:00000000000004a8 .LBB239
     /tmp/ccd0QvNp.s:1743   .text:00000000000004ac .LBE239
     /tmp/ccd0QvNp.s:7101   .debug_loc:0000000000000cbc .LLST24
     /tmp/ccd0QvNp.s:1745   .text:00000000000004ac .LBB241
GAS LISTING /tmp/ccd0QvNp.s 			page 73


     /tmp/ccd0QvNp.s:1759   .text:00000000000004b4 .LBE241
     /tmp/ccd0QvNp.s:7108   .debug_loc:0000000000000cdf .LLST25
     /tmp/ccd0QvNp.s:1763   .text:00000000000004bc .LVL121
     /tmp/ccd0QvNp.s:1772   .text:00000000000004c4 .LBB218
     /tmp/ccd0QvNp.s:1883   .text:0000000000000510 .LBE218
     /tmp/ccd0QvNp.s:1774   .text:00000000000004c4 .LBB219
     /tmp/ccd0QvNp.s:1790   .text:00000000000004d0 .LBE219
     /tmp/ccd0QvNp.s:1795   .text:00000000000004d4 .LBB221
     /tmp/ccd0QvNp.s:1811   .text:00000000000004e0 .LBE221
     /tmp/ccd0QvNp.s:1816   .text:00000000000004e8 .LBB223
     /tmp/ccd0QvNp.s:1827   .text:00000000000004ec .LBE223
     /tmp/ccd0QvNp.s:1836   .text:00000000000004fc .LBB225
     /tmp/ccd0QvNp.s:1847   .text:0000000000000500 .LBE225
     /tmp/ccd0QvNp.s:1857   .text:0000000000000504 .LBB227
     /tmp/ccd0QvNp.s:1868   .text:0000000000000508 .LBE227
     /tmp/ccd0QvNp.s:7115   .debug_loc:0000000000000d02 .LLST18
     /tmp/ccd0QvNp.s:1870   .text:0000000000000508 .LBB229
     /tmp/ccd0QvNp.s:1882   .text:0000000000000510 .LBE229
     /tmp/ccd0QvNp.s:1831   .text:00000000000004f4 .LVL128
     /tmp/ccd0QvNp.s:383    .text:00000000000000e0 .LBB205
     /tmp/ccd0QvNp.s:500    .text:0000000000000130 .LBE205
     /tmp/ccd0QvNp.s:7122   .debug_loc:0000000000000d25 .LLST13
     /tmp/ccd0QvNp.s:7129   .debug_loc:0000000000000d48 .LLST14
     /tmp/ccd0QvNp.s:7136   .debug_loc:0000000000000d6b .LLST15
     /tmp/ccd0QvNp.s:385    .text:00000000000000e0 .LBB206
     /tmp/ccd0QvNp.s:401    .text:00000000000000ec .LBE206
     /tmp/ccd0QvNp.s:406    .text:00000000000000f0 .LBB208
     /tmp/ccd0QvNp.s:422    .text:00000000000000fc .LBE208
     /tmp/ccd0QvNp.s:442    .text:0000000000000110 .LBB210
     /tmp/ccd0QvNp.s:453    .text:0000000000000114 .LBE210
     /tmp/ccd0QvNp.s:462    .text:0000000000000124 .LBB212
     /tmp/ccd0QvNp.s:473    .text:0000000000000128 .LBE212
     /tmp/ccd0QvNp.s:475    .text:0000000000000128 .LBB214
     /tmp/ccd0QvNp.s:486    .text:000000000000012c .LBE214
     /tmp/ccd0QvNp.s:7143   .debug_loc:0000000000000d8e .LLST16
     /tmp/ccd0QvNp.s:488    .text:000000000000012c .LBB216
     /tmp/ccd0QvNp.s:499    .text:0000000000000130 .LBE216
     /tmp/ccd0QvNp.s:7150   .debug_loc:0000000000000db1 .LLST17
     /tmp/ccd0QvNp.s:457    .text:000000000000011c .LVL9
     /tmp/ccd0QvNp.s:66     .text:0000000000000040 .LBB178
     /tmp/ccd0QvNp.s:83     .text:000000000000004c .LBE178
     /tmp/ccd0QvNp.s:522    .text:0000000000000134 .LBB450
     /tmp/ccd0QvNp.s:535    .text:000000000000013c .LBE450
     /tmp/ccd0QvNp.s:7157   .debug_loc:0000000000000dd4 .LLST84
     /tmp/ccd0QvNp.s:636    .text:0000000000000190 .LVL22
     /tmp/ccd0QvNp.s:10     .text:0000000000000000 .LFB54
     /tmp/ccd0QvNp.s:40     .text:0000000000000020 .LFE54
     /tmp/ccd0QvNp.s:7220   .debug_str:000000000000009c .LASF215
     /tmp/ccd0QvNp.s:7450   .debug_str:0000000000000864 .LASF214
     /tmp/ccd0QvNp.s:7592   .debug_str:0000000000000d4a .LASF216
     /tmp/ccd0QvNp.s:7390   .debug_str:0000000000000657 .LASF217
     /tmp/ccd0QvNp.s:7308   .debug_str:000000000000036e .LASF218
     /tmp/ccd0QvNp.s:7330   .debug_str:000000000000042d .LASF219
     /tmp/ccd0QvNp.s:7258   .debug_str:00000000000001c4 .LASF220
     /tmp/ccd0QvNp.s:1931   .text:000000000000052c .LVL133
     /tmp/ccd0QvNp.s:1944   .text:000000000000054c .LVL134
     /tmp/ccd0QvNp.s:1956   .text:000000000000055c .LVL135
GAS LISTING /tmp/ccd0QvNp.s 			page 74


     /tmp/ccd0QvNp.s:1976   .text:0000000000000570 .LVL137
     /tmp/ccd0QvNp.s:1990   .text:0000000000000578 .LVL138
     /tmp/ccd0QvNp.s:81     .text:000000000000004c .LVL0
     /tmp/ccd0QvNp.s:138    .text:0000000000000088 .LVL2
     /tmp/ccd0QvNp.s:518    .text:0000000000000134 .LVL14
     /tmp/ccd0QvNp.s:531    .text:000000000000013c .LVL15
     /tmp/ccd0QvNp.s:555    .text:000000000000015c .LVL16
     /tmp/ccd0QvNp.s:576    .text:0000000000000168 .LVL17
     /tmp/ccd0QvNp.s:627    .text:0000000000000188 .LVL21
     /tmp/ccd0QvNp.s:638    .text:0000000000000194 .LVL23
     /tmp/ccd0QvNp.s:92     .text:0000000000000050 .LVL1
     /tmp/ccd0QvNp.s:399    .text:00000000000000ec .LVL3
     /tmp/ccd0QvNp.s:806    .text:0000000000000208 .LVL36
     /tmp/ccd0QvNp.s:877    .text:0000000000000238 .LVL44
     /tmp/ccd0QvNp.s:899    .text:0000000000000244 .LVL45
     /tmp/ccd0QvNp.s:968    .text:0000000000000270 .LVL52
     /tmp/ccd0QvNp.s:990    .text:000000000000027c .LVL53
     /tmp/ccd0QvNp.s:1050   .text:00000000000002b4 .LVL58
     /tmp/ccd0QvNp.s:1072   .text:00000000000002c0 .LVL59
     /tmp/ccd0QvNp.s:1125   .text:00000000000002e4 .LVL64
     /tmp/ccd0QvNp.s:1147   .text:00000000000002f0 .LVL65
     /tmp/ccd0QvNp.s:1204   .text:0000000000000320 .LVL70
     /tmp/ccd0QvNp.s:1226   .text:000000000000032c .LVL71
     /tmp/ccd0QvNp.s:1359   .text:0000000000000390 .LVL85
     /tmp/ccd0QvNp.s:1414   .text:00000000000003b4 .LVL88
     /tmp/ccd0QvNp.s:1531   .text:0000000000000428 .LVL100
     /tmp/ccd0QvNp.s:1553   .text:0000000000000434 .LVL101
     /tmp/ccd0QvNp.s:1649   .text:0000000000000474 .LVL111
     /tmp/ccd0QvNp.s:1669   .text:0000000000000480 .LVL112
     /tmp/ccd0QvNp.s:1768   .text:00000000000004c4 .LVL122
     /tmp/ccd0QvNp.s:1788   .text:00000000000004d0 .LVL123
     /tmp/ccd0QvNp.s:836    .text:000000000000021c .LVL39
     /tmp/ccd0QvNp.s:841    .text:0000000000000220 .LVL40
     /tmp/ccd0QvNp.s:929    .text:0000000000000258 .LVL48
     /tmp/ccd0QvNp.s:602    .text:000000000000017c .LVL19
     /tmp/ccd0QvNp.s:598    .text:0000000000000178 .LVL18
     /tmp/ccd0QvNp.s:611    .text:0000000000000180 .LVL20
     /tmp/ccd0QvNp.s:662    .text:00000000000001a4 .LVL24
     /tmp/ccd0QvNp.s:785    .text:00000000000001fc .LVL35
     /tmp/ccd0QvNp.s:678    .text:00000000000001b0 .LVL25
     /tmp/ccd0QvNp.s:711    .text:00000000000001c4 .LVL26
     /tmp/ccd0QvNp.s:717    .text:00000000000001c8 .LVL27
     /tmp/ccd0QvNp.s:723    .text:00000000000001cc .LVL28
     /tmp/ccd0QvNp.s:729    .text:00000000000001d0 .LVL29
     /tmp/ccd0QvNp.s:744    .text:00000000000001e4 .LVL31
     /tmp/ccd0QvNp.s:778    .text:00000000000001f4 .LVL34
     /tmp/ccd0QvNp.s:752    .text:00000000000001e8 .LVL32
     /tmp/ccd0QvNp.s:762    .text:00000000000001ec .LVL33
     /tmp/ccd0QvNp.s:811    .text:000000000000020c .LVL37
     /tmp/ccd0QvNp.s:827    .text:0000000000000218 .LVL38
     /tmp/ccd0QvNp.s:851    .text:000000000000022c .LVL42
     /tmp/ccd0QvNp.s:861    .text:0000000000000230 .LVL43
     /tmp/ccd0QvNp.s:904    .text:0000000000000248 .LVL46
     /tmp/ccd0QvNp.s:920    .text:0000000000000254 .LVL47
     /tmp/ccd0QvNp.s:942    .text:0000000000000264 .LVL50
     /tmp/ccd0QvNp.s:952    .text:0000000000000268 .LVL51
     /tmp/ccd0QvNp.s:995    .text:0000000000000280 .LVL54
GAS LISTING /tmp/ccd0QvNp.s 			page 75


     /tmp/ccd0QvNp.s:1011   .text:000000000000028c .LVL55
     /tmp/ccd0QvNp.s:1034   .text:00000000000002ac .LVL57
     /tmp/ccd0QvNp.s:1077   .text:00000000000002c4 .LVL60
     /tmp/ccd0QvNp.s:1093   .text:00000000000002d0 .LVL61
     /tmp/ccd0QvNp.s:1109   .text:00000000000002dc .LVL63
     /tmp/ccd0QvNp.s:1152   .text:00000000000002f4 .LVL66
     /tmp/ccd0QvNp.s:1168   .text:0000000000000300 .LVL67
     /tmp/ccd0QvNp.s:1188   .text:0000000000000318 .LVL69
     /tmp/ccd0QvNp.s:1231   .text:0000000000000330 .LVL72
     /tmp/ccd0QvNp.s:1247   .text:000000000000033c .LVL73
     /tmp/ccd0QvNp.s:1268   .text:0000000000000348 .LVL74
     /tmp/ccd0QvNp.s:1274   .text:000000000000034c .LVL75
     /tmp/ccd0QvNp.s:1293   .text:0000000000000364 .LVL78
     /tmp/ccd0QvNp.s:1312   .text:0000000000000370 .LVL80
     /tmp/ccd0QvNp.s:1318   .text:0000000000000378 .LVL81
     /tmp/ccd0QvNp.s:1352   .text:0000000000000388 .LVL84
     /tmp/ccd0QvNp.s:1286   .text:000000000000035c .LVL77
     /tmp/ccd0QvNp.s:1305   .text:000000000000036c .LVL79
     /tmp/ccd0QvNp.s:1326   .text:000000000000037c .LVL82
     /tmp/ccd0QvNp.s:1336   .text:0000000000000380 .LVL83
     /tmp/ccd0QvNp.s:1383   .text:00000000000003a0 .LVL86
     /tmp/ccd0QvNp.s:1399   .text:00000000000003ac .LVL87
     /tmp/ccd0QvNp.s:1418   .text:00000000000003b8 .LVL89
     /tmp/ccd0QvNp.s:1472   .text:00000000000003f4 .LVL95
     /tmp/ccd0QvNp.s:1484   .text:0000000000000408 .LVL96
     /tmp/ccd0QvNp.s:1425   .text:00000000000003bc .LVL90
     /tmp/ccd0QvNp.s:1439   .text:00000000000003cc .LVL92
     /tmp/ccd0QvNp.s:1465   .text:00000000000003f0 .LVL94
     /tmp/ccd0QvNp.s:1495   .text:000000000000040c .LVL97
     /tmp/ccd0QvNp.s:1515   .text:0000000000000420 .LVL99
     /tmp/ccd0QvNp.s:1558   .text:0000000000000438 .LVL102
     /tmp/ccd0QvNp.s:1574   .text:0000000000000444 .LVL103
     /tmp/ccd0QvNp.s:1589   .text:000000000000044c .LVL104
     /tmp/ccd0QvNp.s:1605   .text:0000000000000458 .LVL106
     /tmp/ccd0QvNp.s:1640   .text:0000000000000468 .LVL109
     /tmp/ccd0QvNp.s:1598   .text:0000000000000450 .LVL105
     /tmp/ccd0QvNp.s:1614   .text:000000000000045c .LVL107
     /tmp/ccd0QvNp.s:1624   .text:0000000000000460 .LVL108
     /tmp/ccd0QvNp.s:1674   .text:0000000000000484 .LVL113
     /tmp/ccd0QvNp.s:1690   .text:0000000000000490 .LVL114
     /tmp/ccd0QvNp.s:1705   .text:0000000000000498 .LVL115
     /tmp/ccd0QvNp.s:1721   .text:00000000000004a4 .LVL117
     /tmp/ccd0QvNp.s:1756   .text:00000000000004b4 .LVL120
     /tmp/ccd0QvNp.s:1714   .text:000000000000049c .LVL116
     /tmp/ccd0QvNp.s:1730   .text:00000000000004a8 .LVL118
     /tmp/ccd0QvNp.s:1740   .text:00000000000004ac .LVL119
     /tmp/ccd0QvNp.s:1855   .text:0000000000000504 .LVL131
     /tmp/ccd0QvNp.s:1865   .text:0000000000000508 .LVL132
     /tmp/ccd0QvNp.s:404    .text:00000000000000f0 .LVL4
     /tmp/ccd0QvNp.s:420    .text:00000000000000fc .LVL5
     /tmp/ccd0QvNp.s:437    .text:0000000000000108 .LVL6
     /tmp/ccd0QvNp.s:470    .text:0000000000000128 .LVL11
     /tmp/ccd0QvNp.s:483    .text:000000000000012c .LVL12
     /tmp/ccd0QvNp.s:496    .text:0000000000000130 .LVL13
     /tmp/ccd0QvNp.s:2006   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccd0QvNp.s:1420   .text:00000000000003b8 .LBB266
     /tmp/ccd0QvNp.s:1454   .text:00000000000003e4 .LBE266
GAS LISTING /tmp/ccd0QvNp.s 			page 76


     /tmp/ccd0QvNp.s:1470   .text:00000000000003f4 .LBB275
     /tmp/ccd0QvNp.s:1488   .text:0000000000000408 .LBE275
     /tmp/ccd0QvNp.s:1430   .text:00000000000003c4 .LBE267
     /tmp/ccd0QvNp.s:1473   .text:00000000000003f4 .LBB272
     /tmp/ccd0QvNp.s:1487   .text:0000000000000408 .LBE272

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
