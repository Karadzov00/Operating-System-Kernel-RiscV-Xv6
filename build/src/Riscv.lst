GAS LISTING /tmp/ccJAxMsJ.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/ccJAxMsJ.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint64 scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB176:
  67              	.LBB177:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccJAxMsJ.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
GAS LISTING /tmp/ccJAxMsJ.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 99 5
  71              		.loc 2 99 72 is_stmt 0
  72              	#APP
  73              	# 99 "src/../h/Riscv.hpp" 1
 100              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2330F4F0 		sd	a5,-256(s0)
  78              		.loc 2 100 5 is_stmt 1
  79              		.loc 2 100 12 is_stmt 0
  80 0048 033704F0 		ld	a4,-256(s0)
  81              	.LVL0:
  82              	.LBE177:
  83              	.LBE176:
  22:src/Riscv.cpp ****     uint64 a0reg;
  84              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  85              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  86              		.loc 1 24 5
  87              		.loc 1 24 49 is_stmt 0
  88              	#APP
  89              	# 24 "src/Riscv.cpp" 1
  25              	
  90              		mv s1, a0
  91              	# 0 "" 2
  92              	.LVL1:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  93              		.loc 1 27 5 is_stmt 1
  94              	#NO_APP
  95              	.LBB178:
  96 0050 9307F0FF 		li	a5,-1
  97 0054 9397F703 		slli	a5,a5,63
  98 0058 93871700 		addi	a5,a5,1
  99 005c 630CF70C 		beq	a4,a5,.L32
 100              	.LBE178:
  28:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  29:src/Riscv.cpp ****     }
  30:src/Riscv.cpp ****     else if(scause == 0x0000000000000009UL){
 101              		.loc 1 30 10
GAS LISTING /tmp/ccJAxMsJ.s 			page 5


 102              	.LBB449:
 103              	.LBB179:
 104 0060 93079000 		li	a5,9
 105 0064 630CF70E 		beq	a4,a5,.L33
 106              	.LBE179:
 107              	.LBE449:
  31:src/Riscv.cpp ****         uint64 sepc = r_sepc();
  32:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
  33:src/Riscv.cpp ****         w_sepc(sepc + 4);
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp ****     }
  36:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
 108              		.loc 1 36 10
 109              	.LBB450:
 110              	.LBB432:
 111              	.LBB180:
 112 0068 9307F0FF 		li	a5,-1
 113 006c 9397F703 		slli	a5,a5,63
 114 0070 93879700 		addi	a5,a5,9
 115 0074 6304F710 		beq	a4,a5,.L34
 116              	.LBE180:
 117              	.LBE432:
 118              	.LBE450:
  37:src/Riscv.cpp ****         console_handler();
  38:src/Riscv.cpp ****     }
  39:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL){
 119              		.loc 1 39 10
 120              	.LBB451:
 121              	.LBB433:
 122              	.LBB411:
 123              	.LBB181:
 124 0078 93078000 		li	a5,8
 125 007c 6310F70C 		bne	a4,a5,.L3
 126              	.LBE181:
 127              	.LBE411:
 128              	.LBE433:
 129              	.LBE451:
  40:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  41:src/Riscv.cpp **** 
  42:src/Riscv.cpp ****         //call from yield
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp ****         if(a0reg==0x11){
 130              		.loc 1 44 9
 131              	.LBB452:
 132              	.LBB434:
 133              	.LBB412:
 134              	.LBB398:
 135              	.LBB182:
 136 0080 93071001 		li	a5,17
 137 0084 6382F410 		beq	s1,a5,.L35
 138              	.LVL2:
 139              	.L8:
 140              	.LBE182:
 141              	.LBE398:
 142              	.LBE412:
 143              	.LBE434:
 144              	.LBE452:
GAS LISTING /tmp/ccJAxMsJ.s 			page 6


  45:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  46:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp ****             _thread::thread_t *arg1;
  50:src/Riscv.cpp ****             _thread::Body arg2;
  51:src/Riscv.cpp ****             uint64 arg3;
  52:src/Riscv.cpp ****             uint64 *arg4;
  53:src/Riscv.cpp **** 
  54:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  55:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  56:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  57:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  58:src/Riscv.cpp **** 
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  66:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  67:src/Riscv.cpp ****             *arg1=t;
  68:src/Riscv.cpp **** 
  69:src/Riscv.cpp ****             uint64 ret;
  70:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  71:src/Riscv.cpp ****             else ret =-1;
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             //return _thread* adress through a0
  75:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****             w_sstatus(sstatus);
  78:src/Riscv.cpp ****             w_sepc(sepc);
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         if(a0reg== 0x01 ){
 145              		.loc 1 80 9
 146              	.LBB453:
 147              	.LBB435:
 148              	.LBB413:
 149              	.LBB399:
 150              	.LBB192:
 151 0088 93071000 		li	a5,1
 152 008c 6382F416 		beq	s1,a5,.L36
 153              	.LBE192:
 154              	.LBE399:
 155              	.LBE413:
 156              	.LBE435:
 157              	.LBE453:
  81:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  82:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  83:src/Riscv.cpp ****             //kmem_alloc
  84:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  85:src/Riscv.cpp **** 
  86:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  87:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  88:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJAxMsJ.s 			page 7


  89:src/Riscv.cpp ****             //write return value to a0 register
  90:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  91:src/Riscv.cpp **** 
  92:src/Riscv.cpp ****             w_sstatus(sstatus);
  93:src/Riscv.cpp ****             w_sepc(sepc);
  94:src/Riscv.cpp ****         }
  95:src/Riscv.cpp ****         else if(a0reg==0x02){
 158              		.loc 1 95 14
 159              	.LBB454:
 160              	.LBB436:
 161              	.LBB414:
 162              	.LBB400:
 163              	.LBB386:
 164              	.LBB193:
 165 0090 93072000 		li	a5,2
 166 0094 638EF418 		beq	s1,a5,.L37
 167              	.LBE193:
 168              	.LBE386:
 169              	.LBE400:
 170              	.LBE414:
 171              	.LBE436:
 172              	.LBE454:
  96:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  97:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 102:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 103:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 104:src/Riscv.cpp **** 
 105:src/Riscv.cpp ****             w_sstatus(sstatus);
 106:src/Riscv.cpp ****             w_sepc(sepc);
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****         else if(a0reg==0x12){
 173              		.loc 1 109 14
 174              	.LBB455:
 175              	.LBB437:
 176              	.LBB415:
 177              	.LBB401:
 178              	.LBB387:
 179              	.LBB367:
 180              	.LBB194:
 181 0098 93072001 		li	a5,18
 182 009c 6388F41C 		beq	s1,a5,.L38
 183              	.LBE194:
 184              	.LBE367:
 185              	.LBE387:
 186              	.LBE401:
 187              	.LBE415:
 188              	.LBE437:
 189              	.LBE455:
 110:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 111:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp ****             _thread::running->finished=true;
GAS LISTING /tmp/ccJAxMsJ.s 			page 8


 114:src/Riscv.cpp ****             _thread::dispatch();
 115:src/Riscv.cpp **** 
 116:src/Riscv.cpp ****             w_sstatus(sstatus);
 117:src/Riscv.cpp ****             w_sepc(sepc);
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp **** 
 120:src/Riscv.cpp ****         }
 121:src/Riscv.cpp ****         else if(a0reg == 0x13){
 190              		.loc 1 121 14
 191              	.LBB456:
 192              	.LBB438:
 193              	.LBB416:
 194              	.LBB402:
 195              	.LBB388:
 196              	.LBB368:
 197              	.LBB349:
 198              	.LBB195:
 199 00a0 93073001 		li	a5,19
 200 00a4 6386F420 		beq	s1,a5,.L39
 201              	.LBE195:
 202              	.LBE349:
 203              	.LBE368:
 204              	.LBE388:
 205              	.LBE402:
 206              	.LBE416:
 207              	.LBE438:
 208              	.LBE456:
 122:src/Riscv.cpp ****             //thread dispatch
 123:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 124:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 125:src/Riscv.cpp **** 
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****             _thread::dispatch();
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****             w_sstatus(sstatus);
 130:src/Riscv.cpp ****             w_sepc(sepc);
 131:src/Riscv.cpp ****         }
 132:src/Riscv.cpp **** 
 133:src/Riscv.cpp ****         else if(a0reg==0x04){
 209              		.loc 1 133 14
 210              	.LBB457:
 211              	.LBB439:
 212              	.LBB417:
 213              	.LBB403:
 214              	.LBB389:
 215              	.LBB369:
 216              	.LBB350:
 217              	.LBB332:
 218              	.LBB196:
 219 00a8 93074000 		li	a5,4
 220 00ac 638AF422 		beq	s1,a5,.L40
 221              	.LBE196:
 222              	.LBE332:
 223              	.LBE350:
 224              	.LBE369:
 225              	.LBE389:
 226              	.LBE403:
GAS LISTING /tmp/ccJAxMsJ.s 			page 9


 227              	.LBE417:
 228              	.LBE439:
 229              	.LBE457:
 134:src/Riscv.cpp ****             //call from yield
 135:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 136:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 137:src/Riscv.cpp **** 
 138:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 139:src/Riscv.cpp ****             _thread::dispatch();
 140:src/Riscv.cpp **** 
 141:src/Riscv.cpp ****             w_sstatus(sstatus);
 142:src/Riscv.cpp ****             w_sepc(sepc);
 143:src/Riscv.cpp ****         }
 144:src/Riscv.cpp ****         else if(a0reg==0x21){
 230              		.loc 1 144 14
 231              	.LBB458:
 232              	.LBB440:
 233              	.LBB418:
 234              	.LBB404:
 235              	.LBB390:
 236              	.LBB370:
 237              	.LBB351:
 238              	.LBB333:
 239              	.LBB316:
 240              	.LBB197:
 241 00b0 93071002 		li	a5,33
 242 00b4 6384F426 		beq	s1,a5,.L41
 243              	.LBE197:
 244              	.LBE316:
 245              	.LBE333:
 246              	.LBE351:
 247              	.LBE370:
 248              	.LBE390:
 249              	.LBE404:
 250              	.LBE418:
 251              	.LBE440:
 252              	.LBE458:
 145:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 146:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 149:src/Riscv.cpp ****            uint64 arg2;
 150:src/Riscv.cpp **** 
 151:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 152:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 155:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 156:src/Riscv.cpp **** 
 157:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 158:src/Riscv.cpp ****             sem->open();
 159:src/Riscv.cpp ****             *arg1=sem;
 160:src/Riscv.cpp **** 
 161:src/Riscv.cpp ****             uint64 ret=0;
 162:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 163:src/Riscv.cpp ****             else ret=-1;
 164:src/Riscv.cpp **** 
GAS LISTING /tmp/ccJAxMsJ.s 			page 10


 165:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 166:src/Riscv.cpp **** 
 167:src/Riscv.cpp ****             w_sstatus(sstatus);
 168:src/Riscv.cpp ****             w_sepc(sepc);
 169:src/Riscv.cpp ****         }
 170:src/Riscv.cpp ****         else if(a0reg==0x22){
 253              		.loc 1 170 14
 254              	.LBB459:
 255              	.LBB441:
 256              	.LBB419:
 257              	.LBB405:
 258              	.LBB391:
 259              	.LBB371:
 260              	.LBB352:
 261              	.LBB334:
 262              	.LBB317:
 263              	.LBB301:
 264              	.LBB198:
 265 00b8 93072002 		li	a5,34
 266 00bc 6388F42C 		beq	s1,a5,.L42
 267              	.LBE198:
 268              	.LBE301:
 269              	.LBE317:
 270              	.LBE334:
 271              	.LBE352:
 272              	.LBE371:
 273              	.LBE391:
 274              	.LBE405:
 275              	.LBE419:
 276              	.LBE441:
 277              	.LBE459:
 171:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 172:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 182:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 183:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 184:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 185:src/Riscv.cpp ****                 t->setDeblocked();
 186:src/Riscv.cpp ****                 sem->val++;
 187:src/Riscv.cpp ****                 Scheduler::put(t);
 188:src/Riscv.cpp ****             }
 189:src/Riscv.cpp ****              sem->close();
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp ****             delete sem;
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             w_sstatus(sstatus);
 194:src/Riscv.cpp ****             w_sepc(sepc);
 195:src/Riscv.cpp ****         }
 196:src/Riscv.cpp ****         else if(a0reg==0x23){
GAS LISTING /tmp/ccJAxMsJ.s 			page 11


 278              		.loc 1 196 14
 279              	.LBB460:
 280              	.LBB442:
 281              	.LBB420:
 282              	.LBB406:
 283              	.LBB392:
 284              	.LBB372:
 285              	.LBB353:
 286              	.LBB335:
 287              	.LBB318:
 288              	.LBB302:
 289              	.LBB281:
 290              	.LBB199:
 291 00c0 93073002 		li	a5,35
 292 00c4 6380F436 		beq	s1,a5,.L43
 293              	.LBE199:
 294              	.LBE281:
 295              	.LBE302:
 296              	.LBE318:
 297              	.LBE335:
 298              	.LBE353:
 299              	.LBE372:
 300              	.LBE392:
 301              	.LBE406:
 302              	.LBE420:
 303              	.LBE442:
 304              	.LBE460:
 197:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 198:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             uint64 ret;
 207:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 208:src/Riscv.cpp ****             if(arg1->isOpened()) {
 209:src/Riscv.cpp ****                  ret = arg1->wait();
 210:src/Riscv.cpp ****             }
 211:src/Riscv.cpp ****             else{
 212:src/Riscv.cpp ****                 ret=-1;
 213:src/Riscv.cpp ****             }
 214:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 215:src/Riscv.cpp **** 
 216:src/Riscv.cpp ****             w_sstatus(sstatus);
 217:src/Riscv.cpp ****             w_sepc(sepc);
 218:src/Riscv.cpp ****         }
 219:src/Riscv.cpp ****         else if(a0reg==0x24){
 305              		.loc 1 219 14
 306              	.LBB461:
 307              	.LBB443:
 308              	.LBB421:
 309              	.LBB407:
 310              	.LBB393:
 311              	.LBB373:
GAS LISTING /tmp/ccJAxMsJ.s 			page 12


 312              	.LBB354:
 313              	.LBB336:
 314              	.LBB319:
 315              	.LBB303:
 316              	.LBB282:
 317              	.LBB256:
 318              	.LBB200:
 319 00c8 93074002 		li	a5,36
 320 00cc 6382F43A 		beq	s1,a5,.L44
 321              	.LBE200:
 322              	.LBE256:
 323              	.LBE282:
 324              	.LBE303:
 325              	.LBE319:
 326              	.LBE336:
 327              	.LBE354:
 328              	.LBE373:
 329              	.LBE393:
 330              	.LBE407:
 331              	.LBE421:
 332              	.LBE443:
 333              	.LBE461:
 220:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 221:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             uint64 ret;
 230:src/Riscv.cpp ****             if(arg1->isOpened()) {
 231:src/Riscv.cpp ****                 arg1->signal();
 232:src/Riscv.cpp ****                 ret=0;
 233:src/Riscv.cpp ****             }
 234:src/Riscv.cpp ****             else{
 235:src/Riscv.cpp ****                 ret = -1;
 236:src/Riscv.cpp ****             }
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             w_sstatus(sstatus);
 241:src/Riscv.cpp ****             w_sepc(sepc);
 242:src/Riscv.cpp ****         }
 243:src/Riscv.cpp ****         else if(a0reg==0x41){
 334              		.loc 1 243 14
 335              	.LBB462:
 336              	.LBB444:
 337              	.LBB422:
 338              	.LBB408:
 339              	.LBB394:
 340              	.LBB374:
 341              	.LBB355:
 342              	.LBB337:
 343              	.LBB320:
 344              	.LBB304:
GAS LISTING /tmp/ccJAxMsJ.s 			page 13


 345              	.LBB283:
 346              	.LBB257:
 347              	.LBB242:
 348              	.LBB201:
 349 00d0 93071004 		li	a5,65
 350 00d4 6386F43E 		beq	s1,a5,.L45
 351              	.LBE201:
 352              	.LBE242:
 353              	.LBE257:
 354              	.LBE283:
 355              	.LBE304:
 356              	.LBE320:
 357              	.LBE337:
 358              	.LBE355:
 359              	.LBE374:
 360              	.LBE394:
 361              	.LBE408:
 362              	.LBE422:
 363              	.LBE444:
 364              	.LBE462:
 244:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 245:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 246:src/Riscv.cpp **** 
 247:src/Riscv.cpp ****             //call method from kernel Console class
 248:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 249:src/Riscv.cpp ****             char c = __getc();
 250:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp **** 
 255:src/Riscv.cpp ****             w_sstatus(sstatus);
 256:src/Riscv.cpp ****             w_sepc(sepc);
 257:src/Riscv.cpp ****         }
 258:src/Riscv.cpp ****         else if(a0reg==0x42){
 365              		.loc 1 258 14
 366              	.LBB463:
 367              	.LBB445:
 368              	.LBB423:
 369              	.LBB409:
 370              	.LBB395:
 371              	.LBB375:
 372              	.LBB356:
 373              	.LBB338:
 374              	.LBB321:
 375              	.LBB305:
 376              	.LBB284:
 377              	.LBB258:
 378              	.LBB243:
 379              	.LBB229:
 380              	.LBB202:
 381 00d8 93072004 		li	a5,66
 382 00dc 6390F406 		bne	s1,a5,.L3
 383              	.LBB203:
 259:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 384              		.loc 1 259 13
 385              	.LBB204:
GAS LISTING /tmp/ccJAxMsJ.s 			page 14


 386              	.LBB205:
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 387              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 388              		.loc 2 111 5
 389              		.loc 2 111 64 is_stmt 0
 390              	#APP
 391              	# 111 "src/../h/Riscv.hpp" 1
 112              	    return sepc;
 392              		csrr a5, sepc
 393              	# 0 "" 2
 394              	#NO_APP
 395 00e4 2334F4FC 		sd	a5,-56(s0)
 396              		.loc 2 112 5 is_stmt 1
 397              		.loc 2 112 12 is_stmt 0
 398 00e8 833484FC 		ld	s1,-56(s0)
 399              	.LVL3:
 400              	.LBE205:
 401              	.LBE204:
 402              		.loc 1 259 38
 403 00ec 93844400 		addi	s1,s1,4
 404              	.LVL4:
 260:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 405              		.loc 1 260 13 is_stmt 1
 406              	.LBB206:
 407              	.LBB207:
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
GAS LISTING /tmp/ccJAxMsJ.s 			page 15


 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/Riscv.hpp **** {
 180:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 408              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 409              		.loc 2 181 5
 410              		.loc 2 181 76 is_stmt 0
 411              	#APP
 412              	# 181 "src/../h/Riscv.hpp" 1
 182              	    return sstatus;
 413              		csrr a5, sstatus
 414              	# 0 "" 2
 415              	#NO_APP
 416 00f4 2330F4FC 		sd	a5,-64(s0)
GAS LISTING /tmp/ccJAxMsJ.s 			page 16


 417              		.loc 2 182 5 is_stmt 1
 418              		.loc 2 182 12 is_stmt 0
 419 00f8 033904FC 		ld	s2,-64(s0)
 420              	.LVL5:
 421              	.LBE207:
 422              	.LBE206:
 261:src/Riscv.cpp **** 
 262:src/Riscv.cpp ****             char c;
 423              		.loc 1 262 13 is_stmt 1
 263:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 424              		.loc 1 263 13
 425              		.loc 1 263 48 is_stmt 0
 426              	#APP
 427              	# 263 "src/Riscv.cpp" 1
 264              	
 265:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 428              		ld a1, 11*8(fp)
 429              	# 0 "" 2
 430              		.loc 1 265 13 is_stmt 1
 431              		.loc 1 265 53 is_stmt 0
 432              	# 265 "src/Riscv.cpp" 1
 266              	
 433              		mv a0, a1
 434              	# 0 "" 2
 435              	#NO_APP
 436 0104 1375F50F 		andi	a0,a0,0xff
 437              	.LVL6:
 267:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 438              		.loc 1 267 13 is_stmt 1
 439              		.loc 1 267 27 is_stmt 0
 440 0108 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 440      83B70700 
 441              	.LVL7:
 442              	.LBB208:
 443              	.LBB209:
 129:src/../h/Riscv.hpp **** }
 444              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 445              		.loc 2 129 69 is_stmt 0
 446              	#APP
 447              	# 129 "src/../h/Riscv.hpp" 1
 448              		csrw stvec, a5
 449              	# 0 "" 2
 450              	.LVL8:
 451              	#NO_APP
 452              	.LBE209:
 453              	.LBE208:
 268:src/Riscv.cpp ****             __putc(c);
 454              		.loc 1 268 13 is_stmt 1
 455              		.loc 1 268 19 is_stmt 0
 456 0114 97000000 		call	__putc@plt
 456      E7800000 
 457              	.LVL9:
 269:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 458              		.loc 1 269 13 is_stmt 1
 459              		.loc 1 269 27 is_stmt 0
 460 011c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
GAS LISTING /tmp/ccJAxMsJ.s 			page 17


 460      83B70700 
 461              	.LVL10:
 462              	.LBB210:
 463              	.LBB211:
 129:src/../h/Riscv.hpp **** }
 464              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 465              		.loc 2 129 69 is_stmt 0
 466              	#APP
 467              	# 129 "src/../h/Riscv.hpp" 1
 468              		csrw stvec, a5
 469              	# 0 "" 2
 470              	.LVL11:
 471              	#NO_APP
 472              	.LBE211:
 473              	.LBE210:
 270:src/Riscv.cpp **** 
 271:src/Riscv.cpp ****             w_sstatus(sstatus);
 474              		.loc 1 271 13 is_stmt 1
 475              	.LBB212:
 476              	.LBB213:
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/Riscv.hpp **** {
 187:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 477              		.loc 2 187 5
 478              		.loc 2 187 77 is_stmt 0
 479              	#APP
 480              	# 187 "src/../h/Riscv.hpp" 1
 188              	}
 481              		csrw sstatus, s2
 482              	# 0 "" 2
 483              	.LVL12:
 484              	#NO_APP
 485              	.LBE213:
 486              	.LBE212:
 272:src/Riscv.cpp ****             w_sepc(sepc);
 487              		.loc 1 272 13 is_stmt 1
 488              	.LBB214:
 489              	.LBB215:
 117:src/../h/Riscv.hpp **** }
 490              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 491              		.loc 2 117 65 is_stmt 0
 492              	#APP
 493              	# 117 "src/../h/Riscv.hpp" 1
 494              		csrw sepc, s1
 495              	# 0 "" 2
 496              	.LVL13:
 497              	#NO_APP
 498              	.LBE215:
 499              	.LBE214:
 500              	.LBE203:
 501              	.LBE202:
 502              	.LBE229:
 503              	.LBE243:
GAS LISTING /tmp/ccJAxMsJ.s 			page 18


 504              	.LBE258:
 505              	.LBE284:
 506              	.LBE305:
 507              	.LBE321:
 508              	.LBE338:
 509              	.LBE356:
 510              	.LBE375:
 511              	.LBE395:
 512              	.LBE409:
 513              	.LBE423:
 514              	.LBE445:
 515              	.LBE463:
 273:src/Riscv.cpp ****         }
 274:src/Riscv.cpp ****         else{
 275:src/Riscv.cpp ****             // unexpected trap cause
 276:src/Riscv.cpp ****         }
 277:src/Riscv.cpp **** 
 278:src/Riscv.cpp ****     }
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp **** }
 516              		.loc 1 280 1
 517 0130 6F00C000 		j	.L3
 518              	.LVL14:
 519              	.L32:
 520              	.LBB464:
  28:src/Riscv.cpp ****     }
 521              		.loc 1 28 9 is_stmt 1
 522              	.LBB446:
 523              	.LBB447:
 151:src/../h/Riscv.hpp **** }
 524              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 525              		.loc 2 151 64 is_stmt 0
 526 0134 93072000 		li	a5,2
 527              	#APP
 528              	# 151 "src/../h/Riscv.hpp" 1
 529              		csrc sip, a5
 530              	# 0 "" 2
 531              	.LVL15:
 532              	#NO_APP
 533              	.L3:
 534              	.LBE447:
 535              	.LBE446:
 536              	.LBE464:
 537              		.loc 1 280 1
 538 013c 8330810F 		ld	ra,248(sp)
 539              		.cfi_remember_state
 540              		.cfi_restore 1
 541 0140 0334010F 		ld	s0,240(sp)
 542              		.cfi_restore 8
 543              		.cfi_def_cfa 2, 256
 544 0144 8334810E 		ld	s1,232(sp)
 545              		.cfi_restore 9
 546 0148 0339010E 		ld	s2,224(sp)
 547              		.cfi_restore 18
 548 014c 8339810D 		ld	s3,216(sp)
 549              		.cfi_restore 19
GAS LISTING /tmp/ccJAxMsJ.s 			page 19


 550 0150 033A010D 		ld	s4,208(sp)
 551              		.cfi_restore 20
 552 0154 13010110 		addi	sp,sp,256
 553              		.cfi_def_cfa_offset 0
 554 0158 67800000 		jr	ra
 555              	.LVL16:
 556              	.L33:
 557              		.cfi_restore_state
 558              	.LBB465:
 559              	.LBB448:
 560              	.LBB424:
  31:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
 561              		.loc 1 31 9 is_stmt 1
 562              	.LBB425:
 563              	.LBB426:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 564              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 565              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 566              		.loc 2 111 64 is_stmt 0
 567              	#APP
 568              	# 111 "src/../h/Riscv.hpp" 1
 569              		csrr a5, sepc
 570              	# 0 "" 2
 571              	#NO_APP
 572 0160 2334F4F0 		sd	a5,-248(s0)
 112:src/../h/Riscv.hpp **** }
 573              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 574              		.loc 2 112 12 is_stmt 0
 575 0164 833784F0 		ld	a5,-248(s0)
 576              	.LVL17:
 577              	.LBE426:
 578              	.LBE425:
  32:src/Riscv.cpp ****         w_sepc(sepc + 4);
 579              		.loc 1 32 9 is_stmt 1
 580              	.LBB427:
 581              	.LBB428:
 175:src/../h/Riscv.hpp **** }
 582              		.loc 2 175 5
 175:src/../h/Riscv.hpp **** }
 583              		.loc 2 175 68 is_stmt 0
 584 0168 13070010 		li	a4,256
 585              	.LVL18:
 586              	#APP
 587              	# 175 "src/../h/Riscv.hpp" 1
 588              		csrc sstatus, a4
 589              	# 0 "" 2
 590              	.LVL19:
 591              	#NO_APP
 592              	.LBE428:
 593              	.LBE427:
  33:src/Riscv.cpp **** 
 594              		.loc 1 33 9 is_stmt 1
  33:src/Riscv.cpp **** 
 595              		.loc 1 33 15 is_stmt 0
GAS LISTING /tmp/ccJAxMsJ.s 			page 20


 596 0170 93874700 		addi	a5,a5,4
 597              	.LVL20:
 598              	.LBB429:
 599              	.LBB430:
 117:src/../h/Riscv.hpp **** }
 600              		.loc 2 117 5 is_stmt 1
 117:src/../h/Riscv.hpp **** }
 601              		.loc 2 117 65 is_stmt 0
 602              	#APP
 603              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 604              		csrw sepc, a5
 605              	# 0 "" 2
 606              		.loc 2 118 1
 607              	#NO_APP
 608 0178 6FF05FFC 		j	.L3
 609              	.LVL21:
 610              	.L34:
 611              	.LBE430:
 612              	.LBE429:
 613              	.LBE424:
 614              	.LBB431:
  37:src/Riscv.cpp ****     }
 615              		.loc 1 37 9 is_stmt 1
  37:src/Riscv.cpp ****     }
 616              		.loc 1 37 24 is_stmt 0
 617 017c 97000000 		call	console_handler@plt
 617      E7800000 
 618              	.LVL22:
 619 0184 6FF09FFB 		j	.L3
 620              	.LVL23:
 621              	.L35:
 622              	.LBB410:
 623              	.LBB396:
 624              	.LBB183:
  45:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 625              		.loc 1 45 13 is_stmt 1
 626              	.LBB184:
 627              	.LBB185:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 628              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 629              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 630              		.loc 2 111 64 is_stmt 0
 631              	#APP
 632              	# 111 "src/../h/Riscv.hpp" 1
 633              		csrr a5, sepc
 634              	# 0 "" 2
 635              	#NO_APP
 636 018c 233CF4F0 		sd	a5,-232(s0)
 112:src/../h/Riscv.hpp **** }
 637              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 638              		.loc 2 112 12 is_stmt 0
 639 0190 033984F1 		ld	s2,-232(s0)
 640              	.LBE185:
GAS LISTING /tmp/ccJAxMsJ.s 			page 21


 641              	.LBE184:
  45:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 642              		.loc 1 45 38
 643 0194 13094900 		addi	s2,s2,4
 644              	.LVL24:
  46:src/Riscv.cpp **** 
 645              		.loc 1 46 13 is_stmt 1
 646              	.LBB186:
 647              	.LBB187:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 648              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 649              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 650              		.loc 2 181 76 is_stmt 0
 651              	#APP
 652              	# 181 "src/../h/Riscv.hpp" 1
 653              		csrr a5, sstatus
 654              	# 0 "" 2
 655              	#NO_APP
 656 019c 2338F4F0 		sd	a5,-240(s0)
 182:src/../h/Riscv.hpp **** }
 657              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 658              		.loc 2 182 12 is_stmt 0
 659 01a0 833904F1 		ld	s3,-240(s0)
 660              	.LVL25:
 661              	.LBE187:
 662              	.LBE186:
  49:src/Riscv.cpp ****             _thread::Body arg2;
 663              		.loc 1 49 13 is_stmt 1
  50:src/Riscv.cpp ****             uint64 arg3;
 664              		.loc 1 50 13
  51:src/Riscv.cpp ****             uint64 *arg4;
 665              		.loc 1 51 13
  52:src/Riscv.cpp **** 
 666              		.loc 1 52 13
  54:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 667              		.loc 1 54 13
  54:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 668              		.loc 1 54 48 is_stmt 0
 669              	#APP
 670              	# 54 "src/Riscv.cpp" 1
  55:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 671              		ld a1, 11*8(fp)
 672              	# 0 "" 2
 673              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 674              		.loc 1 55 48 is_stmt 0
 675              	# 55 "src/Riscv.cpp" 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 676              		ld a2, 12*8(fp)
 677              	# 0 "" 2
 678              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 679              		.loc 1 56 48 is_stmt 0
 680              	# 56 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccJAxMsJ.s 			page 22


  57:src/Riscv.cpp **** 
 681              		ld a3, 13*8(fp)
 682              	# 0 "" 2
 683              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp **** 
 684              		.loc 1 57 48 is_stmt 0
 685              	# 57 "src/Riscv.cpp" 1
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 686              		ld a4, 14*8(fp)
 687              	# 0 "" 2
 688              		.loc 1 60 13 is_stmt 1
  60:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 689              		.loc 1 60 56 is_stmt 0
 690              	# 60 "src/Riscv.cpp" 1
 691              		mv s4, a1
 692              	# 0 "" 2
 693              	.LVL26:
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 694              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 695              		.loc 1 61 56 is_stmt 0
 696              	# 61 "src/Riscv.cpp" 1
 697              		mv a0, a2
 698              	# 0 "" 2
 699              	.LVL27:
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 700              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 701              		.loc 1 62 56 is_stmt 0
 702              	# 62 "src/Riscv.cpp" 1
 703              		mv a1, a3
 704              	# 0 "" 2
 705              	.LVL28:
  63:src/Riscv.cpp **** 
 706              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp **** 
 707              		.loc 1 63 56 is_stmt 0
 708              	# 63 "src/Riscv.cpp" 1
 709              		mv a2, a4
 710              	# 0 "" 2
 711              	.LVL29:
  66:src/Riscv.cpp ****             *arg1=t;
 712              		.loc 1 66 13 is_stmt 1
  66:src/Riscv.cpp ****             *arg1=t;
 713              		.loc 1 66 47 is_stmt 0
 714              	#NO_APP
 715 01c4 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 715      E7800000 
 716              	.LVL30:
  67:src/Riscv.cpp **** 
 717              		.loc 1 67 13 is_stmt 1
  67:src/Riscv.cpp **** 
 718              		.loc 1 67 18 is_stmt 0
 719 01cc 2330AA00 		sd	a0,0(s4)
  69:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 720              		.loc 1 69 13 is_stmt 1
  70:src/Riscv.cpp ****             else ret =-1;
GAS LISTING /tmp/ccJAxMsJ.s 			page 23


 721              		.loc 1 70 13
 722 01d0 630C0500 		beqz	a0,.L27
  70:src/Riscv.cpp ****             else ret =-1;
 723              		.loc 1 70 31 is_stmt 0
 724 01d4 93070000 		li	a5,0
 725              	.L9:
 726              	.LVL31:
  75:src/Riscv.cpp **** 
 727              		.loc 1 75 13 is_stmt 1
  75:src/Riscv.cpp **** 
 728              		.loc 1 75 56 is_stmt 0
 729              	#APP
 730              	# 75 "src/Riscv.cpp" 1
  77:src/Riscv.cpp ****             w_sepc(sepc);
 731              		mv a0, a5
 732              	# 0 "" 2
 733              		.loc 1 77 13 is_stmt 1
 734              	.LVL32:
 735              	#NO_APP
 736              	.LBB188:
 737              	.LBB189:
 187:src/../h/Riscv.hpp **** }
 738              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 739              		.loc 2 187 77 is_stmt 0
 740              	#APP
 741              	# 187 "src/../h/Riscv.hpp" 1
 742              		csrw sstatus, s3
 743              	# 0 "" 2
 744              	.LVL33:
 745              	#NO_APP
 746              	.LBE189:
 747              	.LBE188:
  78:src/Riscv.cpp ****         }
 748              		.loc 1 78 13 is_stmt 1
 749              	.LBB190:
 750              	.LBB191:
 117:src/../h/Riscv.hpp **** }
 751              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 752              		.loc 2 117 65 is_stmt 0
 753              	#APP
 754              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 755              		csrw sepc, s2
 756              	# 0 "" 2
 757              		.loc 2 118 1
 758              	#NO_APP
 759 01e4 6FF05FEA 		j	.L8
 760              	.LVL34:
 761              	.L27:
 762              	.LBE191:
 763              	.LBE190:
  71:src/Riscv.cpp **** 
 764              		.loc 1 71 22
 765 01e8 9307F0FF 		li	a5,-1
 766 01ec 6FF0DFFE 		j	.L9
GAS LISTING /tmp/ccJAxMsJ.s 			page 24


 767              	.LVL35:
 768              	.L36:
 769              	.LBE183:
 770              	.LBE396:
 771              	.LBB397:
 772              	.LBB376:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 773              		.loc 1 81 13 is_stmt 1
 774              	.LBB377:
 775              	.LBB378:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 776              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 777              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 778              		.loc 2 111 64 is_stmt 0
 779              	#APP
 780              	# 111 "src/../h/Riscv.hpp" 1
 781              		csrr a5, sepc
 782              	# 0 "" 2
 783              	#NO_APP
 784 01f4 2334F4F2 		sd	a5,-216(s0)
 112:src/../h/Riscv.hpp **** }
 785              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 786              		.loc 2 112 12 is_stmt 0
 787 01f8 833484F2 		ld	s1,-216(s0)
 788              	.LVL36:
 789              	.LBE378:
 790              	.LBE377:
  81:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 791              		.loc 1 81 38
 792 01fc 93844400 		addi	s1,s1,4
 793              	.LVL37:
  82:src/Riscv.cpp ****             //kmem_alloc
 794              		.loc 1 82 13 is_stmt 1
 795              	.LBB379:
 796              	.LBB380:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 797              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 798              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 799              		.loc 2 181 76 is_stmt 0
 800              	#APP
 801              	# 181 "src/../h/Riscv.hpp" 1
 802              		csrr a5, sstatus
 803              	# 0 "" 2
 804              	#NO_APP
 805 0204 2330F4F2 		sd	a5,-224(s0)
 182:src/../h/Riscv.hpp **** }
 806              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 807              		.loc 2 182 12 is_stmt 0
 808 0208 033904F2 		ld	s2,-224(s0)
 809              	.LVL38:
 810              	.LBE380:
GAS LISTING /tmp/ccJAxMsJ.s 			page 25


 811              	.LBE379:
  84:src/Riscv.cpp **** 
 812              		.loc 1 84 13 is_stmt 1
  84:src/Riscv.cpp **** 
 813              		.loc 1 84 48 is_stmt 0
 814              	#APP
 815              	# 84 "src/Riscv.cpp" 1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 816              		ld a0, 11*8(fp)
 817              	# 0 "" 2
 818              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 819              		.loc 1 86 56 is_stmt 0
 820              	# 86 "src/Riscv.cpp" 1
 821              		mv a0, a0
 822              	# 0 "" 2
 823              	.LVL39:
  87:src/Riscv.cpp **** 
 824              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp **** 
 825              		.loc 1 87 61 is_stmt 0
 826              	#NO_APP
 827 0214 13156500 		slli	a0,a0,6
 828              	.LVL40:
 829 0218 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 829      E7800000 
 830              	.LVL41:
  90:src/Riscv.cpp **** 
 831              		.loc 1 90 13 is_stmt 1
  90:src/Riscv.cpp **** 
 832              		.loc 1 90 56 is_stmt 0
 833              	#APP
 834              	# 90 "src/Riscv.cpp" 1
  92:src/Riscv.cpp ****             w_sepc(sepc);
 835              		mv a0, a0
 836              	# 0 "" 2
 837              		.loc 1 92 13 is_stmt 1
 838              	.LVL42:
 839              	#NO_APP
 840              	.LBB381:
 841              	.LBB382:
 187:src/../h/Riscv.hpp **** }
 842              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 843              		.loc 2 187 77 is_stmt 0
 844              	#APP
 845              	# 187 "src/../h/Riscv.hpp" 1
 846              		csrw sstatus, s2
 847              	# 0 "" 2
 848              	.LVL43:
 849              	#NO_APP
 850              	.LBE382:
 851              	.LBE381:
  93:src/Riscv.cpp ****         }
 852              		.loc 1 93 13 is_stmt 1
 853              	.LBB383:
 854              	.LBB384:
GAS LISTING /tmp/ccJAxMsJ.s 			page 26


 117:src/../h/Riscv.hpp **** }
 855              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 856              		.loc 2 117 65 is_stmt 0
 857              	#APP
 858              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 859              		csrw sepc, s1
 860              	# 0 "" 2
 861              		.loc 2 118 1
 862              	#NO_APP
 863 022c 6FF01FF1 		j	.L3
 864              	.LVL44:
 865              	.L37:
 866              	.LBE384:
 867              	.LBE383:
 868              	.LBE376:
 869              	.LBB385:
 870              	.LBB357:
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 871              		.loc 1 96 13 is_stmt 1
 872              	.LBB358:
 873              	.LBB359:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 874              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 875              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 876              		.loc 2 111 64 is_stmt 0
 877              	#APP
 878              	# 111 "src/../h/Riscv.hpp" 1
 879              		csrr a5, sepc
 880              	# 0 "" 2
 881              	#NO_APP
 882 0234 233CF4F2 		sd	a5,-200(s0)
 112:src/../h/Riscv.hpp **** }
 883              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 884              		.loc 2 112 12 is_stmt 0
 885 0238 833484F3 		ld	s1,-200(s0)
 886              	.LVL45:
 887              	.LBE359:
 888              	.LBE358:
  96:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 889              		.loc 1 96 38
 890 023c 93844400 		addi	s1,s1,4
 891              	.LVL46:
  97:src/Riscv.cpp **** 
 892              		.loc 1 97 13 is_stmt 1
 893              	.LBB360:
 894              	.LBB361:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 895              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 896              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 897              		.loc 2 181 76 is_stmt 0
GAS LISTING /tmp/ccJAxMsJ.s 			page 27


 898              	#APP
 899              	# 181 "src/../h/Riscv.hpp" 1
 900              		csrr a5, sstatus
 901              	# 0 "" 2
 902              	#NO_APP
 903 0244 2338F4F2 		sd	a5,-208(s0)
 182:src/../h/Riscv.hpp **** }
 904              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 905              		.loc 2 182 12 is_stmt 0
 906 0248 033904F3 		ld	s2,-208(s0)
 907              	.LVL47:
 908              	.LBE361:
 909              	.LBE360:
  99:src/Riscv.cpp **** 
 910              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp **** 
 911              		.loc 1 99 48 is_stmt 0
 912              	#APP
 913              	# 99 "src/Riscv.cpp" 1
 101:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 914              		ld a0, 11*8(fp)
 915              	# 0 "" 2
 916              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 917              		.loc 1 101 56 is_stmt 0
 918              	# 101 "src/Riscv.cpp" 1
 919              		mv a0, a0
 920              	# 0 "" 2
 921              	.LVL48:
 102:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 922              		.loc 1 102 13 is_stmt 1
 102:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 923              		.loc 1 102 49 is_stmt 0
 924              	#NO_APP
 925 0254 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 925      E7800000 
 926              	.LVL49:
 103:src/Riscv.cpp **** 
 927              		.loc 1 103 13 is_stmt 1
 103:src/Riscv.cpp **** 
 928              		.loc 1 103 56 is_stmt 0
 929              	#APP
 930              	# 103 "src/Riscv.cpp" 1
 105:src/Riscv.cpp ****             w_sepc(sepc);
 931              		mv a0, a0
 932              	# 0 "" 2
 933              		.loc 1 105 13 is_stmt 1
 934              	.LVL50:
 935              	#NO_APP
 936              	.LBB362:
 937              	.LBB363:
 187:src/../h/Riscv.hpp **** }
 938              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 939              		.loc 2 187 77 is_stmt 0
 940              	#APP
GAS LISTING /tmp/ccJAxMsJ.s 			page 28


 941              	# 187 "src/../h/Riscv.hpp" 1
 942              		csrw sstatus, s2
 943              	# 0 "" 2
 944              	.LVL51:
 945              	#NO_APP
 946              	.LBE363:
 947              	.LBE362:
 106:src/Riscv.cpp ****         }
 948              		.loc 1 106 13 is_stmt 1
 949              	.LBB364:
 950              	.LBB365:
 117:src/../h/Riscv.hpp **** }
 951              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 952              		.loc 2 117 65 is_stmt 0
 953              	#APP
 954              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 955              		csrw sepc, s1
 956              	# 0 "" 2
 957              		.loc 2 118 1
 958              	#NO_APP
 959 0268 6FF05FED 		j	.L3
 960              	.LVL52:
 961              	.L38:
 962              	.LBE365:
 963              	.LBE364:
 964              	.LBE357:
 965              	.LBB366:
 966              	.LBB339:
 110:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 967              		.loc 1 110 13 is_stmt 1
 968              	.LBB340:
 969              	.LBB341:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 970              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 971              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 972              		.loc 2 111 64 is_stmt 0
 973              	#APP
 974              	# 111 "src/../h/Riscv.hpp" 1
 975              		csrr a5, sepc
 976              	# 0 "" 2
 977              	#NO_APP
 978 0270 2334F4F4 		sd	a5,-184(s0)
 112:src/../h/Riscv.hpp **** }
 979              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 980              		.loc 2 112 12 is_stmt 0
 981 0274 833484F4 		ld	s1,-184(s0)
 982              	.LVL53:
 983              	.LBE341:
 984              	.LBE340:
 110:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 985              		.loc 1 110 38
 986 0278 93844400 		addi	s1,s1,4
GAS LISTING /tmp/ccJAxMsJ.s 			page 29


 987              	.LVL54:
 111:src/Riscv.cpp **** 
 988              		.loc 1 111 13 is_stmt 1
 989              	.LBB342:
 990              	.LBB343:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 991              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 992              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 993              		.loc 2 181 76 is_stmt 0
 994              	#APP
 995              	# 181 "src/../h/Riscv.hpp" 1
 996              		csrr a5, sstatus
 997              	# 0 "" 2
 998              	#NO_APP
 999 0280 2330F4F4 		sd	a5,-192(s0)
 182:src/../h/Riscv.hpp **** }
 1000              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1001              		.loc 2 182 12 is_stmt 0
 1002 0284 033904F4 		ld	s2,-192(s0)
 1003              	.LVL55:
 1004              	.LBE343:
 1005              	.LBE342:
 113:src/Riscv.cpp ****             _thread::dispatch();
 1006              		.loc 1 113 13 is_stmt 1
 113:src/Riscv.cpp ****             _thread::dispatch();
 1007              		.loc 1 113 31 is_stmt 0
 1008 0288 97070000 		la	a5,_ZN7_thread7runningE
 1008      83B70700 
 1009 0290 83B70700 		ld	a5,0(a5)
 113:src/Riscv.cpp ****             _thread::dispatch();
 1010              		.loc 1 113 39
 1011 0294 13071000 		li	a4,1
 1012 0298 2384E702 		sb	a4,40(a5)
 114:src/Riscv.cpp **** 
 1013              		.loc 1 114 13 is_stmt 1
 114:src/Riscv.cpp **** 
 1014              		.loc 1 114 30 is_stmt 0
 1015 029c 97000000 		call	_ZN7_thread8dispatchEv@plt
 1015      E7800000 
 1016              	.LVL56:
 116:src/Riscv.cpp ****             w_sepc(sepc);
 1017              		.loc 1 116 13 is_stmt 1
 1018              	.LBB344:
 1019              	.LBB345:
 187:src/../h/Riscv.hpp **** }
 1020              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1021              		.loc 2 187 77 is_stmt 0
 1022              	#APP
 1023              	# 187 "src/../h/Riscv.hpp" 1
 1024              		csrw sstatus, s2
 1025              	# 0 "" 2
 1026              	.LVL57:
 1027              	#NO_APP
GAS LISTING /tmp/ccJAxMsJ.s 			page 30


 1028              	.LBE345:
 1029              	.LBE344:
 117:src/Riscv.cpp **** 
 1030              		.loc 1 117 13 is_stmt 1
 1031              	.LBB346:
 1032              	.LBB347:
 117:src/../h/Riscv.hpp **** }
 1033              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1034              		.loc 2 117 65 is_stmt 0
 1035              	#APP
 1036              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1037              		csrw sepc, s1
 1038              	# 0 "" 2
 1039              		.loc 2 118 1
 1040              	#NO_APP
 1041 02ac 6FF01FE9 		j	.L3
 1042              	.LVL58:
 1043              	.L39:
 1044              	.LBE347:
 1045              	.LBE346:
 1046              	.LBE339:
 1047              	.LBB348:
 1048              	.LBB322:
 123:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1049              		.loc 1 123 13 is_stmt 1
 1050              	.LBB323:
 1051              	.LBB324:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1052              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1053              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1054              		.loc 2 111 64 is_stmt 0
 1055              	#APP
 1056              	# 111 "src/../h/Riscv.hpp" 1
 1057              		csrr a5, sepc
 1058              	# 0 "" 2
 1059              	#NO_APP
 1060 02b4 233CF4F4 		sd	a5,-168(s0)
 112:src/../h/Riscv.hpp **** }
 1061              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1062              		.loc 2 112 12 is_stmt 0
 1063 02b8 833484F5 		ld	s1,-168(s0)
 1064              	.LVL59:
 1065              	.LBE324:
 1066              	.LBE323:
 123:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1067              		.loc 1 123 38
 1068 02bc 93844400 		addi	s1,s1,4
 1069              	.LVL60:
 124:src/Riscv.cpp **** 
 1070              		.loc 1 124 13 is_stmt 1
 1071              	.LBB325:
 1072              	.LBB326:
GAS LISTING /tmp/ccJAxMsJ.s 			page 31


 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1073              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1074              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1075              		.loc 2 181 76 is_stmt 0
 1076              	#APP
 1077              	# 181 "src/../h/Riscv.hpp" 1
 1078              		csrr a5, sstatus
 1079              	# 0 "" 2
 1080              	#NO_APP
 1081 02c4 2338F4F4 		sd	a5,-176(s0)
 182:src/../h/Riscv.hpp **** }
 1082              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1083              		.loc 2 182 12 is_stmt 0
 1084 02c8 033904F5 		ld	s2,-176(s0)
 1085              	.LVL61:
 1086              	.LBE326:
 1087              	.LBE325:
 127:src/Riscv.cpp **** 
 1088              		.loc 1 127 13 is_stmt 1
 127:src/Riscv.cpp **** 
 1089              		.loc 1 127 30 is_stmt 0
 1090 02cc 97000000 		call	_ZN7_thread8dispatchEv@plt
 1090      E7800000 
 1091              	.LVL62:
 129:src/Riscv.cpp ****             w_sepc(sepc);
 1092              		.loc 1 129 13 is_stmt 1
 1093              	.LBB327:
 1094              	.LBB328:
 187:src/../h/Riscv.hpp **** }
 1095              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1096              		.loc 2 187 77 is_stmt 0
 1097              	#APP
 1098              	# 187 "src/../h/Riscv.hpp" 1
 1099              		csrw sstatus, s2
 1100              	# 0 "" 2
 1101              	.LVL63:
 1102              	#NO_APP
 1103              	.LBE328:
 1104              	.LBE327:
 130:src/Riscv.cpp ****         }
 1105              		.loc 1 130 13 is_stmt 1
 1106              	.LBB329:
 1107              	.LBB330:
 117:src/../h/Riscv.hpp **** }
 1108              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1109              		.loc 2 117 65 is_stmt 0
 1110              	#APP
 1111              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1112              		csrw sepc, s1
 1113              	# 0 "" 2
 1114              		.loc 2 118 1
GAS LISTING /tmp/ccJAxMsJ.s 			page 32


 1115              	#NO_APP
 1116 02dc 6FF01FE6 		j	.L3
 1117              	.LVL64:
 1118              	.L40:
 1119              	.LBE330:
 1120              	.LBE329:
 1121              	.LBE322:
 1122              	.LBB331:
 1123              	.LBB306:
 135:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1124              		.loc 1 135 13 is_stmt 1
 1125              	.LBB307:
 1126              	.LBB308:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1127              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1128              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1129              		.loc 2 111 64 is_stmt 0
 1130              	#APP
 1131              	# 111 "src/../h/Riscv.hpp" 1
 1132              		csrr a5, sepc
 1133              	# 0 "" 2
 1134              	#NO_APP
 1135 02e4 2334F4F6 		sd	a5,-152(s0)
 112:src/../h/Riscv.hpp **** }
 1136              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1137              		.loc 2 112 12 is_stmt 0
 1138 02e8 833484F6 		ld	s1,-152(s0)
 1139              	.LVL65:
 1140              	.LBE308:
 1141              	.LBE307:
 135:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1142              		.loc 1 135 38
 1143 02ec 93844400 		addi	s1,s1,4
 1144              	.LVL66:
 136:src/Riscv.cpp **** 
 1145              		.loc 1 136 13 is_stmt 1
 1146              	.LBB309:
 1147              	.LBB310:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1148              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1149              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1150              		.loc 2 181 76 is_stmt 0
 1151              	#APP
 1152              	# 181 "src/../h/Riscv.hpp" 1
 1153              		csrr a5, sstatus
 1154              	# 0 "" 2
 1155              	#NO_APP
 1156 02f4 2330F4F6 		sd	a5,-160(s0)
 182:src/../h/Riscv.hpp **** }
 1157              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1158              		.loc 2 182 12 is_stmt 0
GAS LISTING /tmp/ccJAxMsJ.s 			page 33


 1159 02f8 033904F6 		ld	s2,-160(s0)
 1160              	.LVL67:
 1161              	.LBE310:
 1162              	.LBE309:
 138:src/Riscv.cpp ****             _thread::dispatch();
 1163              		.loc 1 138 13 is_stmt 1
 138:src/Riscv.cpp ****             _thread::dispatch();
 1164              		.loc 1 138 39 is_stmt 0
 1165 02fc 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1165      83B70700 
 1166 0304 23B00700 		sd	zero,0(a5)
 139:src/Riscv.cpp **** 
 1167              		.loc 1 139 13 is_stmt 1
 139:src/Riscv.cpp **** 
 1168              		.loc 1 139 30 is_stmt 0
 1169 0308 97000000 		call	_ZN7_thread8dispatchEv@plt
 1169      E7800000 
 1170              	.LVL68:
 141:src/Riscv.cpp ****             w_sepc(sepc);
 1171              		.loc 1 141 13 is_stmt 1
 1172              	.LBB311:
 1173              	.LBB312:
 187:src/../h/Riscv.hpp **** }
 1174              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1175              		.loc 2 187 77 is_stmt 0
 1176              	#APP
 1177              	# 187 "src/../h/Riscv.hpp" 1
 1178              		csrw sstatus, s2
 1179              	# 0 "" 2
 1180              	.LVL69:
 1181              	#NO_APP
 1182              	.LBE312:
 1183              	.LBE311:
 142:src/Riscv.cpp ****         }
 1184              		.loc 1 142 13 is_stmt 1
 1185              	.LBB313:
 1186              	.LBB314:
 117:src/../h/Riscv.hpp **** }
 1187              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1188              		.loc 2 117 65 is_stmt 0
 1189              	#APP
 1190              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1191              		csrw sepc, s1
 1192              	# 0 "" 2
 1193              		.loc 2 118 1
 1194              	#NO_APP
 1195 0318 6FF05FE2 		j	.L3
 1196              	.LVL70:
 1197              	.L41:
 1198              	.LBE314:
 1199              	.LBE313:
 1200              	.LBE306:
 1201              	.LBB315:
 1202              	.LBB285:
GAS LISTING /tmp/ccJAxMsJ.s 			page 34


 145:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1203              		.loc 1 145 13 is_stmt 1
 1204              	.LBB286:
 1205              	.LBB287:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1206              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1207              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1208              		.loc 2 111 64 is_stmt 0
 1209              	#APP
 1210              	# 111 "src/../h/Riscv.hpp" 1
 1211              		csrr a5, sepc
 1212              	# 0 "" 2
 1213              	#NO_APP
 1214 0320 233CF4F6 		sd	a5,-136(s0)
 112:src/../h/Riscv.hpp **** }
 1215              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1216              		.loc 2 112 12 is_stmt 0
 1217 0324 833484F7 		ld	s1,-136(s0)
 1218              	.LVL71:
 1219              	.LBE287:
 1220              	.LBE286:
 145:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1221              		.loc 1 145 38
 1222 0328 93844400 		addi	s1,s1,4
 1223              	.LVL72:
 146:src/Riscv.cpp **** 
 1224              		.loc 1 146 13 is_stmt 1
 1225              	.LBB288:
 1226              	.LBB289:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1227              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1228              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1229              		.loc 2 181 76 is_stmt 0
 1230              	#APP
 1231              	# 181 "src/../h/Riscv.hpp" 1
 1232              		csrr a5, sstatus
 1233              	# 0 "" 2
 1234              	#NO_APP
 1235 0330 2338F4F6 		sd	a5,-144(s0)
 182:src/../h/Riscv.hpp **** }
 1236              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1237              		.loc 2 182 12 is_stmt 0
 1238 0334 033904F7 		ld	s2,-144(s0)
 1239              	.LVL73:
 1240              	.LBE289:
 1241              	.LBE288:
 148:src/Riscv.cpp ****            uint64 arg2;
 1242              		.loc 1 148 12 is_stmt 1
 149:src/Riscv.cpp **** 
 1243              		.loc 1 149 12
 151:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
GAS LISTING /tmp/ccJAxMsJ.s 			page 35


 1244              		.loc 1 151 13
 151:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1245              		.loc 1 151 48 is_stmt 0
 1246              	#APP
 1247              	# 151 "src/Riscv.cpp" 1
 152:src/Riscv.cpp **** 
 1248              		ld a1, 11*8(fp)
 1249              	# 0 "" 2
 1250              		.loc 1 152 13 is_stmt 1
 152:src/Riscv.cpp **** 
 1251              		.loc 1 152 48 is_stmt 0
 1252              	# 152 "src/Riscv.cpp" 1
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1253              		ld a2, 12*8(fp)
 1254              	# 0 "" 2
 1255              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1256              		.loc 1 154 56 is_stmt 0
 1257              	# 154 "src/Riscv.cpp" 1
 1258              		mv s3, a1
 1259              	# 0 "" 2
 1260              	.LVL74:
 155:src/Riscv.cpp **** 
 1261              		.loc 1 155 13 is_stmt 1
 155:src/Riscv.cpp **** 
 1262              		.loc 1 155 56 is_stmt 0
 1263              	# 155 "src/Riscv.cpp" 1
 1264              		mv s4, a2
 1265              	# 0 "" 2
 1266              	.LVL75:
 157:src/Riscv.cpp ****             sem->open();
 1267              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp ****             sem->open();
 1268              		.loc 1 157 50 is_stmt 0
 1269              	#NO_APP
 1270 0348 13050002 		li	a0,32
 1271 034c 97000000 		call	_ZN10KSemaphorenwEm@plt
 1271      E7800000 
 1272              	.LVL76:
 1273              	.LBB290:
 1274              	.LBB291:
 1275              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1276              		.loc 3 14 40
GAS LISTING /tmp/ccJAxMsJ.s 			page 36


 1277 0354 23204501 		sw	s4,0(a0)
 1278              	.LVL77:
 1279              	.LBB292:
 1280              	.LBB293:
 1281              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1282              		.loc 4 26 29
 1283 0358 23340500 		sd	zero,8(a0)
 1284 035c 23380500 		sd	zero,16(a0)
 1285              	.LVL78:
 1286              	.LBE293:
 1287              	.LBE292:
 1288              	.LBE291:
 1289              	.LBE290:
 158:src/Riscv.cpp ****             *arg1=sem;
 1290              		.loc 1 158 13 is_stmt 1
 1291              	.LBB294:
 1292              	.LBB295:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
GAS LISTING /tmp/ccJAxMsJ.s 			page 37


  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1293              		.loc 3 35 9
 1294              		.loc 3 35 15 is_stmt 0
 1295 0360 93071000 		li	a5,1
 1296 0364 230CF500 		sb	a5,24(a0)
 1297              	.LVL79:
 1298              	.LBE295:
 1299              	.LBE294:
 159:src/Riscv.cpp **** 
 1300              		.loc 1 159 13 is_stmt 1
 159:src/Riscv.cpp **** 
 1301              		.loc 1 159 18 is_stmt 0
 1302 0368 23B0A900 		sd	a0,0(s3)
 161:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1303              		.loc 1 161 13 is_stmt 1
 1304              	.LVL80:
 162:src/Riscv.cpp ****             else ret=-1;
 1305              		.loc 1 162 13
 1306 036c 630C0500 		beqz	a0,.L28
 162:src/Riscv.cpp ****             else ret=-1;
 1307              		.loc 1 162 33 is_stmt 0
 1308 0370 93070000 		li	a5,0
 1309              	.L16:
 1310              	.LVL81:
 165:src/Riscv.cpp **** 
 1311              		.loc 1 165 13 is_stmt 1
 165:src/Riscv.cpp **** 
 1312              		.loc 1 165 56 is_stmt 0
 1313              	#APP
 1314              	# 165 "src/Riscv.cpp" 1
 167:src/Riscv.cpp ****             w_sepc(sepc);
 1315              		mv a0, a5
 1316              	# 0 "" 2
 1317              		.loc 1 167 13 is_stmt 1
 1318              	.LVL82:
 1319              	#NO_APP
 1320              	.LBB296:
 1321              	.LBB297:
 187:src/../h/Riscv.hpp **** }
 1322              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1323              		.loc 2 187 77 is_stmt 0
 1324              	#APP
 1325              	# 187 "src/../h/Riscv.hpp" 1
 1326              		csrw sstatus, s2
 1327              	# 0 "" 2
 1328              	.LVL83:
 1329              	#NO_APP
 1330              	.LBE297:
 1331              	.LBE296:
 168:src/Riscv.cpp ****         }
GAS LISTING /tmp/ccJAxMsJ.s 			page 38


 1332              		.loc 1 168 13 is_stmt 1
 1333              	.LBB298:
 1334              	.LBB299:
 117:src/../h/Riscv.hpp **** }
 1335              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1336              		.loc 2 117 65 is_stmt 0
 1337              	#APP
 1338              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1339              		csrw sepc, s1
 1340              	# 0 "" 2
 1341              		.loc 2 118 1
 1342              	#NO_APP
 1343 0380 6FF0DFDB 		j	.L3
 1344              	.LVL84:
 1345              	.L28:
 1346              	.LBE299:
 1347              	.LBE298:
 163:src/Riscv.cpp **** 
 1348              		.loc 1 163 21
 1349 0384 9307F0FF 		li	a5,-1
 1350 0388 6FF0DFFE 		j	.L16
 1351              	.LVL85:
 1352              	.L42:
 1353              	.LBE285:
 1354              	.LBB300:
 1355              	.LBB259:
 171:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1356              		.loc 1 171 13 is_stmt 1
 1357              	.LBB260:
 1358              	.LBB261:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1359              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1360              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1361              		.loc 2 111 64 is_stmt 0
 1362              	#APP
 1363              	# 111 "src/../h/Riscv.hpp" 1
 1364              		csrr a5, sepc
 1365              	# 0 "" 2
 1366              	#NO_APP
 1367 0390 2334F4F8 		sd	a5,-120(s0)
 112:src/../h/Riscv.hpp **** }
 1368              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1369              		.loc 2 112 12 is_stmt 0
 1370 0394 833984F8 		ld	s3,-120(s0)
 1371              	.LBE261:
 1372              	.LBE260:
 171:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1373              		.loc 1 171 38
 1374 0398 93894900 		addi	s3,s3,4
 1375              	.LVL86:
 172:src/Riscv.cpp **** 
 1376              		.loc 1 172 13 is_stmt 1
GAS LISTING /tmp/ccJAxMsJ.s 			page 39


 1377              	.LBB262:
 1378              	.LBB263:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1379              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1380              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1381              		.loc 2 181 76 is_stmt 0
 1382              	#APP
 1383              	# 181 "src/../h/Riscv.hpp" 1
 1384              		csrr a5, sstatus
 1385              	# 0 "" 2
 1386              	#NO_APP
 1387 03a0 2330F4F8 		sd	a5,-128(s0)
 182:src/../h/Riscv.hpp **** }
 1388              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1389              		.loc 2 182 12 is_stmt 0
 1390 03a4 033A04F8 		ld	s4,-128(s0)
 1391              	.LVL87:
 1392              	.LBE263:
 1393              	.LBE262:
 174:src/Riscv.cpp **** 
 1394              		.loc 1 174 13 is_stmt 1
 177:src/Riscv.cpp **** 
 1395              		.loc 1 177 13
 177:src/Riscv.cpp **** 
 1396              		.loc 1 177 48 is_stmt 0
 1397              	#APP
 1398              	# 177 "src/Riscv.cpp" 1
 179:src/Riscv.cpp **** 
 1399              		ld a1, 11*8(fp)
 1400              	# 0 "" 2
 1401              		.loc 1 179 13 is_stmt 1
 179:src/Riscv.cpp **** 
 1402              		.loc 1 179 56 is_stmt 0
 1403              	# 179 "src/Riscv.cpp" 1
 1404              		mv s1, a1
 1405              	# 0 "" 2
 1406              	.LVL88:
 181:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1407              		.loc 1 181 13 is_stmt 1
 1408              	#NO_APP
 1409 03b0 6F000003 		j	.L20
 1410              	.LVL89:
 1411              	.L19:
 1412              	.LBB264:
 1413              	.LBB265:
 1414              	.LBB266:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
GAS LISTING /tmp/ccJAxMsJ.s 			page 40


  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1415              		.loc 4 72 12 is_stmt 0
 1416 03b4 03390500 		ld	s2,0(a0)
 1417              	.LVL90:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1418              		.loc 4 73 35
 1419 03b8 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1419      E7800000 
 1420              	.LVL91:
 1421              	.LBE266:
 1422              	.LBE265:
 185:src/Riscv.cpp ****                 sem->val++;
 1423              		.loc 1 185 17 is_stmt 1
 1424              	.LBB268:
 1425              	.LBB269:
 1426              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
GAS LISTING /tmp/ccJAxMsJ.s 			page 41


   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1427              		.loc 5 35 9
 1428              		.loc 5 35 19 is_stmt 0
 1429 03c0 93071000 		li	a5,1
 1430 03c4 230CF902 		sb	a5,56(s2)
 1431              	.LVL92:
 1432              	.LBE269:
 1433              	.LBE268:
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1434              		.loc 1 186 17 is_stmt 1
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1435              		.loc 1 186 22 is_stmt 0
 1436 03c8 83A70400 		lw	a5,0(s1)
 186:src/Riscv.cpp ****                 Scheduler::put(t);
 1437              		.loc 1 186 25
 1438 03cc 9B871700 		addiw	a5,a5,1
 1439 03d0 23A0F400 		sw	a5,0(s1)
 187:src/Riscv.cpp ****             }
 1440              		.loc 1 187 17 is_stmt 1
 187:src/Riscv.cpp ****             }
 1441              		.loc 1 187 31 is_stmt 0
 1442 03d4 13050900 		mv	a0,s2
 1443 03d8 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1443      E7800000 
 1444              	.LVL93:
 1445              	.L20:
 1446              	.LBE264:
GAS LISTING /tmp/ccJAxMsJ.s 			page 42


 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1447              		.loc 1 183 13 is_stmt 1
 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1448              		.loc 1 183 43
 1449              	.LBB271:
 1450              	.LBB272:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1451              		.loc 4 79 14 is_stmt 0
 1452 03e0 03B58400 		ld	a0,8(s1)
 1453              		.loc 4 79 9
 1454 03e4 63000502 		beqz	a0,.L18
  80:src/../h/List.hpp ****         return head->data;
 1455              		.loc 4 80 22
 1456 03e8 83370500 		ld	a5,0(a0)
 1457              	.LVL94:
 1458              	.LBE272:
 1459              	.LBE271:
 183:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1460              		.loc 1 183 43
 1461 03ec 638C0700 		beqz	a5,.L18
 1462              	.LBB273:
 184:src/Riscv.cpp ****                 t->setDeblocked();
 1463              		.loc 1 184 17 is_stmt 1
 1464              	.LVL95:
 1465              	.LBB270:
 1466              	.LBB267:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1467              		.loc 4 69 22 is_stmt 0
 1468 03f0 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1469              		.loc 4 69 9
 1470 03f4 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1471              		.loc 4 70 9
 1472 03f8 E39E07FA 		bnez	a5,.L19
  70:src/../h/List.hpp **** 
 1473              		.loc 4 70 22
 1474 03fc 23B80400 		sd	zero,16(s1)
 1475 0400 6FF05FFB 		j	.L19
 1476              	.LVL96:
 1477              	.L18:
 1478              	.LBE267:
 1479              	.LBE270:
 1480              	.LBE273:
 189:src/Riscv.cpp **** 
 1481              		.loc 1 189 14 is_stmt 1
 1482              	.LBB274:
 1483              	.LBB275:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1484              		.loc 3 38 9
GAS LISTING /tmp/ccJAxMsJ.s 			page 43


 1485              		.loc 3 38 16 is_stmt 0
 1486 0404 238C0400 		sb	zero,24(s1)
 1487              	.LVL97:
 1488              	.LBE275:
 1489              	.LBE274:
 191:src/Riscv.cpp **** 
 1490              		.loc 1 191 13 is_stmt 1
 191:src/Riscv.cpp **** 
 1491              		.loc 1 191 23 is_stmt 0
 1492 0408 63880400 		beqz	s1,.L21
 191:src/Riscv.cpp **** 
 1493              		.loc 1 191 20 discriminator 1
 1494 040c 13850400 		mv	a0,s1
 1495 0410 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1495      E7800000 
 1496              	.LVL98:
 1497              	.L21:
 193:src/Riscv.cpp ****             w_sepc(sepc);
 1498              		.loc 1 193 13 is_stmt 1
 1499              	.LBB276:
 1500              	.LBB277:
 187:src/../h/Riscv.hpp **** }
 1501              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1502              		.loc 2 187 77 is_stmt 0
 1503              	#APP
 1504              	# 187 "src/../h/Riscv.hpp" 1
 1505              		csrw sstatus, s4
 1506              	# 0 "" 2
 1507              	.LVL99:
 1508              	#NO_APP
 1509              	.LBE277:
 1510              	.LBE276:
 194:src/Riscv.cpp ****         }
 1511              		.loc 1 194 13 is_stmt 1
 1512              	.LBB278:
 1513              	.LBB279:
 117:src/../h/Riscv.hpp **** }
 1514              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1515              		.loc 2 117 65 is_stmt 0
 1516              	#APP
 1517              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1518              		csrw sepc, s3
 1519              	# 0 "" 2
 1520              		.loc 2 118 1
 1521              	#NO_APP
 1522 0420 6FF0DFD1 		j	.L3
 1523              	.LVL100:
 1524              	.L43:
 1525              	.LBE279:
 1526              	.LBE278:
 1527              	.LBE259:
 1528              	.LBB280:
 1529              	.LBB244:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
GAS LISTING /tmp/ccJAxMsJ.s 			page 44


 1530              		.loc 1 197 13 is_stmt 1
 1531              	.LBB245:
 1532              	.LBB246:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1533              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1534              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1535              		.loc 2 111 64 is_stmt 0
 1536              	#APP
 1537              	# 111 "src/../h/Riscv.hpp" 1
 1538              		csrr a5, sepc
 1539              	# 0 "" 2
 1540              	#NO_APP
 1541 0428 233CF4F8 		sd	a5,-104(s0)
 112:src/../h/Riscv.hpp **** }
 1542              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1543              		.loc 2 112 12 is_stmt 0
 1544 042c 833484F9 		ld	s1,-104(s0)
 1545              	.LVL101:
 1546              	.LBE246:
 1547              	.LBE245:
 197:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1548              		.loc 1 197 38
 1549 0430 93844400 		addi	s1,s1,4
 1550              	.LVL102:
 198:src/Riscv.cpp **** 
 1551              		.loc 1 198 13 is_stmt 1
 1552              	.LBB247:
 1553              	.LBB248:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1554              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1555              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1556              		.loc 2 181 76 is_stmt 0
 1557              	#APP
 1558              	# 181 "src/../h/Riscv.hpp" 1
 1559              		csrr a5, sstatus
 1560              	# 0 "" 2
 1561              	#NO_APP
 1562 0438 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/Riscv.hpp **** }
 1563              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1564              		.loc 2 182 12 is_stmt 0
 1565 043c 033904F9 		ld	s2,-112(s0)
 1566              	.LVL103:
 1567              	.LBE248:
 1568              	.LBE247:
 200:src/Riscv.cpp **** 
 1569              		.loc 1 200 13 is_stmt 1
 202:src/Riscv.cpp **** 
 1570              		.loc 1 202 13
 202:src/Riscv.cpp **** 
 1571              		.loc 1 202 48 is_stmt 0
GAS LISTING /tmp/ccJAxMsJ.s 			page 45


 1572              	#APP
 1573              	# 202 "src/Riscv.cpp" 1
 204:src/Riscv.cpp **** 
 1574              		ld a1, 11*8(fp)
 1575              	# 0 "" 2
 1576              		.loc 1 204 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1577              		.loc 1 204 56 is_stmt 0
 1578              	# 204 "src/Riscv.cpp" 1
 1579              		mv a0, a1
 1580              	# 0 "" 2
 1581              	.LVL104:
 206:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1582              		.loc 1 206 13 is_stmt 1
 208:src/Riscv.cpp ****                  ret = arg1->wait();
 1583              		.loc 1 208 13
 1584              	#NO_APP
 1585              	.LBB249:
 1586              	.LBB250:
  32:src/../h/KSemaphore.hpp **** 
 1587              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1588              		.loc 3 32 28 is_stmt 0
 1589 0448 83478501 		lbu	a5,24(a0)
 1590              	.LVL105:
 1591              	.LBE250:
 1592              	.LBE249:
 208:src/Riscv.cpp ****                  ret = arg1->wait();
 1593              		.loc 1 208 13
 1594 044c 639C0700 		bnez	a5,.L46
 212:src/Riscv.cpp ****             }
 1595              		.loc 1 212 20
 1596 0450 1305F0FF 		li	a0,-1
 1597              	.LVL106:
 1598              	.L23:
 214:src/Riscv.cpp **** 
 1599              		.loc 1 214 13 is_stmt 1
 214:src/Riscv.cpp **** 
 1600              		.loc 1 214 56 is_stmt 0
 1601              	#APP
 1602              	# 214 "src/Riscv.cpp" 1
 216:src/Riscv.cpp ****             w_sepc(sepc);
 1603              		mv a0, a0
 1604              	# 0 "" 2
 1605              		.loc 1 216 13 is_stmt 1
 1606              	.LVL107:
 1607              	#NO_APP
 1608              	.LBB251:
 1609              	.LBB252:
 187:src/../h/Riscv.hpp **** }
 1610              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1611              		.loc 2 187 77 is_stmt 0
 1612              	#APP
 1613              	# 187 "src/../h/Riscv.hpp" 1
 1614              		csrw sstatus, s2
 1615              	# 0 "" 2
GAS LISTING /tmp/ccJAxMsJ.s 			page 46


 1616              	.LVL108:
 1617              	#NO_APP
 1618              	.LBE252:
 1619              	.LBE251:
 217:src/Riscv.cpp ****         }
 1620              		.loc 1 217 13 is_stmt 1
 1621              	.LBB253:
 1622              	.LBB254:
 117:src/../h/Riscv.hpp **** }
 1623              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1624              		.loc 2 117 65 is_stmt 0
 1625              	#APP
 1626              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1627              		csrw sepc, s1
 1628              	# 0 "" 2
 1629              		.loc 2 118 1
 1630              	#NO_APP
 1631 0460 6FF0DFCD 		j	.L3
 1632              	.LVL109:
 1633              	.L46:
 1634              	.LBE254:
 1635              	.LBE253:
 209:src/Riscv.cpp ****             }
 1636              		.loc 1 209 18 is_stmt 1
 209:src/Riscv.cpp ****             }
 1637              		.loc 1 209 34 is_stmt 0
 1638 0464 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1638      E7800000 
 1639              	.LVL110:
 1640 046c 6FF09FFE 		j	.L23
 1641              	.LVL111:
 1642              	.L44:
 1643              	.LBE244:
 1644              	.LBB255:
 1645              	.LBB230:
 220:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1646              		.loc 1 220 13 is_stmt 1
 1647              	.LBB231:
 1648              	.LBB232:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1649              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1650              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1651              		.loc 2 111 64 is_stmt 0
 1652              	#APP
 1653              	# 111 "src/../h/Riscv.hpp" 1
 1654              		csrr a5, sepc
 1655              	# 0 "" 2
 1656              	#NO_APP
 1657 0474 2334F4FA 		sd	a5,-88(s0)
 112:src/../h/Riscv.hpp **** }
 1658              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1659              		.loc 2 112 12 is_stmt 0
GAS LISTING /tmp/ccJAxMsJ.s 			page 47


 1660 0478 833484FA 		ld	s1,-88(s0)
 1661              	.LVL112:
 1662              	.LBE232:
 1663              	.LBE231:
 220:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1664              		.loc 1 220 38
 1665 047c 93844400 		addi	s1,s1,4
 1666              	.LVL113:
 221:src/Riscv.cpp **** 
 1667              		.loc 1 221 13 is_stmt 1
 1668              	.LBB233:
 1669              	.LBB234:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1670              		.loc 2 180 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1671              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1672              		.loc 2 181 76 is_stmt 0
 1673              	#APP
 1674              	# 181 "src/../h/Riscv.hpp" 1
 1675              		csrr a5, sstatus
 1676              	# 0 "" 2
 1677              	#NO_APP
 1678 0484 2330F4FA 		sd	a5,-96(s0)
 182:src/../h/Riscv.hpp **** }
 1679              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1680              		.loc 2 182 12 is_stmt 0
 1681 0488 033904FA 		ld	s2,-96(s0)
 1682              	.LVL114:
 1683              	.LBE234:
 1684              	.LBE233:
 223:src/Riscv.cpp **** 
 1685              		.loc 1 223 13 is_stmt 1
 225:src/Riscv.cpp **** 
 1686              		.loc 1 225 13
 225:src/Riscv.cpp **** 
 1687              		.loc 1 225 48 is_stmt 0
 1688              	#APP
 1689              	# 225 "src/Riscv.cpp" 1
 227:src/Riscv.cpp **** 
 1690              		ld a1, 11*8(fp)
 1691              	# 0 "" 2
 1692              		.loc 1 227 13 is_stmt 1
 227:src/Riscv.cpp **** 
 1693              		.loc 1 227 56 is_stmt 0
 1694              	# 227 "src/Riscv.cpp" 1
 1695              		mv a0, a1
 1696              	# 0 "" 2
 1697              	.LVL115:
 229:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1698              		.loc 1 229 13 is_stmt 1
 230:src/Riscv.cpp ****                 arg1->signal();
 1699              		.loc 1 230 13
 1700              	#NO_APP
 1701              	.LBB235:
 1702              	.LBB236:
GAS LISTING /tmp/ccJAxMsJ.s 			page 48


  32:src/../h/KSemaphore.hpp **** 
 1703              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1704              		.loc 3 32 28 is_stmt 0
 1705 0494 83478501 		lbu	a5,24(a0)
 1706              	.LVL116:
 1707              	.LBE236:
 1708              	.LBE235:
 230:src/Riscv.cpp ****                 arg1->signal();
 1709              		.loc 1 230 13
 1710 0498 639C0700 		bnez	a5,.L47
 235:src/Riscv.cpp ****             }
 1711              		.loc 1 235 21
 1712 049c 9307F0FF 		li	a5,-1
 1713              	.LVL117:
 1714              	.L25:
 238:src/Riscv.cpp **** 
 1715              		.loc 1 238 13 is_stmt 1
 238:src/Riscv.cpp **** 
 1716              		.loc 1 238 56 is_stmt 0
 1717              	#APP
 1718              	# 238 "src/Riscv.cpp" 1
 240:src/Riscv.cpp ****             w_sepc(sepc);
 1719              		mv a0, a5
 1720              	# 0 "" 2
 1721              		.loc 1 240 13 is_stmt 1
 1722              	.LVL118:
 1723              	#NO_APP
 1724              	.LBB237:
 1725              	.LBB238:
 187:src/../h/Riscv.hpp **** }
 1726              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1727              		.loc 2 187 77 is_stmt 0
 1728              	#APP
 1729              	# 187 "src/../h/Riscv.hpp" 1
 1730              		csrw sstatus, s2
 1731              	# 0 "" 2
 1732              	.LVL119:
 1733              	#NO_APP
 1734              	.LBE238:
 1735              	.LBE237:
 241:src/Riscv.cpp ****         }
 1736              		.loc 1 241 13 is_stmt 1
 1737              	.LBB239:
 1738              	.LBB240:
 117:src/../h/Riscv.hpp **** }
 1739              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1740              		.loc 2 117 65 is_stmt 0
 1741              	#APP
 1742              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1743              		csrw sepc, s1
 1744              	# 0 "" 2
 1745              		.loc 2 118 1
 1746              	#NO_APP
GAS LISTING /tmp/ccJAxMsJ.s 			page 49


 1747 04ac 6FF01FC9 		j	.L3
 1748              	.LVL120:
 1749              	.L47:
 1750              	.LBE240:
 1751              	.LBE239:
 231:src/Riscv.cpp ****                 ret=0;
 1752              		.loc 1 231 17 is_stmt 1
 231:src/Riscv.cpp ****                 ret=0;
 1753              		.loc 1 231 29 is_stmt 0
 1754 04b0 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1754      E7800000 
 1755              	.LVL121:
 232:src/Riscv.cpp ****             }
 1756              		.loc 1 232 17 is_stmt 1
 232:src/Riscv.cpp ****             }
 1757              		.loc 1 232 20 is_stmt 0
 1758 04b8 93070000 		li	a5,0
 1759 04bc 6FF05FFE 		j	.L25
 1760              	.LVL122:
 1761              	.L45:
 1762              	.LBE230:
 1763              	.LBB241:
 1764              	.LBB216:
 244:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1765              		.loc 1 244 13 is_stmt 1
 1766              	.LBB217:
 1767              	.LBB218:
 110:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1768              		.loc 2 110 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1769              		.loc 2 111 5
 111:src/../h/Riscv.hpp ****     return sepc;
 1770              		.loc 2 111 64 is_stmt 0
 1771              	#APP
 1772              	# 111 "src/../h/Riscv.hpp" 1
 1773              		csrr a5, sepc
 1774              	# 0 "" 2
 1775              	#NO_APP
 1776 04c4 233CF4FA 		sd	a5,-72(s0)
 112:src/../h/Riscv.hpp **** }
 1777              		.loc 2 112 5 is_stmt 1
 112:src/../h/Riscv.hpp **** }
 1778              		.loc 2 112 12 is_stmt 0
 1779 04c8 833484FB 		ld	s1,-72(s0)
 1780              	.LVL123:
 1781              	.LBE218:
 1782              	.LBE217:
 244:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1783              		.loc 1 244 38
 1784 04cc 93844400 		addi	s1,s1,4
 1785              	.LVL124:
 245:src/Riscv.cpp **** 
 1786              		.loc 1 245 13 is_stmt 1
 1787              	.LBB219:
 1788              	.LBB220:
 180:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1789              		.loc 2 180 5
GAS LISTING /tmp/ccJAxMsJ.s 			page 50


 181:src/../h/Riscv.hpp ****     return sstatus;
 1790              		.loc 2 181 5
 181:src/../h/Riscv.hpp ****     return sstatus;
 1791              		.loc 2 181 76 is_stmt 0
 1792              	#APP
 1793              	# 181 "src/../h/Riscv.hpp" 1
 1794              		csrr a5, sstatus
 1795              	# 0 "" 2
 1796              	#NO_APP
 1797 04d4 2338F4FA 		sd	a5,-80(s0)
 182:src/../h/Riscv.hpp **** }
 1798              		.loc 2 182 5 is_stmt 1
 182:src/../h/Riscv.hpp **** }
 1799              		.loc 2 182 12 is_stmt 0
 1800 04d8 033904FB 		ld	s2,-80(s0)
 1801              	.LVL125:
 1802              	.LBE220:
 1803              	.LBE219:
 248:src/Riscv.cpp ****             char c = __getc();
 1804              		.loc 1 248 13 is_stmt 1
 248:src/Riscv.cpp ****             char c = __getc();
 1805              		.loc 1 248 27 is_stmt 0
 1806 04dc 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1806      83B70700 
 1807              	.LVL126:
 1808              	.LBB221:
 1809              	.LBB222:
 129:src/../h/Riscv.hpp **** }
 1810              		.loc 2 129 5 is_stmt 1
 129:src/../h/Riscv.hpp **** }
 1811              		.loc 2 129 69 is_stmt 0
 1812              	#APP
 1813              	# 129 "src/../h/Riscv.hpp" 1
 1814              		csrw stvec, a5
 1815              	# 0 "" 2
 1816              	.LVL127:
 1817              	#NO_APP
 1818              	.LBE222:
 1819              	.LBE221:
 249:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1820              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1821              		.loc 1 249 28 is_stmt 0
 1822 04e8 97000000 		call	__getc@plt
 1822      E7800000 
 1823              	.LVL128:
 250:src/Riscv.cpp **** 
 1824              		.loc 1 250 13 is_stmt 1
 250:src/Riscv.cpp **** 
 1825              		.loc 1 250 27 is_stmt 0
 1826 04f0 17070000 		la	a4,_ZN5Riscv14supervisorTrapEv
 1826      03370700 
 1827              	.LVL129:
 1828              	.LBB223:
 1829              	.LBB224:
 129:src/../h/Riscv.hpp **** }
 1830              		.loc 2 129 5 is_stmt 1
GAS LISTING /tmp/ccJAxMsJ.s 			page 51


 129:src/../h/Riscv.hpp **** }
 1831              		.loc 2 129 69 is_stmt 0
 1832              	#APP
 1833              	# 129 "src/../h/Riscv.hpp" 1
 1834              		csrw stvec, a4
 1835              	# 0 "" 2
 1836              	.LVL130:
 1837              	#NO_APP
 1838              	.LBE224:
 1839              	.LBE223:
 252:src/Riscv.cpp **** 
 1840              		.loc 1 252 13 is_stmt 1
 252:src/Riscv.cpp **** 
 1841              		.loc 1 252 54 is_stmt 0
 1842              	#APP
 1843              	# 252 "src/Riscv.cpp" 1
 255:src/Riscv.cpp ****             w_sepc(sepc);
 1844              		mv a0, a0
 1845              	# 0 "" 2
 1846              		.loc 1 255 13 is_stmt 1
 1847              	.LVL131:
 1848              	#NO_APP
 1849              	.LBB225:
 1850              	.LBB226:
 187:src/../h/Riscv.hpp **** }
 1851              		.loc 2 187 5
 187:src/../h/Riscv.hpp **** }
 1852              		.loc 2 187 77 is_stmt 0
 1853              	#APP
 1854              	# 187 "src/../h/Riscv.hpp" 1
 1855              		csrw sstatus, s2
 1856              	# 0 "" 2
 1857              	.LVL132:
 1858              	#NO_APP
 1859              	.LBE226:
 1860              	.LBE225:
 256:src/Riscv.cpp ****         }
 1861              		.loc 1 256 13 is_stmt 1
 1862              	.LBB227:
 1863              	.LBB228:
 117:src/../h/Riscv.hpp **** }
 1864              		.loc 2 117 5
 117:src/../h/Riscv.hpp **** }
 1865              		.loc 2 117 65 is_stmt 0
 1866              	#APP
 1867              	# 117 "src/../h/Riscv.hpp" 1
 118:src/../h/Riscv.hpp **** 
 1868              		csrw sepc, s1
 1869              	# 0 "" 2
 1870              		.loc 2 118 1
 1871              	#NO_APP
 1872 0508 6FF05FC3 		j	.L3
 1873              	.LBE228:
 1874              	.LBE227:
 1875              	.LBE216:
 1876              	.LBE241:
 1877              	.LBE255:
GAS LISTING /tmp/ccJAxMsJ.s 			page 52


 1878              	.LBE280:
 1879              	.LBE300:
 1880              	.LBE315:
 1881              	.LBE331:
 1882              	.LBE348:
 1883              	.LBE366:
 1884              	.LBE385:
 1885              	.LBE397:
 1886              	.LBE410:
 1887              	.LBE431:
 1888              	.LBE448:
 1889              	.LBE465:
 1890              		.cfi_endproc
 1891              	.LFE55:
 1893              		.align	2
 1894              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1896              	_ZN5Riscv17handleTrapConsoleEv:
 1897              	.LFB56:
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp **** 
 283:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1898              		.loc 1 283 33 is_stmt 1
 1899              		.cfi_startproc
 1900 050c 130101FE 		addi	sp,sp,-32
 1901              		.cfi_def_cfa_offset 32
 1902 0510 233C1100 		sd	ra,24(sp)
 1903 0514 23388100 		sd	s0,16(sp)
 1904              		.cfi_offset 1, -8
 1905              		.cfi_offset 8, -16
 1906 0518 13040102 		addi	s0,sp,32
 1907              		.cfi_def_cfa 8, 0
 284:src/Riscv.cpp ****     uint64 scause = r_scause();
 1908              		.loc 1 284 5
 1909              	.LBB466:
 1910              	.LBB467:
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1911              		.loc 2 98 5
  99:src/../h/Riscv.hpp ****     return scause;
 1912              		.loc 2 99 5
  99:src/../h/Riscv.hpp ****     return scause;
 1913              		.loc 2 99 72 is_stmt 0
 1914              	#APP
 1915              	# 99 "src/../h/Riscv.hpp" 1
 1916              		csrr a5, scause
 1917              	# 0 "" 2
 1918              	#NO_APP
 1919 0520 2334F4FE 		sd	a5,-24(s0)
 100:src/../h/Riscv.hpp **** }
 1920              		.loc 2 100 5 is_stmt 1
 100:src/../h/Riscv.hpp **** }
 1921              		.loc 2 100 12 is_stmt 0
 1922 0524 033784FE 		ld	a4,-24(s0)
 1923              	.LVL133:
 1924              	.LBE467:
 1925              	.LBE466:
 285:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1926              		.loc 1 285 5 is_stmt 1
GAS LISTING /tmp/ccJAxMsJ.s 			page 53


 1927 0528 9307F0FF 		li	a5,-1
 1928 052c 9397F703 		slli	a5,a5,63
 1929 0530 93879700 		addi	a5,a5,9
 1930 0534 6302F702 		beq	a4,a5,.L52
 286:src/Riscv.cpp ****         console_handler();
 287:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 288:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1931              		.loc 1 288 12
 1932 0538 9307F0FF 		li	a5,-1
 1933 053c 9397F703 		slli	a5,a5,63
 1934 0540 93871700 		addi	a5,a5,1
 1935 0544 6304F702 		beq	a4,a5,.L53
 1936              	.LVL134:
 1937              	.L48:
 289:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 290:src/Riscv.cpp ****     }
 291:src/Riscv.cpp **** 
 292:src/Riscv.cpp **** }...
 1938              		.loc 1 292 1 is_stmt 0
 1939 0548 83308101 		ld	ra,24(sp)
 1940              		.cfi_remember_state
 1941              		.cfi_restore 1
 1942 054c 03340101 		ld	s0,16(sp)
 1943              		.cfi_restore 8
 1944              		.cfi_def_cfa 2, 32
 1945 0550 13010102 		addi	sp,sp,32
 1946              		.cfi_def_cfa_offset 0
 1947 0554 67800000 		jr	ra
 1948              	.LVL135:
 1949              	.L52:
 1950              		.cfi_restore_state
 286:src/Riscv.cpp ****         console_handler();
 1951              		.loc 1 286 9 is_stmt 1
 286:src/Riscv.cpp ****         console_handler();
 1952              		.loc 1 286 24 is_stmt 0
 1953 0558 97000000 		call	console_handler@plt
 1953      E7800000 
 1954              	.LVL136:
 287:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 1955              		.loc 1 287 9 is_stmt 1
 1956              	.LBB468:
 1957              	.LBB469:
 151:src/../h/Riscv.hpp **** }
 1958              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1959              		.loc 2 151 64 is_stmt 0
 1960 0560 93070020 		li	a5,512
 1961              	#APP
 1962              	# 151 "src/../h/Riscv.hpp" 1
 152:src/../h/Riscv.hpp **** 
 1963              		csrc sip, a5
 1964              	# 0 "" 2
 1965              		.loc 2 152 1
 1966              	#NO_APP
 1967 0568 6FF01FFE 		j	.L48
 1968              	.LVL137:
 1969              	.L53:
GAS LISTING /tmp/ccJAxMsJ.s 			page 54


 1970              	.LBE469:
 1971              	.LBE468:
 289:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 1972              		.loc 1 289 9 is_stmt 1
 1973              	.LBB470:
 1974              	.LBB471:
 151:src/../h/Riscv.hpp **** }
 1975              		.loc 2 151 5
 151:src/../h/Riscv.hpp **** }
 1976              		.loc 2 151 64 is_stmt 0
 1977 056c 93072000 		li	a5,2
 1978              	#APP
 1979              	# 151 "src/../h/Riscv.hpp" 1
 1980              		csrc sip, a5
 1981              	# 0 "" 2
 1982              	.LVL138:
 1983              	#NO_APP
 1984              	.LBE471:
 1985              	.LBE470:
 1986              		.loc 1 292 1
 1987 0574 6FF05FFD 		j	.L48
 1988              		.cfi_endproc
 1989              	.LFE56:
 1991              	.Letext0:
 1992              		.file 6 "src/../h/../lib/hw.h"
 1993              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1994              		.file 8 "src/../h/MemoryAllocator.hpp"
 1995              		.file 9 "src/../h/Scheduler.hpp"
 1996              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccJAxMsJ.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccJAxMsJ.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccJAxMsJ.s:13     .text:0000000000000000 .L0 
     /tmp/ccJAxMsJ.s:14     .text:0000000000000000 .L0 
     /tmp/ccJAxMsJ.s:15     .text:0000000000000004 .L0 
     /tmp/ccJAxMsJ.s:17     .text:0000000000000008 .L0 
     /tmp/ccJAxMsJ.s:19     .text:000000000000000c .L0 
     /tmp/ccJAxMsJ.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccJAxMsJ.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccJAxMsJ.s:33     .text:0000000000000014 .L0 
     /tmp/ccJAxMsJ.s:34     .text:0000000000000018 .L0 
     /tmp/ccJAxMsJ.s:35     .text:0000000000000018 .L0 
     /tmp/ccJAxMsJ.s:37     .text:000000000000001c .L0 
     /tmp/ccJAxMsJ.s:39     .text:0000000000000020 .L0 
     /tmp/ccJAxMsJ.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccJAxMsJ.s:48     .text:0000000000000020 .L0 
     /tmp/ccJAxMsJ.s:49     .text:0000000000000020 .L0 
     /tmp/ccJAxMsJ.s:50     .text:0000000000000024 .L0 
     /tmp/ccJAxMsJ.s:57     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:58     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:59     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:60     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:61     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:62     .text:000000000000003c .L0 
     /tmp/ccJAxMsJ.s:64     .text:0000000000000040 .L0 
     /tmp/ccJAxMsJ.s:69     .text:0000000000000040 .L0 
     /tmp/ccJAxMsJ.s:70     .text:0000000000000040 .L0 
     /tmp/ccJAxMsJ.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:99     .text:0000000000000040 .L0 
     /tmp/ccJAxMsJ.s:79     .text:0000000000000048 .L0 
     /tmp/ccJAxMsJ.s:80     .text:0000000000000048 .L0 
     /tmp/ccJAxMsJ.s:85     .text:000000000000004c .L0 
     /tmp/ccJAxMsJ.s:86     .text:000000000000004c .L0 
     /tmp/ccJAxMsJ.s:87     .text:000000000000004c .L0 
       src/Riscv.cpp:24     .text:000000000000004c .L0 
     /tmp/ccJAxMsJ.s:96     .text:0000000000000050 .L0 
     /tmp/ccJAxMsJ.s:104    .text:0000000000000060 .L0 
     /tmp/ccJAxMsJ.s:112    .text:0000000000000068 .L0 
     /tmp/ccJAxMsJ.s:124    .text:0000000000000078 .L0 
     /tmp/ccJAxMsJ.s:136    .text:0000000000000080 .L0 
     /tmp/ccJAxMsJ.s:151    .text:0000000000000088 .L0 
     /tmp/ccJAxMsJ.s:165    .text:0000000000000090 .L0 
     /tmp/ccJAxMsJ.s:181    .text:0000000000000098 .L0 
     /tmp/ccJAxMsJ.s:199    .text:00000000000000a0 .L0 
     /tmp/ccJAxMsJ.s:219    .text:00000000000000a8 .L0 
     /tmp/ccJAxMsJ.s:241    .text:00000000000000b0 .L0 
     /tmp/ccJAxMsJ.s:265    .text:00000000000000b8 .L0 
     /tmp/ccJAxMsJ.s:291    .text:00000000000000c0 .L0 
     /tmp/ccJAxMsJ.s:319    .text:00000000000000c8 .L0 
     /tmp/ccJAxMsJ.s:349    .text:00000000000000d0 .L0 
     /tmp/ccJAxMsJ.s:381    .text:00000000000000d8 .L0 
     /tmp/ccJAxMsJ.s:387    .text:00000000000000e0 .L0 
     /tmp/ccJAxMsJ.s:388    .text:00000000000000e0 .L0 
     /tmp/ccJAxMsJ.s:389    .text:00000000000000e0 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 56


  src/../h/Riscv.hpp:111    .text:00000000000000e0 .L0 
     /tmp/ccJAxMsJ.s:397    .text:00000000000000e8 .L0 
     /tmp/ccJAxMsJ.s:398    .text:00000000000000e8 .L0 
     /tmp/ccJAxMsJ.s:403    .text:00000000000000ec .L0 
     /tmp/ccJAxMsJ.s:408    .text:00000000000000f0 .L0 
     /tmp/ccJAxMsJ.s:409    .text:00000000000000f0 .L0 
     /tmp/ccJAxMsJ.s:410    .text:00000000000000f0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000000f0 .L0 
     /tmp/ccJAxMsJ.s:418    .text:00000000000000f8 .L0 
     /tmp/ccJAxMsJ.s:419    .text:00000000000000f8 .L0 
     /tmp/ccJAxMsJ.s:424    .text:00000000000000fc .L0 
     /tmp/ccJAxMsJ.s:425    .text:00000000000000fc .L0 
       src/Riscv.cpp:263    .text:00000000000000fc .L0 
     /tmp/ccJAxMsJ.s:431    .text:0000000000000100 .L0 
       src/Riscv.cpp:265    .text:0000000000000100 .L0 
     /tmp/ccJAxMsJ.s:439    .text:0000000000000108 .L0 
     /tmp/ccJAxMsJ.s:440    .text:0000000000000108 .L0 
     /tmp/ccJAxMsJ.s:445    .text:0000000000000110 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000110 .L0 
     /tmp/ccJAxMsJ.s:455    .text:0000000000000114 .L0 
     /tmp/ccJAxMsJ.s:456    .text:0000000000000114 .L0 
     /tmp/ccJAxMsJ.s:459    .text:000000000000011c .L0 
     /tmp/ccJAxMsJ.s:460    .text:000000000000011c .L0 
     /tmp/ccJAxMsJ.s:465    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:129    .text:0000000000000124 .L0 
     /tmp/ccJAxMsJ.s:477    .text:0000000000000128 .L0 
     /tmp/ccJAxMsJ.s:478    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000128 .L0 
     /tmp/ccJAxMsJ.s:490    .text:000000000000012c .L0 
     /tmp/ccJAxMsJ.s:491    .text:000000000000012c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000012c .L0 
     /tmp/ccJAxMsJ.s:517    .text:0000000000000130 .L0 
     /tmp/ccJAxMsJ.s:524    .text:0000000000000134 .L0 
     /tmp/ccJAxMsJ.s:525    .text:0000000000000134 .L0 
     /tmp/ccJAxMsJ.s:526    .text:0000000000000134 .L0 
     /tmp/ccJAxMsJ.s:538    .text:000000000000013c .L0 
     /tmp/ccJAxMsJ.s:539    .text:0000000000000140 .L0 
     /tmp/ccJAxMsJ.s:540    .text:0000000000000140 .L0 
     /tmp/ccJAxMsJ.s:542    .text:0000000000000144 .L0 
     /tmp/ccJAxMsJ.s:543    .text:0000000000000144 .L0 
     /tmp/ccJAxMsJ.s:545    .text:0000000000000148 .L0 
     /tmp/ccJAxMsJ.s:547    .text:000000000000014c .L0 
     /tmp/ccJAxMsJ.s:549    .text:0000000000000150 .L0 
     /tmp/ccJAxMsJ.s:551    .text:0000000000000154 .L0 
     /tmp/ccJAxMsJ.s:553    .text:0000000000000158 .L0 
     /tmp/ccJAxMsJ.s:557    .text:000000000000015c .L0 
     /tmp/ccJAxMsJ.s:564    .text:000000000000015c .L0 
     /tmp/ccJAxMsJ.s:565    .text:000000000000015c .L0 
     /tmp/ccJAxMsJ.s:566    .text:000000000000015c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000015c .L0 
     /tmp/ccJAxMsJ.s:574    .text:0000000000000164 .L0 
     /tmp/ccJAxMsJ.s:575    .text:0000000000000164 .L0 
     /tmp/ccJAxMsJ.s:582    .text:0000000000000168 .L0 
     /tmp/ccJAxMsJ.s:583    .text:0000000000000168 .L0 
     /tmp/ccJAxMsJ.s:584    .text:0000000000000168 .L0 
     /tmp/ccJAxMsJ.s:595    .text:0000000000000170 .L0 
     /tmp/ccJAxMsJ.s:596    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 57


     /tmp/ccJAxMsJ.s:601    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000174 .L0 
     /tmp/ccJAxMsJ.s:608    .text:0000000000000178 .L0 
     /tmp/ccJAxMsJ.s:616    .text:000000000000017c .L0 
     /tmp/ccJAxMsJ.s:617    .text:000000000000017c .L0 
     /tmp/ccJAxMsJ.s:628    .text:0000000000000188 .L0 
     /tmp/ccJAxMsJ.s:629    .text:0000000000000188 .L0 
     /tmp/ccJAxMsJ.s:630    .text:0000000000000188 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000188 .L0 
     /tmp/ccJAxMsJ.s:638    .text:0000000000000190 .L0 
     /tmp/ccJAxMsJ.s:639    .text:0000000000000190 .L0 
     /tmp/ccJAxMsJ.s:643    .text:0000000000000194 .L0 
     /tmp/ccJAxMsJ.s:648    .text:0000000000000198 .L0 
     /tmp/ccJAxMsJ.s:649    .text:0000000000000198 .L0 
     /tmp/ccJAxMsJ.s:650    .text:0000000000000198 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000198 .L0 
     /tmp/ccJAxMsJ.s:658    .text:00000000000001a0 .L0 
     /tmp/ccJAxMsJ.s:659    .text:00000000000001a0 .L0 
     /tmp/ccJAxMsJ.s:664    .text:00000000000001a4 .L0 
     /tmp/ccJAxMsJ.s:665    .text:00000000000001a4 .L0 
     /tmp/ccJAxMsJ.s:666    .text:00000000000001a4 .L0 
     /tmp/ccJAxMsJ.s:667    .text:00000000000001a4 .L0 
     /tmp/ccJAxMsJ.s:668    .text:00000000000001a4 .L0 
       src/Riscv.cpp:54     .text:00000000000001a4 .L0 
     /tmp/ccJAxMsJ.s:674    .text:00000000000001a8 .L0 
       src/Riscv.cpp:55     .text:00000000000001a8 .L0 
     /tmp/ccJAxMsJ.s:679    .text:00000000000001ac .L0 
       src/Riscv.cpp:56     .text:00000000000001ac .L0 
     /tmp/ccJAxMsJ.s:684    .text:00000000000001b0 .L0 
       src/Riscv.cpp:57     .text:00000000000001b0 .L0 
     /tmp/ccJAxMsJ.s:689    .text:00000000000001b4 .L0 
       src/Riscv.cpp:60     .text:00000000000001b4 .L0 
     /tmp/ccJAxMsJ.s:695    .text:00000000000001b8 .L0 
       src/Riscv.cpp:61     .text:00000000000001b8 .L0 
     /tmp/ccJAxMsJ.s:701    .text:00000000000001bc .L0 
       src/Riscv.cpp:62     .text:00000000000001bc .L0 
     /tmp/ccJAxMsJ.s:707    .text:00000000000001c0 .L0 
       src/Riscv.cpp:63     .text:00000000000001c0 .L0 
     /tmp/ccJAxMsJ.s:713    .text:00000000000001c4 .L0 
     /tmp/ccJAxMsJ.s:715    .text:00000000000001c4 .L0 
     /tmp/ccJAxMsJ.s:718    .text:00000000000001cc .L0 
     /tmp/ccJAxMsJ.s:719    .text:00000000000001cc .L0 
     /tmp/ccJAxMsJ.s:721    .text:00000000000001d0 .L0 
     /tmp/ccJAxMsJ.s:722    .text:00000000000001d0 .L0 
     /tmp/ccJAxMsJ.s:724    .text:00000000000001d4 .L0 
     /tmp/ccJAxMsJ.s:728    .text:00000000000001d8 .L0 
       src/Riscv.cpp:75     .text:00000000000001d8 .L0 
     /tmp/ccJAxMsJ.s:738    .text:00000000000001dc .L0 
     /tmp/ccJAxMsJ.s:739    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:187    .text:00000000000001dc .L0 
     /tmp/ccJAxMsJ.s:751    .text:00000000000001e0 .L0 
     /tmp/ccJAxMsJ.s:752    .text:00000000000001e0 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000001e0 .L0 
     /tmp/ccJAxMsJ.s:759    .text:00000000000001e4 .L0 
     /tmp/ccJAxMsJ.s:765    .text:00000000000001e8 .L0 
     /tmp/ccJAxMsJ.s:776    .text:00000000000001f0 .L0 
     /tmp/ccJAxMsJ.s:777    .text:00000000000001f0 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 58


     /tmp/ccJAxMsJ.s:778    .text:00000000000001f0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000001f0 .L0 
     /tmp/ccJAxMsJ.s:786    .text:00000000000001f8 .L0 
     /tmp/ccJAxMsJ.s:787    .text:00000000000001f8 .L0 
     /tmp/ccJAxMsJ.s:792    .text:00000000000001fc .L0 
     /tmp/ccJAxMsJ.s:797    .text:0000000000000200 .L0 
     /tmp/ccJAxMsJ.s:798    .text:0000000000000200 .L0 
     /tmp/ccJAxMsJ.s:799    .text:0000000000000200 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000200 .L0 
     /tmp/ccJAxMsJ.s:807    .text:0000000000000208 .L0 
     /tmp/ccJAxMsJ.s:808    .text:0000000000000208 .L0 
     /tmp/ccJAxMsJ.s:813    .text:000000000000020c .L0 
       src/Riscv.cpp:84     .text:000000000000020c .L0 
     /tmp/ccJAxMsJ.s:819    .text:0000000000000210 .L0 
       src/Riscv.cpp:86     .text:0000000000000210 .L0 
     /tmp/ccJAxMsJ.s:825    .text:0000000000000214 .L0 
     /tmp/ccJAxMsJ.s:827    .text:0000000000000214 .L0 
     /tmp/ccJAxMsJ.s:832    .text:0000000000000220 .L0 
       src/Riscv.cpp:90     .text:0000000000000220 .L0 
     /tmp/ccJAxMsJ.s:842    .text:0000000000000224 .L0 
     /tmp/ccJAxMsJ.s:843    .text:0000000000000224 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000224 .L0 
     /tmp/ccJAxMsJ.s:855    .text:0000000000000228 .L0 
     /tmp/ccJAxMsJ.s:856    .text:0000000000000228 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000228 .L0 
     /tmp/ccJAxMsJ.s:863    .text:000000000000022c .L0 
     /tmp/ccJAxMsJ.s:874    .text:0000000000000230 .L0 
     /tmp/ccJAxMsJ.s:875    .text:0000000000000230 .L0 
     /tmp/ccJAxMsJ.s:876    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000230 .L0 
     /tmp/ccJAxMsJ.s:884    .text:0000000000000238 .L0 
     /tmp/ccJAxMsJ.s:885    .text:0000000000000238 .L0 
     /tmp/ccJAxMsJ.s:890    .text:000000000000023c .L0 
     /tmp/ccJAxMsJ.s:895    .text:0000000000000240 .L0 
     /tmp/ccJAxMsJ.s:896    .text:0000000000000240 .L0 
     /tmp/ccJAxMsJ.s:897    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000240 .L0 
     /tmp/ccJAxMsJ.s:905    .text:0000000000000248 .L0 
     /tmp/ccJAxMsJ.s:906    .text:0000000000000248 .L0 
     /tmp/ccJAxMsJ.s:911    .text:000000000000024c .L0 
       src/Riscv.cpp:99     .text:000000000000024c .L0 
     /tmp/ccJAxMsJ.s:917    .text:0000000000000250 .L0 
       src/Riscv.cpp:101    .text:0000000000000250 .L0 
     /tmp/ccJAxMsJ.s:923    .text:0000000000000254 .L0 
     /tmp/ccJAxMsJ.s:925    .text:0000000000000254 .L0 
     /tmp/ccJAxMsJ.s:928    .text:000000000000025c .L0 
       src/Riscv.cpp:103    .text:000000000000025c .L0 
     /tmp/ccJAxMsJ.s:938    .text:0000000000000260 .L0 
     /tmp/ccJAxMsJ.s:939    .text:0000000000000260 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000260 .L0 
     /tmp/ccJAxMsJ.s:951    .text:0000000000000264 .L0 
     /tmp/ccJAxMsJ.s:952    .text:0000000000000264 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000264 .L0 
     /tmp/ccJAxMsJ.s:959    .text:0000000000000268 .L0 
     /tmp/ccJAxMsJ.s:970    .text:000000000000026c .L0 
     /tmp/ccJAxMsJ.s:971    .text:000000000000026c .L0 
     /tmp/ccJAxMsJ.s:972    .text:000000000000026c .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 59


  src/../h/Riscv.hpp:111    .text:000000000000026c .L0 
     /tmp/ccJAxMsJ.s:980    .text:0000000000000274 .L0 
     /tmp/ccJAxMsJ.s:981    .text:0000000000000274 .L0 
     /tmp/ccJAxMsJ.s:986    .text:0000000000000278 .L0 
     /tmp/ccJAxMsJ.s:991    .text:000000000000027c .L0 
     /tmp/ccJAxMsJ.s:992    .text:000000000000027c .L0 
     /tmp/ccJAxMsJ.s:993    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000027c .L0 
     /tmp/ccJAxMsJ.s:1001   .text:0000000000000284 .L0 
     /tmp/ccJAxMsJ.s:1002   .text:0000000000000284 .L0 
     /tmp/ccJAxMsJ.s:1007   .text:0000000000000288 .L0 
     /tmp/ccJAxMsJ.s:1008   .text:0000000000000288 .L0 
     /tmp/ccJAxMsJ.s:1011   .text:0000000000000294 .L0 
     /tmp/ccJAxMsJ.s:1014   .text:000000000000029c .L0 
     /tmp/ccJAxMsJ.s:1015   .text:000000000000029c .L0 
     /tmp/ccJAxMsJ.s:1020   .text:00000000000002a4 .L0 
     /tmp/ccJAxMsJ.s:1021   .text:00000000000002a4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002a4 .L0 
     /tmp/ccJAxMsJ.s:1033   .text:00000000000002a8 .L0 
     /tmp/ccJAxMsJ.s:1034   .text:00000000000002a8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002a8 .L0 
     /tmp/ccJAxMsJ.s:1041   .text:00000000000002ac .L0 
     /tmp/ccJAxMsJ.s:1052   .text:00000000000002b0 .L0 
     /tmp/ccJAxMsJ.s:1053   .text:00000000000002b0 .L0 
     /tmp/ccJAxMsJ.s:1054   .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002b0 .L0 
     /tmp/ccJAxMsJ.s:1062   .text:00000000000002b8 .L0 
     /tmp/ccJAxMsJ.s:1063   .text:00000000000002b8 .L0 
     /tmp/ccJAxMsJ.s:1068   .text:00000000000002bc .L0 
     /tmp/ccJAxMsJ.s:1073   .text:00000000000002c0 .L0 
     /tmp/ccJAxMsJ.s:1074   .text:00000000000002c0 .L0 
     /tmp/ccJAxMsJ.s:1075   .text:00000000000002c0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002c0 .L0 
     /tmp/ccJAxMsJ.s:1083   .text:00000000000002c8 .L0 
     /tmp/ccJAxMsJ.s:1084   .text:00000000000002c8 .L0 
     /tmp/ccJAxMsJ.s:1089   .text:00000000000002cc .L0 
     /tmp/ccJAxMsJ.s:1090   .text:00000000000002cc .L0 
     /tmp/ccJAxMsJ.s:1095   .text:00000000000002d4 .L0 
     /tmp/ccJAxMsJ.s:1096   .text:00000000000002d4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000002d4 .L0 
     /tmp/ccJAxMsJ.s:1108   .text:00000000000002d8 .L0 
     /tmp/ccJAxMsJ.s:1109   .text:00000000000002d8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000002d8 .L0 
     /tmp/ccJAxMsJ.s:1116   .text:00000000000002dc .L0 
     /tmp/ccJAxMsJ.s:1127   .text:00000000000002e0 .L0 
     /tmp/ccJAxMsJ.s:1128   .text:00000000000002e0 .L0 
     /tmp/ccJAxMsJ.s:1129   .text:00000000000002e0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000002e0 .L0 
     /tmp/ccJAxMsJ.s:1137   .text:00000000000002e8 .L0 
     /tmp/ccJAxMsJ.s:1138   .text:00000000000002e8 .L0 
     /tmp/ccJAxMsJ.s:1143   .text:00000000000002ec .L0 
     /tmp/ccJAxMsJ.s:1148   .text:00000000000002f0 .L0 
     /tmp/ccJAxMsJ.s:1149   .text:00000000000002f0 .L0 
     /tmp/ccJAxMsJ.s:1150   .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000002f0 .L0 
     /tmp/ccJAxMsJ.s:1158   .text:00000000000002f8 .L0 
     /tmp/ccJAxMsJ.s:1159   .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 60


     /tmp/ccJAxMsJ.s:1164   .text:00000000000002fc .L0 
     /tmp/ccJAxMsJ.s:1165   .text:00000000000002fc .L0 
     /tmp/ccJAxMsJ.s:1168   .text:0000000000000308 .L0 
     /tmp/ccJAxMsJ.s:1169   .text:0000000000000308 .L0 
     /tmp/ccJAxMsJ.s:1174   .text:0000000000000310 .L0 
     /tmp/ccJAxMsJ.s:1175   .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000310 .L0 
     /tmp/ccJAxMsJ.s:1187   .text:0000000000000314 .L0 
     /tmp/ccJAxMsJ.s:1188   .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000314 .L0 
     /tmp/ccJAxMsJ.s:1195   .text:0000000000000318 .L0 
     /tmp/ccJAxMsJ.s:1206   .text:000000000000031c .L0 
     /tmp/ccJAxMsJ.s:1207   .text:000000000000031c .L0 
     /tmp/ccJAxMsJ.s:1208   .text:000000000000031c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000031c .L0 
     /tmp/ccJAxMsJ.s:1216   .text:0000000000000324 .L0 
     /tmp/ccJAxMsJ.s:1217   .text:0000000000000324 .L0 
     /tmp/ccJAxMsJ.s:1222   .text:0000000000000328 .L0 
     /tmp/ccJAxMsJ.s:1227   .text:000000000000032c .L0 
     /tmp/ccJAxMsJ.s:1228   .text:000000000000032c .L0 
     /tmp/ccJAxMsJ.s:1229   .text:000000000000032c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000032c .L0 
     /tmp/ccJAxMsJ.s:1237   .text:0000000000000334 .L0 
     /tmp/ccJAxMsJ.s:1238   .text:0000000000000334 .L0 
     /tmp/ccJAxMsJ.s:1243   .text:0000000000000338 .L0 
     /tmp/ccJAxMsJ.s:1244   .text:0000000000000338 .L0 
     /tmp/ccJAxMsJ.s:1245   .text:0000000000000338 .L0 
       src/Riscv.cpp:151    .text:0000000000000338 .L0 
     /tmp/ccJAxMsJ.s:1251   .text:000000000000033c .L0 
       src/Riscv.cpp:152    .text:000000000000033c .L0 
     /tmp/ccJAxMsJ.s:1256   .text:0000000000000340 .L0 
       src/Riscv.cpp:154    .text:0000000000000340 .L0 
     /tmp/ccJAxMsJ.s:1262   .text:0000000000000344 .L0 
       src/Riscv.cpp:155    .text:0000000000000344 .L0 
     /tmp/ccJAxMsJ.s:1268   .text:0000000000000348 .L0 
     /tmp/ccJAxMsJ.s:1270   .text:0000000000000348 .L0 
     /tmp/ccJAxMsJ.s:1277   .text:0000000000000354 .L0 
     /tmp/ccJAxMsJ.s:1283   .text:0000000000000358 .L0 
     /tmp/ccJAxMsJ.s:1293   .text:0000000000000360 .L0 
     /tmp/ccJAxMsJ.s:1294   .text:0000000000000360 .L0 
     /tmp/ccJAxMsJ.s:1295   .text:0000000000000360 .L0 
     /tmp/ccJAxMsJ.s:1301   .text:0000000000000368 .L0 
     /tmp/ccJAxMsJ.s:1302   .text:0000000000000368 .L0 
     /tmp/ccJAxMsJ.s:1305   .text:000000000000036c .L0 
     /tmp/ccJAxMsJ.s:1306   .text:000000000000036c .L0 
     /tmp/ccJAxMsJ.s:1308   .text:0000000000000370 .L0 
     /tmp/ccJAxMsJ.s:1312   .text:0000000000000374 .L0 
       src/Riscv.cpp:165    .text:0000000000000374 .L0 
     /tmp/ccJAxMsJ.s:1322   .text:0000000000000378 .L0 
     /tmp/ccJAxMsJ.s:1323   .text:0000000000000378 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000378 .L0 
     /tmp/ccJAxMsJ.s:1335   .text:000000000000037c .L0 
     /tmp/ccJAxMsJ.s:1336   .text:000000000000037c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000037c .L0 
     /tmp/ccJAxMsJ.s:1343   .text:0000000000000380 .L0 
     /tmp/ccJAxMsJ.s:1349   .text:0000000000000384 .L0 
     /tmp/ccJAxMsJ.s:1359   .text:000000000000038c .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 61


     /tmp/ccJAxMsJ.s:1360   .text:000000000000038c .L0 
     /tmp/ccJAxMsJ.s:1361   .text:000000000000038c .L0 
  src/../h/Riscv.hpp:111    .text:000000000000038c .L0 
     /tmp/ccJAxMsJ.s:1369   .text:0000000000000394 .L0 
     /tmp/ccJAxMsJ.s:1370   .text:0000000000000394 .L0 
     /tmp/ccJAxMsJ.s:1374   .text:0000000000000398 .L0 
     /tmp/ccJAxMsJ.s:1379   .text:000000000000039c .L0 
     /tmp/ccJAxMsJ.s:1380   .text:000000000000039c .L0 
     /tmp/ccJAxMsJ.s:1381   .text:000000000000039c .L0 
  src/../h/Riscv.hpp:181    .text:000000000000039c .L0 
     /tmp/ccJAxMsJ.s:1389   .text:00000000000003a4 .L0 
     /tmp/ccJAxMsJ.s:1390   .text:00000000000003a4 .L0 
     /tmp/ccJAxMsJ.s:1395   .text:00000000000003a8 .L0 
     /tmp/ccJAxMsJ.s:1396   .text:00000000000003a8 .L0 
       src/Riscv.cpp:177    .text:00000000000003a8 .L0 
     /tmp/ccJAxMsJ.s:1402   .text:00000000000003ac .L0 
       src/Riscv.cpp:179    .text:00000000000003ac .L0 
     /tmp/ccJAxMsJ.s:1409   .text:00000000000003b0 .L0 
     /tmp/ccJAxMsJ.s:1416   .text:00000000000003b4 .L0 
     /tmp/ccJAxMsJ.s:1419   .text:00000000000003b8 .L0 
     /tmp/ccJAxMsJ.s:1427   .text:00000000000003c0 .L0 
     /tmp/ccJAxMsJ.s:1428   .text:00000000000003c0 .L0 
     /tmp/ccJAxMsJ.s:1429   .text:00000000000003c0 .L0 
     /tmp/ccJAxMsJ.s:1435   .text:00000000000003c8 .L0 
     /tmp/ccJAxMsJ.s:1436   .text:00000000000003c8 .L0 
     /tmp/ccJAxMsJ.s:1438   .text:00000000000003cc .L0 
     /tmp/ccJAxMsJ.s:1441   .text:00000000000003d4 .L0 
     /tmp/ccJAxMsJ.s:1442   .text:00000000000003d4 .L0 
     /tmp/ccJAxMsJ.s:1448   .text:00000000000003e0 .L0 
     /tmp/ccJAxMsJ.s:1451   .text:00000000000003e0 .L0 
     /tmp/ccJAxMsJ.s:1452   .text:00000000000003e0 .L0 
     /tmp/ccJAxMsJ.s:1454   .text:00000000000003e4 .L0 
     /tmp/ccJAxMsJ.s:1456   .text:00000000000003e8 .L0 
     /tmp/ccJAxMsJ.s:1461   .text:00000000000003ec .L0 
     /tmp/ccJAxMsJ.s:1467   .text:00000000000003f0 .L0 
     /tmp/ccJAxMsJ.s:1468   .text:00000000000003f0 .L0 
     /tmp/ccJAxMsJ.s:1470   .text:00000000000003f4 .L0 
     /tmp/ccJAxMsJ.s:1472   .text:00000000000003f8 .L0 
     /tmp/ccJAxMsJ.s:1474   .text:00000000000003fc .L0 
     /tmp/ccJAxMsJ.s:1484   .text:0000000000000404 .L0 
     /tmp/ccJAxMsJ.s:1485   .text:0000000000000404 .L0 
     /tmp/ccJAxMsJ.s:1486   .text:0000000000000404 .L0 
     /tmp/ccJAxMsJ.s:1491   .text:0000000000000408 .L0 
     /tmp/ccJAxMsJ.s:1492   .text:0000000000000408 .L0 
     /tmp/ccJAxMsJ.s:1494   .text:000000000000040c .L0 
     /tmp/ccJAxMsJ.s:1501   .text:0000000000000418 .L0 
     /tmp/ccJAxMsJ.s:1502   .text:0000000000000418 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000418 .L0 
     /tmp/ccJAxMsJ.s:1514   .text:000000000000041c .L0 
     /tmp/ccJAxMsJ.s:1515   .text:000000000000041c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000041c .L0 
     /tmp/ccJAxMsJ.s:1522   .text:0000000000000420 .L0 
     /tmp/ccJAxMsJ.s:1533   .text:0000000000000424 .L0 
     /tmp/ccJAxMsJ.s:1534   .text:0000000000000424 .L0 
     /tmp/ccJAxMsJ.s:1535   .text:0000000000000424 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000424 .L0 
     /tmp/ccJAxMsJ.s:1543   .text:000000000000042c .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 62


     /tmp/ccJAxMsJ.s:1544   .text:000000000000042c .L0 
     /tmp/ccJAxMsJ.s:1549   .text:0000000000000430 .L0 
     /tmp/ccJAxMsJ.s:1554   .text:0000000000000434 .L0 
     /tmp/ccJAxMsJ.s:1555   .text:0000000000000434 .L0 
     /tmp/ccJAxMsJ.s:1556   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000434 .L0 
     /tmp/ccJAxMsJ.s:1564   .text:000000000000043c .L0 
     /tmp/ccJAxMsJ.s:1565   .text:000000000000043c .L0 
     /tmp/ccJAxMsJ.s:1570   .text:0000000000000440 .L0 
     /tmp/ccJAxMsJ.s:1571   .text:0000000000000440 .L0 
       src/Riscv.cpp:202    .text:0000000000000440 .L0 
     /tmp/ccJAxMsJ.s:1577   .text:0000000000000444 .L0 
       src/Riscv.cpp:204    .text:0000000000000444 .L0 
     /tmp/ccJAxMsJ.s:1583   .text:0000000000000448 .L0 
     /tmp/ccJAxMsJ.s:1587   .text:0000000000000448 .L0 
     /tmp/ccJAxMsJ.s:1588   .text:0000000000000448 .L0 
     /tmp/ccJAxMsJ.s:1589   .text:0000000000000448 .L0 
     /tmp/ccJAxMsJ.s:1594   .text:000000000000044c .L0 
     /tmp/ccJAxMsJ.s:1596   .text:0000000000000450 .L0 
     /tmp/ccJAxMsJ.s:1600   .text:0000000000000454 .L0 
       src/Riscv.cpp:214    .text:0000000000000454 .L0 
     /tmp/ccJAxMsJ.s:1610   .text:0000000000000458 .L0 
     /tmp/ccJAxMsJ.s:1611   .text:0000000000000458 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000458 .L0 
     /tmp/ccJAxMsJ.s:1623   .text:000000000000045c .L0 
     /tmp/ccJAxMsJ.s:1624   .text:000000000000045c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000045c .L0 
     /tmp/ccJAxMsJ.s:1631   .text:0000000000000460 .L0 
     /tmp/ccJAxMsJ.s:1637   .text:0000000000000464 .L0 
     /tmp/ccJAxMsJ.s:1638   .text:0000000000000464 .L0 
     /tmp/ccJAxMsJ.s:1649   .text:0000000000000470 .L0 
     /tmp/ccJAxMsJ.s:1650   .text:0000000000000470 .L0 
     /tmp/ccJAxMsJ.s:1651   .text:0000000000000470 .L0 
  src/../h/Riscv.hpp:111    .text:0000000000000470 .L0 
     /tmp/ccJAxMsJ.s:1659   .text:0000000000000478 .L0 
     /tmp/ccJAxMsJ.s:1660   .text:0000000000000478 .L0 
     /tmp/ccJAxMsJ.s:1665   .text:000000000000047c .L0 
     /tmp/ccJAxMsJ.s:1670   .text:0000000000000480 .L0 
     /tmp/ccJAxMsJ.s:1671   .text:0000000000000480 .L0 
     /tmp/ccJAxMsJ.s:1672   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:181    .text:0000000000000480 .L0 
     /tmp/ccJAxMsJ.s:1680   .text:0000000000000488 .L0 
     /tmp/ccJAxMsJ.s:1681   .text:0000000000000488 .L0 
     /tmp/ccJAxMsJ.s:1686   .text:000000000000048c .L0 
     /tmp/ccJAxMsJ.s:1687   .text:000000000000048c .L0 
       src/Riscv.cpp:225    .text:000000000000048c .L0 
     /tmp/ccJAxMsJ.s:1693   .text:0000000000000490 .L0 
       src/Riscv.cpp:227    .text:0000000000000490 .L0 
     /tmp/ccJAxMsJ.s:1699   .text:0000000000000494 .L0 
     /tmp/ccJAxMsJ.s:1703   .text:0000000000000494 .L0 
     /tmp/ccJAxMsJ.s:1704   .text:0000000000000494 .L0 
     /tmp/ccJAxMsJ.s:1705   .text:0000000000000494 .L0 
     /tmp/ccJAxMsJ.s:1710   .text:0000000000000498 .L0 
     /tmp/ccJAxMsJ.s:1712   .text:000000000000049c .L0 
     /tmp/ccJAxMsJ.s:1716   .text:00000000000004a0 .L0 
       src/Riscv.cpp:238    .text:00000000000004a0 .L0 
     /tmp/ccJAxMsJ.s:1726   .text:00000000000004a4 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 63


     /tmp/ccJAxMsJ.s:1727   .text:00000000000004a4 .L0 
  src/../h/Riscv.hpp:187    .text:00000000000004a4 .L0 
     /tmp/ccJAxMsJ.s:1739   .text:00000000000004a8 .L0 
     /tmp/ccJAxMsJ.s:1740   .text:00000000000004a8 .L0 
  src/../h/Riscv.hpp:117    .text:00000000000004a8 .L0 
     /tmp/ccJAxMsJ.s:1747   .text:00000000000004ac .L0 
     /tmp/ccJAxMsJ.s:1753   .text:00000000000004b0 .L0 
     /tmp/ccJAxMsJ.s:1754   .text:00000000000004b0 .L0 
     /tmp/ccJAxMsJ.s:1757   .text:00000000000004b8 .L0 
     /tmp/ccJAxMsJ.s:1758   .text:00000000000004b8 .L0 
     /tmp/ccJAxMsJ.s:1768   .text:00000000000004c0 .L0 
     /tmp/ccJAxMsJ.s:1769   .text:00000000000004c0 .L0 
     /tmp/ccJAxMsJ.s:1770   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:111    .text:00000000000004c0 .L0 
     /tmp/ccJAxMsJ.s:1778   .text:00000000000004c8 .L0 
     /tmp/ccJAxMsJ.s:1779   .text:00000000000004c8 .L0 
     /tmp/ccJAxMsJ.s:1784   .text:00000000000004cc .L0 
     /tmp/ccJAxMsJ.s:1789   .text:00000000000004d0 .L0 
     /tmp/ccJAxMsJ.s:1790   .text:00000000000004d0 .L0 
     /tmp/ccJAxMsJ.s:1791   .text:00000000000004d0 .L0 
  src/../h/Riscv.hpp:181    .text:00000000000004d0 .L0 
     /tmp/ccJAxMsJ.s:1799   .text:00000000000004d8 .L0 
     /tmp/ccJAxMsJ.s:1800   .text:00000000000004d8 .L0 
     /tmp/ccJAxMsJ.s:1805   .text:00000000000004dc .L0 
     /tmp/ccJAxMsJ.s:1806   .text:00000000000004dc .L0 
     /tmp/ccJAxMsJ.s:1811   .text:00000000000004e4 .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004e4 .L0 
     /tmp/ccJAxMsJ.s:1821   .text:00000000000004e8 .L0 
     /tmp/ccJAxMsJ.s:1822   .text:00000000000004e8 .L0 
     /tmp/ccJAxMsJ.s:1825   .text:00000000000004f0 .L0 
     /tmp/ccJAxMsJ.s:1826   .text:00000000000004f0 .L0 
     /tmp/ccJAxMsJ.s:1831   .text:00000000000004f8 .L0 
  src/../h/Riscv.hpp:129    .text:00000000000004f8 .L0 
     /tmp/ccJAxMsJ.s:1841   .text:00000000000004fc .L0 
       src/Riscv.cpp:252    .text:00000000000004fc .L0 
     /tmp/ccJAxMsJ.s:1851   .text:0000000000000500 .L0 
     /tmp/ccJAxMsJ.s:1852   .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:187    .text:0000000000000500 .L0 
     /tmp/ccJAxMsJ.s:1864   .text:0000000000000504 .L0 
     /tmp/ccJAxMsJ.s:1865   .text:0000000000000504 .L0 
  src/../h/Riscv.hpp:117    .text:0000000000000504 .L0 
     /tmp/ccJAxMsJ.s:1872   .text:0000000000000508 .L0 
     /tmp/ccJAxMsJ.s:1890   .text:000000000000050c .L0 
     /tmp/ccJAxMsJ.s:1896   .text:000000000000050c _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccJAxMsJ.s:1899   .text:000000000000050c .L0 
     /tmp/ccJAxMsJ.s:1900   .text:000000000000050c .L0 
     /tmp/ccJAxMsJ.s:1901   .text:0000000000000510 .L0 
     /tmp/ccJAxMsJ.s:1904   .text:0000000000000518 .L0 
     /tmp/ccJAxMsJ.s:1905   .text:0000000000000518 .L0 
     /tmp/ccJAxMsJ.s:1907   .text:000000000000051c .L0 
     /tmp/ccJAxMsJ.s:1911   .text:000000000000051c .L0 
     /tmp/ccJAxMsJ.s:1912   .text:000000000000051c .L0 
     /tmp/ccJAxMsJ.s:1913   .text:000000000000051c .L0 
  src/../h/Riscv.hpp:99     .text:000000000000051c .L0 
     /tmp/ccJAxMsJ.s:1921   .text:0000000000000524 .L0 
     /tmp/ccJAxMsJ.s:1922   .text:0000000000000524 .L0 
     /tmp/ccJAxMsJ.s:1927   .text:0000000000000528 .L0 
GAS LISTING /tmp/ccJAxMsJ.s 			page 64


     /tmp/ccJAxMsJ.s:1932   .text:0000000000000538 .L0 
     /tmp/ccJAxMsJ.s:1939   .text:0000000000000548 .L0 
     /tmp/ccJAxMsJ.s:1940   .text:000000000000054c .L0 
     /tmp/ccJAxMsJ.s:1941   .text:000000000000054c .L0 
     /tmp/ccJAxMsJ.s:1943   .text:0000000000000550 .L0 
     /tmp/ccJAxMsJ.s:1944   .text:0000000000000550 .L0 
     /tmp/ccJAxMsJ.s:1946   .text:0000000000000554 .L0 
     /tmp/ccJAxMsJ.s:1950   .text:0000000000000558 .L0 
     /tmp/ccJAxMsJ.s:1952   .text:0000000000000558 .L0 
     /tmp/ccJAxMsJ.s:1953   .text:0000000000000558 .L0 
     /tmp/ccJAxMsJ.s:1958   .text:0000000000000560 .L0 
     /tmp/ccJAxMsJ.s:1959   .text:0000000000000560 .L0 
     /tmp/ccJAxMsJ.s:1960   .text:0000000000000560 .L0 
     /tmp/ccJAxMsJ.s:1967   .text:0000000000000568 .L0 
     /tmp/ccJAxMsJ.s:1975   .text:000000000000056c .L0 
     /tmp/ccJAxMsJ.s:1976   .text:000000000000056c .L0 
     /tmp/ccJAxMsJ.s:1977   .text:000000000000056c .L0 
     /tmp/ccJAxMsJ.s:1987   .text:0000000000000574 .L0 
     /tmp/ccJAxMsJ.s:1988   .text:0000000000000578 .L0 
     /tmp/ccJAxMsJ.s:1997   .text:0000000000000578 .L0 
     /tmp/ccJAxMsJ.s:440    .text:0000000000000108 .L0 
     /tmp/ccJAxMsJ.s:460    .text:000000000000011c .L0 
     /tmp/ccJAxMsJ.s:1008   .text:0000000000000288 .L0 
     /tmp/ccJAxMsJ.s:1165   .text:00000000000002fc .L0 
     /tmp/ccJAxMsJ.s:1806   .text:00000000000004dc .L0 
     /tmp/ccJAxMsJ.s:1826   .text:00000000000004f0 .L0 
     /tmp/ccJAxMsJ.s:519    .text:0000000000000134 .L32
     /tmp/ccJAxMsJ.s:556    .text:000000000000015c .L33
     /tmp/ccJAxMsJ.s:610    .text:000000000000017c .L34
     /tmp/ccJAxMsJ.s:533    .text:000000000000013c .L3
     /tmp/ccJAxMsJ.s:621    .text:0000000000000188 .L35
     /tmp/ccJAxMsJ.s:768    .text:00000000000001f0 .L36
     /tmp/ccJAxMsJ.s:865    .text:0000000000000230 .L37
     /tmp/ccJAxMsJ.s:961    .text:000000000000026c .L38
     /tmp/ccJAxMsJ.s:1043   .text:00000000000002b0 .L39
     /tmp/ccJAxMsJ.s:1118   .text:00000000000002e0 .L40
     /tmp/ccJAxMsJ.s:1197   .text:000000000000031c .L41
     /tmp/ccJAxMsJ.s:1352   .text:000000000000038c .L42
     /tmp/ccJAxMsJ.s:1524   .text:0000000000000424 .L43
     /tmp/ccJAxMsJ.s:1642   .text:0000000000000470 .L44
     /tmp/ccJAxMsJ.s:1761   .text:00000000000004c0 .L45
     /tmp/ccJAxMsJ.s:761    .text:00000000000001e8 .L27
     /tmp/ccJAxMsJ.s:139    .text:0000000000000088 .L8
     /tmp/ccJAxMsJ.s:725    .text:00000000000001d8 .L9
     /tmp/ccJAxMsJ.s:1345   .text:0000000000000384 .L28
     /tmp/ccJAxMsJ.s:1309   .text:0000000000000374 .L16
     /tmp/ccJAxMsJ.s:1445   .text:00000000000003e0 .L20
     /tmp/ccJAxMsJ.s:1477   .text:0000000000000404 .L18
     /tmp/ccJAxMsJ.s:1411   .text:00000000000003b4 .L19
     /tmp/ccJAxMsJ.s:1497   .text:0000000000000418 .L21
     /tmp/ccJAxMsJ.s:1633   .text:0000000000000464 .L46
     /tmp/ccJAxMsJ.s:1598   .text:0000000000000454 .L23
     /tmp/ccJAxMsJ.s:1749   .text:00000000000004b0 .L47
     /tmp/ccJAxMsJ.s:1714   .text:00000000000004a0 .L25
     /tmp/ccJAxMsJ.s:1949   .text:0000000000000558 .L52
     /tmp/ccJAxMsJ.s:1969   .text:000000000000056c .L53
     /tmp/ccJAxMsJ.s:1937   .text:0000000000000548 .L48
GAS LISTING /tmp/ccJAxMsJ.s 			page 65


     /tmp/ccJAxMsJ.s:5177   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccJAxMsJ.s:7529   .debug_str:0000000000000b59 .LASF221
     /tmp/ccJAxMsJ.s:7231   .debug_str:0000000000000198 .LASF222
     /tmp/ccJAxMsJ.s:7383   .debug_str:00000000000006ab .LASF223
     /tmp/ccJAxMsJ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccJAxMsJ.s:1991   .text:0000000000000578 .Letext0
     /tmp/ccJAxMsJ.s:7171   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccJAxMsJ.s:7317   .debug_str:0000000000000473 .LASF0
     /tmp/ccJAxMsJ.s:7361   .debug_str:000000000000062d .LASF1
     /tmp/ccJAxMsJ.s:7459   .debug_str:0000000000000970 .LASF2
     /tmp/ccJAxMsJ.s:7471   .debug_str:00000000000009de .LASF4
     /tmp/ccJAxMsJ.s:7333   .debug_str:00000000000004ea .LASF3
     /tmp/ccJAxMsJ.s:7185   .debug_str:0000000000000057 .LASF5
     /tmp/ccJAxMsJ.s:7415   .debug_str:00000000000007bf .LASF6
     /tmp/ccJAxMsJ.s:7349   .debug_str:00000000000005cb .LASF7
     /tmp/ccJAxMsJ.s:7283   .debug_str:0000000000000358 .LASF8
     /tmp/ccJAxMsJ.s:7291   .debug_str:000000000000039a .LASF9
     /tmp/ccJAxMsJ.s:7217   .debug_str:0000000000000122 .LASF10
     /tmp/ccJAxMsJ.s:7273   .debug_str:000000000000030e .LASF11
     /tmp/ccJAxMsJ.s:7233   .debug_str:00000000000001a6 .LASF12
     /tmp/ccJAxMsJ.s:7215   .debug_str:0000000000000112 .LASF13
     /tmp/ccJAxMsJ.s:7499   .debug_str:0000000000000aa8 .LASF14
     /tmp/ccJAxMsJ.s:7255   .debug_str:0000000000000250 .LASF15
     /tmp/ccJAxMsJ.s:7489   .debug_str:0000000000000a72 .LASF16
     /tmp/ccJAxMsJ.s:7581   .debug_str:0000000000000d85 .LASF67
     /tmp/ccJAxMsJ.s:7439   .debug_str:00000000000008c1 .LASF20
     /tmp/ccJAxMsJ.s:7365   .debug_str:0000000000000646 .LASF17
     /tmp/ccJAxMsJ.s:7263   .debug_str:00000000000002a9 .LASF18
     /tmp/ccJAxMsJ.s:7597   .debug_str:0000000000000deb .LASF19
     /tmp/ccJAxMsJ.s:7565   .debug_str:0000000000000cfd .LASF21
     /tmp/ccJAxMsJ.s:7265   .debug_str:00000000000002b2 .LASF22
     /tmp/ccJAxMsJ.s:7527   .debug_str:0000000000000b4c .LASF23
     /tmp/ccJAxMsJ.s:7241   .debug_str:00000000000001e2 .LASF24
     /tmp/ccJAxMsJ.s:7303   .debug_str:0000000000000413 .LASF57
     /tmp/ccJAxMsJ.s:7315   .debug_str:000000000000045b .LASF59
     /tmp/ccJAxMsJ.s:7557   .debug_str:0000000000000cc9 .LASF25
     /tmp/ccJAxMsJ.s:7545   .debug_str:0000000000000c89 .LASF27
     /tmp/ccJAxMsJ.s:7453   .debug_str:000000000000094a .LASF29
     /tmp/ccJAxMsJ.s:7403   .debug_str:0000000000000754 .LASF31
     /tmp/ccJAxMsJ.s:7431   .debug_str:0000000000000878 .LASF26
     /tmp/ccJAxMsJ.s:7433   .debug_str:000000000000087f .LASF28
     /tmp/ccJAxMsJ.s:7397   .debug_str:0000000000000734 .LASF30
     /tmp/ccJAxMsJ.s:7353   .debug_str:0000000000000600 .LASF32
     /tmp/ccJAxMsJ.s:7593   .debug_str:0000000000000dd7 .LASF33
     /tmp/ccJAxMsJ.s:7535   .debug_str:0000000000000c3e .LASF34
     /tmp/ccJAxMsJ.s:7393   .debug_str:0000000000000727 .LASF35
     /tmp/ccJAxMsJ.s:7401   .debug_str:0000000000000740 .LASF36
     /tmp/ccJAxMsJ.s:7367   .debug_str:000000000000064f .LASF37
     /tmp/ccJAxMsJ.s:7437   .debug_str:00000000000008ad .LASF38
     /tmp/ccJAxMsJ.s:7623   .debug_str:0000000000000ebf .LASF39
     /tmp/ccJAxMsJ.s:7323   .debug_str:000000000000048b .LASF40
     /tmp/ccJAxMsJ.s:7495   .debug_str:0000000000000a94 .LASF41
     /tmp/ccJAxMsJ.s:7475   .debug_str:0000000000000a0b .LASF42
     /tmp/ccJAxMsJ.s:7477   .debug_str:0000000000000a1e .LASF43
     /tmp/ccJAxMsJ.s:7221   .debug_str:0000000000000136 .LASF44
     /tmp/ccJAxMsJ.s:7251   .debug_str:000000000000022b .LASF45
     /tmp/ccJAxMsJ.s:7311   .debug_str:0000000000000434 .LASF46
GAS LISTING /tmp/ccJAxMsJ.s 			page 66


     /tmp/ccJAxMsJ.s:7321   .debug_str:0000000000000485 .LASF47
     /tmp/ccJAxMsJ.s:7243   .debug_str:00000000000001ee .LASF48
     /tmp/ccJAxMsJ.s:7187   .debug_str:000000000000005e .LASF49
     /tmp/ccJAxMsJ.s:7465   .debug_str:0000000000000994 .LASF50
     /tmp/ccJAxMsJ.s:7457   .debug_str:0000000000000965 .LASF51
     /tmp/ccJAxMsJ.s:7615   .debug_str:0000000000000e74 .LASF52
     /tmp/ccJAxMsJ.s:7585   .debug_str:0000000000000d90 .LASF53
     /tmp/ccJAxMsJ.s:7599   .debug_str:0000000000000df4 .LASF54
     /tmp/ccJAxMsJ.s:7579   .debug_str:0000000000000d7b .LASF55
     /tmp/ccJAxMsJ.s:7385   .debug_str:00000000000006db .LASF56
     /tmp/ccJAxMsJ.s:7591   .debug_str:0000000000000dc8 .LASF58
     /tmp/ccJAxMsJ.s:7289   .debug_str:000000000000037e .LASF60
     /tmp/ccJAxMsJ.s:7461   .debug_str:000000000000097e .LASF61
     /tmp/ccJAxMsJ.s:7617   .debug_str:0000000000000e8c .LASF62
     /tmp/ccJAxMsJ.s:7417   .debug_str:00000000000007d2 .LASF63
     /tmp/ccJAxMsJ.s:7345   .debug_str:000000000000058c .LASF65
     /tmp/ccJAxMsJ.s:7455   .debug_str:0000000000000953 .LASF64
     /tmp/ccJAxMsJ.s:7253   .debug_str:0000000000000231 .LASF66
     /tmp/ccJAxMsJ.s:7589   .debug_str:0000000000000da4 .LASF68
     /tmp/ccJAxMsJ.s:7575   .debug_str:0000000000000d56 .LASF102
     /tmp/ccJAxMsJ.s:7359   .debug_str:0000000000000628 .LASF69
     /tmp/ccJAxMsJ.s:7219   .debug_str:0000000000000131 .LASF70
     /tmp/ccJAxMsJ.s:7195   .debug_str:000000000000008f .LASF71
     /tmp/ccJAxMsJ.s:7329   .debug_str:00000000000004af .LASF104
     /tmp/ccJAxMsJ.s:7493   .debug_str:0000000000000a8f .LASF72
     /tmp/ccJAxMsJ.s:7395   .debug_str:000000000000072f .LASF73
     /tmp/ccJAxMsJ.s:7619   .debug_str:0000000000000ea5 .LASF74
     /tmp/ccJAxMsJ.s:7467   .debug_str:00000000000009ac .LASF77
     /tmp/ccJAxMsJ.s:7269   .debug_str:00000000000002d5 .LASF75
     /tmp/ccJAxMsJ.s:7463   .debug_str:000000000000098a .LASF76
     /tmp/ccJAxMsJ.s:7445   .debug_str:00000000000008f1 .LASF78
     /tmp/ccJAxMsJ.s:7409   .debug_str:000000000000078c .LASF79
     /tmp/ccJAxMsJ.s:7595   .debug_str:0000000000000ddf .LASF80
     /tmp/ccJAxMsJ.s:7387   .debug_str:00000000000006f1 .LASF81
     /tmp/ccJAxMsJ.s:7507   .debug_str:0000000000000ad5 .LASF82
     /tmp/ccJAxMsJ.s:7209   .debug_str:00000000000000d4 .LASF83
     /tmp/ccJAxMsJ.s:7559   .debug_str:0000000000000cd2 .LASF84
     /tmp/ccJAxMsJ.s:7257   .debug_str:0000000000000266 .LASF85
     /tmp/ccJAxMsJ.s:7327   .debug_str:00000000000004a5 .LASF86
     /tmp/ccJAxMsJ.s:7423   .debug_str:000000000000080b .LASF87
     /tmp/ccJAxMsJ.s:7523   .debug_str:0000000000000b3c .LASF141
     /tmp/ccJAxMsJ.s:7339   .debug_str:000000000000053c .LASF88
     /tmp/ccJAxMsJ.s:7563   .debug_str:0000000000000ce1 .LASF89
     /tmp/ccJAxMsJ.s:7193   .debug_str:0000000000000076 .LASF90
     /tmp/ccJAxMsJ.s:7227   .debug_str:0000000000000182 .LASF91
     /tmp/ccJAxMsJ.s:7539   .debug_str:0000000000000c5c .LASF92
     /tmp/ccJAxMsJ.s:7443   .debug_str:00000000000008e9 .LASF93
     /tmp/ccJAxMsJ.s:7281   .debug_str:000000000000034e .LASF94
     /tmp/ccJAxMsJ.s:7485   .debug_str:0000000000000a4e .LASF95
     /tmp/ccJAxMsJ.s:7603   .debug_str:0000000000000e1a .LASF96
     /tmp/ccJAxMsJ.s:7609   .debug_str:0000000000000e39 .LASF224
     /tmp/ccJAxMsJ.s:7343   .debug_str:0000000000000570 .LASF225
     /tmp/ccJAxMsJ.s:7347   .debug_str:00000000000005ae .LASF97
     /tmp/ccJAxMsJ.s:7213   .debug_str:00000000000000fd .LASF98
     /tmp/ccJAxMsJ.s:7469   .debug_str:00000000000009c9 .LASF99
     /tmp/ccJAxMsJ.s:7625   .debug_str:0000000000000ec7 .LASF100
     /tmp/ccJAxMsJ.s:7561   .debug_str:0000000000000cdc .LASF103
GAS LISTING /tmp/ccJAxMsJ.s 			page 67


     /tmp/ccJAxMsJ.s:7357   .debug_str:0000000000000623 .LASF101
     /tmp/ccJAxMsJ.s:7569   .debug_str:0000000000000d27 .LASF105
     /tmp/ccJAxMsJ.s:7389   .debug_str:0000000000000715 .LASF106
     /tmp/ccJAxMsJ.s:7413   .debug_str:00000000000007a8 .LASF107
     /tmp/ccJAxMsJ.s:7435   .debug_str:0000000000000892 .LASF108
     /tmp/ccJAxMsJ.s:7301   .debug_str:00000000000003f8 .LASF226
     /tmp/ccJAxMsJ.s:7381   .debug_str:000000000000069e .LASF109
     /tmp/ccJAxMsJ.s:7179   .debug_str:000000000000002b .LASF110
     /tmp/ccJAxMsJ.s:7183   .debug_str:0000000000000047 .LASF111
     /tmp/ccJAxMsJ.s:7341   .debug_str:0000000000000558 .LASF112
     /tmp/ccJAxMsJ.s:7451   .debug_str:0000000000000941 .LASF113
     /tmp/ccJAxMsJ.s:7613   .debug_str:0000000000000e53 .LASF114
     /tmp/ccJAxMsJ.s:7373   .debug_str:0000000000000671 .LASF115
     /tmp/ccJAxMsJ.s:7577   .debug_str:0000000000000d5b .LASF116
     /tmp/ccJAxMsJ.s:7411   .debug_str:000000000000079c .LASF117
     /tmp/ccJAxMsJ.s:7351   .debug_str:00000000000005de .LASF118
     /tmp/ccJAxMsJ.s:7627   .debug_str:0000000000000ed5 .LASF119
     /tmp/ccJAxMsJ.s:7449   .debug_str:0000000000000922 .LASF120
     /tmp/ccJAxMsJ.s:7483   .debug_str:0000000000000a43 .LASF121
     /tmp/ccJAxMsJ.s:7275   .debug_str:000000000000031d .LASF122
     /tmp/ccJAxMsJ.s:7421   .debug_str:0000000000000802 .LASF123
     /tmp/ccJAxMsJ.s:7223   .debug_str:0000000000000149 .LASF124
     /tmp/ccJAxMsJ.s:7197   .debug_str:0000000000000094 .LASF125
     /tmp/ccJAxMsJ.s:7605   .debug_str:0000000000000e2c .LASF126
     /tmp/ccJAxMsJ.s:7211   .debug_str:00000000000000f7 .LASF127
     /tmp/ccJAxMsJ.s:7203   .debug_str:00000000000000ad .LASF128
     /tmp/ccJAxMsJ.s:7377   .debug_str:0000000000000682 .LASF129
     /tmp/ccJAxMsJ.s:7511   .debug_str:0000000000000ae9 .LASF130
     /tmp/ccJAxMsJ.s:7503   .debug_str:0000000000000ac5 .LASF131
     /tmp/ccJAxMsJ.s:7355   .debug_str:0000000000000613 .LASF132
     /tmp/ccJAxMsJ.s:7513   .debug_str:0000000000000af1 .LASF133
     /tmp/ccJAxMsJ.s:7419   .debug_str:00000000000007e7 .LASF134
     /tmp/ccJAxMsJ.s:7201   .debug_str:00000000000000a1 .LASF135
     /tmp/ccJAxMsJ.s:7567   .debug_str:0000000000000d0c .LASF136
     /tmp/ccJAxMsJ.s:7391   .debug_str:000000000000071a .LASF137
     /tmp/ccJAxMsJ.s:7245   .debug_str:0000000000000200 .LASF138
     /tmp/ccJAxMsJ.s:7497   .debug_str:0000000000000a9b .LASF139
     /tmp/ccJAxMsJ.s:7473   .debug_str:00000000000009e5 .LASF140
     /tmp/ccJAxMsJ.s:7405   .debug_str:0000000000000769 .LASF142
     /tmp/ccJAxMsJ.s:7363   .debug_str:0000000000000640 .LASF143
     /tmp/ccJAxMsJ.s:7175   .debug_str:0000000000000011 .LASF144
     /tmp/ccJAxMsJ.s:7607   .debug_str:0000000000000e33 .LASF145
     /tmp/ccJAxMsJ.s:7427   .debug_str:0000000000000850 .LASF146
     /tmp/ccJAxMsJ.s:7375   .debug_str:0000000000000679 .LASF147
     /tmp/ccJAxMsJ.s:7533   .debug_str:0000000000000c26 .LASF148
     /tmp/ccJAxMsJ.s:7481   .debug_str:0000000000000a36 .LASF149
     /tmp/ccJAxMsJ.s:7259   .debug_str:0000000000000288 .LASF150
     /tmp/ccJAxMsJ.s:7519   .debug_str:0000000000000b16 .LASF151
     /tmp/ccJAxMsJ.s:7407   .debug_str:000000000000076e .LASF152
     /tmp/ccJAxMsJ.s:7525   .debug_str:0000000000000b44 .LASF227
     /tmp/ccJAxMsJ.s:7325   .debug_str:000000000000049f .LASF153
     /tmp/ccJAxMsJ.s:7335   .debug_str:00000000000004fc .LASF154
     /tmp/ccJAxMsJ.s:7229   .debug_str:000000000000018b .LASF155
     /tmp/ccJAxMsJ.s:7541   .debug_str:0000000000000c65 .LASF156
     /tmp/ccJAxMsJ.s:7447   .debug_str:0000000000000912 .LASF157
     /tmp/ccJAxMsJ.s:7207   .debug_str:00000000000000c4 .LASF158
     /tmp/ccJAxMsJ.s:7601   .debug_str:0000000000000e0a .LASF159
GAS LISTING /tmp/ccJAxMsJ.s 			page 68


     /tmp/ccJAxMsJ.s:7501   .debug_str:0000000000000ab4 .LASF160
     /tmp/ccJAxMsJ.s:7487   .debug_str:0000000000000a5f .LASF161
     /tmp/ccJAxMsJ.s:7173   .debug_str:0000000000000000 .LASF162
     /tmp/ccJAxMsJ.s:7297   .debug_str:00000000000003d5 .LASF163
     /tmp/ccJAxMsJ.s:7181   .debug_str:0000000000000042 .LASF164
     /tmp/ccJAxMsJ.s:7611   .debug_str:0000000000000e4d .LASF165
     /tmp/ccJAxMsJ.s:7543   .debug_str:0000000000000c81 .LASF166
     /tmp/ccJAxMsJ.s:7537   .debug_str:0000000000000c52 .LASF167
     /tmp/ccJAxMsJ.s:7509   .debug_str:0000000000000ae0 .LASF168
     /tmp/ccJAxMsJ.s:7587   .debug_str:0000000000000d9a .LASF169
     /tmp/ccJAxMsJ.s:7205   .debug_str:00000000000000b6 .LASF170
     /tmp/ccJAxMsJ.s:7441   .debug_str:00000000000008cc .LASF171
     /tmp/ccJAxMsJ.s:7235   .debug_str:00000000000001b6 .LASF172
     /tmp/ccJAxMsJ.s:7337   .debug_str:0000000000000510 .LASF173
     /tmp/ccJAxMsJ.s:7247   .debug_str:000000000000021d .LASF174
     /tmp/ccJAxMsJ.s:7239   .debug_str:00000000000001cb .LASF175
     /tmp/ccJAxMsJ.s:7479   .debug_str:0000000000000a25 .LASF176
     /tmp/ccJAxMsJ.s:7531   .debug_str:0000000000000c1d .LASF177
     /tmp/ccJAxMsJ.s:7573   .debug_str:0000000000000d4f .LASF178
     /tmp/ccJAxMsJ.s:7621   .debug_str:0000000000000eb6 .LASF179
     /tmp/ccJAxMsJ.s:7261   .debug_str:00000000000002a4 .LASF180
     /tmp/ccJAxMsJ.s:7279   .debug_str:0000000000000343 .LASF181
     /tmp/ccJAxMsJ.s:7293   .debug_str:00000000000003a8 .LASF182
     /tmp/ccJAxMsJ.s:7249   .debug_str:0000000000000226 .LASF183
     /tmp/ccJAxMsJ.s:7547   .debug_str:0000000000000c9e .LASF184
     /tmp/ccJAxMsJ.s:7505   .debug_str:0000000000000ace .LASF185
     /tmp/ccJAxMsJ.s:7331   .debug_str:00000000000004d1 .LASF186
     /tmp/ccJAxMsJ.s:7307   .debug_str:0000000000000427 .LASF187
     /tmp/ccJAxMsJ.s:7295   .debug_str:00000000000003bc .LASF188
     /tmp/ccJAxMsJ.s:7379   .debug_str:000000000000068a .LASF189
     /tmp/ccJAxMsJ.s:7371   .debug_str:000000000000065d .LASF190
     /tmp/ccJAxMsJ.s:7313   .debug_str:0000000000000446 .LASF191
     /tmp/ccJAxMsJ.s:7515   .debug_str:0000000000000afc .LASF192
     /tmp/ccJAxMsJ.s:7305   .debug_str:000000000000041e .LASF193
     /tmp/ccJAxMsJ.s:7225   .debug_str:0000000000000167 .LASF194
     /tmp/ccJAxMsJ.s:7399   .debug_str:000000000000073b .LASF195
     /tmp/ccJAxMsJ.s:7521   .debug_str:0000000000000b25 .LASF196
     /tmp/ccJAxMsJ.s:7191   .debug_str:0000000000000070 .LASF197
     /tmp/ccJAxMsJ.s:7271   .debug_str:00000000000002f6 .LASF198
     /tmp/ccJAxMsJ.s:7425   .debug_str:0000000000000848 .LASF199
     /tmp/ccJAxMsJ.s:7189   .debug_str:0000000000000069 .LASF200
     /tmp/ccJAxMsJ.s:7285   .debug_str:0000000000000368 .LASF201
     /tmp/ccJAxMsJ.s:7517   .debug_str:0000000000000b11 .LASF202
     /tmp/ccJAxMsJ.s:7277   .debug_str:000000000000033e .LASF204
     /tmp/ccJAxMsJ.s:7319   .debug_str:0000000000000480 .LASF203
     /tmp/ccJAxMsJ.s:7267   .debug_str:00000000000002be .LASF213
     /tmp/ccJAxMsJ.s:1897   .text:000000000000050c .LFB56
     /tmp/ccJAxMsJ.s:1989   .text:0000000000000578 .LFE56
     /tmp/ccJAxMsJ.s:7491   .debug_str:0000000000000a88 .LASF205
     /tmp/ccJAxMsJ.s:6415   .debug_loc:0000000000000000 .LLST84
     /tmp/ccJAxMsJ.s:1909   .text:000000000000051c .LBB466
     /tmp/ccJAxMsJ.s:1925   .text:0000000000000528 .LBE466
     /tmp/ccJAxMsJ.s:1956   .text:0000000000000560 .LBB468
     /tmp/ccJAxMsJ.s:1971   .text:000000000000056c .LBE468
     /tmp/ccJAxMsJ.s:6430   .debug_loc:0000000000000049 .LLST85
     /tmp/ccJAxMsJ.s:1973   .text:000000000000056c .LBB470
     /tmp/ccJAxMsJ.s:1985   .text:0000000000000574 .LBE470
GAS LISTING /tmp/ccJAxMsJ.s 			page 69


     /tmp/ccJAxMsJ.s:6439   .debug_loc:000000000000006f .LLST86
     /tmp/ccJAxMsJ.s:1954   .text:0000000000000560 .LVL136
     /tmp/ccJAxMsJ.s:46     .text:0000000000000020 .LFB55
     /tmp/ccJAxMsJ.s:1891   .text:000000000000050c .LFE55
     /tmp/ccJAxMsJ.s:6447   .debug_loc:0000000000000093 .LLST0
     /tmp/ccJAxMsJ.s:7177   .debug_str:0000000000000025 .LASF206
     /tmp/ccJAxMsJ.s:6470   .debug_loc:0000000000000102 .LLST1
     /tmp/ccJAxMsJ.s:7549   .debug_str:0000000000000cb5 .LASF207
     /tmp/ccJAxMsJ.s:6521   .debug_loc:00000000000001f6 .LLST2
     /tmp/ccJAxMsJ.s:560    .text:000000000000015c .LBB424
     /tmp/ccJAxMsJ.s:613    .text:000000000000017c .LBE424
     /tmp/ccJAxMsJ.s:7583   .debug_str:0000000000000d8b .LASF208
     /tmp/ccJAxMsJ.s:6532   .debug_loc:000000000000022c .LLST80
     /tmp/ccJAxMsJ.s:562    .text:000000000000015c .LBB425
     /tmp/ccJAxMsJ.s:578    .text:0000000000000168 .LBE425
     /tmp/ccJAxMsJ.s:580    .text:0000000000000168 .LBB427
     /tmp/ccJAxMsJ.s:593    .text:0000000000000170 .LBE427
     /tmp/ccJAxMsJ.s:6545   .debug_loc:0000000000000264 .LLST81
     /tmp/ccJAxMsJ.s:598    .text:0000000000000174 .LBB429
     /tmp/ccJAxMsJ.s:612    .text:000000000000017c .LBE429
     /tmp/ccJAxMsJ.s:6554   .debug_loc:000000000000028a .LLST82
     /tmp/ccJAxMsJ.s:624    .text:0000000000000188 .LBB183
     /tmp/ccJAxMsJ.s:769    .text:00000000000001f0 .LBE183
     /tmp/ccJAxMsJ.s:6561   .debug_loc:00000000000002ad .LLST3
     /tmp/ccJAxMsJ.s:7299   .debug_str:00000000000003f0 .LASF209
     /tmp/ccJAxMsJ.s:6568   .debug_loc:00000000000002d0 .LLST4
     /tmp/ccJAxMsJ.s:6575   .debug_loc:00000000000002f3 .LLST5
     /tmp/ccJAxMsJ.s:7551   .debug_str:0000000000000cba .LASF210
     /tmp/ccJAxMsJ.s:6582   .debug_loc:0000000000000316 .LLST6
     /tmp/ccJAxMsJ.s:7553   .debug_str:0000000000000cbf .LASF211
     /tmp/ccJAxMsJ.s:6589   .debug_loc:0000000000000339 .LLST7
     /tmp/ccJAxMsJ.s:7555   .debug_str:0000000000000cc4 .LASF212
     /tmp/ccJAxMsJ.s:6596   .debug_loc:000000000000035c .LLST8
     /tmp/ccJAxMsJ.s:6603   .debug_loc:000000000000037f .LLST9
     /tmp/ccJAxMsJ.s:6610   .debug_loc:00000000000003a2 .LLST10
     /tmp/ccJAxMsJ.s:626    .text:0000000000000188 .LBB184
     /tmp/ccJAxMsJ.s:641    .text:0000000000000194 .LBE184
     /tmp/ccJAxMsJ.s:646    .text:0000000000000198 .LBB186
     /tmp/ccJAxMsJ.s:662    .text:00000000000001a4 .LBE186
     /tmp/ccJAxMsJ.s:736    .text:00000000000001dc .LBB188
     /tmp/ccJAxMsJ.s:747    .text:00000000000001e0 .LBE188
     /tmp/ccJAxMsJ.s:6617   .debug_loc:00000000000003c5 .LLST11
     /tmp/ccJAxMsJ.s:749    .text:00000000000001e0 .LBB190
     /tmp/ccJAxMsJ.s:763    .text:00000000000001e8 .LBE190
     /tmp/ccJAxMsJ.s:6624   .debug_loc:00000000000003e8 .LLST12
     /tmp/ccJAxMsJ.s:716    .text:00000000000001cc .LVL30
     /tmp/ccJAxMsJ.s:772    .text:00000000000001f0 .LBB376
     /tmp/ccJAxMsJ.s:868    .text:0000000000000230 .LBE376
     /tmp/ccJAxMsJ.s:6631   .debug_loc:000000000000040b .LLST75
     /tmp/ccJAxMsJ.s:6638   .debug_loc:000000000000042e .LLST76
     /tmp/ccJAxMsJ.s:6645   .debug_loc:0000000000000451 .LLST77
     /tmp/ccJAxMsJ.s:774    .text:00000000000001f0 .LBB377
     /tmp/ccJAxMsJ.s:790    .text:00000000000001fc .LBE377
     /tmp/ccJAxMsJ.s:795    .text:0000000000000200 .LBB379
     /tmp/ccJAxMsJ.s:811    .text:000000000000020c .LBE379
     /tmp/ccJAxMsJ.s:840    .text:0000000000000224 .LBB381
     /tmp/ccJAxMsJ.s:851    .text:0000000000000228 .LBE381
GAS LISTING /tmp/ccJAxMsJ.s 			page 70


     /tmp/ccJAxMsJ.s:6652   .debug_loc:0000000000000474 .LLST78
     /tmp/ccJAxMsJ.s:853    .text:0000000000000228 .LBB383
     /tmp/ccJAxMsJ.s:867    .text:0000000000000230 .LBE383
     /tmp/ccJAxMsJ.s:6659   .debug_loc:0000000000000497 .LLST79
     /tmp/ccJAxMsJ.s:830    .text:0000000000000220 .LVL41
     /tmp/ccJAxMsJ.s:870    .text:0000000000000230 .LBB357
     /tmp/ccJAxMsJ.s:964    .text:000000000000026c .LBE357
     /tmp/ccJAxMsJ.s:6666   .debug_loc:00000000000004ba .LLST70
     /tmp/ccJAxMsJ.s:6673   .debug_loc:00000000000004dd .LLST71
     /tmp/ccJAxMsJ.s:6680   .debug_loc:0000000000000500 .LLST72
     /tmp/ccJAxMsJ.s:872    .text:0000000000000230 .LBB358
     /tmp/ccJAxMsJ.s:888    .text:000000000000023c .LBE358
     /tmp/ccJAxMsJ.s:893    .text:0000000000000240 .LBB360
     /tmp/ccJAxMsJ.s:909    .text:000000000000024c .LBE360
     /tmp/ccJAxMsJ.s:936    .text:0000000000000260 .LBB362
     /tmp/ccJAxMsJ.s:947    .text:0000000000000264 .LBE362
     /tmp/ccJAxMsJ.s:6687   .debug_loc:0000000000000523 .LLST73
     /tmp/ccJAxMsJ.s:949    .text:0000000000000264 .LBB364
     /tmp/ccJAxMsJ.s:963    .text:000000000000026c .LBE364
     /tmp/ccJAxMsJ.s:6694   .debug_loc:0000000000000546 .LLST74
     /tmp/ccJAxMsJ.s:926    .text:000000000000025c .LVL49
     /tmp/ccJAxMsJ.s:966    .text:000000000000026c .LBB339
     /tmp/ccJAxMsJ.s:1046   .text:00000000000002b0 .LBE339
     /tmp/ccJAxMsJ.s:6701   .debug_loc:0000000000000569 .LLST66
     /tmp/ccJAxMsJ.s:6708   .debug_loc:000000000000058c .LLST67
     /tmp/ccJAxMsJ.s:968    .text:000000000000026c .LBB340
     /tmp/ccJAxMsJ.s:984    .text:0000000000000278 .LBE340
     /tmp/ccJAxMsJ.s:989    .text:000000000000027c .LBB342
     /tmp/ccJAxMsJ.s:1005   .text:0000000000000288 .LBE342
     /tmp/ccJAxMsJ.s:1018   .text:00000000000002a4 .LBB344
     /tmp/ccJAxMsJ.s:1029   .text:00000000000002a8 .LBE344
     /tmp/ccJAxMsJ.s:6715   .debug_loc:00000000000005af .LLST68
     /tmp/ccJAxMsJ.s:1031   .text:00000000000002a8 .LBB346
     /tmp/ccJAxMsJ.s:1045   .text:00000000000002b0 .LBE346
     /tmp/ccJAxMsJ.s:6722   .debug_loc:00000000000005d2 .LLST69
     /tmp/ccJAxMsJ.s:1016   .text:00000000000002a4 .LVL56
     /tmp/ccJAxMsJ.s:1048   .text:00000000000002b0 .LBB322
     /tmp/ccJAxMsJ.s:1121   .text:00000000000002e0 .LBE322
     /tmp/ccJAxMsJ.s:6729   .debug_loc:00000000000005f5 .LLST62
     /tmp/ccJAxMsJ.s:6736   .debug_loc:0000000000000618 .LLST63
     /tmp/ccJAxMsJ.s:1050   .text:00000000000002b0 .LBB323
     /tmp/ccJAxMsJ.s:1066   .text:00000000000002bc .LBE323
     /tmp/ccJAxMsJ.s:1071   .text:00000000000002c0 .LBB325
     /tmp/ccJAxMsJ.s:1087   .text:00000000000002cc .LBE325
     /tmp/ccJAxMsJ.s:1093   .text:00000000000002d4 .LBB327
     /tmp/ccJAxMsJ.s:1104   .text:00000000000002d8 .LBE327
     /tmp/ccJAxMsJ.s:6743   .debug_loc:000000000000063b .LLST64
     /tmp/ccJAxMsJ.s:1106   .text:00000000000002d8 .LBB329
     /tmp/ccJAxMsJ.s:1120   .text:00000000000002e0 .LBE329
     /tmp/ccJAxMsJ.s:6750   .debug_loc:000000000000065e .LLST65
     /tmp/ccJAxMsJ.s:1091   .text:00000000000002d4 .LVL62
     /tmp/ccJAxMsJ.s:1123   .text:00000000000002e0 .LBB306
     /tmp/ccJAxMsJ.s:1200   .text:000000000000031c .LBE306
     /tmp/ccJAxMsJ.s:6757   .debug_loc:0000000000000681 .LLST58
     /tmp/ccJAxMsJ.s:6764   .debug_loc:00000000000006a4 .LLST59
     /tmp/ccJAxMsJ.s:1125   .text:00000000000002e0 .LBB307
     /tmp/ccJAxMsJ.s:1141   .text:00000000000002ec .LBE307
GAS LISTING /tmp/ccJAxMsJ.s 			page 71


     /tmp/ccJAxMsJ.s:1146   .text:00000000000002f0 .LBB309
     /tmp/ccJAxMsJ.s:1162   .text:00000000000002fc .LBE309
     /tmp/ccJAxMsJ.s:1172   .text:0000000000000310 .LBB311
     /tmp/ccJAxMsJ.s:1183   .text:0000000000000314 .LBE311
     /tmp/ccJAxMsJ.s:6771   .debug_loc:00000000000006c7 .LLST60
     /tmp/ccJAxMsJ.s:1185   .text:0000000000000314 .LBB313
     /tmp/ccJAxMsJ.s:1199   .text:000000000000031c .LBE313
     /tmp/ccJAxMsJ.s:6778   .debug_loc:00000000000006ea .LLST61
     /tmp/ccJAxMsJ.s:1170   .text:0000000000000310 .LVL68
     /tmp/ccJAxMsJ.s:1202   .text:000000000000031c .LBB285
     /tmp/ccJAxMsJ.s:1353   .text:000000000000038c .LBE285
     /tmp/ccJAxMsJ.s:6785   .debug_loc:000000000000070d .LLST46
     /tmp/ccJAxMsJ.s:6792   .debug_loc:0000000000000730 .LLST47
     /tmp/ccJAxMsJ.s:6799   .debug_loc:0000000000000753 .LLST48
     /tmp/ccJAxMsJ.s:6806   .debug_loc:0000000000000776 .LLST49
     /tmp/ccJAxMsJ.s:6813   .debug_loc:0000000000000799 .LLST50
     /tmp/ccJAxMsJ.s:6820   .debug_loc:00000000000007bc .LLST51
     /tmp/ccJAxMsJ.s:1204   .text:000000000000031c .LBB286
     /tmp/ccJAxMsJ.s:1220   .text:0000000000000328 .LBE286
     /tmp/ccJAxMsJ.s:1225   .text:000000000000032c .LBB288
     /tmp/ccJAxMsJ.s:1241   .text:0000000000000338 .LBE288
     /tmp/ccJAxMsJ.s:1273   .text:0000000000000354 .LBB290
     /tmp/ccJAxMsJ.s:1289   .text:0000000000000360 .LBE290
     /tmp/ccJAxMsJ.s:6837   .debug_loc:0000000000000807 .LLST52
     /tmp/ccJAxMsJ.s:6844   .debug_loc:000000000000082a .LLST53
     /tmp/ccJAxMsJ.s:1279   .text:0000000000000358 .LBB292
     /tmp/ccJAxMsJ.s:1287   .text:0000000000000360 .LBE292
     /tmp/ccJAxMsJ.s:6851   .debug_loc:000000000000084d .LLST54
     /tmp/ccJAxMsJ.s:1291   .text:0000000000000360 .LBB294
     /tmp/ccJAxMsJ.s:1299   .text:0000000000000368 .LBE294
     /tmp/ccJAxMsJ.s:6860   .debug_loc:0000000000000872 .LLST55
     /tmp/ccJAxMsJ.s:1320   .text:0000000000000378 .LBB296
     /tmp/ccJAxMsJ.s:1331   .text:000000000000037c .LBE296
     /tmp/ccJAxMsJ.s:6867   .debug_loc:0000000000000895 .LLST56
     /tmp/ccJAxMsJ.s:1333   .text:000000000000037c .LBB298
     /tmp/ccJAxMsJ.s:1347   .text:0000000000000384 .LBE298
     /tmp/ccJAxMsJ.s:6874   .debug_loc:00000000000008b8 .LLST57
     /tmp/ccJAxMsJ.s:1272   .text:0000000000000354 .LVL76
     /tmp/ccJAxMsJ.s:1355   .text:000000000000038c .LBB259
     /tmp/ccJAxMsJ.s:1527   .text:0000000000000424 .LBE259
     /tmp/ccJAxMsJ.s:6881   .debug_loc:00000000000008db .LLST33
     /tmp/ccJAxMsJ.s:6888   .debug_loc:00000000000008fe .LLST34
     /tmp/ccJAxMsJ.s:6895   .debug_loc:0000000000000921 .LLST35
     /tmp/ccJAxMsJ.s:7157   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccJAxMsJ.s:6902   .debug_loc:0000000000000944 .LLST37
     /tmp/ccJAxMsJ.s:1413   .text:00000000000003b4 .LBB265
     /tmp/ccJAxMsJ.s:6909   .debug_loc:0000000000000967 .LLST38
     /tmp/ccJAxMsJ.s:6924   .debug_loc:00000000000009a1 .LLST39
     /tmp/ccJAxMsJ.s:6935   .debug_loc:00000000000009d7 .LLST40
     /tmp/ccJAxMsJ.s:1420   .text:00000000000003c0 .LVL91
     /tmp/ccJAxMsJ.s:1424   .text:00000000000003c0 .LBB268
     /tmp/ccJAxMsJ.s:1433   .text:00000000000003c8 .LBE268
     /tmp/ccJAxMsJ.s:6942   .debug_loc:00000000000009fa .LLST41
     /tmp/ccJAxMsJ.s:1444   .text:00000000000003e0 .LVL93
     /tmp/ccJAxMsJ.s:1357   .text:000000000000038c .LBB260
     /tmp/ccJAxMsJ.s:1372   .text:0000000000000398 .LBE260
     /tmp/ccJAxMsJ.s:1377   .text:000000000000039c .LBB262
GAS LISTING /tmp/ccJAxMsJ.s 			page 72


     /tmp/ccJAxMsJ.s:1393   .text:00000000000003a8 .LBE262
     /tmp/ccJAxMsJ.s:1449   .text:00000000000003e0 .LBB271
     /tmp/ccJAxMsJ.s:1459   .text:00000000000003ec .LBE271
     /tmp/ccJAxMsJ.s:6949   .debug_loc:0000000000000a1d .LLST42
     /tmp/ccJAxMsJ.s:1482   .text:0000000000000404 .LBB274
     /tmp/ccJAxMsJ.s:1489   .text:0000000000000408 .LBE274
     /tmp/ccJAxMsJ.s:6958   .debug_loc:0000000000000a42 .LLST43
     /tmp/ccJAxMsJ.s:1499   .text:0000000000000418 .LBB276
     /tmp/ccJAxMsJ.s:1510   .text:000000000000041c .LBE276
     /tmp/ccJAxMsJ.s:6965   .debug_loc:0000000000000a65 .LLST44
     /tmp/ccJAxMsJ.s:1512   .text:000000000000041c .LBB278
     /tmp/ccJAxMsJ.s:1526   .text:0000000000000424 .LBE278
     /tmp/ccJAxMsJ.s:6972   .debug_loc:0000000000000a88 .LLST45
     /tmp/ccJAxMsJ.s:1496   .text:0000000000000418 .LVL98
     /tmp/ccJAxMsJ.s:1529   .text:0000000000000424 .LBB244
     /tmp/ccJAxMsJ.s:1643   .text:0000000000000470 .LBE244
     /tmp/ccJAxMsJ.s:6979   .debug_loc:0000000000000aab .LLST26
     /tmp/ccJAxMsJ.s:6986   .debug_loc:0000000000000ace .LLST27
     /tmp/ccJAxMsJ.s:6993   .debug_loc:0000000000000af1 .LLST28
     /tmp/ccJAxMsJ.s:7004   .debug_loc:0000000000000b27 .LLST29
     /tmp/ccJAxMsJ.s:1531   .text:0000000000000424 .LBB245
     /tmp/ccJAxMsJ.s:1547   .text:0000000000000430 .LBE245
     /tmp/ccJAxMsJ.s:1552   .text:0000000000000434 .LBB247
     /tmp/ccJAxMsJ.s:1568   .text:0000000000000440 .LBE247
     /tmp/ccJAxMsJ.s:1585   .text:0000000000000448 .LBB249
     /tmp/ccJAxMsJ.s:1592   .text:000000000000044c .LBE249
     /tmp/ccJAxMsJ.s:7015   .debug_loc:0000000000000b5d .LLST30
     /tmp/ccJAxMsJ.s:1608   .text:0000000000000458 .LBB251
     /tmp/ccJAxMsJ.s:1619   .text:000000000000045c .LBE251
     /tmp/ccJAxMsJ.s:7022   .debug_loc:0000000000000b80 .LLST31
     /tmp/ccJAxMsJ.s:1621   .text:000000000000045c .LBB253
     /tmp/ccJAxMsJ.s:1635   .text:0000000000000464 .LBE253
     /tmp/ccJAxMsJ.s:7029   .debug_loc:0000000000000ba3 .LLST32
     /tmp/ccJAxMsJ.s:1639   .text:000000000000046c .LVL110
     /tmp/ccJAxMsJ.s:1645   .text:0000000000000470 .LBB230
     /tmp/ccJAxMsJ.s:1762   .text:00000000000004c0 .LBE230
     /tmp/ccJAxMsJ.s:7036   .debug_loc:0000000000000bc6 .LLST19
     /tmp/ccJAxMsJ.s:7043   .debug_loc:0000000000000be9 .LLST20
     /tmp/ccJAxMsJ.s:7050   .debug_loc:0000000000000c0c .LLST21
     /tmp/ccJAxMsJ.s:7061   .debug_loc:0000000000000c42 .LLST22
     /tmp/ccJAxMsJ.s:1647   .text:0000000000000470 .LBB231
     /tmp/ccJAxMsJ.s:1663   .text:000000000000047c .LBE231
     /tmp/ccJAxMsJ.s:1668   .text:0000000000000480 .LBB233
     /tmp/ccJAxMsJ.s:1684   .text:000000000000048c .LBE233
     /tmp/ccJAxMsJ.s:1701   .text:0000000000000494 .LBB235
     /tmp/ccJAxMsJ.s:1708   .text:0000000000000498 .LBE235
     /tmp/ccJAxMsJ.s:7073   .debug_loc:0000000000000c79 .LLST23
     /tmp/ccJAxMsJ.s:1724   .text:00000000000004a4 .LBB237
     /tmp/ccJAxMsJ.s:1735   .text:00000000000004a8 .LBE237
     /tmp/ccJAxMsJ.s:7080   .debug_loc:0000000000000c9c .LLST24
     /tmp/ccJAxMsJ.s:1737   .text:00000000000004a8 .LBB239
     /tmp/ccJAxMsJ.s:1751   .text:00000000000004b0 .LBE239
     /tmp/ccJAxMsJ.s:7087   .debug_loc:0000000000000cbf .LLST25
     /tmp/ccJAxMsJ.s:1755   .text:00000000000004b8 .LVL121
     /tmp/ccJAxMsJ.s:1764   .text:00000000000004c0 .LBB216
     /tmp/ccJAxMsJ.s:1875   .text:000000000000050c .LBE216
     /tmp/ccJAxMsJ.s:1766   .text:00000000000004c0 .LBB217
GAS LISTING /tmp/ccJAxMsJ.s 			page 73


     /tmp/ccJAxMsJ.s:1782   .text:00000000000004cc .LBE217
     /tmp/ccJAxMsJ.s:1787   .text:00000000000004d0 .LBB219
     /tmp/ccJAxMsJ.s:1803   .text:00000000000004dc .LBE219
     /tmp/ccJAxMsJ.s:1808   .text:00000000000004e4 .LBB221
     /tmp/ccJAxMsJ.s:1819   .text:00000000000004e8 .LBE221
     /tmp/ccJAxMsJ.s:1828   .text:00000000000004f8 .LBB223
     /tmp/ccJAxMsJ.s:1839   .text:00000000000004fc .LBE223
     /tmp/ccJAxMsJ.s:1849   .text:0000000000000500 .LBB225
     /tmp/ccJAxMsJ.s:1860   .text:0000000000000504 .LBE225
     /tmp/ccJAxMsJ.s:7094   .debug_loc:0000000000000ce2 .LLST18
     /tmp/ccJAxMsJ.s:1862   .text:0000000000000504 .LBB227
     /tmp/ccJAxMsJ.s:1874   .text:000000000000050c .LBE227
     /tmp/ccJAxMsJ.s:1823   .text:00000000000004f0 .LVL128
     /tmp/ccJAxMsJ.s:383    .text:00000000000000e0 .LBB203
     /tmp/ccJAxMsJ.s:500    .text:0000000000000130 .LBE203
     /tmp/ccJAxMsJ.s:7101   .debug_loc:0000000000000d05 .LLST13
     /tmp/ccJAxMsJ.s:7108   .debug_loc:0000000000000d28 .LLST14
     /tmp/ccJAxMsJ.s:7115   .debug_loc:0000000000000d4b .LLST15
     /tmp/ccJAxMsJ.s:385    .text:00000000000000e0 .LBB204
     /tmp/ccJAxMsJ.s:401    .text:00000000000000ec .LBE204
     /tmp/ccJAxMsJ.s:406    .text:00000000000000f0 .LBB206
     /tmp/ccJAxMsJ.s:422    .text:00000000000000fc .LBE206
     /tmp/ccJAxMsJ.s:442    .text:0000000000000110 .LBB208
     /tmp/ccJAxMsJ.s:453    .text:0000000000000114 .LBE208
     /tmp/ccJAxMsJ.s:462    .text:0000000000000124 .LBB210
     /tmp/ccJAxMsJ.s:473    .text:0000000000000128 .LBE210
     /tmp/ccJAxMsJ.s:475    .text:0000000000000128 .LBB212
     /tmp/ccJAxMsJ.s:486    .text:000000000000012c .LBE212
     /tmp/ccJAxMsJ.s:7122   .debug_loc:0000000000000d6e .LLST16
     /tmp/ccJAxMsJ.s:488    .text:000000000000012c .LBB214
     /tmp/ccJAxMsJ.s:499    .text:0000000000000130 .LBE214
     /tmp/ccJAxMsJ.s:7129   .debug_loc:0000000000000d91 .LLST17
     /tmp/ccJAxMsJ.s:457    .text:000000000000011c .LVL9
     /tmp/ccJAxMsJ.s:66     .text:0000000000000040 .LBB176
     /tmp/ccJAxMsJ.s:83     .text:000000000000004c .LBE176
     /tmp/ccJAxMsJ.s:522    .text:0000000000000134 .LBB446
     /tmp/ccJAxMsJ.s:535    .text:000000000000013c .LBE446
     /tmp/ccJAxMsJ.s:7136   .debug_loc:0000000000000db4 .LLST83
     /tmp/ccJAxMsJ.s:618    .text:0000000000000184 .LVL22
     /tmp/ccJAxMsJ.s:10     .text:0000000000000000 .LFB54
     /tmp/ccJAxMsJ.s:40     .text:0000000000000020 .LFE54
     /tmp/ccJAxMsJ.s:7199   .debug_str:000000000000009c .LASF215
     /tmp/ccJAxMsJ.s:7429   .debug_str:0000000000000864 .LASF214
     /tmp/ccJAxMsJ.s:7571   .debug_str:0000000000000d4a .LASF216
     /tmp/ccJAxMsJ.s:7369   .debug_str:0000000000000657 .LASF217
     /tmp/ccJAxMsJ.s:7287   .debug_str:000000000000036e .LASF218
     /tmp/ccJAxMsJ.s:7309   .debug_str:000000000000042d .LASF219
     /tmp/ccJAxMsJ.s:7237   .debug_str:00000000000001c4 .LASF220
     /tmp/ccJAxMsJ.s:1923   .text:0000000000000528 .LVL133
     /tmp/ccJAxMsJ.s:1936   .text:0000000000000548 .LVL134
     /tmp/ccJAxMsJ.s:1948   .text:0000000000000558 .LVL135
     /tmp/ccJAxMsJ.s:1968   .text:000000000000056c .LVL137
     /tmp/ccJAxMsJ.s:1982   .text:0000000000000574 .LVL138
     /tmp/ccJAxMsJ.s:81     .text:000000000000004c .LVL0
     /tmp/ccJAxMsJ.s:138    .text:0000000000000088 .LVL2
     /tmp/ccJAxMsJ.s:518    .text:0000000000000134 .LVL14
     /tmp/ccJAxMsJ.s:531    .text:000000000000013c .LVL15
GAS LISTING /tmp/ccJAxMsJ.s 			page 74


     /tmp/ccJAxMsJ.s:555    .text:000000000000015c .LVL16
     /tmp/ccJAxMsJ.s:585    .text:000000000000016c .LVL18
     /tmp/ccJAxMsJ.s:609    .text:000000000000017c .LVL21
     /tmp/ccJAxMsJ.s:620    .text:0000000000000188 .LVL23
     /tmp/ccJAxMsJ.s:92     .text:0000000000000050 .LVL1
     /tmp/ccJAxMsJ.s:399    .text:00000000000000ec .LVL3
     /tmp/ccJAxMsJ.s:788    .text:00000000000001fc .LVL36
     /tmp/ccJAxMsJ.s:864    .text:0000000000000230 .LVL44
     /tmp/ccJAxMsJ.s:886    .text:000000000000023c .LVL45
     /tmp/ccJAxMsJ.s:960    .text:000000000000026c .LVL52
     /tmp/ccJAxMsJ.s:982    .text:0000000000000278 .LVL53
     /tmp/ccJAxMsJ.s:1042   .text:00000000000002b0 .LVL58
     /tmp/ccJAxMsJ.s:1064   .text:00000000000002bc .LVL59
     /tmp/ccJAxMsJ.s:1117   .text:00000000000002e0 .LVL64
     /tmp/ccJAxMsJ.s:1139   .text:00000000000002ec .LVL65
     /tmp/ccJAxMsJ.s:1196   .text:000000000000031c .LVL70
     /tmp/ccJAxMsJ.s:1218   .text:0000000000000328 .LVL71
     /tmp/ccJAxMsJ.s:1351   .text:000000000000038c .LVL85
     /tmp/ccJAxMsJ.s:1406   .text:00000000000003b0 .LVL88
     /tmp/ccJAxMsJ.s:1523   .text:0000000000000424 .LVL100
     /tmp/ccJAxMsJ.s:1545   .text:0000000000000430 .LVL101
     /tmp/ccJAxMsJ.s:1641   .text:0000000000000470 .LVL111
     /tmp/ccJAxMsJ.s:1661   .text:000000000000047c .LVL112
     /tmp/ccJAxMsJ.s:1760   .text:00000000000004c0 .LVL122
     /tmp/ccJAxMsJ.s:1780   .text:00000000000004cc .LVL123
     /tmp/ccJAxMsJ.s:823    .text:0000000000000214 .LVL39
     /tmp/ccJAxMsJ.s:828    .text:0000000000000218 .LVL40
     /tmp/ccJAxMsJ.s:921    .text:0000000000000254 .LVL48
     /tmp/ccJAxMsJ.s:576    .text:0000000000000168 .LVL17
     /tmp/ccJAxMsJ.s:597    .text:0000000000000174 .LVL20
     /tmp/ccJAxMsJ.s:590    .text:0000000000000170 .LVL19
     /tmp/ccJAxMsJ.s:644    .text:0000000000000198 .LVL24
     /tmp/ccJAxMsJ.s:767    .text:00000000000001f0 .LVL35
     /tmp/ccJAxMsJ.s:660    .text:00000000000001a4 .LVL25
     /tmp/ccJAxMsJ.s:693    .text:00000000000001b8 .LVL26
     /tmp/ccJAxMsJ.s:699    .text:00000000000001bc .LVL27
     /tmp/ccJAxMsJ.s:705    .text:00000000000001c0 .LVL28
     /tmp/ccJAxMsJ.s:711    .text:00000000000001c4 .LVL29
     /tmp/ccJAxMsJ.s:726    .text:00000000000001d8 .LVL31
     /tmp/ccJAxMsJ.s:760    .text:00000000000001e8 .LVL34
     /tmp/ccJAxMsJ.s:734    .text:00000000000001dc .LVL32
     /tmp/ccJAxMsJ.s:744    .text:00000000000001e0 .LVL33
     /tmp/ccJAxMsJ.s:793    .text:0000000000000200 .LVL37
     /tmp/ccJAxMsJ.s:809    .text:000000000000020c .LVL38
     /tmp/ccJAxMsJ.s:838    .text:0000000000000224 .LVL42
     /tmp/ccJAxMsJ.s:848    .text:0000000000000228 .LVL43
     /tmp/ccJAxMsJ.s:891    .text:0000000000000240 .LVL46
     /tmp/ccJAxMsJ.s:907    .text:000000000000024c .LVL47
     /tmp/ccJAxMsJ.s:934    .text:0000000000000260 .LVL50
     /tmp/ccJAxMsJ.s:944    .text:0000000000000264 .LVL51
     /tmp/ccJAxMsJ.s:987    .text:000000000000027c .LVL54
     /tmp/ccJAxMsJ.s:1003   .text:0000000000000288 .LVL55
     /tmp/ccJAxMsJ.s:1026   .text:00000000000002a8 .LVL57
     /tmp/ccJAxMsJ.s:1069   .text:00000000000002c0 .LVL60
     /tmp/ccJAxMsJ.s:1085   .text:00000000000002cc .LVL61
     /tmp/ccJAxMsJ.s:1101   .text:00000000000002d8 .LVL63
     /tmp/ccJAxMsJ.s:1144   .text:00000000000002f0 .LVL66
GAS LISTING /tmp/ccJAxMsJ.s 			page 75


     /tmp/ccJAxMsJ.s:1160   .text:00000000000002fc .LVL67
     /tmp/ccJAxMsJ.s:1180   .text:0000000000000314 .LVL69
     /tmp/ccJAxMsJ.s:1223   .text:000000000000032c .LVL72
     /tmp/ccJAxMsJ.s:1239   .text:0000000000000338 .LVL73
     /tmp/ccJAxMsJ.s:1260   .text:0000000000000344 .LVL74
     /tmp/ccJAxMsJ.s:1266   .text:0000000000000348 .LVL75
     /tmp/ccJAxMsJ.s:1285   .text:0000000000000360 .LVL78
     /tmp/ccJAxMsJ.s:1304   .text:000000000000036c .LVL80
     /tmp/ccJAxMsJ.s:1310   .text:0000000000000374 .LVL81
     /tmp/ccJAxMsJ.s:1344   .text:0000000000000384 .LVL84
     /tmp/ccJAxMsJ.s:1278   .text:0000000000000358 .LVL77
     /tmp/ccJAxMsJ.s:1297   .text:0000000000000368 .LVL79
     /tmp/ccJAxMsJ.s:1318   .text:0000000000000378 .LVL82
     /tmp/ccJAxMsJ.s:1328   .text:000000000000037c .LVL83
     /tmp/ccJAxMsJ.s:1375   .text:000000000000039c .LVL86
     /tmp/ccJAxMsJ.s:1391   .text:00000000000003a8 .LVL87
     /tmp/ccJAxMsJ.s:1410   .text:00000000000003b4 .LVL89
     /tmp/ccJAxMsJ.s:1464   .text:00000000000003f0 .LVL95
     /tmp/ccJAxMsJ.s:1476   .text:0000000000000404 .LVL96
     /tmp/ccJAxMsJ.s:1417   .text:00000000000003b8 .LVL90
     /tmp/ccJAxMsJ.s:1431   .text:00000000000003c8 .LVL92
     /tmp/ccJAxMsJ.s:1457   .text:00000000000003ec .LVL94
     /tmp/ccJAxMsJ.s:1487   .text:0000000000000408 .LVL97
     /tmp/ccJAxMsJ.s:1507   .text:000000000000041c .LVL99
     /tmp/ccJAxMsJ.s:1550   .text:0000000000000434 .LVL102
     /tmp/ccJAxMsJ.s:1566   .text:0000000000000440 .LVL103
     /tmp/ccJAxMsJ.s:1581   .text:0000000000000448 .LVL104
     /tmp/ccJAxMsJ.s:1597   .text:0000000000000454 .LVL106
     /tmp/ccJAxMsJ.s:1632   .text:0000000000000464 .LVL109
     /tmp/ccJAxMsJ.s:1590   .text:000000000000044c .LVL105
     /tmp/ccJAxMsJ.s:1606   .text:0000000000000458 .LVL107
     /tmp/ccJAxMsJ.s:1616   .text:000000000000045c .LVL108
     /tmp/ccJAxMsJ.s:1666   .text:0000000000000480 .LVL113
     /tmp/ccJAxMsJ.s:1682   .text:000000000000048c .LVL114
     /tmp/ccJAxMsJ.s:1697   .text:0000000000000494 .LVL115
     /tmp/ccJAxMsJ.s:1713   .text:00000000000004a0 .LVL117
     /tmp/ccJAxMsJ.s:1748   .text:00000000000004b0 .LVL120
     /tmp/ccJAxMsJ.s:1706   .text:0000000000000498 .LVL116
     /tmp/ccJAxMsJ.s:1722   .text:00000000000004a4 .LVL118
     /tmp/ccJAxMsJ.s:1732   .text:00000000000004a8 .LVL119
     /tmp/ccJAxMsJ.s:1847   .text:0000000000000500 .LVL131
     /tmp/ccJAxMsJ.s:1857   .text:0000000000000504 .LVL132
     /tmp/ccJAxMsJ.s:404    .text:00000000000000f0 .LVL4
     /tmp/ccJAxMsJ.s:420    .text:00000000000000fc .LVL5
     /tmp/ccJAxMsJ.s:437    .text:0000000000000108 .LVL6
     /tmp/ccJAxMsJ.s:470    .text:0000000000000128 .LVL11
     /tmp/ccJAxMsJ.s:483    .text:000000000000012c .LVL12
     /tmp/ccJAxMsJ.s:496    .text:0000000000000130 .LVL13
     /tmp/ccJAxMsJ.s:1998   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccJAxMsJ.s:1412   .text:00000000000003b4 .LBB264
     /tmp/ccJAxMsJ.s:1446   .text:00000000000003e0 .LBE264
     /tmp/ccJAxMsJ.s:1462   .text:00000000000003f0 .LBB273
     /tmp/ccJAxMsJ.s:1480   .text:0000000000000404 .LBE273
     /tmp/ccJAxMsJ.s:1422   .text:00000000000003c0 .LBE265
     /tmp/ccJAxMsJ.s:1465   .text:00000000000003f0 .LBB270
     /tmp/ccJAxMsJ.s:1479   .text:0000000000000404 .LBE270

GAS LISTING /tmp/ccJAxMsJ.s 			page 76


UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
