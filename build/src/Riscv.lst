GAS LISTING /tmp/ccxf6JJg.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB54:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 6/17/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/_thread.hpp"
   8:src/Riscv.cpp **** #include "../h/KSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** void Riscv::popSppSpie()    //pop supervisor previous privilege, supervisor previous interrupt enab
  15:src/Riscv.cpp **** {
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 16 5
  21              		.loc 1 16 39 is_stmt 0
  22              	#APP
  23              	# 16 "src/Riscv.cpp" 1
  17              	    __asm__ volatile ("sret");  //exit privileged regime
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/Riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE54:
GAS LISTING /tmp/ccxf6JJg.s 			page 2


  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB55:
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp **** void Riscv::handleSupervisorTrap(){
  47              		.loc 1 20 35 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F0 		addi	sp,sp,-256
  50              		.cfi_def_cfa_offset 256
  51 0024 233C110E 		sd	ra,248(sp)
  52 0028 2338810E 		sd	s0,240(sp)
  53 002c 2334910E 		sd	s1,232(sp)
  54 0030 2330210F 		sd	s2,224(sp)
  55 0034 233C310D 		sd	s3,216(sp)
  56 0038 2338410D 		sd	s4,208(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61              		.cfi_offset 19, -40
  62              		.cfi_offset 20, -48
  63 003c 13040110 		addi	s0,sp,256
  64              		.cfi_def_cfa 8, 0
  21:src/Riscv.cpp ****     uint64 scause = r_scause();
  65              		.loc 1 21 5
  66              	.LBB168:
  67              	.LBB169:
  68              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
GAS LISTING /tmp/ccxf6JJg.s 			page 3


  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void initKernel();
GAS LISTING /tmp/ccxf6JJg.s 			page 4


  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** private:
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     // supervisor trap handler
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** //    static void syscallHandler();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** };
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  99:src/../h/Riscv.hpp **** {
 100:src/../h/Riscv.hpp ****     uint64 volatile scause;
  69              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  70              		.loc 2 101 5
  71              		.loc 2 101 72 is_stmt 0
  72              	#APP
  73              	# 101 "src/../h/Riscv.hpp" 1
 102              	    return scause;
  74              		csrr a5, scause
  75              	# 0 "" 2
  76              	#NO_APP
  77 0044 2334F4F0 		sd	a5,-248(s0)
  78              		.loc 2 102 5 is_stmt 1
  79              		.loc 2 102 12 is_stmt 0
  80 0048 033784F0 		ld	a4,-248(s0)
  81              	.LVL0:
  82              	.LBE169:
  83              	.LBE168:
  22:src/Riscv.cpp ****     uint64 a0reg;
  84              		.loc 1 22 5 is_stmt 1
  23:src/Riscv.cpp ****     uint64 arg1;
  85              		.loc 1 23 5
  24:src/Riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (a0reg));
  86              		.loc 1 24 5
  87              		.loc 1 24 49 is_stmt 0
  88              	#APP
  89              	# 24 "src/Riscv.cpp" 1
  25              	
  90              		mv s1, a0
  91              	# 0 "" 2
  92              	.LVL1:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     if(scause == 0x8000000000000001){
  93              		.loc 1 27 5 is_stmt 1
  94              	#NO_APP
  95              	.LBB170:
  96 0050 9307F0FF 		li	a5,-1
  97 0054 9397F703 		slli	a5,a5,63
  98 0058 93871700 		addi	a5,a5,1
  99 005c 630AF70C 		beq	a4,a5,.L31
 100              	.LBE170:
  28:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  29:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccxf6JJg.s 			page 5


  30:src/Riscv.cpp **** //    else if(scause == 0x0000000000000009UL){
  31:src/Riscv.cpp **** //        uint64 sepc = r_sepc();
  32:src/Riscv.cpp **** //        mc_sstatus(SSTATUS_SPP);
  33:src/Riscv.cpp **** //
  34:src/Riscv.cpp **** //        w_sepc(sepc + 4);
  35:src/Riscv.cpp **** //
  36:src/Riscv.cpp **** //
  37:src/Riscv.cpp **** //    }
  38:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL){
 101              		.loc 1 38 10
 102              	.LBB418:
 103              	.LBB171:
 104 0060 9307F0FF 		li	a5,-1
 105 0064 9397F703 		slli	a5,a5,63
 106 0068 93879700 		addi	a5,a5,9
 107 006c 6306F70E 		beq	a4,a5,.L32
 108              	.LBE171:
 109              	.LBE418:
  39:src/Riscv.cpp ****         console_handler();
  40:src/Riscv.cpp ****     }
  41:src/Riscv.cpp ****     else if (scause == 0x0000000000000008UL || scause==0x0000000000000009UL){
 110              		.loc 1 41 10
 111              	.LBB419:
 112              	.LBB402:
 113              	.LBB172:
 114              		.loc 1 41 45 is_stmt 0
 115 0070 130787FF 		addi	a4,a4,-8
 116              	.LVL2:
 117              		.loc 1 41 10
 118 0074 93071000 		li	a5,1
 119 0078 63E0E70C 		bgtu	a4,a5,.L3
 120              	.LBE172:
 121              	.LBE402:
 122              	.LBE419:
  42:src/Riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  43:src/Riscv.cpp **** 
  44:src/Riscv.cpp ****         //call from yield
  45:src/Riscv.cpp **** 
  46:src/Riscv.cpp ****         if(a0reg==0x11){
 123              		.loc 1 46 9 is_stmt 1
 124              	.LBB420:
 125              	.LBB403:
 126              	.LBB389:
 127              	.LBB173:
 128 007c 93071001 		li	a5,17
 129 0080 6382F40E 		beq	s1,a5,.L33
 130              	.LVL3:
 131              	.L7:
 132              	.LBE173:
 133              	.LBE389:
 134              	.LBE403:
 135              	.LBE420:
  47:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  48:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp ****             _thread::thread_t *arg1;
GAS LISTING /tmp/ccxf6JJg.s 			page 6


  52:src/Riscv.cpp ****             _thread::Body arg2;
  53:src/Riscv.cpp ****             uint64 arg3;
  54:src/Riscv.cpp ****             uint64 *arg4;
  55:src/Riscv.cpp **** 
  56:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
  58:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
  59:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
  60:src/Riscv.cpp **** 
  61:src/Riscv.cpp **** 
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (thread_t*)
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
  65:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****             //make new thread object using overloaded new operator for that function
  68:src/Riscv.cpp ****             _thread* t = _thread::createThread(arg2,  (void*)arg3, arg4);    //t je thread_t
  69:src/Riscv.cpp ****             *arg1=t;
  70:src/Riscv.cpp **** 
  71:src/Riscv.cpp ****             uint64 ret;
  72:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
  73:src/Riscv.cpp ****             else ret =-1;
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp **** 
  76:src/Riscv.cpp ****             //return _thread* adress through a0
  77:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****             w_sstatus(sstatus);
  80:src/Riscv.cpp ****             w_sepc(sepc);
  81:src/Riscv.cpp ****         }
  82:src/Riscv.cpp ****         if(a0reg== 0x01 ){
 136              		.loc 1 82 9
 137              	.LBB421:
 138              	.LBB404:
 139              	.LBB390:
 140              	.LBB183:
 141 0084 93071000 		li	a5,1
 142 0088 6382F414 		beq	s1,a5,.L34
 143              	.LBE183:
 144              	.LBE390:
 145              	.LBE404:
 146              	.LBE421:
  83:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  84:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
  85:src/Riscv.cpp ****             //kmem_alloc
  86:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
  87:src/Riscv.cpp **** 
  88:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
  89:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
  90:src/Riscv.cpp **** 
  91:src/Riscv.cpp ****             //write return value to a0 register
  92:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ptr));
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****             w_sstatus(sstatus);
  95:src/Riscv.cpp ****             w_sepc(sepc);
  96:src/Riscv.cpp ****         }
  97:src/Riscv.cpp ****         else if(a0reg==0x02){
GAS LISTING /tmp/ccxf6JJg.s 			page 7


 147              		.loc 1 97 14
 148              	.LBB422:
 149              	.LBB405:
 150              	.LBB391:
 151              	.LBB377:
 152              	.LBB184:
 153 008c 93072000 		li	a5,2
 154 0090 638EF416 		beq	s1,a5,.L35
 155              	.LBE184:
 156              	.LBE377:
 157              	.LBE391:
 158              	.LBE405:
 159              	.LBE422:
  98:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
  99:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****             __asm__ volatile("ld a0, 11*8(fp)"); //a1
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" : "=r" (arg1));
 104:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 105:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 106:src/Riscv.cpp **** 
 107:src/Riscv.cpp ****             w_sstatus(sstatus);
 108:src/Riscv.cpp ****             w_sepc(sepc);
 109:src/Riscv.cpp ****         }
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp ****         else if(a0reg==0x12){
 160              		.loc 1 111 14
 161              	.LBB423:
 162              	.LBB406:
 163              	.LBB392:
 164              	.LBB378:
 165              	.LBB358:
 166              	.LBB185:
 167 0094 93072001 		li	a5,18
 168 0098 6388F41A 		beq	s1,a5,.L36
 169              	.LBE185:
 170              	.LBE358:
 171              	.LBE378:
 172              	.LBE392:
 173              	.LBE406:
 174              	.LBE423:
 112:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 113:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 114:src/Riscv.cpp **** 
 115:src/Riscv.cpp ****             _thread::running->finished=true;
 116:src/Riscv.cpp ****             _thread::dispatch();
 117:src/Riscv.cpp **** 
 118:src/Riscv.cpp ****             w_sstatus(sstatus);
 119:src/Riscv.cpp ****             w_sepc(sepc);
 120:src/Riscv.cpp **** 
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****         }
 123:src/Riscv.cpp ****         else if(a0reg == 0x13){
 175              		.loc 1 123 14
 176              	.LBB424:
 177              	.LBB407:
GAS LISTING /tmp/ccxf6JJg.s 			page 8


 178              	.LBB393:
 179              	.LBB379:
 180              	.LBB359:
 181              	.LBB340:
 182              	.LBB186:
 183 009c 93073001 		li	a5,19
 184 00a0 6386F41E 		beq	s1,a5,.L37
 185              	.LBE186:
 186              	.LBE340:
 187              	.LBE359:
 188              	.LBE379:
 189              	.LBE393:
 190              	.LBE407:
 191              	.LBE424:
 124:src/Riscv.cpp ****             //thread dispatch
 125:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 126:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 127:src/Riscv.cpp **** 
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp ****             _thread::dispatch();
 130:src/Riscv.cpp **** 
 131:src/Riscv.cpp ****             w_sstatus(sstatus);
 132:src/Riscv.cpp ****             w_sepc(sepc);
 133:src/Riscv.cpp ****         }
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****         else if(a0reg==0x04){
 192              		.loc 1 135 14
 193              	.LBB425:
 194              	.LBB408:
 195              	.LBB394:
 196              	.LBB380:
 197              	.LBB360:
 198              	.LBB341:
 199              	.LBB323:
 200              	.LBB187:
 201 00a4 93074000 		li	a5,4
 202 00a8 638AF420 		beq	s1,a5,.L38
 203              	.LBE187:
 204              	.LBE323:
 205              	.LBE341:
 206              	.LBE360:
 207              	.LBE380:
 208              	.LBE394:
 209              	.LBE408:
 210              	.LBE425:
 136:src/Riscv.cpp ****             //call from yield
 137:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 138:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 139:src/Riscv.cpp **** 
 140:src/Riscv.cpp ****             _thread::timeSliceCounter = 0;
 141:src/Riscv.cpp ****             _thread::dispatch();
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp ****             w_sstatus(sstatus);
 144:src/Riscv.cpp ****             w_sepc(sepc);
 145:src/Riscv.cpp ****         }
 146:src/Riscv.cpp ****         else if(a0reg==0x21){
 211              		.loc 1 146 14
GAS LISTING /tmp/ccxf6JJg.s 			page 9


 212              	.LBB426:
 213              	.LBB409:
 214              	.LBB395:
 215              	.LBB381:
 216              	.LBB361:
 217              	.LBB342:
 218              	.LBB324:
 219              	.LBB307:
 220              	.LBB188:
 221 00ac 93071002 		li	a5,33
 222 00b0 6384F424 		beq	s1,a5,.L39
 223              	.LBE188:
 224              	.LBE307:
 225              	.LBE324:
 226              	.LBE342:
 227              	.LBE361:
 228              	.LBE381:
 229              	.LBE395:
 230              	.LBE409:
 231              	.LBE426:
 147:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 148:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 149:src/Riscv.cpp **** 
 150:src/Riscv.cpp ****            KSemaphore::sem_t *arg1;
 151:src/Riscv.cpp ****            uint64 arg2;
 152:src/Riscv.cpp **** 
 153:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 154:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 155:src/Riscv.cpp **** 
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 157:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 158:src/Riscv.cpp **** 
 159:src/Riscv.cpp ****             KSemaphore* sem = new KSemaphore(arg2);
 160:src/Riscv.cpp ****             sem->open();
 161:src/Riscv.cpp ****             *arg1=sem;
 162:src/Riscv.cpp **** 
 163:src/Riscv.cpp ****             uint64 ret=0;
 164:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 165:src/Riscv.cpp ****             else ret=-1;
 166:src/Riscv.cpp **** 
 167:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 168:src/Riscv.cpp **** 
 169:src/Riscv.cpp ****             w_sstatus(sstatus);
 170:src/Riscv.cpp ****             w_sepc(sepc);
 171:src/Riscv.cpp ****         }
 172:src/Riscv.cpp ****         else if(a0reg==0x22){
 232              		.loc 1 172 14
 233              	.LBB427:
 234              	.LBB410:
 235              	.LBB396:
 236              	.LBB382:
 237              	.LBB362:
 238              	.LBB343:
 239              	.LBB325:
 240              	.LBB308:
 241              	.LBB292:
 242              	.LBB189:
GAS LISTING /tmp/ccxf6JJg.s 			page 10


 243 00b4 93072002 		li	a5,34
 244 00b8 6388F42A 		beq	s1,a5,.L40
 245              	.LBE189:
 246              	.LBE292:
 247              	.LBE308:
 248              	.LBE325:
 249              	.LBE343:
 250              	.LBE362:
 251              	.LBE382:
 252              	.LBE396:
 253              	.LBE410:
 254              	.LBE427:
 173:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 174:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 175:src/Riscv.cpp **** 
 176:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 177:src/Riscv.cpp **** 
 178:src/Riscv.cpp **** 
 179:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 182:src/Riscv.cpp **** 
 183:src/Riscv.cpp ****             KSemaphore* sem = arg1;
 184:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 185:src/Riscv.cpp ****             while(sem->blocked.peekFirst()!=0){
 186:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 187:src/Riscv.cpp ****                 t->setDeblocked();
 188:src/Riscv.cpp ****                 sem->val++;
 189:src/Riscv.cpp ****                 Scheduler::put(t);
 190:src/Riscv.cpp ****             }
 191:src/Riscv.cpp ****              sem->close();
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****             delete sem;
 194:src/Riscv.cpp **** 
 195:src/Riscv.cpp ****             w_sstatus(sstatus);
 196:src/Riscv.cpp ****             w_sepc(sepc);
 197:src/Riscv.cpp ****         }
 198:src/Riscv.cpp ****         else if(a0reg==0x23){
 255              		.loc 1 198 14
 256              	.LBB428:
 257              	.LBB411:
 258              	.LBB397:
 259              	.LBB383:
 260              	.LBB363:
 261              	.LBB344:
 262              	.LBB326:
 263              	.LBB309:
 264              	.LBB293:
 265              	.LBB272:
 266              	.LBB190:
 267 00bc 93073002 		li	a5,35
 268 00c0 6380F434 		beq	s1,a5,.L41
 269              	.LBE190:
 270              	.LBE272:
 271              	.LBE293:
 272              	.LBE309:
 273              	.LBE326:
GAS LISTING /tmp/ccxf6JJg.s 			page 11


 274              	.LBE344:
 275              	.LBE363:
 276              	.LBE383:
 277              	.LBE397:
 278              	.LBE411:
 279              	.LBE428:
 199:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 200:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 201:src/Riscv.cpp **** 
 202:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 207:src/Riscv.cpp **** 
 208:src/Riscv.cpp ****             uint64 ret;
 209:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 210:src/Riscv.cpp ****             if(arg1->isOpened()) {
 211:src/Riscv.cpp ****                  ret = arg1->wait();
 212:src/Riscv.cpp ****             }
 213:src/Riscv.cpp ****             else{
 214:src/Riscv.cpp ****                 ret=-1;
 215:src/Riscv.cpp ****             }
 216:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 217:src/Riscv.cpp **** 
 218:src/Riscv.cpp ****             w_sstatus(sstatus);
 219:src/Riscv.cpp ****             w_sepc(sepc);
 220:src/Riscv.cpp ****         }
 221:src/Riscv.cpp ****         else if(a0reg==0x24){
 280              		.loc 1 221 14
 281              	.LBB429:
 282              	.LBB412:
 283              	.LBB398:
 284              	.LBB384:
 285              	.LBB364:
 286              	.LBB345:
 287              	.LBB327:
 288              	.LBB310:
 289              	.LBB294:
 290              	.LBB273:
 291              	.LBB247:
 292              	.LBB191:
 293 00c4 93074002 		li	a5,36
 294 00c8 6382F438 		beq	s1,a5,.L42
 295              	.LBE191:
 296              	.LBE247:
 297              	.LBE273:
 298              	.LBE294:
 299              	.LBE310:
 300              	.LBE327:
 301              	.LBE345:
 302              	.LBE364:
 303              	.LBE384:
 304              	.LBE398:
 305              	.LBE412:
 306              	.LBE429:
 222:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
GAS LISTING /tmp/ccxf6JJg.s 			page 12


 223:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****             KSemaphore::sem_t arg1; //handle
 226:src/Riscv.cpp **** 
 227:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 228:src/Riscv.cpp **** 
 229:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (arg1));    //handle (sem_t*)
 230:src/Riscv.cpp **** 
 231:src/Riscv.cpp ****             uint64 ret;
 232:src/Riscv.cpp ****             if(arg1->isOpened()) {
 233:src/Riscv.cpp ****                 arg1->signal();
 234:src/Riscv.cpp ****                 ret=0;
 235:src/Riscv.cpp ****             }
 236:src/Riscv.cpp ****             else{
 237:src/Riscv.cpp ****                 ret = -1;
 238:src/Riscv.cpp ****             }
 239:src/Riscv.cpp **** 
 240:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 241:src/Riscv.cpp **** 
 242:src/Riscv.cpp ****             w_sstatus(sstatus);
 243:src/Riscv.cpp ****             w_sepc(sepc);
 244:src/Riscv.cpp ****         }
 245:src/Riscv.cpp ****         else if(a0reg==0x41){
 307              		.loc 1 245 14
 308              	.LBB430:
 309              	.LBB413:
 310              	.LBB399:
 311              	.LBB385:
 312              	.LBB365:
 313              	.LBB346:
 314              	.LBB328:
 315              	.LBB311:
 316              	.LBB295:
 317              	.LBB274:
 318              	.LBB248:
 319              	.LBB233:
 320              	.LBB192:
 321 00cc 93071004 		li	a5,65
 322 00d0 6386F43C 		beq	s1,a5,.L43
 323              	.LBE192:
 324              	.LBE233:
 325              	.LBE248:
 326              	.LBE274:
 327              	.LBE295:
 328              	.LBE311:
 329              	.LBE328:
 330              	.LBE346:
 331              	.LBE365:
 332              	.LBE385:
 333              	.LBE399:
 334              	.LBE413:
 335              	.LBE430:
 246:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 247:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 248:src/Riscv.cpp **** 
 249:src/Riscv.cpp ****             //call method from kernel Console class
 250:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
GAS LISTING /tmp/ccxf6JJg.s 			page 13


 251:src/Riscv.cpp ****             char c = __getc();
 252:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 253:src/Riscv.cpp **** 
 254:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (c));
 255:src/Riscv.cpp **** 
 256:src/Riscv.cpp **** 
 257:src/Riscv.cpp ****             w_sstatus(sstatus);
 258:src/Riscv.cpp ****             w_sepc(sepc);
 259:src/Riscv.cpp ****         }
 260:src/Riscv.cpp ****         else if(a0reg==0x42){
 336              		.loc 1 260 14
 337              	.LBB431:
 338              	.LBB414:
 339              	.LBB400:
 340              	.LBB386:
 341              	.LBB366:
 342              	.LBB347:
 343              	.LBB329:
 344              	.LBB312:
 345              	.LBB296:
 346              	.LBB275:
 347              	.LBB249:
 348              	.LBB234:
 349              	.LBB220:
 350              	.LBB193:
 351 00d4 93072004 		li	a5,66
 352 00d8 6390F406 		bne	s1,a5,.L3
 353              	.LBB194:
 261:src/Riscv.cpp ****             uint64 sepc = r_sepc() + 4;
 354              		.loc 1 261 13
 355              	.LBB195:
 356              	.LBB196:
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 106:src/../h/Riscv.hpp **** {
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 108:src/../h/Riscv.hpp **** }
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 111:src/../h/Riscv.hpp **** {
 112:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 357              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 358              		.loc 2 113 5
 359              		.loc 2 113 64 is_stmt 0
 360              	#APP
 361              	# 113 "src/../h/Riscv.hpp" 1
 114              	    return sepc;
 362              		csrr a5, sepc
 363              	# 0 "" 2
 364              	#NO_APP
 365 00e0 2334F4FC 		sd	a5,-56(s0)
 366              		.loc 2 114 5 is_stmt 1
 367              		.loc 2 114 12 is_stmt 0
 368 00e4 833484FC 		ld	s1,-56(s0)
 369              	.LVL4:
GAS LISTING /tmp/ccxf6JJg.s 			page 14


 370              	.LBE196:
 371              	.LBE195:
 372              		.loc 1 261 38
 373 00e8 93844400 		addi	s1,s1,4
 374              	.LVL5:
 262:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 375              		.loc 1 262 13 is_stmt 1
 376              	.LBB197:
 377              	.LBB198:
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 118:src/../h/Riscv.hpp **** {
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 123:src/../h/Riscv.hpp **** {
 124:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 126:src/../h/Riscv.hpp ****     return stvec;
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 130:src/../h/Riscv.hpp **** {
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 132:src/../h/Riscv.hpp **** }
 133:src/../h/Riscv.hpp **** 
 134:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 135:src/../h/Riscv.hpp **** {
 136:src/../h/Riscv.hpp ****     uint64 volatile stval;
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 138:src/../h/Riscv.hpp ****     return stval;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 142:src/../h/Riscv.hpp **** {
 143:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 144:src/../h/Riscv.hpp **** }
 145:src/../h/Riscv.hpp **** 
 146:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 147:src/../h/Riscv.hpp **** {
 148:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 152:src/../h/Riscv.hpp **** {
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 157:src/../h/Riscv.hpp **** {
 158:src/../h/Riscv.hpp ****     uint64 volatile sip;
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 160:src/../h/Riscv.hpp ****     return sip;
 161:src/../h/Riscv.hpp **** }
 162:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccxf6JJg.s 			page 15


 163:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask set
 169:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** //mask clear
 175:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 176:src/../h/Riscv.hpp **** {
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/Riscv.hpp **** }
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus()
 181:src/../h/Riscv.hpp **** {
 182:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 378              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 379              		.loc 2 183 5
 380              		.loc 2 183 76 is_stmt 0
 381              	#APP
 382              	# 183 "src/../h/Riscv.hpp" 1
 184              	    return sstatus;
 383              		csrr a5, sstatus
 384              	# 0 "" 2
 385              	#NO_APP
 386 00f0 2330F4FC 		sd	a5,-64(s0)
 387              		.loc 2 184 5 is_stmt 1
 388              		.loc 2 184 12 is_stmt 0
 389 00f4 033904FC 		ld	s2,-64(s0)
 390              	.LVL6:
 391              	.LBE198:
 392              	.LBE197:
 263:src/Riscv.cpp **** 
 264:src/Riscv.cpp ****             char c;
 393              		.loc 1 264 13 is_stmt 1
 265:src/Riscv.cpp ****             __asm__ volatile("ld a1, 11*8(fp)"); //a1
 394              		.loc 1 265 13
 395              		.loc 1 265 48 is_stmt 0
 396              	#APP
 397              	# 265 "src/Riscv.cpp" 1
 266              	
 267:src/Riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (c));
 398              		ld a1, 11*8(fp)
 399              	# 0 "" 2
 400              		.loc 1 267 13 is_stmt 1
 401              		.loc 1 267 53 is_stmt 0
 402              	# 267 "src/Riscv.cpp" 1
 268              	
 403              		mv a0, a1
 404              	# 0 "" 2
 405              	#NO_APP
 406 0100 1375F50F 		andi	a0,a0,0xff
GAS LISTING /tmp/ccxf6JJg.s 			page 16


 407              	.LVL7:
 269:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::TrapConsole);
 408              		.loc 1 269 13 is_stmt 1
 409              		.loc 1 269 27 is_stmt 0
 410 0104 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 410      83B70700 
 411              	.LVL8:
 412              	.LBB199:
 413              	.LBB200:
 131:src/../h/Riscv.hpp **** }
 414              		.loc 2 131 5 is_stmt 1
 131:src/../h/Riscv.hpp **** }
 415              		.loc 2 131 69 is_stmt 0
 416              	#APP
 417              	# 131 "src/../h/Riscv.hpp" 1
 418              		csrw stvec, a5
 419              	# 0 "" 2
 420              	.LVL9:
 421              	#NO_APP
 422              	.LBE200:
 423              	.LBE199:
 270:src/Riscv.cpp ****             __putc(c);
 424              		.loc 1 270 13 is_stmt 1
 425              		.loc 1 270 19 is_stmt 0
 426 0110 97000000 		call	__putc@plt
 426      E7800000 
 427              	.LVL10:
 271:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 428              		.loc 1 271 13 is_stmt 1
 429              		.loc 1 271 27 is_stmt 0
 430 0118 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 430      83B70700 
 431              	.LVL11:
 432              	.LBB201:
 433              	.LBB202:
 131:src/../h/Riscv.hpp **** }
 434              		.loc 2 131 5 is_stmt 1
 131:src/../h/Riscv.hpp **** }
 435              		.loc 2 131 69 is_stmt 0
 436              	#APP
 437              	# 131 "src/../h/Riscv.hpp" 1
 438              		csrw stvec, a5
 439              	# 0 "" 2
 440              	.LVL12:
 441              	#NO_APP
 442              	.LBE202:
 443              	.LBE201:
 272:src/Riscv.cpp **** 
 273:src/Riscv.cpp ****             w_sstatus(sstatus);
 444              		.loc 1 273 13 is_stmt 1
 445              	.LBB203:
 446              	.LBB204:
 185:src/../h/Riscv.hpp **** }
 186:src/../h/Riscv.hpp **** 
 187:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 188:src/../h/Riscv.hpp **** {
 189:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
GAS LISTING /tmp/ccxf6JJg.s 			page 17


 447              		.loc 2 189 5
 448              		.loc 2 189 77 is_stmt 0
 449              	#APP
 450              	# 189 "src/../h/Riscv.hpp" 1
 190              	}
 451              		csrw sstatus, s2
 452              	# 0 "" 2
 453              	.LVL13:
 454              	#NO_APP
 455              	.LBE204:
 456              	.LBE203:
 274:src/Riscv.cpp ****             w_sepc(sepc);
 457              		.loc 1 274 13 is_stmt 1
 458              	.LBB205:
 459              	.LBB206:
 119:src/../h/Riscv.hpp **** }
 460              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 461              		.loc 2 119 65 is_stmt 0
 462              	#APP
 463              	# 119 "src/../h/Riscv.hpp" 1
 464              		csrw sepc, s1
 465              	# 0 "" 2
 466              	.LVL14:
 467              	#NO_APP
 468              	.LBE206:
 469              	.LBE205:
 470              	.LBE194:
 471              	.LBE193:
 472              	.LBE220:
 473              	.LBE234:
 474              	.LBE249:
 475              	.LBE275:
 476              	.LBE296:
 477              	.LBE312:
 478              	.LBE329:
 479              	.LBE347:
 480              	.LBE366:
 481              	.LBE386:
 482              	.LBE400:
 483              	.LBE414:
 484              	.LBE431:
 275:src/Riscv.cpp ****         }
 276:src/Riscv.cpp ****         else{
 277:src/Riscv.cpp ****             // unexpected trap cause
 278:src/Riscv.cpp ****         }
 279:src/Riscv.cpp **** 
 280:src/Riscv.cpp ****     }
 281:src/Riscv.cpp **** 
 282:src/Riscv.cpp **** }
 485              		.loc 1 282 1
 486 012c 6F00C000 		j	.L3
 487              	.LVL15:
 488              	.L31:
 489              	.LBB432:
  28:src/Riscv.cpp ****     }
 490              		.loc 1 28 9 is_stmt 1
GAS LISTING /tmp/ccxf6JJg.s 			page 18


 491              	.LBB415:
 492              	.LBB416:
 153:src/../h/Riscv.hpp **** }
 493              		.loc 2 153 5
 153:src/../h/Riscv.hpp **** }
 494              		.loc 2 153 64 is_stmt 0
 495 0130 93072000 		li	a5,2
 496              	#APP
 497              	# 153 "src/../h/Riscv.hpp" 1
 498              		csrc sip, a5
 499              	# 0 "" 2
 500              	.LVL16:
 501              	#NO_APP
 502              	.L3:
 503              	.LBE416:
 504              	.LBE415:
 505              	.LBE432:
 506              		.loc 1 282 1
 507 0138 8330810F 		ld	ra,248(sp)
 508              		.cfi_remember_state
 509              		.cfi_restore 1
 510 013c 0334010F 		ld	s0,240(sp)
 511              		.cfi_restore 8
 512              		.cfi_def_cfa 2, 256
 513 0140 8334810E 		ld	s1,232(sp)
 514              		.cfi_restore 9
 515 0144 0339010E 		ld	s2,224(sp)
 516              		.cfi_restore 18
 517 0148 8339810D 		ld	s3,216(sp)
 518              		.cfi_restore 19
 519 014c 033A010D 		ld	s4,208(sp)
 520              		.cfi_restore 20
 521 0150 13010110 		addi	sp,sp,256
 522              		.cfi_def_cfa_offset 0
 523 0154 67800000 		jr	ra
 524              	.LVL17:
 525              	.L32:
 526              		.cfi_restore_state
 527              	.LBB433:
 528              	.LBB417:
  39:src/Riscv.cpp ****     }
 529              		.loc 1 39 9 is_stmt 1
  39:src/Riscv.cpp ****     }
 530              		.loc 1 39 24 is_stmt 0
 531 0158 97000000 		call	console_handler@plt
 531      E7800000 
 532              	.LVL18:
 533 0160 6FF09FFD 		j	.L3
 534              	.LVL19:
 535              	.L33:
 536              	.LBB401:
 537              	.LBB387:
 538              	.LBB174:
  47:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 539              		.loc 1 47 13 is_stmt 1
 540              	.LBB175:
 541              	.LBB176:
GAS LISTING /tmp/ccxf6JJg.s 			page 19


 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 542              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 543              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 544              		.loc 2 113 64 is_stmt 0
 545              	#APP
 546              	# 113 "src/../h/Riscv.hpp" 1
 547              		csrr a5, sepc
 548              	# 0 "" 2
 549              	#NO_APP
 550 0168 233CF4F0 		sd	a5,-232(s0)
 114:src/../h/Riscv.hpp **** }
 551              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 552              		.loc 2 114 12 is_stmt 0
 553 016c 033984F1 		ld	s2,-232(s0)
 554              	.LBE176:
 555              	.LBE175:
  47:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 556              		.loc 1 47 38
 557 0170 13094900 		addi	s2,s2,4
 558              	.LVL20:
  48:src/Riscv.cpp **** 
 559              		.loc 1 48 13 is_stmt 1
 560              	.LBB177:
 561              	.LBB178:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 562              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 563              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 564              		.loc 2 183 76 is_stmt 0
 565              	#APP
 566              	# 183 "src/../h/Riscv.hpp" 1
 567              		csrr a5, sstatus
 568              	# 0 "" 2
 569              	#NO_APP
 570 0178 2338F4F0 		sd	a5,-240(s0)
 184:src/../h/Riscv.hpp **** }
 571              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 572              		.loc 2 184 12 is_stmt 0
 573 017c 833904F1 		ld	s3,-240(s0)
 574              	.LVL21:
 575              	.LBE178:
 576              	.LBE177:
  51:src/Riscv.cpp ****             _thread::Body arg2;
 577              		.loc 1 51 13 is_stmt 1
  52:src/Riscv.cpp ****             uint64 arg3;
 578              		.loc 1 52 13
  53:src/Riscv.cpp ****             uint64 *arg4;
 579              		.loc 1 53 13
  54:src/Riscv.cpp **** 
 580              		.loc 1 54 13
  56:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 581              		.loc 1 56 13
GAS LISTING /tmp/ccxf6JJg.s 			page 20


  56:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 582              		.loc 1 56 48 is_stmt 0
 583              	#APP
 584              	# 56 "src/Riscv.cpp" 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 585              		ld a1, 11*8(fp)
 586              	# 0 "" 2
 587              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp ****             __asm__ volatile("ld a3, 13*8(fp)"); //a3
 588              		.loc 1 57 48 is_stmt 0
 589              	# 57 "src/Riscv.cpp" 1
  58:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 590              		ld a2, 12*8(fp)
 591              	# 0 "" 2
 592              		.loc 1 58 13 is_stmt 1
  58:src/Riscv.cpp ****             __asm__ volatile("ld a4, 14*8(fp)"); //a4
 593              		.loc 1 58 48 is_stmt 0
 594              	# 58 "src/Riscv.cpp" 1
  59:src/Riscv.cpp **** 
 595              		ld a3, 13*8(fp)
 596              	# 0 "" 2
 597              		.loc 1 59 13 is_stmt 1
  59:src/Riscv.cpp **** 
 598              		.loc 1 59 48 is_stmt 0
 599              	# 59 "src/Riscv.cpp" 1
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 600              		ld a4, 14*8(fp)
 601              	# 0 "" 2
 602              		.loc 1 62 13 is_stmt 1
  62:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //start routine
 603              		.loc 1 62 56 is_stmt 0
 604              	# 62 "src/Riscv.cpp" 1
 605              		mv s4, a1
 606              	# 0 "" 2
 607              	.LVL22:
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 608              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg3));    //argument of start routine
 609              		.loc 1 63 56 is_stmt 0
 610              	# 63 "src/Riscv.cpp" 1
 611              		mv a0, a2
 612              	# 0 "" 2
 613              	.LVL23:
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 614              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             __asm__ volatile("mv %0, a4" : "=r" (arg4));    //stack
 615              		.loc 1 64 56 is_stmt 0
 616              	# 64 "src/Riscv.cpp" 1
 617              		mv a1, a3
 618              	# 0 "" 2
 619              	.LVL24:
  65:src/Riscv.cpp **** 
 620              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp **** 
 621              		.loc 1 65 56 is_stmt 0
 622              	# 65 "src/Riscv.cpp" 1
 623              		mv a2, a4
GAS LISTING /tmp/ccxf6JJg.s 			page 21


 624              	# 0 "" 2
 625              	.LVL25:
  68:src/Riscv.cpp ****             *arg1=t;
 626              		.loc 1 68 13 is_stmt 1
  68:src/Riscv.cpp ****             *arg1=t;
 627              		.loc 1 68 47 is_stmt 0
 628              	#NO_APP
 629 01a0 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_Pm@plt
 629      E7800000 
 630              	.LVL26:
  69:src/Riscv.cpp **** 
 631              		.loc 1 69 13 is_stmt 1
  69:src/Riscv.cpp **** 
 632              		.loc 1 69 18 is_stmt 0
 633 01a8 2330AA00 		sd	a0,0(s4)
  71:src/Riscv.cpp ****             if(t!= nullptr)ret=0;
 634              		.loc 1 71 13 is_stmt 1
  72:src/Riscv.cpp ****             else ret =-1;
 635              		.loc 1 72 13
 636 01ac 630C0500 		beqz	a0,.L26
  72:src/Riscv.cpp ****             else ret =-1;
 637              		.loc 1 72 31 is_stmt 0
 638 01b0 93070000 		li	a5,0
 639              	.L8:
 640              	.LVL27:
  77:src/Riscv.cpp **** 
 641              		.loc 1 77 13 is_stmt 1
  77:src/Riscv.cpp **** 
 642              		.loc 1 77 56 is_stmt 0
 643              	#APP
 644              	# 77 "src/Riscv.cpp" 1
  79:src/Riscv.cpp ****             w_sepc(sepc);
 645              		mv a0, a5
 646              	# 0 "" 2
 647              		.loc 1 79 13 is_stmt 1
 648              	.LVL28:
 649              	#NO_APP
 650              	.LBB179:
 651              	.LBB180:
 189:src/../h/Riscv.hpp **** }
 652              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 653              		.loc 2 189 77 is_stmt 0
 654              	#APP
 655              	# 189 "src/../h/Riscv.hpp" 1
 656              		csrw sstatus, s3
 657              	# 0 "" 2
 658              	.LVL29:
 659              	#NO_APP
 660              	.LBE180:
 661              	.LBE179:
  80:src/Riscv.cpp ****         }
 662              		.loc 1 80 13 is_stmt 1
 663              	.LBB181:
 664              	.LBB182:
 119:src/../h/Riscv.hpp **** }
 665              		.loc 2 119 5
GAS LISTING /tmp/ccxf6JJg.s 			page 22


 119:src/../h/Riscv.hpp **** }
 666              		.loc 2 119 65 is_stmt 0
 667              	#APP
 668              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 669              		csrw sepc, s2
 670              	# 0 "" 2
 671              		.loc 2 120 1
 672              	#NO_APP
 673 01c0 6FF05FEC 		j	.L7
 674              	.LVL30:
 675              	.L26:
 676              	.LBE182:
 677              	.LBE181:
  73:src/Riscv.cpp **** 
 678              		.loc 1 73 22
 679 01c4 9307F0FF 		li	a5,-1
 680 01c8 6FF0DFFE 		j	.L8
 681              	.LVL31:
 682              	.L34:
 683              	.LBE174:
 684              	.LBE387:
 685              	.LBB388:
 686              	.LBB367:
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 687              		.loc 1 83 13 is_stmt 1
 688              	.LBB368:
 689              	.LBB369:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 690              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 691              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 692              		.loc 2 113 64 is_stmt 0
 693              	#APP
 694              	# 113 "src/../h/Riscv.hpp" 1
 695              		csrr a5, sepc
 696              	# 0 "" 2
 697              	#NO_APP
 698 01d0 2334F4F2 		sd	a5,-216(s0)
 114:src/../h/Riscv.hpp **** }
 699              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 700              		.loc 2 114 12 is_stmt 0
 701 01d4 833484F2 		ld	s1,-216(s0)
 702              	.LVL32:
 703              	.LBE369:
 704              	.LBE368:
  83:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 705              		.loc 1 83 38
 706 01d8 93844400 		addi	s1,s1,4
 707              	.LVL33:
  84:src/Riscv.cpp ****             //kmem_alloc
 708              		.loc 1 84 13 is_stmt 1
 709              	.LBB370:
 710              	.LBB371:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
GAS LISTING /tmp/ccxf6JJg.s 			page 23


 711              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 712              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 713              		.loc 2 183 76 is_stmt 0
 714              	#APP
 715              	# 183 "src/../h/Riscv.hpp" 1
 716              		csrr a5, sstatus
 717              	# 0 "" 2
 718              	#NO_APP
 719 01e0 2330F4F2 		sd	a5,-224(s0)
 184:src/../h/Riscv.hpp **** }
 720              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 721              		.loc 2 184 12 is_stmt 0
 722 01e4 033904F2 		ld	s2,-224(s0)
 723              	.LVL34:
 724              	.LBE371:
 725              	.LBE370:
  86:src/Riscv.cpp **** 
 726              		.loc 1 86 13 is_stmt 1
  86:src/Riscv.cpp **** 
 727              		.loc 1 86 48 is_stmt 0
 728              	#APP
 729              	# 86 "src/Riscv.cpp" 1
  88:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 730              		ld a0, 11*8(fp)
 731              	# 0 "" 2
 732              		.loc 1 88 13 is_stmt 1
  88:src/Riscv.cpp ****             uint64 ptr= (uint64) MemoryAllocator::kmem_alloc(arg1*MEM_BLOCK_SIZE);
 733              		.loc 1 88 56 is_stmt 0
 734              	# 88 "src/Riscv.cpp" 1
 735              		mv a0, a0
 736              	# 0 "" 2
 737              	.LVL35:
  89:src/Riscv.cpp **** 
 738              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp **** 
 739              		.loc 1 89 61 is_stmt 0
 740              	#NO_APP
 741 01f0 13156500 		slli	a0,a0,6
 742              	.LVL36:
 743 01f4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 743      E7800000 
 744              	.LVL37:
  92:src/Riscv.cpp **** 
 745              		.loc 1 92 13 is_stmt 1
  92:src/Riscv.cpp **** 
 746              		.loc 1 92 56 is_stmt 0
 747              	#APP
 748              	# 92 "src/Riscv.cpp" 1
  94:src/Riscv.cpp ****             w_sepc(sepc);
 749              		mv a0, a0
 750              	# 0 "" 2
 751              		.loc 1 94 13 is_stmt 1
 752              	.LVL38:
 753              	#NO_APP
GAS LISTING /tmp/ccxf6JJg.s 			page 24


 754              	.LBB372:
 755              	.LBB373:
 189:src/../h/Riscv.hpp **** }
 756              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 757              		.loc 2 189 77 is_stmt 0
 758              	#APP
 759              	# 189 "src/../h/Riscv.hpp" 1
 760              		csrw sstatus, s2
 761              	# 0 "" 2
 762              	.LVL39:
 763              	#NO_APP
 764              	.LBE373:
 765              	.LBE372:
  95:src/Riscv.cpp ****         }
 766              		.loc 1 95 13 is_stmt 1
 767              	.LBB374:
 768              	.LBB375:
 119:src/../h/Riscv.hpp **** }
 769              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 770              		.loc 2 119 65 is_stmt 0
 771              	#APP
 772              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 773              		csrw sepc, s1
 774              	# 0 "" 2
 775              		.loc 2 120 1
 776              	#NO_APP
 777 0208 6FF01FF3 		j	.L3
 778              	.LVL40:
 779              	.L35:
 780              	.LBE375:
 781              	.LBE374:
 782              	.LBE367:
 783              	.LBB376:
 784              	.LBB348:
  98:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 785              		.loc 1 98 13 is_stmt 1
 786              	.LBB349:
 787              	.LBB350:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 788              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 789              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 790              		.loc 2 113 64 is_stmt 0
 791              	#APP
 792              	# 113 "src/../h/Riscv.hpp" 1
 793              		csrr a5, sepc
 794              	# 0 "" 2
 795              	#NO_APP
 796 0210 233CF4F2 		sd	a5,-200(s0)
 114:src/../h/Riscv.hpp **** }
 797              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 798              		.loc 2 114 12 is_stmt 0
GAS LISTING /tmp/ccxf6JJg.s 			page 25


 799 0214 833484F3 		ld	s1,-200(s0)
 800              	.LVL41:
 801              	.LBE350:
 802              	.LBE349:
  98:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 803              		.loc 1 98 38
 804 0218 93844400 		addi	s1,s1,4
 805              	.LVL42:
  99:src/Riscv.cpp **** 
 806              		.loc 1 99 13 is_stmt 1
 807              	.LBB351:
 808              	.LBB352:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 809              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 810              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 811              		.loc 2 183 76 is_stmt 0
 812              	#APP
 813              	# 183 "src/../h/Riscv.hpp" 1
 814              		csrr a5, sstatus
 815              	# 0 "" 2
 816              	#NO_APP
 817 0220 2338F4F2 		sd	a5,-208(s0)
 184:src/../h/Riscv.hpp **** }
 818              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 819              		.loc 2 184 12 is_stmt 0
 820 0224 033904F3 		ld	s2,-208(s0)
 821              	.LVL43:
 822              	.LBE352:
 823              	.LBE351:
 101:src/Riscv.cpp **** 
 824              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp **** 
 825              		.loc 1 101 48 is_stmt 0
 826              	#APP
 827              	# 101 "src/Riscv.cpp" 1
 103:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 828              		ld a0, 11*8(fp)
 829              	# 0 "" 2
 830              		.loc 1 103 13 is_stmt 1
 103:src/Riscv.cpp ****             int ret = MemoryAllocator::kmem_free((void *) arg1);
 831              		.loc 1 103 56 is_stmt 0
 832              	# 103 "src/Riscv.cpp" 1
 833              		mv a0, a0
 834              	# 0 "" 2
 835              	.LVL44:
 104:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 836              		.loc 1 104 13 is_stmt 1
 104:src/Riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (ret));
 837              		.loc 1 104 49 is_stmt 0
 838              	#NO_APP
 839 0230 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 839      E7800000 
 840              	.LVL45:
 105:src/Riscv.cpp **** 
GAS LISTING /tmp/ccxf6JJg.s 			page 26


 841              		.loc 1 105 13 is_stmt 1
 105:src/Riscv.cpp **** 
 842              		.loc 1 105 56 is_stmt 0
 843              	#APP
 844              	# 105 "src/Riscv.cpp" 1
 107:src/Riscv.cpp ****             w_sepc(sepc);
 845              		mv a0, a0
 846              	# 0 "" 2
 847              		.loc 1 107 13 is_stmt 1
 848              	.LVL46:
 849              	#NO_APP
 850              	.LBB353:
 851              	.LBB354:
 189:src/../h/Riscv.hpp **** }
 852              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 853              		.loc 2 189 77 is_stmt 0
 854              	#APP
 855              	# 189 "src/../h/Riscv.hpp" 1
 856              		csrw sstatus, s2
 857              	# 0 "" 2
 858              	.LVL47:
 859              	#NO_APP
 860              	.LBE354:
 861              	.LBE353:
 108:src/Riscv.cpp ****         }
 862              		.loc 1 108 13 is_stmt 1
 863              	.LBB355:
 864              	.LBB356:
 119:src/../h/Riscv.hpp **** }
 865              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 866              		.loc 2 119 65 is_stmt 0
 867              	#APP
 868              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 869              		csrw sepc, s1
 870              	# 0 "" 2
 871              		.loc 2 120 1
 872              	#NO_APP
 873 0244 6FF05FEF 		j	.L3
 874              	.LVL48:
 875              	.L36:
 876              	.LBE356:
 877              	.LBE355:
 878              	.LBE348:
 879              	.LBB357:
 880              	.LBB330:
 112:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 881              		.loc 1 112 13 is_stmt 1
 882              	.LBB331:
 883              	.LBB332:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 884              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 885              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccxf6JJg.s 			page 27


 886              		.loc 2 113 64 is_stmt 0
 887              	#APP
 888              	# 113 "src/../h/Riscv.hpp" 1
 889              		csrr a5, sepc
 890              	# 0 "" 2
 891              	#NO_APP
 892 024c 2334F4F4 		sd	a5,-184(s0)
 114:src/../h/Riscv.hpp **** }
 893              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 894              		.loc 2 114 12 is_stmt 0
 895 0250 833484F4 		ld	s1,-184(s0)
 896              	.LVL49:
 897              	.LBE332:
 898              	.LBE331:
 112:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 899              		.loc 1 112 38
 900 0254 93844400 		addi	s1,s1,4
 901              	.LVL50:
 113:src/Riscv.cpp **** 
 902              		.loc 1 113 13 is_stmt 1
 903              	.LBB333:
 904              	.LBB334:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 905              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 906              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 907              		.loc 2 183 76 is_stmt 0
 908              	#APP
 909              	# 183 "src/../h/Riscv.hpp" 1
 910              		csrr a5, sstatus
 911              	# 0 "" 2
 912              	#NO_APP
 913 025c 2330F4F4 		sd	a5,-192(s0)
 184:src/../h/Riscv.hpp **** }
 914              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 915              		.loc 2 184 12 is_stmt 0
 916 0260 033904F4 		ld	s2,-192(s0)
 917              	.LVL51:
 918              	.LBE334:
 919              	.LBE333:
 115:src/Riscv.cpp ****             _thread::dispatch();
 920              		.loc 1 115 13 is_stmt 1
 115:src/Riscv.cpp ****             _thread::dispatch();
 921              		.loc 1 115 31 is_stmt 0
 922 0264 97070000 		la	a5,_ZN7_thread7runningE
 922      83B70700 
 923 026c 83B70700 		ld	a5,0(a5)
 115:src/Riscv.cpp ****             _thread::dispatch();
 924              		.loc 1 115 39
 925 0270 13071000 		li	a4,1
 926 0274 2384E702 		sb	a4,40(a5)
 116:src/Riscv.cpp **** 
 927              		.loc 1 116 13 is_stmt 1
 116:src/Riscv.cpp **** 
GAS LISTING /tmp/ccxf6JJg.s 			page 28


 928              		.loc 1 116 30 is_stmt 0
 929 0278 97000000 		call	_ZN7_thread8dispatchEv@plt
 929      E7800000 
 930              	.LVL52:
 118:src/Riscv.cpp ****             w_sepc(sepc);
 931              		.loc 1 118 13 is_stmt 1
 932              	.LBB335:
 933              	.LBB336:
 189:src/../h/Riscv.hpp **** }
 934              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 935              		.loc 2 189 77 is_stmt 0
 936              	#APP
 937              	# 189 "src/../h/Riscv.hpp" 1
 938              		csrw sstatus, s2
 939              	# 0 "" 2
 940              	.LVL53:
 941              	#NO_APP
 942              	.LBE336:
 943              	.LBE335:
 119:src/Riscv.cpp **** 
 944              		.loc 1 119 13 is_stmt 1
 945              	.LBB337:
 946              	.LBB338:
 119:src/../h/Riscv.hpp **** }
 947              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 948              		.loc 2 119 65 is_stmt 0
 949              	#APP
 950              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 951              		csrw sepc, s1
 952              	# 0 "" 2
 953              		.loc 2 120 1
 954              	#NO_APP
 955 0288 6FF01FEB 		j	.L3
 956              	.LVL54:
 957              	.L37:
 958              	.LBE338:
 959              	.LBE337:
 960              	.LBE330:
 961              	.LBB339:
 962              	.LBB313:
 125:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 963              		.loc 1 125 13 is_stmt 1
 964              	.LBB314:
 965              	.LBB315:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 966              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 967              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 968              		.loc 2 113 64 is_stmt 0
 969              	#APP
 970              	# 113 "src/../h/Riscv.hpp" 1
 971              		csrr a5, sepc
 972              	# 0 "" 2
GAS LISTING /tmp/ccxf6JJg.s 			page 29


 973              	#NO_APP
 974 0290 233CF4F4 		sd	a5,-168(s0)
 114:src/../h/Riscv.hpp **** }
 975              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 976              		.loc 2 114 12 is_stmt 0
 977 0294 833484F5 		ld	s1,-168(s0)
 978              	.LVL55:
 979              	.LBE315:
 980              	.LBE314:
 125:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 981              		.loc 1 125 38
 982 0298 93844400 		addi	s1,s1,4
 983              	.LVL56:
 126:src/Riscv.cpp **** 
 984              		.loc 1 126 13 is_stmt 1
 985              	.LBB316:
 986              	.LBB317:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 987              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 988              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 989              		.loc 2 183 76 is_stmt 0
 990              	#APP
 991              	# 183 "src/../h/Riscv.hpp" 1
 992              		csrr a5, sstatus
 993              	# 0 "" 2
 994              	#NO_APP
 995 02a0 2338F4F4 		sd	a5,-176(s0)
 184:src/../h/Riscv.hpp **** }
 996              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 997              		.loc 2 184 12 is_stmt 0
 998 02a4 033904F5 		ld	s2,-176(s0)
 999              	.LVL57:
 1000              	.LBE317:
 1001              	.LBE316:
 129:src/Riscv.cpp **** 
 1002              		.loc 1 129 13 is_stmt 1
 129:src/Riscv.cpp **** 
 1003              		.loc 1 129 30 is_stmt 0
 1004 02a8 97000000 		call	_ZN7_thread8dispatchEv@plt
 1004      E7800000 
 1005              	.LVL58:
 131:src/Riscv.cpp ****             w_sepc(sepc);
 1006              		.loc 1 131 13 is_stmt 1
 1007              	.LBB318:
 1008              	.LBB319:
 189:src/../h/Riscv.hpp **** }
 1009              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1010              		.loc 2 189 77 is_stmt 0
 1011              	#APP
 1012              	# 189 "src/../h/Riscv.hpp" 1
 1013              		csrw sstatus, s2
 1014              	# 0 "" 2
GAS LISTING /tmp/ccxf6JJg.s 			page 30


 1015              	.LVL59:
 1016              	#NO_APP
 1017              	.LBE319:
 1018              	.LBE318:
 132:src/Riscv.cpp ****         }
 1019              		.loc 1 132 13 is_stmt 1
 1020              	.LBB320:
 1021              	.LBB321:
 119:src/../h/Riscv.hpp **** }
 1022              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1023              		.loc 2 119 65 is_stmt 0
 1024              	#APP
 1025              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1026              		csrw sepc, s1
 1027              	# 0 "" 2
 1028              		.loc 2 120 1
 1029              	#NO_APP
 1030 02b8 6FF01FE8 		j	.L3
 1031              	.LVL60:
 1032              	.L38:
 1033              	.LBE321:
 1034              	.LBE320:
 1035              	.LBE313:
 1036              	.LBB322:
 1037              	.LBB297:
 137:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1038              		.loc 1 137 13 is_stmt 1
 1039              	.LBB298:
 1040              	.LBB299:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1041              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1042              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1043              		.loc 2 113 64 is_stmt 0
 1044              	#APP
 1045              	# 113 "src/../h/Riscv.hpp" 1
 1046              		csrr a5, sepc
 1047              	# 0 "" 2
 1048              	#NO_APP
 1049 02c0 2334F4F6 		sd	a5,-152(s0)
 114:src/../h/Riscv.hpp **** }
 1050              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1051              		.loc 2 114 12 is_stmt 0
 1052 02c4 833484F6 		ld	s1,-152(s0)
 1053              	.LVL61:
 1054              	.LBE299:
 1055              	.LBE298:
 137:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1056              		.loc 1 137 38
 1057 02c8 93844400 		addi	s1,s1,4
 1058              	.LVL62:
 138:src/Riscv.cpp **** 
 1059              		.loc 1 138 13 is_stmt 1
GAS LISTING /tmp/ccxf6JJg.s 			page 31


 1060              	.LBB300:
 1061              	.LBB301:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1062              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1063              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1064              		.loc 2 183 76 is_stmt 0
 1065              	#APP
 1066              	# 183 "src/../h/Riscv.hpp" 1
 1067              		csrr a5, sstatus
 1068              	# 0 "" 2
 1069              	#NO_APP
 1070 02d0 2330F4F6 		sd	a5,-160(s0)
 184:src/../h/Riscv.hpp **** }
 1071              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1072              		.loc 2 184 12 is_stmt 0
 1073 02d4 033904F6 		ld	s2,-160(s0)
 1074              	.LVL63:
 1075              	.LBE301:
 1076              	.LBE300:
 140:src/Riscv.cpp ****             _thread::dispatch();
 1077              		.loc 1 140 13 is_stmt 1
 140:src/Riscv.cpp ****             _thread::dispatch();
 1078              		.loc 1 140 39 is_stmt 0
 1079 02d8 97070000 		la	a5,_ZN7_thread16timeSliceCounterE
 1079      83B70700 
 1080 02e0 23B00700 		sd	zero,0(a5)
 141:src/Riscv.cpp **** 
 1081              		.loc 1 141 13 is_stmt 1
 141:src/Riscv.cpp **** 
 1082              		.loc 1 141 30 is_stmt 0
 1083 02e4 97000000 		call	_ZN7_thread8dispatchEv@plt
 1083      E7800000 
 1084              	.LVL64:
 143:src/Riscv.cpp ****             w_sepc(sepc);
 1085              		.loc 1 143 13 is_stmt 1
 1086              	.LBB302:
 1087              	.LBB303:
 189:src/../h/Riscv.hpp **** }
 1088              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1089              		.loc 2 189 77 is_stmt 0
 1090              	#APP
 1091              	# 189 "src/../h/Riscv.hpp" 1
 1092              		csrw sstatus, s2
 1093              	# 0 "" 2
 1094              	.LVL65:
 1095              	#NO_APP
 1096              	.LBE303:
 1097              	.LBE302:
 144:src/Riscv.cpp ****         }
 1098              		.loc 1 144 13 is_stmt 1
 1099              	.LBB304:
 1100              	.LBB305:
 119:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccxf6JJg.s 			page 32


 1101              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1102              		.loc 2 119 65 is_stmt 0
 1103              	#APP
 1104              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1105              		csrw sepc, s1
 1106              	# 0 "" 2
 1107              		.loc 2 120 1
 1108              	#NO_APP
 1109 02f4 6FF05FE4 		j	.L3
 1110              	.LVL66:
 1111              	.L39:
 1112              	.LBE305:
 1113              	.LBE304:
 1114              	.LBE297:
 1115              	.LBB306:
 1116              	.LBB276:
 147:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1117              		.loc 1 147 13 is_stmt 1
 1118              	.LBB277:
 1119              	.LBB278:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1120              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1121              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1122              		.loc 2 113 64 is_stmt 0
 1123              	#APP
 1124              	# 113 "src/../h/Riscv.hpp" 1
 1125              		csrr a5, sepc
 1126              	# 0 "" 2
 1127              	#NO_APP
 1128 02fc 233CF4F6 		sd	a5,-136(s0)
 114:src/../h/Riscv.hpp **** }
 1129              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1130              		.loc 2 114 12 is_stmt 0
 1131 0300 833484F7 		ld	s1,-136(s0)
 1132              	.LVL67:
 1133              	.LBE278:
 1134              	.LBE277:
 147:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1135              		.loc 1 147 38
 1136 0304 93844400 		addi	s1,s1,4
 1137              	.LVL68:
 148:src/Riscv.cpp **** 
 1138              		.loc 1 148 13 is_stmt 1
 1139              	.LBB279:
 1140              	.LBB280:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1141              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1142              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1143              		.loc 2 183 76 is_stmt 0
 1144              	#APP
GAS LISTING /tmp/ccxf6JJg.s 			page 33


 1145              	# 183 "src/../h/Riscv.hpp" 1
 1146              		csrr a5, sstatus
 1147              	# 0 "" 2
 1148              	#NO_APP
 1149 030c 2338F4F6 		sd	a5,-144(s0)
 184:src/../h/Riscv.hpp **** }
 1150              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1151              		.loc 2 184 12 is_stmt 0
 1152 0310 033904F7 		ld	s2,-144(s0)
 1153              	.LVL69:
 1154              	.LBE280:
 1155              	.LBE279:
 150:src/Riscv.cpp ****            uint64 arg2;
 1156              		.loc 1 150 12 is_stmt 1
 151:src/Riscv.cpp **** 
 1157              		.loc 1 151 12
 153:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1158              		.loc 1 153 13
 153:src/Riscv.cpp ****             __asm__ volatile("ld a2, 12*8(fp)"); //a2
 1159              		.loc 1 153 48 is_stmt 0
 1160              	#APP
 1161              	# 153 "src/Riscv.cpp" 1
 154:src/Riscv.cpp **** 
 1162              		ld a1, 11*8(fp)
 1163              	# 0 "" 2
 1164              		.loc 1 154 13 is_stmt 1
 154:src/Riscv.cpp **** 
 1165              		.loc 1 154 48 is_stmt 0
 1166              	# 154 "src/Riscv.cpp" 1
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1167              		ld a2, 12*8(fp)
 1168              	# 0 "" 2
 1169              		.loc 1 156 13 is_stmt 1
 156:src/Riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (arg2));    //init val
 1170              		.loc 1 156 56 is_stmt 0
 1171              	# 156 "src/Riscv.cpp" 1
 1172              		mv s3, a1
 1173              	# 0 "" 2
 1174              	.LVL70:
 157:src/Riscv.cpp **** 
 1175              		.loc 1 157 13 is_stmt 1
 157:src/Riscv.cpp **** 
 1176              		.loc 1 157 56 is_stmt 0
 1177              	# 157 "src/Riscv.cpp" 1
 1178              		mv s4, a2
 1179              	# 0 "" 2
 1180              	.LVL71:
 159:src/Riscv.cpp ****             sem->open();
 1181              		.loc 1 159 13 is_stmt 1
 159:src/Riscv.cpp ****             sem->open();
 1182              		.loc 1 159 50 is_stmt 0
 1183              	#NO_APP
 1184 0324 13050002 		li	a0,32
 1185 0328 97000000 		call	_ZN10KSemaphorenwEm@plt
 1185      E7800000 
 1186              	.LVL72:
GAS LISTING /tmp/ccxf6JJg.s 			page 34


 1187              	.LBB281:
 1188              	.LBB282:
 1189              		.file 3 "src/../h/KSemaphore.hpp"
   1:src/../h/KSemaphore.hpp **** //
   2:src/../h/KSemaphore.hpp **** // Created by os on 6/25/22.
   3:src/../h/KSemaphore.hpp **** //
   4:src/../h/KSemaphore.hpp **** 
   5:src/../h/KSemaphore.hpp **** #ifndef PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   6:src/../h/KSemaphore.hpp **** #define PROJECT_BASE_V1_1_KSEMAPHORE_HPP
   7:src/../h/KSemaphore.hpp **** 
   8:src/../h/KSemaphore.hpp **** 
   9:src/../h/KSemaphore.hpp **** #include "_thread.hpp"
  10:src/../h/KSemaphore.hpp **** #include "List.hpp"
  11:src/../h/KSemaphore.hpp **** 
  12:src/../h/KSemaphore.hpp **** class KSemaphore {
  13:src/../h/KSemaphore.hpp **** public:
  14:src/../h/KSemaphore.hpp ****     KSemaphore(uint64 init=1): val(init){
 1190              		.loc 3 14 40
 1191 0330 23204501 		sw	s4,0(a0)
 1192              	.LVL73:
 1193              	.LBB283:
 1194              	.LBB284:
 1195              		.file 4 "src/../h/List.hpp"
   1:src/../h/List.hpp **** //
   2:src/../h/List.hpp **** // Created by os on 6/17/22.
   3:src/../h/List.hpp **** //
   4:src/../h/List.hpp **** 
   5:src/../h/List.hpp **** #ifndef PROJECT_BASE_V1_1_LIST_HPP
   6:src/../h/List.hpp **** #define PROJECT_BASE_V1_1_LIST_HPP
   7:src/../h/List.hpp **** 
   8:src/../h/List.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/List.hpp **** 
  10:src/../h/List.hpp **** template<typename T>
  11:src/../h/List.hpp **** class List
  12:src/../h/List.hpp **** {
  13:src/../h/List.hpp **** private:
  14:src/../h/List.hpp ****     struct Elem
  15:src/../h/List.hpp ****     {
  16:src/../h/List.hpp ****         T *data;
  17:src/../h/List.hpp ****         Elem *next;
  18:src/../h/List.hpp **** 
  19:src/../h/List.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/List.hpp **** 
  21:src/../h/List.hpp ****     };
  22:src/../h/List.hpp **** 
  23:src/../h/List.hpp ****     Elem *head, *tail;
  24:src/../h/List.hpp **** 
  25:src/../h/List.hpp **** public:
  26:src/../h/List.hpp ****     List() : head(0), tail(0) {}
 1196              		.loc 4 26 29
 1197 0334 23340500 		sd	zero,8(a0)
 1198 0338 23380500 		sd	zero,16(a0)
 1199              	.LVL74:
 1200              	.LBE284:
 1201              	.LBE283:
 1202              	.LBE282:
 1203              	.LBE281:
GAS LISTING /tmp/ccxf6JJg.s 			page 35


 160:src/Riscv.cpp ****             *arg1=sem;
 1204              		.loc 1 160 13 is_stmt 1
 1205              	.LBB285:
 1206              	.LBB286:
  15:src/../h/KSemaphore.hpp **** 
  16:src/../h/KSemaphore.hpp ****     }
  17:src/../h/KSemaphore.hpp **** 
  18:src/../h/KSemaphore.hpp ****     int wait();
  19:src/../h/KSemaphore.hpp ****     void signal();
  20:src/../h/KSemaphore.hpp **** 
  21:src/../h/KSemaphore.hpp ****     int value() const{return val;}
  22:src/../h/KSemaphore.hpp ****     typedef KSemaphore* sem_t;
  23:src/../h/KSemaphore.hpp **** 
  24:src/../h/KSemaphore.hpp ****     void* operator new(size_t n);
  25:src/../h/KSemaphore.hpp **** 
  26:src/../h/KSemaphore.hpp ****     void* operator new[](size_t n);
  27:src/../h/KSemaphore.hpp **** 
  28:src/../h/KSemaphore.hpp ****     void operator delete(void* p)noexcept;
  29:src/../h/KSemaphore.hpp **** 
  30:src/../h/KSemaphore.hpp ****     void operator delete[] (void* p)noexcept;
  31:src/../h/KSemaphore.hpp **** 
  32:src/../h/KSemaphore.hpp ****     bool isOpened(){return opened;}
  33:src/../h/KSemaphore.hpp **** 
  34:src/../h/KSemaphore.hpp ****     void open(){
  35:src/../h/KSemaphore.hpp ****         opened=true;
 1207              		.loc 3 35 9
 1208              		.loc 3 35 15 is_stmt 0
 1209 033c 93071000 		li	a5,1
 1210 0340 230CF500 		sb	a5,24(a0)
 1211              	.LVL75:
 1212              	.LBE286:
 1213              	.LBE285:
 161:src/Riscv.cpp **** 
 1214              		.loc 1 161 13 is_stmt 1
 161:src/Riscv.cpp **** 
 1215              		.loc 1 161 18 is_stmt 0
 1216 0344 23B0A900 		sd	a0,0(s3)
 163:src/Riscv.cpp ****             if(sem!= nullptr)ret=0;
 1217              		.loc 1 163 13 is_stmt 1
 1218              	.LVL76:
 164:src/Riscv.cpp ****             else ret=-1;
 1219              		.loc 1 164 13
 1220 0348 630C0500 		beqz	a0,.L27
 164:src/Riscv.cpp ****             else ret=-1;
 1221              		.loc 1 164 33 is_stmt 0
 1222 034c 93070000 		li	a5,0
 1223              	.L15:
 1224              	.LVL77:
 167:src/Riscv.cpp **** 
 1225              		.loc 1 167 13 is_stmt 1
 167:src/Riscv.cpp **** 
 1226              		.loc 1 167 56 is_stmt 0
 1227              	#APP
 1228              	# 167 "src/Riscv.cpp" 1
 169:src/Riscv.cpp ****             w_sepc(sepc);
 1229              		mv a0, a5
 1230              	# 0 "" 2
GAS LISTING /tmp/ccxf6JJg.s 			page 36


 1231              		.loc 1 169 13 is_stmt 1
 1232              	.LVL78:
 1233              	#NO_APP
 1234              	.LBB287:
 1235              	.LBB288:
 189:src/../h/Riscv.hpp **** }
 1236              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1237              		.loc 2 189 77 is_stmt 0
 1238              	#APP
 1239              	# 189 "src/../h/Riscv.hpp" 1
 1240              		csrw sstatus, s2
 1241              	# 0 "" 2
 1242              	.LVL79:
 1243              	#NO_APP
 1244              	.LBE288:
 1245              	.LBE287:
 170:src/Riscv.cpp ****         }
 1246              		.loc 1 170 13 is_stmt 1
 1247              	.LBB289:
 1248              	.LBB290:
 119:src/../h/Riscv.hpp **** }
 1249              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1250              		.loc 2 119 65 is_stmt 0
 1251              	#APP
 1252              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1253              		csrw sepc, s1
 1254              	# 0 "" 2
 1255              		.loc 2 120 1
 1256              	#NO_APP
 1257 035c 6FF0DFDD 		j	.L3
 1258              	.LVL80:
 1259              	.L27:
 1260              	.LBE290:
 1261              	.LBE289:
 165:src/Riscv.cpp **** 
 1262              		.loc 1 165 21
 1263 0360 9307F0FF 		li	a5,-1
 1264 0364 6FF0DFFE 		j	.L15
 1265              	.LVL81:
 1266              	.L40:
 1267              	.LBE276:
 1268              	.LBB291:
 1269              	.LBB250:
 173:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1270              		.loc 1 173 13 is_stmt 1
 1271              	.LBB251:
 1272              	.LBB252:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1273              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1274              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1275              		.loc 2 113 64 is_stmt 0
 1276              	#APP
GAS LISTING /tmp/ccxf6JJg.s 			page 37


 1277              	# 113 "src/../h/Riscv.hpp" 1
 1278              		csrr a5, sepc
 1279              	# 0 "" 2
 1280              	#NO_APP
 1281 036c 2334F4F8 		sd	a5,-120(s0)
 114:src/../h/Riscv.hpp **** }
 1282              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1283              		.loc 2 114 12 is_stmt 0
 1284 0370 833984F8 		ld	s3,-120(s0)
 1285              	.LBE252:
 1286              	.LBE251:
 173:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1287              		.loc 1 173 38
 1288 0374 93894900 		addi	s3,s3,4
 1289              	.LVL82:
 174:src/Riscv.cpp **** 
 1290              		.loc 1 174 13 is_stmt 1
 1291              	.LBB253:
 1292              	.LBB254:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1293              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1294              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1295              		.loc 2 183 76 is_stmt 0
 1296              	#APP
 1297              	# 183 "src/../h/Riscv.hpp" 1
 1298              		csrr a5, sstatus
 1299              	# 0 "" 2
 1300              	#NO_APP
 1301 037c 2330F4F8 		sd	a5,-128(s0)
 184:src/../h/Riscv.hpp **** }
 1302              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1303              		.loc 2 184 12 is_stmt 0
 1304 0380 033A04F8 		ld	s4,-128(s0)
 1305              	.LVL83:
 1306              	.LBE254:
 1307              	.LBE253:
 176:src/Riscv.cpp **** 
 1308              		.loc 1 176 13 is_stmt 1
 179:src/Riscv.cpp **** 
 1309              		.loc 1 179 13
 179:src/Riscv.cpp **** 
 1310              		.loc 1 179 48 is_stmt 0
 1311              	#APP
 1312              	# 179 "src/Riscv.cpp" 1
 181:src/Riscv.cpp **** 
 1313              		ld a1, 11*8(fp)
 1314              	# 0 "" 2
 1315              		.loc 1 181 13 is_stmt 1
 181:src/Riscv.cpp **** 
 1316              		.loc 1 181 56 is_stmt 0
 1317              	# 181 "src/Riscv.cpp" 1
 1318              		mv s1, a1
 1319              	# 0 "" 2
GAS LISTING /tmp/ccxf6JJg.s 			page 38


 1320              	.LVL84:
 183:src/Riscv.cpp ****             //deblock all blocked threads on this semaphore
 1321              		.loc 1 183 13 is_stmt 1
 1322              	#NO_APP
 1323 038c 6F004003 		j	.L19
 1324              	.LVL85:
 1325              	.L44:
 1326              	.LBB255:
 1327              	.LBB256:
 1328              	.LBB257:
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp ****     List(const List<T> &) = delete;
  29:src/../h/List.hpp **** 
  30:src/../h/List.hpp ****     List<T> &operator=(const List<T> &) = delete;
  31:src/../h/List.hpp **** 
  32:src/../h/List.hpp ****     void* operator new(size_t n){
  33:src/../h/List.hpp ****         return MemoryAllocator::kmem_alloc(n);
  34:src/../h/List.hpp ****     }
  35:src/../h/List.hpp **** 
  36:src/../h/List.hpp ****     void operator delete(void* p){
  37:src/../h/List.hpp ****         MemoryAllocator::kmem_free(p);
  38:src/../h/List.hpp ****     }
  39:src/../h/List.hpp **** 
  40:src/../h/List.hpp ****     void addFirst(T *data)
  41:src/../h/List.hpp ****     {
  42:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  43:src/../h/List.hpp ****         elem->data=data;
  44:src/../h/List.hpp ****         elem->next=head;
  45:src/../h/List.hpp ****         head = elem;
  46:src/../h/List.hpp ****         if (!tail) { tail = head; }
  47:src/../h/List.hpp ****     }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp ****     void addLast(T *data)
  50:src/../h/List.hpp ****     {
  51:src/../h/List.hpp ****         Elem *elem = (Elem*)MemoryAllocator::kmem_alloc(sizeof (Elem));
  52:src/../h/List.hpp ****         elem->data=data;
  53:src/../h/List.hpp ****         elem->next=0;
  54:src/../h/List.hpp ****         if (tail)
  55:src/../h/List.hpp ****         {
  56:src/../h/List.hpp ****             tail->next = elem;
  57:src/../h/List.hpp ****             tail = elem;
  58:src/../h/List.hpp ****         } else
  59:src/../h/List.hpp ****         {
  60:src/../h/List.hpp ****             head = tail = elem;
  61:src/../h/List.hpp ****         }
  62:src/../h/List.hpp ****     }
  63:src/../h/List.hpp **** 
  64:src/../h/List.hpp ****     T *removeFirst()
  65:src/../h/List.hpp ****     {
  66:src/../h/List.hpp ****         if (!head) { return 0; }
  67:src/../h/List.hpp **** 
  68:src/../h/List.hpp ****         Elem *elem = head;
  69:src/../h/List.hpp ****         head = head->next;
  70:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1329              		.loc 4 70 22 is_stmt 0
 1330 0390 23B80400 		sd	zero,16(s1)
 1331              	.L18:
GAS LISTING /tmp/ccxf6JJg.s 			page 39


  71:src/../h/List.hpp **** 
  72:src/../h/List.hpp ****         T *ret = elem->data;
 1332              		.loc 4 72 12
 1333 0394 03390500 		ld	s2,0(a0)
 1334              	.LVL86:
  73:src/../h/List.hpp ****         MemoryAllocator::kmem_free(elem);
 1335              		.loc 4 73 35
 1336 0398 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 1336      E7800000 
 1337              	.LVL87:
 1338              	.LBE257:
 1339              	.LBE256:
 187:src/Riscv.cpp ****                 sem->val++;
 1340              		.loc 1 187 17 is_stmt 1
 1341              	.LBB259:
 1342              	.LBB260:
 1343              		.file 5 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
  19:src/../h/_thread.hpp **** 
  20:src/../h/_thread.hpp ****     void setFinished(bool value) { finished = value; }
  21:src/../h/_thread.hpp **** 
  22:src/../h/_thread.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  23:src/../h/_thread.hpp **** 
  24:src/../h/_thread.hpp ****     using Body = void (*)(void*);   //Body is a pointer to a funtion that takes one argument
  25:src/../h/_thread.hpp **** 
  26:src/../h/_thread.hpp ****     static _thread *createThread(Body body, void* arg, uint64* stek);
  27:src/../h/_thread.hpp **** 
  28:src/../h/_thread.hpp ****     static void yield();
  29:src/../h/_thread.hpp **** 
  30:src/../h/_thread.hpp ****     void start();
  31:src/../h/_thread.hpp **** 
  32:src/../h/_thread.hpp ****     void setStack(uint64* stek);
  33:src/../h/_thread.hpp **** 
  34:src/../h/_thread.hpp ****     void setDeblocked(){
  35:src/../h/_thread.hpp ****         deblocked = true;
 1344              		.loc 5 35 9
 1345              		.loc 5 35 19 is_stmt 0
 1346 03a0 93071000 		li	a5,1
 1347 03a4 230CF902 		sb	a5,56(s2)
 1348              	.LVL88:
GAS LISTING /tmp/ccxf6JJg.s 			page 40


 1349              	.LBE260:
 1350              	.LBE259:
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1351              		.loc 1 188 17 is_stmt 1
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1352              		.loc 1 188 22 is_stmt 0
 1353 03a8 83A70400 		lw	a5,0(s1)
 188:src/Riscv.cpp ****                 Scheduler::put(t);
 1354              		.loc 1 188 25
 1355 03ac 9B871700 		addiw	a5,a5,1
 1356 03b0 23A0F400 		sw	a5,0(s1)
 189:src/Riscv.cpp ****             }
 1357              		.loc 1 189 17 is_stmt 1
 189:src/Riscv.cpp ****             }
 1358              		.loc 1 189 31 is_stmt 0
 1359 03b4 13050900 		mv	a0,s2
 1360 03b8 97000000 		call	_ZN9Scheduler3putEP7_thread@plt
 1360      E7800000 
 1361              	.LVL89:
 1362              	.L19:
 1363              	.LBE255:
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1364              		.loc 1 185 13 is_stmt 1
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1365              		.loc 1 185 43
 1366              	.LBB262:
 1367              	.LBB263:
  74:src/../h/List.hpp ****         return ret;
  75:src/../h/List.hpp ****     }
  76:src/../h/List.hpp **** 
  77:src/../h/List.hpp ****     T *peekFirst()
  78:src/../h/List.hpp ****     {
  79:src/../h/List.hpp ****         if (!head) { return 0; }
 1368              		.loc 4 79 14 is_stmt 0
 1369 03c0 03B58400 		ld	a0,8(s1)
 1370              		.loc 4 79 9
 1371 03c4 630E0500 		beqz	a0,.L17
  80:src/../h/List.hpp ****         return head->data;
 1372              		.loc 4 80 22
 1373 03c8 83370500 		ld	a5,0(a0)
 1374              	.LVL90:
 1375              	.LBE263:
 1376              	.LBE262:
 185:src/Riscv.cpp ****                 _thread* t = sem->blocked.removeFirst();
 1377              		.loc 1 185 43
 1378 03cc 638A0700 		beqz	a5,.L17
 1379              	.LBB264:
 186:src/Riscv.cpp ****                 t->setDeblocked();
 1380              		.loc 1 186 17 is_stmt 1
 1381              	.LVL91:
 1382              	.LBB261:
 1383              	.LBB258:
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1384              		.loc 4 69 22 is_stmt 0
 1385 03d0 83378500 		ld	a5,8(a0)
  69:src/../h/List.hpp ****         if (!head) { tail = 0; }
 1386              		.loc 4 69 9
GAS LISTING /tmp/ccxf6JJg.s 			page 41


 1387 03d4 23B4F400 		sd	a5,8(s1)
  70:src/../h/List.hpp **** 
 1388              		.loc 4 70 9
 1389 03d8 E39E07FA 		bnez	a5,.L18
 1390 03dc 6FF05FFB 		j	.L44
 1391              	.LVL92:
 1392              	.L17:
 1393              	.LBE258:
 1394              	.LBE261:
 1395              	.LBE264:
 191:src/Riscv.cpp **** 
 1396              		.loc 1 191 14 is_stmt 1
 1397              	.LBB265:
 1398              	.LBB266:
  36:src/../h/KSemaphore.hpp ****     }
  37:src/../h/KSemaphore.hpp ****     void close(){
  38:src/../h/KSemaphore.hpp ****         opened = false;
 1399              		.loc 3 38 9
 1400              		.loc 3 38 16 is_stmt 0
 1401 03e0 238C0400 		sb	zero,24(s1)
 1402              	.LVL93:
 1403              	.LBE266:
 1404              	.LBE265:
 193:src/Riscv.cpp **** 
 1405              		.loc 1 193 13 is_stmt 1
 193:src/Riscv.cpp **** 
 1406              		.loc 1 193 23 is_stmt 0
 1407 03e4 63880400 		beqz	s1,.L20
 193:src/Riscv.cpp **** 
 1408              		.loc 1 193 20 discriminator 1
 1409 03e8 13850400 		mv	a0,s1
 1410 03ec 97000000 		call	_ZN10KSemaphoredlEPv@plt
 1410      E7800000 
 1411              	.LVL94:
 1412              	.L20:
 195:src/Riscv.cpp ****             w_sepc(sepc);
 1413              		.loc 1 195 13 is_stmt 1
 1414              	.LBB267:
 1415              	.LBB268:
 189:src/../h/Riscv.hpp **** }
 1416              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1417              		.loc 2 189 77 is_stmt 0
 1418              	#APP
 1419              	# 189 "src/../h/Riscv.hpp" 1
 1420              		csrw sstatus, s4
 1421              	# 0 "" 2
 1422              	.LVL95:
 1423              	#NO_APP
 1424              	.LBE268:
 1425              	.LBE267:
 196:src/Riscv.cpp ****         }
 1426              		.loc 1 196 13 is_stmt 1
 1427              	.LBB269:
 1428              	.LBB270:
 119:src/../h/Riscv.hpp **** }
 1429              		.loc 2 119 5
GAS LISTING /tmp/ccxf6JJg.s 			page 42


 119:src/../h/Riscv.hpp **** }
 1430              		.loc 2 119 65 is_stmt 0
 1431              	#APP
 1432              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1433              		csrw sepc, s3
 1434              	# 0 "" 2
 1435              		.loc 2 120 1
 1436              	#NO_APP
 1437 03fc 6FF0DFD3 		j	.L3
 1438              	.LVL96:
 1439              	.L41:
 1440              	.LBE270:
 1441              	.LBE269:
 1442              	.LBE250:
 1443              	.LBB271:
 1444              	.LBB235:
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1445              		.loc 1 199 13 is_stmt 1
 1446              	.LBB236:
 1447              	.LBB237:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1448              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1449              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1450              		.loc 2 113 64 is_stmt 0
 1451              	#APP
 1452              	# 113 "src/../h/Riscv.hpp" 1
 1453              		csrr a5, sepc
 1454              	# 0 "" 2
 1455              	#NO_APP
 1456 0404 233CF4F8 		sd	a5,-104(s0)
 114:src/../h/Riscv.hpp **** }
 1457              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1458              		.loc 2 114 12 is_stmt 0
 1459 0408 833484F9 		ld	s1,-104(s0)
 1460              	.LVL97:
 1461              	.LBE237:
 1462              	.LBE236:
 199:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1463              		.loc 1 199 38
 1464 040c 93844400 		addi	s1,s1,4
 1465              	.LVL98:
 200:src/Riscv.cpp **** 
 1466              		.loc 1 200 13 is_stmt 1
 1467              	.LBB238:
 1468              	.LBB239:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1469              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1470              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1471              		.loc 2 183 76 is_stmt 0
 1472              	#APP
 1473              	# 183 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/ccxf6JJg.s 			page 43


 1474              		csrr a5, sstatus
 1475              	# 0 "" 2
 1476              	#NO_APP
 1477 0414 2338F4F8 		sd	a5,-112(s0)
 184:src/../h/Riscv.hpp **** }
 1478              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1479              		.loc 2 184 12 is_stmt 0
 1480 0418 033904F9 		ld	s2,-112(s0)
 1481              	.LVL99:
 1482              	.LBE239:
 1483              	.LBE238:
 202:src/Riscv.cpp **** 
 1484              		.loc 1 202 13 is_stmt 1
 204:src/Riscv.cpp **** 
 1485              		.loc 1 204 13
 204:src/Riscv.cpp **** 
 1486              		.loc 1 204 48 is_stmt 0
 1487              	#APP
 1488              	# 204 "src/Riscv.cpp" 1
 206:src/Riscv.cpp **** 
 1489              		ld a1, 11*8(fp)
 1490              	# 0 "" 2
 1491              		.loc 1 206 13 is_stmt 1
 206:src/Riscv.cpp **** 
 1492              		.loc 1 206 56 is_stmt 0
 1493              	# 206 "src/Riscv.cpp" 1
 1494              		mv a0, a1
 1495              	# 0 "" 2
 1496              	.LVL100:
 208:src/Riscv.cpp **** //            KSemaphore* sem = *arg1;
 1497              		.loc 1 208 13 is_stmt 1
 210:src/Riscv.cpp ****                  ret = arg1->wait();
 1498              		.loc 1 210 13
 1499              	#NO_APP
 1500              	.LBB240:
 1501              	.LBB241:
  32:src/../h/KSemaphore.hpp **** 
 1502              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1503              		.loc 3 32 28 is_stmt 0
 1504 0424 83478501 		lbu	a5,24(a0)
 1505              	.LVL101:
 1506              	.LBE241:
 1507              	.LBE240:
 210:src/Riscv.cpp ****                  ret = arg1->wait();
 1508              		.loc 1 210 13
 1509 0428 639C0700 		bnez	a5,.L45
 214:src/Riscv.cpp ****             }
 1510              		.loc 1 214 20
 1511 042c 1305F0FF 		li	a0,-1
 1512              	.LVL102:
 1513              	.L22:
 216:src/Riscv.cpp **** 
 1514              		.loc 1 216 13 is_stmt 1
 216:src/Riscv.cpp **** 
 1515              		.loc 1 216 56 is_stmt 0
GAS LISTING /tmp/ccxf6JJg.s 			page 44


 1516              	#APP
 1517              	# 216 "src/Riscv.cpp" 1
 218:src/Riscv.cpp ****             w_sepc(sepc);
 1518              		mv a0, a0
 1519              	# 0 "" 2
 1520              		.loc 1 218 13 is_stmt 1
 1521              	.LVL103:
 1522              	#NO_APP
 1523              	.LBB242:
 1524              	.LBB243:
 189:src/../h/Riscv.hpp **** }
 1525              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1526              		.loc 2 189 77 is_stmt 0
 1527              	#APP
 1528              	# 189 "src/../h/Riscv.hpp" 1
 1529              		csrw sstatus, s2
 1530              	# 0 "" 2
 1531              	.LVL104:
 1532              	#NO_APP
 1533              	.LBE243:
 1534              	.LBE242:
 219:src/Riscv.cpp ****         }
 1535              		.loc 1 219 13 is_stmt 1
 1536              	.LBB244:
 1537              	.LBB245:
 119:src/../h/Riscv.hpp **** }
 1538              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1539              		.loc 2 119 65 is_stmt 0
 1540              	#APP
 1541              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1542              		csrw sepc, s1
 1543              	# 0 "" 2
 1544              		.loc 2 120 1
 1545              	#NO_APP
 1546 043c 6FF0DFCF 		j	.L3
 1547              	.LVL105:
 1548              	.L45:
 1549              	.LBE245:
 1550              	.LBE244:
 211:src/Riscv.cpp ****             }
 1551              		.loc 1 211 18 is_stmt 1
 211:src/Riscv.cpp ****             }
 1552              		.loc 1 211 34 is_stmt 0
 1553 0440 97000000 		call	_ZN10KSemaphore4waitEv@plt
 1553      E7800000 
 1554              	.LVL106:
 1555 0448 6FF09FFE 		j	.L22
 1556              	.LVL107:
 1557              	.L42:
 1558              	.LBE235:
 1559              	.LBB246:
 1560              	.LBB221:
 222:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1561              		.loc 1 222 13 is_stmt 1
GAS LISTING /tmp/ccxf6JJg.s 			page 45


 1562              	.LBB222:
 1563              	.LBB223:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1564              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1565              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1566              		.loc 2 113 64 is_stmt 0
 1567              	#APP
 1568              	# 113 "src/../h/Riscv.hpp" 1
 1569              		csrr a5, sepc
 1570              	# 0 "" 2
 1571              	#NO_APP
 1572 0450 2334F4FA 		sd	a5,-88(s0)
 114:src/../h/Riscv.hpp **** }
 1573              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1574              		.loc 2 114 12 is_stmt 0
 1575 0454 833484FA 		ld	s1,-88(s0)
 1576              	.LVL108:
 1577              	.LBE223:
 1578              	.LBE222:
 222:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1579              		.loc 1 222 38
 1580 0458 93844400 		addi	s1,s1,4
 1581              	.LVL109:
 223:src/Riscv.cpp **** 
 1582              		.loc 1 223 13 is_stmt 1
 1583              	.LBB224:
 1584              	.LBB225:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1585              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1586              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1587              		.loc 2 183 76 is_stmt 0
 1588              	#APP
 1589              	# 183 "src/../h/Riscv.hpp" 1
 1590              		csrr a5, sstatus
 1591              	# 0 "" 2
 1592              	#NO_APP
 1593 0460 2330F4FA 		sd	a5,-96(s0)
 184:src/../h/Riscv.hpp **** }
 1594              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1595              		.loc 2 184 12 is_stmt 0
 1596 0464 033904FA 		ld	s2,-96(s0)
 1597              	.LVL110:
 1598              	.LBE225:
 1599              	.LBE224:
 225:src/Riscv.cpp **** 
 1600              		.loc 1 225 13 is_stmt 1
 227:src/Riscv.cpp **** 
 1601              		.loc 1 227 13
 227:src/Riscv.cpp **** 
 1602              		.loc 1 227 48 is_stmt 0
 1603              	#APP
GAS LISTING /tmp/ccxf6JJg.s 			page 46


 1604              	# 227 "src/Riscv.cpp" 1
 229:src/Riscv.cpp **** 
 1605              		ld a1, 11*8(fp)
 1606              	# 0 "" 2
 1607              		.loc 1 229 13 is_stmt 1
 229:src/Riscv.cpp **** 
 1608              		.loc 1 229 56 is_stmt 0
 1609              	# 229 "src/Riscv.cpp" 1
 1610              		mv a0, a1
 1611              	# 0 "" 2
 1612              	.LVL111:
 231:src/Riscv.cpp ****             if(arg1->isOpened()) {
 1613              		.loc 1 231 13 is_stmt 1
 232:src/Riscv.cpp ****                 arg1->signal();
 1614              		.loc 1 232 13
 1615              	#NO_APP
 1616              	.LBB226:
 1617              	.LBB227:
  32:src/../h/KSemaphore.hpp **** 
 1618              		.loc 3 32 21
  32:src/../h/KSemaphore.hpp **** 
 1619              		.loc 3 32 28 is_stmt 0
 1620 0470 83478501 		lbu	a5,24(a0)
 1621              	.LVL112:
 1622              	.LBE227:
 1623              	.LBE226:
 232:src/Riscv.cpp ****                 arg1->signal();
 1624              		.loc 1 232 13
 1625 0474 639C0700 		bnez	a5,.L46
 237:src/Riscv.cpp ****             }
 1626              		.loc 1 237 21
 1627 0478 9307F0FF 		li	a5,-1
 1628              	.LVL113:
 1629              	.L24:
 240:src/Riscv.cpp **** 
 1630              		.loc 1 240 13 is_stmt 1
 240:src/Riscv.cpp **** 
 1631              		.loc 1 240 56 is_stmt 0
 1632              	#APP
 1633              	# 240 "src/Riscv.cpp" 1
 242:src/Riscv.cpp ****             w_sepc(sepc);
 1634              		mv a0, a5
 1635              	# 0 "" 2
 1636              		.loc 1 242 13 is_stmt 1
 1637              	.LVL114:
 1638              	#NO_APP
 1639              	.LBB228:
 1640              	.LBB229:
 189:src/../h/Riscv.hpp **** }
 1641              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1642              		.loc 2 189 77 is_stmt 0
 1643              	#APP
 1644              	# 189 "src/../h/Riscv.hpp" 1
 1645              		csrw sstatus, s2
 1646              	# 0 "" 2
 1647              	.LVL115:
GAS LISTING /tmp/ccxf6JJg.s 			page 47


 1648              	#NO_APP
 1649              	.LBE229:
 1650              	.LBE228:
 243:src/Riscv.cpp ****         }
 1651              		.loc 1 243 13 is_stmt 1
 1652              	.LBB230:
 1653              	.LBB231:
 119:src/../h/Riscv.hpp **** }
 1654              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1655              		.loc 2 119 65 is_stmt 0
 1656              	#APP
 1657              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1658              		csrw sepc, s1
 1659              	# 0 "" 2
 1660              		.loc 2 120 1
 1661              	#NO_APP
 1662 0488 6FF01FCB 		j	.L3
 1663              	.LVL116:
 1664              	.L46:
 1665              	.LBE231:
 1666              	.LBE230:
 233:src/Riscv.cpp ****                 ret=0;
 1667              		.loc 1 233 17 is_stmt 1
 233:src/Riscv.cpp ****                 ret=0;
 1668              		.loc 1 233 29 is_stmt 0
 1669 048c 97000000 		call	_ZN10KSemaphore6signalEv@plt
 1669      E7800000 
 1670              	.LVL117:
 234:src/Riscv.cpp ****             }
 1671              		.loc 1 234 17 is_stmt 1
 234:src/Riscv.cpp ****             }
 1672              		.loc 1 234 20 is_stmt 0
 1673 0494 93070000 		li	a5,0
 1674 0498 6FF05FFE 		j	.L24
 1675              	.LVL118:
 1676              	.L43:
 1677              	.LBE221:
 1678              	.LBB232:
 1679              	.LBB207:
 246:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1680              		.loc 1 246 13 is_stmt 1
 1681              	.LBB208:
 1682              	.LBB209:
 112:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1683              		.loc 2 112 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1684              		.loc 2 113 5
 113:src/../h/Riscv.hpp ****     return sepc;
 1685              		.loc 2 113 64 is_stmt 0
 1686              	#APP
 1687              	# 113 "src/../h/Riscv.hpp" 1
 1688              		csrr a5, sepc
 1689              	# 0 "" 2
 1690              	#NO_APP
 1691 04a0 233CF4FA 		sd	a5,-72(s0)
GAS LISTING /tmp/ccxf6JJg.s 			page 48


 114:src/../h/Riscv.hpp **** }
 1692              		.loc 2 114 5 is_stmt 1
 114:src/../h/Riscv.hpp **** }
 1693              		.loc 2 114 12 is_stmt 0
 1694 04a4 833484FB 		ld	s1,-72(s0)
 1695              	.LVL119:
 1696              	.LBE209:
 1697              	.LBE208:
 246:src/Riscv.cpp ****             uint64 sstatus = r_sstatus();
 1698              		.loc 1 246 38
 1699 04a8 93844400 		addi	s1,s1,4
 1700              	.LVL120:
 247:src/Riscv.cpp **** 
 1701              		.loc 1 247 13 is_stmt 1
 1702              	.LBB210:
 1703              	.LBB211:
 182:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1704              		.loc 2 182 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1705              		.loc 2 183 5
 183:src/../h/Riscv.hpp ****     return sstatus;
 1706              		.loc 2 183 76 is_stmt 0
 1707              	#APP
 1708              	# 183 "src/../h/Riscv.hpp" 1
 1709              		csrr a5, sstatus
 1710              	# 0 "" 2
 1711              	#NO_APP
 1712 04b0 2338F4FA 		sd	a5,-80(s0)
 184:src/../h/Riscv.hpp **** }
 1713              		.loc 2 184 5 is_stmt 1
 184:src/../h/Riscv.hpp **** }
 1714              		.loc 2 184 12 is_stmt 0
 1715 04b4 033904FB 		ld	s2,-80(s0)
 1716              	.LVL121:
 1717              	.LBE211:
 1718              	.LBE210:
 250:src/Riscv.cpp ****             char c = __getc();
 1719              		.loc 1 250 13 is_stmt 1
 250:src/Riscv.cpp ****             char c = __getc();
 1720              		.loc 1 250 27 is_stmt 0
 1721 04b8 97070000 		la	a5,_ZN5Riscv11TrapConsoleEv
 1721      83B70700 
 1722              	.LVL122:
 1723              	.LBB212:
 1724              	.LBB213:
 131:src/../h/Riscv.hpp **** }
 1725              		.loc 2 131 5 is_stmt 1
 131:src/../h/Riscv.hpp **** }
 1726              		.loc 2 131 69 is_stmt 0
 1727              	#APP
 1728              	# 131 "src/../h/Riscv.hpp" 1
 1729              		csrw stvec, a5
 1730              	# 0 "" 2
 1731              	.LVL123:
 1732              	#NO_APP
 1733              	.LBE213:
 1734              	.LBE212:
GAS LISTING /tmp/ccxf6JJg.s 			page 49


 251:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1735              		.loc 1 251 13 is_stmt 1
 251:src/Riscv.cpp ****             Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 1736              		.loc 1 251 28 is_stmt 0
 1737 04c4 97000000 		call	__getc@plt
 1737      E7800000 
 1738              	.LVL124:
 252:src/Riscv.cpp **** 
 1739              		.loc 1 252 13 is_stmt 1
 252:src/Riscv.cpp **** 
 1740              		.loc 1 252 27 is_stmt 0
 1741 04cc 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 1741      83B70700 
 1742              	.LVL125:
 1743              	.LBB214:
 1744              	.LBB215:
 131:src/../h/Riscv.hpp **** }
 1745              		.loc 2 131 5 is_stmt 1
 131:src/../h/Riscv.hpp **** }
 1746              		.loc 2 131 69 is_stmt 0
 1747              	#APP
 1748              	# 131 "src/../h/Riscv.hpp" 1
 1749              		csrw stvec, a5
 1750              	# 0 "" 2
 1751              	.LVL126:
 1752              	#NO_APP
 1753              	.LBE215:
 1754              	.LBE214:
 254:src/Riscv.cpp **** 
 1755              		.loc 1 254 13 is_stmt 1
 254:src/Riscv.cpp **** 
 1756              		.loc 1 254 54 is_stmt 0
 1757              	#APP
 1758              	# 254 "src/Riscv.cpp" 1
 257:src/Riscv.cpp ****             w_sepc(sepc);
 1759              		mv a0, a0
 1760              	# 0 "" 2
 1761              		.loc 1 257 13 is_stmt 1
 1762              	.LVL127:
 1763              	#NO_APP
 1764              	.LBB216:
 1765              	.LBB217:
 189:src/../h/Riscv.hpp **** }
 1766              		.loc 2 189 5
 189:src/../h/Riscv.hpp **** }
 1767              		.loc 2 189 77 is_stmt 0
 1768              	#APP
 1769              	# 189 "src/../h/Riscv.hpp" 1
 1770              		csrw sstatus, s2
 1771              	# 0 "" 2
 1772              	.LVL128:
 1773              	#NO_APP
 1774              	.LBE217:
 1775              	.LBE216:
 258:src/Riscv.cpp ****         }
 1776              		.loc 1 258 13 is_stmt 1
 1777              	.LBB218:
GAS LISTING /tmp/ccxf6JJg.s 			page 50


 1778              	.LBB219:
 119:src/../h/Riscv.hpp **** }
 1779              		.loc 2 119 5
 119:src/../h/Riscv.hpp **** }
 1780              		.loc 2 119 65 is_stmt 0
 1781              	#APP
 1782              	# 119 "src/../h/Riscv.hpp" 1
 120:src/../h/Riscv.hpp **** 
 1783              		csrw sepc, s1
 1784              	# 0 "" 2
 1785              		.loc 2 120 1
 1786              	#NO_APP
 1787 04e4 6FF05FC5 		j	.L3
 1788              	.LBE219:
 1789              	.LBE218:
 1790              	.LBE207:
 1791              	.LBE232:
 1792              	.LBE246:
 1793              	.LBE271:
 1794              	.LBE291:
 1795              	.LBE306:
 1796              	.LBE322:
 1797              	.LBE339:
 1798              	.LBE357:
 1799              	.LBE376:
 1800              	.LBE388:
 1801              	.LBE401:
 1802              	.LBE417:
 1803              	.LBE433:
 1804              		.cfi_endproc
 1805              	.LFE55:
 1807              		.align	2
 1808              		.globl	_ZN5Riscv17handleTrapConsoleEv
 1810              	_ZN5Riscv17handleTrapConsoleEv:
 1811              	.LFB56:
 283:src/Riscv.cpp **** 
 284:src/Riscv.cpp **** 
 285:src/Riscv.cpp **** void Riscv::handleTrapConsole() {
 1812              		.loc 1 285 33 is_stmt 1
 1813              		.cfi_startproc
 1814 04e8 130101FE 		addi	sp,sp,-32
 1815              		.cfi_def_cfa_offset 32
 1816 04ec 233C1100 		sd	ra,24(sp)
 1817 04f0 23388100 		sd	s0,16(sp)
 1818              		.cfi_offset 1, -8
 1819              		.cfi_offset 8, -16
 1820 04f4 13040102 		addi	s0,sp,32
 1821              		.cfi_def_cfa 8, 0
 286:src/Riscv.cpp ****     uint64 scause = r_scause();
 1822              		.loc 1 286 5
 1823              	.LBB434:
 1824              	.LBB435:
 100:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 1825              		.loc 2 100 5
 101:src/../h/Riscv.hpp ****     return scause;
 1826              		.loc 2 101 5
 101:src/../h/Riscv.hpp ****     return scause;
GAS LISTING /tmp/ccxf6JJg.s 			page 51


 1827              		.loc 2 101 72 is_stmt 0
 1828              	#APP
 1829              	# 101 "src/../h/Riscv.hpp" 1
 1830              		csrr a5, scause
 1831              	# 0 "" 2
 1832              	#NO_APP
 1833 04fc 2334F4FE 		sd	a5,-24(s0)
 102:src/../h/Riscv.hpp **** }
 1834              		.loc 2 102 5 is_stmt 1
 102:src/../h/Riscv.hpp **** }
 1835              		.loc 2 102 12 is_stmt 0
 1836 0500 033784FE 		ld	a4,-24(s0)
 1837              	.LVL129:
 1838              	.LBE435:
 1839              	.LBE434:
 287:src/Riscv.cpp ****     if (scause == 0x8000000000000009UL) {
 1840              		.loc 1 287 5 is_stmt 1
 1841 0504 9307F0FF 		li	a5,-1
 1842 0508 9397F703 		slli	a5,a5,63
 1843 050c 93879700 		addi	a5,a5,9
 1844 0510 6302F702 		beq	a4,a5,.L51
 288:src/Riscv.cpp ****         console_handler();
 289:src/Riscv.cpp ****         mc_sip(SIP_SEIP);
 290:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1845              		.loc 1 290 12
 1846 0514 9307F0FF 		li	a5,-1
 1847 0518 9397F703 		slli	a5,a5,63
 1848 051c 93871700 		addi	a5,a5,1
 1849 0520 6304F702 		beq	a4,a5,.L52
 1850              	.LVL130:
 1851              	.L47:
 291:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
 292:src/Riscv.cpp ****     }
 293:src/Riscv.cpp **** 
 294:src/Riscv.cpp **** }
 1852              		.loc 1 294 1 is_stmt 0
 1853 0524 83308101 		ld	ra,24(sp)
 1854              		.cfi_remember_state
 1855              		.cfi_restore 1
 1856 0528 03340101 		ld	s0,16(sp)
 1857              		.cfi_restore 8
 1858              		.cfi_def_cfa 2, 32
 1859 052c 13010102 		addi	sp,sp,32
 1860              		.cfi_def_cfa_offset 0
 1861 0530 67800000 		jr	ra
 1862              	.LVL131:
 1863              	.L51:
 1864              		.cfi_restore_state
 288:src/Riscv.cpp ****         console_handler();
 1865              		.loc 1 288 9 is_stmt 1
 288:src/Riscv.cpp ****         console_handler();
 1866              		.loc 1 288 24 is_stmt 0
 1867 0534 97000000 		call	console_handler@plt
 1867      E7800000 
 1868              	.LVL132:
 289:src/Riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 1869              		.loc 1 289 9 is_stmt 1
GAS LISTING /tmp/ccxf6JJg.s 			page 52


 1870              	.LBB436:
 1871              	.LBB437:
 153:src/../h/Riscv.hpp **** }
 1872              		.loc 2 153 5
 153:src/../h/Riscv.hpp **** }
 1873              		.loc 2 153 64 is_stmt 0
 1874 053c 93070020 		li	a5,512
 1875              	#APP
 1876              	# 153 "src/../h/Riscv.hpp" 1
 154:src/../h/Riscv.hpp **** 
 1877              		csrc sip, a5
 1878              	# 0 "" 2
 1879              		.loc 2 154 1
 1880              	#NO_APP
 1881 0544 6FF01FFE 		j	.L47
 1882              	.LVL133:
 1883              	.L52:
 1884              	.LBE437:
 1885              	.LBE436:
 291:src/Riscv.cpp ****     }
 1886              		.loc 1 291 9 is_stmt 1
 1887              	.LBB438:
 1888              	.LBB439:
 153:src/../h/Riscv.hpp **** }
 1889              		.loc 2 153 5
 153:src/../h/Riscv.hpp **** }
 1890              		.loc 2 153 64 is_stmt 0
 1891 0548 93072000 		li	a5,2
 1892              	#APP
 1893              	# 153 "src/../h/Riscv.hpp" 1
 1894              		csrc sip, a5
 1895              	# 0 "" 2
 1896              	.LVL134:
 1897              	#NO_APP
 1898              	.LBE439:
 1899              	.LBE438:
 1900              		.loc 1 294 1
 1901 0550 6FF05FFD 		j	.L47
 1902              		.cfi_endproc
 1903              	.LFE56:
 1905              		.align	2
 1906              		.globl	_ZN5Riscv10initKernelEv
 1908              	_ZN5Riscv10initKernelEv:
 1909              	.LFB57:
 295:src/Riscv.cpp **** 
 296:src/Riscv.cpp **** void Riscv::initKernel() {
 1910              		.loc 1 296 26 is_stmt 1
 1911              		.cfi_startproc
 1912 0554 130101FE 		addi	sp,sp,-32
 1913              		.cfi_def_cfa_offset 32
 1914 0558 233C1100 		sd	ra,24(sp)
 1915 055c 23388100 		sd	s0,16(sp)
 1916 0560 23349100 		sd	s1,8(sp)
 1917              		.cfi_offset 1, -8
 1918              		.cfi_offset 8, -16
 1919              		.cfi_offset 9, -24
 1920 0564 13040102 		addi	s0,sp,32
GAS LISTING /tmp/ccxf6JJg.s 			page 53


 1921              		.cfi_def_cfa 8, 0
 297:src/Riscv.cpp ****     _thread* main = (_thread*)MemoryAllocator::kmem_alloc(sizeof(_thread));
 1922              		.loc 1 297 5
 1923              		.loc 1 297 58 is_stmt 0
 1924 0568 13050005 		li	a0,80
 1925 056c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 1925      E7800000 
 1926              	.LVL135:
 1927 0574 93040500 		mv	s1,a0
 1928              	.LVL136:
 298:src/Riscv.cpp ****     _thread::running=main;
 1929              		.loc 1 298 5 is_stmt 1
 1930              		.loc 1 298 21 is_stmt 0
 1931 0578 97070000 		la	a5,_ZN7_thread7runningE
 1931      83B70700 
 1932 0580 23B0A700 		sd	a0,0(a5)
 299:src/Riscv.cpp ****     uint64 * stack = (uint64*)MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
 1933              		.loc 1 299 5 is_stmt 1
 1934              		.loc 1 299 58 is_stmt 0
 1935 0584 37850000 		li	a0,32768
 1936 0588 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 1936      E7800000 
 1937              	.LVL137:
 1938 0590 93050500 		mv	a1,a0
 1939              	.LVL138:
 300:src/Riscv.cpp ****     main->setStack(stack);
 1940              		.loc 1 300 5 is_stmt 1
 1941              		.loc 1 300 19 is_stmt 0
 1942 0594 13850400 		mv	a0,s1
 1943              	.LVL139:
 1944 0598 97000000 		call	_ZN7_thread8setStackEPm@plt
 1944      E7800000 
 1945              	.LVL140:
 301:src/Riscv.cpp **** //    __asm__ volatile("ecall");
 302:src/Riscv.cpp **** }...
 1946              		.loc 1 302 1
 1947 05a0 83308101 		ld	ra,24(sp)
 1948              		.cfi_restore 1
 1949 05a4 03340101 		ld	s0,16(sp)
 1950              		.cfi_restore 8
 1951              		.cfi_def_cfa 2, 32
 1952 05a8 83348100 		ld	s1,8(sp)
 1953              		.cfi_restore 9
 1954              	.LVL141:
 1955 05ac 13010102 		addi	sp,sp,32
 1956              		.cfi_def_cfa_offset 0
 1957 05b0 67800000 		jr	ra
 1958              		.cfi_endproc
 1959              	.LFE57:
 1961              	.Letext0:
 1962              		.file 6 "src/../h/../lib/hw.h"
 1963              		.file 7 "src/../h/DoublyLinkedList.hpp"
 1964              		.file 8 "src/../h/MemoryAllocator.hpp"
 1965              		.file 9 "src/../h/Scheduler.hpp"
 1966              		.file 10 "src/../h/../lib/console.h"
GAS LISTING /tmp/ccxf6JJg.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccxf6JJg.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccxf6JJg.s:13     .text:0000000000000000 .L0 
     /tmp/ccxf6JJg.s:14     .text:0000000000000000 .L0 
     /tmp/ccxf6JJg.s:15     .text:0000000000000004 .L0 
     /tmp/ccxf6JJg.s:17     .text:0000000000000008 .L0 
     /tmp/ccxf6JJg.s:19     .text:000000000000000c .L0 
     /tmp/ccxf6JJg.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:16     .text:000000000000000c .L0 
     /tmp/ccxf6JJg.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccxf6JJg.s:33     .text:0000000000000014 .L0 
     /tmp/ccxf6JJg.s:34     .text:0000000000000018 .L0 
     /tmp/ccxf6JJg.s:35     .text:0000000000000018 .L0 
     /tmp/ccxf6JJg.s:37     .text:000000000000001c .L0 
     /tmp/ccxf6JJg.s:39     .text:0000000000000020 .L0 
     /tmp/ccxf6JJg.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccxf6JJg.s:48     .text:0000000000000020 .L0 
     /tmp/ccxf6JJg.s:49     .text:0000000000000020 .L0 
     /tmp/ccxf6JJg.s:50     .text:0000000000000024 .L0 
     /tmp/ccxf6JJg.s:57     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:58     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:59     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:60     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:61     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:62     .text:000000000000003c .L0 
     /tmp/ccxf6JJg.s:64     .text:0000000000000040 .L0 
     /tmp/ccxf6JJg.s:69     .text:0000000000000040 .L0 
     /tmp/ccxf6JJg.s:70     .text:0000000000000040 .L0 
     /tmp/ccxf6JJg.s:71     .text:0000000000000040 .L0 
  src/../h/Riscv.hpp:101    .text:0000000000000040 .L0 
     /tmp/ccxf6JJg.s:79     .text:0000000000000048 .L0 
     /tmp/ccxf6JJg.s:80     .text:0000000000000048 .L0 
     /tmp/ccxf6JJg.s:85     .text:000000000000004c .L0 
     /tmp/ccxf6JJg.s:86     .text:000000000000004c .L0 
     /tmp/ccxf6JJg.s:87     .text:000000000000004c .L0 
       src/Riscv.cpp:24     .text:000000000000004c .L0 
     /tmp/ccxf6JJg.s:96     .text:0000000000000050 .L0 
     /tmp/ccxf6JJg.s:104    .text:0000000000000060 .L0 
     /tmp/ccxf6JJg.s:114    .text:0000000000000070 .L0 
     /tmp/ccxf6JJg.s:115    .text:0000000000000070 .L0 
     /tmp/ccxf6JJg.s:118    .text:0000000000000074 .L0 
     /tmp/ccxf6JJg.s:128    .text:000000000000007c .L0 
     /tmp/ccxf6JJg.s:141    .text:0000000000000084 .L0 
     /tmp/ccxf6JJg.s:153    .text:000000000000008c .L0 
     /tmp/ccxf6JJg.s:167    .text:0000000000000094 .L0 
     /tmp/ccxf6JJg.s:183    .text:000000000000009c .L0 
     /tmp/ccxf6JJg.s:201    .text:00000000000000a4 .L0 
     /tmp/ccxf6JJg.s:221    .text:00000000000000ac .L0 
     /tmp/ccxf6JJg.s:243    .text:00000000000000b4 .L0 
     /tmp/ccxf6JJg.s:267    .text:00000000000000bc .L0 
     /tmp/ccxf6JJg.s:293    .text:00000000000000c4 .L0 
     /tmp/ccxf6JJg.s:321    .text:00000000000000cc .L0 
     /tmp/ccxf6JJg.s:351    .text:00000000000000d4 .L0 
     /tmp/ccxf6JJg.s:357    .text:00000000000000dc .L0 
     /tmp/ccxf6JJg.s:358    .text:00000000000000dc .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 55


     /tmp/ccxf6JJg.s:359    .text:00000000000000dc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000000dc .L0 
     /tmp/ccxf6JJg.s:367    .text:00000000000000e4 .L0 
     /tmp/ccxf6JJg.s:368    .text:00000000000000e4 .L0 
     /tmp/ccxf6JJg.s:373    .text:00000000000000e8 .L0 
     /tmp/ccxf6JJg.s:378    .text:00000000000000ec .L0 
     /tmp/ccxf6JJg.s:379    .text:00000000000000ec .L0 
     /tmp/ccxf6JJg.s:380    .text:00000000000000ec .L0 
  src/../h/Riscv.hpp:183    .text:00000000000000ec .L0 
     /tmp/ccxf6JJg.s:388    .text:00000000000000f4 .L0 
     /tmp/ccxf6JJg.s:389    .text:00000000000000f4 .L0 
     /tmp/ccxf6JJg.s:394    .text:00000000000000f8 .L0 
     /tmp/ccxf6JJg.s:395    .text:00000000000000f8 .L0 
       src/Riscv.cpp:265    .text:00000000000000f8 .L0 
     /tmp/ccxf6JJg.s:401    .text:00000000000000fc .L0 
       src/Riscv.cpp:267    .text:00000000000000fc .L0 
     /tmp/ccxf6JJg.s:409    .text:0000000000000104 .L0 
     /tmp/ccxf6JJg.s:410    .text:0000000000000104 .L0 
     /tmp/ccxf6JJg.s:415    .text:000000000000010c .L0 
  src/../h/Riscv.hpp:131    .text:000000000000010c .L0 
     /tmp/ccxf6JJg.s:425    .text:0000000000000110 .L0 
     /tmp/ccxf6JJg.s:426    .text:0000000000000110 .L0 
     /tmp/ccxf6JJg.s:429    .text:0000000000000118 .L0 
     /tmp/ccxf6JJg.s:430    .text:0000000000000118 .L0 
     /tmp/ccxf6JJg.s:435    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:131    .text:0000000000000120 .L0 
     /tmp/ccxf6JJg.s:447    .text:0000000000000124 .L0 
     /tmp/ccxf6JJg.s:448    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000124 .L0 
     /tmp/ccxf6JJg.s:460    .text:0000000000000128 .L0 
     /tmp/ccxf6JJg.s:461    .text:0000000000000128 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000128 .L0 
     /tmp/ccxf6JJg.s:486    .text:000000000000012c .L0 
     /tmp/ccxf6JJg.s:493    .text:0000000000000130 .L0 
     /tmp/ccxf6JJg.s:494    .text:0000000000000130 .L0 
     /tmp/ccxf6JJg.s:495    .text:0000000000000130 .L0 
     /tmp/ccxf6JJg.s:507    .text:0000000000000138 .L0 
     /tmp/ccxf6JJg.s:508    .text:000000000000013c .L0 
     /tmp/ccxf6JJg.s:509    .text:000000000000013c .L0 
     /tmp/ccxf6JJg.s:511    .text:0000000000000140 .L0 
     /tmp/ccxf6JJg.s:512    .text:0000000000000140 .L0 
     /tmp/ccxf6JJg.s:514    .text:0000000000000144 .L0 
     /tmp/ccxf6JJg.s:516    .text:0000000000000148 .L0 
     /tmp/ccxf6JJg.s:518    .text:000000000000014c .L0 
     /tmp/ccxf6JJg.s:520    .text:0000000000000150 .L0 
     /tmp/ccxf6JJg.s:522    .text:0000000000000154 .L0 
     /tmp/ccxf6JJg.s:526    .text:0000000000000158 .L0 
     /tmp/ccxf6JJg.s:530    .text:0000000000000158 .L0 
     /tmp/ccxf6JJg.s:531    .text:0000000000000158 .L0 
     /tmp/ccxf6JJg.s:542    .text:0000000000000164 .L0 
     /tmp/ccxf6JJg.s:543    .text:0000000000000164 .L0 
     /tmp/ccxf6JJg.s:544    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000164 .L0 
     /tmp/ccxf6JJg.s:552    .text:000000000000016c .L0 
     /tmp/ccxf6JJg.s:553    .text:000000000000016c .L0 
     /tmp/ccxf6JJg.s:557    .text:0000000000000170 .L0 
     /tmp/ccxf6JJg.s:562    .text:0000000000000174 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 56


     /tmp/ccxf6JJg.s:563    .text:0000000000000174 .L0 
     /tmp/ccxf6JJg.s:564    .text:0000000000000174 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000174 .L0 
     /tmp/ccxf6JJg.s:572    .text:000000000000017c .L0 
     /tmp/ccxf6JJg.s:573    .text:000000000000017c .L0 
     /tmp/ccxf6JJg.s:578    .text:0000000000000180 .L0 
     /tmp/ccxf6JJg.s:579    .text:0000000000000180 .L0 
     /tmp/ccxf6JJg.s:580    .text:0000000000000180 .L0 
     /tmp/ccxf6JJg.s:581    .text:0000000000000180 .L0 
     /tmp/ccxf6JJg.s:582    .text:0000000000000180 .L0 
       src/Riscv.cpp:56     .text:0000000000000180 .L0 
     /tmp/ccxf6JJg.s:588    .text:0000000000000184 .L0 
       src/Riscv.cpp:57     .text:0000000000000184 .L0 
     /tmp/ccxf6JJg.s:593    .text:0000000000000188 .L0 
       src/Riscv.cpp:58     .text:0000000000000188 .L0 
     /tmp/ccxf6JJg.s:598    .text:000000000000018c .L0 
       src/Riscv.cpp:59     .text:000000000000018c .L0 
     /tmp/ccxf6JJg.s:603    .text:0000000000000190 .L0 
       src/Riscv.cpp:62     .text:0000000000000190 .L0 
     /tmp/ccxf6JJg.s:609    .text:0000000000000194 .L0 
       src/Riscv.cpp:63     .text:0000000000000194 .L0 
     /tmp/ccxf6JJg.s:615    .text:0000000000000198 .L0 
       src/Riscv.cpp:64     .text:0000000000000198 .L0 
     /tmp/ccxf6JJg.s:621    .text:000000000000019c .L0 
       src/Riscv.cpp:65     .text:000000000000019c .L0 
     /tmp/ccxf6JJg.s:627    .text:00000000000001a0 .L0 
     /tmp/ccxf6JJg.s:629    .text:00000000000001a0 .L0 
     /tmp/ccxf6JJg.s:632    .text:00000000000001a8 .L0 
     /tmp/ccxf6JJg.s:633    .text:00000000000001a8 .L0 
     /tmp/ccxf6JJg.s:635    .text:00000000000001ac .L0 
     /tmp/ccxf6JJg.s:636    .text:00000000000001ac .L0 
     /tmp/ccxf6JJg.s:638    .text:00000000000001b0 .L0 
     /tmp/ccxf6JJg.s:642    .text:00000000000001b4 .L0 
       src/Riscv.cpp:77     .text:00000000000001b4 .L0 
     /tmp/ccxf6JJg.s:652    .text:00000000000001b8 .L0 
     /tmp/ccxf6JJg.s:653    .text:00000000000001b8 .L0 
  src/../h/Riscv.hpp:189    .text:00000000000001b8 .L0 
     /tmp/ccxf6JJg.s:665    .text:00000000000001bc .L0 
     /tmp/ccxf6JJg.s:666    .text:00000000000001bc .L0 
  src/../h/Riscv.hpp:119    .text:00000000000001bc .L0 
     /tmp/ccxf6JJg.s:673    .text:00000000000001c0 .L0 
     /tmp/ccxf6JJg.s:679    .text:00000000000001c4 .L0 
     /tmp/ccxf6JJg.s:690    .text:00000000000001cc .L0 
     /tmp/ccxf6JJg.s:691    .text:00000000000001cc .L0 
     /tmp/ccxf6JJg.s:692    .text:00000000000001cc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000001cc .L0 
     /tmp/ccxf6JJg.s:700    .text:00000000000001d4 .L0 
     /tmp/ccxf6JJg.s:701    .text:00000000000001d4 .L0 
     /tmp/ccxf6JJg.s:706    .text:00000000000001d8 .L0 
     /tmp/ccxf6JJg.s:711    .text:00000000000001dc .L0 
     /tmp/ccxf6JJg.s:712    .text:00000000000001dc .L0 
     /tmp/ccxf6JJg.s:713    .text:00000000000001dc .L0 
  src/../h/Riscv.hpp:183    .text:00000000000001dc .L0 
     /tmp/ccxf6JJg.s:721    .text:00000000000001e4 .L0 
     /tmp/ccxf6JJg.s:722    .text:00000000000001e4 .L0 
     /tmp/ccxf6JJg.s:727    .text:00000000000001e8 .L0 
       src/Riscv.cpp:86     .text:00000000000001e8 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 57


     /tmp/ccxf6JJg.s:733    .text:00000000000001ec .L0 
       src/Riscv.cpp:88     .text:00000000000001ec .L0 
     /tmp/ccxf6JJg.s:739    .text:00000000000001f0 .L0 
     /tmp/ccxf6JJg.s:741    .text:00000000000001f0 .L0 
     /tmp/ccxf6JJg.s:746    .text:00000000000001fc .L0 
       src/Riscv.cpp:92     .text:00000000000001fc .L0 
     /tmp/ccxf6JJg.s:756    .text:0000000000000200 .L0 
     /tmp/ccxf6JJg.s:757    .text:0000000000000200 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000200 .L0 
     /tmp/ccxf6JJg.s:769    .text:0000000000000204 .L0 
     /tmp/ccxf6JJg.s:770    .text:0000000000000204 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000204 .L0 
     /tmp/ccxf6JJg.s:777    .text:0000000000000208 .L0 
     /tmp/ccxf6JJg.s:788    .text:000000000000020c .L0 
     /tmp/ccxf6JJg.s:789    .text:000000000000020c .L0 
     /tmp/ccxf6JJg.s:790    .text:000000000000020c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000020c .L0 
     /tmp/ccxf6JJg.s:798    .text:0000000000000214 .L0 
     /tmp/ccxf6JJg.s:799    .text:0000000000000214 .L0 
     /tmp/ccxf6JJg.s:804    .text:0000000000000218 .L0 
     /tmp/ccxf6JJg.s:809    .text:000000000000021c .L0 
     /tmp/ccxf6JJg.s:810    .text:000000000000021c .L0 
     /tmp/ccxf6JJg.s:811    .text:000000000000021c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000021c .L0 
     /tmp/ccxf6JJg.s:819    .text:0000000000000224 .L0 
     /tmp/ccxf6JJg.s:820    .text:0000000000000224 .L0 
     /tmp/ccxf6JJg.s:825    .text:0000000000000228 .L0 
       src/Riscv.cpp:101    .text:0000000000000228 .L0 
     /tmp/ccxf6JJg.s:831    .text:000000000000022c .L0 
       src/Riscv.cpp:103    .text:000000000000022c .L0 
     /tmp/ccxf6JJg.s:837    .text:0000000000000230 .L0 
     /tmp/ccxf6JJg.s:839    .text:0000000000000230 .L0 
     /tmp/ccxf6JJg.s:842    .text:0000000000000238 .L0 
       src/Riscv.cpp:105    .text:0000000000000238 .L0 
     /tmp/ccxf6JJg.s:852    .text:000000000000023c .L0 
     /tmp/ccxf6JJg.s:853    .text:000000000000023c .L0 
  src/../h/Riscv.hpp:189    .text:000000000000023c .L0 
     /tmp/ccxf6JJg.s:865    .text:0000000000000240 .L0 
     /tmp/ccxf6JJg.s:866    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000240 .L0 
     /tmp/ccxf6JJg.s:873    .text:0000000000000244 .L0 
     /tmp/ccxf6JJg.s:884    .text:0000000000000248 .L0 
     /tmp/ccxf6JJg.s:885    .text:0000000000000248 .L0 
     /tmp/ccxf6JJg.s:886    .text:0000000000000248 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000248 .L0 
     /tmp/ccxf6JJg.s:894    .text:0000000000000250 .L0 
     /tmp/ccxf6JJg.s:895    .text:0000000000000250 .L0 
     /tmp/ccxf6JJg.s:900    .text:0000000000000254 .L0 
     /tmp/ccxf6JJg.s:905    .text:0000000000000258 .L0 
     /tmp/ccxf6JJg.s:906    .text:0000000000000258 .L0 
     /tmp/ccxf6JJg.s:907    .text:0000000000000258 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000258 .L0 
     /tmp/ccxf6JJg.s:915    .text:0000000000000260 .L0 
     /tmp/ccxf6JJg.s:916    .text:0000000000000260 .L0 
     /tmp/ccxf6JJg.s:921    .text:0000000000000264 .L0 
     /tmp/ccxf6JJg.s:922    .text:0000000000000264 .L0 
     /tmp/ccxf6JJg.s:925    .text:0000000000000270 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 58


     /tmp/ccxf6JJg.s:928    .text:0000000000000278 .L0 
     /tmp/ccxf6JJg.s:929    .text:0000000000000278 .L0 
     /tmp/ccxf6JJg.s:934    .text:0000000000000280 .L0 
     /tmp/ccxf6JJg.s:935    .text:0000000000000280 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000280 .L0 
     /tmp/ccxf6JJg.s:947    .text:0000000000000284 .L0 
     /tmp/ccxf6JJg.s:948    .text:0000000000000284 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000284 .L0 
     /tmp/ccxf6JJg.s:955    .text:0000000000000288 .L0 
     /tmp/ccxf6JJg.s:966    .text:000000000000028c .L0 
     /tmp/ccxf6JJg.s:967    .text:000000000000028c .L0 
     /tmp/ccxf6JJg.s:968    .text:000000000000028c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000028c .L0 
     /tmp/ccxf6JJg.s:976    .text:0000000000000294 .L0 
     /tmp/ccxf6JJg.s:977    .text:0000000000000294 .L0 
     /tmp/ccxf6JJg.s:982    .text:0000000000000298 .L0 
     /tmp/ccxf6JJg.s:987    .text:000000000000029c .L0 
     /tmp/ccxf6JJg.s:988    .text:000000000000029c .L0 
     /tmp/ccxf6JJg.s:989    .text:000000000000029c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000029c .L0 
     /tmp/ccxf6JJg.s:997    .text:00000000000002a4 .L0 
     /tmp/ccxf6JJg.s:998    .text:00000000000002a4 .L0 
     /tmp/ccxf6JJg.s:1003   .text:00000000000002a8 .L0 
     /tmp/ccxf6JJg.s:1004   .text:00000000000002a8 .L0 
     /tmp/ccxf6JJg.s:1009   .text:00000000000002b0 .L0 
     /tmp/ccxf6JJg.s:1010   .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:189    .text:00000000000002b0 .L0 
     /tmp/ccxf6JJg.s:1022   .text:00000000000002b4 .L0 
     /tmp/ccxf6JJg.s:1023   .text:00000000000002b4 .L0 
  src/../h/Riscv.hpp:119    .text:00000000000002b4 .L0 
     /tmp/ccxf6JJg.s:1030   .text:00000000000002b8 .L0 
     /tmp/ccxf6JJg.s:1041   .text:00000000000002bc .L0 
     /tmp/ccxf6JJg.s:1042   .text:00000000000002bc .L0 
     /tmp/ccxf6JJg.s:1043   .text:00000000000002bc .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002bc .L0 
     /tmp/ccxf6JJg.s:1051   .text:00000000000002c4 .L0 
     /tmp/ccxf6JJg.s:1052   .text:00000000000002c4 .L0 
     /tmp/ccxf6JJg.s:1057   .text:00000000000002c8 .L0 
     /tmp/ccxf6JJg.s:1062   .text:00000000000002cc .L0 
     /tmp/ccxf6JJg.s:1063   .text:00000000000002cc .L0 
     /tmp/ccxf6JJg.s:1064   .text:00000000000002cc .L0 
  src/../h/Riscv.hpp:183    .text:00000000000002cc .L0 
     /tmp/ccxf6JJg.s:1072   .text:00000000000002d4 .L0 
     /tmp/ccxf6JJg.s:1073   .text:00000000000002d4 .L0 
     /tmp/ccxf6JJg.s:1078   .text:00000000000002d8 .L0 
     /tmp/ccxf6JJg.s:1079   .text:00000000000002d8 .L0 
     /tmp/ccxf6JJg.s:1082   .text:00000000000002e4 .L0 
     /tmp/ccxf6JJg.s:1083   .text:00000000000002e4 .L0 
     /tmp/ccxf6JJg.s:1088   .text:00000000000002ec .L0 
     /tmp/ccxf6JJg.s:1089   .text:00000000000002ec .L0 
  src/../h/Riscv.hpp:189    .text:00000000000002ec .L0 
     /tmp/ccxf6JJg.s:1101   .text:00000000000002f0 .L0 
     /tmp/ccxf6JJg.s:1102   .text:00000000000002f0 .L0 
  src/../h/Riscv.hpp:119    .text:00000000000002f0 .L0 
     /tmp/ccxf6JJg.s:1109   .text:00000000000002f4 .L0 
     /tmp/ccxf6JJg.s:1120   .text:00000000000002f8 .L0 
     /tmp/ccxf6JJg.s:1121   .text:00000000000002f8 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 59


     /tmp/ccxf6JJg.s:1122   .text:00000000000002f8 .L0 
  src/../h/Riscv.hpp:113    .text:00000000000002f8 .L0 
     /tmp/ccxf6JJg.s:1130   .text:0000000000000300 .L0 
     /tmp/ccxf6JJg.s:1131   .text:0000000000000300 .L0 
     /tmp/ccxf6JJg.s:1136   .text:0000000000000304 .L0 
     /tmp/ccxf6JJg.s:1141   .text:0000000000000308 .L0 
     /tmp/ccxf6JJg.s:1142   .text:0000000000000308 .L0 
     /tmp/ccxf6JJg.s:1143   .text:0000000000000308 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000308 .L0 
     /tmp/ccxf6JJg.s:1151   .text:0000000000000310 .L0 
     /tmp/ccxf6JJg.s:1152   .text:0000000000000310 .L0 
     /tmp/ccxf6JJg.s:1157   .text:0000000000000314 .L0 
     /tmp/ccxf6JJg.s:1158   .text:0000000000000314 .L0 
     /tmp/ccxf6JJg.s:1159   .text:0000000000000314 .L0 
       src/Riscv.cpp:153    .text:0000000000000314 .L0 
     /tmp/ccxf6JJg.s:1165   .text:0000000000000318 .L0 
       src/Riscv.cpp:154    .text:0000000000000318 .L0 
     /tmp/ccxf6JJg.s:1170   .text:000000000000031c .L0 
       src/Riscv.cpp:156    .text:000000000000031c .L0 
     /tmp/ccxf6JJg.s:1176   .text:0000000000000320 .L0 
       src/Riscv.cpp:157    .text:0000000000000320 .L0 
     /tmp/ccxf6JJg.s:1182   .text:0000000000000324 .L0 
     /tmp/ccxf6JJg.s:1184   .text:0000000000000324 .L0 
     /tmp/ccxf6JJg.s:1191   .text:0000000000000330 .L0 
     /tmp/ccxf6JJg.s:1197   .text:0000000000000334 .L0 
     /tmp/ccxf6JJg.s:1207   .text:000000000000033c .L0 
     /tmp/ccxf6JJg.s:1208   .text:000000000000033c .L0 
     /tmp/ccxf6JJg.s:1209   .text:000000000000033c .L0 
     /tmp/ccxf6JJg.s:1215   .text:0000000000000344 .L0 
     /tmp/ccxf6JJg.s:1216   .text:0000000000000344 .L0 
     /tmp/ccxf6JJg.s:1219   .text:0000000000000348 .L0 
     /tmp/ccxf6JJg.s:1220   .text:0000000000000348 .L0 
     /tmp/ccxf6JJg.s:1222   .text:000000000000034c .L0 
     /tmp/ccxf6JJg.s:1226   .text:0000000000000350 .L0 
       src/Riscv.cpp:167    .text:0000000000000350 .L0 
     /tmp/ccxf6JJg.s:1236   .text:0000000000000354 .L0 
     /tmp/ccxf6JJg.s:1237   .text:0000000000000354 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000354 .L0 
     /tmp/ccxf6JJg.s:1249   .text:0000000000000358 .L0 
     /tmp/ccxf6JJg.s:1250   .text:0000000000000358 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000358 .L0 
     /tmp/ccxf6JJg.s:1257   .text:000000000000035c .L0 
     /tmp/ccxf6JJg.s:1263   .text:0000000000000360 .L0 
     /tmp/ccxf6JJg.s:1273   .text:0000000000000368 .L0 
     /tmp/ccxf6JJg.s:1274   .text:0000000000000368 .L0 
     /tmp/ccxf6JJg.s:1275   .text:0000000000000368 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000368 .L0 
     /tmp/ccxf6JJg.s:1283   .text:0000000000000370 .L0 
     /tmp/ccxf6JJg.s:1284   .text:0000000000000370 .L0 
     /tmp/ccxf6JJg.s:1288   .text:0000000000000374 .L0 
     /tmp/ccxf6JJg.s:1293   .text:0000000000000378 .L0 
     /tmp/ccxf6JJg.s:1294   .text:0000000000000378 .L0 
     /tmp/ccxf6JJg.s:1295   .text:0000000000000378 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000378 .L0 
     /tmp/ccxf6JJg.s:1303   .text:0000000000000380 .L0 
     /tmp/ccxf6JJg.s:1304   .text:0000000000000380 .L0 
     /tmp/ccxf6JJg.s:1309   .text:0000000000000384 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 60


     /tmp/ccxf6JJg.s:1310   .text:0000000000000384 .L0 
       src/Riscv.cpp:179    .text:0000000000000384 .L0 
     /tmp/ccxf6JJg.s:1316   .text:0000000000000388 .L0 
       src/Riscv.cpp:181    .text:0000000000000388 .L0 
     /tmp/ccxf6JJg.s:1323   .text:000000000000038c .L0 
     /tmp/ccxf6JJg.s:1330   .text:0000000000000390 .L0 
     /tmp/ccxf6JJg.s:1333   .text:0000000000000394 .L0 
     /tmp/ccxf6JJg.s:1336   .text:0000000000000398 .L0 
     /tmp/ccxf6JJg.s:1344   .text:00000000000003a0 .L0 
     /tmp/ccxf6JJg.s:1345   .text:00000000000003a0 .L0 
     /tmp/ccxf6JJg.s:1346   .text:00000000000003a0 .L0 
     /tmp/ccxf6JJg.s:1352   .text:00000000000003a8 .L0 
     /tmp/ccxf6JJg.s:1353   .text:00000000000003a8 .L0 
     /tmp/ccxf6JJg.s:1355   .text:00000000000003ac .L0 
     /tmp/ccxf6JJg.s:1358   .text:00000000000003b4 .L0 
     /tmp/ccxf6JJg.s:1359   .text:00000000000003b4 .L0 
     /tmp/ccxf6JJg.s:1365   .text:00000000000003c0 .L0 
     /tmp/ccxf6JJg.s:1368   .text:00000000000003c0 .L0 
     /tmp/ccxf6JJg.s:1369   .text:00000000000003c0 .L0 
     /tmp/ccxf6JJg.s:1371   .text:00000000000003c4 .L0 
     /tmp/ccxf6JJg.s:1373   .text:00000000000003c8 .L0 
     /tmp/ccxf6JJg.s:1378   .text:00000000000003cc .L0 
     /tmp/ccxf6JJg.s:1384   .text:00000000000003d0 .L0 
     /tmp/ccxf6JJg.s:1385   .text:00000000000003d0 .L0 
     /tmp/ccxf6JJg.s:1387   .text:00000000000003d4 .L0 
     /tmp/ccxf6JJg.s:1389   .text:00000000000003d8 .L0 
     /tmp/ccxf6JJg.s:1399   .text:00000000000003e0 .L0 
     /tmp/ccxf6JJg.s:1400   .text:00000000000003e0 .L0 
     /tmp/ccxf6JJg.s:1401   .text:00000000000003e0 .L0 
     /tmp/ccxf6JJg.s:1406   .text:00000000000003e4 .L0 
     /tmp/ccxf6JJg.s:1407   .text:00000000000003e4 .L0 
     /tmp/ccxf6JJg.s:1409   .text:00000000000003e8 .L0 
     /tmp/ccxf6JJg.s:1416   .text:00000000000003f4 .L0 
     /tmp/ccxf6JJg.s:1417   .text:00000000000003f4 .L0 
  src/../h/Riscv.hpp:189    .text:00000000000003f4 .L0 
     /tmp/ccxf6JJg.s:1429   .text:00000000000003f8 .L0 
     /tmp/ccxf6JJg.s:1430   .text:00000000000003f8 .L0 
  src/../h/Riscv.hpp:119    .text:00000000000003f8 .L0 
     /tmp/ccxf6JJg.s:1437   .text:00000000000003fc .L0 
     /tmp/ccxf6JJg.s:1448   .text:0000000000000400 .L0 
     /tmp/ccxf6JJg.s:1449   .text:0000000000000400 .L0 
     /tmp/ccxf6JJg.s:1450   .text:0000000000000400 .L0 
  src/../h/Riscv.hpp:113    .text:0000000000000400 .L0 
     /tmp/ccxf6JJg.s:1458   .text:0000000000000408 .L0 
     /tmp/ccxf6JJg.s:1459   .text:0000000000000408 .L0 
     /tmp/ccxf6JJg.s:1464   .text:000000000000040c .L0 
     /tmp/ccxf6JJg.s:1469   .text:0000000000000410 .L0 
     /tmp/ccxf6JJg.s:1470   .text:0000000000000410 .L0 
     /tmp/ccxf6JJg.s:1471   .text:0000000000000410 .L0 
  src/../h/Riscv.hpp:183    .text:0000000000000410 .L0 
     /tmp/ccxf6JJg.s:1479   .text:0000000000000418 .L0 
     /tmp/ccxf6JJg.s:1480   .text:0000000000000418 .L0 
     /tmp/ccxf6JJg.s:1485   .text:000000000000041c .L0 
     /tmp/ccxf6JJg.s:1486   .text:000000000000041c .L0 
       src/Riscv.cpp:204    .text:000000000000041c .L0 
     /tmp/ccxf6JJg.s:1492   .text:0000000000000420 .L0 
       src/Riscv.cpp:206    .text:0000000000000420 .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 61


     /tmp/ccxf6JJg.s:1498   .text:0000000000000424 .L0 
     /tmp/ccxf6JJg.s:1502   .text:0000000000000424 .L0 
     /tmp/ccxf6JJg.s:1503   .text:0000000000000424 .L0 
     /tmp/ccxf6JJg.s:1504   .text:0000000000000424 .L0 
     /tmp/ccxf6JJg.s:1509   .text:0000000000000428 .L0 
     /tmp/ccxf6JJg.s:1511   .text:000000000000042c .L0 
     /tmp/ccxf6JJg.s:1515   .text:0000000000000430 .L0 
       src/Riscv.cpp:216    .text:0000000000000430 .L0 
     /tmp/ccxf6JJg.s:1525   .text:0000000000000434 .L0 
     /tmp/ccxf6JJg.s:1526   .text:0000000000000434 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000434 .L0 
     /tmp/ccxf6JJg.s:1538   .text:0000000000000438 .L0 
     /tmp/ccxf6JJg.s:1539   .text:0000000000000438 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000438 .L0 
     /tmp/ccxf6JJg.s:1546   .text:000000000000043c .L0 
     /tmp/ccxf6JJg.s:1552   .text:0000000000000440 .L0 
     /tmp/ccxf6JJg.s:1553   .text:0000000000000440 .L0 
     /tmp/ccxf6JJg.s:1564   .text:000000000000044c .L0 
     /tmp/ccxf6JJg.s:1565   .text:000000000000044c .L0 
     /tmp/ccxf6JJg.s:1566   .text:000000000000044c .L0 
  src/../h/Riscv.hpp:113    .text:000000000000044c .L0 
     /tmp/ccxf6JJg.s:1574   .text:0000000000000454 .L0 
     /tmp/ccxf6JJg.s:1575   .text:0000000000000454 .L0 
     /tmp/ccxf6JJg.s:1580   .text:0000000000000458 .L0 
     /tmp/ccxf6JJg.s:1585   .text:000000000000045c .L0 
     /tmp/ccxf6JJg.s:1586   .text:000000000000045c .L0 
     /tmp/ccxf6JJg.s:1587   .text:000000000000045c .L0 
  src/../h/Riscv.hpp:183    .text:000000000000045c .L0 
     /tmp/ccxf6JJg.s:1595   .text:0000000000000464 .L0 
     /tmp/ccxf6JJg.s:1596   .text:0000000000000464 .L0 
     /tmp/ccxf6JJg.s:1601   .text:0000000000000468 .L0 
     /tmp/ccxf6JJg.s:1602   .text:0000000000000468 .L0 
       src/Riscv.cpp:227    .text:0000000000000468 .L0 
     /tmp/ccxf6JJg.s:1608   .text:000000000000046c .L0 
       src/Riscv.cpp:229    .text:000000000000046c .L0 
     /tmp/ccxf6JJg.s:1614   .text:0000000000000470 .L0 
     /tmp/ccxf6JJg.s:1618   .text:0000000000000470 .L0 
     /tmp/ccxf6JJg.s:1619   .text:0000000000000470 .L0 
     /tmp/ccxf6JJg.s:1620   .text:0000000000000470 .L0 
     /tmp/ccxf6JJg.s:1625   .text:0000000000000474 .L0 
     /tmp/ccxf6JJg.s:1627   .text:0000000000000478 .L0 
     /tmp/ccxf6JJg.s:1631   .text:000000000000047c .L0 
       src/Riscv.cpp:240    .text:000000000000047c .L0 
     /tmp/ccxf6JJg.s:1641   .text:0000000000000480 .L0 
     /tmp/ccxf6JJg.s:1642   .text:0000000000000480 .L0 
  src/../h/Riscv.hpp:189    .text:0000000000000480 .L0 
     /tmp/ccxf6JJg.s:1654   .text:0000000000000484 .L0 
     /tmp/ccxf6JJg.s:1655   .text:0000000000000484 .L0 
  src/../h/Riscv.hpp:119    .text:0000000000000484 .L0 
     /tmp/ccxf6JJg.s:1662   .text:0000000000000488 .L0 
     /tmp/ccxf6JJg.s:1668   .text:000000000000048c .L0 
     /tmp/ccxf6JJg.s:1669   .text:000000000000048c .L0 
     /tmp/ccxf6JJg.s:1672   .text:0000000000000494 .L0 
     /tmp/ccxf6JJg.s:1673   .text:0000000000000494 .L0 
     /tmp/ccxf6JJg.s:1683   .text:000000000000049c .L0 
     /tmp/ccxf6JJg.s:1684   .text:000000000000049c .L0 
     /tmp/ccxf6JJg.s:1685   .text:000000000000049c .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 62


  src/../h/Riscv.hpp:113    .text:000000000000049c .L0 
     /tmp/ccxf6JJg.s:1693   .text:00000000000004a4 .L0 
     /tmp/ccxf6JJg.s:1694   .text:00000000000004a4 .L0 
     /tmp/ccxf6JJg.s:1699   .text:00000000000004a8 .L0 
     /tmp/ccxf6JJg.s:1704   .text:00000000000004ac .L0 
     /tmp/ccxf6JJg.s:1705   .text:00000000000004ac .L0 
     /tmp/ccxf6JJg.s:1706   .text:00000000000004ac .L0 
  src/../h/Riscv.hpp:183    .text:00000000000004ac .L0 
     /tmp/ccxf6JJg.s:1714   .text:00000000000004b4 .L0 
     /tmp/ccxf6JJg.s:1715   .text:00000000000004b4 .L0 
     /tmp/ccxf6JJg.s:1720   .text:00000000000004b8 .L0 
     /tmp/ccxf6JJg.s:1721   .text:00000000000004b8 .L0 
     /tmp/ccxf6JJg.s:1726   .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:131    .text:00000000000004c0 .L0 
     /tmp/ccxf6JJg.s:1736   .text:00000000000004c4 .L0 
     /tmp/ccxf6JJg.s:1737   .text:00000000000004c4 .L0 
     /tmp/ccxf6JJg.s:1740   .text:00000000000004cc .L0 
     /tmp/ccxf6JJg.s:1741   .text:00000000000004cc .L0 
     /tmp/ccxf6JJg.s:1746   .text:00000000000004d4 .L0 
  src/../h/Riscv.hpp:131    .text:00000000000004d4 .L0 
     /tmp/ccxf6JJg.s:1756   .text:00000000000004d8 .L0 
       src/Riscv.cpp:254    .text:00000000000004d8 .L0 
     /tmp/ccxf6JJg.s:1766   .text:00000000000004dc .L0 
     /tmp/ccxf6JJg.s:1767   .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:189    .text:00000000000004dc .L0 
     /tmp/ccxf6JJg.s:1779   .text:00000000000004e0 .L0 
     /tmp/ccxf6JJg.s:1780   .text:00000000000004e0 .L0 
  src/../h/Riscv.hpp:119    .text:00000000000004e0 .L0 
     /tmp/ccxf6JJg.s:1787   .text:00000000000004e4 .L0 
     /tmp/ccxf6JJg.s:1804   .text:00000000000004e8 .L0 
     /tmp/ccxf6JJg.s:1810   .text:00000000000004e8 _ZN5Riscv17handleTrapConsoleEv
     /tmp/ccxf6JJg.s:1813   .text:00000000000004e8 .L0 
     /tmp/ccxf6JJg.s:1814   .text:00000000000004e8 .L0 
     /tmp/ccxf6JJg.s:1815   .text:00000000000004ec .L0 
     /tmp/ccxf6JJg.s:1818   .text:00000000000004f4 .L0 
     /tmp/ccxf6JJg.s:1819   .text:00000000000004f4 .L0 
     /tmp/ccxf6JJg.s:1821   .text:00000000000004f8 .L0 
     /tmp/ccxf6JJg.s:1825   .text:00000000000004f8 .L0 
     /tmp/ccxf6JJg.s:1826   .text:00000000000004f8 .L0 
     /tmp/ccxf6JJg.s:1827   .text:00000000000004f8 .L0 
  src/../h/Riscv.hpp:101    .text:00000000000004f8 .L0 
     /tmp/ccxf6JJg.s:1835   .text:0000000000000500 .L0 
     /tmp/ccxf6JJg.s:1836   .text:0000000000000500 .L0 
     /tmp/ccxf6JJg.s:1841   .text:0000000000000504 .L0 
     /tmp/ccxf6JJg.s:1846   .text:0000000000000514 .L0 
     /tmp/ccxf6JJg.s:1853   .text:0000000000000524 .L0 
     /tmp/ccxf6JJg.s:1854   .text:0000000000000528 .L0 
     /tmp/ccxf6JJg.s:1855   .text:0000000000000528 .L0 
     /tmp/ccxf6JJg.s:1857   .text:000000000000052c .L0 
     /tmp/ccxf6JJg.s:1858   .text:000000000000052c .L0 
     /tmp/ccxf6JJg.s:1860   .text:0000000000000530 .L0 
     /tmp/ccxf6JJg.s:1864   .text:0000000000000534 .L0 
     /tmp/ccxf6JJg.s:1866   .text:0000000000000534 .L0 
     /tmp/ccxf6JJg.s:1867   .text:0000000000000534 .L0 
     /tmp/ccxf6JJg.s:1872   .text:000000000000053c .L0 
     /tmp/ccxf6JJg.s:1873   .text:000000000000053c .L0 
     /tmp/ccxf6JJg.s:1874   .text:000000000000053c .L0 
GAS LISTING /tmp/ccxf6JJg.s 			page 63


     /tmp/ccxf6JJg.s:1881   .text:0000000000000544 .L0 
     /tmp/ccxf6JJg.s:1889   .text:0000000000000548 .L0 
     /tmp/ccxf6JJg.s:1890   .text:0000000000000548 .L0 
     /tmp/ccxf6JJg.s:1891   .text:0000000000000548 .L0 
     /tmp/ccxf6JJg.s:1901   .text:0000000000000550 .L0 
     /tmp/ccxf6JJg.s:1902   .text:0000000000000554 .L0 
     /tmp/ccxf6JJg.s:1908   .text:0000000000000554 _ZN5Riscv10initKernelEv
     /tmp/ccxf6JJg.s:1911   .text:0000000000000554 .L0 
     /tmp/ccxf6JJg.s:1912   .text:0000000000000554 .L0 
     /tmp/ccxf6JJg.s:1913   .text:0000000000000558 .L0 
     /tmp/ccxf6JJg.s:1917   .text:0000000000000564 .L0 
     /tmp/ccxf6JJg.s:1918   .text:0000000000000564 .L0 
     /tmp/ccxf6JJg.s:1919   .text:0000000000000564 .L0 
     /tmp/ccxf6JJg.s:1921   .text:0000000000000568 .L0 
     /tmp/ccxf6JJg.s:1923   .text:0000000000000568 .L0 
     /tmp/ccxf6JJg.s:1924   .text:0000000000000568 .L0 
     /tmp/ccxf6JJg.s:1930   .text:0000000000000578 .L0 
     /tmp/ccxf6JJg.s:1931   .text:0000000000000578 .L0 
     /tmp/ccxf6JJg.s:1934   .text:0000000000000584 .L0 
     /tmp/ccxf6JJg.s:1935   .text:0000000000000584 .L0 
     /tmp/ccxf6JJg.s:1941   .text:0000000000000594 .L0 
     /tmp/ccxf6JJg.s:1942   .text:0000000000000594 .L0 
     /tmp/ccxf6JJg.s:1947   .text:00000000000005a0 .L0 
     /tmp/ccxf6JJg.s:1948   .text:00000000000005a4 .L0 
     /tmp/ccxf6JJg.s:1950   .text:00000000000005a8 .L0 
     /tmp/ccxf6JJg.s:1951   .text:00000000000005a8 .L0 
     /tmp/ccxf6JJg.s:1953   .text:00000000000005ac .L0 
     /tmp/ccxf6JJg.s:1956   .text:00000000000005b0 .L0 
     /tmp/ccxf6JJg.s:1958   .text:00000000000005b4 .L0 
     /tmp/ccxf6JJg.s:1967   .text:00000000000005b4 .L0 
     /tmp/ccxf6JJg.s:410    .text:0000000000000104 .L0 
     /tmp/ccxf6JJg.s:430    .text:0000000000000118 .L0 
     /tmp/ccxf6JJg.s:922    .text:0000000000000264 .L0 
     /tmp/ccxf6JJg.s:1079   .text:00000000000002d8 .L0 
     /tmp/ccxf6JJg.s:1721   .text:00000000000004b8 .L0 
     /tmp/ccxf6JJg.s:1741   .text:00000000000004cc .L0 
     /tmp/ccxf6JJg.s:1931   .text:0000000000000578 .L0 
     /tmp/ccxf6JJg.s:488    .text:0000000000000130 .L31
     /tmp/ccxf6JJg.s:525    .text:0000000000000158 .L32
     /tmp/ccxf6JJg.s:502    .text:0000000000000138 .L3
     /tmp/ccxf6JJg.s:535    .text:0000000000000164 .L33
     /tmp/ccxf6JJg.s:682    .text:00000000000001cc .L34
     /tmp/ccxf6JJg.s:779    .text:000000000000020c .L35
     /tmp/ccxf6JJg.s:875    .text:0000000000000248 .L36
     /tmp/ccxf6JJg.s:957    .text:000000000000028c .L37
     /tmp/ccxf6JJg.s:1032   .text:00000000000002bc .L38
     /tmp/ccxf6JJg.s:1111   .text:00000000000002f8 .L39
     /tmp/ccxf6JJg.s:1266   .text:0000000000000368 .L40
     /tmp/ccxf6JJg.s:1439   .text:0000000000000400 .L41
     /tmp/ccxf6JJg.s:1557   .text:000000000000044c .L42
     /tmp/ccxf6JJg.s:1676   .text:000000000000049c .L43
     /tmp/ccxf6JJg.s:675    .text:00000000000001c4 .L26
     /tmp/ccxf6JJg.s:131    .text:0000000000000084 .L7
     /tmp/ccxf6JJg.s:639    .text:00000000000001b4 .L8
     /tmp/ccxf6JJg.s:1259   .text:0000000000000360 .L27
     /tmp/ccxf6JJg.s:1223   .text:0000000000000350 .L15
     /tmp/ccxf6JJg.s:1362   .text:00000000000003c0 .L19
GAS LISTING /tmp/ccxf6JJg.s 			page 64


     /tmp/ccxf6JJg.s:1392   .text:00000000000003e0 .L17
     /tmp/ccxf6JJg.s:1331   .text:0000000000000394 .L18
     /tmp/ccxf6JJg.s:1325   .text:0000000000000390 .L44
     /tmp/ccxf6JJg.s:1412   .text:00000000000003f4 .L20
     /tmp/ccxf6JJg.s:1548   .text:0000000000000440 .L45
     /tmp/ccxf6JJg.s:1513   .text:0000000000000430 .L22
     /tmp/ccxf6JJg.s:1664   .text:000000000000048c .L46
     /tmp/ccxf6JJg.s:1629   .text:000000000000047c .L24
     /tmp/ccxf6JJg.s:1863   .text:0000000000000534 .L51
     /tmp/ccxf6JJg.s:1883   .text:0000000000000548 .L52
     /tmp/ccxf6JJg.s:1851   .text:0000000000000524 .L47
     /tmp/ccxf6JJg.s:5129   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxf6JJg.s:7483   .debug_str:0000000000000b54 .LASF220
     /tmp/ccxf6JJg.s:7187   .debug_str:0000000000000198 .LASF221
     /tmp/ccxf6JJg.s:7337   .debug_str:00000000000006a2 .LASF222
     /tmp/ccxf6JJg.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxf6JJg.s:1961   .text:00000000000005b4 .Letext0
     /tmp/ccxf6JJg.s:7127   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxf6JJg.s:7273   .debug_str:000000000000047e .LASF0
     /tmp/ccxf6JJg.s:7315   .debug_str:0000000000000624 .LASF1
     /tmp/ccxf6JJg.s:7413   .debug_str:0000000000000955 .LASF2
     /tmp/ccxf6JJg.s:7425   .debug_str:00000000000009c3 .LASF4
     /tmp/ccxf6JJg.s:7289   .debug_str:00000000000004f5 .LASF3
     /tmp/ccxf6JJg.s:7141   .debug_str:0000000000000057 .LASF5
     /tmp/ccxf6JJg.s:7369   .debug_str:00000000000007a4 .LASF6
     /tmp/ccxf6JJg.s:7303   .debug_str:00000000000005c2 .LASF7
     /tmp/ccxf6JJg.s:7239   .debug_str:0000000000000363 .LASF8
     /tmp/ccxf6JJg.s:7247   .debug_str:00000000000003a5 .LASF9
     /tmp/ccxf6JJg.s:7173   .debug_str:0000000000000122 .LASF10
     /tmp/ccxf6JJg.s:7227   .debug_str:0000000000000301 .LASF11
     /tmp/ccxf6JJg.s:7189   .debug_str:00000000000001a6 .LASF12
     /tmp/ccxf6JJg.s:7171   .debug_str:0000000000000112 .LASF13
     /tmp/ccxf6JJg.s:7453   .debug_str:0000000000000a8d .LASF14
     /tmp/ccxf6JJg.s:7209   .debug_str:0000000000000244 .LASF15
     /tmp/ccxf6JJg.s:7443   .debug_str:0000000000000a57 .LASF16
     /tmp/ccxf6JJg.s:7535   .debug_str:0000000000000d79 .LASF64
     /tmp/ccxf6JJg.s:7393   .debug_str:00000000000008a6 .LASF123
     /tmp/ccxf6JJg.s:7319   .debug_str:000000000000063d .LASF17
     /tmp/ccxf6JJg.s:7217   .debug_str:000000000000029d .LASF18
     /tmp/ccxf6JJg.s:7551   .debug_str:0000000000000ddf .LASF19
     /tmp/ccxf6JJg.s:7259   .debug_str:000000000000041e .LASF52
     /tmp/ccxf6JJg.s:7271   .debug_str:0000000000000466 .LASF54
     /tmp/ccxf6JJg.s:7511   .debug_str:0000000000000cc4 .LASF20
     /tmp/ccxf6JJg.s:7499   .debug_str:0000000000000c84 .LASF22
     /tmp/ccxf6JJg.s:7407   .debug_str:000000000000092f .LASF24
     /tmp/ccxf6JJg.s:7357   .debug_str:000000000000074b .LASF26
     /tmp/ccxf6JJg.s:7385   .debug_str:000000000000085d .LASF21
     /tmp/ccxf6JJg.s:7387   .debug_str:0000000000000864 .LASF23
     /tmp/ccxf6JJg.s:7351   .debug_str:000000000000072b .LASF25
     /tmp/ccxf6JJg.s:7307   .debug_str:00000000000005f7 .LASF27
     /tmp/ccxf6JJg.s:7547   .debug_str:0000000000000dcb .LASF28
     /tmp/ccxf6JJg.s:7489   .debug_str:0000000000000c39 .LASF29
     /tmp/ccxf6JJg.s:7347   .debug_str:000000000000071e .LASF30
     /tmp/ccxf6JJg.s:7355   .debug_str:0000000000000737 .LASF31
     /tmp/ccxf6JJg.s:7321   .debug_str:0000000000000646 .LASF32
     /tmp/ccxf6JJg.s:7391   .debug_str:0000000000000892 .LASF33
     /tmp/ccxf6JJg.s:7577   .debug_str:0000000000000eb3 .LASF34
GAS LISTING /tmp/ccxf6JJg.s 			page 65


     /tmp/ccxf6JJg.s:7279   .debug_str:0000000000000496 .LASF35
     /tmp/ccxf6JJg.s:7449   .debug_str:0000000000000a79 .LASF36
     /tmp/ccxf6JJg.s:7429   .debug_str:00000000000009f0 .LASF37
     /tmp/ccxf6JJg.s:7431   .debug_str:0000000000000a03 .LASF38
     /tmp/ccxf6JJg.s:7177   .debug_str:0000000000000136 .LASF39
     /tmp/ccxf6JJg.s:7205   .debug_str:000000000000021f .LASF40
     /tmp/ccxf6JJg.s:7267   .debug_str:000000000000043f .LASF41
     /tmp/ccxf6JJg.s:7277   .debug_str:0000000000000490 .LASF42
     /tmp/ccxf6JJg.s:7197   .debug_str:00000000000001e2 .LASF43
     /tmp/ccxf6JJg.s:7143   .debug_str:000000000000005e .LASF44
     /tmp/ccxf6JJg.s:7419   .debug_str:0000000000000979 .LASF45
     /tmp/ccxf6JJg.s:7411   .debug_str:000000000000094a .LASF46
     /tmp/ccxf6JJg.s:7569   .debug_str:0000000000000e68 .LASF47
     /tmp/ccxf6JJg.s:7539   .debug_str:0000000000000d84 .LASF48
     /tmp/ccxf6JJg.s:7553   .debug_str:0000000000000de8 .LASF49
     /tmp/ccxf6JJg.s:7533   .debug_str:0000000000000d6f .LASF50
     /tmp/ccxf6JJg.s:7339   .debug_str:00000000000006d2 .LASF51
     /tmp/ccxf6JJg.s:7545   .debug_str:0000000000000dbc .LASF53
     /tmp/ccxf6JJg.s:7245   .debug_str:0000000000000389 .LASF55
     /tmp/ccxf6JJg.s:7415   .debug_str:0000000000000963 .LASF56
     /tmp/ccxf6JJg.s:7571   .debug_str:0000000000000e80 .LASF57
     /tmp/ccxf6JJg.s:7219   .debug_str:00000000000002a6 .LASF58
     /tmp/ccxf6JJg.s:7235   .debug_str:0000000000000341 .LASF59
     /tmp/ccxf6JJg.s:7371   .debug_str:00000000000007b7 .LASF60
     /tmp/ccxf6JJg.s:7299   .debug_str:0000000000000583 .LASF62
     /tmp/ccxf6JJg.s:7409   .debug_str:0000000000000938 .LASF61
     /tmp/ccxf6JJg.s:7207   .debug_str:0000000000000225 .LASF63
     /tmp/ccxf6JJg.s:7543   .debug_str:0000000000000d98 .LASF65
     /tmp/ccxf6JJg.s:7529   .debug_str:0000000000000d4a .LASF99
     /tmp/ccxf6JJg.s:7313   .debug_str:000000000000061f .LASF66
     /tmp/ccxf6JJg.s:7175   .debug_str:0000000000000131 .LASF67
     /tmp/ccxf6JJg.s:7151   .debug_str:000000000000008f .LASF68
     /tmp/ccxf6JJg.s:7285   .debug_str:00000000000004ba .LASF101
     /tmp/ccxf6JJg.s:7447   .debug_str:0000000000000a74 .LASF69
     /tmp/ccxf6JJg.s:7349   .debug_str:0000000000000726 .LASF70
     /tmp/ccxf6JJg.s:7573   .debug_str:0000000000000e99 .LASF71
     /tmp/ccxf6JJg.s:7421   .debug_str:0000000000000991 .LASF74
     /tmp/ccxf6JJg.s:7223   .debug_str:00000000000002c8 .LASF72
     /tmp/ccxf6JJg.s:7417   .debug_str:000000000000096f .LASF73
     /tmp/ccxf6JJg.s:7399   .debug_str:00000000000008d6 .LASF75
     /tmp/ccxf6JJg.s:7365   .debug_str:0000000000000788 .LASF76
     /tmp/ccxf6JJg.s:7549   .debug_str:0000000000000dd3 .LASF77
     /tmp/ccxf6JJg.s:7341   .debug_str:00000000000006e8 .LASF78
     /tmp/ccxf6JJg.s:7461   .debug_str:0000000000000aba .LASF79
     /tmp/ccxf6JJg.s:7165   .debug_str:00000000000000d4 .LASF80
     /tmp/ccxf6JJg.s:7513   .debug_str:0000000000000ccd .LASF81
     /tmp/ccxf6JJg.s:7211   .debug_str:000000000000025a .LASF82
     /tmp/ccxf6JJg.s:7283   .debug_str:00000000000004b0 .LASF83
     /tmp/ccxf6JJg.s:7377   .debug_str:00000000000007f0 .LASF84
     /tmp/ccxf6JJg.s:7477   .debug_str:0000000000000b21 .LASF139
     /tmp/ccxf6JJg.s:7293   .debug_str:0000000000000533 .LASF85
     /tmp/ccxf6JJg.s:7517   .debug_str:0000000000000cdc .LASF86
     /tmp/ccxf6JJg.s:7149   .debug_str:0000000000000076 .LASF87
     /tmp/ccxf6JJg.s:7183   .debug_str:0000000000000182 .LASF88
     /tmp/ccxf6JJg.s:7493   .debug_str:0000000000000c57 .LASF89
     /tmp/ccxf6JJg.s:7397   .debug_str:00000000000008ce .LASF90
     /tmp/ccxf6JJg.s:7237   .debug_str:0000000000000359 .LASF91
GAS LISTING /tmp/ccxf6JJg.s 			page 66


     /tmp/ccxf6JJg.s:7439   .debug_str:0000000000000a33 .LASF92
     /tmp/ccxf6JJg.s:7557   .debug_str:0000000000000e0e .LASF93
     /tmp/ccxf6JJg.s:7563   .debug_str:0000000000000e2d .LASF223
     /tmp/ccxf6JJg.s:7297   .debug_str:0000000000000567 .LASF224
     /tmp/ccxf6JJg.s:7301   .debug_str:00000000000005a5 .LASF94
     /tmp/ccxf6JJg.s:7169   .debug_str:00000000000000fd .LASF95
     /tmp/ccxf6JJg.s:7423   .debug_str:00000000000009ae .LASF96
     /tmp/ccxf6JJg.s:7579   .debug_str:0000000000000ebb .LASF97
     /tmp/ccxf6JJg.s:7515   .debug_str:0000000000000cd7 .LASF100
     /tmp/ccxf6JJg.s:7311   .debug_str:000000000000061a .LASF98
     /tmp/ccxf6JJg.s:7481   .debug_str:0000000000000b31 .LASF102
     /tmp/ccxf6JJg.s:7343   .debug_str:000000000000070c .LASF103
     /tmp/ccxf6JJg.s:7523   .debug_str:0000000000000d27 .LASF104
     /tmp/ccxf6JJg.s:7389   .debug_str:0000000000000877 .LASF105
     /tmp/ccxf6JJg.s:7257   .debug_str:0000000000000403 .LASF225
     /tmp/ccxf6JJg.s:7335   .debug_str:0000000000000695 .LASF106
     /tmp/ccxf6JJg.s:7135   .debug_str:000000000000002b .LASF107
     /tmp/ccxf6JJg.s:7139   .debug_str:0000000000000047 .LASF108
     /tmp/ccxf6JJg.s:7295   .debug_str:000000000000054f .LASF109
     /tmp/ccxf6JJg.s:7405   .debug_str:0000000000000926 .LASF110
     /tmp/ccxf6JJg.s:7567   .debug_str:0000000000000e47 .LASF111
     /tmp/ccxf6JJg.s:7327   .debug_str:0000000000000668 .LASF112
     /tmp/ccxf6JJg.s:7531   .debug_str:0000000000000d4f .LASF113
     /tmp/ccxf6JJg.s:7367   .debug_str:0000000000000798 .LASF114
     /tmp/ccxf6JJg.s:7305   .debug_str:00000000000005d5 .LASF115
     /tmp/ccxf6JJg.s:7581   .debug_str:0000000000000ec9 .LASF116
     /tmp/ccxf6JJg.s:7403   .debug_str:0000000000000907 .LASF117
     /tmp/ccxf6JJg.s:7437   .debug_str:0000000000000a28 .LASF118
     /tmp/ccxf6JJg.s:7229   .debug_str:0000000000000310 .LASF119
     /tmp/ccxf6JJg.s:7375   .debug_str:00000000000007e7 .LASF120
     /tmp/ccxf6JJg.s:7179   .debug_str:0000000000000149 .LASF121
     /tmp/ccxf6JJg.s:7153   .debug_str:0000000000000094 .LASF122
     /tmp/ccxf6JJg.s:7559   .debug_str:0000000000000e20 .LASF124
     /tmp/ccxf6JJg.s:7167   .debug_str:00000000000000f7 .LASF125
     /tmp/ccxf6JJg.s:7159   .debug_str:00000000000000ad .LASF126
     /tmp/ccxf6JJg.s:7331   .debug_str:0000000000000679 .LASF127
     /tmp/ccxf6JJg.s:7465   .debug_str:0000000000000ace .LASF128
     /tmp/ccxf6JJg.s:7457   .debug_str:0000000000000aaa .LASF129
     /tmp/ccxf6JJg.s:7309   .debug_str:000000000000060a .LASF130
     /tmp/ccxf6JJg.s:7467   .debug_str:0000000000000ad6 .LASF131
     /tmp/ccxf6JJg.s:7373   .debug_str:00000000000007cc .LASF132
     /tmp/ccxf6JJg.s:7157   .debug_str:00000000000000a1 .LASF133
     /tmp/ccxf6JJg.s:7521   .debug_str:0000000000000d0c .LASF134
     /tmp/ccxf6JJg.s:7345   .debug_str:0000000000000711 .LASF135
     /tmp/ccxf6JJg.s:7199   .debug_str:00000000000001f4 .LASF136
     /tmp/ccxf6JJg.s:7451   .debug_str:0000000000000a80 .LASF137
     /tmp/ccxf6JJg.s:7427   .debug_str:00000000000009ca .LASF138
     /tmp/ccxf6JJg.s:7361   .debug_str:0000000000000765 .LASF140
     /tmp/ccxf6JJg.s:7317   .debug_str:0000000000000637 .LASF141
     /tmp/ccxf6JJg.s:7131   .debug_str:0000000000000011 .LASF142
     /tmp/ccxf6JJg.s:7561   .debug_str:0000000000000e27 .LASF143
     /tmp/ccxf6JJg.s:7381   .debug_str:0000000000000835 .LASF144
     /tmp/ccxf6JJg.s:7329   .debug_str:0000000000000670 .LASF145
     /tmp/ccxf6JJg.s:7487   .debug_str:0000000000000c21 .LASF146
     /tmp/ccxf6JJg.s:7435   .debug_str:0000000000000a1b .LASF147
     /tmp/ccxf6JJg.s:7213   .debug_str:000000000000027c .LASF148
     /tmp/ccxf6JJg.s:7473   .debug_str:0000000000000afb .LASF149
GAS LISTING /tmp/ccxf6JJg.s 			page 67


     /tmp/ccxf6JJg.s:7363   .debug_str:000000000000076a .LASF150
     /tmp/ccxf6JJg.s:7479   .debug_str:0000000000000b29 .LASF226
     /tmp/ccxf6JJg.s:7281   .debug_str:00000000000004aa .LASF151
     /tmp/ccxf6JJg.s:7519   .debug_str:0000000000000cf8 .LASF152
     /tmp/ccxf6JJg.s:7185   .debug_str:000000000000018b .LASF153
     /tmp/ccxf6JJg.s:7495   .debug_str:0000000000000c60 .LASF154
     /tmp/ccxf6JJg.s:7401   .debug_str:00000000000008f7 .LASF155
     /tmp/ccxf6JJg.s:7163   .debug_str:00000000000000c4 .LASF156
     /tmp/ccxf6JJg.s:7555   .debug_str:0000000000000dfe .LASF157
     /tmp/ccxf6JJg.s:7455   .debug_str:0000000000000a99 .LASF158
     /tmp/ccxf6JJg.s:7441   .debug_str:0000000000000a44 .LASF159
     /tmp/ccxf6JJg.s:7129   .debug_str:0000000000000000 .LASF160
     /tmp/ccxf6JJg.s:7253   .debug_str:00000000000003e0 .LASF161
     /tmp/ccxf6JJg.s:7137   .debug_str:0000000000000042 .LASF162
     /tmp/ccxf6JJg.s:7565   .debug_str:0000000000000e41 .LASF163
     /tmp/ccxf6JJg.s:7497   .debug_str:0000000000000c7c .LASF164
     /tmp/ccxf6JJg.s:7491   .debug_str:0000000000000c4d .LASF165
     /tmp/ccxf6JJg.s:7463   .debug_str:0000000000000ac5 .LASF166
     /tmp/ccxf6JJg.s:7541   .debug_str:0000000000000d8e .LASF167
     /tmp/ccxf6JJg.s:7161   .debug_str:00000000000000b6 .LASF168
     /tmp/ccxf6JJg.s:7395   .debug_str:00000000000008b1 .LASF169
     /tmp/ccxf6JJg.s:7191   .debug_str:00000000000001b6 .LASF170
     /tmp/ccxf6JJg.s:7291   .debug_str:0000000000000507 .LASF171
     /tmp/ccxf6JJg.s:7201   .debug_str:0000000000000211 .LASF172
     /tmp/ccxf6JJg.s:7195   .debug_str:00000000000001cb .LASF173
     /tmp/ccxf6JJg.s:7433   .debug_str:0000000000000a0a .LASF174
     /tmp/ccxf6JJg.s:7485   .debug_str:0000000000000c18 .LASF175
     /tmp/ccxf6JJg.s:7527   .debug_str:0000000000000d43 .LASF176
     /tmp/ccxf6JJg.s:7575   .debug_str:0000000000000eaa .LASF177
     /tmp/ccxf6JJg.s:7215   .debug_str:0000000000000298 .LASF178
     /tmp/ccxf6JJg.s:7233   .debug_str:0000000000000336 .LASF179
     /tmp/ccxf6JJg.s:7249   .debug_str:00000000000003b3 .LASF180
     /tmp/ccxf6JJg.s:7203   .debug_str:000000000000021a .LASF181
     /tmp/ccxf6JJg.s:7501   .debug_str:0000000000000c99 .LASF182
     /tmp/ccxf6JJg.s:7459   .debug_str:0000000000000ab3 .LASF183
     /tmp/ccxf6JJg.s:7287   .debug_str:00000000000004dc .LASF184
     /tmp/ccxf6JJg.s:7263   .debug_str:0000000000000432 .LASF185
     /tmp/ccxf6JJg.s:7251   .debug_str:00000000000003c7 .LASF186
     /tmp/ccxf6JJg.s:7333   .debug_str:0000000000000681 .LASF187
     /tmp/ccxf6JJg.s:7325   .debug_str:0000000000000654 .LASF188
     /tmp/ccxf6JJg.s:7269   .debug_str:0000000000000451 .LASF189
     /tmp/ccxf6JJg.s:7469   .debug_str:0000000000000ae1 .LASF190
     /tmp/ccxf6JJg.s:7261   .debug_str:0000000000000429 .LASF191
     /tmp/ccxf6JJg.s:7181   .debug_str:0000000000000167 .LASF192
     /tmp/ccxf6JJg.s:7353   .debug_str:0000000000000732 .LASF193
     /tmp/ccxf6JJg.s:7475   .debug_str:0000000000000b0a .LASF194
     /tmp/ccxf6JJg.s:7147   .debug_str:0000000000000070 .LASF195
     /tmp/ccxf6JJg.s:7225   .debug_str:00000000000002e9 .LASF196
     /tmp/ccxf6JJg.s:7379   .debug_str:000000000000082d .LASF197
     /tmp/ccxf6JJg.s:7145   .debug_str:0000000000000069 .LASF198
     /tmp/ccxf6JJg.s:7241   .debug_str:0000000000000373 .LASF199
     /tmp/ccxf6JJg.s:7471   .debug_str:0000000000000af6 .LASF200
     /tmp/ccxf6JJg.s:7231   .debug_str:0000000000000331 .LASF202
     /tmp/ccxf6JJg.s:7275   .debug_str:000000000000048b .LASF201
     /tmp/ccxf6JJg.s:7221   .debug_str:00000000000002b1 .LASF212
     /tmp/ccxf6JJg.s:1909   .text:0000000000000554 .LFB57
     /tmp/ccxf6JJg.s:1959   .text:00000000000005b4 .LFE57
GAS LISTING /tmp/ccxf6JJg.s 			page 68


     /tmp/ccxf6JJg.s:7359   .debug_str:0000000000000760 .LASF203
     /tmp/ccxf6JJg.s:6378   .debug_loc:0000000000000000 .LLST84
     /tmp/ccxf6JJg.s:6385   .debug_loc:0000000000000023 .LLST85
     /tmp/ccxf6JJg.s:1926   .text:0000000000000574 .LVL135
     /tmp/ccxf6JJg.s:1937   .text:0000000000000590 .LVL137
     /tmp/ccxf6JJg.s:1945   .text:00000000000005a0 .LVL140
     /tmp/ccxf6JJg.s:1811   .text:00000000000004e8 .LFB56
     /tmp/ccxf6JJg.s:1903   .text:0000000000000554 .LFE56
     /tmp/ccxf6JJg.s:7445   .debug_str:0000000000000a6d .LASF204
     /tmp/ccxf6JJg.s:6396   .debug_loc:0000000000000059 .LLST81
     /tmp/ccxf6JJg.s:1823   .text:00000000000004f8 .LBB434
     /tmp/ccxf6JJg.s:1839   .text:0000000000000504 .LBE434
     /tmp/ccxf6JJg.s:1870   .text:000000000000053c .LBB436
     /tmp/ccxf6JJg.s:1885   .text:0000000000000548 .LBE436
     /tmp/ccxf6JJg.s:6411   .debug_loc:00000000000000a2 .LLST82
     /tmp/ccxf6JJg.s:1887   .text:0000000000000548 .LBB438
     /tmp/ccxf6JJg.s:1899   .text:0000000000000550 .LBE438
     /tmp/ccxf6JJg.s:6420   .debug_loc:00000000000000c8 .LLST83
     /tmp/ccxf6JJg.s:1868   .text:000000000000053c .LVL132
     /tmp/ccxf6JJg.s:46     .text:0000000000000020 .LFB55
     /tmp/ccxf6JJg.s:1805   .text:00000000000004e8 .LFE55
     /tmp/ccxf6JJg.s:6428   .debug_loc:00000000000000ec .LLST0
     /tmp/ccxf6JJg.s:7133   .debug_str:0000000000000025 .LASF205
     /tmp/ccxf6JJg.s:6455   .debug_loc:000000000000015f .LLST1
     /tmp/ccxf6JJg.s:7503   .debug_str:0000000000000cb0 .LASF206
     /tmp/ccxf6JJg.s:6506   .debug_loc:0000000000000253 .LLST2
     /tmp/ccxf6JJg.s:538    .text:0000000000000164 .LBB174
     /tmp/ccxf6JJg.s:683    .text:00000000000001cc .LBE174
     /tmp/ccxf6JJg.s:7537   .debug_str:0000000000000d7f .LASF207
     /tmp/ccxf6JJg.s:6517   .debug_loc:0000000000000289 .LLST3
     /tmp/ccxf6JJg.s:7255   .debug_str:00000000000003fb .LASF208
     /tmp/ccxf6JJg.s:6524   .debug_loc:00000000000002ac .LLST4
     /tmp/ccxf6JJg.s:6531   .debug_loc:00000000000002cf .LLST5
     /tmp/ccxf6JJg.s:7505   .debug_str:0000000000000cb5 .LASF209
     /tmp/ccxf6JJg.s:6538   .debug_loc:00000000000002f2 .LLST6
     /tmp/ccxf6JJg.s:7507   .debug_str:0000000000000cba .LASF210
     /tmp/ccxf6JJg.s:6545   .debug_loc:0000000000000315 .LLST7
     /tmp/ccxf6JJg.s:7509   .debug_str:0000000000000cbf .LASF211
     /tmp/ccxf6JJg.s:6552   .debug_loc:0000000000000338 .LLST8
     /tmp/ccxf6JJg.s:6559   .debug_loc:000000000000035b .LLST9
     /tmp/ccxf6JJg.s:6566   .debug_loc:000000000000037e .LLST10
     /tmp/ccxf6JJg.s:540    .text:0000000000000164 .LBB175
     /tmp/ccxf6JJg.s:555    .text:0000000000000170 .LBE175
     /tmp/ccxf6JJg.s:560    .text:0000000000000174 .LBB177
     /tmp/ccxf6JJg.s:576    .text:0000000000000180 .LBE177
     /tmp/ccxf6JJg.s:650    .text:00000000000001b8 .LBB179
     /tmp/ccxf6JJg.s:661    .text:00000000000001bc .LBE179
     /tmp/ccxf6JJg.s:6573   .debug_loc:00000000000003a1 .LLST11
     /tmp/ccxf6JJg.s:663    .text:00000000000001bc .LBB181
     /tmp/ccxf6JJg.s:677    .text:00000000000001c4 .LBE181
     /tmp/ccxf6JJg.s:6580   .debug_loc:00000000000003c4 .LLST12
     /tmp/ccxf6JJg.s:630    .text:00000000000001a8 .LVL26
     /tmp/ccxf6JJg.s:686    .text:00000000000001cc .LBB367
     /tmp/ccxf6JJg.s:782    .text:000000000000020c .LBE367
     /tmp/ccxf6JJg.s:6587   .debug_loc:00000000000003e7 .LLST75
     /tmp/ccxf6JJg.s:6594   .debug_loc:000000000000040a .LLST76
     /tmp/ccxf6JJg.s:6601   .debug_loc:000000000000042d .LLST77
GAS LISTING /tmp/ccxf6JJg.s 			page 69


     /tmp/ccxf6JJg.s:688    .text:00000000000001cc .LBB368
     /tmp/ccxf6JJg.s:704    .text:00000000000001d8 .LBE368
     /tmp/ccxf6JJg.s:709    .text:00000000000001dc .LBB370
     /tmp/ccxf6JJg.s:725    .text:00000000000001e8 .LBE370
     /tmp/ccxf6JJg.s:754    .text:0000000000000200 .LBB372
     /tmp/ccxf6JJg.s:765    .text:0000000000000204 .LBE372
     /tmp/ccxf6JJg.s:6608   .debug_loc:0000000000000450 .LLST78
     /tmp/ccxf6JJg.s:767    .text:0000000000000204 .LBB374
     /tmp/ccxf6JJg.s:781    .text:000000000000020c .LBE374
     /tmp/ccxf6JJg.s:6615   .debug_loc:0000000000000473 .LLST79
     /tmp/ccxf6JJg.s:744    .text:00000000000001fc .LVL37
     /tmp/ccxf6JJg.s:784    .text:000000000000020c .LBB348
     /tmp/ccxf6JJg.s:878    .text:0000000000000248 .LBE348
     /tmp/ccxf6JJg.s:6622   .debug_loc:0000000000000496 .LLST70
     /tmp/ccxf6JJg.s:6629   .debug_loc:00000000000004b9 .LLST71
     /tmp/ccxf6JJg.s:6636   .debug_loc:00000000000004dc .LLST72
     /tmp/ccxf6JJg.s:786    .text:000000000000020c .LBB349
     /tmp/ccxf6JJg.s:802    .text:0000000000000218 .LBE349
     /tmp/ccxf6JJg.s:807    .text:000000000000021c .LBB351
     /tmp/ccxf6JJg.s:823    .text:0000000000000228 .LBE351
     /tmp/ccxf6JJg.s:850    .text:000000000000023c .LBB353
     /tmp/ccxf6JJg.s:861    .text:0000000000000240 .LBE353
     /tmp/ccxf6JJg.s:6643   .debug_loc:00000000000004ff .LLST73
     /tmp/ccxf6JJg.s:863    .text:0000000000000240 .LBB355
     /tmp/ccxf6JJg.s:877    .text:0000000000000248 .LBE355
     /tmp/ccxf6JJg.s:6650   .debug_loc:0000000000000522 .LLST74
     /tmp/ccxf6JJg.s:840    .text:0000000000000238 .LVL45
     /tmp/ccxf6JJg.s:880    .text:0000000000000248 .LBB330
     /tmp/ccxf6JJg.s:960    .text:000000000000028c .LBE330
     /tmp/ccxf6JJg.s:6657   .debug_loc:0000000000000545 .LLST66
     /tmp/ccxf6JJg.s:6664   .debug_loc:0000000000000568 .LLST67
     /tmp/ccxf6JJg.s:882    .text:0000000000000248 .LBB331
     /tmp/ccxf6JJg.s:898    .text:0000000000000254 .LBE331
     /tmp/ccxf6JJg.s:903    .text:0000000000000258 .LBB333
     /tmp/ccxf6JJg.s:919    .text:0000000000000264 .LBE333
     /tmp/ccxf6JJg.s:932    .text:0000000000000280 .LBB335
     /tmp/ccxf6JJg.s:943    .text:0000000000000284 .LBE335
     /tmp/ccxf6JJg.s:6671   .debug_loc:000000000000058b .LLST68
     /tmp/ccxf6JJg.s:945    .text:0000000000000284 .LBB337
     /tmp/ccxf6JJg.s:959    .text:000000000000028c .LBE337
     /tmp/ccxf6JJg.s:6678   .debug_loc:00000000000005ae .LLST69
     /tmp/ccxf6JJg.s:930    .text:0000000000000280 .LVL52
     /tmp/ccxf6JJg.s:962    .text:000000000000028c .LBB313
     /tmp/ccxf6JJg.s:1035   .text:00000000000002bc .LBE313
     /tmp/ccxf6JJg.s:6685   .debug_loc:00000000000005d1 .LLST62
     /tmp/ccxf6JJg.s:6692   .debug_loc:00000000000005f4 .LLST63
     /tmp/ccxf6JJg.s:964    .text:000000000000028c .LBB314
     /tmp/ccxf6JJg.s:980    .text:0000000000000298 .LBE314
     /tmp/ccxf6JJg.s:985    .text:000000000000029c .LBB316
     /tmp/ccxf6JJg.s:1001   .text:00000000000002a8 .LBE316
     /tmp/ccxf6JJg.s:1007   .text:00000000000002b0 .LBB318
     /tmp/ccxf6JJg.s:1018   .text:00000000000002b4 .LBE318
     /tmp/ccxf6JJg.s:6699   .debug_loc:0000000000000617 .LLST64
     /tmp/ccxf6JJg.s:1020   .text:00000000000002b4 .LBB320
     /tmp/ccxf6JJg.s:1034   .text:00000000000002bc .LBE320
     /tmp/ccxf6JJg.s:6706   .debug_loc:000000000000063a .LLST65
     /tmp/ccxf6JJg.s:1005   .text:00000000000002b0 .LVL58
GAS LISTING /tmp/ccxf6JJg.s 			page 70


     /tmp/ccxf6JJg.s:1037   .text:00000000000002bc .LBB297
     /tmp/ccxf6JJg.s:1114   .text:00000000000002f8 .LBE297
     /tmp/ccxf6JJg.s:6713   .debug_loc:000000000000065d .LLST58
     /tmp/ccxf6JJg.s:6720   .debug_loc:0000000000000680 .LLST59
     /tmp/ccxf6JJg.s:1039   .text:00000000000002bc .LBB298
     /tmp/ccxf6JJg.s:1055   .text:00000000000002c8 .LBE298
     /tmp/ccxf6JJg.s:1060   .text:00000000000002cc .LBB300
     /tmp/ccxf6JJg.s:1076   .text:00000000000002d8 .LBE300
     /tmp/ccxf6JJg.s:1086   .text:00000000000002ec .LBB302
     /tmp/ccxf6JJg.s:1097   .text:00000000000002f0 .LBE302
     /tmp/ccxf6JJg.s:6727   .debug_loc:00000000000006a3 .LLST60
     /tmp/ccxf6JJg.s:1099   .text:00000000000002f0 .LBB304
     /tmp/ccxf6JJg.s:1113   .text:00000000000002f8 .LBE304
     /tmp/ccxf6JJg.s:6734   .debug_loc:00000000000006c6 .LLST61
     /tmp/ccxf6JJg.s:1084   .text:00000000000002ec .LVL64
     /tmp/ccxf6JJg.s:1116   .text:00000000000002f8 .LBB276
     /tmp/ccxf6JJg.s:1267   .text:0000000000000368 .LBE276
     /tmp/ccxf6JJg.s:6741   .debug_loc:00000000000006e9 .LLST46
     /tmp/ccxf6JJg.s:6748   .debug_loc:000000000000070c .LLST47
     /tmp/ccxf6JJg.s:6755   .debug_loc:000000000000072f .LLST48
     /tmp/ccxf6JJg.s:6762   .debug_loc:0000000000000752 .LLST49
     /tmp/ccxf6JJg.s:6769   .debug_loc:0000000000000775 .LLST50
     /tmp/ccxf6JJg.s:6776   .debug_loc:0000000000000798 .LLST51
     /tmp/ccxf6JJg.s:1118   .text:00000000000002f8 .LBB277
     /tmp/ccxf6JJg.s:1134   .text:0000000000000304 .LBE277
     /tmp/ccxf6JJg.s:1139   .text:0000000000000308 .LBB279
     /tmp/ccxf6JJg.s:1155   .text:0000000000000314 .LBE279
     /tmp/ccxf6JJg.s:1187   .text:0000000000000330 .LBB281
     /tmp/ccxf6JJg.s:1203   .text:000000000000033c .LBE281
     /tmp/ccxf6JJg.s:6793   .debug_loc:00000000000007e3 .LLST52
     /tmp/ccxf6JJg.s:6800   .debug_loc:0000000000000806 .LLST53
     /tmp/ccxf6JJg.s:1193   .text:0000000000000334 .LBB283
     /tmp/ccxf6JJg.s:1201   .text:000000000000033c .LBE283
     /tmp/ccxf6JJg.s:6807   .debug_loc:0000000000000829 .LLST54
     /tmp/ccxf6JJg.s:1205   .text:000000000000033c .LBB285
     /tmp/ccxf6JJg.s:1213   .text:0000000000000344 .LBE285
     /tmp/ccxf6JJg.s:6816   .debug_loc:000000000000084e .LLST55
     /tmp/ccxf6JJg.s:1234   .text:0000000000000354 .LBB287
     /tmp/ccxf6JJg.s:1245   .text:0000000000000358 .LBE287
     /tmp/ccxf6JJg.s:6823   .debug_loc:0000000000000871 .LLST56
     /tmp/ccxf6JJg.s:1247   .text:0000000000000358 .LBB289
     /tmp/ccxf6JJg.s:1261   .text:0000000000000360 .LBE289
     /tmp/ccxf6JJg.s:6830   .debug_loc:0000000000000894 .LLST57
     /tmp/ccxf6JJg.s:1186   .text:0000000000000330 .LVL72
     /tmp/ccxf6JJg.s:1269   .text:0000000000000368 .LBB250
     /tmp/ccxf6JJg.s:1442   .text:0000000000000400 .LBE250
     /tmp/ccxf6JJg.s:6837   .debug_loc:00000000000008b7 .LLST33
     /tmp/ccxf6JJg.s:6844   .debug_loc:00000000000008da .LLST34
     /tmp/ccxf6JJg.s:6851   .debug_loc:00000000000008fd .LLST35
     /tmp/ccxf6JJg.s:7113   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxf6JJg.s:6858   .debug_loc:0000000000000920 .LLST37
     /tmp/ccxf6JJg.s:1327   .text:0000000000000390 .LBB256
     /tmp/ccxf6JJg.s:6865   .debug_loc:0000000000000943 .LLST38
     /tmp/ccxf6JJg.s:6880   .debug_loc:000000000000097d .LLST39
     /tmp/ccxf6JJg.s:6891   .debug_loc:00000000000009b3 .LLST40
     /tmp/ccxf6JJg.s:1337   .text:00000000000003a0 .LVL87
     /tmp/ccxf6JJg.s:1341   .text:00000000000003a0 .LBB259
GAS LISTING /tmp/ccxf6JJg.s 			page 71


     /tmp/ccxf6JJg.s:1350   .text:00000000000003a8 .LBE259
     /tmp/ccxf6JJg.s:6898   .debug_loc:00000000000009d6 .LLST41
     /tmp/ccxf6JJg.s:1361   .text:00000000000003c0 .LVL89
     /tmp/ccxf6JJg.s:1271   .text:0000000000000368 .LBB251
     /tmp/ccxf6JJg.s:1286   .text:0000000000000374 .LBE251
     /tmp/ccxf6JJg.s:1291   .text:0000000000000378 .LBB253
     /tmp/ccxf6JJg.s:1307   .text:0000000000000384 .LBE253
     /tmp/ccxf6JJg.s:1366   .text:00000000000003c0 .LBB262
     /tmp/ccxf6JJg.s:1376   .text:00000000000003cc .LBE262
     /tmp/ccxf6JJg.s:6905   .debug_loc:00000000000009f9 .LLST42
     /tmp/ccxf6JJg.s:1397   .text:00000000000003e0 .LBB265
     /tmp/ccxf6JJg.s:1404   .text:00000000000003e4 .LBE265
     /tmp/ccxf6JJg.s:6914   .debug_loc:0000000000000a1e .LLST43
     /tmp/ccxf6JJg.s:1414   .text:00000000000003f4 .LBB267
     /tmp/ccxf6JJg.s:1425   .text:00000000000003f8 .LBE267
     /tmp/ccxf6JJg.s:6921   .debug_loc:0000000000000a41 .LLST44
     /tmp/ccxf6JJg.s:1427   .text:00000000000003f8 .LBB269
     /tmp/ccxf6JJg.s:1441   .text:0000000000000400 .LBE269
     /tmp/ccxf6JJg.s:6928   .debug_loc:0000000000000a64 .LLST45
     /tmp/ccxf6JJg.s:1411   .text:00000000000003f4 .LVL94
     /tmp/ccxf6JJg.s:1444   .text:0000000000000400 .LBB235
     /tmp/ccxf6JJg.s:1558   .text:000000000000044c .LBE235
     /tmp/ccxf6JJg.s:6935   .debug_loc:0000000000000a87 .LLST26
     /tmp/ccxf6JJg.s:6942   .debug_loc:0000000000000aaa .LLST27
     /tmp/ccxf6JJg.s:6949   .debug_loc:0000000000000acd .LLST28
     /tmp/ccxf6JJg.s:6960   .debug_loc:0000000000000b03 .LLST29
     /tmp/ccxf6JJg.s:1446   .text:0000000000000400 .LBB236
     /tmp/ccxf6JJg.s:1462   .text:000000000000040c .LBE236
     /tmp/ccxf6JJg.s:1467   .text:0000000000000410 .LBB238
     /tmp/ccxf6JJg.s:1483   .text:000000000000041c .LBE238
     /tmp/ccxf6JJg.s:1500   .text:0000000000000424 .LBB240
     /tmp/ccxf6JJg.s:1507   .text:0000000000000428 .LBE240
     /tmp/ccxf6JJg.s:6971   .debug_loc:0000000000000b39 .LLST30
     /tmp/ccxf6JJg.s:1523   .text:0000000000000434 .LBB242
     /tmp/ccxf6JJg.s:1534   .text:0000000000000438 .LBE242
     /tmp/ccxf6JJg.s:6978   .debug_loc:0000000000000b5c .LLST31
     /tmp/ccxf6JJg.s:1536   .text:0000000000000438 .LBB244
     /tmp/ccxf6JJg.s:1550   .text:0000000000000440 .LBE244
     /tmp/ccxf6JJg.s:6985   .debug_loc:0000000000000b7f .LLST32
     /tmp/ccxf6JJg.s:1554   .text:0000000000000448 .LVL106
     /tmp/ccxf6JJg.s:1560   .text:000000000000044c .LBB221
     /tmp/ccxf6JJg.s:1677   .text:000000000000049c .LBE221
     /tmp/ccxf6JJg.s:6992   .debug_loc:0000000000000ba2 .LLST19
     /tmp/ccxf6JJg.s:6999   .debug_loc:0000000000000bc5 .LLST20
     /tmp/ccxf6JJg.s:7006   .debug_loc:0000000000000be8 .LLST21
     /tmp/ccxf6JJg.s:7017   .debug_loc:0000000000000c1e .LLST22
     /tmp/ccxf6JJg.s:1562   .text:000000000000044c .LBB222
     /tmp/ccxf6JJg.s:1578   .text:0000000000000458 .LBE222
     /tmp/ccxf6JJg.s:1583   .text:000000000000045c .LBB224
     /tmp/ccxf6JJg.s:1599   .text:0000000000000468 .LBE224
     /tmp/ccxf6JJg.s:1616   .text:0000000000000470 .LBB226
     /tmp/ccxf6JJg.s:1623   .text:0000000000000474 .LBE226
     /tmp/ccxf6JJg.s:7029   .debug_loc:0000000000000c55 .LLST23
     /tmp/ccxf6JJg.s:1639   .text:0000000000000480 .LBB228
     /tmp/ccxf6JJg.s:1650   .text:0000000000000484 .LBE228
     /tmp/ccxf6JJg.s:7036   .debug_loc:0000000000000c78 .LLST24
     /tmp/ccxf6JJg.s:1652   .text:0000000000000484 .LBB230
GAS LISTING /tmp/ccxf6JJg.s 			page 72


     /tmp/ccxf6JJg.s:1666   .text:000000000000048c .LBE230
     /tmp/ccxf6JJg.s:7043   .debug_loc:0000000000000c9b .LLST25
     /tmp/ccxf6JJg.s:1670   .text:0000000000000494 .LVL117
     /tmp/ccxf6JJg.s:1679   .text:000000000000049c .LBB207
     /tmp/ccxf6JJg.s:1790   .text:00000000000004e8 .LBE207
     /tmp/ccxf6JJg.s:1681   .text:000000000000049c .LBB208
     /tmp/ccxf6JJg.s:1697   .text:00000000000004a8 .LBE208
     /tmp/ccxf6JJg.s:1702   .text:00000000000004ac .LBB210
     /tmp/ccxf6JJg.s:1718   .text:00000000000004b8 .LBE210
     /tmp/ccxf6JJg.s:1723   .text:00000000000004c0 .LBB212
     /tmp/ccxf6JJg.s:1734   .text:00000000000004c4 .LBE212
     /tmp/ccxf6JJg.s:1743   .text:00000000000004d4 .LBB214
     /tmp/ccxf6JJg.s:1754   .text:00000000000004d8 .LBE214
     /tmp/ccxf6JJg.s:1764   .text:00000000000004dc .LBB216
     /tmp/ccxf6JJg.s:1775   .text:00000000000004e0 .LBE216
     /tmp/ccxf6JJg.s:7050   .debug_loc:0000000000000cbe .LLST18
     /tmp/ccxf6JJg.s:1777   .text:00000000000004e0 .LBB218
     /tmp/ccxf6JJg.s:1789   .text:00000000000004e8 .LBE218
     /tmp/ccxf6JJg.s:1738   .text:00000000000004cc .LVL124
     /tmp/ccxf6JJg.s:353    .text:00000000000000dc .LBB194
     /tmp/ccxf6JJg.s:470    .text:000000000000012c .LBE194
     /tmp/ccxf6JJg.s:7057   .debug_loc:0000000000000ce1 .LLST13
     /tmp/ccxf6JJg.s:7064   .debug_loc:0000000000000d04 .LLST14
     /tmp/ccxf6JJg.s:7071   .debug_loc:0000000000000d27 .LLST15
     /tmp/ccxf6JJg.s:355    .text:00000000000000dc .LBB195
     /tmp/ccxf6JJg.s:371    .text:00000000000000e8 .LBE195
     /tmp/ccxf6JJg.s:376    .text:00000000000000ec .LBB197
     /tmp/ccxf6JJg.s:392    .text:00000000000000f8 .LBE197
     /tmp/ccxf6JJg.s:412    .text:000000000000010c .LBB199
     /tmp/ccxf6JJg.s:423    .text:0000000000000110 .LBE199
     /tmp/ccxf6JJg.s:432    .text:0000000000000120 .LBB201
     /tmp/ccxf6JJg.s:443    .text:0000000000000124 .LBE201
     /tmp/ccxf6JJg.s:445    .text:0000000000000124 .LBB203
     /tmp/ccxf6JJg.s:456    .text:0000000000000128 .LBE203
     /tmp/ccxf6JJg.s:7078   .debug_loc:0000000000000d4a .LLST16
     /tmp/ccxf6JJg.s:458    .text:0000000000000128 .LBB205
     /tmp/ccxf6JJg.s:469    .text:000000000000012c .LBE205
     /tmp/ccxf6JJg.s:7085   .debug_loc:0000000000000d6d .LLST17
     /tmp/ccxf6JJg.s:427    .text:0000000000000118 .LVL10
     /tmp/ccxf6JJg.s:66     .text:0000000000000040 .LBB168
     /tmp/ccxf6JJg.s:83     .text:000000000000004c .LBE168
     /tmp/ccxf6JJg.s:491    .text:0000000000000130 .LBB415
     /tmp/ccxf6JJg.s:504    .text:0000000000000138 .LBE415
     /tmp/ccxf6JJg.s:7092   .debug_loc:0000000000000d90 .LLST80
     /tmp/ccxf6JJg.s:532    .text:0000000000000160 .LVL18
     /tmp/ccxf6JJg.s:10     .text:0000000000000000 .LFB54
     /tmp/ccxf6JJg.s:40     .text:0000000000000020 .LFE54
     /tmp/ccxf6JJg.s:7155   .debug_str:000000000000009c .LASF214
     /tmp/ccxf6JJg.s:7383   .debug_str:0000000000000849 .LASF213
     /tmp/ccxf6JJg.s:7525   .debug_str:0000000000000d3e .LASF215
     /tmp/ccxf6JJg.s:7323   .debug_str:000000000000064e .LASF216
     /tmp/ccxf6JJg.s:7243   .debug_str:0000000000000379 .LASF217
     /tmp/ccxf6JJg.s:7265   .debug_str:0000000000000438 .LASF218
     /tmp/ccxf6JJg.s:7193   .debug_str:00000000000001c4 .LASF219
     /tmp/ccxf6JJg.s:1928   .text:0000000000000578 .LVL136
     /tmp/ccxf6JJg.s:1954   .text:00000000000005ac .LVL141
     /tmp/ccxf6JJg.s:1939   .text:0000000000000594 .LVL138
GAS LISTING /tmp/ccxf6JJg.s 			page 73


     /tmp/ccxf6JJg.s:1943   .text:0000000000000598 .LVL139
     /tmp/ccxf6JJg.s:1837   .text:0000000000000504 .LVL129
     /tmp/ccxf6JJg.s:1850   .text:0000000000000524 .LVL130
     /tmp/ccxf6JJg.s:1862   .text:0000000000000534 .LVL131
     /tmp/ccxf6JJg.s:1882   .text:0000000000000548 .LVL133
     /tmp/ccxf6JJg.s:1896   .text:0000000000000550 .LVL134
     /tmp/ccxf6JJg.s:81     .text:000000000000004c .LVL0
     /tmp/ccxf6JJg.s:116    .text:0000000000000074 .LVL2
     /tmp/ccxf6JJg.s:130    .text:0000000000000084 .LVL3
     /tmp/ccxf6JJg.s:487    .text:0000000000000130 .LVL15
     /tmp/ccxf6JJg.s:500    .text:0000000000000138 .LVL16
     /tmp/ccxf6JJg.s:524    .text:0000000000000158 .LVL17
     /tmp/ccxf6JJg.s:534    .text:0000000000000164 .LVL19
     /tmp/ccxf6JJg.s:92     .text:0000000000000050 .LVL1
     /tmp/ccxf6JJg.s:369    .text:00000000000000e8 .LVL4
     /tmp/ccxf6JJg.s:702    .text:00000000000001d8 .LVL32
     /tmp/ccxf6JJg.s:778    .text:000000000000020c .LVL40
     /tmp/ccxf6JJg.s:800    .text:0000000000000218 .LVL41
     /tmp/ccxf6JJg.s:874    .text:0000000000000248 .LVL48
     /tmp/ccxf6JJg.s:896    .text:0000000000000254 .LVL49
     /tmp/ccxf6JJg.s:956    .text:000000000000028c .LVL54
     /tmp/ccxf6JJg.s:978    .text:0000000000000298 .LVL55
     /tmp/ccxf6JJg.s:1031   .text:00000000000002bc .LVL60
     /tmp/ccxf6JJg.s:1053   .text:00000000000002c8 .LVL61
     /tmp/ccxf6JJg.s:1110   .text:00000000000002f8 .LVL66
     /tmp/ccxf6JJg.s:1132   .text:0000000000000304 .LVL67
     /tmp/ccxf6JJg.s:1265   .text:0000000000000368 .LVL81
     /tmp/ccxf6JJg.s:1320   .text:000000000000038c .LVL84
     /tmp/ccxf6JJg.s:1438   .text:0000000000000400 .LVL96
     /tmp/ccxf6JJg.s:1460   .text:000000000000040c .LVL97
     /tmp/ccxf6JJg.s:1556   .text:000000000000044c .LVL107
     /tmp/ccxf6JJg.s:1576   .text:0000000000000458 .LVL108
     /tmp/ccxf6JJg.s:1675   .text:000000000000049c .LVL118
     /tmp/ccxf6JJg.s:1695   .text:00000000000004a8 .LVL119
     /tmp/ccxf6JJg.s:737    .text:00000000000001f0 .LVL35
     /tmp/ccxf6JJg.s:742    .text:00000000000001f4 .LVL36
     /tmp/ccxf6JJg.s:835    .text:0000000000000230 .LVL44
     /tmp/ccxf6JJg.s:558    .text:0000000000000174 .LVL20
     /tmp/ccxf6JJg.s:681    .text:00000000000001cc .LVL31
     /tmp/ccxf6JJg.s:574    .text:0000000000000180 .LVL21
     /tmp/ccxf6JJg.s:607    .text:0000000000000194 .LVL22
     /tmp/ccxf6JJg.s:613    .text:0000000000000198 .LVL23
     /tmp/ccxf6JJg.s:619    .text:000000000000019c .LVL24
     /tmp/ccxf6JJg.s:625    .text:00000000000001a0 .LVL25
     /tmp/ccxf6JJg.s:640    .text:00000000000001b4 .LVL27
     /tmp/ccxf6JJg.s:674    .text:00000000000001c4 .LVL30
     /tmp/ccxf6JJg.s:648    .text:00000000000001b8 .LVL28
     /tmp/ccxf6JJg.s:658    .text:00000000000001bc .LVL29
     /tmp/ccxf6JJg.s:707    .text:00000000000001dc .LVL33
     /tmp/ccxf6JJg.s:723    .text:00000000000001e8 .LVL34
     /tmp/ccxf6JJg.s:752    .text:0000000000000200 .LVL38
     /tmp/ccxf6JJg.s:762    .text:0000000000000204 .LVL39
     /tmp/ccxf6JJg.s:805    .text:000000000000021c .LVL42
     /tmp/ccxf6JJg.s:821    .text:0000000000000228 .LVL43
     /tmp/ccxf6JJg.s:848    .text:000000000000023c .LVL46
     /tmp/ccxf6JJg.s:858    .text:0000000000000240 .LVL47
     /tmp/ccxf6JJg.s:901    .text:0000000000000258 .LVL50
GAS LISTING /tmp/ccxf6JJg.s 			page 74


     /tmp/ccxf6JJg.s:917    .text:0000000000000264 .LVL51
     /tmp/ccxf6JJg.s:940    .text:0000000000000284 .LVL53
     /tmp/ccxf6JJg.s:983    .text:000000000000029c .LVL56
     /tmp/ccxf6JJg.s:999    .text:00000000000002a8 .LVL57
     /tmp/ccxf6JJg.s:1015   .text:00000000000002b4 .LVL59
     /tmp/ccxf6JJg.s:1058   .text:00000000000002cc .LVL62
     /tmp/ccxf6JJg.s:1074   .text:00000000000002d8 .LVL63
     /tmp/ccxf6JJg.s:1094   .text:00000000000002f0 .LVL65
     /tmp/ccxf6JJg.s:1137   .text:0000000000000308 .LVL68
     /tmp/ccxf6JJg.s:1153   .text:0000000000000314 .LVL69
     /tmp/ccxf6JJg.s:1174   .text:0000000000000320 .LVL70
     /tmp/ccxf6JJg.s:1180   .text:0000000000000324 .LVL71
     /tmp/ccxf6JJg.s:1199   .text:000000000000033c .LVL74
     /tmp/ccxf6JJg.s:1218   .text:0000000000000348 .LVL76
     /tmp/ccxf6JJg.s:1224   .text:0000000000000350 .LVL77
     /tmp/ccxf6JJg.s:1258   .text:0000000000000360 .LVL80
     /tmp/ccxf6JJg.s:1192   .text:0000000000000334 .LVL73
     /tmp/ccxf6JJg.s:1211   .text:0000000000000344 .LVL75
     /tmp/ccxf6JJg.s:1232   .text:0000000000000354 .LVL78
     /tmp/ccxf6JJg.s:1242   .text:0000000000000358 .LVL79
     /tmp/ccxf6JJg.s:1289   .text:0000000000000378 .LVL82
     /tmp/ccxf6JJg.s:1305   .text:0000000000000384 .LVL83
     /tmp/ccxf6JJg.s:1324   .text:0000000000000390 .LVL85
     /tmp/ccxf6JJg.s:1381   .text:00000000000003d0 .LVL91
     /tmp/ccxf6JJg.s:1391   .text:00000000000003e0 .LVL92
     /tmp/ccxf6JJg.s:1334   .text:0000000000000398 .LVL86
     /tmp/ccxf6JJg.s:1348   .text:00000000000003a8 .LVL88
     /tmp/ccxf6JJg.s:1374   .text:00000000000003cc .LVL90
     /tmp/ccxf6JJg.s:1402   .text:00000000000003e4 .LVL93
     /tmp/ccxf6JJg.s:1422   .text:00000000000003f8 .LVL95
     /tmp/ccxf6JJg.s:1465   .text:0000000000000410 .LVL98
     /tmp/ccxf6JJg.s:1481   .text:000000000000041c .LVL99
     /tmp/ccxf6JJg.s:1496   .text:0000000000000424 .LVL100
     /tmp/ccxf6JJg.s:1512   .text:0000000000000430 .LVL102
     /tmp/ccxf6JJg.s:1547   .text:0000000000000440 .LVL105
     /tmp/ccxf6JJg.s:1505   .text:0000000000000428 .LVL101
     /tmp/ccxf6JJg.s:1521   .text:0000000000000434 .LVL103
     /tmp/ccxf6JJg.s:1531   .text:0000000000000438 .LVL104
     /tmp/ccxf6JJg.s:1581   .text:000000000000045c .LVL109
     /tmp/ccxf6JJg.s:1597   .text:0000000000000468 .LVL110
     /tmp/ccxf6JJg.s:1612   .text:0000000000000470 .LVL111
     /tmp/ccxf6JJg.s:1628   .text:000000000000047c .LVL113
     /tmp/ccxf6JJg.s:1663   .text:000000000000048c .LVL116
     /tmp/ccxf6JJg.s:1621   .text:0000000000000474 .LVL112
     /tmp/ccxf6JJg.s:1637   .text:0000000000000480 .LVL114
     /tmp/ccxf6JJg.s:1647   .text:0000000000000484 .LVL115
     /tmp/ccxf6JJg.s:1762   .text:00000000000004dc .LVL127
     /tmp/ccxf6JJg.s:1772   .text:00000000000004e0 .LVL128
     /tmp/ccxf6JJg.s:374    .text:00000000000000ec .LVL5
     /tmp/ccxf6JJg.s:390    .text:00000000000000f8 .LVL6
     /tmp/ccxf6JJg.s:407    .text:0000000000000104 .LVL7
     /tmp/ccxf6JJg.s:440    .text:0000000000000124 .LVL12
     /tmp/ccxf6JJg.s:453    .text:0000000000000128 .LVL13
     /tmp/ccxf6JJg.s:466    .text:000000000000012c .LVL14
     /tmp/ccxf6JJg.s:1968   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxf6JJg.s:1326   .text:0000000000000390 .LBB255
     /tmp/ccxf6JJg.s:1363   .text:00000000000003c0 .LBE255
GAS LISTING /tmp/ccxf6JJg.s 			page 75


     /tmp/ccxf6JJg.s:1379   .text:00000000000003d0 .LBB264
     /tmp/ccxf6JJg.s:1395   .text:00000000000003e0 .LBE264
     /tmp/ccxf6JJg.s:1339   .text:00000000000003a0 .LBE256
     /tmp/ccxf6JJg.s:1382   .text:00000000000003d0 .LBB261
     /tmp/ccxf6JJg.s:1394   .text:00000000000003e0 .LBE261

UNDEFINED SYMBOLS
_ZN5Riscv11TrapConsoleEv
__putc
_ZN5Riscv14supervisorTrapEv
console_handler
_ZN7_thread12createThreadEPFvPvES0_Pm
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
_ZN7_thread7runningE
_ZN7_thread8dispatchEv
_ZN7_thread16timeSliceCounterE
_ZN10KSemaphorenwEm
_ZN9Scheduler3putEP7_thread
_ZN10KSemaphoredlEPv
_ZN10KSemaphore4waitEv
_ZN10KSemaphore6signalEv
__getc
_ZN7_thread8setStackEPm
