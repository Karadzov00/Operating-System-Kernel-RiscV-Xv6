GAS LISTING /tmp/ccodg5dV.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 75736F20 		.string	"uso u syscall"
   9      75207379 
   9      7363616C 
   9      6C00
  10              		.text
  11              		.align	2
  12              		.globl	_Z7syscallP4args
  14              	_Z7syscallP4args:
  15              	.LFB24:
  16              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //
   2:src/../h/syscall_c.h **** // Created by os on 6/19/22.
   3:src/../h/syscall_c.h **** //
   4:src/../h/syscall_c.h **** 
   5:src/../h/syscall_c.h **** #ifndef PROJECT_BASE_V1_1_SYSCALL_C_H
   6:src/../h/syscall_c.h **** #define PROJECT_BASE_V1_1_SYSCALL_C_H
   7:src/../h/syscall_c.h **** 
   8:src/../h/syscall_c.h **** #include "Riscv.hpp"
   9:src/../h/syscall_c.h **** #include "Print.hpp"
  10:src/../h/syscall_c.h **** 
  11:src/../h/syscall_c.h **** 
  12:src/../h/syscall_c.h **** extern "C" void supervisorTrap();
  13:src/../h/syscall_c.h **** 
  14:src/../h/syscall_c.h **** struct args{
  15:src/../h/syscall_c.h ****     uint64 a0;
  16:src/../h/syscall_c.h ****     uint64 a1;
  17:src/../h/syscall_c.h ****     uint64 a2;
  18:src/../h/syscall_c.h ****     uint64 a3;
  19:src/../h/syscall_c.h **** 
  20:src/../h/syscall_c.h **** };
  21:src/../h/syscall_c.h **** 
  22:src/../h/syscall_c.h **** void syscall(args* arg){
  17              		.loc 1 22 24
  18              		.cfi_startproc
  19              	.LVL0:
  20 0000 130101FE 		addi	sp,sp,-32
  21              		.cfi_def_cfa_offset 32
  22 0004 233C1100 		sd	ra,24(sp)
  23 0008 23388100 		sd	s0,16(sp)
  24 000c 23349100 		sd	s1,8(sp)
  25              		.cfi_offset 1, -8
  26              		.cfi_offset 8, -16
  27              		.cfi_offset 9, -24
  28 0010 13040102 		addi	s0,sp,32
  29              		.cfi_def_cfa 8, 0
  30 0014 93040500 		mv	s1,a0
  23:src/../h/syscall_c.h ****     //should prepare arguments in registers
  24:src/../h/syscall_c.h ****     //should call interrupt routine with ecall
  25:src/../h/syscall_c.h ****     printString("uso u syscall");
GAS LISTING /tmp/ccodg5dV.s 			page 2


  31              		.loc 1 25 5
  32              		.loc 1 25 16 is_stmt 0
  33 0018 17050000 		lla	a0,.LC0
  33      13050500 
  34              	.LVL1:
  35 0020 97000000 		call	_Z11printStringPKc@plt
  35      E7800000 
  36              	.LVL2:
  26:src/../h/syscall_c.h **** 
  27:src/../h/syscall_c.h ****     uint64 arg0 = arg->a0;
  37              		.loc 1 27 5 is_stmt 1
  38              		.loc 1 27 12 is_stmt 0
  39 0028 03B70400 		ld	a4,0(s1)
  40              	.LVL3:
  28:src/../h/syscall_c.h ****     uint64 arg1 = arg->a1;
  41              		.loc 1 28 5 is_stmt 1
  42              		.loc 1 28 12 is_stmt 0
  43 002c 83B78400 		ld	a5,8(s1)
  44              	.LVL4:
  29:src/../h/syscall_c.h **** 
  30:src/../h/syscall_c.h **** 
  31:src/../h/syscall_c.h **** 
  32:src/../h/syscall_c.h ****     //lock this section?
  33:src/../h/syscall_c.h ****     __asm__ volatile("mv a0, %0" : : "r" (arg0));
  45              		.loc 1 33 5 is_stmt 1
  46              		.loc 1 33 49 is_stmt 0
  47              	#APP
  48              	# 33 "src/../h/syscall_c.h" 1
  34              	    __asm__ volatile("mv a1, %0" : : "r" (arg1));
  49              		mv a0, a4
  50              	# 0 "" 2
  51              		.loc 1 34 5 is_stmt 1
  52              		.loc 1 34 49 is_stmt 0
  53              	# 34 "src/../h/syscall_c.h" 1
  35              	
  36:src/../h/syscall_c.h **** 
  37:src/../h/syscall_c.h **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  38:src/../h/syscall_c.h ****     __asm__ volatile ("ecall");
  54              		mv a1, a5
  55              	# 0 "" 2
  56              		.loc 1 38 5 is_stmt 1
  57              		.loc 1 38 31 is_stmt 0
  58              	# 38 "src/../h/syscall_c.h" 1
  39              	
  40:src/../h/syscall_c.h **** 
  41:src/../h/syscall_c.h **** }
  59              		ecall
  60              	# 0 "" 2
  61              		.loc 1 41 1
  62              	#NO_APP
  63 003c 83308101 		ld	ra,24(sp)
  64              		.cfi_restore 1
  65 0040 03340101 		ld	s0,16(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 32
  68 0044 83348100 		ld	s1,8(sp)
  69              		.cfi_restore 9
GAS LISTING /tmp/ccodg5dV.s 			page 3


  70              	.LVL5:
  71 0048 13010102 		addi	sp,sp,32
  72              		.cfi_def_cfa_offset 0
  73 004c 67800000 		jr	ra
  74              		.cfi_endproc
  75              	.LFE24:
  77              		.align	2
  78              		.globl	_Z9mem_allocm
  80              	_Z9mem_allocm:
  81              	.LFB25:
  42:src/../h/syscall_c.h **** 
  43:src/../h/syscall_c.h **** void* mem_alloc (size_t size){
  82              		.loc 1 43 30 is_stmt 1
  83              		.cfi_startproc
  84              	.LVL6:
  85 0050 130101FE 		addi	sp,sp,-32
  86              		.cfi_def_cfa_offset 32
  87 0054 233C1100 		sd	ra,24(sp)
  88 0058 23388100 		sd	s0,16(sp)
  89 005c 23349100 		sd	s1,8(sp)
  90              		.cfi_offset 1, -8
  91              		.cfi_offset 8, -16
  92              		.cfi_offset 9, -24
  93 0060 13040102 		addi	s0,sp,32
  94              		.cfi_def_cfa 8, 0
  95 0064 93040500 		mv	s1,a0
  44:src/../h/syscall_c.h ****     //prepares parameters to arguments
  45:src/../h/syscall_c.h ****     //executes system call instruction
  46:src/../h/syscall_c.h ****     args* arg = new args();
  96              		.loc 1 46 5
  97              		.loc 1 46 26 is_stmt 0
  98 0068 13050002 		li	a0,32
  99              	.LVL7:
 100 006c 97000000 		call	_Znwm@plt
 100      E7800000 
 101              	.LVL8:
 102 0074 23380500 		sd	zero,16(a0)
 103 0078 233C0500 		sd	zero,24(a0)
 104              	.LVL9:
  47:src/../h/syscall_c.h ****     arg->a0=0x01;
 105              		.loc 1 47 5 is_stmt 1
 106              		.loc 1 47 12 is_stmt 0
 107 007c 93071000 		li	a5,1
 108 0080 2330F500 		sd	a5,0(a0)
  48:src/../h/syscall_c.h **** 
  49:src/../h/syscall_c.h ****     size_t blocks = size/MEM_BLOCK_SIZE;
 109              		.loc 1 49 5 is_stmt 1
 110              		.loc 1 49 12 is_stmt 0
 111 0084 93D76400 		srli	a5,s1,6
 112              	.LVL10:
  50:src/../h/syscall_c.h ****     if(size%MEM_BLOCK_SIZE!=0)blocks++;
 113              		.loc 1 50 5 is_stmt 1
 114              		.loc 1 50 12 is_stmt 0
 115 0088 93F4F403 		andi	s1,s1,63
 116              	.LVL11:
 117              		.loc 1 50 5
 118 008c 63840400 		beqz	s1,.L4
GAS LISTING /tmp/ccodg5dV.s 			page 4


 119              		.loc 1 50 31 is_stmt 1 discriminator 1
 120              		.loc 1 50 37 is_stmt 0 discriminator 1
 121 0090 93871700 		addi	a5,a5,1
 122              	.LVL12:
 123              	.L4:
  51:src/../h/syscall_c.h ****     arg->a1=blocks;
 124              		.loc 1 51 5 is_stmt 1
 125              		.loc 1 51 12 is_stmt 0
 126 0094 2334F500 		sd	a5,8(a0)
  52:src/../h/syscall_c.h **** 
  53:src/../h/syscall_c.h ****     syscall(arg);
 127              		.loc 1 53 5 is_stmt 1
 128              		.loc 1 53 12 is_stmt 0
 129 0098 97000000 		call	_Z7syscallP4args
 129      E7800000 
 130              	.LVL13:
  54:src/../h/syscall_c.h **** 
  55:src/../h/syscall_c.h ****     uint64 ret;
 131              		.loc 1 55 5 is_stmt 1
  56:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 132              		.loc 1 56 5
 133              		.loc 1 56 47 is_stmt 0
 134              	#APP
 135              	# 56 "src/../h/syscall_c.h" 1
  57              	    printInteger(ret);
 136              		mv s1, a0
 137              	# 0 "" 2
 138              	.LVL14:
 139              		.loc 1 57 5 is_stmt 1
 140              		.loc 1 57 17 is_stmt 0
 141              	#NO_APP
 142 00a4 13850400 		mv	a0,s1
 143 00a8 97000000 		call	_Z12printIntegerm@plt
 143      E7800000 
 144              	.LVL15:
  58:src/../h/syscall_c.h ****     return (void*)ret;
 145              		.loc 1 58 5 is_stmt 1
  59:src/../h/syscall_c.h **** }
 146              		.loc 1 59 1 is_stmt 0
 147 00b0 13850400 		mv	a0,s1
 148 00b4 83308101 		ld	ra,24(sp)
 149              		.cfi_restore 1
 150 00b8 03340101 		ld	s0,16(sp)
 151              		.cfi_restore 8
 152              		.cfi_def_cfa 2, 32
 153 00bc 83348100 		ld	s1,8(sp)
 154              		.cfi_restore 9
 155              	.LVL16:
 156 00c0 13010102 		addi	sp,sp,32
 157              		.cfi_def_cfa_offset 0
 158 00c4 67800000 		jr	ra
 159              		.cfi_endproc
 160              	.LFE25:
 162              		.section	.rodata.str1.8
 163 000e 0000     		.align	3
 164              	.LC1:
 165 0010 48656C6C 		.string	"Hello"
GAS LISTING /tmp/ccodg5dV.s 			page 5


 165      6F00
 166              		.text
 167              		.align	2
 168              		.globl	main
 170              	main:
 171              	.LFB26:
 172              		.file 2 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** #include "../h/List.hpp"
   7:src/Main.cpp  **** #include "../h/syscall_c.h"
   8:src/Main.cpp  **** 
   9:src/Main.cpp  **** 
  10:src/Main.cpp  **** 
  11:src/Main.cpp  **** int main(){
 173              		.loc 2 11 11 is_stmt 1
 174              		.cfi_startproc
 175 00c8 130101FF 		addi	sp,sp,-16
 176              		.cfi_def_cfa_offset 16
 177 00cc 23341100 		sd	ra,8(sp)
 178 00d0 23308100 		sd	s0,0(sp)
 179              		.cfi_offset 1, -8
 180              		.cfi_offset 8, -16
 181 00d4 13040101 		addi	s0,sp,16
 182              		.cfi_def_cfa 8, 0
  12:src/Main.cpp  **** 
  13:src/Main.cpp  **** //    Riscv::w_stvec((uint64)&supervisorTrap);
  14:src/Main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  15:src/Main.cpp  **** //    __asm__ volatile ("ecall");
  16:src/Main.cpp  ****     Riscv::w_stvec((uint64)&supervisorTrap);
 183              		.loc 2 16 5
 184              		.loc 2 16 19 is_stmt 0
 185 00d8 97070000 		la	a5,supervisorTrap
 185      83B70700 
 186              	.LVL17:
 187              	.LBB4:
 188              	.LBB5:
 189              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
GAS LISTING /tmp/ccodg5dV.s 			page 6


  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccodg5dV.s 			page 7


  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     //static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 190              		.loc 3 125 5 is_stmt 1
 191              		.loc 3 125 69 is_stmt 0
 192              	#APP
 193              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
GAS LISTING /tmp/ccodg5dV.s 			page 8


 194              		csrw stvec, a5
 195              	# 0 "" 2
 196              	.LVL18:
 197              	#NO_APP
 198              	.LBE5:
 199              	.LBE4:
  17:src/Main.cpp  ****     printString("Hello");
 200              		.loc 2 17 5 is_stmt 1
 201              		.loc 2 17 16 is_stmt 0
 202 00e4 17050000 		lla	a0,.LC1
 202      13050500 
 203 00ec 97000000 		call	_Z11printStringPKc@plt
 203      E7800000 
 204              	.LVL19:
  18:src/Main.cpp  ****     mem_alloc(300);
 205              		.loc 2 18 5 is_stmt 1
 206              		.loc 2 18 14 is_stmt 0
 207 00f4 1305C012 		li	a0,300
 208 00f8 97000000 		call	_Z9mem_allocm
 208      E7800000 
 209              	.LVL20:
  19:src/Main.cpp  **** 
  20:src/Main.cpp  ****     return 0;
 210              		.loc 2 20 5 is_stmt 1
  21:src/Main.cpp  **** }
 211              		.loc 2 21 1 is_stmt 0
 212 0100 13050000 		li	a0,0
 213 0104 83308100 		ld	ra,8(sp)
 214              		.cfi_restore 1
 215 0108 03340100 		ld	s0,0(sp)
 216              		.cfi_restore 8
 217              		.cfi_def_cfa 2, 16
 218 010c 13010101 		addi	sp,sp,16
 219              		.cfi_def_cfa_offset 0
 220 0110 67800000 		jr	ra
 221              		.cfi_endproc
 222              	.LFE26:
 224              	.Letext0:
 225              		.file 4 "src/../h/../lib/hw.h"
 226              		.file 5 "src/../h/Print.hpp"
GAS LISTING /tmp/ccodg5dV.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccodg5dV.s:14     .text:0000000000000000 _Z7syscallP4args
     /tmp/ccodg5dV.s:18     .text:0000000000000000 .L0 
     /tmp/ccodg5dV.s:20     .text:0000000000000000 .L0 
     /tmp/ccodg5dV.s:21     .text:0000000000000004 .L0 
     /tmp/ccodg5dV.s:25     .text:0000000000000010 .L0 
     /tmp/ccodg5dV.s:26     .text:0000000000000010 .L0 
     /tmp/ccodg5dV.s:27     .text:0000000000000010 .L0 
     /tmp/ccodg5dV.s:29     .text:0000000000000014 .L0 
     /tmp/ccodg5dV.s:32     .text:0000000000000018 .L0 
     /tmp/ccodg5dV.s:33     .text:0000000000000018 .L0 
     /tmp/ccodg5dV.s:38     .text:0000000000000028 .L0 
     /tmp/ccodg5dV.s:39     .text:0000000000000028 .L0 
     /tmp/ccodg5dV.s:42     .text:000000000000002c .L0 
     /tmp/ccodg5dV.s:43     .text:000000000000002c .L0 
     /tmp/ccodg5dV.s:46     .text:0000000000000030 .L0 
src/../h/syscall_c.h:33     .text:0000000000000030 .L0 
     /tmp/ccodg5dV.s:52     .text:0000000000000034 .L0 
src/../h/syscall_c.h:34     .text:0000000000000034 .L0 
     /tmp/ccodg5dV.s:57     .text:0000000000000038 .L0 
src/../h/syscall_c.h:38     .text:0000000000000038 .L0 
     /tmp/ccodg5dV.s:63     .text:000000000000003c .L0 
     /tmp/ccodg5dV.s:64     .text:0000000000000040 .L0 
     /tmp/ccodg5dV.s:66     .text:0000000000000044 .L0 
     /tmp/ccodg5dV.s:67     .text:0000000000000044 .L0 
     /tmp/ccodg5dV.s:69     .text:0000000000000048 .L0 
     /tmp/ccodg5dV.s:72     .text:000000000000004c .L0 
     /tmp/ccodg5dV.s:74     .text:0000000000000050 .L0 
     /tmp/ccodg5dV.s:80     .text:0000000000000050 _Z9mem_allocm
     /tmp/ccodg5dV.s:83     .text:0000000000000050 .L0 
     /tmp/ccodg5dV.s:85     .text:0000000000000050 .L0 
     /tmp/ccodg5dV.s:86     .text:0000000000000054 .L0 
     /tmp/ccodg5dV.s:90     .text:0000000000000060 .L0 
     /tmp/ccodg5dV.s:91     .text:0000000000000060 .L0 
     /tmp/ccodg5dV.s:92     .text:0000000000000060 .L0 
     /tmp/ccodg5dV.s:94     .text:0000000000000064 .L0 
     /tmp/ccodg5dV.s:97     .text:0000000000000068 .L0 
     /tmp/ccodg5dV.s:98     .text:0000000000000068 .L0 
     /tmp/ccodg5dV.s:106    .text:000000000000007c .L0 
     /tmp/ccodg5dV.s:107    .text:000000000000007c .L0 
     /tmp/ccodg5dV.s:110    .text:0000000000000084 .L0 
     /tmp/ccodg5dV.s:111    .text:0000000000000084 .L0 
     /tmp/ccodg5dV.s:114    .text:0000000000000088 .L0 
     /tmp/ccodg5dV.s:115    .text:0000000000000088 .L0 
     /tmp/ccodg5dV.s:118    .text:000000000000008c .L0 
     /tmp/ccodg5dV.s:120    .text:0000000000000090 .L0 
     /tmp/ccodg5dV.s:121    .text:0000000000000090 .L0 
     /tmp/ccodg5dV.s:125    .text:0000000000000094 .L0 
     /tmp/ccodg5dV.s:126    .text:0000000000000094 .L0 
     /tmp/ccodg5dV.s:128    .text:0000000000000098 .L0 
     /tmp/ccodg5dV.s:129    .text:0000000000000098 .L0 
     /tmp/ccodg5dV.s:132    .text:00000000000000a0 .L0 
     /tmp/ccodg5dV.s:133    .text:00000000000000a0 .L0 
src/../h/syscall_c.h:56     .text:00000000000000a0 .L0 
     /tmp/ccodg5dV.s:140    .text:00000000000000a4 .L0 
     /tmp/ccodg5dV.s:142    .text:00000000000000a4 .L0 
GAS LISTING /tmp/ccodg5dV.s 			page 10


     /tmp/ccodg5dV.s:146    .text:00000000000000b0 .L0 
     /tmp/ccodg5dV.s:147    .text:00000000000000b0 .L0 
     /tmp/ccodg5dV.s:149    .text:00000000000000b8 .L0 
     /tmp/ccodg5dV.s:151    .text:00000000000000bc .L0 
     /tmp/ccodg5dV.s:152    .text:00000000000000bc .L0 
     /tmp/ccodg5dV.s:154    .text:00000000000000c0 .L0 
     /tmp/ccodg5dV.s:157    .text:00000000000000c4 .L0 
     /tmp/ccodg5dV.s:159    .text:00000000000000c8 .L0 
     /tmp/ccodg5dV.s:170    .text:00000000000000c8 main
     /tmp/ccodg5dV.s:174    .text:00000000000000c8 .L0 
     /tmp/ccodg5dV.s:175    .text:00000000000000c8 .L0 
     /tmp/ccodg5dV.s:176    .text:00000000000000cc .L0 
     /tmp/ccodg5dV.s:179    .text:00000000000000d4 .L0 
     /tmp/ccodg5dV.s:180    .text:00000000000000d4 .L0 
     /tmp/ccodg5dV.s:182    .text:00000000000000d8 .L0 
     /tmp/ccodg5dV.s:184    .text:00000000000000d8 .L0 
     /tmp/ccodg5dV.s:185    .text:00000000000000d8 .L0 
     /tmp/ccodg5dV.s:191    .text:00000000000000e0 .L0 
  src/../h/Riscv.hpp:125    .text:00000000000000e0 .L0 
     /tmp/ccodg5dV.s:201    .text:00000000000000e4 .L0 
     /tmp/ccodg5dV.s:202    .text:00000000000000e4 .L0 
     /tmp/ccodg5dV.s:206    .text:00000000000000f4 .L0 
     /tmp/ccodg5dV.s:207    .text:00000000000000f4 .L0 
     /tmp/ccodg5dV.s:211    .text:0000000000000100 .L0 
     /tmp/ccodg5dV.s:212    .text:0000000000000100 .L0 
     /tmp/ccodg5dV.s:214    .text:0000000000000108 .L0 
     /tmp/ccodg5dV.s:216    .text:000000000000010c .L0 
     /tmp/ccodg5dV.s:217    .text:000000000000010c .L0 
     /tmp/ccodg5dV.s:219    .text:0000000000000110 .L0 
     /tmp/ccodg5dV.s:221    .text:0000000000000114 .L0 
     /tmp/ccodg5dV.s:227    .text:0000000000000114 .L0 
     /tmp/ccodg5dV.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccodg5dV.s:33     .text:0000000000000018 .L0 
     /tmp/ccodg5dV.s:185    .text:00000000000000d8 .L0 
     /tmp/ccodg5dV.s:164    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccodg5dV.s:202    .text:00000000000000e4 .L0 
     /tmp/ccodg5dV.s:123    .text:0000000000000094 .L4
     /tmp/ccodg5dV.s:763    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccodg5dV.s:1482   .debug_str:00000000000001de .LASF63
     /tmp/ccodg5dV.s:1506   .debug_str:0000000000000306 .LASF64
     /tmp/ccodg5dV.s:1424   .debug_str:000000000000002d .LASF65
     /tmp/ccodg5dV.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccodg5dV.s:224    .text:0000000000000114 .Letext0
     /tmp/ccodg5dV.s:1416   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccodg5dV.s:1498   .debug_str:00000000000002e5 .LASF0
     /tmp/ccodg5dV.s:1472   .debug_str:0000000000000196 .LASF1
     /tmp/ccodg5dV.s:1462   .debug_str:0000000000000153 .LASF2
     /tmp/ccodg5dV.s:1438   .debug_str:0000000000000099 .LASF4
     /tmp/ccodg5dV.s:1468   .debug_str:000000000000017c .LASF3
     /tmp/ccodg5dV.s:1422   .debug_str:0000000000000026 .LASF5
     /tmp/ccodg5dV.s:1420   .debug_str:0000000000000013 .LASF6
     /tmp/ccodg5dV.s:1452   .debug_str:00000000000000f8 .LASF7
     /tmp/ccodg5dV.s:1516   .debug_str:000000000000034e .LASF8
     /tmp/ccodg5dV.s:1436   .debug_str:000000000000008b .LASF9
     /tmp/ccodg5dV.s:1568   .debug_str:00000000000004f7 .LASF10
     /tmp/ccodg5dV.s:1456   .debug_str:000000000000011e .LASF11
     /tmp/ccodg5dV.s:1548   .debug_str:000000000000046d .LASF12
GAS LISTING /tmp/ccodg5dV.s 			page 11


     /tmp/ccodg5dV.s:1524   .debug_str:000000000000039c .LASF13
     /tmp/ccodg5dV.s:1474   .debug_str:00000000000001a9 .LASF14
     /tmp/ccodg5dV.s:1444   .debug_str:00000000000000c0 .LASF15
     /tmp/ccodg5dV.s:1520   .debug_str:0000000000000370 .LASF16
     /tmp/ccodg5dV.s:1446   .debug_str:00000000000000d6 .LASF66
     /tmp/ccodg5dV.s:1480   .debug_str:00000000000001d3 .LASF67
     /tmp/ccodg5dV.s:1536   .debug_str:000000000000041f .LASF68
     /tmp/ccodg5dV.s:1486   .debug_str:00000000000002a7 .LASF17
     /tmp/ccodg5dV.s:1450   .debug_str:00000000000000e3 .LASF19
     /tmp/ccodg5dV.s:1488   .debug_str:00000000000002b0 .LASF21
     /tmp/ccodg5dV.s:1440   .debug_str:00000000000000a0 .LASF23
     /tmp/ccodg5dV.s:1504   .debug_str:00000000000002ff .LASF18
     /tmp/ccodg5dV.s:1466   .debug_str:0000000000000169 .LASF20
     /tmp/ccodg5dV.s:1448   .debug_str:00000000000000dc .LASF22
     /tmp/ccodg5dV.s:1454   .debug_str:000000000000010b .LASF24
     /tmp/ccodg5dV.s:1500   .debug_str:00000000000002f2 .LASF25
     /tmp/ccodg5dV.s:1530   .debug_str:00000000000003e4 .LASF26
     /tmp/ccodg5dV.s:1470   .debug_str:000000000000018e .LASF27
     /tmp/ccodg5dV.s:1512   .debug_str:000000000000032d .LASF28
     /tmp/ccodg5dV.s:1538   .debug_str:0000000000000437 .LASF29
     /tmp/ccodg5dV.s:1430   .debug_str:000000000000006c .LASF30
     /tmp/ccodg5dV.s:1464   .debug_str:0000000000000161 .LASF31
     /tmp/ccodg5dV.s:1550   .debug_str:000000000000047d .LASF32
     /tmp/ccodg5dV.s:1564   .debug_str:00000000000004e1 .LASF33
     /tmp/ccodg5dV.s:1418   .debug_str:0000000000000000 .LASF34
     /tmp/ccodg5dV.s:1426   .debug_str:000000000000005d .LASF35
     /tmp/ccodg5dV.s:1508   .debug_str:0000000000000313 .LASF36
     /tmp/ccodg5dV.s:1546   .debug_str:0000000000000467 .LASF37
     /tmp/ccodg5dV.s:1518   .debug_str:000000000000035e .LASF38
     /tmp/ccodg5dV.s:1434   .debug_str:0000000000000085 .LASF39
     /tmp/ccodg5dV.s:1544   .debug_str:0000000000000455 .LASF40
     /tmp/ccodg5dV.s:1534   .debug_str:0000000000000414 .LASF41
     /tmp/ccodg5dV.s:1494   .debug_str:00000000000002c8 .LASF42
     /tmp/ccodg5dV.s:1442   .debug_str:00000000000000b5 .LASF43
     /tmp/ccodg5dV.s:1478   .debug_str:00000000000001bb .LASF44
     /tmp/ccodg5dV.s:1490   .debug_str:00000000000002b9 .LASF45
     /tmp/ccodg5dV.s:1522   .debug_str:0000000000000386 .LASF46
     /tmp/ccodg5dV.s:1542   .debug_str:000000000000044b .LASF47
     /tmp/ccodg5dV.s:1528   .debug_str:00000000000003ce .LASF48
     /tmp/ccodg5dV.s:1460   .debug_str:000000000000013e .LASF49
     /tmp/ccodg5dV.s:1526   .debug_str:00000000000003ac .LASF51
     /tmp/ccodg5dV.s:1566   .debug_str:00000000000004e8 .LASF50
     /tmp/ccodg5dV.s:1532   .debug_str:00000000000003f8 .LASF52
     /tmp/ccodg5dV.s:1432   .debug_str:0000000000000080 .LASF69
     /tmp/ccodg5dV.s:1496   .debug_str:00000000000002e0 .LASF54
     /tmp/ccodg5dV.s:171    .text:00000000000000c8 .LFB26
     /tmp/ccodg5dV.s:222    .text:0000000000000114 .LFE26
     /tmp/ccodg5dV.s:187    .text:00000000000000e0 .LBB4
     /tmp/ccodg5dV.s:199    .text:00000000000000e4 .LBE4
     /tmp/ccodg5dV.s:204    .text:00000000000000f4 .LVL19
     /tmp/ccodg5dV.s:209    .text:0000000000000100 .LVL20
     /tmp/ccodg5dV.s:1556   .debug_str:00000000000004b1 .LASF70
     /tmp/ccodg5dV.s:1562   .debug_str:00000000000004d3 .LASF71
     /tmp/ccodg5dV.s:81     .text:0000000000000050 .LFB25
     /tmp/ccodg5dV.s:160    .text:00000000000000c8 .LFE25
     /tmp/ccodg5dV.s:1502   .debug_str:00000000000002fa .LASF56
     /tmp/ccodg5dV.s:1342   .debug_loc:0000000000000000 .LLST1
GAS LISTING /tmp/ccodg5dV.s 			page 12


     /tmp/ccodg5dV.s:1360   .debug_loc:000000000000004c .LLST2
     /tmp/ccodg5dV.s:1510   .debug_str:0000000000000326 .LASF53
     /tmp/ccodg5dV.s:1367   .debug_loc:000000000000006f .LLST3
     /tmp/ccodg5dV.s:1374   .debug_loc:0000000000000092 .LLST4
     /tmp/ccodg5dV.s:101    .text:0000000000000074 .LVL8
     /tmp/ccodg5dV.s:130    .text:00000000000000a0 .LVL13
     /tmp/ccodg5dV.s:144    .text:00000000000000b0 .LVL15
     /tmp/ccodg5dV.s:1428   .debug_str:0000000000000064 .LASF55
     /tmp/ccodg5dV.s:1458   .debug_str:000000000000012d .LASF72
     /tmp/ccodg5dV.s:15     .text:0000000000000000 .LFB24
     /tmp/ccodg5dV.s:75     .text:0000000000000050 .LFE24
     /tmp/ccodg5dV.s:1385   .debug_loc:00000000000000c8 .LLST0
     /tmp/ccodg5dV.s:1484   .debug_str:00000000000002a2 .LASF57
     /tmp/ccodg5dV.s:1492   .debug_str:00000000000002c3 .LASF58
     /tmp/ccodg5dV.s:36     .text:0000000000000028 .LVL2
     /tmp/ccodg5dV.s:1476   .debug_str:00000000000001b5 .LASF73
     /tmp/ccodg5dV.s:1552   .debug_str:0000000000000491 .LASF59
     /tmp/ccodg5dV.s:1540   .debug_str:000000000000043f .LASF61
     /tmp/ccodg5dV.s:1560   .debug_str:00000000000004cd .LASF74
     /tmp/ccodg5dV.s:1554   .debug_str:00000000000004a4 .LASF75
     /tmp/ccodg5dV.s:1558   .debug_str:00000000000004bb .LASF60
     /tmp/ccodg5dV.s:1514   .debug_str:0000000000000341 .LASF62
     /tmp/ccodg5dV.s:84     .text:0000000000000050 .LVL6
     /tmp/ccodg5dV.s:99     .text:000000000000006c .LVL7
     /tmp/ccodg5dV.s:116    .text:000000000000008c .LVL11
     /tmp/ccodg5dV.s:104    .text:000000000000007c .LVL9
     /tmp/ccodg5dV.s:112    .text:0000000000000088 .LVL10
     /tmp/ccodg5dV.s:138    .text:00000000000000a4 .LVL14
     /tmp/ccodg5dV.s:155    .text:00000000000000c0 .LVL16
     /tmp/ccodg5dV.s:19     .text:0000000000000000 .LVL0
     /tmp/ccodg5dV.s:34     .text:0000000000000020 .LVL1
     /tmp/ccodg5dV.s:70     .text:0000000000000048 .LVL5
     /tmp/ccodg5dV.s:228    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_Znwm
_Z12printIntegerm
supervisorTrap
