GAS LISTING /tmp/ccVx3USm.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB43:
  11              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** 
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** extern void userMain(void*);
  15:src/Main.cpp  **** 
  16:src/Main.cpp  **** int main(){
  12              		.loc 1 16 11
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  17:src/Main.cpp  **** 
  18:src/Main.cpp  **** 
  19:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 19 5
  23              		.loc 1 19 19 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB6:
  27              	.LBB7:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccVx3USm.s 			page 2


  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccVx3USm.s 			page 3


  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void initKernel();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** private:
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     // supervisor trap handler
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** //    static void syscallHandler();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** };
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  99:src/../h/Riscv.hpp **** {
 100:src/../h/Riscv.hpp ****     uint64 volatile scause;
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 102:src/../h/Riscv.hpp ****     return scause;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 106:src/../h/Riscv.hpp **** {
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 108:src/../h/Riscv.hpp **** }
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 111:src/../h/Riscv.hpp **** {
 112:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 114:src/../h/Riscv.hpp ****     return sepc;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 118:src/../h/Riscv.hpp **** {
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 123:src/../h/Riscv.hpp **** {
 124:src/../h/Riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccVx3USm.s 			page 4


 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 126:src/../h/Riscv.hpp ****     return stvec;
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 130:src/../h/Riscv.hpp **** {
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  29              		.loc 2 131 5 is_stmt 1
  30              		.loc 2 131 69 is_stmt 0
  31              	#APP
  32              	# 131 "src/../h/Riscv.hpp" 1
 132              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE7:
  38              	.LBE6:
  20:src/Main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPIE);
  39              		.loc 1 20 5 is_stmt 1
  40              	.LBB8:
  41              	.LBB9:
 133:src/../h/Riscv.hpp **** 
 134:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 135:src/../h/Riscv.hpp **** {
 136:src/../h/Riscv.hpp ****     uint64 volatile stval;
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 138:src/../h/Riscv.hpp ****     return stval;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 142:src/../h/Riscv.hpp **** {
 143:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 144:src/../h/Riscv.hpp **** }
 145:src/../h/Riscv.hpp **** 
 146:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 147:src/../h/Riscv.hpp **** {
 148:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 152:src/../h/Riscv.hpp **** {
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 157:src/../h/Riscv.hpp **** {
 158:src/../h/Riscv.hpp ****     uint64 volatile sip;
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 160:src/../h/Riscv.hpp ****     return sip;
 161:src/../h/Riscv.hpp **** }
 162:src/../h/Riscv.hpp **** 
 163:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccVx3USm.s 			page 5


 168:src/../h/Riscv.hpp **** //mask set
 169:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** //mask clear
 175:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 176:src/../h/Riscv.hpp **** {
 177:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  42              		.loc 2 177 5
  43              		.loc 2 177 68 is_stmt 0
  44 001c 93070002 		li	a5,32
  45              	#APP
  46              	# 177 "src/../h/Riscv.hpp" 1
 178              	}
  47              		csrc sstatus, a5
  48              	# 0 "" 2
  49              	.LVL2:
  50              	#NO_APP
  51              	.LBE9:
  52              	.LBE8:
  21:src/Main.cpp  **** 
  22:src/Main.cpp  **** 
  23:src/Main.cpp  **** //    make system thread
  24:src/Main.cpp  ****     Riscv::initKernel();
  53              		.loc 1 24 5 is_stmt 1
  54              		.loc 1 24 22 is_stmt 0
  55 0024 97000000 		call	_ZN5Riscv10initKernelEv@plt
  55      E7800000 
  56              	.LVL3:
  25:src/Main.cpp  **** 
  26:src/Main.cpp  **** 
  27:src/Main.cpp  **** //
  28:src/Main.cpp  **** //    char c;
  29:src/Main.cpp  **** //    while((c=getc())!=0x31){
  30:src/Main.cpp  **** //        putc(c);
  31:src/Main.cpp  **** //    }
  32:src/Main.cpp  **** 
  33:src/Main.cpp  **** //    make user thread
  34:src/Main.cpp  **** 
  35:src/Main.cpp  **** //    _thread* idle;
  36:src/Main.cpp  **** //    thread_create(&idle, nullptr, nullptr);
  37:src/Main.cpp  **** //    _thread::running=idle;
  38:src/Main.cpp  **** 
  39:src/Main.cpp  **** 
  40:src/Main.cpp  ****     userMain(nullptr);
  57              		.loc 1 40 5 is_stmt 1
  58              		.loc 1 40 13 is_stmt 0
  59 002c 13050000 		li	a0,0
  60 0030 97000000 		call	_Z8userMainPv@plt
  60      E7800000 
  61              	.LVL4:
  41:src/Main.cpp  **** 
  42:src/Main.cpp  **** 
  43:src/Main.cpp  ****     return 0;
  62              		.loc 1 43 5 is_stmt 1
GAS LISTING /tmp/ccVx3USm.s 			page 6


  44:src/Main.cpp  **** }
  63              		.loc 1 44 1 is_stmt 0
  64 0038 13050000 		li	a0,0
  65 003c 83308100 		ld	ra,8(sp)
  66              		.cfi_restore 1
  67 0040 03340100 		ld	s0,0(sp)
  68              		.cfi_restore 8
  69              		.cfi_def_cfa 2, 16
  70 0044 13010101 		addi	sp,sp,16
  71              		.cfi_def_cfa_offset 0
  72 0048 67800000 		jr	ra
  73              		.cfi_endproc
  74              	.LFE43:
  76              	.Letext0:
  77              		.file 3 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccVx3USm.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccVx3USm.s:9      .text:0000000000000000 main
     /tmp/ccVx3USm.s:13     .text:0000000000000000 .L0 
     /tmp/ccVx3USm.s:14     .text:0000000000000000 .L0 
     /tmp/ccVx3USm.s:15     .text:0000000000000004 .L0 
     /tmp/ccVx3USm.s:18     .text:000000000000000c .L0 
     /tmp/ccVx3USm.s:19     .text:000000000000000c .L0 
     /tmp/ccVx3USm.s:21     .text:0000000000000010 .L0 
     /tmp/ccVx3USm.s:23     .text:0000000000000010 .L0 
     /tmp/ccVx3USm.s:24     .text:0000000000000010 .L0 
     /tmp/ccVx3USm.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:131    .text:0000000000000018 .L0 
     /tmp/ccVx3USm.s:42     .text:000000000000001c .L0 
     /tmp/ccVx3USm.s:43     .text:000000000000001c .L0 
     /tmp/ccVx3USm.s:44     .text:000000000000001c .L0 
     /tmp/ccVx3USm.s:54     .text:0000000000000024 .L0 
     /tmp/ccVx3USm.s:55     .text:0000000000000024 .L0 
     /tmp/ccVx3USm.s:58     .text:000000000000002c .L0 
     /tmp/ccVx3USm.s:59     .text:000000000000002c .L0 
     /tmp/ccVx3USm.s:63     .text:0000000000000038 .L0 
     /tmp/ccVx3USm.s:64     .text:0000000000000038 .L0 
     /tmp/ccVx3USm.s:66     .text:0000000000000040 .L0 
     /tmp/ccVx3USm.s:68     .text:0000000000000044 .L0 
     /tmp/ccVx3USm.s:69     .text:0000000000000044 .L0 
     /tmp/ccVx3USm.s:71     .text:0000000000000048 .L0 
     /tmp/ccVx3USm.s:73     .text:000000000000004c .L0 
     /tmp/ccVx3USm.s:78     .text:000000000000004c .L0 
     /tmp/ccVx3USm.s:24     .text:0000000000000010 .L0 
     /tmp/ccVx3USm.s:515    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccVx3USm.s:1082   .debug_str:00000000000003ad .LASF67
     /tmp/ccVx3USm.s:1072   .debug_str:0000000000000372 .LASF68
     /tmp/ccVx3USm.s:1028   .debug_str:0000000000000206 .LASF69
     /tmp/ccVx3USm.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccVx3USm.s:76     .text:000000000000004c .Letext0
     /tmp/ccVx3USm.s:960    .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccVx3USm.s:1006   .debug_str:000000000000015f .LASF0
     /tmp/ccVx3USm.s:1020   .debug_str:00000000000001e0 .LASF1
     /tmp/ccVx3USm.s:1058   .debug_str:0000000000000309 .LASF2
     /tmp/ccVx3USm.s:1064   .debug_str:000000000000033b .LASF4
     /tmp/ccVx3USm.s:1012   .debug_str:0000000000000186 .LASF3
     /tmp/ccVx3USm.s:962    .debug_str:0000000000000000 .LASF5
     /tmp/ccVx3USm.s:1040   .debug_str:0000000000000284 .LASF6
     /tmp/ccVx3USm.s:1016   .debug_str:00000000000001ba .LASF7
     /tmp/ccVx3USm.s:994    .debug_str:00000000000000f0 .LASF8
     /tmp/ccVx3USm.s:998    .debug_str:000000000000011c .LASF9
     /tmp/ccVx3USm.s:968    .debug_str:0000000000000022 .LASF10
     /tmp/ccVx3USm.s:988    .debug_str:00000000000000c4 .LASF11
     /tmp/ccVx3USm.s:972    .debug_str:0000000000000044 .LASF12
     /tmp/ccVx3USm.s:966    .debug_str:0000000000000012 .LASF13
     /tmp/ccVx3USm.s:1078   .debug_str:0000000000000394 .LASF14
     /tmp/ccVx3USm.s:982    .debug_str:0000000000000097 .LASF15
     /tmp/ccVx3USm.s:1070   .debug_str:000000000000035c .LASF16
     /tmp/ccVx3USm.s:1096   .debug_str:00000000000004c1 .LASF70
     /tmp/ccVx3USm.s:1090   .debug_str:00000000000004a3 .LASF71
     /tmp/ccVx3USm.s:986    .debug_str:00000000000000b8 .LASF17
     /tmp/ccVx3USm.s:1080   .debug_str:00000000000003a0 .LASF18
GAS LISTING /tmp/ccVx3USm.s 			page 8


     /tmp/ccVx3USm.s:974    .debug_str:0000000000000054 .LASF19
     /tmp/ccVx3USm.s:1000   .debug_str:000000000000012a .LASF52
     /tmp/ccVx3USm.s:1004   .debug_str:0000000000000147 .LASF54
     /tmp/ccVx3USm.s:1088   .debug_str:000000000000049a .LASF20
     /tmp/ccVx3USm.s:1086   .debug_str:0000000000000485 .LASF22
     /tmp/ccVx3USm.s:1052   .debug_str:00000000000002e3 .LASF24
     /tmp/ccVx3USm.s:1038   .debug_str:000000000000026f .LASF26
     /tmp/ccVx3USm.s:1046   .debug_str:00000000000002b5 .LASF21
     /tmp/ccVx3USm.s:1048   .debug_str:00000000000002bc .LASF23
     /tmp/ccVx3USm.s:1034   .debug_str:0000000000000254 .LASF25
     /tmp/ccVx3USm.s:1018   .debug_str:00000000000001cd .LASF27
     /tmp/ccVx3USm.s:1102   .debug_str:00000000000004e0 .LASF28
     /tmp/ccVx3USm.s:1084   .debug_str:0000000000000471 .LASF29
     /tmp/ccVx3USm.s:1032   .debug_str:000000000000024c .LASF30
     /tmp/ccVx3USm.s:1036   .debug_str:000000000000025b .LASF31
     /tmp/ccVx3USm.s:1022   .debug_str:00000000000001f3 .LASF32
     /tmp/ccVx3USm.s:1050   .debug_str:00000000000002cf .LASF33
     /tmp/ccVx3USm.s:1110   .debug_str:000000000000052f .LASF34
     /tmp/ccVx3USm.s:1010   .debug_str:0000000000000172 .LASF35
     /tmp/ccVx3USm.s:1076   .debug_str:000000000000038d .LASF36
     /tmp/ccVx3USm.s:1066   .debug_str:0000000000000342 .LASF37
     /tmp/ccVx3USm.s:1068   .debug_str:0000000000000355 .LASF38
     /tmp/ccVx3USm.s:970    .debug_str:0000000000000031 .LASF39
     /tmp/ccVx3USm.s:978    .debug_str:0000000000000072 .LASF40
     /tmp/ccVx3USm.s:1002   .debug_str:0000000000000135 .LASF41
     /tmp/ccVx3USm.s:1008   .debug_str:000000000000016c .LASF42
     /tmp/ccVx3USm.s:976    .debug_str:0000000000000060 .LASF43
     /tmp/ccVx3USm.s:964    .debug_str:0000000000000007 .LASF44
     /tmp/ccVx3USm.s:1062   .debug_str:0000000000000323 .LASF45
     /tmp/ccVx3USm.s:1056   .debug_str:00000000000002fe .LASF46
     /tmp/ccVx3USm.s:1106   .debug_str:00000000000004fe .LASF47
     /tmp/ccVx3USm.s:1098   .debug_str:00000000000004c7 .LASF48
     /tmp/ccVx3USm.s:1104   .debug_str:00000000000004e8 .LASF49
     /tmp/ccVx3USm.s:1094   .debug_str:00000000000004b7 .LASF50
     /tmp/ccVx3USm.s:1030   .debug_str:0000000000000236 .LASF51
     /tmp/ccVx3USm.s:1100   .debug_str:00000000000004d1 .LASF53
     /tmp/ccVx3USm.s:996    .debug_str:0000000000000100 .LASF55
     /tmp/ccVx3USm.s:1060   .debug_str:0000000000000317 .LASF56
     /tmp/ccVx3USm.s:1108   .debug_str:0000000000000516 .LASF57
     /tmp/ccVx3USm.s:984    .debug_str:00000000000000ad .LASF58
     /tmp/ccVx3USm.s:992    .debug_str:00000000000000d8 .LASF59
     /tmp/ccVx3USm.s:1042   .debug_str:0000000000000297 .LASF60
     /tmp/ccVx3USm.s:1014   .debug_str:0000000000000198 .LASF62
     /tmp/ccVx3USm.s:1054   .debug_str:00000000000002ec .LASF61
     /tmp/ccVx3USm.s:980    .debug_str:0000000000000078 .LASF63
     /tmp/ccVx3USm.s:1026   .debug_str:0000000000000201 .LASF64
     /tmp/ccVx3USm.s:990    .debug_str:00000000000000d3 .LASF72
     /tmp/ccVx3USm.s:10     .text:0000000000000000 .LFB43
     /tmp/ccVx3USm.s:74     .text:000000000000004c .LFE43
     /tmp/ccVx3USm.s:26     .text:0000000000000018 .LBB6
     /tmp/ccVx3USm.s:38     .text:000000000000001c .LBE6
     /tmp/ccVx3USm.s:40     .text:000000000000001c .LBB8
     /tmp/ccVx3USm.s:52     .text:0000000000000024 .LBE8
     /tmp/ccVx3USm.s:938    .debug_loc:0000000000000000 .LLST0
     /tmp/ccVx3USm.s:56     .text:000000000000002c .LVL3
     /tmp/ccVx3USm.s:61     .text:0000000000000038 .LVL4
     /tmp/ccVx3USm.s:1092   .debug_str:00000000000004b2 .LASF65
GAS LISTING /tmp/ccVx3USm.s 			page 9


     /tmp/ccVx3USm.s:1024   .debug_str:00000000000001fb .LASF66
     /tmp/ccVx3USm.s:1074   .debug_str:000000000000037f .LASF73
     /tmp/ccVx3USm.s:1044   .debug_str:00000000000002ac .LASF74
     /tmp/ccVx3USm.s:35     .text:000000000000001c .LVL1
     /tmp/ccVx3USm.s:49     .text:0000000000000024 .LVL2
     /tmp/ccVx3USm.s:79     .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN5Riscv10initKernelEv
_Z8userMainPv
