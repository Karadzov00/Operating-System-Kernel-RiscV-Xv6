GAS LISTING /tmp/ccMY8JOu.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB44:
  11              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** 
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** extern void userMain(void*);
  15:src/Main.cpp  **** 
  16:src/Main.cpp  **** int main(){
  12              		.loc 1 16 11
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
  17:src/Main.cpp  **** 
  18:src/Main.cpp  **** 
  19:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 19 5
  23              		.loc 1 19 19 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB6:
  27              	.LBB7:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccMY8JOu.s 			page 2


  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     static bool privilege;
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/Riscv.hpp ****     static void popSppSpie();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     // read register scause
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     // write register scause
  24:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     // read register sepc
  27:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     // write register sepc
  30:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     // read register stvec
  33:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     // write register stvec
  36:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     // read register stval
  39:src/../h/Riscv.hpp ****     static uint64 r_stval();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     // write register stval
  42:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     enum BitMaskSip
  45:src/../h/Riscv.hpp ****     {
  46:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/Riscv.hpp ****     };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     // mask set register sip
  52:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     // mask clear register sip
  55:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     // read register sip
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     // write register sip
  61:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/Riscv.hpp ****     {
  65:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/ccMY8JOu.s 			page 3


  68:src/../h/Riscv.hpp ****     };
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp ****     // mask set register sstatus
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     // mask clear register sstatus
  74:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     // read register sstatus
  77:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     // write register sstatus
  80:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     // supervisor trap
  83:src/../h/Riscv.hpp ****     static void supervisorTrap();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     static void TrapConsole();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void initKernel();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** private:
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp ****     // supervisor trap handler
  92:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** //    static void syscallHandler();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** };
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/Riscv.hpp **** {
 102:src/../h/Riscv.hpp ****     uint64 volatile scause;
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 104:src/../h/Riscv.hpp ****     return scause;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/Riscv.hpp **** {
 109:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/Riscv.hpp **** {
 114:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 115:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 116:src/../h/Riscv.hpp ****     return sepc;
 117:src/../h/Riscv.hpp **** }
 118:src/../h/Riscv.hpp **** 
 119:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/Riscv.hpp **** {
 121:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/Riscv.hpp **** }
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
GAS LISTING /tmp/ccMY8JOu.s 			page 4


 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/Riscv.hpp ****     return stvec;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/Riscv.hpp **** {
 133:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  29              		.loc 2 133 5 is_stmt 1
  30              		.loc 2 133 69 is_stmt 0
  31              	#APP
  32              	# 133 "src/../h/Riscv.hpp" 1
 134              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE7:
  38              	.LBE6:
  20:src/Main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPIE);
  39              		.loc 1 20 5 is_stmt 1
  40              	.LBB8:
  41              	.LBB9:
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/Riscv.hpp **** {
 138:src/../h/Riscv.hpp ****     uint64 volatile stval;
 139:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/Riscv.hpp ****     return stval;
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/Riscv.hpp **** {
 145:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/Riscv.hpp **** }
 147:src/../h/Riscv.hpp **** 
 148:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/Riscv.hpp **** {
 150:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/Riscv.hpp **** {
 155:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/Riscv.hpp **** }
 157:src/../h/Riscv.hpp **** 
 158:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/Riscv.hpp **** {
 160:src/../h/Riscv.hpp ****     uint64 volatile sip;
 161:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/Riscv.hpp ****     return sip;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
GAS LISTING /tmp/ccMY8JOu.s 			page 5


 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** //mask set
 171:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 172:src/../h/Riscv.hpp **** {
 173:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/Riscv.hpp **** }
 175:src/../h/Riscv.hpp **** 
 176:src/../h/Riscv.hpp **** //mask clear
 177:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 178:src/../h/Riscv.hpp **** {
 179:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  42              		.loc 2 179 5
  43              		.loc 2 179 68 is_stmt 0
  44 001c 93070002 		li	a5,32
  45              	#APP
  46              	# 179 "src/../h/Riscv.hpp" 1
 180              	}
  47              		csrc sstatus, a5
  48              	# 0 "" 2
  49              	.LVL2:
  50              	#NO_APP
  51              	.LBE9:
  52              	.LBE8:
  21:src/Main.cpp  ****     __asm__ volatile ("ecall");
  53              		.loc 1 21 5 is_stmt 1
  54              		.loc 1 21 31 is_stmt 0
  55              	#APP
  56              	# 21 "src/Main.cpp" 1
  22              	//
  23:src/Main.cpp  **** //    char c;
  24:src/Main.cpp  **** //    while((c=getc())!=0x31){
  25:src/Main.cpp  **** //        putc(c);
  26:src/Main.cpp  **** //    }
  27:src/Main.cpp  **** 
  28:src/Main.cpp  **** //    make user thread
  29:src/Main.cpp  ****     _thread* idle;
  57              		ecall
  58              	# 0 "" 2
  59              		.loc 1 29 5 is_stmt 1
  30:src/Main.cpp  ****     thread_create(&idle, nullptr, nullptr);
  60              		.loc 1 30 5
  61              		.loc 1 30 18 is_stmt 0
  62              	#NO_APP
  63 0028 13060000 		li	a2,0
  64 002c 93050000 		li	a1,0
  65 0030 130584FE 		addi	a0,s0,-24
  66 0034 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  66      E7800000 
  67              	.LVL3:
  31:src/Main.cpp  ****     _thread::running=idle;
  68              		.loc 1 31 5 is_stmt 1
  69              		.loc 1 31 21 is_stmt 0
  70 003c 97070000 		la	a5,_ZN7_thread7runningE
  70      83B70700 
  71 0044 033784FE 		ld	a4,-24(s0)
  72 0048 23B0E700 		sd	a4,0(a5)
GAS LISTING /tmp/ccMY8JOu.s 			page 6


  32:src/Main.cpp  **** 
  33:src/Main.cpp  ****     userMain(nullptr);
  73              		.loc 1 33 5 is_stmt 1
  74              		.loc 1 33 13 is_stmt 0
  75 004c 13050000 		li	a0,0
  76 0050 97000000 		call	_Z8userMainPv@plt
  76      E7800000 
  77              	.LVL4:
  34:src/Main.cpp  **** 
  35:src/Main.cpp  ****     return 0;
  78              		.loc 1 35 5 is_stmt 1
  36:src/Main.cpp  **** }
  79              		.loc 1 36 1 is_stmt 0
  80 0058 13050000 		li	a0,0
  81 005c 83308101 		ld	ra,24(sp)
  82              		.cfi_restore 1
  83 0060 03340101 		ld	s0,16(sp)
  84              		.cfi_restore 8
  85              		.cfi_def_cfa 2, 32
  86 0064 13010102 		addi	sp,sp,32
  87              		.cfi_def_cfa_offset 0
  88 0068 67800000 		jr	ra
  89              		.cfi_endproc
  90              	.LFE44:
  92              	.Letext0:
  93              		.file 3 "src/../h/../lib/hw.h"
  94              		.file 4 "src/../h/_thread.hpp"
  95              		.file 5 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccMY8JOu.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccMY8JOu.s:9      .text:0000000000000000 main
     /tmp/ccMY8JOu.s:13     .text:0000000000000000 .L0 
     /tmp/ccMY8JOu.s:14     .text:0000000000000000 .L0 
     /tmp/ccMY8JOu.s:15     .text:0000000000000004 .L0 
     /tmp/ccMY8JOu.s:18     .text:000000000000000c .L0 
     /tmp/ccMY8JOu.s:19     .text:000000000000000c .L0 
     /tmp/ccMY8JOu.s:21     .text:0000000000000010 .L0 
     /tmp/ccMY8JOu.s:23     .text:0000000000000010 .L0 
     /tmp/ccMY8JOu.s:24     .text:0000000000000010 .L0 
     /tmp/ccMY8JOu.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:133    .text:0000000000000018 .L0 
     /tmp/ccMY8JOu.s:42     .text:000000000000001c .L0 
     /tmp/ccMY8JOu.s:43     .text:000000000000001c .L0 
     /tmp/ccMY8JOu.s:44     .text:000000000000001c .L0 
     /tmp/ccMY8JOu.s:54     .text:0000000000000024 .L0 
        src/Main.cpp:21     .text:0000000000000024 .L0 
     /tmp/ccMY8JOu.s:60     .text:0000000000000028 .L0 
     /tmp/ccMY8JOu.s:61     .text:0000000000000028 .L0 
     /tmp/ccMY8JOu.s:63     .text:0000000000000028 .L0 
     /tmp/ccMY8JOu.s:69     .text:000000000000003c .L0 
     /tmp/ccMY8JOu.s:70     .text:000000000000003c .L0 
     /tmp/ccMY8JOu.s:74     .text:000000000000004c .L0 
     /tmp/ccMY8JOu.s:75     .text:000000000000004c .L0 
     /tmp/ccMY8JOu.s:79     .text:0000000000000058 .L0 
     /tmp/ccMY8JOu.s:80     .text:0000000000000058 .L0 
     /tmp/ccMY8JOu.s:82     .text:0000000000000060 .L0 
     /tmp/ccMY8JOu.s:84     .text:0000000000000064 .L0 
     /tmp/ccMY8JOu.s:85     .text:0000000000000064 .L0 
     /tmp/ccMY8JOu.s:87     .text:0000000000000068 .L0 
     /tmp/ccMY8JOu.s:89     .text:000000000000006c .L0 
     /tmp/ccMY8JOu.s:96     .text:000000000000006c .L0 
     /tmp/ccMY8JOu.s:24     .text:0000000000000010 .L0 
     /tmp/ccMY8JOu.s:70     .text:000000000000003c .L0 
     /tmp/ccMY8JOu.s:964    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccMY8JOu.s:1901   .debug_str:000000000000067e .LASF126
     /tmp/ccMY8JOu.s:1877   .debug_str:00000000000005fa .LASF127
     /tmp/ccMY8JOu.s:1811   .debug_str:00000000000003ae .LASF128
     /tmp/ccMY8JOu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccMY8JOu.s:92     .text:000000000000006c .Letext0
     /tmp/ccMY8JOu.s:1689   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccMY8JOu.s:1777   .debug_str:0000000000000282 .LASF0
     /tmp/ccMY8JOu.s:1797   .debug_str:0000000000000353 .LASF1
     /tmp/ccMY8JOu.s:1853   .debug_str:000000000000053b .LASF2
     /tmp/ccMY8JOu.s:1861   .debug_str:0000000000000588 .LASF4
     /tmp/ccMY8JOu.s:1783   .debug_str:00000000000002a9 .LASF3
     /tmp/ccMY8JOu.s:1699   .debug_str:000000000000002e .LASF5
     /tmp/ccMY8JOu.s:1829   .debug_str:0000000000000463 .LASF6
     /tmp/ccMY8JOu.s:1791   .debug_str:000000000000031d .LASF7
     /tmp/ccMY8JOu.s:1763   .debug_str:00000000000001f8 .LASF8
     /tmp/ccMY8JOu.s:1767   .debug_str:0000000000000224 .LASF9
     /tmp/ccMY8JOu.s:1719   .debug_str:00000000000000ae .LASF10
     /tmp/ccMY8JOu.s:1753   .debug_str:00000000000001be .LASF11
     /tmp/ccMY8JOu.s:1727   .debug_str:00000000000000e7 .LASF12
     /tmp/ccMY8JOu.s:1717   .debug_str:000000000000009e .LASF13
     /tmp/ccMY8JOu.s:1885   .debug_str:0000000000000629 .LASF14
GAS LISTING /tmp/ccMY8JOu.s 			page 8


     /tmp/ccMY8JOu.s:1743   .debug_str:0000000000000168 .LASF15
     /tmp/ccMY8JOu.s:1875   .debug_str:00000000000005e4 .LASF16
     /tmp/ccMY8JOu.s:1931   .debug_str:0000000000000807 .LASF65
     /tmp/ccMY8JOu.s:1921   .debug_str:00000000000007c7 .LASF67
     /tmp/ccMY8JOu.s:1751   .debug_str:00000000000001b2 .LASF17
     /tmp/ccMY8JOu.s:1899   .debug_str:0000000000000671 .LASF18
     /tmp/ccMY8JOu.s:1733   .debug_str:000000000000011c .LASF19
     /tmp/ccMY8JOu.s:1871   .debug_str:00000000000005c7 .LASF88
     /tmp/ccMY8JOu.s:1771   .debug_str:000000000000024d .LASF52
     /tmp/ccMY8JOu.s:1775   .debug_str:000000000000026a .LASF54
     /tmp/ccMY8JOu.s:1915   .debug_str:00000000000007aa .LASF20
     /tmp/ccMY8JOu.s:1913   .debug_str:0000000000000795 .LASF22
     /tmp/ccMY8JOu.s:1847   .debug_str:0000000000000515 .LASF24
     /tmp/ccMY8JOu.s:1823   .debug_str:000000000000042b .LASF26
     /tmp/ccMY8JOu.s:1835   .debug_str:0000000000000494 .LASF21
     /tmp/ccMY8JOu.s:1837   .debug_str:000000000000049b .LASF23
     /tmp/ccMY8JOu.s:1819   .debug_str:0000000000000410 .LASF25
     /tmp/ccMY8JOu.s:1793   .debug_str:0000000000000330 .LASF27
     /tmp/ccMY8JOu.s:1941   .debug_str:0000000000000855 .LASF28
     /tmp/ccMY8JOu.s:1905   .debug_str:0000000000000753 .LASF29
     /tmp/ccMY8JOu.s:1815   .debug_str:00000000000003f4 .LASF30
     /tmp/ccMY8JOu.s:1821   .debug_str:0000000000000417 .LASF31
     /tmp/ccMY8JOu.s:1805   .debug_str:000000000000039b .LASF32
     /tmp/ccMY8JOu.s:1841   .debug_str:00000000000004d4 .LASF33
     /tmp/ccMY8JOu.s:1955   .debug_str:00000000000008c1 .LASF34
     /tmp/ccMY8JOu.s:1781   .debug_str:0000000000000295 .LASF35
     /tmp/ccMY8JOu.s:1881   .debug_str:0000000000000615 .LASF36
     /tmp/ccMY8JOu.s:1863   .debug_str:000000000000058f .LASF37
     /tmp/ccMY8JOu.s:1865   .debug_str:00000000000005a2 .LASF38
     /tmp/ccMY8JOu.s:1723   .debug_str:00000000000000c7 .LASF39
     /tmp/ccMY8JOu.s:1739   .debug_str:0000000000000143 .LASF40
     /tmp/ccMY8JOu.s:1773   .debug_str:0000000000000258 .LASF41
     /tmp/ccMY8JOu.s:1779   .debug_str:000000000000028f .LASF42
     /tmp/ccMY8JOu.s:1735   .debug_str:0000000000000128 .LASF43
     /tmp/ccMY8JOu.s:1701   .debug_str:0000000000000035 .LASF44
     /tmp/ccMY8JOu.s:1857   .debug_str:0000000000000555 .LASF45
     /tmp/ccMY8JOu.s:1851   .debug_str:0000000000000530 .LASF46
     /tmp/ccMY8JOu.s:1951   .debug_str:0000000000000890 .LASF47
     /tmp/ccMY8JOu.s:1933   .debug_str:000000000000080d .LASF48
     /tmp/ccMY8JOu.s:1943   .debug_str:000000000000085d .LASF49
     /tmp/ccMY8JOu.s:1929   .debug_str:00000000000007fd .LASF50
     /tmp/ccMY8JOu.s:1813   .debug_str:00000000000003de .LASF51
     /tmp/ccMY8JOu.s:1939   .debug_str:0000000000000846 .LASF53
     /tmp/ccMY8JOu.s:1765   .debug_str:0000000000000208 .LASF55
     /tmp/ccMY8JOu.s:1855   .debug_str:0000000000000549 .LASF56
     /tmp/ccMY8JOu.s:1953   .debug_str:00000000000008a8 .LASF57
     /tmp/ccMY8JOu.s:1749   .debug_str:00000000000001a7 .LASF58
     /tmp/ccMY8JOu.s:1761   .debug_str:00000000000001e0 .LASF59
     /tmp/ccMY8JOu.s:1831   .debug_str:0000000000000476 .LASF60
     /tmp/ccMY8JOu.s:1789   .debug_str:00000000000002fb .LASF62
     /tmp/ccMY8JOu.s:1849   .debug_str:000000000000051e .LASF61
     /tmp/ccMY8JOu.s:1741   .debug_str:0000000000000149 .LASF63
     /tmp/ccMY8JOu.s:1809   .debug_str:00000000000003a9 .LASF64
     /tmp/ccMY8JOu.s:1703   .debug_str:0000000000000040 .LASF66
     /tmp/ccMY8JOu.s:1947   .debug_str:0000000000000883 .LASF68
     /tmp/ccMY8JOu.s:1713   .debug_str:000000000000007b .LASF69
     /tmp/ccMY8JOu.s:1707   .debug_str:0000000000000054 .LASF70
GAS LISTING /tmp/ccMY8JOu.s 			page 9


     /tmp/ccMY8JOu.s:1693   .debug_str:0000000000000011 .LASF71
     /tmp/ccMY8JOu.s:1891   .debug_str:0000000000000647 .LASF129
     /tmp/ccMY8JOu.s:1887   .debug_str:0000000000000635 .LASF72
     /tmp/ccMY8JOu.s:1795   .debug_str:0000000000000343 .LASF74
     /tmp/ccMY8JOu.s:1893   .debug_str:000000000000064f .LASF76
     /tmp/ccMY8JOu.s:1859   .debug_str:000000000000056d .LASF78
     /tmp/ccMY8JOu.s:1705   .debug_str:0000000000000048 .LASF73
     /tmp/ccMY8JOu.s:1923   .debug_str:00000000000007d6 .LASF75
     /tmp/ccMY8JOu.s:1803   .debug_str:000000000000038e .LASF77
     /tmp/ccMY8JOu.s:1715   .debug_str:0000000000000081 .LASF79
     /tmp/ccMY8JOu.s:1883   .debug_str:000000000000061c .LASF80
     /tmp/ccMY8JOu.s:1839   .debug_str:00000000000004ae .LASF81
     /tmp/ccMY8JOu.s:1825   .debug_str:0000000000000440 .LASF130
     /tmp/ccMY8JOu.s:1801   .debug_str:0000000000000388 .LASF82
     /tmp/ccMY8JOu.s:1817   .debug_str:00000000000003fc .LASF83
     /tmp/ccMY8JOu.s:1869   .debug_str:00000000000005ba .LASF84
     /tmp/ccMY8JOu.s:1747   .debug_str:000000000000018b .LASF85
     /tmp/ccMY8JOu.s:1895   .debug_str:000000000000065a .LASF86
     /tmp/ccMY8JOu.s:1827   .debug_str:0000000000000445 .LASF87
     /tmp/ccMY8JOu.s:1897   .debug_str:0000000000000669 .LASF89
     /tmp/ccMY8JOu.s:1919   .debug_str:00000000000007c1 .LASF90
     /tmp/ccMY8JOu.s:1785   .debug_str:00000000000002bb .LASF91
     /tmp/ccMY8JOu.s:1725   .debug_str:00000000000000da .LASF92
     /tmp/ccMY8JOu.s:1909   .debug_str:0000000000000771 .LASF93
     /tmp/ccMY8JOu.s:1745   .debug_str:000000000000017e .LASF94
     /tmp/ccMY8JOu.s:1845   .debug_str:0000000000000505 .LASF95
     /tmp/ccMY8JOu.s:1711   .debug_str:000000000000006b .LASF96
     /tmp/ccMY8JOu.s:1945   .debug_str:0000000000000873 .LASF97
     /tmp/ccMY8JOu.s:1697   .debug_str:000000000000001e .LASF98
     /tmp/ccMY8JOu.s:1903   .debug_str:0000000000000742 .LASF99
     /tmp/ccMY8JOu.s:1873   .debug_str:00000000000005d1 .LASF100
     /tmp/ccMY8JOu.s:1691   .debug_str:0000000000000000 .LASF101
     /tmp/ccMY8JOu.s:1769   .debug_str:0000000000000232 .LASF102
     /tmp/ccMY8JOu.s:1695   .debug_str:0000000000000019 .LASF103
     /tmp/ccMY8JOu.s:1949   .debug_str:000000000000088a .LASF104
     /tmp/ccMY8JOu.s:1911   .debug_str:000000000000078d .LASF105
     /tmp/ccMY8JOu.s:1907   .debug_str:0000000000000767 .LASF106
     /tmp/ccMY8JOu.s:1889   .debug_str:000000000000063e .LASF107
     /tmp/ccMY8JOu.s:1935   .debug_str:0000000000000817 .LASF108
     /tmp/ccMY8JOu.s:1709   .debug_str:000000000000005d .LASF109
     /tmp/ccMY8JOu.s:1843   .debug_str:00000000000004e8 .LASF110
     /tmp/ccMY8JOu.s:1729   .debug_str:00000000000000f7 .LASF131
     /tmp/ccMY8JOu.s:1787   .debug_str:00000000000002cf .LASF132
     /tmp/ccMY8JOu.s:1737   .debug_str:000000000000013a .LASF111
     /tmp/ccMY8JOu.s:1731   .debug_str:0000000000000105 .LASF112
     /tmp/ccMY8JOu.s:1721   .debug_str:00000000000000bd .LASF113
     /tmp/ccMY8JOu.s:1799   .debug_str:0000000000000366 .LASF114
     /tmp/ccMY8JOu.s:1867   .debug_str:00000000000005a9 .LASF115
     /tmp/ccMY8JOu.s:1755   .debug_str:00000000000001cd .LASF116
     /tmp/ccMY8JOu.s:1927   .debug_str:00000000000007f6 .LASF117
     /tmp/ccMY8JOu.s:1759   .debug_str:00000000000001db .LASF118
     /tmp/ccMY8JOu.s:10     .text:0000000000000000 .LFB44
     /tmp/ccMY8JOu.s:90     .text:000000000000006c .LFE44
     /tmp/ccMY8JOu.s:1757   .debug_str:00000000000001d6 .LASF119
     /tmp/ccMY8JOu.s:26     .text:0000000000000018 .LBB6
     /tmp/ccMY8JOu.s:38     .text:000000000000001c .LBE6
     /tmp/ccMY8JOu.s:40     .text:000000000000001c .LBB8
GAS LISTING /tmp/ccMY8JOu.s 			page 10


     /tmp/ccMY8JOu.s:52     .text:0000000000000024 .LBE8
     /tmp/ccMY8JOu.s:1667   .debug_loc:0000000000000000 .LLST0
     /tmp/ccMY8JOu.s:67     .text:000000000000003c .LVL3
     /tmp/ccMY8JOu.s:77     .text:0000000000000058 .LVL4
     /tmp/ccMY8JOu.s:1925   .debug_str:00000000000007f1 .LASF120
     /tmp/ccMY8JOu.s:1807   .debug_str:00000000000003a3 .LASF121
     /tmp/ccMY8JOu.s:1937   .debug_str:0000000000000821 .LASF122
     /tmp/ccMY8JOu.s:1917   .debug_str:00000000000007b3 .LASF124
     /tmp/ccMY8JOu.s:1879   .debug_str:0000000000000607 .LASF123
     /tmp/ccMY8JOu.s:1833   .debug_str:000000000000048b .LASF125
     /tmp/ccMY8JOu.s:35     .text:000000000000001c .LVL1
     /tmp/ccMY8JOu.s:49     .text:0000000000000024 .LVL2
     /tmp/ccMY8JOu.s:97     .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP7_threadPFvPvES2_
_ZN7_thread7runningE
_Z8userMainPv
