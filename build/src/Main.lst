GAS LISTING /tmp/cc0LdSNA.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB43:
  11              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** 
  13:src/Main.cpp  **** extern void userMain();
  14:src/Main.cpp  **** extern int thread_create (
  15:src/Main.cpp  ****         _thread::thread_t * handle,
  16:src/Main.cpp  ****         void(*start_routine)(void*),
  17:src/Main.cpp  ****         void* arg
  18:src/Main.cpp  **** );
  19:src/Main.cpp  **** 
  20:src/Main.cpp  **** extern void userMain(void*);
  21:src/Main.cpp  **** 
  22:src/Main.cpp  **** int main(){
  12              		.loc 1 22 11
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  23:src/Main.cpp  **** 
  24:src/Main.cpp  **** 
  25:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  24              		.loc 1 25 5
  25              		.loc 1 25 19 is_stmt 0
  26 0014 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  26      83B70700 
  27              	.LVL0:
  28              	.LBB6:
  29              	.LBB7:
  30              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
GAS LISTING /tmp/cc0LdSNA.s 			page 2


   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
GAS LISTING /tmp/cc0LdSNA.s 			page 3


  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void TrapConsole();
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** private:
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     // supervisor trap handler
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static void handleTrapConsole();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** //    static void syscallHandler();
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** };
  95:src/../h/Riscv.hpp **** 
  96:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  97:src/../h/Riscv.hpp **** {
  98:src/../h/Riscv.hpp ****     uint64 volatile scause;
  99:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 100:src/../h/Riscv.hpp ****     return scause;
 101:src/../h/Riscv.hpp **** }
 102:src/../h/Riscv.hpp **** 
 103:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 104:src/../h/Riscv.hpp **** {
 105:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 109:src/../h/Riscv.hpp **** {
 110:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 111:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 112:src/../h/Riscv.hpp ****     return sepc;
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 116:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/cc0LdSNA.s 			page 4


 117:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 121:src/../h/Riscv.hpp **** {
 122:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 123:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 124:src/../h/Riscv.hpp ****     return stvec;
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 128:src/../h/Riscv.hpp **** {
 129:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  31              		.loc 2 129 5 is_stmt 1
  32              		.loc 2 129 69 is_stmt 0
  33              	#APP
  34              	# 129 "src/../h/Riscv.hpp" 1
 130              	}
  35              		csrw stvec, a5
  36              	# 0 "" 2
  37              	.LVL1:
  38              	#NO_APP
  39              	.LBE7:
  40              	.LBE6:
  26:src/Main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPIE);
  41              		.loc 1 26 5 is_stmt 1
  42              	.LBB8:
  43              	.LBB9:
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 133:src/../h/Riscv.hpp **** {
 134:src/../h/Riscv.hpp ****     uint64 volatile stval;
 135:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 136:src/../h/Riscv.hpp ****     return stval;
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 140:src/../h/Riscv.hpp **** {
 141:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 145:src/../h/Riscv.hpp **** {
 146:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 150:src/../h/Riscv.hpp **** {
 151:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 152:src/../h/Riscv.hpp **** }
 153:src/../h/Riscv.hpp **** 
 154:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 155:src/../h/Riscv.hpp **** {
 156:src/../h/Riscv.hpp ****     uint64 volatile sip;
 157:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 158:src/../h/Riscv.hpp ****     return sip;
 159:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc0LdSNA.s 			page 5


 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 162:src/../h/Riscv.hpp **** {
 163:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 164:src/../h/Riscv.hpp **** }
 165:src/../h/Riscv.hpp **** 
 166:src/../h/Riscv.hpp **** //mask set
 167:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/Riscv.hpp **** {
 169:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/Riscv.hpp **** }
 171:src/../h/Riscv.hpp **** 
 172:src/../h/Riscv.hpp **** //mask clear
 173:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  44              		.loc 2 175 5
  45              		.loc 2 175 68 is_stmt 0
  46 0020 93070002 		li	a5,32
  47              	#APP
  48              	# 175 "src/../h/Riscv.hpp" 1
 176              	}
  49              		csrc sstatus, a5
  50              	# 0 "" 2
  51              	.LVL2:
  52              	#NO_APP
  53              	.LBE9:
  54              	.LBE8:
  27:src/Main.cpp  **** 
  28:src/Main.cpp  **** 
  29:src/Main.cpp  **** //    make system thread
  30:src/Main.cpp  ****     _thread* main = (_thread*)MemoryAllocator::kmem_alloc(sizeof(_thread));
  55              		.loc 1 30 5 is_stmt 1
  56              		.loc 1 30 58 is_stmt 0
  57 0028 13050005 		li	a0,80
  58 002c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  58      E7800000 
  59              	.LVL3:
  60 0034 93040500 		mv	s1,a0
  61              	.LVL4:
  31:src/Main.cpp  ****     _thread::running=main;
  62              		.loc 1 31 5 is_stmt 1
  63              		.loc 1 31 21 is_stmt 0
  64 0038 97070000 		la	a5,_ZN7_thread7runningE
  64      83B70700 
  65 0040 23B0A700 		sd	a0,0(a5)
  32:src/Main.cpp  ****     uint64 * stack = (uint64*)MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  66              		.loc 1 32 5 is_stmt 1
  67              		.loc 1 32 58 is_stmt 0
  68 0044 37850000 		li	a0,32768
  69 0048 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  69      E7800000 
  70              	.LVL5:
  71 0050 93050500 		mv	a1,a0
  72              	.LVL6:
  33:src/Main.cpp  ****     main->setStack(stack);
  73              		.loc 1 33 5 is_stmt 1
GAS LISTING /tmp/cc0LdSNA.s 			page 6


  74              		.loc 1 33 19 is_stmt 0
  75 0054 13850400 		mv	a0,s1
  76              	.LVL7:
  77 0058 97000000 		call	_ZN7_thread8setStackEPm@plt
  77      E7800000 
  78              	.LVL8:
  34:src/Main.cpp  ****     __asm__ volatile("ecall");
  79              		.loc 1 34 5 is_stmt 1
  80              		.loc 1 34 30 is_stmt 0
  81              	#APP
  82              	# 34 "src/Main.cpp" 1
  35              	//
  83              		ecall
  84              	# 0 "" 2
  85              	#NO_APP
  86              	.L3:
  36:src/Main.cpp  ****     char c;
  87              		.loc 1 36 5 is_stmt 1
  37:src/Main.cpp  ****     while((c=getc())!=0x31){
  88              		.loc 1 37 5
  89              		.loc 1 37 21
  90              		.loc 1 37 18 is_stmt 0
  91 0064 97000000 		call	_Z4getcv@plt
  91      E7800000 
  92              	.LVL9:
  93              		.loc 1 37 21
  94 006c 93071003 		li	a5,49
  95 0070 6308F500 		beq	a0,a5,.L2
  38:src/Main.cpp  ****         putc(c);
  96              		.loc 1 38 9 is_stmt 1
  97              		.loc 1 38 13 is_stmt 0
  98 0074 97000000 		call	_Z4putcc@plt
  98      E7800000 
  99              	.LVL10:
  37:src/Main.cpp  ****     while((c=getc())!=0x31){
 100              		.loc 1 37 5
 101 007c 6FF09FFE 		j	.L3
 102              	.LVL11:
 103              	.L2:
  39:src/Main.cpp  ****     }
  40:src/Main.cpp  **** 
  41:src/Main.cpp  **** //    make user thread
  42:src/Main.cpp  **** 
  43:src/Main.cpp  **** 
  44:src/Main.cpp  **** //    _thread* idle;
  45:src/Main.cpp  **** //    thread_create(&idle, nullptr, nullptr);
  46:src/Main.cpp  **** //    _thread::running=idle;
  47:src/Main.cpp  **** 
  48:src/Main.cpp  **** //    userMain(nullptr);
  49:src/Main.cpp  **** 
  50:src/Main.cpp  **** 
  51:src/Main.cpp  **** //    _thread* idle;
  52:src/Main.cpp  **** //    if(!thread_create(&idle, nullptr, nullptr)){}
  53:src/Main.cpp  **** //    _thread::running=idle;
  54:src/Main.cpp  **** //
  55:src/Main.cpp  **** //
  56:src/Main.cpp  **** //    userMain(nullptr);
GAS LISTING /tmp/cc0LdSNA.s 			page 7


  57:src/Main.cpp  **** 
  58:src/Main.cpp  **** 
  59:src/Main.cpp  ****     return 0;
 104              		.loc 1 59 5 is_stmt 1
  60:src/Main.cpp  **** }
 105              		.loc 1 60 1 is_stmt 0
 106 0080 13050000 		li	a0,0
 107              	.LVL12:
 108 0084 83308101 		ld	ra,24(sp)
 109              		.cfi_restore 1
 110 0088 03340101 		ld	s0,16(sp)
 111              		.cfi_restore 8
 112              		.cfi_def_cfa 2, 32
 113 008c 83348100 		ld	s1,8(sp)
 114              		.cfi_restore 9
 115              	.LVL13:
 116 0090 13010102 		addi	sp,sp,32
 117              		.cfi_def_cfa_offset 0
 118 0094 67800000 		jr	ra
 119              		.cfi_endproc
 120              	.LFE43:
 122              	.Letext0:
 123              		.file 3 "src/../h/../lib/hw.h"
 124              		.file 4 "src/../h/DoublyLinkedList.hpp"
 125              		.file 5 "src/../h/MemoryAllocator.hpp"
 126              		.file 6 "src/../h/_thread.hpp"
 127              		.file 7 "src/../h/syscall_c.h"
GAS LISTING /tmp/cc0LdSNA.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/cc0LdSNA.s:9      .text:0000000000000000 main
     /tmp/cc0LdSNA.s:13     .text:0000000000000000 .L0 
     /tmp/cc0LdSNA.s:14     .text:0000000000000000 .L0 
     /tmp/cc0LdSNA.s:15     .text:0000000000000004 .L0 
     /tmp/cc0LdSNA.s:19     .text:0000000000000010 .L0 
     /tmp/cc0LdSNA.s:20     .text:0000000000000010 .L0 
     /tmp/cc0LdSNA.s:21     .text:0000000000000010 .L0 
     /tmp/cc0LdSNA.s:23     .text:0000000000000014 .L0 
     /tmp/cc0LdSNA.s:25     .text:0000000000000014 .L0 
     /tmp/cc0LdSNA.s:26     .text:0000000000000014 .L0 
     /tmp/cc0LdSNA.s:32     .text:000000000000001c .L0 
  src/../h/Riscv.hpp:129    .text:000000000000001c .L0 
     /tmp/cc0LdSNA.s:44     .text:0000000000000020 .L0 
     /tmp/cc0LdSNA.s:45     .text:0000000000000020 .L0 
     /tmp/cc0LdSNA.s:46     .text:0000000000000020 .L0 
     /tmp/cc0LdSNA.s:56     .text:0000000000000028 .L0 
     /tmp/cc0LdSNA.s:57     .text:0000000000000028 .L0 
     /tmp/cc0LdSNA.s:63     .text:0000000000000038 .L0 
     /tmp/cc0LdSNA.s:64     .text:0000000000000038 .L0 
     /tmp/cc0LdSNA.s:67     .text:0000000000000044 .L0 
     /tmp/cc0LdSNA.s:68     .text:0000000000000044 .L0 
     /tmp/cc0LdSNA.s:74     .text:0000000000000054 .L0 
     /tmp/cc0LdSNA.s:75     .text:0000000000000054 .L0 
     /tmp/cc0LdSNA.s:80     .text:0000000000000060 .L0 
        src/Main.cpp:34     .text:0000000000000060 .L0 
     /tmp/cc0LdSNA.s:88     .text:0000000000000064 .L0 
     /tmp/cc0LdSNA.s:89     .text:0000000000000064 .L0 
     /tmp/cc0LdSNA.s:90     .text:0000000000000064 .L0 
     /tmp/cc0LdSNA.s:91     .text:0000000000000064 .L0 
     /tmp/cc0LdSNA.s:94     .text:000000000000006c .L0 
     /tmp/cc0LdSNA.s:97     .text:0000000000000074 .L0 
     /tmp/cc0LdSNA.s:98     .text:0000000000000074 .L0 
     /tmp/cc0LdSNA.s:101    .text:000000000000007c .L0 
     /tmp/cc0LdSNA.s:105    .text:0000000000000080 .L0 
     /tmp/cc0LdSNA.s:106    .text:0000000000000080 .L0 
     /tmp/cc0LdSNA.s:109    .text:0000000000000088 .L0 
     /tmp/cc0LdSNA.s:111    .text:000000000000008c .L0 
     /tmp/cc0LdSNA.s:112    .text:000000000000008c .L0 
     /tmp/cc0LdSNA.s:114    .text:0000000000000090 .L0 
     /tmp/cc0LdSNA.s:117    .text:0000000000000094 .L0 
     /tmp/cc0LdSNA.s:119    .text:0000000000000098 .L0 
     /tmp/cc0LdSNA.s:128    .text:0000000000000098 .L0 
     /tmp/cc0LdSNA.s:26     .text:0000000000000014 .L0 
     /tmp/cc0LdSNA.s:64     .text:0000000000000038 .L0 
     /tmp/cc0LdSNA.s:103    .text:0000000000000080 .L2
     /tmp/cc0LdSNA.s:86     .text:0000000000000064 .L3
     /tmp/cc0LdSNA.s:1271   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc0LdSNA.s:2427   .debug_str:0000000000000812 .LASF156
     /tmp/cc0LdSNA.s:2395   .debug_str:000000000000076e .LASF157
     /tmp/cc0LdSNA.s:2317   .debug_str:000000000000046f .LASF158
     /tmp/cc0LdSNA.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc0LdSNA.s:122    .text:0000000000000098 .Letext0
     /tmp/cc0LdSNA.s:2171   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc0LdSNA.s:2267   .debug_str:00000000000002ef .LASF0
     /tmp/cc0LdSNA.s:2299   .debug_str:0000000000000418 .LASF1
GAS LISTING /tmp/cc0LdSNA.s 			page 9


     /tmp/cc0LdSNA.s:2371   .debug_str:00000000000006ad .LASF2
     /tmp/cc0LdSNA.s:2381   .debug_str:0000000000000706 .LASF4
     /tmp/cc0LdSNA.s:2281   .debug_str:000000000000034d .LASF3
     /tmp/cc0LdSNA.s:2181   .debug_str:000000000000003a .LASF5
     /tmp/cc0LdSNA.s:2339   .debug_str:0000000000000549 .LASF6
     /tmp/cc0LdSNA.s:2291   .debug_str:00000000000003dd .LASF7
     /tmp/cc0LdSNA.s:2253   .debug_str:0000000000000265 .LASF8
     /tmp/cc0LdSNA.s:2257   .debug_str:0000000000000291 .LASF9
     /tmp/cc0LdSNA.s:2209   .debug_str:0000000000000104 .LASF10
     /tmp/cc0LdSNA.s:2247   .debug_str:0000000000000248 .LASF11
     /tmp/cc0LdSNA.s:2219   .debug_str:0000000000000141 .LASF12
     /tmp/cc0LdSNA.s:2207   .debug_str:00000000000000f4 .LASF13
     /tmp/cc0LdSNA.s:2403   .debug_str:0000000000000794 .LASF14
     /tmp/cc0LdSNA.s:2235   .debug_str:00000000000001c2 .LASF15
     /tmp/cc0LdSNA.s:2393   .debug_str:0000000000000758 .LASF16
     /tmp/cc0LdSNA.s:2463   .debug_str:00000000000009cb .LASF62
     /tmp/cc0LdSNA.s:2449   .debug_str:000000000000097d .LASF90
     /tmp/cc0LdSNA.s:2243   .debug_str:000000000000021b .LASF17
     /tmp/cc0LdSNA.s:2425   .debug_str:0000000000000805 .LASF18
     /tmp/cc0LdSNA.s:2225   .debug_str:0000000000000176 .LASF19
     /tmp/cc0LdSNA.s:2261   .debug_str:00000000000002ba .LASF52
     /tmp/cc0LdSNA.s:2265   .debug_str:00000000000002d7 .LASF54
     /tmp/cc0LdSNA.s:2443   .debug_str:000000000000094e .LASF20
     /tmp/cc0LdSNA.s:2441   .debug_str:0000000000000939 .LASF22
     /tmp/cc0LdSNA.s:2365   .debug_str:0000000000000687 .LASF24
     /tmp/cc0LdSNA.s:2331   .debug_str:0000000000000501 .LASF26
     /tmp/cc0LdSNA.s:2349   .debug_str:00000000000005dd .LASF21
     /tmp/cc0LdSNA.s:2351   .debug_str:00000000000005e4 .LASF23
     /tmp/cc0LdSNA.s:2327   .debug_str:00000000000004e6 .LASF25
     /tmp/cc0LdSNA.s:2293   .debug_str:00000000000003f0 .LASF27
     /tmp/cc0LdSNA.s:2473   .debug_str:0000000000000a18 .LASF28
     /tmp/cc0LdSNA.s:2431   .debug_str:00000000000008ee .LASF29
     /tmp/cc0LdSNA.s:2323   .debug_str:00000000000004d9 .LASF30
     /tmp/cc0LdSNA.s:2329   .debug_str:00000000000004ed .LASF31
     /tmp/cc0LdSNA.s:2305   .debug_str:000000000000043e .LASF32
     /tmp/cc0LdSNA.s:2355   .debug_str:000000000000061d .LASF33
     /tmp/cc0LdSNA.s:2493   .debug_str:0000000000000aa7 .LASF34
     /tmp/cc0LdSNA.s:2273   .debug_str:0000000000000307 .LASF35
     /tmp/cc0LdSNA.s:2399   .debug_str:0000000000000780 .LASF36
     /tmp/cc0LdSNA.s:2383   .debug_str:000000000000070d .LASF37
     /tmp/cc0LdSNA.s:2385   .debug_str:0000000000000720 .LASF38
     /tmp/cc0LdSNA.s:2213   .debug_str:0000000000000118 .LASF39
     /tmp/cc0LdSNA.s:2231   .debug_str:000000000000019d .LASF40
     /tmp/cc0LdSNA.s:2263   .debug_str:00000000000002c5 .LASF41
     /tmp/cc0LdSNA.s:2271   .debug_str:0000000000000301 .LASF42
     /tmp/cc0LdSNA.s:2227   .debug_str:0000000000000182 .LASF43
     /tmp/cc0LdSNA.s:2183   .debug_str:0000000000000041 .LASF44
     /tmp/cc0LdSNA.s:2377   .debug_str:00000000000006d1 .LASF45
     /tmp/cc0LdSNA.s:2369   .debug_str:00000000000006a2 .LASF46
     /tmp/cc0LdSNA.s:2487   .debug_str:0000000000000a65 .LASF47
     /tmp/cc0LdSNA.s:2465   .debug_str:00000000000009d1 .LASF48
     /tmp/cc0LdSNA.s:2477   .debug_str:0000000000000a2c .LASF49
     /tmp/cc0LdSNA.s:2461   .debug_str:00000000000009c1 .LASF50
     /tmp/cc0LdSNA.s:2319   .debug_str:000000000000049f .LASF51
     /tmp/cc0LdSNA.s:2471   .debug_str:0000000000000a09 .LASF53
     /tmp/cc0LdSNA.s:2255   .debug_str:0000000000000275 .LASF55
     /tmp/cc0LdSNA.s:2373   .debug_str:00000000000006bb .LASF56
GAS LISTING /tmp/cc0LdSNA.s 			page 10


     /tmp/cc0LdSNA.s:2489   .debug_str:0000000000000a7d .LASF57
     /tmp/cc0LdSNA.s:2341   .debug_str:000000000000055c .LASF58
     /tmp/cc0LdSNA.s:2289   .debug_str:00000000000003bb .LASF60
     /tmp/cc0LdSNA.s:2367   .debug_str:0000000000000690 .LASF59
     /tmp/cc0LdSNA.s:2233   .debug_str:00000000000001a3 .LASF61
     /tmp/cc0LdSNA.s:2469   .debug_str:00000000000009e5 .LASF63
     /tmp/cc0LdSNA.s:2459   .debug_str:00000000000009bc .LASF138
     /tmp/cc0LdSNA.s:2297   .debug_str:0000000000000413 .LASF64
     /tmp/cc0LdSNA.s:2211   .debug_str:0000000000000113 .LASF65
     /tmp/cc0LdSNA.s:2189   .debug_str:000000000000006e .LASF66
     /tmp/cc0LdSNA.s:2279   .debug_str:000000000000032b .LASF140
     /tmp/cc0LdSNA.s:2397   .debug_str:000000000000077b .LASF67
     /tmp/cc0LdSNA.s:2325   .debug_str:00000000000004e1 .LASF68
     /tmp/cc0LdSNA.s:2491   .debug_str:0000000000000a96 .LASF69
     /tmp/cc0LdSNA.s:2379   .debug_str:00000000000006e9 .LASF72
     /tmp/cc0LdSNA.s:2245   .debug_str:0000000000000227 .LASF70
     /tmp/cc0LdSNA.s:2375   .debug_str:00000000000006c7 .LASF71
     /tmp/cc0LdSNA.s:2361   .debug_str:0000000000000656 .LASF73
     /tmp/cc0LdSNA.s:2337   .debug_str:0000000000000539 .LASF74
     /tmp/cc0LdSNA.s:2475   .debug_str:0000000000000a20 .LASF75
     /tmp/cc0LdSNA.s:2321   .debug_str:00000000000004b5 .LASF76
     /tmp/cc0LdSNA.s:2409   .debug_str:00000000000007ba .LASF77
     /tmp/cc0LdSNA.s:2201   .debug_str:00000000000000ae .LASF78
     /tmp/cc0LdSNA.s:2445   .debug_str:0000000000000957 .LASF79
     /tmp/cc0LdSNA.s:2237   .debug_str:00000000000001d8 .LASF80
     /tmp/cc0LdSNA.s:2277   .debug_str:0000000000000321 .LASF81
     /tmp/cc0LdSNA.s:2345   .debug_str:000000000000058c .LASF82
     /tmp/cc0LdSNA.s:2421   .debug_str:00000000000007f5 .LASF105
     /tmp/cc0LdSNA.s:2287   .debug_str:000000000000039f .LASF83
     /tmp/cc0LdSNA.s:2447   .debug_str:0000000000000961 .LASF84
     /tmp/cc0LdSNA.s:2187   .debug_str:0000000000000055 .LASF85
     /tmp/cc0LdSNA.s:2215   .debug_str:000000000000012b .LASF86
     /tmp/cc0LdSNA.s:2435   .debug_str:000000000000090c .LASF87
     /tmp/cc0LdSNA.s:2359   .debug_str:000000000000064e .LASF88
     /tmp/cc0LdSNA.s:2191   .debug_str:0000000000000073 .LASF89
     /tmp/cc0LdSNA.s:2481   .debug_str:0000000000000a52 .LASF91
     /tmp/cc0LdSNA.s:2203   .debug_str:00000000000000d1 .LASF92
     /tmp/cc0LdSNA.s:2195   .debug_str:0000000000000087 .LASF93
     /tmp/cc0LdSNA.s:2311   .debug_str:0000000000000455 .LASF94
     /tmp/cc0LdSNA.s:2413   .debug_str:00000000000007ce .LASF159
     /tmp/cc0LdSNA.s:2407   .debug_str:00000000000007b1 .LASF95
     /tmp/cc0LdSNA.s:2295   .debug_str:0000000000000403 .LASF96
     /tmp/cc0LdSNA.s:2415   .debug_str:00000000000007d6 .LASF97
     /tmp/cc0LdSNA.s:2343   .debug_str:0000000000000571 .LASF98
     /tmp/cc0LdSNA.s:2193   .debug_str:000000000000007b .LASF99
     /tmp/cc0LdSNA.s:2451   .debug_str:000000000000098c .LASF100
     /tmp/cc0LdSNA.s:2303   .debug_str:0000000000000431 .LASF101
     /tmp/cc0LdSNA.s:2205   .debug_str:00000000000000d7 .LASF102
     /tmp/cc0LdSNA.s:2401   .debug_str:0000000000000787 .LASF103
     /tmp/cc0LdSNA.s:2353   .debug_str:00000000000005f7 .LASF104
     /tmp/cc0LdSNA.s:2333   .debug_str:0000000000000516 .LASF106
     /tmp/cc0LdSNA.s:2301   .debug_str:000000000000042b .LASF107
     /tmp/cc0LdSNA.s:2175   .debug_str:0000000000000011 .LASF108
     /tmp/cc0LdSNA.s:2483   .debug_str:0000000000000a59 .LASF109
     /tmp/cc0LdSNA.s:2347   .debug_str:00000000000005c9 .LASF110
     /tmp/cc0LdSNA.s:2309   .debug_str:000000000000044c .LASF111
     /tmp/cc0LdSNA.s:2429   .debug_str:00000000000008d6 .LASF112
GAS LISTING /tmp/cc0LdSNA.s 			page 11


     /tmp/cc0LdSNA.s:2389   .debug_str:0000000000000738 .LASF113
     /tmp/cc0LdSNA.s:2239   .debug_str:00000000000001fa .LASF114
     /tmp/cc0LdSNA.s:2419   .debug_str:00000000000007e6 .LASF115
     /tmp/cc0LdSNA.s:2335   .debug_str:000000000000051b .LASF116
     /tmp/cc0LdSNA.s:2423   .debug_str:00000000000007fd .LASF160
     /tmp/cc0LdSNA.s:2275   .debug_str:000000000000031b .LASF117
     /tmp/cc0LdSNA.s:2283   .debug_str:000000000000035f .LASF118
     /tmp/cc0LdSNA.s:2217   .debug_str:0000000000000134 .LASF119
     /tmp/cc0LdSNA.s:2437   .debug_str:0000000000000915 .LASF120
     /tmp/cc0LdSNA.s:2313   .debug_str:000000000000045d .LASF121
     /tmp/cc0LdSNA.s:2363   .debug_str:0000000000000677 .LASF122
     /tmp/cc0LdSNA.s:2199   .debug_str:000000000000009e .LASF123
     /tmp/cc0LdSNA.s:2479   .debug_str:0000000000000a42 .LASF124
     /tmp/cc0LdSNA.s:2179   .debug_str:000000000000002a .LASF125
     /tmp/cc0LdSNA.s:2405   .debug_str:00000000000007a0 .LASF126
     /tmp/cc0LdSNA.s:2391   .debug_str:0000000000000745 .LASF127
     /tmp/cc0LdSNA.s:2173   .debug_str:0000000000000000 .LASF128
     /tmp/cc0LdSNA.s:2259   .debug_str:000000000000029f .LASF129
     /tmp/cc0LdSNA.s:2177   .debug_str:0000000000000025 .LASF130
     /tmp/cc0LdSNA.s:2485   .debug_str:0000000000000a5f .LASF131
     /tmp/cc0LdSNA.s:2439   .debug_str:0000000000000931 .LASF132
     /tmp/cc0LdSNA.s:2433   .debug_str:0000000000000902 .LASF133
     /tmp/cc0LdSNA.s:2411   .debug_str:00000000000007c5 .LASF134
     /tmp/cc0LdSNA.s:2467   .debug_str:00000000000009db .LASF135
     /tmp/cc0LdSNA.s:2197   .debug_str:0000000000000090 .LASF136
     /tmp/cc0LdSNA.s:2357   .debug_str:0000000000000631 .LASF137
     /tmp/cc0LdSNA.s:2221   .debug_str:0000000000000151 .LASF139
     /tmp/cc0LdSNA.s:2285   .debug_str:0000000000000373 .LASF141
     /tmp/cc0LdSNA.s:2229   .debug_str:0000000000000194 .LASF142
     /tmp/cc0LdSNA.s:2223   .debug_str:000000000000015f .LASF143
     /tmp/cc0LdSNA.s:2387   .debug_str:0000000000000727 .LASF144
     /tmp/cc0LdSNA.s:2249   .debug_str:0000000000000257 .LASF145
     /tmp/cc0LdSNA.s:2457   .debug_str:00000000000009b5 .LASF146
     /tmp/cc0LdSNA.s:2241   .debug_str:0000000000000216 .LASF147
     /tmp/cc0LdSNA.s:2251   .debug_str:0000000000000260 .LASF148
     /tmp/cc0LdSNA.s:10     .text:0000000000000000 .LFB43
     /tmp/cc0LdSNA.s:120    .text:0000000000000098 .LFE43
     /tmp/cc0LdSNA.s:2120   .debug_loc:0000000000000000 .LLST0
     /tmp/cc0LdSNA.s:2127   .debug_loc:0000000000000023 .LLST1
     /tmp/cc0LdSNA.s:2138   .debug_loc:0000000000000059 .LLST2
     /tmp/cc0LdSNA.s:28     .text:000000000000001c .LBB6
     /tmp/cc0LdSNA.s:40     .text:0000000000000020 .LBE6
     /tmp/cc0LdSNA.s:42     .text:0000000000000020 .LBB8
     /tmp/cc0LdSNA.s:54     .text:0000000000000028 .LBE8
     /tmp/cc0LdSNA.s:2149   .debug_loc:000000000000008f .LLST3
     /tmp/cc0LdSNA.s:59     .text:0000000000000034 .LVL3
     /tmp/cc0LdSNA.s:70     .text:0000000000000050 .LVL5
     /tmp/cc0LdSNA.s:78     .text:0000000000000060 .LVL8
     /tmp/cc0LdSNA.s:92     .text:000000000000006c .LVL9
     /tmp/cc0LdSNA.s:99     .text:000000000000007c .LVL10
     /tmp/cc0LdSNA.s:2417   .debug_str:00000000000007e1 .LASF149
     /tmp/cc0LdSNA.s:2453   .debug_str:00000000000009a7 .LASF150
     /tmp/cc0LdSNA.s:2307   .debug_str:0000000000000446 .LASF151
     /tmp/cc0LdSNA.s:2455   .debug_str:00000000000009ac .LASF152
     /tmp/cc0LdSNA.s:2269   .debug_str:00000000000002fc .LASF154
     /tmp/cc0LdSNA.s:2185   .debug_str:000000000000004c .LASF153
     /tmp/cc0LdSNA.s:2315   .debug_str:000000000000046a .LASF155
GAS LISTING /tmp/cc0LdSNA.s 			page 12


     /tmp/cc0LdSNA.s:61     .text:0000000000000038 .LVL4
     /tmp/cc0LdSNA.s:115    .text:0000000000000090 .LVL13
     /tmp/cc0LdSNA.s:72     .text:0000000000000054 .LVL6
     /tmp/cc0LdSNA.s:76     .text:0000000000000058 .LVL7
     /tmp/cc0LdSNA.s:102    .text:0000000000000080 .LVL11
     /tmp/cc0LdSNA.s:107    .text:0000000000000084 .LVL12
     /tmp/cc0LdSNA.s:37     .text:0000000000000020 .LVL1
     /tmp/cc0LdSNA.s:51     .text:0000000000000028 .LVL2
     /tmp/cc0LdSNA.s:129    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN15MemoryAllocator10kmem_allocEm
_ZN7_thread7runningE
_ZN7_thread8setStackEPm
_Z4getcv
_Z4putcc
