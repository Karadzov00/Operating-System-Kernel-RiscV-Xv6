GAS LISTING /tmp/ccdfo8Pk.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 616C6C6F 		.string	"allocated \n"
   9      63617465 
   9      64200A00 
  10 000c 00000000 		.align	3
  11              	.LC1:
  12 0010 616C6C6F 		.string	"allocated 1\n"
  12      63617465 
  12      6420310A 
  12      00
  13 001d 000000   		.align	3
  14              	.LC2:
  15 0020 616C6C6F 		.string	"allocated 2\n"
  15      63617465 
  15      6420320A 
  15      00
  16              		.text
  17              		.align	2
  18              		.globl	main
  20              	main:
  21              	.LFB46:
  22              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** extern void userMain();
  13:src/Main.cpp  **** extern int thread_create (
  14:src/Main.cpp  ****         _thread::thread_t * handle,
  15:src/Main.cpp  ****         void(*start_routine)(void*),
  16:src/Main.cpp  ****         void* arg
  17:src/Main.cpp  **** );
  18:src/Main.cpp  **** 
  19:src/Main.cpp  **** int main(){
  23              		.loc 1 19 11
  24              		.cfi_startproc
  25 0000 130101FC 		addi	sp,sp,-64
  26              		.cfi_def_cfa_offset 64
  27 0004 233C1102 		sd	ra,56(sp)
  28 0008 23388102 		sd	s0,48(sp)
  29 000c 23349102 		sd	s1,40(sp)
  30 0010 23302103 		sd	s2,32(sp)
  31 0014 233C3101 		sd	s3,24(sp)
GAS LISTING /tmp/ccdfo8Pk.s 			page 2


  32 0018 23384101 		sd	s4,16(sp)
  33 001c 23345101 		sd	s5,8(sp)
  34 0020 23306101 		sd	s6,0(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37              		.cfi_offset 9, -24
  38              		.cfi_offset 18, -32
  39              		.cfi_offset 19, -40
  40              		.cfi_offset 20, -48
  41              		.cfi_offset 21, -56
  42              		.cfi_offset 22, -64
  43 0024 13040104 		addi	s0,sp,64
  44              		.cfi_def_cfa 8, 0
  20:src/Main.cpp  **** 
  21:src/Main.cpp  **** 
  22:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  45              		.loc 1 22 5
  46              		.loc 1 22 19 is_stmt 0
  47 0028 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  47      83B70700 
  48              	.LVL0:
  49              	.LBB4:
  50              	.LBB5:
  51              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
GAS LISTING /tmp/ccdfo8Pk.s 			page 3


  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
GAS LISTING /tmp/ccdfo8Pk.s 			page 4


  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  52              		.loc 2 125 5 is_stmt 1
  53              		.loc 2 125 69 is_stmt 0
  54              	#APP
  55              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
  56              		csrw stvec, a5
  57              	# 0 "" 2
  58              	.LVL1:
  59              	#NO_APP
  60              	.LBE5:
  61              	.LBE4:
  23:src/Main.cpp  **** 
  24:src/Main.cpp  **** //    _thread* threads[3];
  25:src/Main.cpp  **** //
  26:src/Main.cpp  **** //    if(!thread_create(&threads[0], nullptr, nullptr)){
  27:src/Main.cpp  **** //        printString("thread created");
  28:src/Main.cpp  **** //    }
  29:src/Main.cpp  **** //
  30:src/Main.cpp  **** //    _thread::running=threads[0];
  31:src/Main.cpp  **** //
  32:src/Main.cpp  **** //    if(!thread_create(&threads[1], workerBodyA, nullptr)){
  33:src/Main.cpp  **** //        printString("thread created \n");
GAS LISTING /tmp/ccdfo8Pk.s 			page 5


  34:src/Main.cpp  **** //    }
  35:src/Main.cpp  **** //
  36:src/Main.cpp  **** //
  37:src/Main.cpp  **** //    if(!thread_create(&threads[2], workerBodyB, nullptr)){
  38:src/Main.cpp  **** //        printString("thread created \n");
  39:src/Main.cpp  **** //    }
  40:src/Main.cpp  **** //
  41:src/Main.cpp  **** //
  42:src/Main.cpp  **** //    while(!(threads[1]->isFinished() && threads[2]->isFinished())){
  43:src/Main.cpp  **** //        thread_dispatch();
  44:src/Main.cpp  **** //    }
  45:src/Main.cpp  **** //
  46:src/Main.cpp  **** //
  47:src/Main.cpp  **** //    printString("finished \n");
  48:src/Main.cpp  **** 
  49:src/Main.cpp  **** //    _thread* idle;
  50:src/Main.cpp  **** //    if(!thread_create(&idle, nullptr, nullptr)){}
  51:src/Main.cpp  **** //    _thread::running=idle;
  52:src/Main.cpp  **** 
  53:src/Main.cpp  ****     uint64* stack =(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  62              		.loc 1 53 5 is_stmt 1
  63              		.loc 1 53 39 is_stmt 0
  64 0034 37850000 		li	a0,32768
  65 0038 97000000 		call	_Z9mem_allocm@plt
  65      E7800000 
  66              	.LVL2:
  67 0040 930A0500 		mv	s5,a0
  68              	.LVL3:
  54:src/Main.cpp  ****     uint64* stack1 =(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  69              		.loc 1 54 5 is_stmt 1
  70              		.loc 1 54 40 is_stmt 0
  71 0044 37850000 		li	a0,32768
  72              	.LVL4:
  73 0048 97000000 		call	_Z9mem_allocm@plt
  73      E7800000 
  74              	.LVL5:
  75 0050 130A0500 		mv	s4,a0
  76              	.LVL6:
  55:src/Main.cpp  ****     uint64* stack2=(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  77              		.loc 1 55 5 is_stmt 1
  78              		.loc 1 55 39 is_stmt 0
  79 0054 37850000 		li	a0,32768
  80              	.LVL7:
  81 0058 97000000 		call	_Z9mem_allocm@plt
  81      E7800000 
  82              	.LVL8:
  83 0060 93090500 		mv	s3,a0
  84              	.LVL9:
  56:src/Main.cpp  ****     void* addr1 = mem_alloc(1000);
  85              		.loc 1 56 5 is_stmt 1
  86              		.loc 1 56 28 is_stmt 0
  87 0064 1305803E 		li	a0,1000
  88              	.LVL10:
  89 0068 97000000 		call	_Z9mem_allocm@plt
  89      E7800000 
  90              	.LVL11:
  91 0070 13090500 		mv	s2,a0
GAS LISTING /tmp/ccdfo8Pk.s 			page 6


  92              	.LVL12:
  57:src/Main.cpp  ****     void* addr2 = mem_alloc(5000);
  93              		.loc 1 57 5 is_stmt 1
  94              		.loc 1 57 28 is_stmt 0
  95 0074 37150000 		li	a0,4096
  96              	.LVL13:
  97 0078 13058538 		addi	a0,a0,904
  98 007c 97000000 		call	_Z9mem_allocm@plt
  98      E7800000 
  99              	.LVL14:
 100 0084 93040500 		mv	s1,a0
 101              	.LVL15:
  58:src/Main.cpp  ****     void* addr3 = mem_alloc(2000);
 102              		.loc 1 58 5 is_stmt 1
 103              		.loc 1 58 28 is_stmt 0
 104 0088 1305007D 		li	a0,2000
 105 008c 97000000 		call	_Z9mem_allocm@plt
 105      E7800000 
 106              	.LVL16:
 107 0094 130B0500 		mv	s6,a0
 108              	.LVL17:
  59:src/Main.cpp  **** 
  60:src/Main.cpp  ****     if(stack){
 109              		.loc 1 60 5 is_stmt 1
 110 0098 638A0A00 		beqz	s5,.L2
  61:src/Main.cpp  ****         printString("allocated \n");
 111              		.loc 1 61 9
 112              		.loc 1 61 20 is_stmt 0
 113 009c 17050000 		lla	a0,.LC0
 113      13050500 
 114              	.LVL18:
 115 00a4 97000000 		call	_Z11printStringPKc@plt
 115      E7800000 
 116              	.LVL19:
 117              	.L2:
  62:src/Main.cpp  ****     }
  63:src/Main.cpp  ****     if(stack1){
 118              		.loc 1 63 5 is_stmt 1
 119 00ac 630A0A00 		beqz	s4,.L3
  64:src/Main.cpp  ****         printString("allocated 1\n");
 120              		.loc 1 64 9
 121              		.loc 1 64 20 is_stmt 0
 122 00b0 17050000 		lla	a0,.LC1
 122      13050500 
 123 00b8 97000000 		call	_Z11printStringPKc@plt
 123      E7800000 
 124              	.LVL20:
 125              	.L3:
  65:src/Main.cpp  ****     }
  66:src/Main.cpp  ****     if(stack2){
 126              		.loc 1 66 5 is_stmt 1
 127 00c0 638A0900 		beqz	s3,.L4
  67:src/Main.cpp  ****         printString("allocated 2\n");
 128              		.loc 1 67 9
 129              		.loc 1 67 20 is_stmt 0
 130 00c4 17050000 		lla	a0,.LC2
 130      13050500 
GAS LISTING /tmp/ccdfo8Pk.s 			page 7


 131 00cc 97000000 		call	_Z11printStringPKc@plt
 131      E7800000 
 132              	.LVL21:
 133              	.L4:
  68:src/Main.cpp  ****     }
  69:src/Main.cpp  ****     if(addr1){
 134              		.loc 1 69 5 is_stmt 1
 135 00d4 630A0900 		beqz	s2,.L5
  70:src/Main.cpp  ****         printString("allocated 2\n");
 136              		.loc 1 70 9
 137              		.loc 1 70 20 is_stmt 0
 138 00d8 17050000 		lla	a0,.LC2
 138      13050500 
 139 00e0 97000000 		call	_Z11printStringPKc@plt
 139      E7800000 
 140              	.LVL22:
 141              	.L5:
  71:src/Main.cpp  ****     }if(addr2 && addr3){
 142              		.loc 1 71 6 is_stmt 1
 143 00e8 638C0400 		beqz	s1,.L6
 144              		.loc 1 71 15 is_stmt 0 discriminator 1
 145 00ec 630A0B00 		beqz	s6,.L6
  72:src/Main.cpp  ****         printString("allocated 2\n");
 146              		.loc 1 72 9 is_stmt 1
 147              		.loc 1 72 20 is_stmt 0
 148 00f0 17050000 		lla	a0,.LC2
 148      13050500 
 149 00f8 97000000 		call	_Z11printStringPKc@plt
 149      E7800000 
 150              	.LVL23:
 151              	.L6:
  73:src/Main.cpp  ****     }
  74:src/Main.cpp  **** //    userMain();
  75:src/Main.cpp  **** 
  76:src/Main.cpp  ****     return 0;
 152              		.loc 1 76 5 is_stmt 1
  77:src/Main.cpp  **** }
 153              		.loc 1 77 1 is_stmt 0
 154 0100 13050000 		li	a0,0
 155 0104 83308103 		ld	ra,56(sp)
 156              		.cfi_restore 1
 157 0108 03340103 		ld	s0,48(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 64
 160 010c 83348102 		ld	s1,40(sp)
 161              		.cfi_restore 9
 162              	.LVL24:
 163 0110 03390102 		ld	s2,32(sp)
 164              		.cfi_restore 18
 165              	.LVL25:
 166 0114 83398101 		ld	s3,24(sp)
 167              		.cfi_restore 19
 168              	.LVL26:
 169 0118 033A0101 		ld	s4,16(sp)
 170              		.cfi_restore 20
 171              	.LVL27:
 172 011c 833A8100 		ld	s5,8(sp)
GAS LISTING /tmp/ccdfo8Pk.s 			page 8


 173              		.cfi_restore 21
 174              	.LVL28:
 175 0120 033B0100 		ld	s6,0(sp)
 176              		.cfi_restore 22
 177              	.LVL29:
 178 0124 13010104 		addi	sp,sp,64
 179              		.cfi_def_cfa_offset 0
 180 0128 67800000 		jr	ra
 181              		.cfi_endproc
 182              	.LFE46:
 184              	.Letext0:
 185              		.file 3 "src/../h/../lib/hw.h"
 186              		.file 4 "src/../h/syscall_c.h"
 187              		.file 5 "src/../test/printing.hpp"
GAS LISTING /tmp/ccdfo8Pk.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccdfo8Pk.s:20     .text:0000000000000000 main
     /tmp/ccdfo8Pk.s:24     .text:0000000000000000 .L0 
     /tmp/ccdfo8Pk.s:25     .text:0000000000000000 .L0 
     /tmp/ccdfo8Pk.s:26     .text:0000000000000004 .L0 
     /tmp/ccdfo8Pk.s:35     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:36     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:37     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:38     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:39     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:40     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:41     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:42     .text:0000000000000024 .L0 
     /tmp/ccdfo8Pk.s:44     .text:0000000000000028 .L0 
     /tmp/ccdfo8Pk.s:46     .text:0000000000000028 .L0 
     /tmp/ccdfo8Pk.s:47     .text:0000000000000028 .L0 
     /tmp/ccdfo8Pk.s:53     .text:0000000000000030 .L0 
  src/../h/Riscv.hpp:125    .text:0000000000000030 .L0 
     /tmp/ccdfo8Pk.s:63     .text:0000000000000034 .L0 
     /tmp/ccdfo8Pk.s:64     .text:0000000000000034 .L0 
     /tmp/ccdfo8Pk.s:70     .text:0000000000000044 .L0 
     /tmp/ccdfo8Pk.s:71     .text:0000000000000044 .L0 
     /tmp/ccdfo8Pk.s:78     .text:0000000000000054 .L0 
     /tmp/ccdfo8Pk.s:79     .text:0000000000000054 .L0 
     /tmp/ccdfo8Pk.s:86     .text:0000000000000064 .L0 
     /tmp/ccdfo8Pk.s:87     .text:0000000000000064 .L0 
     /tmp/ccdfo8Pk.s:94     .text:0000000000000074 .L0 
     /tmp/ccdfo8Pk.s:95     .text:0000000000000074 .L0 
     /tmp/ccdfo8Pk.s:103    .text:0000000000000088 .L0 
     /tmp/ccdfo8Pk.s:104    .text:0000000000000088 .L0 
     /tmp/ccdfo8Pk.s:110    .text:0000000000000098 .L0 
     /tmp/ccdfo8Pk.s:112    .text:000000000000009c .L0 
     /tmp/ccdfo8Pk.s:113    .text:000000000000009c .L0 
     /tmp/ccdfo8Pk.s:119    .text:00000000000000ac .L0 
     /tmp/ccdfo8Pk.s:121    .text:00000000000000b0 .L0 
     /tmp/ccdfo8Pk.s:122    .text:00000000000000b0 .L0 
     /tmp/ccdfo8Pk.s:127    .text:00000000000000c0 .L0 
     /tmp/ccdfo8Pk.s:129    .text:00000000000000c4 .L0 
     /tmp/ccdfo8Pk.s:130    .text:00000000000000c4 .L0 
     /tmp/ccdfo8Pk.s:135    .text:00000000000000d4 .L0 
     /tmp/ccdfo8Pk.s:137    .text:00000000000000d8 .L0 
     /tmp/ccdfo8Pk.s:138    .text:00000000000000d8 .L0 
     /tmp/ccdfo8Pk.s:143    .text:00000000000000e8 .L0 
     /tmp/ccdfo8Pk.s:145    .text:00000000000000ec .L0 
     /tmp/ccdfo8Pk.s:147    .text:00000000000000f0 .L0 
     /tmp/ccdfo8Pk.s:148    .text:00000000000000f0 .L0 
     /tmp/ccdfo8Pk.s:153    .text:0000000000000100 .L0 
     /tmp/ccdfo8Pk.s:154    .text:0000000000000100 .L0 
     /tmp/ccdfo8Pk.s:156    .text:0000000000000108 .L0 
     /tmp/ccdfo8Pk.s:158    .text:000000000000010c .L0 
     /tmp/ccdfo8Pk.s:159    .text:000000000000010c .L0 
     /tmp/ccdfo8Pk.s:161    .text:0000000000000110 .L0 
     /tmp/ccdfo8Pk.s:164    .text:0000000000000114 .L0 
     /tmp/ccdfo8Pk.s:167    .text:0000000000000118 .L0 
     /tmp/ccdfo8Pk.s:170    .text:000000000000011c .L0 
     /tmp/ccdfo8Pk.s:173    .text:0000000000000120 .L0 
GAS LISTING /tmp/ccdfo8Pk.s 			page 10


     /tmp/ccdfo8Pk.s:176    .text:0000000000000124 .L0 
     /tmp/ccdfo8Pk.s:179    .text:0000000000000128 .L0 
     /tmp/ccdfo8Pk.s:181    .text:000000000000012c .L0 
     /tmp/ccdfo8Pk.s:188    .text:000000000000012c .L0 
     /tmp/ccdfo8Pk.s:47     .text:0000000000000028 .L0 
     /tmp/ccdfo8Pk.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccdfo8Pk.s:113    .text:000000000000009c .L0 
     /tmp/ccdfo8Pk.s:11     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccdfo8Pk.s:122    .text:00000000000000b0 .L0 
     /tmp/ccdfo8Pk.s:14     .rodata.str1.8:0000000000000020 .LC2
     /tmp/ccdfo8Pk.s:130    .text:00000000000000c4 .L0 
     /tmp/ccdfo8Pk.s:138    .text:00000000000000d8 .L0 
     /tmp/ccdfo8Pk.s:148    .text:00000000000000f0 .L0 
     /tmp/ccdfo8Pk.s:117    .text:00000000000000ac .L2
     /tmp/ccdfo8Pk.s:125    .text:00000000000000c0 .L3
     /tmp/ccdfo8Pk.s:133    .text:00000000000000d4 .L4
     /tmp/ccdfo8Pk.s:141    .text:00000000000000e8 .L5
     /tmp/ccdfo8Pk.s:151    .text:0000000000000100 .L6
     /tmp/ccdfo8Pk.s:721    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccdfo8Pk.s:1311   .debug_str:0000000000000355 .LASF64
     /tmp/ccdfo8Pk.s:1303   .debug_str:0000000000000322 .LASF65
     /tmp/ccdfo8Pk.s:1261   .debug_str:00000000000001cc .LASF66
     /tmp/ccdfo8Pk.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccdfo8Pk.s:184    .text:000000000000012c .Letext0
     /tmp/ccdfo8Pk.s:1195   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccdfo8Pk.s:1233   .debug_str:0000000000000113 .LASF0
     /tmp/ccdfo8Pk.s:1247   .debug_str:0000000000000194 .LASF1
     /tmp/ccdfo8Pk.s:1291   .debug_str:00000000000002c5 .LASF2
     /tmp/ccdfo8Pk.s:1295   .debug_str:00000000000002eb .LASF4
     /tmp/ccdfo8Pk.s:1239   .debug_str:000000000000013a .LASF3
     /tmp/ccdfo8Pk.s:1197   .debug_str:0000000000000000 .LASF5
     /tmp/ccdfo8Pk.s:1277   .debug_str:000000000000025b .LASF6
     /tmp/ccdfo8Pk.s:1243   .debug_str:000000000000016e .LASF7
     /tmp/ccdfo8Pk.s:1219   .debug_str:0000000000000096 .LASF8
     /tmp/ccdfo8Pk.s:1223   .debug_str:00000000000000c2 .LASF9
     /tmp/ccdfo8Pk.s:1203   .debug_str:0000000000000022 .LASF10
     /tmp/ccdfo8Pk.s:1215   .debug_str:0000000000000082 .LASF11
     /tmp/ccdfo8Pk.s:1207   .debug_str:0000000000000044 .LASF12
     /tmp/ccdfo8Pk.s:1201   .debug_str:0000000000000012 .LASF13
     /tmp/ccdfo8Pk.s:1309   .debug_str:0000000000000349 .LASF14
     /tmp/ccdfo8Pk.s:1213   .debug_str:000000000000006c .LASF15
     /tmp/ccdfo8Pk.s:1301   .debug_str:000000000000030c .LASF16
     /tmp/ccdfo8Pk.s:1323   .debug_str:000000000000045c .LASF67
     /tmp/ccdfo8Pk.s:1227   .debug_str:00000000000000de .LASF49
     /tmp/ccdfo8Pk.s:1231   .debug_str:00000000000000fb .LASF51
     /tmp/ccdfo8Pk.s:1319   .debug_str:0000000000000449 .LASF17
     /tmp/ccdfo8Pk.s:1317   .debug_str:0000000000000434 .LASF19
     /tmp/ccdfo8Pk.s:1287   .debug_str:00000000000002b1 .LASF21
     /tmp/ccdfo8Pk.s:1275   .debug_str:0000000000000246 .LASF23
     /tmp/ccdfo8Pk.s:1281   .debug_str:0000000000000283 .LASF18
     /tmp/ccdfo8Pk.s:1283   .debug_str:000000000000028a .LASF20
     /tmp/ccdfo8Pk.s:1271   .debug_str:000000000000022b .LASF22
     /tmp/ccdfo8Pk.s:1245   .debug_str:0000000000000181 .LASF24
     /tmp/ccdfo8Pk.s:1329   .debug_str:000000000000047b .LASF25
     /tmp/ccdfo8Pk.s:1313   .debug_str:0000000000000419 .LASF26
     /tmp/ccdfo8Pk.s:1267   .debug_str:000000000000021c .LASF27
     /tmp/ccdfo8Pk.s:1273   .debug_str:0000000000000232 .LASF28
GAS LISTING /tmp/ccdfo8Pk.s 			page 11


     /tmp/ccdfo8Pk.s:1249   .debug_str:00000000000001a7 .LASF29
     /tmp/ccdfo8Pk.s:1285   .debug_str:000000000000029d .LASF30
     /tmp/ccdfo8Pk.s:1339   .debug_str:00000000000004c3 .LASF31
     /tmp/ccdfo8Pk.s:1237   .debug_str:0000000000000126 .LASF32
     /tmp/ccdfo8Pk.s:1307   .debug_str:0000000000000342 .LASF33
     /tmp/ccdfo8Pk.s:1297   .debug_str:00000000000002f2 .LASF34
     /tmp/ccdfo8Pk.s:1299   .debug_str:0000000000000305 .LASF35
     /tmp/ccdfo8Pk.s:1205   .debug_str:0000000000000031 .LASF36
     /tmp/ccdfo8Pk.s:1211   .debug_str:0000000000000066 .LASF37
     /tmp/ccdfo8Pk.s:1229   .debug_str:00000000000000e9 .LASF38
     /tmp/ccdfo8Pk.s:1235   .debug_str:0000000000000120 .LASF39
     /tmp/ccdfo8Pk.s:1209   .debug_str:0000000000000054 .LASF40
     /tmp/ccdfo8Pk.s:1199   .debug_str:0000000000000007 .LASF41
     /tmp/ccdfo8Pk.s:1293   .debug_str:00000000000002d3 .LASF42
     /tmp/ccdfo8Pk.s:1289   .debug_str:00000000000002ba .LASF43
     /tmp/ccdfo8Pk.s:1337   .debug_str:00000000000004ab .LASF44
     /tmp/ccdfo8Pk.s:1325   .debug_str:0000000000000462 .LASF45
     /tmp/ccdfo8Pk.s:1331   .debug_str:0000000000000483 .LASF46
     /tmp/ccdfo8Pk.s:1321   .debug_str:0000000000000452 .LASF47
     /tmp/ccdfo8Pk.s:1263   .debug_str:00000000000001fc .LASF48
     /tmp/ccdfo8Pk.s:1327   .debug_str:000000000000046c .LASF50
     /tmp/ccdfo8Pk.s:1221   .debug_str:00000000000000a6 .LASF52
     /tmp/ccdfo8Pk.s:1279   .debug_str:000000000000026e .LASF68
     /tmp/ccdfo8Pk.s:1241   .debug_str:000000000000014c .LASF69
     /tmp/ccdfo8Pk.s:1259   .debug_str:00000000000001c7 .LASF53
     /tmp/ccdfo8Pk.s:1217   .debug_str:0000000000000091 .LASF70
     /tmp/ccdfo8Pk.s:21     .text:0000000000000000 .LFB46
     /tmp/ccdfo8Pk.s:182    .text:000000000000012c .LFE46
     /tmp/ccdfo8Pk.s:1335   .debug_str:00000000000004a5 .LASF54
     /tmp/ccdfo8Pk.s:1120   .debug_loc:0000000000000000 .LLST0
     /tmp/ccdfo8Pk.s:1269   .debug_str:0000000000000224 .LASF55
     /tmp/ccdfo8Pk.s:1131   .debug_loc:0000000000000036 .LLST1
     /tmp/ccdfo8Pk.s:1315   .debug_str:000000000000042d .LASF56
     /tmp/ccdfo8Pk.s:1142   .debug_loc:000000000000006c .LLST2
     /tmp/ccdfo8Pk.s:1253   .debug_str:00000000000001b5 .LASF57
     /tmp/ccdfo8Pk.s:1153   .debug_loc:00000000000000a2 .LLST3
     /tmp/ccdfo8Pk.s:1255   .debug_str:00000000000001bb .LASF58
     /tmp/ccdfo8Pk.s:1164   .debug_loc:00000000000000d8 .LLST4
     /tmp/ccdfo8Pk.s:1257   .debug_str:00000000000001c1 .LASF59
     /tmp/ccdfo8Pk.s:1171   .debug_loc:00000000000000fb .LLST5
     /tmp/ccdfo8Pk.s:49     .text:0000000000000030 .LBB4
     /tmp/ccdfo8Pk.s:61     .text:0000000000000034 .LBE4
     /tmp/ccdfo8Pk.s:66     .text:0000000000000040 .LVL2
     /tmp/ccdfo8Pk.s:74     .text:0000000000000050 .LVL5
     /tmp/ccdfo8Pk.s:82     .text:0000000000000060 .LVL8
     /tmp/ccdfo8Pk.s:90     .text:0000000000000070 .LVL11
     /tmp/ccdfo8Pk.s:99     .text:0000000000000084 .LVL14
     /tmp/ccdfo8Pk.s:106    .text:0000000000000094 .LVL16
     /tmp/ccdfo8Pk.s:116    .text:00000000000000ac .LVL19
     /tmp/ccdfo8Pk.s:124    .text:00000000000000c0 .LVL20
     /tmp/ccdfo8Pk.s:132    .text:00000000000000d4 .LVL21
     /tmp/ccdfo8Pk.s:140    .text:00000000000000e8 .LVL22
     /tmp/ccdfo8Pk.s:150    .text:0000000000000100 .LVL23
     /tmp/ccdfo8Pk.s:1251   .debug_str:00000000000001af .LASF71
     /tmp/ccdfo8Pk.s:1225   .debug_str:00000000000000d0 .LASF60
     /tmp/ccdfo8Pk.s:1265   .debug_str:0000000000000212 .LASF62
     /tmp/ccdfo8Pk.s:1305   .debug_str:000000000000032f .LASF61
GAS LISTING /tmp/ccdfo8Pk.s 			page 12


     /tmp/ccdfo8Pk.s:1333   .debug_str:0000000000000499 .LASF63
     /tmp/ccdfo8Pk.s:68     .text:0000000000000044 .LVL3
     /tmp/ccdfo8Pk.s:72     .text:0000000000000048 .LVL4
     /tmp/ccdfo8Pk.s:174    .text:0000000000000120 .LVL28
     /tmp/ccdfo8Pk.s:76     .text:0000000000000054 .LVL6
     /tmp/ccdfo8Pk.s:80     .text:0000000000000058 .LVL7
     /tmp/ccdfo8Pk.s:171    .text:000000000000011c .LVL27
     /tmp/ccdfo8Pk.s:84     .text:0000000000000064 .LVL9
     /tmp/ccdfo8Pk.s:88     .text:0000000000000068 .LVL10
     /tmp/ccdfo8Pk.s:168    .text:0000000000000118 .LVL26
     /tmp/ccdfo8Pk.s:92     .text:0000000000000074 .LVL12
     /tmp/ccdfo8Pk.s:96     .text:0000000000000078 .LVL13
     /tmp/ccdfo8Pk.s:165    .text:0000000000000114 .LVL25
     /tmp/ccdfo8Pk.s:101    .text:0000000000000088 .LVL15
     /tmp/ccdfo8Pk.s:162    .text:0000000000000110 .LVL24
     /tmp/ccdfo8Pk.s:108    .text:0000000000000098 .LVL17
     /tmp/ccdfo8Pk.s:114    .text:00000000000000a4 .LVL18
     /tmp/ccdfo8Pk.s:177    .text:0000000000000124 .LVL29
     /tmp/ccdfo8Pk.s:189    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z9mem_allocm
_Z11printStringPKc
