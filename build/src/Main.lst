GAS LISTING /tmp/ccLqAU5v.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7syscallP4args
   9              	_Z7syscallP4args:
  10              	.LFB28:
  11              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //
   2:src/../h/syscall_c.h **** // Created by os on 6/19/22.
   3:src/../h/syscall_c.h **** //
   4:src/../h/syscall_c.h **** 
   5:src/../h/syscall_c.h **** #ifndef PROJECT_BASE_V1_1_SYSCALL_C_H
   6:src/../h/syscall_c.h **** #define PROJECT_BASE_V1_1_SYSCALL_C_H
   7:src/../h/syscall_c.h **** 
   8:src/../h/syscall_c.h **** 
   9:src/../h/syscall_c.h **** #include "../h/MemoryAllocator.hpp"
  10:src/../h/syscall_c.h **** 
  11:src/../h/syscall_c.h **** 
  12:src/../h/syscall_c.h **** 
  13:src/../h/syscall_c.h **** //extern "C" void supervisorTrap();
  14:src/../h/syscall_c.h **** 
  15:src/../h/syscall_c.h **** struct args{
  16:src/../h/syscall_c.h ****     uint64 a0;
  17:src/../h/syscall_c.h ****     uint64 a1;
  18:src/../h/syscall_c.h ****     uint64 a2;
  19:src/../h/syscall_c.h ****     uint64 a3;
  20:src/../h/syscall_c.h **** 
  21:src/../h/syscall_c.h **** };
  22:src/../h/syscall_c.h **** 
  23:src/../h/syscall_c.h **** void syscall(args* arg){
  12              		.loc 1 23 24
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  24:src/../h/syscall_c.h ****     //should prepare arguments in registers
  25:src/../h/syscall_c.h ****     //should call interrupt routine with ecall
  26:src/../h/syscall_c.h **** 
  27:src/../h/syscall_c.h **** 
  28:src/../h/syscall_c.h ****     uint64 arg0 = arg->a0;
  21              		.loc 1 28 5
  22              		.loc 1 28 12 is_stmt 0
  23 000c 03360500 		ld	a2,0(a0)
  24              	.LVL1:
  29:src/../h/syscall_c.h ****     uint64 arg1 = arg->a1;
  25              		.loc 1 29 5 is_stmt 1
  26              		.loc 1 29 12 is_stmt 0
  27 0010 83368500 		ld	a3,8(a0)
  28              	.LVL2:
  30:src/../h/syscall_c.h ****     uint64 arg2 = arg->a2;
GAS LISTING /tmp/ccLqAU5v.s 			page 2


  29              		.loc 1 30 5 is_stmt 1
  30              		.loc 1 30 12 is_stmt 0
  31 0014 03370501 		ld	a4,16(a0)
  32              	.LVL3:
  31:src/../h/syscall_c.h ****     uint64 arg3 = arg->a3;
  33              		.loc 1 31 5 is_stmt 1
  34              		.loc 1 31 12 is_stmt 0
  35 0018 83378501 		ld	a5,24(a0)
  36              	.LVL4:
  32:src/../h/syscall_c.h **** 
  33:src/../h/syscall_c.h ****     //lock this section?
  34:src/../h/syscall_c.h ****     __asm__ volatile("mv a0, %0" : : "r" (arg0));
  37              		.loc 1 34 5 is_stmt 1
  38              		.loc 1 34 49 is_stmt 0
  39              	#APP
  40              	# 34 "src/../h/syscall_c.h" 1
  35              	    __asm__ volatile("mv a1, %0" : : "r" (arg1));
  41              		mv a0, a2
  42              	# 0 "" 2
  43              		.loc 1 35 5 is_stmt 1
  44              		.loc 1 35 49 is_stmt 0
  45              	# 35 "src/../h/syscall_c.h" 1
  36              	    __asm__ volatile("mv a2, %0" : : "r" (arg2));
  46              		mv a1, a3
  47              	# 0 "" 2
  48              		.loc 1 36 5 is_stmt 1
  49              		.loc 1 36 49 is_stmt 0
  50              	# 36 "src/../h/syscall_c.h" 1
  37              	    __asm__ volatile("mv a3, %0" : : "r" (arg3));
  51              		mv a2, a4
  52              	# 0 "" 2
  53              		.loc 1 37 5 is_stmt 1
  54              		.loc 1 37 49 is_stmt 0
  55              	# 37 "src/../h/syscall_c.h" 1
  38              	
  39:src/../h/syscall_c.h **** 
  40:src/../h/syscall_c.h **** 
  41:src/../h/syscall_c.h **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  42:src/../h/syscall_c.h ****     __asm__ volatile ("ecall");
  56              		mv a3, a5
  57              	# 0 "" 2
  58              		.loc 1 42 5 is_stmt 1
  59              		.loc 1 42 31 is_stmt 0
  60              	# 42 "src/../h/syscall_c.h" 1
  43              	
  44:src/../h/syscall_c.h **** 
  45:src/../h/syscall_c.h **** }
  61              		ecall
  62              	# 0 "" 2
  63              		.loc 1 45 1
  64              	#NO_APP
  65 0030 03348100 		ld	s0,8(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 16
  68 0034 13010101 		addi	sp,sp,16
  69              		.cfi_def_cfa_offset 0
  70 0038 67800000 		jr	ra
GAS LISTING /tmp/ccLqAU5v.s 			page 3


  71              		.cfi_endproc
  72              	.LFE28:
  74              		.align	2
  75              		.globl	_Z9mem_allocm
  77              	_Z9mem_allocm:
  78              	.LFB29:
  46:src/../h/syscall_c.h **** 
  47:src/../h/syscall_c.h **** void* mem_alloc (size_t size){
  79              		.loc 1 47 30 is_stmt 1
  80              		.cfi_startproc
  81              	.LVL5:
  82 003c 130101FE 		addi	sp,sp,-32
  83              		.cfi_def_cfa_offset 32
  84 0040 233C1100 		sd	ra,24(sp)
  85 0044 23388100 		sd	s0,16(sp)
  86 0048 23349100 		sd	s1,8(sp)
  87              		.cfi_offset 1, -8
  88              		.cfi_offset 8, -16
  89              		.cfi_offset 9, -24
  90 004c 13040102 		addi	s0,sp,32
  91              		.cfi_def_cfa 8, 0
  92 0050 93040500 		mv	s1,a0
  48:src/../h/syscall_c.h ****     //prepares parameters to arguments
  49:src/../h/syscall_c.h ****     //executes system call instruction
  50:src/../h/syscall_c.h ****     args* arg = (args*)MemoryAllocator::kmem_alloc(sizeof(args));
  93              		.loc 1 50 5
  94              		.loc 1 50 51 is_stmt 0
  95 0054 13050002 		li	a0,32
  96              	.LVL6:
  97 0058 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  97      E7800000 
  98              	.LVL7:
  51:src/../h/syscall_c.h ****     arg->a0=0x01;
  99              		.loc 1 51 5 is_stmt 1
 100              		.loc 1 51 12 is_stmt 0
 101 0060 93071000 		li	a5,1
 102 0064 2330F500 		sd	a5,0(a0)
  52:src/../h/syscall_c.h **** 
  53:src/../h/syscall_c.h ****     size_t blocks = size/MEM_BLOCK_SIZE;
 103              		.loc 1 53 5 is_stmt 1
 104              		.loc 1 53 12 is_stmt 0
 105 0068 93D76400 		srli	a5,s1,6
 106              	.LVL8:
  54:src/../h/syscall_c.h ****     if(size%MEM_BLOCK_SIZE!=0)blocks++;
 107              		.loc 1 54 5 is_stmt 1
 108              		.loc 1 54 12 is_stmt 0
 109 006c 93F4F403 		andi	s1,s1,63
 110              	.LVL9:
 111              		.loc 1 54 5
 112 0070 63840400 		beqz	s1,.L4
 113              		.loc 1 54 31 is_stmt 1 discriminator 1
 114              		.loc 1 54 37 is_stmt 0 discriminator 1
 115 0074 93871700 		addi	a5,a5,1
 116              	.LVL10:
 117              	.L4:
  55:src/../h/syscall_c.h ****     arg->a1=blocks;
 118              		.loc 1 55 5 is_stmt 1
GAS LISTING /tmp/ccLqAU5v.s 			page 4


 119              		.loc 1 55 12 is_stmt 0
 120 0078 2334F500 		sd	a5,8(a0)
  56:src/../h/syscall_c.h **** 
  57:src/../h/syscall_c.h ****     syscall(arg);
 121              		.loc 1 57 5 is_stmt 1
 122              		.loc 1 57 12 is_stmt 0
 123 007c 97000000 		call	_Z7syscallP4args
 123      E7800000 
 124              	.LVL11:
  58:src/../h/syscall_c.h **** 
  59:src/../h/syscall_c.h ****     uint64 ret;
 125              		.loc 1 59 5 is_stmt 1
  60:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 126              		.loc 1 60 5
 127              		.loc 1 60 47 is_stmt 0
 128              	#APP
 129              	# 60 "src/../h/syscall_c.h" 1
  61              	
 130              		mv a0, a0
 131              	# 0 "" 2
 132              	.LVL12:
  62:src/../h/syscall_c.h ****     return (void*)ret;
 133              		.loc 1 62 5 is_stmt 1
  63:src/../h/syscall_c.h **** }
 134              		.loc 1 63 1 is_stmt 0
 135              	#NO_APP
 136 0088 83308101 		ld	ra,24(sp)
 137              		.cfi_restore 1
 138 008c 03340101 		ld	s0,16(sp)
 139              		.cfi_restore 8
 140              		.cfi_def_cfa 2, 32
 141 0090 83348100 		ld	s1,8(sp)
 142              		.cfi_restore 9
 143 0094 13010102 		addi	sp,sp,32
 144              		.cfi_def_cfa_offset 0
 145 0098 67800000 		jr	ra
 146              		.cfi_endproc
 147              	.LFE29:
 149              		.align	2
 150              		.globl	_Z8mem_freePv
 152              	_Z8mem_freePv:
 153              	.LFB30:
  64:src/../h/syscall_c.h **** 
  65:src/../h/syscall_c.h **** int mem_free (void* p){
 154              		.loc 1 65 23 is_stmt 1
 155              		.cfi_startproc
 156              	.LVL13:
 157 009c 130101FE 		addi	sp,sp,-32
 158              		.cfi_def_cfa_offset 32
 159 00a0 233C1100 		sd	ra,24(sp)
 160 00a4 23388100 		sd	s0,16(sp)
 161 00a8 23349100 		sd	s1,8(sp)
 162              		.cfi_offset 1, -8
 163              		.cfi_offset 8, -16
 164              		.cfi_offset 9, -24
 165 00ac 13040102 		addi	s0,sp,32
 166              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccLqAU5v.s 			page 5


 167 00b0 93040500 		mv	s1,a0
  66:src/../h/syscall_c.h ****     args* arg = (args*)MemoryAllocator::kmem_alloc(sizeof(args));
 168              		.loc 1 66 5
 169              		.loc 1 66 51 is_stmt 0
 170 00b4 13050002 		li	a0,32
 171              	.LVL14:
 172 00b8 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 172      E7800000 
 173              	.LVL15:
  67:src/../h/syscall_c.h ****     arg->a0=0x02;
 174              		.loc 1 67 5 is_stmt 1
 175              		.loc 1 67 12 is_stmt 0
 176 00c0 13072000 		li	a4,2
 177 00c4 2330E500 		sd	a4,0(a0)
  68:src/../h/syscall_c.h ****     arg->a1=(uint64)p;
 178              		.loc 1 68 5 is_stmt 1
 179              		.loc 1 68 12 is_stmt 0
 180 00c8 23349500 		sd	s1,8(a0)
  69:src/../h/syscall_c.h **** 
  70:src/../h/syscall_c.h ****     syscall(arg);
 181              		.loc 1 70 5 is_stmt 1
 182              		.loc 1 70 12 is_stmt 0
 183 00cc 97000000 		call	_Z7syscallP4args
 183      E7800000 
 184              	.LVL16:
  71:src/../h/syscall_c.h ****     uint64 ret;
 185              		.loc 1 71 5 is_stmt 1
  72:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 186              		.loc 1 72 5
 187              		.loc 1 72 47 is_stmt 0
 188              	#APP
 189              	# 72 "src/../h/syscall_c.h" 1
  73              	    return (int)ret;
 190              		mv a0, a0
 191              	# 0 "" 2
 192              	.LVL17:
 193              		.loc 1 73 5 is_stmt 1
  74:src/../h/syscall_c.h **** }
 194              		.loc 1 74 1 is_stmt 0
 195              	#NO_APP
 196 00d8 1B050500 		sext.w	a0,a0
 197              	.LVL18:
 198 00dc 83308101 		ld	ra,24(sp)
 199              		.cfi_restore 1
 200 00e0 03340101 		ld	s0,16(sp)
 201              		.cfi_restore 8
 202              		.cfi_def_cfa 2, 32
 203 00e4 83348100 		ld	s1,8(sp)
 204              		.cfi_restore 9
 205              	.LVL19:
 206 00e8 13010102 		addi	sp,sp,32
 207              		.cfi_def_cfa_offset 0
 208 00ec 67800000 		jr	ra
 209              		.cfi_endproc
 210              	.LFE30:
 212              		.align	2
 213              		.globl	_Z13thread_createPP7_threadPFvPvES2_
GAS LISTING /tmp/ccLqAU5v.s 			page 6


 215              	_Z13thread_createPP7_threadPFvPvES2_:
 216              	.LFB31:
  75:src/../h/syscall_c.h **** 
  76:src/../h/syscall_c.h **** class _thread;
  77:src/../h/syscall_c.h **** typedef _thread* thread_t;  //thread_t je pokazivac, a handle je pokazivac na pokazivac
  78:src/../h/syscall_c.h **** int thread_create (
  79:src/../h/syscall_c.h ****         thread_t* handle,
  80:src/../h/syscall_c.h ****         void(*start_routine)(void*),
  81:src/../h/syscall_c.h ****         void* arg
  82:src/../h/syscall_c.h **** ){
 217              		.loc 1 82 2 is_stmt 1
 218              		.cfi_startproc
 219              	.LVL20:
 220 00f0 130101FD 		addi	sp,sp,-48
 221              		.cfi_def_cfa_offset 48
 222 00f4 23341102 		sd	ra,40(sp)
 223 00f8 23308102 		sd	s0,32(sp)
 224 00fc 233C9100 		sd	s1,24(sp)
 225 0100 23382101 		sd	s2,16(sp)
 226 0104 23343101 		sd	s3,8(sp)
 227              		.cfi_offset 1, -8
 228              		.cfi_offset 8, -16
 229              		.cfi_offset 9, -24
 230              		.cfi_offset 18, -32
 231              		.cfi_offset 19, -40
 232 0108 13040103 		addi	s0,sp,48
 233              		.cfi_def_cfa 8, 0
 234 010c 93090500 		mv	s3,a0
 235 0110 13890500 		mv	s2,a1
 236 0114 93040600 		mv	s1,a2
  83:src/../h/syscall_c.h ****     args* myArgs = new args();
 237              		.loc 1 83 5
 238              		.loc 1 83 29 is_stmt 0
 239 0118 13050002 		li	a0,32
 240              	.LVL21:
 241 011c 97000000 		call	_Znwm@plt
 241      E7800000 
 242              	.LVL22:
  84:src/../h/syscall_c.h ****     myArgs->a0=0x11;
 243              		.loc 1 84 5 is_stmt 1
 244              		.loc 1 84 15 is_stmt 0
 245 0124 13071001 		li	a4,17
 246 0128 2330E500 		sd	a4,0(a0)
  85:src/../h/syscall_c.h ****     myArgs->a1=(uint64)handle;
 247              		.loc 1 85 5 is_stmt 1
 248              		.loc 1 85 15 is_stmt 0
 249 012c 23343501 		sd	s3,8(a0)
  86:src/../h/syscall_c.h ****     myArgs->a2=(uint64)start_routine;
 250              		.loc 1 86 5 is_stmt 1
 251              		.loc 1 86 15 is_stmt 0
 252 0130 23382501 		sd	s2,16(a0)
  87:src/../h/syscall_c.h ****     myArgs->a3=(uint64)arg;
 253              		.loc 1 87 5 is_stmt 1
 254              		.loc 1 87 15 is_stmt 0
 255 0134 233C9500 		sd	s1,24(a0)
  88:src/../h/syscall_c.h **** 
  89:src/../h/syscall_c.h ****     syscall(myArgs);
GAS LISTING /tmp/ccLqAU5v.s 			page 7


 256              		.loc 1 89 5 is_stmt 1
 257              		.loc 1 89 12 is_stmt 0
 258 0138 97000000 		call	_Z7syscallP4args
 258      E7800000 
 259              	.LVL23:
  90:src/../h/syscall_c.h ****     uint64 ret;
 260              		.loc 1 90 5 is_stmt 1
  91:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 261              		.loc 1 91 5
 262              		.loc 1 91 47 is_stmt 0
 263              	#APP
 264              	# 91 "src/../h/syscall_c.h" 1
  92              	    return (int)ret;
 265              		mv a0, a0
 266              	# 0 "" 2
 267              	.LVL24:
 268              		.loc 1 92 5 is_stmt 1
  93:src/../h/syscall_c.h **** }
 269              		.loc 1 93 1 is_stmt 0
 270              	#NO_APP
 271 0144 1B050500 		sext.w	a0,a0
 272              	.LVL25:
 273 0148 83308102 		ld	ra,40(sp)
 274              		.cfi_restore 1
 275 014c 03340102 		ld	s0,32(sp)
 276              		.cfi_restore 8
 277              		.cfi_def_cfa 2, 48
 278 0150 83348101 		ld	s1,24(sp)
 279              		.cfi_restore 9
 280              	.LVL26:
 281 0154 03390101 		ld	s2,16(sp)
 282              		.cfi_restore 18
 283              	.LVL27:
 284 0158 83398100 		ld	s3,8(sp)
 285              		.cfi_restore 19
 286              	.LVL28:
 287 015c 13010103 		addi	sp,sp,48
 288              		.cfi_def_cfa_offset 0
 289 0160 67800000 		jr	ra
 290              		.cfi_endproc
 291              	.LFE31:
 293              		.section	.rodata.str1.8,"aMS",@progbits,1
 294              		.align	3
 295              	.LC0:
 296 0000 616C6C6F 		.string	"allocated \n"
 296      63617465 
 296      64200A00 
 297 000c 00000000 		.align	3
 298              	.LC1:
 299 0010 73756363 		.string	"successfully freed \n"
 299      65737366 
 299      756C6C79 
 299      20667265 
 299      6564200A 
 300 0025 000000   		.align	3
 301              	.LC2:
 302 0028 6E6F7420 		.string	"not freed \n"
GAS LISTING /tmp/ccLqAU5v.s 			page 8


 302      66726565 
 302      64200A00 
 303              		.text
 304              		.align	2
 305              		.globl	main
 307              	main:
 308              	.LFB32:
 309              		.file 2 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** #include "../h/List.hpp"
   7:src/Main.cpp  **** #include "../h/syscall_c.h"
   8:src/Main.cpp  **** #include "../h/Print.hpp"
   9:src/Main.cpp  **** 
  10:src/Main.cpp  **** 
  11:src/Main.cpp  **** 
  12:src/Main.cpp  **** int main(){
 310              		.loc 2 12 11 is_stmt 1
 311              		.cfi_startproc
 312 0164 130101FE 		addi	sp,sp,-32
 313              		.cfi_def_cfa_offset 32
 314 0168 233C1100 		sd	ra,24(sp)
 315 016c 23388100 		sd	s0,16(sp)
 316 0170 23349100 		sd	s1,8(sp)
 317              		.cfi_offset 1, -8
 318              		.cfi_offset 8, -16
 319              		.cfi_offset 9, -24
 320 0174 13040102 		addi	s0,sp,32
 321              		.cfi_def_cfa 8, 0
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** //    Riscv::w_stvec((uint64)&supervisorTrap);
  15:src/Main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  16:src/Main.cpp  **** //    __asm__ volatile ("ecall");
  17:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 322              		.loc 2 17 5
 323              		.loc 2 17 19 is_stmt 0
 324 0178 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 324      83B70700 
 325              	.LVL29:
 326              	.LBB4:
 327              	.LBB5:
 328              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/ccLqAU5v.s 			page 9


  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
GAS LISTING /tmp/ccLqAU5v.s 			page 10


  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 329              		.loc 3 125 5 is_stmt 1
GAS LISTING /tmp/ccLqAU5v.s 			page 11


 330              		.loc 3 125 69 is_stmt 0
 331              	#APP
 332              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
 333              		csrw stvec, a5
 334              	# 0 "" 2
 335              	.LVL30:
 336              	#NO_APP
 337              	.LBE5:
 338              	.LBE4:
  18:src/Main.cpp  **** 
  19:src/Main.cpp  ****     void* ptr;
 339              		.loc 2 19 5 is_stmt 1
  20:src/Main.cpp  ****     ptr = mem_alloc(300);
 340              		.loc 2 20 5
 341              		.loc 2 20 20 is_stmt 0
 342 0184 1305C012 		li	a0,300
 343 0188 97000000 		call	_Z9mem_allocm
 343      E7800000 
 344              	.LVL31:
 345 0190 93040500 		mv	s1,a0
 346              	.LVL32:
  21:src/Main.cpp  ****     if(ptr!=nullptr){
 347              		.loc 2 21 5 is_stmt 1
 348 0194 630A0500 		beqz	a0,.L11
  22:src/Main.cpp  ****         printString("allocated \n");
 349              		.loc 2 22 9
 350              		.loc 2 22 20 is_stmt 0
 351 0198 17050000 		lla	a0,.LC0
 351      13050500 
 352 01a0 97000000 		call	_Z11printStringPKc@plt
 352      E7800000 
 353              	.LVL33:
 354              	.L11:
  23:src/Main.cpp  ****     }
  24:src/Main.cpp  ****     if(!mem_free(ptr)){
 355              		.loc 2 24 5 is_stmt 1
 356              		.loc 2 24 17 is_stmt 0
 357 01a8 13850400 		mv	a0,s1
 358 01ac 97000000 		call	_Z8mem_freePv
 358      E7800000 
 359              	.LVL34:
 360              		.loc 2 24 5
 361 01b4 63160502 		bnez	a0,.L12
  25:src/Main.cpp  ****         printString("successfully freed \n");
 362              		.loc 2 25 9 is_stmt 1
 363              		.loc 2 25 20 is_stmt 0
 364 01b8 17050000 		lla	a0,.LC1
 364      13050500 
 365 01c0 97000000 		call	_Z11printStringPKc@plt
 365      E7800000 
 366              	.LVL35:
 367              	.L13:
  26:src/Main.cpp  ****     }
  27:src/Main.cpp  ****     else{
  28:src/Main.cpp  ****         printString("not freed \n");
  29:src/Main.cpp  ****     }
GAS LISTING /tmp/ccLqAU5v.s 			page 12


  30:src/Main.cpp  ****     return 0;
 368              		.loc 2 30 5 is_stmt 1
  31:src/Main.cpp  **** }
 369              		.loc 2 31 1 is_stmt 0
 370 01c8 13050000 		li	a0,0
 371 01cc 83308101 		ld	ra,24(sp)
 372              		.cfi_remember_state
 373              		.cfi_restore 1
 374 01d0 03340101 		ld	s0,16(sp)
 375              		.cfi_restore 8
 376              		.cfi_def_cfa 2, 32
 377 01d4 83348100 		ld	s1,8(sp)
 378              		.cfi_restore 9
 379              	.LVL36:
 380 01d8 13010102 		addi	sp,sp,32
 381              		.cfi_def_cfa_offset 0
 382 01dc 67800000 		jr	ra
 383              	.LVL37:
 384              	.L12:
 385              		.cfi_restore_state
  28:src/Main.cpp  ****     }
 386              		.loc 2 28 9 is_stmt 1
  28:src/Main.cpp  ****     }
 387              		.loc 2 28 20 is_stmt 0
 388 01e0 17050000 		lla	a0,.LC2
 388      13050500 
 389 01e8 97000000 		call	_Z11printStringPKc@plt
 389      E7800000 
 390              	.LVL38:
 391 01f0 6FF09FFD 		j	.L13
 392              		.cfi_endproc
 393              	.LFE32:
 395              	.Letext0:
 396              		.file 4 "src/../h/../lib/hw.h"
 397              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 398              		.file 6 "src/../h/Print.hpp"
GAS LISTING /tmp/ccLqAU5v.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccLqAU5v.s:9      .text:0000000000000000 _Z7syscallP4args
     /tmp/ccLqAU5v.s:13     .text:0000000000000000 .L0 
     /tmp/ccLqAU5v.s:15     .text:0000000000000000 .L0 
     /tmp/ccLqAU5v.s:16     .text:0000000000000004 .L0 
     /tmp/ccLqAU5v.s:18     .text:0000000000000008 .L0 
     /tmp/ccLqAU5v.s:20     .text:000000000000000c .L0 
     /tmp/ccLqAU5v.s:22     .text:000000000000000c .L0 
     /tmp/ccLqAU5v.s:23     .text:000000000000000c .L0 
     /tmp/ccLqAU5v.s:26     .text:0000000000000010 .L0 
     /tmp/ccLqAU5v.s:27     .text:0000000000000010 .L0 
     /tmp/ccLqAU5v.s:30     .text:0000000000000014 .L0 
     /tmp/ccLqAU5v.s:31     .text:0000000000000014 .L0 
     /tmp/ccLqAU5v.s:34     .text:0000000000000018 .L0 
     /tmp/ccLqAU5v.s:35     .text:0000000000000018 .L0 
     /tmp/ccLqAU5v.s:38     .text:000000000000001c .L0 
src/../h/syscall_c.h:34     .text:000000000000001c .L0 
     /tmp/ccLqAU5v.s:44     .text:0000000000000020 .L0 
src/../h/syscall_c.h:35     .text:0000000000000020 .L0 
     /tmp/ccLqAU5v.s:49     .text:0000000000000024 .L0 
src/../h/syscall_c.h:36     .text:0000000000000024 .L0 
     /tmp/ccLqAU5v.s:54     .text:0000000000000028 .L0 
src/../h/syscall_c.h:37     .text:0000000000000028 .L0 
     /tmp/ccLqAU5v.s:59     .text:000000000000002c .L0 
src/../h/syscall_c.h:42     .text:000000000000002c .L0 
     /tmp/ccLqAU5v.s:65     .text:0000000000000030 .L0 
     /tmp/ccLqAU5v.s:66     .text:0000000000000034 .L0 
     /tmp/ccLqAU5v.s:67     .text:0000000000000034 .L0 
     /tmp/ccLqAU5v.s:69     .text:0000000000000038 .L0 
     /tmp/ccLqAU5v.s:71     .text:000000000000003c .L0 
     /tmp/ccLqAU5v.s:77     .text:000000000000003c _Z9mem_allocm
     /tmp/ccLqAU5v.s:80     .text:000000000000003c .L0 
     /tmp/ccLqAU5v.s:82     .text:000000000000003c .L0 
     /tmp/ccLqAU5v.s:83     .text:0000000000000040 .L0 
     /tmp/ccLqAU5v.s:87     .text:000000000000004c .L0 
     /tmp/ccLqAU5v.s:88     .text:000000000000004c .L0 
     /tmp/ccLqAU5v.s:89     .text:000000000000004c .L0 
     /tmp/ccLqAU5v.s:91     .text:0000000000000050 .L0 
     /tmp/ccLqAU5v.s:94     .text:0000000000000054 .L0 
     /tmp/ccLqAU5v.s:95     .text:0000000000000054 .L0 
     /tmp/ccLqAU5v.s:100    .text:0000000000000060 .L0 
     /tmp/ccLqAU5v.s:101    .text:0000000000000060 .L0 
     /tmp/ccLqAU5v.s:104    .text:0000000000000068 .L0 
     /tmp/ccLqAU5v.s:105    .text:0000000000000068 .L0 
     /tmp/ccLqAU5v.s:108    .text:000000000000006c .L0 
     /tmp/ccLqAU5v.s:109    .text:000000000000006c .L0 
     /tmp/ccLqAU5v.s:112    .text:0000000000000070 .L0 
     /tmp/ccLqAU5v.s:114    .text:0000000000000074 .L0 
     /tmp/ccLqAU5v.s:115    .text:0000000000000074 .L0 
     /tmp/ccLqAU5v.s:119    .text:0000000000000078 .L0 
     /tmp/ccLqAU5v.s:120    .text:0000000000000078 .L0 
     /tmp/ccLqAU5v.s:122    .text:000000000000007c .L0 
     /tmp/ccLqAU5v.s:123    .text:000000000000007c .L0 
     /tmp/ccLqAU5v.s:126    .text:0000000000000084 .L0 
     /tmp/ccLqAU5v.s:127    .text:0000000000000084 .L0 
src/../h/syscall_c.h:60     .text:0000000000000084 .L0 
GAS LISTING /tmp/ccLqAU5v.s 			page 14


     /tmp/ccLqAU5v.s:134    .text:0000000000000088 .L0 
     /tmp/ccLqAU5v.s:136    .text:0000000000000088 .L0 
     /tmp/ccLqAU5v.s:137    .text:000000000000008c .L0 
     /tmp/ccLqAU5v.s:139    .text:0000000000000090 .L0 
     /tmp/ccLqAU5v.s:140    .text:0000000000000090 .L0 
     /tmp/ccLqAU5v.s:142    .text:0000000000000094 .L0 
     /tmp/ccLqAU5v.s:144    .text:0000000000000098 .L0 
     /tmp/ccLqAU5v.s:146    .text:000000000000009c .L0 
     /tmp/ccLqAU5v.s:152    .text:000000000000009c _Z8mem_freePv
     /tmp/ccLqAU5v.s:155    .text:000000000000009c .L0 
     /tmp/ccLqAU5v.s:157    .text:000000000000009c .L0 
     /tmp/ccLqAU5v.s:158    .text:00000000000000a0 .L0 
     /tmp/ccLqAU5v.s:162    .text:00000000000000ac .L0 
     /tmp/ccLqAU5v.s:163    .text:00000000000000ac .L0 
     /tmp/ccLqAU5v.s:164    .text:00000000000000ac .L0 
     /tmp/ccLqAU5v.s:166    .text:00000000000000b0 .L0 
     /tmp/ccLqAU5v.s:169    .text:00000000000000b4 .L0 
     /tmp/ccLqAU5v.s:170    .text:00000000000000b4 .L0 
     /tmp/ccLqAU5v.s:175    .text:00000000000000c0 .L0 
     /tmp/ccLqAU5v.s:176    .text:00000000000000c0 .L0 
     /tmp/ccLqAU5v.s:179    .text:00000000000000c8 .L0 
     /tmp/ccLqAU5v.s:180    .text:00000000000000c8 .L0 
     /tmp/ccLqAU5v.s:182    .text:00000000000000cc .L0 
     /tmp/ccLqAU5v.s:183    .text:00000000000000cc .L0 
     /tmp/ccLqAU5v.s:186    .text:00000000000000d4 .L0 
     /tmp/ccLqAU5v.s:187    .text:00000000000000d4 .L0 
src/../h/syscall_c.h:72     .text:00000000000000d4 .L0 
     /tmp/ccLqAU5v.s:194    .text:00000000000000d8 .L0 
     /tmp/ccLqAU5v.s:196    .text:00000000000000d8 .L0 
     /tmp/ccLqAU5v.s:199    .text:00000000000000e0 .L0 
     /tmp/ccLqAU5v.s:201    .text:00000000000000e4 .L0 
     /tmp/ccLqAU5v.s:202    .text:00000000000000e4 .L0 
     /tmp/ccLqAU5v.s:204    .text:00000000000000e8 .L0 
     /tmp/ccLqAU5v.s:207    .text:00000000000000ec .L0 
     /tmp/ccLqAU5v.s:209    .text:00000000000000f0 .L0 
     /tmp/ccLqAU5v.s:215    .text:00000000000000f0 _Z13thread_createPP7_threadPFvPvES2_
     /tmp/ccLqAU5v.s:218    .text:00000000000000f0 .L0 
     /tmp/ccLqAU5v.s:220    .text:00000000000000f0 .L0 
     /tmp/ccLqAU5v.s:221    .text:00000000000000f4 .L0 
     /tmp/ccLqAU5v.s:227    .text:0000000000000108 .L0 
     /tmp/ccLqAU5v.s:228    .text:0000000000000108 .L0 
     /tmp/ccLqAU5v.s:229    .text:0000000000000108 .L0 
     /tmp/ccLqAU5v.s:230    .text:0000000000000108 .L0 
     /tmp/ccLqAU5v.s:231    .text:0000000000000108 .L0 
     /tmp/ccLqAU5v.s:233    .text:000000000000010c .L0 
     /tmp/ccLqAU5v.s:238    .text:0000000000000118 .L0 
     /tmp/ccLqAU5v.s:239    .text:0000000000000118 .L0 
     /tmp/ccLqAU5v.s:244    .text:0000000000000124 .L0 
     /tmp/ccLqAU5v.s:245    .text:0000000000000124 .L0 
     /tmp/ccLqAU5v.s:248    .text:000000000000012c .L0 
     /tmp/ccLqAU5v.s:249    .text:000000000000012c .L0 
     /tmp/ccLqAU5v.s:251    .text:0000000000000130 .L0 
     /tmp/ccLqAU5v.s:252    .text:0000000000000130 .L0 
     /tmp/ccLqAU5v.s:254    .text:0000000000000134 .L0 
     /tmp/ccLqAU5v.s:255    .text:0000000000000134 .L0 
     /tmp/ccLqAU5v.s:257    .text:0000000000000138 .L0 
     /tmp/ccLqAU5v.s:258    .text:0000000000000138 .L0 
GAS LISTING /tmp/ccLqAU5v.s 			page 15


     /tmp/ccLqAU5v.s:261    .text:0000000000000140 .L0 
     /tmp/ccLqAU5v.s:262    .text:0000000000000140 .L0 
src/../h/syscall_c.h:91     .text:0000000000000140 .L0 
     /tmp/ccLqAU5v.s:269    .text:0000000000000144 .L0 
     /tmp/ccLqAU5v.s:271    .text:0000000000000144 .L0 
     /tmp/ccLqAU5v.s:274    .text:000000000000014c .L0 
     /tmp/ccLqAU5v.s:276    .text:0000000000000150 .L0 
     /tmp/ccLqAU5v.s:277    .text:0000000000000150 .L0 
     /tmp/ccLqAU5v.s:279    .text:0000000000000154 .L0 
     /tmp/ccLqAU5v.s:282    .text:0000000000000158 .L0 
     /tmp/ccLqAU5v.s:285    .text:000000000000015c .L0 
     /tmp/ccLqAU5v.s:288    .text:0000000000000160 .L0 
     /tmp/ccLqAU5v.s:290    .text:0000000000000164 .L0 
     /tmp/ccLqAU5v.s:307    .text:0000000000000164 main
     /tmp/ccLqAU5v.s:311    .text:0000000000000164 .L0 
     /tmp/ccLqAU5v.s:312    .text:0000000000000164 .L0 
     /tmp/ccLqAU5v.s:313    .text:0000000000000168 .L0 
     /tmp/ccLqAU5v.s:317    .text:0000000000000174 .L0 
     /tmp/ccLqAU5v.s:318    .text:0000000000000174 .L0 
     /tmp/ccLqAU5v.s:319    .text:0000000000000174 .L0 
     /tmp/ccLqAU5v.s:321    .text:0000000000000178 .L0 
     /tmp/ccLqAU5v.s:323    .text:0000000000000178 .L0 
     /tmp/ccLqAU5v.s:324    .text:0000000000000178 .L0 
     /tmp/ccLqAU5v.s:330    .text:0000000000000180 .L0 
  src/../h/Riscv.hpp:125    .text:0000000000000180 .L0 
     /tmp/ccLqAU5v.s:340    .text:0000000000000184 .L0 
     /tmp/ccLqAU5v.s:341    .text:0000000000000184 .L0 
     /tmp/ccLqAU5v.s:342    .text:0000000000000184 .L0 
     /tmp/ccLqAU5v.s:348    .text:0000000000000194 .L0 
     /tmp/ccLqAU5v.s:350    .text:0000000000000198 .L0 
     /tmp/ccLqAU5v.s:351    .text:0000000000000198 .L0 
     /tmp/ccLqAU5v.s:356    .text:00000000000001a8 .L0 
     /tmp/ccLqAU5v.s:357    .text:00000000000001a8 .L0 
     /tmp/ccLqAU5v.s:361    .text:00000000000001b4 .L0 
     /tmp/ccLqAU5v.s:363    .text:00000000000001b8 .L0 
     /tmp/ccLqAU5v.s:364    .text:00000000000001b8 .L0 
     /tmp/ccLqAU5v.s:369    .text:00000000000001c8 .L0 
     /tmp/ccLqAU5v.s:370    .text:00000000000001c8 .L0 
     /tmp/ccLqAU5v.s:372    .text:00000000000001d0 .L0 
     /tmp/ccLqAU5v.s:373    .text:00000000000001d0 .L0 
     /tmp/ccLqAU5v.s:375    .text:00000000000001d4 .L0 
     /tmp/ccLqAU5v.s:376    .text:00000000000001d4 .L0 
     /tmp/ccLqAU5v.s:378    .text:00000000000001d8 .L0 
     /tmp/ccLqAU5v.s:381    .text:00000000000001dc .L0 
     /tmp/ccLqAU5v.s:385    .text:00000000000001e0 .L0 
     /tmp/ccLqAU5v.s:387    .text:00000000000001e0 .L0 
     /tmp/ccLqAU5v.s:388    .text:00000000000001e0 .L0 
     /tmp/ccLqAU5v.s:392    .text:00000000000001f4 .L0 
     /tmp/ccLqAU5v.s:399    .text:00000000000001f4 .L0 
     /tmp/ccLqAU5v.s:324    .text:0000000000000178 .L0 
     /tmp/ccLqAU5v.s:295    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccLqAU5v.s:351    .text:0000000000000198 .L0 
     /tmp/ccLqAU5v.s:298    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccLqAU5v.s:364    .text:00000000000001b8 .L0 
     /tmp/ccLqAU5v.s:301    .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccLqAU5v.s:388    .text:00000000000001e0 .L0 
     /tmp/ccLqAU5v.s:117    .text:0000000000000078 .L4
GAS LISTING /tmp/ccLqAU5v.s 			page 16


     /tmp/ccLqAU5v.s:354    .text:00000000000001a8 .L11
     /tmp/ccLqAU5v.s:384    .text:00000000000001e0 .L12
     /tmp/ccLqAU5v.s:367    .text:00000000000001c8 .L13
     /tmp/ccLqAU5v.s:1195   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLqAU5v.s:2231   .debug_str:00000000000004b3 .LASF87
     /tmp/ccLqAU5v.s:2153   .debug_str:00000000000002a2 .LASF88
     /tmp/ccLqAU5v.s:2085   .debug_str:000000000000006f .LASF89
     /tmp/ccLqAU5v.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLqAU5v.s:395    .text:00000000000001f4 .Letext0
     /tmp/ccLqAU5v.s:2071   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLqAU5v.s:2171   .debug_str:0000000000000305 .LASF0
     /tmp/ccLqAU5v.s:2183   .debug_str:0000000000000351 .LASF1
     /tmp/ccLqAU5v.s:2163   .debug_str:00000000000002d0 .LASF2
     /tmp/ccLqAU5v.s:2145   .debug_str:0000000000000262 .LASF4
     /tmp/ccLqAU5v.s:2209   .debug_str:0000000000000400 .LASF3
     /tmp/ccLqAU5v.s:2091   .debug_str:00000000000000ca .LASF5
     /tmp/ccLqAU5v.s:2187   .debug_str:000000000000036b .LASF6
     /tmp/ccLqAU5v.s:2169   .debug_str:00000000000002f2 .LASF7
     /tmp/ccLqAU5v.s:2245   .debug_str:00000000000005d1 .LASF8
     /tmp/ccLqAU5v.s:2135   .debug_str:000000000000020c .LASF9
     /tmp/ccLqAU5v.s:2195   .debug_str:0000000000000397 .LASF10
     /tmp/ccLqAU5v.s:2235   .debug_str:0000000000000583 .LASF11
     /tmp/ccLqAU5v.s:2093   .debug_str:00000000000000d1 .LASF12
     /tmp/ccLqAU5v.s:2079   .debug_str:0000000000000034 .LASF13
     /tmp/ccLqAU5v.s:2101   .debug_str:000000000000011b .LASF14
     /tmp/ccLqAU5v.s:2205   .debug_str:00000000000003d2 .LASF15
     /tmp/ccLqAU5v.s:2105   .debug_str:0000000000000135 .LASF16
     /tmp/ccLqAU5v.s:2181   .debug_str:000000000000034b .LASF57
     /tmp/ccLqAU5v.s:2203   .debug_str:00000000000003c7 .LASF49
     /tmp/ccLqAU5v.s:2261   .debug_str:000000000000064b .LASF51
     /tmp/ccLqAU5v.s:2081   .debug_str:0000000000000044 .LASF17
     /tmp/ccLqAU5v.s:2217   .debug_str:0000000000000437 .LASF19
     /tmp/ccLqAU5v.s:2117   .debug_str:00000000000001ae .LASF21
     /tmp/ccLqAU5v.s:2115   .debug_str:0000000000000199 .LASF23
     /tmp/ccLqAU5v.s:2213   .debug_str:0000000000000421 .LASF18
     /tmp/ccLqAU5v.s:2199   .debug_str:00000000000003af .LASF20
     /tmp/ccLqAU5v.s:2229   .debug_str:00000000000004ac .LASF22
     /tmp/ccLqAU5v.s:2223   .debug_str:000000000000046b .LASF24
     /tmp/ccLqAU5v.s:2125   .debug_str:00000000000001e6 .LASF25
     /tmp/ccLqAU5v.s:2107   .debug_str:000000000000014b .LASF26
     /tmp/ccLqAU5v.s:2075   .debug_str:0000000000000009 .LASF27
     /tmp/ccLqAU5v.s:2139   .debug_str:0000000000000230 .LASF28
     /tmp/ccLqAU5v.s:2119   .debug_str:00000000000001b7 .LASF29
     /tmp/ccLqAU5v.s:2095   .debug_str:00000000000000e1 .LASF30
     /tmp/ccLqAU5v.s:2265   .debug_str:000000000000066e .LASF31
     /tmp/ccLqAU5v.s:2121   .debug_str:00000000000001bf .LASF32
     /tmp/ccLqAU5v.s:2173   .debug_str:0000000000000312 .LASF33
     /tmp/ccLqAU5v.s:2259   .debug_str:0000000000000638 .LASF34
     /tmp/ccLqAU5v.s:2087   .debug_str:000000000000009f .LASF35
     /tmp/ccLqAU5v.s:2123   .debug_str:00000000000001d3 .LASF36
     /tmp/ccLqAU5v.s:2133   .debug_str:0000000000000206 .LASF37
     /tmp/ccLqAU5v.s:2227   .debug_str:000000000000049a .LASF38
     /tmp/ccLqAU5v.s:2155   .debug_str:00000000000002af .LASF39
     /tmp/ccLqAU5v.s:2267   .debug_str:0000000000000676 .LASF40
     /tmp/ccLqAU5v.s:2263   .debug_str:0000000000000663 .LASF41
     /tmp/ccLqAU5v.s:2207   .debug_str:00000000000003e8 .LASF42
     /tmp/ccLqAU5v.s:2147   .debug_str:0000000000000269 .LASF43
GAS LISTING /tmp/ccLqAU5v.s 			page 17


     /tmp/ccLqAU5v.s:2219   .debug_str:000000000000044c .LASF44
     /tmp/ccLqAU5v.s:2099   .debug_str:0000000000000111 .LASF45
     /tmp/ccLqAU5v.s:2141   .debug_str:0000000000000244 .LASF46
     /tmp/ccLqAU5v.s:2165   .debug_str:00000000000002de .LASF47
     /tmp/ccLqAU5v.s:2137   .debug_str:000000000000021a .LASF48
     /tmp/ccLqAU5v.s:2215   .debug_str:0000000000000428 .LASF50
     /tmp/ccLqAU5v.s:2097   .debug_str:00000000000000f5 .LASF52
     /tmp/ccLqAU5v.s:2253   .debug_str:00000000000005fa .LASF53
     /tmp/ccLqAU5v.s:2151   .debug_str:0000000000000280 .LASF55
     /tmp/ccLqAU5v.s:2211   .debug_str:0000000000000412 .LASF54
     /tmp/ccLqAU5v.s:2225   .debug_str:000000000000047e .LASF56
     /tmp/ccLqAU5v.s:2161   .debug_str:00000000000002c0 .LASF58
     /tmp/ccLqAU5v.s:2233   .debug_str:0000000000000577 .LASF59
     /tmp/ccLqAU5v.s:2089   .debug_str:00000000000000a6 .LASF60
     /tmp/ccLqAU5v.s:2241   .debug_str:00000000000005aa .LASF61
     /tmp/ccLqAU5v.s:2077   .debug_str:0000000000000011 .LASF63
     /tmp/ccLqAU5v.s:2251   .debug_str:00000000000005f0 .LASF62
     /tmp/ccLqAU5v.s:2083   .debug_str:000000000000004d .LASF64
     /tmp/ccLqAU5v.s:2243   .debug_str:00000000000005b5 .LASF66
     /tmp/ccLqAU5v.s:2167   .debug_str:00000000000002e8 .LASF65
     /tmp/ccLqAU5v.s:2255   .debug_str:000000000000060f .LASF67
     /tmp/ccLqAU5v.s:2113   .debug_str:0000000000000180 .LASF90
     /tmp/ccLqAU5v.s:2177   .debug_str:000000000000033e .LASF91
     /tmp/ccLqAU5v.s:2073   .debug_str:0000000000000000 .LASF68
     /tmp/ccLqAU5v.s:2143   .debug_str:000000000000025a .LASF92
     /tmp/ccLqAU5v.s:2191   .debug_str:0000000000000384 .LASF69
     /tmp/ccLqAU5v.s:308    .text:0000000000000164 .LFB32
     /tmp/ccLqAU5v.s:393    .text:00000000000001f4 .LFE32
     /tmp/ccLqAU5v.s:1915   .debug_loc:0000000000000000 .LLST11
     /tmp/ccLqAU5v.s:326    .text:0000000000000180 .LBB4
     /tmp/ccLqAU5v.s:338    .text:0000000000000184 .LBE4
     /tmp/ccLqAU5v.s:344    .text:0000000000000190 .LVL31
     /tmp/ccLqAU5v.s:353    .text:00000000000001a8 .LVL33
     /tmp/ccLqAU5v.s:359    .text:00000000000001b4 .LVL34
     /tmp/ccLqAU5v.s:366    .text:00000000000001c8 .LVL35
     /tmp/ccLqAU5v.s:390    .text:00000000000001f0 .LVL38
     /tmp/ccLqAU5v.s:2109   .debug_str:000000000000015f .LASF73
     /tmp/ccLqAU5v.s:2175   .debug_str:0000000000000319 .LASF75
     /tmp/ccLqAU5v.s:216    .text:00000000000000f0 .LFB31
     /tmp/ccLqAU5v.s:291    .text:0000000000000164 .LFE31
     /tmp/ccLqAU5v.s:2221   .debug_str:0000000000000464 .LASF70
     /tmp/ccLqAU5v.s:1926   .debug_loc:0000000000000036 .LLST6
     /tmp/ccLqAU5v.s:2127   .debug_str:00000000000001ee .LASF71
     /tmp/ccLqAU5v.s:1944   .debug_loc:0000000000000082 .LLST7
     /tmp/ccLqAU5v.s:1962   .debug_loc:00000000000000ce .LLST8
     /tmp/ccLqAU5v.s:2185   .debug_str:0000000000000364 .LASF72
     /tmp/ccLqAU5v.s:1980   .debug_loc:000000000000011a .LLST9
     /tmp/ccLqAU5v.s:1987   .debug_loc:000000000000013d .LLST10
     /tmp/ccLqAU5v.s:242    .text:0000000000000124 .LVL22
     /tmp/ccLqAU5v.s:259    .text:0000000000000140 .LVL23
     /tmp/ccLqAU5v.s:2197   .debug_str:00000000000003a6 .LASF74
     /tmp/ccLqAU5v.s:2193   .debug_str:0000000000000389 .LASF76
     /tmp/ccLqAU5v.s:153    .text:000000000000009c .LFB30
     /tmp/ccLqAU5v.s:210    .text:00000000000000f0 .LFE30
     /tmp/ccLqAU5v.s:1994   .debug_loc:0000000000000160 .LLST3
     /tmp/ccLqAU5v.s:2012   .debug_loc:00000000000001ac .LLST4
     /tmp/ccLqAU5v.s:2019   .debug_loc:00000000000001cf .LLST5
GAS LISTING /tmp/ccLqAU5v.s 			page 18


     /tmp/ccLqAU5v.s:173    .text:00000000000000c0 .LVL15
     /tmp/ccLqAU5v.s:184    .text:00000000000000d4 .LVL16
     /tmp/ccLqAU5v.s:2247   .debug_str:00000000000005e1 .LASF77
     /tmp/ccLqAU5v.s:2103   .debug_str:0000000000000127 .LASF78
     /tmp/ccLqAU5v.s:78     .text:000000000000003c .LFB29
     /tmp/ccLqAU5v.s:147    .text:000000000000009c .LFE29
     /tmp/ccLqAU5v.s:2201   .debug_str:00000000000003c2 .LASF79
     /tmp/ccLqAU5v.s:2026   .debug_loc:00000000000001f2 .LLST0
     /tmp/ccLqAU5v.s:2044   .debug_loc:000000000000023e .LLST1
     /tmp/ccLqAU5v.s:2239   .debug_str:00000000000005a3 .LASF80
     /tmp/ccLqAU5v.s:2051   .debug_loc:0000000000000261 .LLST2
     /tmp/ccLqAU5v.s:98     .text:0000000000000060 .LVL7
     /tmp/ccLqAU5v.s:124    .text:0000000000000084 .LVL11
     /tmp/ccLqAU5v.s:2179   .debug_str:0000000000000343 .LASF81
     /tmp/ccLqAU5v.s:2237   .debug_str:0000000000000592 .LASF82
     /tmp/ccLqAU5v.s:10     .text:0000000000000000 .LFB28
     /tmp/ccLqAU5v.s:72     .text:000000000000003c .LFE28
     /tmp/ccLqAU5v.s:2159   .debug_str:00000000000002bb .LASF83
     /tmp/ccLqAU5v.s:2249   .debug_str:00000000000005eb .LASF84
     /tmp/ccLqAU5v.s:2129   .debug_str:00000000000001fc .LASF85
     /tmp/ccLqAU5v.s:2131   .debug_str:0000000000000201 .LASF86
     /tmp/ccLqAU5v.s:2189   .debug_str:000000000000037e .LASF93
     /tmp/ccLqAU5v.s:2111   .debug_str:000000000000016d .LASF94
     /tmp/ccLqAU5v.s:2149   .debug_str:0000000000000274 .LASF95
     /tmp/ccLqAU5v.s:2157   .debug_str:00000000000002b5 .LASF96
     /tmp/ccLqAU5v.s:2257   .debug_str:000000000000062b .LASF97
     /tmp/ccLqAU5v.s:346    .text:0000000000000194 .LVL32
     /tmp/ccLqAU5v.s:379    .text:00000000000001d8 .LVL36
     /tmp/ccLqAU5v.s:383    .text:00000000000001e0 .LVL37
     /tmp/ccLqAU5v.s:219    .text:00000000000000f0 .LVL20
     /tmp/ccLqAU5v.s:240    .text:000000000000011c .LVL21
     /tmp/ccLqAU5v.s:286    .text:000000000000015c .LVL28
     /tmp/ccLqAU5v.s:283    .text:0000000000000158 .LVL27
     /tmp/ccLqAU5v.s:280    .text:0000000000000154 .LVL26
     /tmp/ccLqAU5v.s:267    .text:0000000000000144 .LVL24
     /tmp/ccLqAU5v.s:272    .text:0000000000000148 .LVL25
     /tmp/ccLqAU5v.s:156    .text:000000000000009c .LVL13
     /tmp/ccLqAU5v.s:171    .text:00000000000000b8 .LVL14
     /tmp/ccLqAU5v.s:205    .text:00000000000000e8 .LVL19
     /tmp/ccLqAU5v.s:192    .text:00000000000000d8 .LVL17
     /tmp/ccLqAU5v.s:197    .text:00000000000000dc .LVL18
     /tmp/ccLqAU5v.s:81     .text:000000000000003c .LVL5
     /tmp/ccLqAU5v.s:96     .text:0000000000000058 .LVL6
     /tmp/ccLqAU5v.s:110    .text:0000000000000070 .LVL9
     /tmp/ccLqAU5v.s:106    .text:000000000000006c .LVL8
     /tmp/ccLqAU5v.s:400    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator10kmem_allocEm
_Znwm
_ZN5Riscv14supervisorTrapEv
_Z11printStringPKc
