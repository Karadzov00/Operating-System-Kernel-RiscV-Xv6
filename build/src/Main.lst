GAS LISTING /tmp/ccUbCz1i.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB41:
  11              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** #include "Workers.cpp"
  13:src/Main.cpp  **** extern void userMain();
  14:src/Main.cpp  **** extern int thread_create (
  15:src/Main.cpp  ****         _thread::thread_t * handle,
  16:src/Main.cpp  ****         void(*start_routine)(void*),
  17:src/Main.cpp  ****         void* arg
  18:src/Main.cpp  **** );
  19:src/Main.cpp  **** 
  20:src/Main.cpp  **** extern void userMain(void*);
  21:src/Main.cpp  **** 
  22:src/Main.cpp  **** int main(){
  12              		.loc 1 22 11
  13              		.cfi_startproc
  14 0000 130101FD 		addi	sp,sp,-48
  15              		.cfi_def_cfa_offset 48
  16 0004 23341102 		sd	ra,40(sp)
  17 0008 23308102 		sd	s0,32(sp)
  18 000c 233C9100 		sd	s1,24(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040103 		addi	s0,sp,48
  23              		.cfi_def_cfa 8, 0
  23:src/Main.cpp  **** 
  24:src/Main.cpp  **** 
  25:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  24              		.loc 1 25 5
  25              		.loc 1 25 19 is_stmt 0
  26 0014 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  26      83B70700 
  27              	.LVL0:
  28              	.LBB8:
  29              	.LBB9:
  30              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
GAS LISTING /tmp/ccUbCz1i.s 			page 2


   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
GAS LISTING /tmp/ccUbCz1i.s 			page 3


  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
GAS LISTING /tmp/ccUbCz1i.s 			page 4


 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  31              		.loc 2 125 5 is_stmt 1
  32              		.loc 2 125 69 is_stmt 0
  33              	#APP
  34              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
  35              		csrw stvec, a5
  36              	# 0 "" 2
  37              	.LVL1:
  38              	#NO_APP
  39              	.LBE9:
  40              	.LBE8:
  26:src/Main.cpp  **** 
  27:src/Main.cpp  ****     //set to user regime
  28:src/Main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPIE);
  41              		.loc 1 28 5 is_stmt 1
  42              	.LBB10:
  43              	.LBB11:
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval()
 129:src/../h/Riscv.hpp **** {
 130:src/../h/Riscv.hpp ****     uint64 volatile stval;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 132:src/../h/Riscv.hpp ****     return stval;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 136:src/../h/Riscv.hpp **** {
 137:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 141:src/../h/Riscv.hpp **** {
 142:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 146:src/../h/Riscv.hpp **** {
 147:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip()
 151:src/../h/Riscv.hpp **** {
 152:src/../h/Riscv.hpp ****     uint64 volatile sip;
 153:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 154:src/../h/Riscv.hpp ****     return sip;
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
GAS LISTING /tmp/ccUbCz1i.s 			page 5


 158:src/../h/Riscv.hpp **** {
 159:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 160:src/../h/Riscv.hpp **** }
 161:src/../h/Riscv.hpp **** 
 162:src/../h/Riscv.hpp **** //mask set
 163:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 164:src/../h/Riscv.hpp **** {
 165:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** //mask clear
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 170:src/../h/Riscv.hpp **** {
 171:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  44              		.loc 2 171 5
  45              		.loc 2 171 68 is_stmt 0
  46 0020 93070002 		li	a5,32
  47              	#APP
  48              	# 171 "src/../h/Riscv.hpp" 1
 172              	}
  49              		csrc sstatus, a5
  50              	# 0 "" 2
  51              	.LVL2:
  52              	#NO_APP
  53              	.LBE11:
  54              	.LBE10:
  29:src/Main.cpp  **** 
  30:src/Main.cpp  ****     //make system thread
  31:src/Main.cpp  ****     _thread* main = (_thread*)MemoryAllocator::kmem_alloc(sizeof(_thread));
  55              		.loc 1 31 5 is_stmt 1
  56              		.loc 1 31 58 is_stmt 0
  57 0028 13050005 		li	a0,80
  58 002c 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  58      E7800000 
  59              	.LVL3:
  60 0034 93040500 		mv	s1,a0
  61              	.LVL4:
  32:src/Main.cpp  ****     _thread::running=main;
  62              		.loc 1 32 5 is_stmt 1
  63              		.loc 1 32 21 is_stmt 0
  64 0038 97070000 		la	a5,_ZN7_thread7runningE
  64      83B70700 
  65 0040 23B0A700 		sd	a0,0(a5)
  33:src/Main.cpp  ****     uint64 * stack = (uint64*)MemoryAllocator::kmem_alloc(DEFAULT_STACK_SIZE);
  66              		.loc 1 33 5 is_stmt 1
  67              		.loc 1 33 58 is_stmt 0
  68 0044 37150000 		li	a0,4096
  69 0048 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
  69      E7800000 
  70              	.LVL5:
  71 0050 93050500 		mv	a1,a0
  72              	.LVL6:
  34:src/Main.cpp  ****     main->setStack(stack);
  73              		.loc 1 34 5 is_stmt 1
  74              		.loc 1 34 19 is_stmt 0
  75 0054 13850400 		mv	a0,s1
  76              	.LVL7:
GAS LISTING /tmp/ccUbCz1i.s 			page 6


  77 0058 97000000 		call	_ZN7_thread8setStackEPm@plt
  77      E7800000 
  78              	.LVL8:
  35:src/Main.cpp  ****     __asm__ volatile("ecall");
  79              		.loc 1 35 5 is_stmt 1
  80              		.loc 1 35 30 is_stmt 0
  81              	#APP
  82              	# 35 "src/Main.cpp" 1
  36              	
  37:src/Main.cpp  **** 
  38:src/Main.cpp  ****     //make user thread
  39:src/Main.cpp  ****     _thread* thr;
  83              		ecall
  84              	# 0 "" 2
  85              		.loc 1 39 5 is_stmt 1
  40:src/Main.cpp  ****     thread_create(&thr, userMain, nullptr);
  86              		.loc 1 40 5
  87              		.loc 1 40 18 is_stmt 0
  88              	#NO_APP
  89 0064 13060000 		li	a2,0
  90 0068 97050000 		la	a1,_Z8userMainPv
  90      83B50500 
  91 0070 130584FD 		addi	a0,s0,-40
  92 0074 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
  92      E7800000 
  93              	.LVL9:
  94              	.L3:
  41:src/Main.cpp  **** 
  42:src/Main.cpp  ****     while(!thr->isFinished()){
  95              		.loc 1 42 5 is_stmt 1
  96              		.loc 1 42 11
  97              		.loc 1 42 27 is_stmt 0
  98 007c 833784FD 		ld	a5,-40(s0)
  99              	.LVL10:
 100              	.LBB12:
 101              	.LBB13:
 102              		.file 3 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
 103              		.loc 3 18 31 is_stmt 1
 104              		.loc 3 18 38 is_stmt 0
GAS LISTING /tmp/ccUbCz1i.s 			page 7


 105 0080 83C78702 		lbu	a5,40(a5)
 106              	.LVL11:
 107              	.LBE13:
 108              	.LBE12:
 109              		.loc 1 42 11
 110 0084 63980700 		bnez	a5,.L2
  43:src/Main.cpp  ****         thread_dispatch();
 111              		.loc 1 43 9 is_stmt 1
 112              		.loc 1 43 24 is_stmt 0
 113 0088 97000000 		call	_Z15thread_dispatchv@plt
 113      E7800000 
 114              	.LVL12:
 115 0090 6FF0DFFE 		j	.L3
 116              	.L2:
  44:src/Main.cpp  ****     }
  45:src/Main.cpp  **** 
  46:src/Main.cpp  ****     return 0;
 117              		.loc 1 46 5 is_stmt 1
  47:src/Main.cpp  **** }
 118              		.loc 1 47 1 is_stmt 0
 119 0094 13050000 		li	a0,0
 120 0098 83308102 		ld	ra,40(sp)
 121              		.cfi_restore 1
 122 009c 03340102 		ld	s0,32(sp)
 123              		.cfi_restore 8
 124              		.cfi_def_cfa 2, 48
 125 00a0 83348101 		ld	s1,24(sp)
 126              		.cfi_restore 9
 127              	.LVL13:
 128 00a4 13010103 		addi	sp,sp,48
 129              		.cfi_def_cfa_offset 0
 130 00a8 67800000 		jr	ra
 131              		.cfi_endproc
 132              	.LFE41:
 134              	.Letext0:
 135              		.file 4 "src/../h/../lib/hw.h"
 136              		.file 5 "src/../h/DoublyLinkedList.hpp"
 137              		.file 6 "src/../h/MemoryAllocator.hpp"
 138              		.file 7 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccUbCz1i.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/ccUbCz1i.s:9      .text:0000000000000000 main
     /tmp/ccUbCz1i.s:13     .text:0000000000000000 .L0 
     /tmp/ccUbCz1i.s:14     .text:0000000000000000 .L0 
     /tmp/ccUbCz1i.s:15     .text:0000000000000004 .L0 
     /tmp/ccUbCz1i.s:19     .text:0000000000000010 .L0 
     /tmp/ccUbCz1i.s:20     .text:0000000000000010 .L0 
     /tmp/ccUbCz1i.s:21     .text:0000000000000010 .L0 
     /tmp/ccUbCz1i.s:23     .text:0000000000000014 .L0 
     /tmp/ccUbCz1i.s:25     .text:0000000000000014 .L0 
     /tmp/ccUbCz1i.s:26     .text:0000000000000014 .L0 
     /tmp/ccUbCz1i.s:32     .text:000000000000001c .L0 
  src/../h/Riscv.hpp:125    .text:000000000000001c .L0 
     /tmp/ccUbCz1i.s:44     .text:0000000000000020 .L0 
     /tmp/ccUbCz1i.s:45     .text:0000000000000020 .L0 
     /tmp/ccUbCz1i.s:46     .text:0000000000000020 .L0 
     /tmp/ccUbCz1i.s:56     .text:0000000000000028 .L0 
     /tmp/ccUbCz1i.s:57     .text:0000000000000028 .L0 
     /tmp/ccUbCz1i.s:63     .text:0000000000000038 .L0 
     /tmp/ccUbCz1i.s:64     .text:0000000000000038 .L0 
     /tmp/ccUbCz1i.s:67     .text:0000000000000044 .L0 
     /tmp/ccUbCz1i.s:68     .text:0000000000000044 .L0 
     /tmp/ccUbCz1i.s:74     .text:0000000000000054 .L0 
     /tmp/ccUbCz1i.s:75     .text:0000000000000054 .L0 
     /tmp/ccUbCz1i.s:80     .text:0000000000000060 .L0 
        src/Main.cpp:35     .text:0000000000000060 .L0 
     /tmp/ccUbCz1i.s:86     .text:0000000000000064 .L0 
     /tmp/ccUbCz1i.s:87     .text:0000000000000064 .L0 
     /tmp/ccUbCz1i.s:89     .text:0000000000000064 .L0 
     /tmp/ccUbCz1i.s:96     .text:000000000000007c .L0 
     /tmp/ccUbCz1i.s:97     .text:000000000000007c .L0 
     /tmp/ccUbCz1i.s:98     .text:000000000000007c .L0 
     /tmp/ccUbCz1i.s:104    .text:0000000000000080 .L0 
     /tmp/ccUbCz1i.s:105    .text:0000000000000080 .L0 
     /tmp/ccUbCz1i.s:110    .text:0000000000000084 .L0 
     /tmp/ccUbCz1i.s:112    .text:0000000000000088 .L0 
     /tmp/ccUbCz1i.s:113    .text:0000000000000088 .L0 
     /tmp/ccUbCz1i.s:118    .text:0000000000000094 .L0 
     /tmp/ccUbCz1i.s:119    .text:0000000000000094 .L0 
     /tmp/ccUbCz1i.s:121    .text:000000000000009c .L0 
     /tmp/ccUbCz1i.s:123    .text:00000000000000a0 .L0 
     /tmp/ccUbCz1i.s:124    .text:00000000000000a0 .L0 
     /tmp/ccUbCz1i.s:126    .text:00000000000000a4 .L0 
     /tmp/ccUbCz1i.s:129    .text:00000000000000a8 .L0 
     /tmp/ccUbCz1i.s:131    .text:00000000000000ac .L0 
     /tmp/ccUbCz1i.s:139    .text:00000000000000ac .L0 
     /tmp/ccUbCz1i.s:26     .text:0000000000000014 .L0 
     /tmp/ccUbCz1i.s:64     .text:0000000000000038 .L0 
     /tmp/ccUbCz1i.s:90     .text:0000000000000068 .L0 
     /tmp/ccUbCz1i.s:116    .text:0000000000000094 .L2
     /tmp/ccUbCz1i.s:94     .text:000000000000007c .L3
     /tmp/ccUbCz1i.s:1278   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccUbCz1i.s:2456   .debug_str:00000000000007fd .LASF147
     /tmp/ccUbCz1i.s:2322   .debug_str:0000000000000411 .LASF148
     /tmp/ccUbCz1i.s:2216   .debug_str:0000000000000098 .LASF149
     /tmp/ccUbCz1i.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccUbCz1i.s 			page 9


     /tmp/ccUbCz1i.s:134    .text:00000000000000ac .Letext0
     /tmp/ccUbCz1i.s:2198   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccUbCz1i.s:2358   .debug_str:0000000000000511 .LASF0
     /tmp/ccUbCz1i.s:2378   .debug_str:0000000000000569 .LASF1
     /tmp/ccUbCz1i.s:2340   .debug_str:0000000000000489 .LASF2
     /tmp/ccUbCz1i.s:2306   .debug_str:00000000000003a3 .LASF4
     /tmp/ccUbCz1i.s:2428   .debug_str:000000000000071d .LASF3
     /tmp/ccUbCz1i.s:2224   .debug_str:00000000000000fb .LASF5
     /tmp/ccUbCz1i.s:2382   .debug_str:0000000000000598 .LASF6
     /tmp/ccUbCz1i.s:2356   .debug_str:00000000000004fe .LASF7
     /tmp/ccUbCz1i.s:2474   .debug_str:0000000000000963 .LASF8
     /tmp/ccUbCz1i.s:2292   .debug_str:00000000000002f6 .LASF9
     /tmp/ccUbCz1i.s:2400   .debug_str:0000000000000631 .LASF10
     /tmp/ccUbCz1i.s:2460   .debug_str:00000000000008cd .LASF11
     /tmp/ccUbCz1i.s:2228   .debug_str:000000000000010e .LASF12
     /tmp/ccUbCz1i.s:2208   .debug_str:0000000000000055 .LASF13
     /tmp/ccUbCz1i.s:2238   .debug_str:000000000000015d .LASF14
     /tmp/ccUbCz1i.s:2420   .debug_str:00000000000006d1 .LASF15
     /tmp/ccUbCz1i.s:2252   .debug_str:00000000000001ec .LASF16
     /tmp/ccUbCz1i.s:2374   .debug_str:0000000000000556 .LASF56
     /tmp/ccUbCz1i.s:2256   .debug_str:0000000000000216 .LASF84
     /tmp/ccUbCz1i.s:2248   .debug_str:00000000000001bf .LASF17
     /tmp/ccUbCz1i.s:2326   .debug_str:0000000000000424 .LASF18
     /tmp/ccUbCz1i.s:2226   .debug_str:0000000000000102 .LASF19
     /tmp/ccUbCz1i.s:2416   .debug_str:00000000000006a0 .LASF52
     /tmp/ccUbCz1i.s:2492   .debug_str:00000000000009e2 .LASF54
     /tmp/ccUbCz1i.s:2210   .debug_str:0000000000000065 .LASF20
     /tmp/ccUbCz1i.s:2440   .debug_str:0000000000000773 .LASF22
     /tmp/ccUbCz1i.s:2268   .debug_str:0000000000000266 .LASF24
     /tmp/ccUbCz1i.s:2266   .debug_str:0000000000000251 .LASF26
     /tmp/ccUbCz1i.s:2432   .debug_str:0000000000000740 .LASF21
     /tmp/ccUbCz1i.s:2408   .debug_str:0000000000000672 .LASF23
     /tmp/ccUbCz1i.s:2454   .debug_str:00000000000007f6 .LASF25
     /tmp/ccUbCz1i.s:2444   .debug_str:00000000000007a0 .LASF27
     /tmp/ccUbCz1i.s:2286   .debug_str:00000000000002da .LASF28
     /tmp/ccUbCz1i.s:2254   .debug_str:0000000000000202 .LASF29
     /tmp/ccUbCz1i.s:2204   .debug_str:000000000000002a .LASF30
     /tmp/ccUbCz1i.s:2300   .debug_str:000000000000033c .LASF31
     /tmp/ccUbCz1i.s:2272   .debug_str:0000000000000279 .LASF32
     /tmp/ccUbCz1i.s:2230   .debug_str:000000000000011e .LASF33
     /tmp/ccUbCz1i.s:2500   .debug_str:0000000000000a15 .LASF34
     /tmp/ccUbCz1i.s:2274   .debug_str:0000000000000281 .LASF35
     /tmp/ccUbCz1i.s:2360   .debug_str:000000000000051e .LASF36
     /tmp/ccUbCz1i.s:2488   .debug_str:00000000000009ca .LASF37
     /tmp/ccUbCz1i.s:2218   .debug_str:00000000000000c8 .LASF38
     /tmp/ccUbCz1i.s:2284   .debug_str:00000000000002c7 .LASF39
     /tmp/ccUbCz1i.s:2290   .debug_str:00000000000002f0 .LASF40
     /tmp/ccUbCz1i.s:2452   .debug_str:00000000000007e4 .LASF41
     /tmp/ccUbCz1i.s:2324   .debug_str:000000000000041e .LASF42
     /tmp/ccUbCz1i.s:2504   .debug_str:0000000000000a2d .LASF43
     /tmp/ccUbCz1i.s:2498   .debug_str:0000000000000a0a .LASF44
     /tmp/ccUbCz1i.s:2426   .debug_str:0000000000000705 .LASF45
     /tmp/ccUbCz1i.s:2316   .debug_str:00000000000003dc .LASF46
     /tmp/ccUbCz1i.s:2442   .debug_str:0000000000000788 .LASF47
     /tmp/ccUbCz1i.s:2236   .debug_str:0000000000000153 .LASF48
     /tmp/ccUbCz1i.s:2304   .debug_str:000000000000038d .LASF49
     /tmp/ccUbCz1i.s:2344   .debug_str:00000000000004a3 .LASF50
GAS LISTING /tmp/ccUbCz1i.s 			page 10


     /tmp/ccUbCz1i.s:2296   .debug_str:0000000000000309 .LASF51
     /tmp/ccUbCz1i.s:2434   .debug_str:0000000000000747 .LASF53
     /tmp/ccUbCz1i.s:2232   .debug_str:0000000000000132 .LASF55
     /tmp/ccUbCz1i.s:2478   .debug_str:000000000000097d .LASF126
     /tmp/ccUbCz1i.s:2320   .debug_str:00000000000003ef .LASF128
     /tmp/ccUbCz1i.s:2472   .debug_str:000000000000093f .LASF57
     /tmp/ccUbCz1i.s:2234   .debug_str:000000000000014e .LASF130
     /tmp/ccUbCz1i.s:2412   .debug_str:000000000000068a .LASF58
     /tmp/ccUbCz1i.s:2350   .debug_str:00000000000004d8 .LASF59
     /tmp/ccUbCz1i.s:2486   .debug_str:00000000000009c5 .LASF60
     /tmp/ccUbCz1i.s:2348   .debug_str:00000000000004b6 .LASF132
     /tmp/ccUbCz1i.s:2258   .debug_str:0000000000000225 .LASF61
     /tmp/ccUbCz1i.s:2336   .debug_str:0000000000000469 .LASF62
     /tmp/ccUbCz1i.s:2308   .debug_str:00000000000003aa .LASF63
     /tmp/ccUbCz1i.s:2240   .debug_str:0000000000000169 .LASF66
     /tmp/ccUbCz1i.s:2250   .debug_str:00000000000001cb .LASF64
     /tmp/ccUbCz1i.s:2494   .debug_str:00000000000009fa .LASF65
     /tmp/ccUbCz1i.s:2202   .debug_str:0000000000000009 .LASF67
     /tmp/ccUbCz1i.s:2352   .debug_str:00000000000004dd .LASF68
     /tmp/ccUbCz1i.s:2458   .debug_str:00000000000008c1 .LASF69
     /tmp/ccUbCz1i.s:2222   .debug_str:00000000000000d7 .LASF70
     /tmp/ccUbCz1i.s:2468   .debug_str:0000000000000918 .LASF71
     /tmp/ccUbCz1i.s:2206   .debug_str:0000000000000032 .LASF72
     /tmp/ccUbCz1i.s:2476   .debug_str:0000000000000973 .LASF73
     /tmp/ccUbCz1i.s:2214   .debug_str:0000000000000076 .LASF74
     /tmp/ccUbCz1i.s:2270   .debug_str:000000000000026f .LASF75
     /tmp/ccUbCz1i.s:2302   .debug_str:0000000000000350 .LASF76
     /tmp/ccUbCz1i.s:2280   .debug_str:00000000000002aa .LASF99
     /tmp/ccUbCz1i.s:2470   .debug_str:0000000000000923 .LASF77
     /tmp/ccUbCz1i.s:2480   .debug_str:0000000000000992 .LASF78
     /tmp/ccUbCz1i.s:2264   .debug_str:0000000000000238 .LASF79
     /tmp/ccUbCz1i.s:2366   .debug_str:0000000000000534 .LASF80
     /tmp/ccUbCz1i.s:2346   .debug_str:00000000000004ad .LASF81
     /tmp/ccUbCz1i.s:2404   .debug_str:000000000000064d .LASF82
     /tmp/ccUbCz1i.s:2220   .debug_str:00000000000000cf .LASF83
     /tmp/ccUbCz1i.s:2462   .debug_str:00000000000008dc .LASF85
     /tmp/ccUbCz1i.s:2398   .debug_str:000000000000062b .LASF86
     /tmp/ccUbCz1i.s:2436   .debug_str:0000000000000756 .LASF87
     /tmp/ccUbCz1i.s:2262   .debug_str:0000000000000230 .LASF88
     /tmp/ccUbCz1i.s:2212   .debug_str:000000000000006e .LASF150
     /tmp/ccUbCz1i.s:2466   .debug_str:000000000000090f .LASF89
     /tmp/ccUbCz1i.s:2388   .debug_str:00000000000005d1 .LASF90
     /tmp/ccUbCz1i.s:2384   .debug_str:00000000000005ab .LASF91
     /tmp/ccUbCz1i.s:2338   .debug_str:000000000000046e .LASF92
     /tmp/ccUbCz1i.s:2342   .debug_str:0000000000000497 .LASF93
     /tmp/ccUbCz1i.s:2244   .debug_str:0000000000000196 .LASF94
     /tmp/ccUbCz1i.s:2334   .debug_str:000000000000045c .LASF95
     /tmp/ccUbCz1i.s:2406   .debug_str:0000000000000655 .LASF96
     /tmp/ccUbCz1i.s:2376   .debug_str:000000000000055c .LASF97
     /tmp/ccUbCz1i.s:2418   .debug_str:00000000000006ab .LASF98
     /tmp/ccUbCz1i.s:2410   .debug_str:0000000000000685 .LASF100
     /tmp/ccUbCz1i.s:2422   .debug_str:00000000000006e7 .LASF101
     /tmp/ccUbCz1i.s:2450   .debug_str:00000000000007d0 .LASF102
     /tmp/ccUbCz1i.s:2496   .debug_str:0000000000000a04 .LASF103
     /tmp/ccUbCz1i.s:2438   .debug_str:000000000000075f .LASF104
     /tmp/ccUbCz1i.s:2200   .debug_str:0000000000000000 .LASF105
     /tmp/ccUbCz1i.s:2424   .debug_str:00000000000006ed .LASF106
GAS LISTING /tmp/ccUbCz1i.s 			page 11


     /tmp/ccUbCz1i.s:2372   .debug_str:000000000000054e .LASF151
     /tmp/ccUbCz1i.s:2446   .debug_str:00000000000007b3 .LASF107
     /tmp/ccUbCz1i.s:2330   .debug_str:000000000000043f .LASF108
     /tmp/ccUbCz1i.s:2402   .debug_str:0000000000000640 .LASF109
     /tmp/ccUbCz1i.s:2380   .debug_str:000000000000057c .LASF110
     /tmp/ccUbCz1i.s:2484   .debug_str:00000000000009b8 .LASF111
     /tmp/ccUbCz1i.s:2394   .debug_str:00000000000005f6 .LASF112
     /tmp/ccUbCz1i.s:2502   .debug_str:0000000000000a1d .LASF113
     /tmp/ccUbCz1i.s:2276   .debug_str:0000000000000295 .LASF114
     /tmp/ccUbCz1i.s:2390   .debug_str:00000000000005e1 .LASF115
     /tmp/ccUbCz1i.s:2414   .debug_str:000000000000068f .LASF116
     /tmp/ccUbCz1i.s:2310   .debug_str:00000000000003bb .LASF117
     /tmp/ccUbCz1i.s:2354   .debug_str:00000000000004ed .LASF118
     /tmp/ccUbCz1i.s:2386   .debug_str:00000000000005b6 .LASF119
     /tmp/ccUbCz1i.s:2314   .debug_str:00000000000003d7 .LASF120
     /tmp/ccUbCz1i.s:2364   .debug_str:000000000000052e .LASF121
     /tmp/ccUbCz1i.s:2318   .debug_str:00000000000003e7 .LASF122
     /tmp/ccUbCz1i.s:2368   .debug_str:000000000000053d .LASF123
     /tmp/ccUbCz1i.s:2312   .debug_str:00000000000003ce .LASF124
     /tmp/ccUbCz1i.s:2482   .debug_str:00000000000009ae .LASF125
     /tmp/ccUbCz1i.s:2328   .debug_str:0000000000000431 .LASF127
     /tmp/ccUbCz1i.s:2298   .debug_str:000000000000031f .LASF129
     /tmp/ccUbCz1i.s:2246   .debug_str:00000000000001b1 .LASF131
     /tmp/ccUbCz1i.s:2464   .debug_str:00000000000008e3 .LASF133
     /tmp/ccUbCz1i.s:2362   .debug_str:0000000000000525 .LASF134
     /tmp/ccUbCz1i.s:2448   .debug_str:00000000000007b9 .LASF135
     /tmp/ccUbCz1i.s:2430   .debug_str:000000000000072f .LASF136
     /tmp/ccUbCz1i.s:2332   .debug_str:0000000000000453 .LASF137
     /tmp/ccUbCz1i.s:2370   .debug_str:0000000000000547 .LASF138
     /tmp/ccUbCz1i.s:2278   .debug_str:00000000000002a5 .LASF139
     /tmp/ccUbCz1i.s:2392   .debug_str:00000000000005f1 .LASF140
     /tmp/ccUbCz1i.s:10     .text:0000000000000000 .LFB41
     /tmp/ccUbCz1i.s:132    .text:00000000000000ac .LFE41
     /tmp/ccUbCz1i.s:2151   .debug_loc:0000000000000000 .LLST0
     /tmp/ccUbCz1i.s:2158   .debug_loc:0000000000000023 .LLST1
     /tmp/ccUbCz1i.s:28     .text:000000000000001c .LBB8
     /tmp/ccUbCz1i.s:40     .text:0000000000000020 .LBE8
     /tmp/ccUbCz1i.s:42     .text:0000000000000020 .LBB10
     /tmp/ccUbCz1i.s:54     .text:0000000000000028 .LBE10
     /tmp/ccUbCz1i.s:2169   .debug_loc:0000000000000059 .LLST2
     /tmp/ccUbCz1i.s:100    .text:0000000000000080 .LBB12
     /tmp/ccUbCz1i.s:108    .text:0000000000000084 .LBE12
     /tmp/ccUbCz1i.s:2178   .debug_loc:000000000000007e .LLST3
     /tmp/ccUbCz1i.s:59     .text:0000000000000034 .LVL3
     /tmp/ccUbCz1i.s:70     .text:0000000000000050 .LVL5
     /tmp/ccUbCz1i.s:78     .text:0000000000000060 .LVL8
     /tmp/ccUbCz1i.s:93     .text:000000000000007c .LVL9
     /tmp/ccUbCz1i.s:114    .text:0000000000000090 .LVL12
     /tmp/ccUbCz1i.s:2490   .debug_str:00000000000009dd .LASF152
     /tmp/ccUbCz1i.s:2294   .debug_str:0000000000000304 .LASF141
     /tmp/ccUbCz1i.s:2260   .debug_str:000000000000022a .LASF142
     /tmp/ccUbCz1i.s:2396   .debug_str:0000000000000606 .LASF143
     /tmp/ccUbCz1i.s:2288   .debug_str:00000000000002e2 .LASF145
     /tmp/ccUbCz1i.s:2282   .debug_str:00000000000002b2 .LASF144
     /tmp/ccUbCz1i.s:2242   .debug_str:0000000000000186 .LASF146
     /tmp/ccUbCz1i.s:61     .text:0000000000000038 .LVL4
     /tmp/ccUbCz1i.s:127    .text:00000000000000a4 .LVL13
GAS LISTING /tmp/ccUbCz1i.s 			page 12


     /tmp/ccUbCz1i.s:72     .text:0000000000000054 .LVL6
     /tmp/ccUbCz1i.s:76     .text:0000000000000058 .LVL7
     /tmp/ccUbCz1i.s:37     .text:0000000000000020 .LVL1
     /tmp/ccUbCz1i.s:51     .text:0000000000000028 .LVL2
     /tmp/ccUbCz1i.s:99     .text:0000000000000080 .LVL10
     /tmp/ccUbCz1i.s:106    .text:0000000000000084 .LVL11
     /tmp/ccUbCz1i.s:140    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN15MemoryAllocator10kmem_allocEm
_ZN7_thread7runningE
_ZN7_thread8setStackEPm
_Z8userMainPv
_Z13thread_createPP7_threadPFvPvES2_
_Z15thread_dispatchv
