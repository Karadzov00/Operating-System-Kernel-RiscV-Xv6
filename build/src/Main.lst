GAS LISTING /tmp/cc1yNe5e.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7syscallP4args
   9              	_Z7syscallP4args:
  10              	.LFB30:
  11              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //
   2:src/../h/syscall_c.h **** // Created by os on 6/19/22.
   3:src/../h/syscall_c.h **** //
   4:src/../h/syscall_c.h **** 
   5:src/../h/syscall_c.h **** #ifndef PROJECT_BASE_V1_1_SYSCALL_C_H
   6:src/../h/syscall_c.h **** #define PROJECT_BASE_V1_1_SYSCALL_C_H
   7:src/../h/syscall_c.h **** 
   8:src/../h/syscall_c.h **** 
   9:src/../h/syscall_c.h **** #include "../h/MemoryAllocator.hpp"
  10:src/../h/syscall_c.h **** 
  11:src/../h/syscall_c.h **** 
  12:src/../h/syscall_c.h **** 
  13:src/../h/syscall_c.h **** //extern "C" void supervisorTrap();
  14:src/../h/syscall_c.h **** 
  15:src/../h/syscall_c.h **** struct args{
  16:src/../h/syscall_c.h ****     uint64 a0;
  17:src/../h/syscall_c.h ****     uint64 a1;
  18:src/../h/syscall_c.h ****     uint64 a2;
  19:src/../h/syscall_c.h ****     uint64 a3;
  20:src/../h/syscall_c.h **** 
  21:src/../h/syscall_c.h **** };
  22:src/../h/syscall_c.h **** 
  23:src/../h/syscall_c.h **** void syscall(args* arg){
  12              		.loc 1 23 24
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  24:src/../h/syscall_c.h ****     //should prepare arguments in registers
  25:src/../h/syscall_c.h ****     //should call interrupt routine with ecall
  26:src/../h/syscall_c.h **** 
  27:src/../h/syscall_c.h **** 
  28:src/../h/syscall_c.h ****     uint64 arg0 = arg->a0;
  21              		.loc 1 28 5
  22              		.loc 1 28 12 is_stmt 0
  23 000c 03360500 		ld	a2,0(a0)
  24              	.LVL1:
  29:src/../h/syscall_c.h ****     uint64 arg1 = arg->a1;
  25              		.loc 1 29 5 is_stmt 1
  26              		.loc 1 29 12 is_stmt 0
  27 0010 83368500 		ld	a3,8(a0)
  28              	.LVL2:
  30:src/../h/syscall_c.h ****     uint64 arg2 = arg->a2;
GAS LISTING /tmp/cc1yNe5e.s 			page 2


  29              		.loc 1 30 5 is_stmt 1
  30              		.loc 1 30 12 is_stmt 0
  31 0014 03370501 		ld	a4,16(a0)
  32              	.LVL3:
  31:src/../h/syscall_c.h ****     uint64 arg3 = arg->a3;
  33              		.loc 1 31 5 is_stmt 1
  34              		.loc 1 31 12 is_stmt 0
  35 0018 83378501 		ld	a5,24(a0)
  36              	.LVL4:
  32:src/../h/syscall_c.h **** 
  33:src/../h/syscall_c.h ****     //lock this section?
  34:src/../h/syscall_c.h ****     __asm__ volatile("mv a0, %0" : : "r" (arg0));
  37              		.loc 1 34 5 is_stmt 1
  38              		.loc 1 34 49 is_stmt 0
  39              	#APP
  40              	# 34 "src/../h/syscall_c.h" 1
  35              	    __asm__ volatile("mv a1, %0" : : "r" (arg1));
  41              		mv a0, a2
  42              	# 0 "" 2
  43              		.loc 1 35 5 is_stmt 1
  44              		.loc 1 35 49 is_stmt 0
  45              	# 35 "src/../h/syscall_c.h" 1
  36              	    __asm__ volatile("mv a2, %0" : : "r" (arg2));
  46              		mv a1, a3
  47              	# 0 "" 2
  48              		.loc 1 36 5 is_stmt 1
  49              		.loc 1 36 49 is_stmt 0
  50              	# 36 "src/../h/syscall_c.h" 1
  37              	    __asm__ volatile("mv a3, %0" : : "r" (arg3));
  51              		mv a2, a4
  52              	# 0 "" 2
  53              		.loc 1 37 5 is_stmt 1
  54              		.loc 1 37 49 is_stmt 0
  55              	# 37 "src/../h/syscall_c.h" 1
  38              	
  39:src/../h/syscall_c.h **** 
  40:src/../h/syscall_c.h **** 
  41:src/../h/syscall_c.h **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  42:src/../h/syscall_c.h ****     __asm__ volatile ("ecall");
  56              		mv a3, a5
  57              	# 0 "" 2
  58              		.loc 1 42 5 is_stmt 1
  59              		.loc 1 42 31 is_stmt 0
  60              	# 42 "src/../h/syscall_c.h" 1
  43              	
  44:src/../h/syscall_c.h **** 
  45:src/../h/syscall_c.h **** }
  61              		ecall
  62              	# 0 "" 2
  63              		.loc 1 45 1
  64              	#NO_APP
  65 0030 03348100 		ld	s0,8(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 16
  68 0034 13010101 		addi	sp,sp,16
  69              		.cfi_def_cfa_offset 0
  70 0038 67800000 		jr	ra
GAS LISTING /tmp/cc1yNe5e.s 			page 3


  71              		.cfi_endproc
  72              	.LFE30:
  74              		.align	2
  75              		.globl	_Z9mem_allocm
  77              	_Z9mem_allocm:
  78              	.LFB31:
  46:src/../h/syscall_c.h **** 
  47:src/../h/syscall_c.h **** void* mem_alloc (size_t size){
  79              		.loc 1 47 30 is_stmt 1
  80              		.cfi_startproc
  81              	.LVL5:
  82 003c 130101FD 		addi	sp,sp,-48
  83              		.cfi_def_cfa_offset 48
  84 0040 23341102 		sd	ra,40(sp)
  85 0044 23308102 		sd	s0,32(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88 0048 13040103 		addi	s0,sp,48
  89              		.cfi_def_cfa 8, 0
  48:src/../h/syscall_c.h ****     //prepares parameters to arguments
  49:src/../h/syscall_c.h ****     //executes system call instruction
  50:src/../h/syscall_c.h ****     args arg;
  90              		.loc 1 50 5
  51:src/../h/syscall_c.h ****     arg.a0=0x01;
  91              		.loc 1 51 5
  92              		.loc 1 51 11 is_stmt 0
  93 004c 93071000 		li	a5,1
  94 0050 2338F4FC 		sd	a5,-48(s0)
  52:src/../h/syscall_c.h **** 
  53:src/../h/syscall_c.h ****     size_t blocks = size/MEM_BLOCK_SIZE;
  95              		.loc 1 53 5 is_stmt 1
  96              		.loc 1 53 12 is_stmt 0
  97 0054 93576500 		srli	a5,a0,6
  98              	.LVL6:
  54:src/../h/syscall_c.h ****     if(size%MEM_BLOCK_SIZE!=0)blocks++;
  99              		.loc 1 54 5 is_stmt 1
 100              		.loc 1 54 12 is_stmt 0
 101 0058 1375F503 		andi	a0,a0,63
 102              	.LVL7:
 103              		.loc 1 54 5
 104 005c 63040500 		beqz	a0,.L4
 105              		.loc 1 54 31 is_stmt 1 discriminator 1
 106              		.loc 1 54 37 is_stmt 0 discriminator 1
 107 0060 93871700 		addi	a5,a5,1
 108              	.LVL8:
 109              	.L4:
  55:src/../h/syscall_c.h ****     arg.a1=blocks;
 110              		.loc 1 55 5 is_stmt 1
 111              		.loc 1 55 11 is_stmt 0
 112 0064 233CF4FC 		sd	a5,-40(s0)
  56:src/../h/syscall_c.h **** 
  57:src/../h/syscall_c.h ****     syscall(&arg);
 113              		.loc 1 57 5 is_stmt 1
 114              		.loc 1 57 12 is_stmt 0
 115 0068 130504FD 		addi	a0,s0,-48
 116 006c 97000000 		call	_Z7syscallP4args
 116      E7800000 
GAS LISTING /tmp/cc1yNe5e.s 			page 4


 117              	.LVL9:
  58:src/../h/syscall_c.h **** 
  59:src/../h/syscall_c.h ****     uint64 ret;
 118              		.loc 1 59 5 is_stmt 1
  60:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 119              		.loc 1 60 5
 120              		.loc 1 60 47 is_stmt 0
 121              	#APP
 122              	# 60 "src/../h/syscall_c.h" 1
  61              	
 123              		mv a0, a0
 124              	# 0 "" 2
 125              	.LVL10:
  62:src/../h/syscall_c.h ****     return (void*)ret;
 126              		.loc 1 62 5 is_stmt 1
  63:src/../h/syscall_c.h **** }
 127              		.loc 1 63 1 is_stmt 0
 128              	#NO_APP
 129 0078 83308102 		ld	ra,40(sp)
 130              		.cfi_restore 1
 131 007c 03340102 		ld	s0,32(sp)
 132              		.cfi_restore 8
 133              		.cfi_def_cfa 2, 48
 134 0080 13010103 		addi	sp,sp,48
 135              		.cfi_def_cfa_offset 0
 136 0084 67800000 		jr	ra
 137              		.cfi_endproc
 138              	.LFE31:
 140              		.align	2
 141              		.globl	_Z8mem_freePv
 143              	_Z8mem_freePv:
 144              	.LFB32:
  64:src/../h/syscall_c.h **** 
  65:src/../h/syscall_c.h **** int mem_free (void* p){
 145              		.loc 1 65 23 is_stmt 1
 146              		.cfi_startproc
 147              	.LVL11:
 148 0088 130101FD 		addi	sp,sp,-48
 149              		.cfi_def_cfa_offset 48
 150 008c 23341102 		sd	ra,40(sp)
 151 0090 23308102 		sd	s0,32(sp)
 152              		.cfi_offset 1, -8
 153              		.cfi_offset 8, -16
 154 0094 13040103 		addi	s0,sp,48
 155              		.cfi_def_cfa 8, 0
  66:src/../h/syscall_c.h ****     args arg;
 156              		.loc 1 66 5
  67:src/../h/syscall_c.h ****     arg.a0=0x02;
 157              		.loc 1 67 5
 158              		.loc 1 67 11 is_stmt 0
 159 0098 93072000 		li	a5,2
 160 009c 2338F4FC 		sd	a5,-48(s0)
  68:src/../h/syscall_c.h ****     arg.a1=(uint64)p;
 161              		.loc 1 68 5 is_stmt 1
 162              		.loc 1 68 11 is_stmt 0
 163 00a0 233CA4FC 		sd	a0,-40(s0)
  69:src/../h/syscall_c.h **** 
GAS LISTING /tmp/cc1yNe5e.s 			page 5


  70:src/../h/syscall_c.h ****     syscall(&arg);
 164              		.loc 1 70 5 is_stmt 1
 165              		.loc 1 70 12 is_stmt 0
 166 00a4 130504FD 		addi	a0,s0,-48
 167              	.LVL12:
 168 00a8 97000000 		call	_Z7syscallP4args
 168      E7800000 
 169              	.LVL13:
  71:src/../h/syscall_c.h ****     uint64 ret;
 170              		.loc 1 71 5 is_stmt 1
  72:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 171              		.loc 1 72 5
 172              		.loc 1 72 47 is_stmt 0
 173              	#APP
 174              	# 72 "src/../h/syscall_c.h" 1
  73              	    return (int)ret;
 175              		mv a0, a0
 176              	# 0 "" 2
 177              	.LVL14:
 178              		.loc 1 73 5 is_stmt 1
  74:src/../h/syscall_c.h **** }
 179              		.loc 1 74 1 is_stmt 0
 180              	#NO_APP
 181 00b4 1B050500 		sext.w	a0,a0
 182              	.LVL15:
 183 00b8 83308102 		ld	ra,40(sp)
 184              		.cfi_restore 1
 185 00bc 03340102 		ld	s0,32(sp)
 186              		.cfi_restore 8
 187              		.cfi_def_cfa 2, 48
 188 00c0 13010103 		addi	sp,sp,48
 189              		.cfi_def_cfa_offset 0
 190 00c4 67800000 		jr	ra
 191              		.cfi_endproc
 192              	.LFE32:
 194              		.align	2
 195              		.globl	_Z13thread_createPP7_threadPFvPvES2_
 197              	_Z13thread_createPP7_threadPFvPvES2_:
 198              	.LFB33:
  75:src/../h/syscall_c.h **** 
  76:src/../h/syscall_c.h **** class _thread;
  77:src/../h/syscall_c.h **** typedef _thread* thread_t;  //thread_t je pokazivac, a handle je pokazivac na pokazivac tipa _threa
  78:src/../h/syscall_c.h **** int thread_create (
  79:src/../h/syscall_c.h ****         thread_t* handle,
  80:src/../h/syscall_c.h ****         void(*start_routine)(void*),
  81:src/../h/syscall_c.h ****         void* arg
  82:src/../h/syscall_c.h **** ){
 199              		.loc 1 82 2 is_stmt 1
 200              		.cfi_startproc
 201              	.LVL16:
 202 00c8 130101FD 		addi	sp,sp,-48
 203              		.cfi_def_cfa_offset 48
 204 00cc 23341102 		sd	ra,40(sp)
 205 00d0 23308102 		sd	s0,32(sp)
 206              		.cfi_offset 1, -8
 207              		.cfi_offset 8, -16
 208 00d4 13040103 		addi	s0,sp,48
GAS LISTING /tmp/cc1yNe5e.s 			page 6


 209              		.cfi_def_cfa 8, 0
  83:src/../h/syscall_c.h ****     args myArgs;
 210              		.loc 1 83 5
  84:src/../h/syscall_c.h ****     myArgs.a0=0x11;
 211              		.loc 1 84 5
 212              		.loc 1 84 14 is_stmt 0
 213 00d8 93071001 		li	a5,17
 214 00dc 2338F4FC 		sd	a5,-48(s0)
  85:src/../h/syscall_c.h ****     myArgs.a1=(uint64)handle;   //on address handle there is thread_t adress
 215              		.loc 1 85 5 is_stmt 1
 216              		.loc 1 85 14 is_stmt 0
 217 00e0 233CA4FC 		sd	a0,-40(s0)
  86:src/../h/syscall_c.h ****     myArgs.a2=(uint64)start_routine;
 218              		.loc 1 86 5 is_stmt 1
 219              		.loc 1 86 14 is_stmt 0
 220 00e4 2330B4FE 		sd	a1,-32(s0)
  87:src/../h/syscall_c.h ****     myArgs.a3=(uint64)arg;
 221              		.loc 1 87 5 is_stmt 1
 222              		.loc 1 87 14 is_stmt 0
 223 00e8 2334C4FE 		sd	a2,-24(s0)
  88:src/../h/syscall_c.h **** 
  89:src/../h/syscall_c.h ****     syscall(&myArgs);
 224              		.loc 1 89 5 is_stmt 1
 225              		.loc 1 89 12 is_stmt 0
 226 00ec 130504FD 		addi	a0,s0,-48
 227              	.LVL17:
 228 00f0 97000000 		call	_Z7syscallP4args
 228      E7800000 
 229              	.LVL18:
  90:src/../h/syscall_c.h ****     uint64* ret;
 230              		.loc 1 90 5 is_stmt 1
  91:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret)); //the ret value is future handle
 231              		.loc 1 91 5
 232              		.loc 1 91 47 is_stmt 0
 233              	#APP
 234              	# 91 "src/../h/syscall_c.h" 1
  92              	
 235              		mv a5, a0
 236              	# 0 "" 2
 237              	.LVL19:
  93:src/../h/syscall_c.h **** 
  94:src/../h/syscall_c.h ****     _thread* ptr = (_thread*)ret;
 238              		.loc 1 94 5 is_stmt 1
  95:src/../h/syscall_c.h ****     handle = &ptr;
 239              		.loc 1 95 5
  96:src/../h/syscall_c.h ****     return 0;
 240              		.loc 1 96 5
  97:src/../h/syscall_c.h **** 
  98:src/../h/syscall_c.h **** 
  99:src/../h/syscall_c.h **** }
 241              		.loc 1 99 1 is_stmt 0
 242              	#NO_APP
 243 00fc 13050000 		li	a0,0
 244 0100 83308102 		ld	ra,40(sp)
 245              		.cfi_restore 1
 246 0104 03340102 		ld	s0,32(sp)
 247              		.cfi_restore 8
GAS LISTING /tmp/cc1yNe5e.s 			page 7


 248              		.cfi_def_cfa 2, 48
 249 0108 13010103 		addi	sp,sp,48
 250              		.cfi_def_cfa_offset 0
 251 010c 67800000 		jr	ra
 252              		.cfi_endproc
 253              	.LFE33:
 255              		.align	2
 256              		.globl	_Z11thread_exitv
 258              	_Z11thread_exitv:
 259              	.LFB34:
 100:src/../h/syscall_c.h **** 
 101:src/../h/syscall_c.h **** int thread_exit (){
 260              		.loc 1 101 19 is_stmt 1
 261              		.cfi_startproc
 262 0110 130101FD 		addi	sp,sp,-48
 263              		.cfi_def_cfa_offset 48
 264 0114 23341102 		sd	ra,40(sp)
 265 0118 23308102 		sd	s0,32(sp)
 266              		.cfi_offset 1, -8
 267              		.cfi_offset 8, -16
 268 011c 13040103 		addi	s0,sp,48
 269              		.cfi_def_cfa 8, 0
 102:src/../h/syscall_c.h ****     args myArgs;
 270              		.loc 1 102 5
 103:src/../h/syscall_c.h ****     myArgs.a0=0x12;
 271              		.loc 1 103 5
 272              		.loc 1 103 14 is_stmt 0
 273 0120 93072001 		li	a5,18
 274 0124 2338F4FC 		sd	a5,-48(s0)
 104:src/../h/syscall_c.h **** 
 105:src/../h/syscall_c.h ****     syscall(&myArgs);
 275              		.loc 1 105 5 is_stmt 1
 276              		.loc 1 105 12 is_stmt 0
 277 0128 130504FD 		addi	a0,s0,-48
 278 012c 97000000 		call	_Z7syscallP4args
 278      E7800000 
 279              	.LVL20:
 106:src/../h/syscall_c.h **** 
 107:src/../h/syscall_c.h ****     return 0;
 280              		.loc 1 107 5 is_stmt 1
 108:src/../h/syscall_c.h **** }
 281              		.loc 1 108 1 is_stmt 0
 282 0134 13050000 		li	a0,0
 283 0138 83308102 		ld	ra,40(sp)
 284              		.cfi_restore 1
 285 013c 03340102 		ld	s0,32(sp)
 286              		.cfi_restore 8
 287              		.cfi_def_cfa 2, 48
 288 0140 13010103 		addi	sp,sp,48
 289              		.cfi_def_cfa_offset 0
 290 0144 67800000 		jr	ra
 291              		.cfi_endproc
 292              	.LFE34:
 294              		.align	2
 295              		.globl	_Z15thread_dispatchv
 297              	_Z15thread_dispatchv:
 298              	.LFB35:
GAS LISTING /tmp/cc1yNe5e.s 			page 8


 109:src/../h/syscall_c.h **** 
 110:src/../h/syscall_c.h **** 
 111:src/../h/syscall_c.h **** void thread_dispatch (){
 299              		.loc 1 111 24 is_stmt 1
 300              		.cfi_startproc
 301 0148 130101FD 		addi	sp,sp,-48
 302              		.cfi_def_cfa_offset 48
 303 014c 23341102 		sd	ra,40(sp)
 304 0150 23308102 		sd	s0,32(sp)
 305              		.cfi_offset 1, -8
 306              		.cfi_offset 8, -16
 307 0154 13040103 		addi	s0,sp,48
 308              		.cfi_def_cfa 8, 0
 112:src/../h/syscall_c.h ****     args myArgs;
 309              		.loc 1 112 5
 113:src/../h/syscall_c.h ****     myArgs.a0=0x13;
 310              		.loc 1 113 5
 311              		.loc 1 113 14 is_stmt 0
 312 0158 93073001 		li	a5,19
 313 015c 2338F4FC 		sd	a5,-48(s0)
 114:src/../h/syscall_c.h **** 
 115:src/../h/syscall_c.h ****     syscall(&myArgs);
 314              		.loc 1 115 5 is_stmt 1
 315              		.loc 1 115 12 is_stmt 0
 316 0160 130504FD 		addi	a0,s0,-48
 317 0164 97000000 		call	_Z7syscallP4args
 317      E7800000 
 318              	.LVL21:
 116:src/../h/syscall_c.h **** 
 117:src/../h/syscall_c.h **** 
 118:src/../h/syscall_c.h **** }
 319              		.loc 1 118 1
 320 016c 83308102 		ld	ra,40(sp)
 321              		.cfi_restore 1
 322 0170 03340102 		ld	s0,32(sp)
 323              		.cfi_restore 8
 324              		.cfi_def_cfa 2, 48
 325 0174 13010103 		addi	sp,sp,48
 326              		.cfi_def_cfa_offset 0
 327 0178 67800000 		jr	ra
 328              		.cfi_endproc
 329              	.LFE35:
 331              		.section	.rodata.str1.8,"aMS",@progbits,1
 332              		.align	3
 333              	.LC0:
 334 0000 74687265 		.string	"thread created \n"
 334      61642063 
 334      72656174 
 334      6564200A 
 334      00
 335 0011 00000000 		.align	3
 335      000000
 336              	.LC1:
 337 0018 6572726F 		.string	"error \n"
 337      72200A00 
 338              		.align	3
 339              	.LC2:
GAS LISTING /tmp/cc1yNe5e.s 			page 9


 340 0020 66696E69 		.string	"finished \n"
 340      73686564 
 340      200A00
 341              		.text
 342              		.align	2
 343              		.globl	main
 345              	main:
 346              	.LFB48:
 347              		.file 2 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** #include "../h/List.hpp"
   7:src/Main.cpp  **** #include "../h/syscall_c.h"
   8:src/Main.cpp  **** #include "../h/Print.hpp"
   9:src/Main.cpp  **** #include "../h/workers.hpp"
  10:src/Main.cpp  **** #include "../h/_thread.hpp"
  11:src/Main.cpp  **** 
  12:src/Main.cpp  **** int main(){
 348              		.loc 2 12 11 is_stmt 1
 349              		.cfi_startproc
 350 017c 130101FE 		addi	sp,sp,-32
 351              		.cfi_def_cfa_offset 32
 352 0180 233C1100 		sd	ra,24(sp)
 353 0184 23388100 		sd	s0,16(sp)
 354 0188 23349100 		sd	s1,8(sp)
 355 018c 23302101 		sd	s2,0(sp)
 356              		.cfi_offset 1, -8
 357              		.cfi_offset 8, -16
 358              		.cfi_offset 9, -24
 359              		.cfi_offset 18, -32
 360 0190 13040102 		addi	s0,sp,32
 361              		.cfi_def_cfa 8, 0
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** //    Riscv::w_stvec((uint64)&supervisorTrap);
  15:src/Main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  16:src/Main.cpp  **** //    __asm__ volatile ("ecall");
  17:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 362              		.loc 2 17 5
 363              		.loc 2 17 19 is_stmt 0
 364 0194 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 364      83B70700 
 365              	.LVL22:
 366              	.LBB8:
 367              	.LBB9:
 368              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc1yNe5e.s 			page 10


  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
GAS LISTING /tmp/cc1yNe5e.s 			page 11


  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
GAS LISTING /tmp/cc1yNe5e.s 			page 12


 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 369              		.loc 3 125 5 is_stmt 1
 370              		.loc 3 125 69 is_stmt 0
 371              	#APP
 372              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
 373              		csrw stvec, a5
 374              	# 0 "" 2
 375              	.LVL23:
 376              	#NO_APP
 377              	.LBE9:
 378              	.LBE8:
  18:src/Main.cpp  **** 
  19:src/Main.cpp  **** //    void* t1;
  20:src/Main.cpp  **** //    t1 = mem_alloc(300);
  21:src/Main.cpp  **** //    if(t1!=nullptr){
  22:src/Main.cpp  **** //        printString("allocated \n");
  23:src/Main.cpp  **** //    }
  24:src/Main.cpp  **** //    if(!mem_free(t1)){
  25:src/Main.cpp  **** //        printString("successfully freed \n");
  26:src/Main.cpp  **** //    }
  27:src/Main.cpp  **** //    else{
  28:src/Main.cpp  **** //        printString("not freed \n");
  29:src/Main.cpp  **** //    }
  30:src/Main.cpp  **** 
  31:src/Main.cpp  ****     _thread* main = _thread::createThread(nullptr, nullptr);
 379              		.loc 2 31 5 is_stmt 1
 380              		.loc 2 31 42 is_stmt 0
 381 01a0 93050000 		li	a1,0
 382 01a4 13050000 		li	a0,0
 383 01a8 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 383      E7800000 
 384              	.LVL24:
 385 01b0 93040500 		mv	s1,a0
 386              	.LVL25:
  32:src/Main.cpp  ****     main->start();
 387              		.loc 2 32 5 is_stmt 1
 388              		.loc 2 32 16 is_stmt 0
 389 01b4 97000000 		call	_ZN7_thread5startEv@plt
 389      E7800000 
 390              	.LVL26:
  33:src/Main.cpp  ****     _thread::running=main;
 391              		.loc 2 33 5 is_stmt 1
 392              		.loc 2 33 21 is_stmt 0
 393 01bc 97070000 		la	a5,_ZN7_thread7runningE
 393      83B70700 
 394 01c4 23B09700 		sd	s1,0(a5)
  34:src/Main.cpp  **** 
  35:src/Main.cpp  ****     _thread* t1 = _thread::createThread(workerBodyA, nullptr);
 395              		.loc 2 35 5 is_stmt 1
 396              		.loc 2 35 40 is_stmt 0
 397 01c8 93050000 		li	a1,0
 398 01cc 17050000 		la	a0,_Z11workerBodyAPv
 398      03350500 
 399 01d4 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 399      E7800000 
GAS LISTING /tmp/cc1yNe5e.s 			page 13


 400              	.LVL27:
 401 01dc 93040500 		mv	s1,a0
 402              	.LVL28:
  36:src/Main.cpp  ****     if(t1 != nullptr){
 403              		.loc 2 36 5 is_stmt 1
 404 01e0 630E0504 		beqz	a0,.L15
  37:src/Main.cpp  ****         printString("thread created \n");
 405              		.loc 2 37 9
 406              		.loc 2 37 20 is_stmt 0
 407 01e4 17050000 		lla	a0,.LC0
 407      13050500 
 408 01ec 97000000 		call	_Z11printStringPKc@plt
 408      E7800000 
 409              	.LVL29:
 410              	.L16:
  38:src/Main.cpp  ****     } else{
  39:src/Main.cpp  ****         printString("error \n");
  40:src/Main.cpp  ****     }
  41:src/Main.cpp  **** 
  42:src/Main.cpp  **** 
  43:src/Main.cpp  ****     t1->start();
 411              		.loc 2 43 5 is_stmt 1
 412              		.loc 2 43 14 is_stmt 0
 413 01f4 13850400 		mv	a0,s1
 414 01f8 97000000 		call	_ZN7_thread5startEv@plt
 414      E7800000 
 415              	.LVL30:
  44:src/Main.cpp  **** 
  45:src/Main.cpp  ****     _thread* t2 = _thread::createThread(workerBodyB, nullptr);
 416              		.loc 2 45 5 is_stmt 1
 417              		.loc 2 45 40 is_stmt 0
 418 0200 93050000 		li	a1,0
 419 0204 17050000 		la	a0,_Z11workerBodyBPv
 419      03350500 
 420 020c 97000000 		call	_ZN7_thread12createThreadEPFvPvES0_@plt
 420      E7800000 
 421              	.LVL31:
 422 0214 13090500 		mv	s2,a0
 423              	.LVL32:
  46:src/Main.cpp  ****     if(t2 != nullptr){
 424              		.loc 2 46 5 is_stmt 1
 425 0218 630C0502 		beqz	a0,.L17
  47:src/Main.cpp  ****         printString("thread created \n");
 426              		.loc 2 47 9
 427              		.loc 2 47 20 is_stmt 0
 428 021c 17050000 		lla	a0,.LC0
 428      13050500 
 429              	.LVL33:
 430 0224 97000000 		call	_Z11printStringPKc@plt
 430      E7800000 
 431              	.LVL34:
 432              	.L18:
  48:src/Main.cpp  ****     } else{
  49:src/Main.cpp  ****         printString("error \n");
  50:src/Main.cpp  ****     }
  51:src/Main.cpp  ****     t2->start();
 433              		.loc 2 51 5 is_stmt 1
GAS LISTING /tmp/cc1yNe5e.s 			page 14


 434              		.loc 2 51 14 is_stmt 0
 435 022c 13050900 		mv	a0,s2
 436 0230 97000000 		call	_ZN7_thread5startEv@plt
 436      E7800000 
 437              	.LVL35:
 438 0238 6F004003 		j	.L21
 439              	.LVL36:
 440              	.L15:
  39:src/Main.cpp  ****     }
 441              		.loc 2 39 9 is_stmt 1
  39:src/Main.cpp  ****     }
 442              		.loc 2 39 20 is_stmt 0
 443 023c 17050000 		lla	a0,.LC1
 443      13050500 
 444 0244 97000000 		call	_Z11printStringPKc@plt
 444      E7800000 
 445              	.LVL37:
 446 024c 6FF09FFA 		j	.L16
 447              	.LVL38:
 448              	.L17:
  49:src/Main.cpp  ****     }
 449              		.loc 2 49 9 is_stmt 1
  49:src/Main.cpp  ****     }
 450              		.loc 2 49 20 is_stmt 0
 451 0250 17050000 		lla	a0,.LC1
 451      13050500 
 452              	.LVL39:
 453 0258 97000000 		call	_Z11printStringPKc@plt
 453      E7800000 
 454              	.LVL40:
 455 0260 6FF0DFFC 		j	.L18
 456              	.L19:
  52:src/Main.cpp  **** 
  53:src/Main.cpp  **** //    thread_dispatch();
  54:src/Main.cpp  **** //    int ret = thread_exit();
  55:src/Main.cpp  **** //    if(!ret){
  56:src/Main.cpp  **** //        printString("thread exited");
  57:src/Main.cpp  **** //    }
  58:src/Main.cpp  **** 
  59:src/Main.cpp  ****     while(!(t1->isFinished() && t2->isFinished())){
  60:src/Main.cpp  ****         _thread::yield();
 457              		.loc 2 60 9 is_stmt 1 discriminator 3
 458              		.loc 2 60 23 is_stmt 0 discriminator 3
 459 0264 97000000 		call	_ZN7_thread5yieldEv@plt
 459      E7800000 
 460              	.LVL41:
 461              	.L21:
  59:src/Main.cpp  ****         _thread::yield();
 462              		.loc 2 59 5 is_stmt 1
  59:src/Main.cpp  ****         _thread::yield();
 463              		.loc 2 59 11
 464              	.LBB10:
 465              	.LBB11:
 466              		.file 4 "src/../h/_thread.hpp"
   1:src/../h/_thread.hpp **** //
   2:src/../h/_thread.hpp **** // Created by os on 6/20/22.
   3:src/../h/_thread.hpp **** //
GAS LISTING /tmp/cc1yNe5e.s 			page 15


   4:src/../h/_thread.hpp **** 
   5:src/../h/_thread.hpp **** #ifndef PROJECT_BASE_V1_1__THREAD_HPP
   6:src/../h/_thread.hpp **** #define PROJECT_BASE_V1_1__THREAD_HPP
   7:src/../h/_thread.hpp **** 
   8:src/../h/_thread.hpp **** #include "../lib/hw.h"
   9:src/../h/_thread.hpp **** #include "Scheduler.hpp"
  10:src/../h/_thread.hpp **** #include "MemoryAllocator.hpp"
  11:src/../h/_thread.hpp **** 
  12:src/../h/_thread.hpp **** class _thread {
  13:src/../h/_thread.hpp **** public:
  14:src/../h/_thread.hpp ****     ~_thread() {
  15:src/../h/_thread.hpp ****         MemoryAllocator::kmem_free(stack);
  16:src/../h/_thread.hpp ****     }
  17:src/../h/_thread.hpp **** 
  18:src/../h/_thread.hpp ****     bool isFinished() const { return finished; }
 467              		.loc 4 18 31
 468              		.loc 4 18 38 is_stmt 0
 469 026c 83C78402 		lbu	a5,40(s1)
 470              	.LVL42:
 471              	.LBE11:
 472              	.LBE10:
  59:src/Main.cpp  ****         _thread::yield();
 473              		.loc 2 59 11
 474 0270 E38A07FE 		beqz	a5,.L19
 475              	.LVL43:
 476              	.LBB12:
 477              	.LBB13:
 478              		.loc 4 18 31 is_stmt 1
 479              		.loc 4 18 38 is_stmt 0
 480 0274 83478902 		lbu	a5,40(s2)
 481              	.LVL44:
 482              	.LBE13:
 483              	.LBE12:
  59:src/Main.cpp  ****         _thread::yield();
 484              		.loc 2 59 11
 485 0278 E38607FE 		beqz	a5,.L19
  61:src/Main.cpp  ****     }
  62:src/Main.cpp  **** 
  63:src/Main.cpp  ****     //memory leak without delete
  64:src/Main.cpp  **** //    delete main;
  65:src/Main.cpp  **** //    delete t1;
  66:src/Main.cpp  **** //    delete t2;
  67:src/Main.cpp  **** 
  68:src/Main.cpp  ****     printString("finished \n");
 486              		.loc 2 68 5 is_stmt 1
 487              		.loc 2 68 16 is_stmt 0
 488 027c 17050000 		lla	a0,.LC2
 488      13050500 
 489 0284 97000000 		call	_Z11printStringPKc@plt
 489      E7800000 
 490              	.LVL45:
  69:src/Main.cpp  **** 
  70:src/Main.cpp  ****     return 0;
 491              		.loc 2 70 5 is_stmt 1
  71:src/Main.cpp  **** }
 492              		.loc 2 71 1 is_stmt 0
 493 028c 13050000 		li	a0,0
GAS LISTING /tmp/cc1yNe5e.s 			page 16


 494 0290 83308101 		ld	ra,24(sp)
 495              		.cfi_restore 1
 496 0294 03340101 		ld	s0,16(sp)
 497              		.cfi_restore 8
 498              		.cfi_def_cfa 2, 32
 499 0298 83348100 		ld	s1,8(sp)
 500              		.cfi_restore 9
 501              	.LVL46:
 502 029c 03390100 		ld	s2,0(sp)
 503              		.cfi_restore 18
 504              	.LVL47:
 505 02a0 13010102 		addi	sp,sp,32
 506              		.cfi_def_cfa_offset 0
 507 02a4 67800000 		jr	ra
 508              		.cfi_endproc
 509              	.LFE48:
 511              	.Letext0:
 512              		.file 5 "src/../h/../lib/hw.h"
 513              		.file 6 "src/../h/Print.hpp"
GAS LISTING /tmp/cc1yNe5e.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/cc1yNe5e.s:9      .text:0000000000000000 _Z7syscallP4args
     /tmp/cc1yNe5e.s:13     .text:0000000000000000 .L0 
     /tmp/cc1yNe5e.s:15     .text:0000000000000000 .L0 
     /tmp/cc1yNe5e.s:16     .text:0000000000000004 .L0 
     /tmp/cc1yNe5e.s:18     .text:0000000000000008 .L0 
     /tmp/cc1yNe5e.s:20     .text:000000000000000c .L0 
     /tmp/cc1yNe5e.s:22     .text:000000000000000c .L0 
     /tmp/cc1yNe5e.s:23     .text:000000000000000c .L0 
     /tmp/cc1yNe5e.s:26     .text:0000000000000010 .L0 
     /tmp/cc1yNe5e.s:27     .text:0000000000000010 .L0 
     /tmp/cc1yNe5e.s:30     .text:0000000000000014 .L0 
     /tmp/cc1yNe5e.s:31     .text:0000000000000014 .L0 
     /tmp/cc1yNe5e.s:34     .text:0000000000000018 .L0 
     /tmp/cc1yNe5e.s:35     .text:0000000000000018 .L0 
     /tmp/cc1yNe5e.s:38     .text:000000000000001c .L0 
src/../h/syscall_c.h:34     .text:000000000000001c .L0 
     /tmp/cc1yNe5e.s:44     .text:0000000000000020 .L0 
src/../h/syscall_c.h:35     .text:0000000000000020 .L0 
     /tmp/cc1yNe5e.s:49     .text:0000000000000024 .L0 
src/../h/syscall_c.h:36     .text:0000000000000024 .L0 
     /tmp/cc1yNe5e.s:54     .text:0000000000000028 .L0 
src/../h/syscall_c.h:37     .text:0000000000000028 .L0 
     /tmp/cc1yNe5e.s:59     .text:000000000000002c .L0 
src/../h/syscall_c.h:42     .text:000000000000002c .L0 
     /tmp/cc1yNe5e.s:65     .text:0000000000000030 .L0 
     /tmp/cc1yNe5e.s:66     .text:0000000000000034 .L0 
     /tmp/cc1yNe5e.s:67     .text:0000000000000034 .L0 
     /tmp/cc1yNe5e.s:69     .text:0000000000000038 .L0 
     /tmp/cc1yNe5e.s:71     .text:000000000000003c .L0 
     /tmp/cc1yNe5e.s:77     .text:000000000000003c _Z9mem_allocm
     /tmp/cc1yNe5e.s:80     .text:000000000000003c .L0 
     /tmp/cc1yNe5e.s:82     .text:000000000000003c .L0 
     /tmp/cc1yNe5e.s:83     .text:0000000000000040 .L0 
     /tmp/cc1yNe5e.s:86     .text:0000000000000048 .L0 
     /tmp/cc1yNe5e.s:87     .text:0000000000000048 .L0 
     /tmp/cc1yNe5e.s:89     .text:000000000000004c .L0 
     /tmp/cc1yNe5e.s:91     .text:000000000000004c .L0 
     /tmp/cc1yNe5e.s:92     .text:000000000000004c .L0 
     /tmp/cc1yNe5e.s:93     .text:000000000000004c .L0 
     /tmp/cc1yNe5e.s:96     .text:0000000000000054 .L0 
     /tmp/cc1yNe5e.s:97     .text:0000000000000054 .L0 
     /tmp/cc1yNe5e.s:100    .text:0000000000000058 .L0 
     /tmp/cc1yNe5e.s:101    .text:0000000000000058 .L0 
     /tmp/cc1yNe5e.s:104    .text:000000000000005c .L0 
     /tmp/cc1yNe5e.s:106    .text:0000000000000060 .L0 
     /tmp/cc1yNe5e.s:107    .text:0000000000000060 .L0 
     /tmp/cc1yNe5e.s:111    .text:0000000000000064 .L0 
     /tmp/cc1yNe5e.s:112    .text:0000000000000064 .L0 
     /tmp/cc1yNe5e.s:114    .text:0000000000000068 .L0 
     /tmp/cc1yNe5e.s:115    .text:0000000000000068 .L0 
     /tmp/cc1yNe5e.s:119    .text:0000000000000074 .L0 
     /tmp/cc1yNe5e.s:120    .text:0000000000000074 .L0 
src/../h/syscall_c.h:60     .text:0000000000000074 .L0 
     /tmp/cc1yNe5e.s:127    .text:0000000000000078 .L0 
     /tmp/cc1yNe5e.s:129    .text:0000000000000078 .L0 
GAS LISTING /tmp/cc1yNe5e.s 			page 18


     /tmp/cc1yNe5e.s:130    .text:000000000000007c .L0 
     /tmp/cc1yNe5e.s:132    .text:0000000000000080 .L0 
     /tmp/cc1yNe5e.s:133    .text:0000000000000080 .L0 
     /tmp/cc1yNe5e.s:135    .text:0000000000000084 .L0 
     /tmp/cc1yNe5e.s:137    .text:0000000000000088 .L0 
     /tmp/cc1yNe5e.s:143    .text:0000000000000088 _Z8mem_freePv
     /tmp/cc1yNe5e.s:146    .text:0000000000000088 .L0 
     /tmp/cc1yNe5e.s:148    .text:0000000000000088 .L0 
     /tmp/cc1yNe5e.s:149    .text:000000000000008c .L0 
     /tmp/cc1yNe5e.s:152    .text:0000000000000094 .L0 
     /tmp/cc1yNe5e.s:153    .text:0000000000000094 .L0 
     /tmp/cc1yNe5e.s:155    .text:0000000000000098 .L0 
     /tmp/cc1yNe5e.s:157    .text:0000000000000098 .L0 
     /tmp/cc1yNe5e.s:158    .text:0000000000000098 .L0 
     /tmp/cc1yNe5e.s:159    .text:0000000000000098 .L0 
     /tmp/cc1yNe5e.s:162    .text:00000000000000a0 .L0 
     /tmp/cc1yNe5e.s:163    .text:00000000000000a0 .L0 
     /tmp/cc1yNe5e.s:165    .text:00000000000000a4 .L0 
     /tmp/cc1yNe5e.s:166    .text:00000000000000a4 .L0 
     /tmp/cc1yNe5e.s:171    .text:00000000000000b0 .L0 
     /tmp/cc1yNe5e.s:172    .text:00000000000000b0 .L0 
src/../h/syscall_c.h:72     .text:00000000000000b0 .L0 
     /tmp/cc1yNe5e.s:179    .text:00000000000000b4 .L0 
     /tmp/cc1yNe5e.s:181    .text:00000000000000b4 .L0 
     /tmp/cc1yNe5e.s:184    .text:00000000000000bc .L0 
     /tmp/cc1yNe5e.s:186    .text:00000000000000c0 .L0 
     /tmp/cc1yNe5e.s:187    .text:00000000000000c0 .L0 
     /tmp/cc1yNe5e.s:189    .text:00000000000000c4 .L0 
     /tmp/cc1yNe5e.s:191    .text:00000000000000c8 .L0 
     /tmp/cc1yNe5e.s:197    .text:00000000000000c8 _Z13thread_createPP7_threadPFvPvES2_
     /tmp/cc1yNe5e.s:200    .text:00000000000000c8 .L0 
     /tmp/cc1yNe5e.s:202    .text:00000000000000c8 .L0 
     /tmp/cc1yNe5e.s:203    .text:00000000000000cc .L0 
     /tmp/cc1yNe5e.s:206    .text:00000000000000d4 .L0 
     /tmp/cc1yNe5e.s:207    .text:00000000000000d4 .L0 
     /tmp/cc1yNe5e.s:209    .text:00000000000000d8 .L0 
     /tmp/cc1yNe5e.s:211    .text:00000000000000d8 .L0 
     /tmp/cc1yNe5e.s:212    .text:00000000000000d8 .L0 
     /tmp/cc1yNe5e.s:213    .text:00000000000000d8 .L0 
     /tmp/cc1yNe5e.s:216    .text:00000000000000e0 .L0 
     /tmp/cc1yNe5e.s:217    .text:00000000000000e0 .L0 
     /tmp/cc1yNe5e.s:219    .text:00000000000000e4 .L0 
     /tmp/cc1yNe5e.s:220    .text:00000000000000e4 .L0 
     /tmp/cc1yNe5e.s:222    .text:00000000000000e8 .L0 
     /tmp/cc1yNe5e.s:223    .text:00000000000000e8 .L0 
     /tmp/cc1yNe5e.s:225    .text:00000000000000ec .L0 
     /tmp/cc1yNe5e.s:226    .text:00000000000000ec .L0 
     /tmp/cc1yNe5e.s:231    .text:00000000000000f8 .L0 
     /tmp/cc1yNe5e.s:232    .text:00000000000000f8 .L0 
src/../h/syscall_c.h:91     .text:00000000000000f8 .L0 
     /tmp/cc1yNe5e.s:239    .text:00000000000000fc .L0 
     /tmp/cc1yNe5e.s:240    .text:00000000000000fc .L0 
     /tmp/cc1yNe5e.s:241    .text:00000000000000fc .L0 
     /tmp/cc1yNe5e.s:243    .text:00000000000000fc .L0 
     /tmp/cc1yNe5e.s:245    .text:0000000000000104 .L0 
     /tmp/cc1yNe5e.s:247    .text:0000000000000108 .L0 
     /tmp/cc1yNe5e.s:248    .text:0000000000000108 .L0 
GAS LISTING /tmp/cc1yNe5e.s 			page 19


     /tmp/cc1yNe5e.s:250    .text:000000000000010c .L0 
     /tmp/cc1yNe5e.s:252    .text:0000000000000110 .L0 
     /tmp/cc1yNe5e.s:258    .text:0000000000000110 _Z11thread_exitv
     /tmp/cc1yNe5e.s:261    .text:0000000000000110 .L0 
     /tmp/cc1yNe5e.s:262    .text:0000000000000110 .L0 
     /tmp/cc1yNe5e.s:263    .text:0000000000000114 .L0 
     /tmp/cc1yNe5e.s:266    .text:000000000000011c .L0 
     /tmp/cc1yNe5e.s:267    .text:000000000000011c .L0 
     /tmp/cc1yNe5e.s:269    .text:0000000000000120 .L0 
     /tmp/cc1yNe5e.s:271    .text:0000000000000120 .L0 
     /tmp/cc1yNe5e.s:272    .text:0000000000000120 .L0 
     /tmp/cc1yNe5e.s:273    .text:0000000000000120 .L0 
     /tmp/cc1yNe5e.s:276    .text:0000000000000128 .L0 
     /tmp/cc1yNe5e.s:277    .text:0000000000000128 .L0 
     /tmp/cc1yNe5e.s:281    .text:0000000000000134 .L0 
     /tmp/cc1yNe5e.s:282    .text:0000000000000134 .L0 
     /tmp/cc1yNe5e.s:284    .text:000000000000013c .L0 
     /tmp/cc1yNe5e.s:286    .text:0000000000000140 .L0 
     /tmp/cc1yNe5e.s:287    .text:0000000000000140 .L0 
     /tmp/cc1yNe5e.s:289    .text:0000000000000144 .L0 
     /tmp/cc1yNe5e.s:291    .text:0000000000000148 .L0 
     /tmp/cc1yNe5e.s:297    .text:0000000000000148 _Z15thread_dispatchv
     /tmp/cc1yNe5e.s:300    .text:0000000000000148 .L0 
     /tmp/cc1yNe5e.s:301    .text:0000000000000148 .L0 
     /tmp/cc1yNe5e.s:302    .text:000000000000014c .L0 
     /tmp/cc1yNe5e.s:305    .text:0000000000000154 .L0 
     /tmp/cc1yNe5e.s:306    .text:0000000000000154 .L0 
     /tmp/cc1yNe5e.s:308    .text:0000000000000158 .L0 
     /tmp/cc1yNe5e.s:310    .text:0000000000000158 .L0 
     /tmp/cc1yNe5e.s:311    .text:0000000000000158 .L0 
     /tmp/cc1yNe5e.s:312    .text:0000000000000158 .L0 
     /tmp/cc1yNe5e.s:315    .text:0000000000000160 .L0 
     /tmp/cc1yNe5e.s:316    .text:0000000000000160 .L0 
     /tmp/cc1yNe5e.s:320    .text:000000000000016c .L0 
     /tmp/cc1yNe5e.s:321    .text:0000000000000170 .L0 
     /tmp/cc1yNe5e.s:323    .text:0000000000000174 .L0 
     /tmp/cc1yNe5e.s:324    .text:0000000000000174 .L0 
     /tmp/cc1yNe5e.s:326    .text:0000000000000178 .L0 
     /tmp/cc1yNe5e.s:328    .text:000000000000017c .L0 
     /tmp/cc1yNe5e.s:345    .text:000000000000017c main
     /tmp/cc1yNe5e.s:349    .text:000000000000017c .L0 
     /tmp/cc1yNe5e.s:350    .text:000000000000017c .L0 
     /tmp/cc1yNe5e.s:351    .text:0000000000000180 .L0 
     /tmp/cc1yNe5e.s:356    .text:0000000000000190 .L0 
     /tmp/cc1yNe5e.s:357    .text:0000000000000190 .L0 
     /tmp/cc1yNe5e.s:358    .text:0000000000000190 .L0 
     /tmp/cc1yNe5e.s:359    .text:0000000000000190 .L0 
     /tmp/cc1yNe5e.s:361    .text:0000000000000194 .L0 
     /tmp/cc1yNe5e.s:363    .text:0000000000000194 .L0 
     /tmp/cc1yNe5e.s:364    .text:0000000000000194 .L0 
     /tmp/cc1yNe5e.s:370    .text:000000000000019c .L0 
  src/../h/Riscv.hpp:125    .text:000000000000019c .L0 
     /tmp/cc1yNe5e.s:380    .text:00000000000001a0 .L0 
     /tmp/cc1yNe5e.s:381    .text:00000000000001a0 .L0 
     /tmp/cc1yNe5e.s:388    .text:00000000000001b4 .L0 
     /tmp/cc1yNe5e.s:389    .text:00000000000001b4 .L0 
     /tmp/cc1yNe5e.s:392    .text:00000000000001bc .L0 
GAS LISTING /tmp/cc1yNe5e.s 			page 20


     /tmp/cc1yNe5e.s:393    .text:00000000000001bc .L0 
     /tmp/cc1yNe5e.s:396    .text:00000000000001c8 .L0 
     /tmp/cc1yNe5e.s:397    .text:00000000000001c8 .L0 
     /tmp/cc1yNe5e.s:404    .text:00000000000001e0 .L0 
     /tmp/cc1yNe5e.s:406    .text:00000000000001e4 .L0 
     /tmp/cc1yNe5e.s:407    .text:00000000000001e4 .L0 
     /tmp/cc1yNe5e.s:412    .text:00000000000001f4 .L0 
     /tmp/cc1yNe5e.s:413    .text:00000000000001f4 .L0 
     /tmp/cc1yNe5e.s:417    .text:0000000000000200 .L0 
     /tmp/cc1yNe5e.s:418    .text:0000000000000200 .L0 
     /tmp/cc1yNe5e.s:425    .text:0000000000000218 .L0 
     /tmp/cc1yNe5e.s:427    .text:000000000000021c .L0 
     /tmp/cc1yNe5e.s:428    .text:000000000000021c .L0 
     /tmp/cc1yNe5e.s:434    .text:000000000000022c .L0 
     /tmp/cc1yNe5e.s:435    .text:000000000000022c .L0 
     /tmp/cc1yNe5e.s:442    .text:000000000000023c .L0 
     /tmp/cc1yNe5e.s:443    .text:000000000000023c .L0 
     /tmp/cc1yNe5e.s:450    .text:0000000000000250 .L0 
     /tmp/cc1yNe5e.s:451    .text:0000000000000250 .L0 
     /tmp/cc1yNe5e.s:458    .text:0000000000000264 .L0 
     /tmp/cc1yNe5e.s:459    .text:0000000000000264 .L0 
     /tmp/cc1yNe5e.s:463    .text:000000000000026c .L0 
     /tmp/cc1yNe5e.s:467    .text:000000000000026c .L0 
     /tmp/cc1yNe5e.s:468    .text:000000000000026c .L0 
     /tmp/cc1yNe5e.s:469    .text:000000000000026c .L0 
     /tmp/cc1yNe5e.s:474    .text:0000000000000270 .L0 
     /tmp/cc1yNe5e.s:479    .text:0000000000000274 .L0 
     /tmp/cc1yNe5e.s:480    .text:0000000000000274 .L0 
     /tmp/cc1yNe5e.s:485    .text:0000000000000278 .L0 
     /tmp/cc1yNe5e.s:487    .text:000000000000027c .L0 
     /tmp/cc1yNe5e.s:488    .text:000000000000027c .L0 
     /tmp/cc1yNe5e.s:492    .text:000000000000028c .L0 
     /tmp/cc1yNe5e.s:493    .text:000000000000028c .L0 
     /tmp/cc1yNe5e.s:495    .text:0000000000000294 .L0 
     /tmp/cc1yNe5e.s:497    .text:0000000000000298 .L0 
     /tmp/cc1yNe5e.s:498    .text:0000000000000298 .L0 
     /tmp/cc1yNe5e.s:500    .text:000000000000029c .L0 
     /tmp/cc1yNe5e.s:503    .text:00000000000002a0 .L0 
     /tmp/cc1yNe5e.s:506    .text:00000000000002a4 .L0 
     /tmp/cc1yNe5e.s:508    .text:00000000000002a8 .L0 
     /tmp/cc1yNe5e.s:514    .text:00000000000002a8 .L0 
     /tmp/cc1yNe5e.s:364    .text:0000000000000194 .L0 
     /tmp/cc1yNe5e.s:393    .text:00000000000001bc .L0 
     /tmp/cc1yNe5e.s:398    .text:00000000000001cc .L0 
     /tmp/cc1yNe5e.s:333    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc1yNe5e.s:407    .text:00000000000001e4 .L0 
     /tmp/cc1yNe5e.s:419    .text:0000000000000204 .L0 
     /tmp/cc1yNe5e.s:428    .text:000000000000021c .L0 
     /tmp/cc1yNe5e.s:336    .rodata.str1.8:0000000000000018 .LC1
     /tmp/cc1yNe5e.s:443    .text:000000000000023c .L0 
     /tmp/cc1yNe5e.s:451    .text:0000000000000250 .L0 
     /tmp/cc1yNe5e.s:339    .rodata.str1.8:0000000000000020 .LC2
     /tmp/cc1yNe5e.s:488    .text:000000000000027c .L0 
     /tmp/cc1yNe5e.s:109    .text:0000000000000064 .L4
     /tmp/cc1yNe5e.s:440    .text:000000000000023c .L15
     /tmp/cc1yNe5e.s:448    .text:0000000000000250 .L17
     /tmp/cc1yNe5e.s:461    .text:000000000000026c .L21
GAS LISTING /tmp/cc1yNe5e.s 			page 21


     /tmp/cc1yNe5e.s:410    .text:00000000000001f4 .L16
     /tmp/cc1yNe5e.s:432    .text:000000000000022c .L18
     /tmp/cc1yNe5e.s:456    .text:0000000000000264 .L19
     /tmp/cc1yNe5e.s:1743   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc1yNe5e.s:3013   .debug_str:0000000000000616 .LASF127
     /tmp/cc1yNe5e.s:2991   .debug_str:00000000000005a5 .LASF128
     /tmp/cc1yNe5e.s:2915   .debug_str:0000000000000322 .LASF129
     /tmp/cc1yNe5e.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc1yNe5e.s:511    .text:00000000000002a8 .Letext0
     /tmp/cc1yNe5e.s:2803   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc1yNe5e.s:2877   .debug_str:0000000000000202 .LASF0
     /tmp/cc1yNe5e.s:2901   .debug_str:00000000000002da .LASF1
     /tmp/cc1yNe5e.s:2967   .debug_str:00000000000004d6 .LASF2
     /tmp/cc1yNe5e.s:2973   .debug_str:0000000000000517 .LASF4
     /tmp/cc1yNe5e.s:2883   .debug_str:0000000000000229 .LASF3
     /tmp/cc1yNe5e.s:2811   .debug_str:0000000000000026 .LASF5
     /tmp/cc1yNe5e.s:2937   .debug_str:00000000000003e6 .LASF6
     /tmp/cc1yNe5e.s:2891   .debug_str:0000000000000291 .LASF7
     /tmp/cc1yNe5e.s:2861   .debug_str:000000000000017c .LASF8
     /tmp/cc1yNe5e.s:2865   .debug_str:00000000000001a8 .LASF9
     /tmp/cc1yNe5e.s:2833   .debug_str:00000000000000bf .LASF10
     /tmp/cc1yNe5e.s:2853   .debug_str:000000000000015a .LASF11
     /tmp/cc1yNe5e.s:2839   .debug_str:00000000000000ee .LASF12
     /tmp/cc1yNe5e.s:2831   .debug_str:00000000000000af .LASF13
     /tmp/cc1yNe5e.s:2999   .debug_str:00000000000005cd .LASF14
     /tmp/cc1yNe5e.s:2851   .debug_str:0000000000000144 .LASF15
     /tmp/cc1yNe5e.s:2987   .debug_str:000000000000057e .LASF16
     /tmp/cc1yNe5e.s:3055   .debug_str:00000000000007ea .LASF58
     /tmp/cc1yNe5e.s:2869   .debug_str:00000000000001c4 .LASF49
     /tmp/cc1yNe5e.s:2875   .debug_str:00000000000001ea .LASF51
     /tmp/cc1yNe5e.s:3039   .debug_str:0000000000000784 .LASF17
     /tmp/cc1yNe5e.s:3027   .debug_str:0000000000000737 .LASF19
     /tmp/cc1yNe5e.s:2963   .debug_str:00000000000004c2 .LASF21
     /tmp/cc1yNe5e.s:2931   .debug_str:00000000000003bb .LASF23
     /tmp/cc1yNe5e.s:2945   .debug_str:0000000000000435 .LASF18
     /tmp/cc1yNe5e.s:2947   .debug_str:000000000000043c .LASF20
     /tmp/cc1yNe5e.s:2927   .debug_str:00000000000003a0 .LASF22
     /tmp/cc1yNe5e.s:2893   .debug_str:00000000000002a4 .LASF24
     /tmp/cc1yNe5e.s:3063   .debug_str:000000000000082e .LASF25
     /tmp/cc1yNe5e.s:3017   .debug_str:00000000000006eb .LASF26
     /tmp/cc1yNe5e.s:2923   .debug_str:0000000000000384 .LASF27
     /tmp/cc1yNe5e.s:2929   .debug_str:00000000000003a7 .LASF28
     /tmp/cc1yNe5e.s:2907   .debug_str:0000000000000300 .LASF29
     /tmp/cc1yNe5e.s:2951   .debug_str:000000000000045f .LASF30
     /tmp/cc1yNe5e.s:3081   .debug_str:0000000000000896 .LASF31
     /tmp/cc1yNe5e.s:2881   .debug_str:0000000000000215 .LASF32
     /tmp/cc1yNe5e.s:2995   .debug_str:00000000000005b9 .LASF33
     /tmp/cc1yNe5e.s:2975   .debug_str:000000000000051e .LASF34
     /tmp/cc1yNe5e.s:2977   .debug_str:0000000000000531 .LASF35
     /tmp/cc1yNe5e.s:2835   .debug_str:00000000000000ce .LASF36
     /tmp/cc1yNe5e.s:2849   .debug_str:000000000000013e .LASF37
     /tmp/cc1yNe5e.s:2871   .debug_str:00000000000001cf .LASF38
     /tmp/cc1yNe5e.s:2879   .debug_str:000000000000020f .LASF39
     /tmp/cc1yNe5e.s:2845   .debug_str:0000000000000123 .LASF40
     /tmp/cc1yNe5e.s:2813   .debug_str:000000000000002d .LASF41
     /tmp/cc1yNe5e.s:2969   .debug_str:00000000000004e4 .LASF42
     /tmp/cc1yNe5e.s:2965   .debug_str:00000000000004cb .LASF43
GAS LISTING /tmp/cc1yNe5e.s 			page 22


     /tmp/cc1yNe5e.s:3077   .debug_str:0000000000000871 .LASF44
     /tmp/cc1yNe5e.s:3057   .debug_str:00000000000007f0 .LASF45
     /tmp/cc1yNe5e.s:3067   .debug_str:000000000000083d .LASF46
     /tmp/cc1yNe5e.s:3053   .debug_str:00000000000007e0 .LASF47
     /tmp/cc1yNe5e.s:2917   .debug_str:0000000000000352 .LASF48
     /tmp/cc1yNe5e.s:3061   .debug_str:000000000000081f .LASF50
     /tmp/cc1yNe5e.s:2863   .debug_str:000000000000018c .LASF52
     /tmp/cc1yNe5e.s:2941   .debug_str:000000000000040c .LASF53
     /tmp/cc1yNe5e.s:2887   .debug_str:0000000000000267 .LASF55
     /tmp/cc1yNe5e.s:2959   .debug_str:00000000000004a3 .LASF54
     /tmp/cc1yNe5e.s:2979   .debug_str:0000000000000538 .LASF56
     /tmp/cc1yNe5e.s:3075   .debug_str:000000000000086c .LASF63
     /tmp/cc1yNe5e.s:3051   .debug_str:00000000000007d7 .LASF57
     /tmp/cc1yNe5e.s:2815   .debug_str:0000000000000038 .LASF59
     /tmp/cc1yNe5e.s:3071   .debug_str:000000000000085f .LASF130
     /tmp/cc1yNe5e.s:2827   .debug_str:000000000000008c .LASF60
     /tmp/cc1yNe5e.s:2819   .debug_str:000000000000004c .LASF61
     /tmp/cc1yNe5e.s:2911   .debug_str:000000000000030e .LASF62
     /tmp/cc1yNe5e.s:3007   .debug_str:00000000000005fb .LASF64
     /tmp/cc1yNe5e.s:3001   .debug_str:00000000000005d9 .LASF65
     /tmp/cc1yNe5e.s:2895   .debug_str:00000000000002b7 .LASF67
     /tmp/cc1yNe5e.s:3009   .debug_str:0000000000000603 .LASF69
     /tmp/cc1yNe5e.s:2971   .debug_str:00000000000004fc .LASF71
     /tmp/cc1yNe5e.s:2817   .debug_str:0000000000000040 .LASF66
     /tmp/cc1yNe5e.s:3047   .debug_str:00000000000007b5 .LASF68
     /tmp/cc1yNe5e.s:2905   .debug_str:00000000000002f3 .LASF70
     /tmp/cc1yNe5e.s:2829   .debug_str:0000000000000092 .LASF72
     /tmp/cc1yNe5e.s:2997   .debug_str:00000000000005c0 .LASF73
     /tmp/cc1yNe5e.s:3037   .debug_str:0000000000000760 .LASF74
     /tmp/cc1yNe5e.s:2935   .debug_str:00000000000003e1 .LASF131
     /tmp/cc1yNe5e.s:2903   .debug_str:00000000000002ed .LASF75
     /tmp/cc1yNe5e.s:2925   .debug_str:000000000000038c .LASF76
     /tmp/cc1yNe5e.s:3073   .debug_str:0000000000000866 .LASF77
     /tmp/cc1yNe5e.s:2943   .debug_str:0000000000000421 .LASF78
     /tmp/cc1yNe5e.s:3011   .debug_str:000000000000060e .LASF132
     /tmp/cc1yNe5e.s:3043   .debug_str:000000000000079b .LASF79
     /tmp/cc1yNe5e.s:3045   .debug_str:00000000000007a1 .LASF80
     /tmp/cc1yNe5e.s:2837   .debug_str:00000000000000e1 .LASF81
     /tmp/cc1yNe5e.s:3023   .debug_str:0000000000000713 .LASF82
     /tmp/cc1yNe5e.s:3079   .debug_str:0000000000000889 .LASF83
     /tmp/cc1yNe5e.s:2961   .debug_str:00000000000004b2 .LASF84
     /tmp/cc1yNe5e.s:2823   .debug_str:0000000000000063 .LASF85
     /tmp/cc1yNe5e.s:2949   .debug_str:000000000000044f .LASF86
     /tmp/cc1yNe5e.s:2809   .debug_str:0000000000000016 .LASF87
     /tmp/cc1yNe5e.s:3015   .debug_str:00000000000006da .LASF88
     /tmp/cc1yNe5e.s:2985   .debug_str:000000000000056b .LASF89
     /tmp/cc1yNe5e.s:2805   .debug_str:0000000000000000 .LASF90
     /tmp/cc1yNe5e.s:2825   .debug_str:0000000000000073 .LASF91
     /tmp/cc1yNe5e.s:2807   .debug_str:0000000000000011 .LASF92
     /tmp/cc1yNe5e.s:2983   .debug_str:0000000000000565 .LASF93
     /tmp/cc1yNe5e.s:3025   .debug_str:000000000000072f .LASF94
     /tmp/cc1yNe5e.s:3019   .debug_str:00000000000006ff .LASF95
     /tmp/cc1yNe5e.s:3005   .debug_str:00000000000005f2 .LASF96
     /tmp/cc1yNe5e.s:2821   .debug_str:0000000000000055 .LASF97
     /tmp/cc1yNe5e.s:2953   .debug_str:0000000000000473 .LASF98
     /tmp/cc1yNe5e.s:2841   .debug_str:00000000000000fe .LASF133
     /tmp/cc1yNe5e.s:2885   .debug_str:000000000000023b .LASF134
GAS LISTING /tmp/cc1yNe5e.s 			page 23


     /tmp/cc1yNe5e.s:2847   .debug_str:0000000000000135 .LASF99
     /tmp/cc1yNe5e.s:2843   .debug_str:000000000000010c .LASF100
     /tmp/cc1yNe5e.s:2981   .debug_str:0000000000000554 .LASF101
     /tmp/cc1yNe5e.s:2855   .debug_str:0000000000000169 .LASF102
     /tmp/cc1yNe5e.s:3049   .debug_str:00000000000007d0 .LASF103
     /tmp/cc1yNe5e.s:2955   .debug_str:0000000000000490 .LASF104
     /tmp/cc1yNe5e.s:2859   .debug_str:0000000000000177 .LASF105
     /tmp/cc1yNe5e.s:346    .text:000000000000017c .LFB48
     /tmp/cc1yNe5e.s:509    .text:00000000000002a8 .LFE48
     /tmp/cc1yNe5e.s:2643   .debug_loc:0000000000000000 .LLST7
     /tmp/cc1yNe5e.s:2650   .debug_loc:0000000000000023 .LLST8
     /tmp/cc1yNe5e.s:2657   .debug_loc:0000000000000046 .LLST9
     /tmp/cc1yNe5e.s:366    .text:000000000000019c .LBB8
     /tmp/cc1yNe5e.s:378    .text:00000000000001a0 .LBE8
     /tmp/cc1yNe5e.s:464    .text:000000000000026c .LBB10
     /tmp/cc1yNe5e.s:472    .text:0000000000000270 .LBE10
     /tmp/cc1yNe5e.s:2676   .debug_loc:00000000000000a2 .LLST10
     /tmp/cc1yNe5e.s:476    .text:0000000000000274 .LBB12
     /tmp/cc1yNe5e.s:483    .text:0000000000000278 .LBE12
     /tmp/cc1yNe5e.s:2683   .debug_loc:00000000000000c5 .LLST11
     /tmp/cc1yNe5e.s:384    .text:00000000000001b0 .LVL24
     /tmp/cc1yNe5e.s:390    .text:00000000000001bc .LVL26
     /tmp/cc1yNe5e.s:400    .text:00000000000001dc .LVL27
     /tmp/cc1yNe5e.s:409    .text:00000000000001f4 .LVL29
     /tmp/cc1yNe5e.s:415    .text:0000000000000200 .LVL30
     /tmp/cc1yNe5e.s:421    .text:0000000000000214 .LVL31
     /tmp/cc1yNe5e.s:431    .text:000000000000022c .LVL34
     /tmp/cc1yNe5e.s:437    .text:0000000000000238 .LVL35
     /tmp/cc1yNe5e.s:445    .text:000000000000024c .LVL37
     /tmp/cc1yNe5e.s:454    .text:0000000000000260 .LVL40
     /tmp/cc1yNe5e.s:460    .text:000000000000026c .LVL41
     /tmp/cc1yNe5e.s:490    .text:000000000000028c .LVL45
     /tmp/cc1yNe5e.s:2857   .debug_str:0000000000000172 .LASF135
     /tmp/cc1yNe5e.s:3003   .debug_str:00000000000005e2 .LASF106
     /tmp/cc1yNe5e.s:2919   .debug_str:0000000000000368 .LASF107
     /tmp/cc1yNe5e.s:298    .text:0000000000000148 .LFB35
     /tmp/cc1yNe5e.s:329    .text:000000000000017c .LFE35
     /tmp/cc1yNe5e.s:2993   .debug_str:00000000000005b2 .LASF108
     /tmp/cc1yNe5e.s:318    .text:000000000000016c .LVL21
     /tmp/cc1yNe5e.s:2913   .debug_str:0000000000000316 .LASF109
     /tmp/cc1yNe5e.s:2989   .debug_str:0000000000000594 .LASF111
     /tmp/cc1yNe5e.s:259    .text:0000000000000110 .LFB34
     /tmp/cc1yNe5e.s:292    .text:0000000000000148 .LFE34
     /tmp/cc1yNe5e.s:279    .text:0000000000000134 .LVL20
     /tmp/cc1yNe5e.s:3041   .debug_str:000000000000078d .LASF110
     /tmp/cc1yNe5e.s:3059   .debug_str:00000000000007fa .LASF112
     /tmp/cc1yNe5e.s:198    .text:00000000000000c8 .LFB33
     /tmp/cc1yNe5e.s:253    .text:0000000000000110 .LFE33
     /tmp/cc1yNe5e.s:3065   .debug_str:0000000000000836 .LASF113
     /tmp/cc1yNe5e.s:2690   .debug_loc:00000000000000e8 .LLST4
     /tmp/cc1yNe5e.s:2897   .debug_str:00000000000002c7 .LASF114
     /tmp/cc1yNe5e.s:2715   .debug_loc:000000000000014d .LLST5
     /tmp/cc1yNe5e.s:2729   .debug_loc:0000000000000186 .LLST6
     /tmp/cc1yNe5e.s:229    .text:00000000000000f8 .LVL18
     /tmp/cc1yNe5e.s:2873   .debug_str:00000000000001e1 .LASF115
     /tmp/cc1yNe5e.s:2957   .debug_str:0000000000000495 .LASF116
     /tmp/cc1yNe5e.s:144    .text:0000000000000088 .LFB32
GAS LISTING /tmp/cc1yNe5e.s 			page 24


     /tmp/cc1yNe5e.s:192    .text:00000000000000c8 .LFE32
     /tmp/cc1yNe5e.s:2743   .debug_loc:00000000000001bf .LLST2
     /tmp/cc1yNe5e.s:2762   .debug_loc:000000000000020c .LLST3
     /tmp/cc1yNe5e.s:169    .text:00000000000000b0 .LVL13
     /tmp/cc1yNe5e.s:3021   .debug_str:0000000000000709 .LASF117
     /tmp/cc1yNe5e.s:2867   .debug_str:00000000000001b6 .LASF118
     /tmp/cc1yNe5e.s:78     .text:000000000000003c .LFB31
     /tmp/cc1yNe5e.s:138    .text:0000000000000088 .LFE31
     /tmp/cc1yNe5e.s:2899   .debug_str:00000000000002d5 .LASF119
     /tmp/cc1yNe5e.s:2769   .debug_loc:000000000000022f .LLST0
     /tmp/cc1yNe5e.s:2921   .debug_str:000000000000037d .LASF120
     /tmp/cc1yNe5e.s:2783   .debug_loc:0000000000000268 .LLST1
     /tmp/cc1yNe5e.s:117    .text:0000000000000074 .LVL9
     /tmp/cc1yNe5e.s:2889   .debug_str:0000000000000289 .LASF121
     /tmp/cc1yNe5e.s:2933   .debug_str:00000000000003d0 .LASF122
     /tmp/cc1yNe5e.s:10     .text:0000000000000000 .LFB30
     /tmp/cc1yNe5e.s:72     .text:000000000000003c .LFE30
     /tmp/cc1yNe5e.s:3029   .debug_str:000000000000074c .LASF123
     /tmp/cc1yNe5e.s:3031   .debug_str:0000000000000751 .LASF124
     /tmp/cc1yNe5e.s:3033   .debug_str:0000000000000756 .LASF125
     /tmp/cc1yNe5e.s:3035   .debug_str:000000000000075b .LASF126
     /tmp/cc1yNe5e.s:2909   .debug_str:0000000000000308 .LASF136
     /tmp/cc1yNe5e.s:2939   .debug_str:00000000000003f9 .LASF137
     /tmp/cc1yNe5e.s:3069   .debug_str:0000000000000853 .LASF138
     /tmp/cc1yNe5e.s:386    .text:00000000000001b4 .LVL25
     /tmp/cc1yNe5e.s:402    .text:00000000000001e0 .LVL28
     /tmp/cc1yNe5e.s:501    .text:000000000000029c .LVL46
     /tmp/cc1yNe5e.s:423    .text:0000000000000218 .LVL32
     /tmp/cc1yNe5e.s:429    .text:0000000000000224 .LVL33
     /tmp/cc1yNe5e.s:439    .text:000000000000023c .LVL36
     /tmp/cc1yNe5e.s:447    .text:0000000000000250 .LVL38
     /tmp/cc1yNe5e.s:452    .text:0000000000000258 .LVL39
     /tmp/cc1yNe5e.s:504    .text:00000000000002a0 .LVL47
     /tmp/cc1yNe5e.s:470    .text:0000000000000270 .LVL42
     /tmp/cc1yNe5e.s:475    .text:0000000000000274 .LVL43
     /tmp/cc1yNe5e.s:481    .text:0000000000000278 .LVL44
     /tmp/cc1yNe5e.s:201    .text:00000000000000c8 .LVL16
     /tmp/cc1yNe5e.s:227    .text:00000000000000f0 .LVL17
     /tmp/cc1yNe5e.s:237    .text:00000000000000fc .LVL19
     /tmp/cc1yNe5e.s:515    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc1yNe5e.s:147    .text:0000000000000088 .LVL11
     /tmp/cc1yNe5e.s:167    .text:00000000000000a8 .LVL12
     /tmp/cc1yNe5e.s:177    .text:00000000000000b4 .LVL14
     /tmp/cc1yNe5e.s:182    .text:00000000000000b8 .LVL15
     /tmp/cc1yNe5e.s:81     .text:000000000000003c .LVL5
     /tmp/cc1yNe5e.s:102    .text:000000000000005c .LVL7
     /tmp/cc1yNe5e.s:98     .text:0000000000000058 .LVL6

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN7_thread12createThreadEPFvPvES0_
_ZN7_thread5startEv
_ZN7_thread7runningE
_Z11workerBodyAPv
_Z11printStringPKc
_Z11workerBodyBPv
_ZN7_thread5yieldEv
GAS LISTING /tmp/cc1yNe5e.s 			page 25


