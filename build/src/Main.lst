GAS LISTING /tmp/cczpkZuQ.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 616C6C6F 		.string	"allocated \n"
   9      63617465 
   9      64200A00 
  10 000c 00000000 		.align	3
  11              	.LC1:
  12 0010 616C6C6F 		.string	"allocated 1\n"
  12      63617465 
  12      6420310A 
  12      00
  13 001d 000000   		.align	3
  14              	.LC2:
  15 0020 616C6C6F 		.string	"allocated 2\n"
  15      63617465 
  15      6420320A 
  15      00
  16              		.text
  17              		.align	2
  18              		.globl	main
  20              	main:
  21              	.LFB46:
  22              		.file 1 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** 
   7:src/Main.cpp  **** #include "../h/_thread.hpp"
   8:src/Main.cpp  **** #include "../h/syscall_c.h"
   9:src/Main.cpp  **** #include "../test/printing.hpp"
  10:src/Main.cpp  **** //
  11:src/Main.cpp  **** //
  12:src/Main.cpp  **** extern void userMain();
  13:src/Main.cpp  **** extern int thread_create (
  14:src/Main.cpp  ****         _thread::thread_t * handle,
  15:src/Main.cpp  ****         void(*start_routine)(void*),
  16:src/Main.cpp  ****         void* arg
  17:src/Main.cpp  **** );
  18:src/Main.cpp  **** 
  19:src/Main.cpp  **** int main(){
  23              		.loc 1 19 11
  24              		.cfi_startproc
  25 0000 130101FC 		addi	sp,sp,-64
  26              		.cfi_def_cfa_offset 64
  27 0004 233C1102 		sd	ra,56(sp)
  28 0008 23388102 		sd	s0,48(sp)
  29 000c 23349102 		sd	s1,40(sp)
  30 0010 23302103 		sd	s2,32(sp)
  31 0014 233C3101 		sd	s3,24(sp)
GAS LISTING /tmp/cczpkZuQ.s 			page 2


  32 0018 23384101 		sd	s4,16(sp)
  33 001c 23345101 		sd	s5,8(sp)
  34 0020 23306101 		sd	s6,0(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37              		.cfi_offset 9, -24
  38              		.cfi_offset 18, -32
  39              		.cfi_offset 19, -40
  40              		.cfi_offset 20, -48
  41              		.cfi_offset 21, -56
  42              		.cfi_offset 22, -64
  43 0024 13040104 		addi	s0,sp,64
  44              		.cfi_def_cfa 8, 0
  20:src/Main.cpp  **** 
  21:src/Main.cpp  **** 
  22:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
  45              		.loc 1 22 5
  46              		.loc 1 22 19 is_stmt 0
  47 0028 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  47      83B70700 
  48              	.LVL0:
  49              	.LBB4:
  50              	.LBB5:
  51              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
GAS LISTING /tmp/cczpkZuQ.s 			page 3


  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** //    static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
GAS LISTING /tmp/cczpkZuQ.s 			page 4


  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  52              		.loc 2 125 5 is_stmt 1
  53              		.loc 2 125 69 is_stmt 0
  54              	#APP
  55              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
  56              		csrw stvec, a5
  57              	# 0 "" 2
  58              	.LVL1:
  59              	#NO_APP
  60              	.LBE5:
  61              	.LBE4:
  23:src/Main.cpp  **** 
  24:src/Main.cpp  **** //    _thread* threads[3];
  25:src/Main.cpp  **** //
  26:src/Main.cpp  **** //    if(!thread_create(&threads[0], nullptr, nullptr)){
  27:src/Main.cpp  **** //        printString("thread created");
  28:src/Main.cpp  **** //    }
  29:src/Main.cpp  **** //
  30:src/Main.cpp  **** //    _thread::running=threads[0];
  31:src/Main.cpp  **** //
  32:src/Main.cpp  **** //    if(!thread_create(&threads[1], workerBodyA, nullptr)){
  33:src/Main.cpp  **** //        printString("thread created \n");
GAS LISTING /tmp/cczpkZuQ.s 			page 5


  34:src/Main.cpp  **** //    }
  35:src/Main.cpp  **** //
  36:src/Main.cpp  **** //
  37:src/Main.cpp  **** //    if(!thread_create(&threads[2], workerBodyB, nullptr)){
  38:src/Main.cpp  **** //        printString("thread created \n");
  39:src/Main.cpp  **** //    }
  40:src/Main.cpp  **** //
  41:src/Main.cpp  **** //
  42:src/Main.cpp  **** //    while(!(threads[1]->isFinished() && threads[2]->isFinished())){
  43:src/Main.cpp  **** //        thread_dispatch();
  44:src/Main.cpp  **** //    }
  45:src/Main.cpp  **** //
  46:src/Main.cpp  **** //
  47:src/Main.cpp  **** //    printString("finished \n");
  48:src/Main.cpp  **** 
  49:src/Main.cpp  **** //    _thread* idle;
  50:src/Main.cpp  **** //    if(!thread_create(&idle, nullptr, nullptr)){}
  51:src/Main.cpp  **** //    _thread::running=idle;
  52:src/Main.cpp  **** 
  53:src/Main.cpp  **** 
  54:src/Main.cpp  ****     uint64* stack =(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  62              		.loc 1 54 5 is_stmt 1
  63              		.loc 1 54 39 is_stmt 0
  64 0034 37850000 		li	a0,32768
  65 0038 97000000 		call	_Z9mem_allocm@plt
  65      E7800000 
  66              	.LVL2:
  67 0040 930A0500 		mv	s5,a0
  68              	.LVL3:
  55:src/Main.cpp  ****     uint64* stack1 =(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  69              		.loc 1 55 5 is_stmt 1
  70              		.loc 1 55 40 is_stmt 0
  71 0044 37850000 		li	a0,32768
  72              	.LVL4:
  73 0048 97000000 		call	_Z9mem_allocm@plt
  73      E7800000 
  74              	.LVL5:
  75 0050 130A0500 		mv	s4,a0
  76              	.LVL6:
  56:src/Main.cpp  ****     uint64* stack2=(uint64*) mem_alloc(DEFAULT_STACK_SIZE* sizeof(uint64));
  77              		.loc 1 56 5 is_stmt 1
  78              		.loc 1 56 39 is_stmt 0
  79 0054 37850000 		li	a0,32768
  80              	.LVL7:
  81 0058 97000000 		call	_Z9mem_allocm@plt
  81      E7800000 
  82              	.LVL8:
  83 0060 93090500 		mv	s3,a0
  84              	.LVL9:
  57:src/Main.cpp  ****     void* addr1 = mem_alloc(1000);
  85              		.loc 1 57 5 is_stmt 1
  86              		.loc 1 57 28 is_stmt 0
  87 0064 1305803E 		li	a0,1000
  88              	.LVL10:
  89 0068 97000000 		call	_Z9mem_allocm@plt
  89      E7800000 
  90              	.LVL11:
GAS LISTING /tmp/cczpkZuQ.s 			page 6


  91 0070 13090500 		mv	s2,a0
  92              	.LVL12:
  58:src/Main.cpp  ****     void* addr2 = mem_alloc(5000);
  93              		.loc 1 58 5 is_stmt 1
  94              		.loc 1 58 28 is_stmt 0
  95 0074 37150000 		li	a0,4096
  96              	.LVL13:
  97 0078 13058538 		addi	a0,a0,904
  98 007c 97000000 		call	_Z9mem_allocm@plt
  98      E7800000 
  99              	.LVL14:
 100 0084 93040500 		mv	s1,a0
 101              	.LVL15:
  59:src/Main.cpp  ****     void* addr3 = mem_alloc(37);
 102              		.loc 1 59 5 is_stmt 1
 103              		.loc 1 59 28 is_stmt 0
 104 0088 13055002 		li	a0,37
 105 008c 97000000 		call	_Z9mem_allocm@plt
 105      E7800000 
 106              	.LVL16:
 107 0094 130B0500 		mv	s6,a0
 108              	.LVL17:
  60:src/Main.cpp  ****     void* addr4 = mem_alloc(2000);
 109              		.loc 1 60 5 is_stmt 1
 110              		.loc 1 60 28 is_stmt 0
 111 0098 1305007D 		li	a0,2000
 112              	.LVL18:
 113 009c 97000000 		call	_Z9mem_allocm@plt
 113      E7800000 
 114              	.LVL19:
  61:src/Main.cpp  **** 
  62:src/Main.cpp  ****     if(stack && addr4){
 115              		.loc 1 62 5 is_stmt 1
 116 00a4 638C0A00 		beqz	s5,.L2
 117              		.loc 1 62 14 is_stmt 0 discriminator 1
 118 00a8 630A0500 		beqz	a0,.L2
  63:src/Main.cpp  ****         printString("allocated \n");
 119              		.loc 1 63 9 is_stmt 1
 120              		.loc 1 63 20 is_stmt 0
 121 00ac 17050000 		lla	a0,.LC0
 121      13050500 
 122              	.LVL20:
 123 00b4 97000000 		call	_Z11printStringPKc@plt
 123      E7800000 
 124              	.LVL21:
 125              	.L2:
  64:src/Main.cpp  ****     }
  65:src/Main.cpp  ****     if(stack1){
 126              		.loc 1 65 5 is_stmt 1
 127 00bc 630A0A00 		beqz	s4,.L3
  66:src/Main.cpp  ****         printString("allocated 1\n");
 128              		.loc 1 66 9
 129              		.loc 1 66 20 is_stmt 0
 130 00c0 17050000 		lla	a0,.LC1
 130      13050500 
 131 00c8 97000000 		call	_Z11printStringPKc@plt
 131      E7800000 
GAS LISTING /tmp/cczpkZuQ.s 			page 7


 132              	.LVL22:
 133              	.L3:
  67:src/Main.cpp  ****     }
  68:src/Main.cpp  ****     if(stack2){
 134              		.loc 1 68 5 is_stmt 1
 135 00d0 638A0900 		beqz	s3,.L4
  69:src/Main.cpp  ****         printString("allocated 2\n");
 136              		.loc 1 69 9
 137              		.loc 1 69 20 is_stmt 0
 138 00d4 17050000 		lla	a0,.LC2
 138      13050500 
 139 00dc 97000000 		call	_Z11printStringPKc@plt
 139      E7800000 
 140              	.LVL23:
 141              	.L4:
  70:src/Main.cpp  ****     }
  71:src/Main.cpp  ****     if(addr1){
 142              		.loc 1 71 5 is_stmt 1
 143 00e4 630A0900 		beqz	s2,.L5
  72:src/Main.cpp  ****         printString("allocated 2\n");
 144              		.loc 1 72 9
 145              		.loc 1 72 20 is_stmt 0
 146 00e8 17050000 		lla	a0,.LC2
 146      13050500 
 147 00f0 97000000 		call	_Z11printStringPKc@plt
 147      E7800000 
 148              	.LVL24:
 149              	.L5:
  73:src/Main.cpp  ****     }if(addr2 && addr3){
 150              		.loc 1 73 6 is_stmt 1
 151 00f8 638C0400 		beqz	s1,.L6
 152              		.loc 1 73 15 is_stmt 0 discriminator 1
 153 00fc 630A0B00 		beqz	s6,.L6
  74:src/Main.cpp  ****         printString("allocated 2\n");
 154              		.loc 1 74 9 is_stmt 1
 155              		.loc 1 74 20 is_stmt 0
 156 0100 17050000 		lla	a0,.LC2
 156      13050500 
 157 0108 97000000 		call	_Z11printStringPKc@plt
 157      E7800000 
 158              	.LVL25:
 159              	.L6:
  75:src/Main.cpp  ****     }
  76:src/Main.cpp  **** //    userMain();
  77:src/Main.cpp  **** 
  78:src/Main.cpp  ****     return 0;
 160              		.loc 1 78 5 is_stmt 1
  79:src/Main.cpp  **** }
 161              		.loc 1 79 1 is_stmt 0
 162 0110 13050000 		li	a0,0
 163 0114 83308103 		ld	ra,56(sp)
 164              		.cfi_restore 1
 165 0118 03340103 		ld	s0,48(sp)
 166              		.cfi_restore 8
 167              		.cfi_def_cfa 2, 64
 168 011c 83348102 		ld	s1,40(sp)
 169              		.cfi_restore 9
GAS LISTING /tmp/cczpkZuQ.s 			page 8


 170              	.LVL26:
 171 0120 03390102 		ld	s2,32(sp)
 172              		.cfi_restore 18
 173              	.LVL27:
 174 0124 83398101 		ld	s3,24(sp)
 175              		.cfi_restore 19
 176              	.LVL28:
 177 0128 033A0101 		ld	s4,16(sp)
 178              		.cfi_restore 20
 179              	.LVL29:
 180 012c 833A8100 		ld	s5,8(sp)
 181              		.cfi_restore 21
 182              	.LVL30:
 183 0130 033B0100 		ld	s6,0(sp)
 184              		.cfi_restore 22
 185              	.LVL31:
 186 0134 13010104 		addi	sp,sp,64
 187              		.cfi_def_cfa_offset 0
 188 0138 67800000 		jr	ra
 189              		.cfi_endproc
 190              	.LFE46:
 192              	.Letext0:
 193              		.file 3 "src/../h/../lib/hw.h"
 194              		.file 4 "src/../h/syscall_c.h"
 195              		.file 5 "src/../test/printing.hpp"
GAS LISTING /tmp/cczpkZuQ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/cczpkZuQ.s:20     .text:0000000000000000 main
     /tmp/cczpkZuQ.s:24     .text:0000000000000000 .L0 
     /tmp/cczpkZuQ.s:25     .text:0000000000000000 .L0 
     /tmp/cczpkZuQ.s:26     .text:0000000000000004 .L0 
     /tmp/cczpkZuQ.s:35     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:36     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:37     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:38     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:39     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:40     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:41     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:42     .text:0000000000000024 .L0 
     /tmp/cczpkZuQ.s:44     .text:0000000000000028 .L0 
     /tmp/cczpkZuQ.s:46     .text:0000000000000028 .L0 
     /tmp/cczpkZuQ.s:47     .text:0000000000000028 .L0 
     /tmp/cczpkZuQ.s:53     .text:0000000000000030 .L0 
  src/../h/Riscv.hpp:125    .text:0000000000000030 .L0 
     /tmp/cczpkZuQ.s:63     .text:0000000000000034 .L0 
     /tmp/cczpkZuQ.s:64     .text:0000000000000034 .L0 
     /tmp/cczpkZuQ.s:70     .text:0000000000000044 .L0 
     /tmp/cczpkZuQ.s:71     .text:0000000000000044 .L0 
     /tmp/cczpkZuQ.s:78     .text:0000000000000054 .L0 
     /tmp/cczpkZuQ.s:79     .text:0000000000000054 .L0 
     /tmp/cczpkZuQ.s:86     .text:0000000000000064 .L0 
     /tmp/cczpkZuQ.s:87     .text:0000000000000064 .L0 
     /tmp/cczpkZuQ.s:94     .text:0000000000000074 .L0 
     /tmp/cczpkZuQ.s:95     .text:0000000000000074 .L0 
     /tmp/cczpkZuQ.s:103    .text:0000000000000088 .L0 
     /tmp/cczpkZuQ.s:104    .text:0000000000000088 .L0 
     /tmp/cczpkZuQ.s:110    .text:0000000000000098 .L0 
     /tmp/cczpkZuQ.s:111    .text:0000000000000098 .L0 
     /tmp/cczpkZuQ.s:116    .text:00000000000000a4 .L0 
     /tmp/cczpkZuQ.s:118    .text:00000000000000a8 .L0 
     /tmp/cczpkZuQ.s:120    .text:00000000000000ac .L0 
     /tmp/cczpkZuQ.s:121    .text:00000000000000ac .L0 
     /tmp/cczpkZuQ.s:127    .text:00000000000000bc .L0 
     /tmp/cczpkZuQ.s:129    .text:00000000000000c0 .L0 
     /tmp/cczpkZuQ.s:130    .text:00000000000000c0 .L0 
     /tmp/cczpkZuQ.s:135    .text:00000000000000d0 .L0 
     /tmp/cczpkZuQ.s:137    .text:00000000000000d4 .L0 
     /tmp/cczpkZuQ.s:138    .text:00000000000000d4 .L0 
     /tmp/cczpkZuQ.s:143    .text:00000000000000e4 .L0 
     /tmp/cczpkZuQ.s:145    .text:00000000000000e8 .L0 
     /tmp/cczpkZuQ.s:146    .text:00000000000000e8 .L0 
     /tmp/cczpkZuQ.s:151    .text:00000000000000f8 .L0 
     /tmp/cczpkZuQ.s:153    .text:00000000000000fc .L0 
     /tmp/cczpkZuQ.s:155    .text:0000000000000100 .L0 
     /tmp/cczpkZuQ.s:156    .text:0000000000000100 .L0 
     /tmp/cczpkZuQ.s:161    .text:0000000000000110 .L0 
     /tmp/cczpkZuQ.s:162    .text:0000000000000110 .L0 
     /tmp/cczpkZuQ.s:164    .text:0000000000000118 .L0 
     /tmp/cczpkZuQ.s:166    .text:000000000000011c .L0 
     /tmp/cczpkZuQ.s:167    .text:000000000000011c .L0 
     /tmp/cczpkZuQ.s:169    .text:0000000000000120 .L0 
     /tmp/cczpkZuQ.s:172    .text:0000000000000124 .L0 
GAS LISTING /tmp/cczpkZuQ.s 			page 10


     /tmp/cczpkZuQ.s:175    .text:0000000000000128 .L0 
     /tmp/cczpkZuQ.s:178    .text:000000000000012c .L0 
     /tmp/cczpkZuQ.s:181    .text:0000000000000130 .L0 
     /tmp/cczpkZuQ.s:184    .text:0000000000000134 .L0 
     /tmp/cczpkZuQ.s:187    .text:0000000000000138 .L0 
     /tmp/cczpkZuQ.s:189    .text:000000000000013c .L0 
     /tmp/cczpkZuQ.s:196    .text:000000000000013c .L0 
     /tmp/cczpkZuQ.s:47     .text:0000000000000028 .L0 
     /tmp/cczpkZuQ.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cczpkZuQ.s:121    .text:00000000000000ac .L0 
     /tmp/cczpkZuQ.s:11     .rodata.str1.8:0000000000000010 .LC1
     /tmp/cczpkZuQ.s:130    .text:00000000000000c0 .L0 
     /tmp/cczpkZuQ.s:14     .rodata.str1.8:0000000000000020 .LC2
     /tmp/cczpkZuQ.s:138    .text:00000000000000d4 .L0 
     /tmp/cczpkZuQ.s:146    .text:00000000000000e8 .L0 
     /tmp/cczpkZuQ.s:156    .text:0000000000000100 .L0 
     /tmp/cczpkZuQ.s:125    .text:00000000000000bc .L2
     /tmp/cczpkZuQ.s:133    .text:00000000000000d0 .L3
     /tmp/cczpkZuQ.s:141    .text:00000000000000e4 .L4
     /tmp/cczpkZuQ.s:149    .text:00000000000000f8 .L5
     /tmp/cczpkZuQ.s:159    .text:0000000000000110 .L6
     /tmp/cczpkZuQ.s:747    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cczpkZuQ.s:1346   .debug_str:000000000000035b .LASF65
     /tmp/cczpkZuQ.s:1338   .debug_str:0000000000000328 .LASF66
     /tmp/cczpkZuQ.s:1296   .debug_str:00000000000001d2 .LASF67
     /tmp/cczpkZuQ.s:5      .text:0000000000000000 .Ltext0
     /tmp/cczpkZuQ.s:192    .text:000000000000013c .Letext0
     /tmp/cczpkZuQ.s:1228   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cczpkZuQ.s:1266   .debug_str:0000000000000113 .LASF0
     /tmp/cczpkZuQ.s:1280   .debug_str:0000000000000194 .LASF1
     /tmp/cczpkZuQ.s:1326   .debug_str:00000000000002cb .LASF2
     /tmp/cczpkZuQ.s:1330   .debug_str:00000000000002f1 .LASF4
     /tmp/cczpkZuQ.s:1272   .debug_str:000000000000013a .LASF3
     /tmp/cczpkZuQ.s:1230   .debug_str:0000000000000000 .LASF5
     /tmp/cczpkZuQ.s:1312   .debug_str:0000000000000261 .LASF6
     /tmp/cczpkZuQ.s:1276   .debug_str:000000000000016e .LASF7
     /tmp/cczpkZuQ.s:1252   .debug_str:0000000000000096 .LASF8
     /tmp/cczpkZuQ.s:1256   .debug_str:00000000000000c2 .LASF9
     /tmp/cczpkZuQ.s:1236   .debug_str:0000000000000022 .LASF10
     /tmp/cczpkZuQ.s:1248   .debug_str:0000000000000082 .LASF11
     /tmp/cczpkZuQ.s:1240   .debug_str:0000000000000044 .LASF12
     /tmp/cczpkZuQ.s:1234   .debug_str:0000000000000012 .LASF13
     /tmp/cczpkZuQ.s:1344   .debug_str:000000000000034f .LASF14
     /tmp/cczpkZuQ.s:1246   .debug_str:000000000000006c .LASF15
     /tmp/cczpkZuQ.s:1336   .debug_str:0000000000000312 .LASF16
     /tmp/cczpkZuQ.s:1358   .debug_str:0000000000000462 .LASF68
     /tmp/cczpkZuQ.s:1260   .debug_str:00000000000000de .LASF49
     /tmp/cczpkZuQ.s:1264   .debug_str:00000000000000fb .LASF51
     /tmp/cczpkZuQ.s:1354   .debug_str:000000000000044f .LASF17
     /tmp/cczpkZuQ.s:1352   .debug_str:000000000000043a .LASF19
     /tmp/cczpkZuQ.s:1322   .debug_str:00000000000002b7 .LASF21
     /tmp/cczpkZuQ.s:1310   .debug_str:000000000000024c .LASF23
     /tmp/cczpkZuQ.s:1316   .debug_str:0000000000000289 .LASF18
     /tmp/cczpkZuQ.s:1318   .debug_str:0000000000000290 .LASF20
     /tmp/cczpkZuQ.s:1306   .debug_str:0000000000000231 .LASF22
     /tmp/cczpkZuQ.s:1278   .debug_str:0000000000000181 .LASF24
     /tmp/cczpkZuQ.s:1364   .debug_str:0000000000000481 .LASF25
GAS LISTING /tmp/cczpkZuQ.s 			page 11


     /tmp/cczpkZuQ.s:1348   .debug_str:000000000000041f .LASF26
     /tmp/cczpkZuQ.s:1302   .debug_str:0000000000000222 .LASF27
     /tmp/cczpkZuQ.s:1308   .debug_str:0000000000000238 .LASF28
     /tmp/cczpkZuQ.s:1282   .debug_str:00000000000001a7 .LASF29
     /tmp/cczpkZuQ.s:1320   .debug_str:00000000000002a3 .LASF30
     /tmp/cczpkZuQ.s:1374   .debug_str:00000000000004c9 .LASF31
     /tmp/cczpkZuQ.s:1270   .debug_str:0000000000000126 .LASF32
     /tmp/cczpkZuQ.s:1342   .debug_str:0000000000000348 .LASF33
     /tmp/cczpkZuQ.s:1332   .debug_str:00000000000002f8 .LASF34
     /tmp/cczpkZuQ.s:1334   .debug_str:000000000000030b .LASF35
     /tmp/cczpkZuQ.s:1238   .debug_str:0000000000000031 .LASF36
     /tmp/cczpkZuQ.s:1244   .debug_str:0000000000000066 .LASF37
     /tmp/cczpkZuQ.s:1262   .debug_str:00000000000000e9 .LASF38
     /tmp/cczpkZuQ.s:1268   .debug_str:0000000000000120 .LASF39
     /tmp/cczpkZuQ.s:1242   .debug_str:0000000000000054 .LASF40
     /tmp/cczpkZuQ.s:1232   .debug_str:0000000000000007 .LASF41
     /tmp/cczpkZuQ.s:1328   .debug_str:00000000000002d9 .LASF42
     /tmp/cczpkZuQ.s:1324   .debug_str:00000000000002c0 .LASF43
     /tmp/cczpkZuQ.s:1372   .debug_str:00000000000004b1 .LASF44
     /tmp/cczpkZuQ.s:1360   .debug_str:0000000000000468 .LASF45
     /tmp/cczpkZuQ.s:1366   .debug_str:0000000000000489 .LASF46
     /tmp/cczpkZuQ.s:1356   .debug_str:0000000000000458 .LASF47
     /tmp/cczpkZuQ.s:1298   .debug_str:0000000000000202 .LASF48
     /tmp/cczpkZuQ.s:1362   .debug_str:0000000000000472 .LASF50
     /tmp/cczpkZuQ.s:1254   .debug_str:00000000000000a6 .LASF52
     /tmp/cczpkZuQ.s:1314   .debug_str:0000000000000274 .LASF69
     /tmp/cczpkZuQ.s:1274   .debug_str:000000000000014c .LASF70
     /tmp/cczpkZuQ.s:1294   .debug_str:00000000000001cd .LASF53
     /tmp/cczpkZuQ.s:1250   .debug_str:0000000000000091 .LASF71
     /tmp/cczpkZuQ.s:21     .text:0000000000000000 .LFB46
     /tmp/cczpkZuQ.s:190    .text:000000000000013c .LFE46
     /tmp/cczpkZuQ.s:1370   .debug_str:00000000000004ab .LASF54
     /tmp/cczpkZuQ.s:1146   .debug_loc:0000000000000000 .LLST0
     /tmp/cczpkZuQ.s:1304   .debug_str:000000000000022a .LASF55
     /tmp/cczpkZuQ.s:1157   .debug_loc:0000000000000036 .LLST1
     /tmp/cczpkZuQ.s:1350   .debug_str:0000000000000433 .LASF56
     /tmp/cczpkZuQ.s:1168   .debug_loc:000000000000006c .LLST2
     /tmp/cczpkZuQ.s:1286   .debug_str:00000000000001b5 .LASF57
     /tmp/cczpkZuQ.s:1179   .debug_loc:00000000000000a2 .LLST3
     /tmp/cczpkZuQ.s:1288   .debug_str:00000000000001bb .LASF58
     /tmp/cczpkZuQ.s:1190   .debug_loc:00000000000000d8 .LLST4
     /tmp/cczpkZuQ.s:1290   .debug_str:00000000000001c1 .LASF59
     /tmp/cczpkZuQ.s:1197   .debug_loc:00000000000000fb .LLST5
     /tmp/cczpkZuQ.s:1292   .debug_str:00000000000001c7 .LASF60
     /tmp/cczpkZuQ.s:1208   .debug_loc:0000000000000131 .LLST6
     /tmp/cczpkZuQ.s:49     .text:0000000000000030 .LBB4
     /tmp/cczpkZuQ.s:61     .text:0000000000000034 .LBE4
     /tmp/cczpkZuQ.s:66     .text:0000000000000040 .LVL2
     /tmp/cczpkZuQ.s:74     .text:0000000000000050 .LVL5
     /tmp/cczpkZuQ.s:82     .text:0000000000000060 .LVL8
     /tmp/cczpkZuQ.s:90     .text:0000000000000070 .LVL11
     /tmp/cczpkZuQ.s:99     .text:0000000000000084 .LVL14
     /tmp/cczpkZuQ.s:106    .text:0000000000000094 .LVL16
     /tmp/cczpkZuQ.s:114    .text:00000000000000a4 .LVL19
     /tmp/cczpkZuQ.s:124    .text:00000000000000bc .LVL21
     /tmp/cczpkZuQ.s:132    .text:00000000000000d0 .LVL22
     /tmp/cczpkZuQ.s:140    .text:00000000000000e4 .LVL23
GAS LISTING /tmp/cczpkZuQ.s 			page 12


     /tmp/cczpkZuQ.s:148    .text:00000000000000f8 .LVL24
     /tmp/cczpkZuQ.s:158    .text:0000000000000110 .LVL25
     /tmp/cczpkZuQ.s:1284   .debug_str:00000000000001af .LASF72
     /tmp/cczpkZuQ.s:1258   .debug_str:00000000000000d0 .LASF61
     /tmp/cczpkZuQ.s:1300   .debug_str:0000000000000218 .LASF63
     /tmp/cczpkZuQ.s:1340   .debug_str:0000000000000335 .LASF62
     /tmp/cczpkZuQ.s:1368   .debug_str:000000000000049f .LASF64
     /tmp/cczpkZuQ.s:68     .text:0000000000000044 .LVL3
     /tmp/cczpkZuQ.s:72     .text:0000000000000048 .LVL4
     /tmp/cczpkZuQ.s:182    .text:0000000000000130 .LVL30
     /tmp/cczpkZuQ.s:76     .text:0000000000000054 .LVL6
     /tmp/cczpkZuQ.s:80     .text:0000000000000058 .LVL7
     /tmp/cczpkZuQ.s:179    .text:000000000000012c .LVL29
     /tmp/cczpkZuQ.s:84     .text:0000000000000064 .LVL9
     /tmp/cczpkZuQ.s:88     .text:0000000000000068 .LVL10
     /tmp/cczpkZuQ.s:176    .text:0000000000000128 .LVL28
     /tmp/cczpkZuQ.s:92     .text:0000000000000074 .LVL12
     /tmp/cczpkZuQ.s:96     .text:0000000000000078 .LVL13
     /tmp/cczpkZuQ.s:173    .text:0000000000000124 .LVL27
     /tmp/cczpkZuQ.s:101    .text:0000000000000088 .LVL15
     /tmp/cczpkZuQ.s:170    .text:0000000000000120 .LVL26
     /tmp/cczpkZuQ.s:108    .text:0000000000000098 .LVL17
     /tmp/cczpkZuQ.s:112    .text:000000000000009c .LVL18
     /tmp/cczpkZuQ.s:185    .text:0000000000000134 .LVL31
     /tmp/cczpkZuQ.s:122    .text:00000000000000b4 .LVL20
     /tmp/cczpkZuQ.s:197    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_Z9mem_allocm
_Z11printStringPKc
