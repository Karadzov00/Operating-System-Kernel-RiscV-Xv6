GAS LISTING /tmp/cciWyYo0.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7syscallP4args
   9              	_Z7syscallP4args:
  10              	.LFB24:
  11              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //
   2:src/../h/syscall_c.h **** // Created by os on 6/19/22.
   3:src/../h/syscall_c.h **** //
   4:src/../h/syscall_c.h **** 
   5:src/../h/syscall_c.h **** #ifndef PROJECT_BASE_V1_1_SYSCALL_C_H
   6:src/../h/syscall_c.h **** #define PROJECT_BASE_V1_1_SYSCALL_C_H
   7:src/../h/syscall_c.h **** 
   8:src/../h/syscall_c.h **** #include "Riscv.hpp"
   9:src/../h/syscall_c.h **** 
  10:src/../h/syscall_c.h **** 
  11:src/../h/syscall_c.h **** 
  12:src/../h/syscall_c.h **** extern "C" void supervisorTrap();
  13:src/../h/syscall_c.h **** 
  14:src/../h/syscall_c.h **** struct args{
  15:src/../h/syscall_c.h ****     uint64 a0;
  16:src/../h/syscall_c.h ****     uint64 a1;
  17:src/../h/syscall_c.h ****     uint64 a2;
  18:src/../h/syscall_c.h ****     uint64 a3;
  19:src/../h/syscall_c.h **** 
  20:src/../h/syscall_c.h **** };
  21:src/../h/syscall_c.h **** 
  22:src/../h/syscall_c.h **** void syscall(args* arg){
  12              		.loc 1 22 24
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  23:src/../h/syscall_c.h ****     //should prepare arguments in registers
  24:src/../h/syscall_c.h ****     //should call interrupt routine with ecall
  25:src/../h/syscall_c.h **** 
  26:src/../h/syscall_c.h **** 
  27:src/../h/syscall_c.h ****     uint64 arg0 = arg->a0;
  21              		.loc 1 27 5
  22              		.loc 1 27 12 is_stmt 0
  23 000c 03370500 		ld	a4,0(a0)
  24              	.LVL1:
  28:src/../h/syscall_c.h ****     uint64 arg1 = arg->a1;
  25              		.loc 1 28 5 is_stmt 1
  26              		.loc 1 28 12 is_stmt 0
  27 0010 83378500 		ld	a5,8(a0)
  28              	.LVL2:
  29:src/../h/syscall_c.h **** 
  30:src/../h/syscall_c.h **** 
GAS LISTING /tmp/cciWyYo0.s 			page 2


  31:src/../h/syscall_c.h **** 
  32:src/../h/syscall_c.h ****     //lock this section?
  33:src/../h/syscall_c.h ****     __asm__ volatile("mv a0, %0" : : "r" (arg0));
  29              		.loc 1 33 5 is_stmt 1
  30              		.loc 1 33 49 is_stmt 0
  31              	#APP
  32              	# 33 "src/../h/syscall_c.h" 1
  34              	    __asm__ volatile("mv a1, %0" : : "r" (arg1));
  33              		mv a0, a4
  34              	# 0 "" 2
  35              		.loc 1 34 5 is_stmt 1
  36              		.loc 1 34 49 is_stmt 0
  37              	# 34 "src/../h/syscall_c.h" 1
  35              	
  36:src/../h/syscall_c.h **** 
  37:src/../h/syscall_c.h **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  38:src/../h/syscall_c.h ****     __asm__ volatile ("ecall");
  38              		mv a1, a5
  39              	# 0 "" 2
  40              		.loc 1 38 5 is_stmt 1
  41              		.loc 1 38 31 is_stmt 0
  42              	# 38 "src/../h/syscall_c.h" 1
  39              	
  40:src/../h/syscall_c.h **** 
  41:src/../h/syscall_c.h **** }
  43              		ecall
  44              	# 0 "" 2
  45              		.loc 1 41 1
  46              	#NO_APP
  47 0020 03348100 		ld	s0,8(sp)
  48              		.cfi_restore 8
  49              		.cfi_def_cfa 2, 16
  50 0024 13010101 		addi	sp,sp,16
  51              		.cfi_def_cfa_offset 0
  52 0028 67800000 		jr	ra
  53              		.cfi_endproc
  54              	.LFE24:
  56              		.align	2
  57              		.globl	_Z9mem_allocm
  59              	_Z9mem_allocm:
  60              	.LFB25:
  42:src/../h/syscall_c.h **** 
  43:src/../h/syscall_c.h **** void* mem_alloc (size_t size){
  61              		.loc 1 43 30 is_stmt 1
  62              		.cfi_startproc
  63              	.LVL3:
  64 002c 130101FE 		addi	sp,sp,-32
  65              		.cfi_def_cfa_offset 32
  66 0030 233C1100 		sd	ra,24(sp)
  67 0034 23388100 		sd	s0,16(sp)
  68 0038 23349100 		sd	s1,8(sp)
  69              		.cfi_offset 1, -8
  70              		.cfi_offset 8, -16
  71              		.cfi_offset 9, -24
  72 003c 13040102 		addi	s0,sp,32
  73              		.cfi_def_cfa 8, 0
  74 0040 93040500 		mv	s1,a0
GAS LISTING /tmp/cciWyYo0.s 			page 3


  44:src/../h/syscall_c.h ****     //prepares parameters to arguments
  45:src/../h/syscall_c.h ****     //executes system call instruction
  46:src/../h/syscall_c.h ****     args* arg = new args();
  75              		.loc 1 46 5
  76              		.loc 1 46 26 is_stmt 0
  77 0044 13050002 		li	a0,32
  78              	.LVL4:
  79 0048 97000000 		call	_Znwm@plt
  79      E7800000 
  80              	.LVL5:
  81 0050 23380500 		sd	zero,16(a0)
  82 0054 233C0500 		sd	zero,24(a0)
  83              	.LVL6:
  47:src/../h/syscall_c.h ****     arg->a0=0x01;
  84              		.loc 1 47 5 is_stmt 1
  85              		.loc 1 47 12 is_stmt 0
  86 0058 93071000 		li	a5,1
  87 005c 2330F500 		sd	a5,0(a0)
  48:src/../h/syscall_c.h **** 
  49:src/../h/syscall_c.h ****     size_t blocks = size/MEM_BLOCK_SIZE;
  88              		.loc 1 49 5 is_stmt 1
  89              		.loc 1 49 12 is_stmt 0
  90 0060 93D76400 		srli	a5,s1,6
  91              	.LVL7:
  50:src/../h/syscall_c.h ****     if(size%MEM_BLOCK_SIZE!=0)blocks++;
  92              		.loc 1 50 5 is_stmt 1
  93              		.loc 1 50 12 is_stmt 0
  94 0064 93F4F403 		andi	s1,s1,63
  95              	.LVL8:
  96              		.loc 1 50 5
  97 0068 63840400 		beqz	s1,.L4
  98              		.loc 1 50 31 is_stmt 1 discriminator 1
  99              		.loc 1 50 37 is_stmt 0 discriminator 1
 100 006c 93871700 		addi	a5,a5,1
 101              	.LVL9:
 102              	.L4:
  51:src/../h/syscall_c.h ****     arg->a1=blocks;
 103              		.loc 1 51 5 is_stmt 1
 104              		.loc 1 51 12 is_stmt 0
 105 0070 2334F500 		sd	a5,8(a0)
  52:src/../h/syscall_c.h **** 
  53:src/../h/syscall_c.h ****     syscall(arg);
 106              		.loc 1 53 5 is_stmt 1
 107              		.loc 1 53 12 is_stmt 0
 108 0074 97000000 		call	_Z7syscallP4args
 108      E7800000 
 109              	.LVL10:
  54:src/../h/syscall_c.h **** 
  55:src/../h/syscall_c.h ****     uint64 ret;
 110              		.loc 1 55 5 is_stmt 1
  56:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 111              		.loc 1 56 5
 112              		.loc 1 56 47 is_stmt 0
 113              	#APP
 114              	# 56 "src/../h/syscall_c.h" 1
  57              	
 115              		mv a0, a0
GAS LISTING /tmp/cciWyYo0.s 			page 4


 116              	# 0 "" 2
 117              	.LVL11:
  58:src/../h/syscall_c.h ****     return (void*)ret;
 118              		.loc 1 58 5 is_stmt 1
  59:src/../h/syscall_c.h **** }
 119              		.loc 1 59 1 is_stmt 0
 120              	#NO_APP
 121 0080 83308101 		ld	ra,24(sp)
 122              		.cfi_restore 1
 123 0084 03340101 		ld	s0,16(sp)
 124              		.cfi_restore 8
 125              		.cfi_def_cfa 2, 32
 126 0088 83348100 		ld	s1,8(sp)
 127              		.cfi_restore 9
 128 008c 13010102 		addi	sp,sp,32
 129              		.cfi_def_cfa_offset 0
 130 0090 67800000 		jr	ra
 131              		.cfi_endproc
 132              	.LFE25:
 134              		.section	.rodata.str1.8,"aMS",@progbits,1
 135              		.align	3
 136              	.LC0:
 137 0000 616C6C6F 		.string	"allocated \n"
 137      63617465 
 137      64200A00 
 138              		.text
 139              		.align	2
 140              		.globl	main
 142              	main:
 143              	.LFB26:
 144              		.file 2 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** #include "../h/List.hpp"
   7:src/Main.cpp  **** #include "../h/syscall_c.h"
   8:src/Main.cpp  **** #include "../h/Print.hpp"
   9:src/Main.cpp  **** 
  10:src/Main.cpp  **** 
  11:src/Main.cpp  **** 
  12:src/Main.cpp  **** int main(){
 145              		.loc 2 12 11 is_stmt 1
 146              		.cfi_startproc
 147 0094 130101FF 		addi	sp,sp,-16
 148              		.cfi_def_cfa_offset 16
 149 0098 23341100 		sd	ra,8(sp)
 150 009c 23308100 		sd	s0,0(sp)
 151              		.cfi_offset 1, -8
 152              		.cfi_offset 8, -16
 153 00a0 13040101 		addi	s0,sp,16
 154              		.cfi_def_cfa 8, 0
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** //    Riscv::w_stvec((uint64)&supervisorTrap);
  15:src/Main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  16:src/Main.cpp  **** //    __asm__ volatile ("ecall");
GAS LISTING /tmp/cciWyYo0.s 			page 5


  17:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 155              		.loc 2 17 5
 156              		.loc 2 17 19 is_stmt 0
 157 00a4 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 157      83B70700 
 158              	.LVL12:
 159              	.LBB4:
 160              	.LBB5:
 161              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cciWyYo0.s 			page 6


  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
GAS LISTING /tmp/cciWyYo0.s 			page 7


 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 162              		.loc 3 125 5 is_stmt 1
 163              		.loc 3 125 69 is_stmt 0
 164              	#APP
 165              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
 166              		csrw stvec, a5
 167              	# 0 "" 2
 168              	.LVL13:
 169              	#NO_APP
 170              	.LBE5:
 171              	.LBE4:
  18:src/Main.cpp  **** 
  19:src/Main.cpp  ****     void* ptr;
 172              		.loc 2 19 5 is_stmt 1
  20:src/Main.cpp  ****     ptr = mem_alloc(300);
 173              		.loc 2 20 5
 174              		.loc 2 20 20 is_stmt 0
 175 00b0 1305C012 		li	a0,300
 176 00b4 97000000 		call	_Z9mem_allocm
 176      E7800000 
 177              	.LVL14:
  21:src/Main.cpp  ****     if(ptr!=nullptr){
 178              		.loc 2 21 5 is_stmt 1
 179 00bc 630A0500 		beqz	a0,.L7
  22:src/Main.cpp  ****         printString("allocated \n");
 180              		.loc 2 22 9
 181              		.loc 2 22 20 is_stmt 0
 182 00c0 17050000 		lla	a0,.LC0
 182      13050500 
 183              	.LVL15:
 184 00c8 97000000 		call	_Z11printStringPKc@plt
 184      E7800000 
 185              	.LVL16:
 186              	.L7:
  23:src/Main.cpp  ****     }
  24:src/Main.cpp  **** 
  25:src/Main.cpp  ****     return 0;
GAS LISTING /tmp/cciWyYo0.s 			page 8


 187              		.loc 2 25 5 is_stmt 1
  26:src/Main.cpp  **** }
 188              		.loc 2 26 1 is_stmt 0
 189 00d0 13050000 		li	a0,0
 190 00d4 83308100 		ld	ra,8(sp)
 191              		.cfi_restore 1
 192 00d8 03340100 		ld	s0,0(sp)
 193              		.cfi_restore 8
 194              		.cfi_def_cfa 2, 16
 195 00dc 13010101 		addi	sp,sp,16
 196              		.cfi_def_cfa_offset 0
 197 00e0 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE26:
 201              	.Letext0:
 202              		.file 4 "src/../h/../lib/hw.h"
 203              		.file 5 "src/../h/Print.hpp"
GAS LISTING /tmp/cciWyYo0.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/cciWyYo0.s:9      .text:0000000000000000 _Z7syscallP4args
     /tmp/cciWyYo0.s:13     .text:0000000000000000 .L0 
     /tmp/cciWyYo0.s:15     .text:0000000000000000 .L0 
     /tmp/cciWyYo0.s:16     .text:0000000000000004 .L0 
     /tmp/cciWyYo0.s:18     .text:0000000000000008 .L0 
     /tmp/cciWyYo0.s:20     .text:000000000000000c .L0 
     /tmp/cciWyYo0.s:22     .text:000000000000000c .L0 
     /tmp/cciWyYo0.s:23     .text:000000000000000c .L0 
     /tmp/cciWyYo0.s:26     .text:0000000000000010 .L0 
     /tmp/cciWyYo0.s:27     .text:0000000000000010 .L0 
     /tmp/cciWyYo0.s:30     .text:0000000000000014 .L0 
src/../h/syscall_c.h:33     .text:0000000000000014 .L0 
     /tmp/cciWyYo0.s:36     .text:0000000000000018 .L0 
src/../h/syscall_c.h:34     .text:0000000000000018 .L0 
     /tmp/cciWyYo0.s:41     .text:000000000000001c .L0 
src/../h/syscall_c.h:38     .text:000000000000001c .L0 
     /tmp/cciWyYo0.s:47     .text:0000000000000020 .L0 
     /tmp/cciWyYo0.s:48     .text:0000000000000024 .L0 
     /tmp/cciWyYo0.s:49     .text:0000000000000024 .L0 
     /tmp/cciWyYo0.s:51     .text:0000000000000028 .L0 
     /tmp/cciWyYo0.s:53     .text:000000000000002c .L0 
     /tmp/cciWyYo0.s:59     .text:000000000000002c _Z9mem_allocm
     /tmp/cciWyYo0.s:62     .text:000000000000002c .L0 
     /tmp/cciWyYo0.s:64     .text:000000000000002c .L0 
     /tmp/cciWyYo0.s:65     .text:0000000000000030 .L0 
     /tmp/cciWyYo0.s:69     .text:000000000000003c .L0 
     /tmp/cciWyYo0.s:70     .text:000000000000003c .L0 
     /tmp/cciWyYo0.s:71     .text:000000000000003c .L0 
     /tmp/cciWyYo0.s:73     .text:0000000000000040 .L0 
     /tmp/cciWyYo0.s:76     .text:0000000000000044 .L0 
     /tmp/cciWyYo0.s:77     .text:0000000000000044 .L0 
     /tmp/cciWyYo0.s:85     .text:0000000000000058 .L0 
     /tmp/cciWyYo0.s:86     .text:0000000000000058 .L0 
     /tmp/cciWyYo0.s:89     .text:0000000000000060 .L0 
     /tmp/cciWyYo0.s:90     .text:0000000000000060 .L0 
     /tmp/cciWyYo0.s:93     .text:0000000000000064 .L0 
     /tmp/cciWyYo0.s:94     .text:0000000000000064 .L0 
     /tmp/cciWyYo0.s:97     .text:0000000000000068 .L0 
     /tmp/cciWyYo0.s:99     .text:000000000000006c .L0 
     /tmp/cciWyYo0.s:100    .text:000000000000006c .L0 
     /tmp/cciWyYo0.s:104    .text:0000000000000070 .L0 
     /tmp/cciWyYo0.s:105    .text:0000000000000070 .L0 
     /tmp/cciWyYo0.s:107    .text:0000000000000074 .L0 
     /tmp/cciWyYo0.s:108    .text:0000000000000074 .L0 
     /tmp/cciWyYo0.s:111    .text:000000000000007c .L0 
     /tmp/cciWyYo0.s:112    .text:000000000000007c .L0 
src/../h/syscall_c.h:56     .text:000000000000007c .L0 
     /tmp/cciWyYo0.s:119    .text:0000000000000080 .L0 
     /tmp/cciWyYo0.s:121    .text:0000000000000080 .L0 
     /tmp/cciWyYo0.s:122    .text:0000000000000084 .L0 
     /tmp/cciWyYo0.s:124    .text:0000000000000088 .L0 
     /tmp/cciWyYo0.s:125    .text:0000000000000088 .L0 
     /tmp/cciWyYo0.s:127    .text:000000000000008c .L0 
     /tmp/cciWyYo0.s:129    .text:0000000000000090 .L0 
     /tmp/cciWyYo0.s:131    .text:0000000000000094 .L0 
GAS LISTING /tmp/cciWyYo0.s 			page 10


     /tmp/cciWyYo0.s:142    .text:0000000000000094 main
     /tmp/cciWyYo0.s:146    .text:0000000000000094 .L0 
     /tmp/cciWyYo0.s:147    .text:0000000000000094 .L0 
     /tmp/cciWyYo0.s:148    .text:0000000000000098 .L0 
     /tmp/cciWyYo0.s:151    .text:00000000000000a0 .L0 
     /tmp/cciWyYo0.s:152    .text:00000000000000a0 .L0 
     /tmp/cciWyYo0.s:154    .text:00000000000000a4 .L0 
     /tmp/cciWyYo0.s:156    .text:00000000000000a4 .L0 
     /tmp/cciWyYo0.s:157    .text:00000000000000a4 .L0 
     /tmp/cciWyYo0.s:163    .text:00000000000000ac .L0 
  src/../h/Riscv.hpp:125    .text:00000000000000ac .L0 
     /tmp/cciWyYo0.s:173    .text:00000000000000b0 .L0 
     /tmp/cciWyYo0.s:174    .text:00000000000000b0 .L0 
     /tmp/cciWyYo0.s:175    .text:00000000000000b0 .L0 
     /tmp/cciWyYo0.s:179    .text:00000000000000bc .L0 
     /tmp/cciWyYo0.s:181    .text:00000000000000c0 .L0 
     /tmp/cciWyYo0.s:182    .text:00000000000000c0 .L0 
     /tmp/cciWyYo0.s:188    .text:00000000000000d0 .L0 
     /tmp/cciWyYo0.s:189    .text:00000000000000d0 .L0 
     /tmp/cciWyYo0.s:191    .text:00000000000000d8 .L0 
     /tmp/cciWyYo0.s:193    .text:00000000000000dc .L0 
     /tmp/cciWyYo0.s:194    .text:00000000000000dc .L0 
     /tmp/cciWyYo0.s:196    .text:00000000000000e0 .L0 
     /tmp/cciWyYo0.s:198    .text:00000000000000e4 .L0 
     /tmp/cciWyYo0.s:204    .text:00000000000000e4 .L0 
     /tmp/cciWyYo0.s:157    .text:00000000000000a4 .L0 
     /tmp/cciWyYo0.s:136    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cciWyYo0.s:182    .text:00000000000000c0 .L0 
     /tmp/cciWyYo0.s:102    .text:0000000000000070 .L4
     /tmp/cciWyYo0.s:186    .text:00000000000000d0 .L7
     /tmp/cciWyYo0.s:730    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cciWyYo0.s:1444   .debug_str:00000000000001de .LASF63
     /tmp/cciWyYo0.s:1470   .debug_str:0000000000000322 .LASF64
     /tmp/cciWyYo0.s:1386   .debug_str:000000000000002d .LASF65
     /tmp/cciWyYo0.s:5      .text:0000000000000000 .Ltext0
     /tmp/cciWyYo0.s:201    .text:00000000000000e4 .Letext0
     /tmp/cciWyYo0.s:1378   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cciWyYo0.s:1460   .debug_str:00000000000002fc .LASF0
     /tmp/cciWyYo0.s:1434   .debug_str:0000000000000196 .LASF1
     /tmp/cciWyYo0.s:1424   .debug_str:0000000000000153 .LASF2
     /tmp/cciWyYo0.s:1400   .debug_str:0000000000000099 .LASF4
     /tmp/cciWyYo0.s:1430   .debug_str:000000000000017c .LASF3
     /tmp/cciWyYo0.s:1384   .debug_str:0000000000000026 .LASF5
     /tmp/cciWyYo0.s:1382   .debug_str:0000000000000013 .LASF6
     /tmp/cciWyYo0.s:1414   .debug_str:00000000000000f8 .LASF7
     /tmp/cciWyYo0.s:1478   .debug_str:000000000000035d .LASF8
     /tmp/cciWyYo0.s:1398   .debug_str:000000000000008b .LASF9
     /tmp/cciWyYo0.s:1530   .debug_str:0000000000000503 .LASF10
     /tmp/cciWyYo0.s:1418   .debug_str:000000000000011e .LASF11
     /tmp/cciWyYo0.s:1512   .debug_str:0000000000000486 .LASF12
     /tmp/cciWyYo0.s:1486   .debug_str:00000000000003ab .LASF13
     /tmp/cciWyYo0.s:1436   .debug_str:00000000000001a9 .LASF14
     /tmp/cciWyYo0.s:1406   .debug_str:00000000000000c0 .LASF15
     /tmp/cciWyYo0.s:1482   .debug_str:000000000000037f .LASF16
     /tmp/cciWyYo0.s:1408   .debug_str:00000000000000d6 .LASF66
     /tmp/cciWyYo0.s:1442   .debug_str:00000000000001d3 .LASF49
     /tmp/cciWyYo0.s:1500   .debug_str:0000000000000438 .LASF51
GAS LISTING /tmp/cciWyYo0.s 			page 11


     /tmp/cciWyYo0.s:1448   .debug_str:00000000000002a7 .LASF17
     /tmp/cciWyYo0.s:1412   .debug_str:00000000000000e3 .LASF19
     /tmp/cciWyYo0.s:1450   .debug_str:00000000000002b0 .LASF21
     /tmp/cciWyYo0.s:1402   .debug_str:00000000000000a0 .LASF23
     /tmp/cciWyYo0.s:1466   .debug_str:0000000000000316 .LASF18
     /tmp/cciWyYo0.s:1428   .debug_str:0000000000000169 .LASF20
     /tmp/cciWyYo0.s:1410   .debug_str:00000000000000dc .LASF22
     /tmp/cciWyYo0.s:1416   .debug_str:000000000000010b .LASF24
     /tmp/cciWyYo0.s:1462   .debug_str:0000000000000309 .LASF25
     /tmp/cciWyYo0.s:1492   .debug_str:00000000000003f3 .LASF26
     /tmp/cciWyYo0.s:1432   .debug_str:000000000000018e .LASF27
     /tmp/cciWyYo0.s:1476   .debug_str:0000000000000349 .LASF28
     /tmp/cciWyYo0.s:1502   .debug_str:0000000000000450 .LASF29
     /tmp/cciWyYo0.s:1392   .debug_str:000000000000006c .LASF30
     /tmp/cciWyYo0.s:1426   .debug_str:0000000000000161 .LASF31
     /tmp/cciWyYo0.s:1514   .debug_str:0000000000000496 .LASF32
     /tmp/cciWyYo0.s:1524   .debug_str:00000000000004de .LASF33
     /tmp/cciWyYo0.s:1380   .debug_str:0000000000000000 .LASF34
     /tmp/cciWyYo0.s:1388   .debug_str:000000000000005d .LASF35
     /tmp/cciWyYo0.s:1472   .debug_str:000000000000032f .LASF36
     /tmp/cciWyYo0.s:1510   .debug_str:0000000000000480 .LASF37
     /tmp/cciWyYo0.s:1480   .debug_str:000000000000036d .LASF38
     /tmp/cciWyYo0.s:1396   .debug_str:0000000000000085 .LASF39
     /tmp/cciWyYo0.s:1508   .debug_str:000000000000046e .LASF40
     /tmp/cciWyYo0.s:1498   .debug_str:000000000000042d .LASF41
     /tmp/cciWyYo0.s:1456   .debug_str:00000000000002c8 .LASF42
     /tmp/cciWyYo0.s:1404   .debug_str:00000000000000b5 .LASF43
     /tmp/cciWyYo0.s:1440   .debug_str:00000000000001bb .LASF44
     /tmp/cciWyYo0.s:1452   .debug_str:00000000000002b9 .LASF45
     /tmp/cciWyYo0.s:1484   .debug_str:0000000000000395 .LASF46
     /tmp/cciWyYo0.s:1506   .debug_str:0000000000000464 .LASF47
     /tmp/cciWyYo0.s:1490   .debug_str:00000000000003dd .LASF48
     /tmp/cciWyYo0.s:1526   .debug_str:00000000000004e5 .LASF50
     /tmp/cciWyYo0.s:1458   .debug_str:00000000000002e0 .LASF52
     /tmp/cciWyYo0.s:1422   .debug_str:000000000000013e .LASF53
     /tmp/cciWyYo0.s:1488   .debug_str:00000000000003bb .LASF55
     /tmp/cciWyYo0.s:1528   .debug_str:00000000000004f4 .LASF54
     /tmp/cciWyYo0.s:1496   .debug_str:0000000000000411 .LASF56
     /tmp/cciWyYo0.s:1394   .debug_str:0000000000000080 .LASF67
     /tmp/cciWyYo0.s:1468   .debug_str:000000000000031d .LASF58
     /tmp/cciWyYo0.s:143    .text:0000000000000094 .LFB26
     /tmp/cciWyYo0.s:199    .text:00000000000000e4 .LFE26
     /tmp/cciWyYo0.s:1326   .debug_loc:0000000000000000 .LLST3
     /tmp/cciWyYo0.s:159    .text:00000000000000ac .LBB4
     /tmp/cciWyYo0.s:171    .text:00000000000000b0 .LBE4
     /tmp/cciWyYo0.s:177    .text:00000000000000bc .LVL14
     /tmp/cciWyYo0.s:185    .text:00000000000000d0 .LVL16
     /tmp/cciWyYo0.s:1494   .debug_str:0000000000000407 .LASF68
     /tmp/cciWyYo0.s:1522   .debug_str:00000000000004d0 .LASF69
     /tmp/cciWyYo0.s:60     .text:000000000000002c .LFB25
     /tmp/cciWyYo0.s:132    .text:0000000000000094 .LFE25
     /tmp/cciWyYo0.s:1464   .debug_str:0000000000000311 .LASF60
     /tmp/cciWyYo0.s:1333   .debug_loc:0000000000000023 .LLST0
     /tmp/cciWyYo0.s:1351   .debug_loc:000000000000006f .LLST1
     /tmp/cciWyYo0.s:1474   .debug_str:0000000000000342 .LASF57
     /tmp/cciWyYo0.s:1358   .debug_loc:0000000000000092 .LLST2
     /tmp/cciWyYo0.s:80     .text:0000000000000050 .LVL5
GAS LISTING /tmp/cciWyYo0.s 			page 12


     /tmp/cciWyYo0.s:109    .text:000000000000007c .LVL10
     /tmp/cciWyYo0.s:1390   .debug_str:0000000000000064 .LASF59
     /tmp/cciWyYo0.s:1420   .debug_str:000000000000012d .LASF70
     /tmp/cciWyYo0.s:10     .text:0000000000000000 .LFB24
     /tmp/cciWyYo0.s:54     .text:000000000000002c .LFE24
     /tmp/cciWyYo0.s:1446   .debug_str:00000000000002a2 .LASF61
     /tmp/cciWyYo0.s:1454   .debug_str:00000000000002c3 .LASF62
     /tmp/cciWyYo0.s:1438   .debug_str:00000000000001b5 .LASF71
     /tmp/cciWyYo0.s:1516   .debug_str:00000000000004aa .LASF72
     /tmp/cciWyYo0.s:1504   .debug_str:0000000000000458 .LASF73
     /tmp/cciWyYo0.s:1520   .debug_str:00000000000004ca .LASF74
     /tmp/cciWyYo0.s:1518   .debug_str:00000000000004bd .LASF75
     /tmp/cciWyYo0.s:183    .text:00000000000000c8 .LVL15
     /tmp/cciWyYo0.s:63     .text:000000000000002c .LVL3
     /tmp/cciWyYo0.s:78     .text:0000000000000048 .LVL4
     /tmp/cciWyYo0.s:95     .text:0000000000000068 .LVL8
     /tmp/cciWyYo0.s:83     .text:0000000000000058 .LVL6
     /tmp/cciWyYo0.s:91     .text:0000000000000064 .LVL7
     /tmp/cciWyYo0.s:205    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Znwm
_ZN5Riscv14supervisorTrapEv
_Z11printStringPKc
