GAS LISTING /tmp/cckmRDJM.s 			page 1


   1              		.file	"Main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7syscallP4args
   9              	_Z7syscallP4args:
  10              	.LFB28:
  11              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //
   2:src/../h/syscall_c.h **** // Created by os on 6/19/22.
   3:src/../h/syscall_c.h **** //
   4:src/../h/syscall_c.h **** 
   5:src/../h/syscall_c.h **** #ifndef PROJECT_BASE_V1_1_SYSCALL_C_H
   6:src/../h/syscall_c.h **** #define PROJECT_BASE_V1_1_SYSCALL_C_H
   7:src/../h/syscall_c.h **** 
   8:src/../h/syscall_c.h **** 
   9:src/../h/syscall_c.h **** #include "../h/MemoryAllocator.hpp"
  10:src/../h/syscall_c.h **** 
  11:src/../h/syscall_c.h **** 
  12:src/../h/syscall_c.h **** 
  13:src/../h/syscall_c.h **** //extern "C" void supervisorTrap();
  14:src/../h/syscall_c.h **** 
  15:src/../h/syscall_c.h **** struct args{
  16:src/../h/syscall_c.h ****     uint64 a0;
  17:src/../h/syscall_c.h ****     uint64 a1;
  18:src/../h/syscall_c.h ****     uint64 a2;
  19:src/../h/syscall_c.h ****     uint64 a3;
  20:src/../h/syscall_c.h **** 
  21:src/../h/syscall_c.h **** };
  22:src/../h/syscall_c.h **** 
  23:src/../h/syscall_c.h **** void syscall(args* arg){
  12              		.loc 1 23 24
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  24:src/../h/syscall_c.h ****     //should prepare arguments in registers
  25:src/../h/syscall_c.h ****     //should call interrupt routine with ecall
  26:src/../h/syscall_c.h **** 
  27:src/../h/syscall_c.h **** 
  28:src/../h/syscall_c.h ****     uint64 arg0 = arg->a0;
  21              		.loc 1 28 5
  22              		.loc 1 28 12 is_stmt 0
  23 000c 03360500 		ld	a2,0(a0)
  24              	.LVL1:
  29:src/../h/syscall_c.h ****     uint64 arg1 = arg->a1;
  25              		.loc 1 29 5 is_stmt 1
  26              		.loc 1 29 12 is_stmt 0
  27 0010 83368500 		ld	a3,8(a0)
  28              	.LVL2:
  30:src/../h/syscall_c.h ****     uint64 arg2 = arg->a2;
GAS LISTING /tmp/cckmRDJM.s 			page 2


  29              		.loc 1 30 5 is_stmt 1
  30              		.loc 1 30 12 is_stmt 0
  31 0014 03370501 		ld	a4,16(a0)
  32              	.LVL3:
  31:src/../h/syscall_c.h ****     uint64 arg3 = arg->a3;
  33              		.loc 1 31 5 is_stmt 1
  34              		.loc 1 31 12 is_stmt 0
  35 0018 83378501 		ld	a5,24(a0)
  36              	.LVL4:
  32:src/../h/syscall_c.h **** 
  33:src/../h/syscall_c.h ****     //lock this section?
  34:src/../h/syscall_c.h ****     __asm__ volatile("mv a0, %0" : : "r" (arg0));
  37              		.loc 1 34 5 is_stmt 1
  38              		.loc 1 34 49 is_stmt 0
  39              	#APP
  40              	# 34 "src/../h/syscall_c.h" 1
  35              	    __asm__ volatile("mv a1, %0" : : "r" (arg1));
  41              		mv a0, a2
  42              	# 0 "" 2
  43              		.loc 1 35 5 is_stmt 1
  44              		.loc 1 35 49 is_stmt 0
  45              	# 35 "src/../h/syscall_c.h" 1
  36              	    __asm__ volatile("mv a2, %0" : : "r" (arg2));
  46              		mv a1, a3
  47              	# 0 "" 2
  48              		.loc 1 36 5 is_stmt 1
  49              		.loc 1 36 49 is_stmt 0
  50              	# 36 "src/../h/syscall_c.h" 1
  37              	    __asm__ volatile("mv a3, %0" : : "r" (arg3));
  51              		mv a2, a4
  52              	# 0 "" 2
  53              		.loc 1 37 5 is_stmt 1
  54              		.loc 1 37 49 is_stmt 0
  55              	# 37 "src/../h/syscall_c.h" 1
  38              	
  39:src/../h/syscall_c.h **** 
  40:src/../h/syscall_c.h **** 
  41:src/../h/syscall_c.h **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  42:src/../h/syscall_c.h ****     __asm__ volatile ("ecall");
  56              		mv a3, a5
  57              	# 0 "" 2
  58              		.loc 1 42 5 is_stmt 1
  59              		.loc 1 42 31 is_stmt 0
  60              	# 42 "src/../h/syscall_c.h" 1
  43              	
  44:src/../h/syscall_c.h **** 
  45:src/../h/syscall_c.h **** }
  61              		ecall
  62              	# 0 "" 2
  63              		.loc 1 45 1
  64              	#NO_APP
  65 0030 03348100 		ld	s0,8(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 16
  68 0034 13010101 		addi	sp,sp,16
  69              		.cfi_def_cfa_offset 0
  70 0038 67800000 		jr	ra
GAS LISTING /tmp/cckmRDJM.s 			page 3


  71              		.cfi_endproc
  72              	.LFE28:
  74              		.align	2
  75              		.globl	_Z9mem_allocm
  77              	_Z9mem_allocm:
  78              	.LFB29:
  46:src/../h/syscall_c.h **** 
  47:src/../h/syscall_c.h **** void* mem_alloc (size_t size){
  79              		.loc 1 47 30 is_stmt 1
  80              		.cfi_startproc
  81              	.LVL5:
  82 003c 130101FD 		addi	sp,sp,-48
  83              		.cfi_def_cfa_offset 48
  84 0040 23341102 		sd	ra,40(sp)
  85 0044 23308102 		sd	s0,32(sp)
  86              		.cfi_offset 1, -8
  87              		.cfi_offset 8, -16
  88 0048 13040103 		addi	s0,sp,48
  89              		.cfi_def_cfa 8, 0
  48:src/../h/syscall_c.h ****     //prepares parameters to arguments
  49:src/../h/syscall_c.h ****     //executes system call instruction
  50:src/../h/syscall_c.h ****     args arg;
  90              		.loc 1 50 5
  51:src/../h/syscall_c.h ****     arg.a0=0x01;
  91              		.loc 1 51 5
  92              		.loc 1 51 11 is_stmt 0
  93 004c 93071000 		li	a5,1
  94 0050 2338F4FC 		sd	a5,-48(s0)
  52:src/../h/syscall_c.h **** 
  53:src/../h/syscall_c.h ****     size_t blocks = size/MEM_BLOCK_SIZE;
  95              		.loc 1 53 5 is_stmt 1
  96              		.loc 1 53 12 is_stmt 0
  97 0054 93576500 		srli	a5,a0,6
  98              	.LVL6:
  54:src/../h/syscall_c.h ****     if(size%MEM_BLOCK_SIZE!=0)blocks++;
  99              		.loc 1 54 5 is_stmt 1
 100              		.loc 1 54 12 is_stmt 0
 101 0058 1375F503 		andi	a0,a0,63
 102              	.LVL7:
 103              		.loc 1 54 5
 104 005c 63040500 		beqz	a0,.L4
 105              		.loc 1 54 31 is_stmt 1 discriminator 1
 106              		.loc 1 54 37 is_stmt 0 discriminator 1
 107 0060 93871700 		addi	a5,a5,1
 108              	.LVL8:
 109              	.L4:
  55:src/../h/syscall_c.h ****     arg.a1=blocks;
 110              		.loc 1 55 5 is_stmt 1
 111              		.loc 1 55 11 is_stmt 0
 112 0064 233CF4FC 		sd	a5,-40(s0)
  56:src/../h/syscall_c.h **** 
  57:src/../h/syscall_c.h ****     syscall(&arg);
 113              		.loc 1 57 5 is_stmt 1
 114              		.loc 1 57 12 is_stmt 0
 115 0068 130504FD 		addi	a0,s0,-48
 116 006c 97000000 		call	_Z7syscallP4args
 116      E7800000 
GAS LISTING /tmp/cckmRDJM.s 			page 4


 117              	.LVL9:
  58:src/../h/syscall_c.h **** 
  59:src/../h/syscall_c.h ****     uint64 ret;
 118              		.loc 1 59 5 is_stmt 1
  60:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 119              		.loc 1 60 5
 120              		.loc 1 60 47 is_stmt 0
 121              	#APP
 122              	# 60 "src/../h/syscall_c.h" 1
  61              	
 123              		mv a0, a0
 124              	# 0 "" 2
 125              	.LVL10:
  62:src/../h/syscall_c.h ****     return (void*)ret;
 126              		.loc 1 62 5 is_stmt 1
  63:src/../h/syscall_c.h **** }
 127              		.loc 1 63 1 is_stmt 0
 128              	#NO_APP
 129 0078 83308102 		ld	ra,40(sp)
 130              		.cfi_restore 1
 131 007c 03340102 		ld	s0,32(sp)
 132              		.cfi_restore 8
 133              		.cfi_def_cfa 2, 48
 134 0080 13010103 		addi	sp,sp,48
 135              		.cfi_def_cfa_offset 0
 136 0084 67800000 		jr	ra
 137              		.cfi_endproc
 138              	.LFE29:
 140              		.align	2
 141              		.globl	_Z8mem_freePv
 143              	_Z8mem_freePv:
 144              	.LFB30:
  64:src/../h/syscall_c.h **** 
  65:src/../h/syscall_c.h **** int mem_free (void* p){
 145              		.loc 1 65 23 is_stmt 1
 146              		.cfi_startproc
 147              	.LVL11:
 148 0088 130101FD 		addi	sp,sp,-48
 149              		.cfi_def_cfa_offset 48
 150 008c 23341102 		sd	ra,40(sp)
 151 0090 23308102 		sd	s0,32(sp)
 152              		.cfi_offset 1, -8
 153              		.cfi_offset 8, -16
 154 0094 13040103 		addi	s0,sp,48
 155              		.cfi_def_cfa 8, 0
  66:src/../h/syscall_c.h ****     args arg;
 156              		.loc 1 66 5
  67:src/../h/syscall_c.h ****     arg.a0=0x02;
 157              		.loc 1 67 5
 158              		.loc 1 67 11 is_stmt 0
 159 0098 93072000 		li	a5,2
 160 009c 2338F4FC 		sd	a5,-48(s0)
  68:src/../h/syscall_c.h ****     arg.a1=(uint64)p;
 161              		.loc 1 68 5 is_stmt 1
 162              		.loc 1 68 11 is_stmt 0
 163 00a0 233CA4FC 		sd	a0,-40(s0)
  69:src/../h/syscall_c.h **** 
GAS LISTING /tmp/cckmRDJM.s 			page 5


  70:src/../h/syscall_c.h ****     syscall(&arg);
 164              		.loc 1 70 5 is_stmt 1
 165              		.loc 1 70 12 is_stmt 0
 166 00a4 130504FD 		addi	a0,s0,-48
 167              	.LVL12:
 168 00a8 97000000 		call	_Z7syscallP4args
 168      E7800000 
 169              	.LVL13:
  71:src/../h/syscall_c.h ****     uint64 ret;
 170              		.loc 1 71 5 is_stmt 1
  72:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 171              		.loc 1 72 5
 172              		.loc 1 72 47 is_stmt 0
 173              	#APP
 174              	# 72 "src/../h/syscall_c.h" 1
  73              	    return (int)ret;
 175              		mv a0, a0
 176              	# 0 "" 2
 177              	.LVL14:
 178              		.loc 1 73 5 is_stmt 1
  74:src/../h/syscall_c.h **** }
 179              		.loc 1 74 1 is_stmt 0
 180              	#NO_APP
 181 00b4 1B050500 		sext.w	a0,a0
 182              	.LVL15:
 183 00b8 83308102 		ld	ra,40(sp)
 184              		.cfi_restore 1
 185 00bc 03340102 		ld	s0,32(sp)
 186              		.cfi_restore 8
 187              		.cfi_def_cfa 2, 48
 188 00c0 13010103 		addi	sp,sp,48
 189              		.cfi_def_cfa_offset 0
 190 00c4 67800000 		jr	ra
 191              		.cfi_endproc
 192              	.LFE30:
 194              		.align	2
 195              		.globl	_Z13thread_createPP7_threadPFvPvES2_
 197              	_Z13thread_createPP7_threadPFvPvES2_:
 198              	.LFB31:
  75:src/../h/syscall_c.h **** 
  76:src/../h/syscall_c.h **** class _thread;
  77:src/../h/syscall_c.h **** typedef _thread* thread_t;  //thread_t je pokazivac, a handle je pokazivac na pokazivac
  78:src/../h/syscall_c.h **** int thread_create (
  79:src/../h/syscall_c.h ****         thread_t* handle,
  80:src/../h/syscall_c.h ****         void(*start_routine)(void*),
  81:src/../h/syscall_c.h ****         void* arg
  82:src/../h/syscall_c.h **** ){
 199              		.loc 1 82 2 is_stmt 1
 200              		.cfi_startproc
 201              	.LVL16:
 202 00c8 130101FD 		addi	sp,sp,-48
 203              		.cfi_def_cfa_offset 48
 204 00cc 23341102 		sd	ra,40(sp)
 205 00d0 23308102 		sd	s0,32(sp)
 206 00d4 233C9100 		sd	s1,24(sp)
 207 00d8 23382101 		sd	s2,16(sp)
 208 00dc 23343101 		sd	s3,8(sp)
GAS LISTING /tmp/cckmRDJM.s 			page 6


 209              		.cfi_offset 1, -8
 210              		.cfi_offset 8, -16
 211              		.cfi_offset 9, -24
 212              		.cfi_offset 18, -32
 213              		.cfi_offset 19, -40
 214 00e0 13040103 		addi	s0,sp,48
 215              		.cfi_def_cfa 8, 0
 216 00e4 93090500 		mv	s3,a0
 217 00e8 13890500 		mv	s2,a1
 218 00ec 93040600 		mv	s1,a2
  83:src/../h/syscall_c.h ****     args* myArgs = (args*)MemoryAllocator::kmem_alloc(sizeof(args));
 219              		.loc 1 83 5
 220              		.loc 1 83 54 is_stmt 0
 221 00f0 13050002 		li	a0,32
 222              	.LVL17:
 223 00f4 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 223      E7800000 
 224              	.LVL18:
  84:src/../h/syscall_c.h ****     myArgs->a0=0x11;
 225              		.loc 1 84 5 is_stmt 1
 226              		.loc 1 84 15 is_stmt 0
 227 00fc 13071001 		li	a4,17
 228 0100 2330E500 		sd	a4,0(a0)
  85:src/../h/syscall_c.h ****     myArgs->a1=(uint64)handle;
 229              		.loc 1 85 5 is_stmt 1
 230              		.loc 1 85 15 is_stmt 0
 231 0104 23343501 		sd	s3,8(a0)
  86:src/../h/syscall_c.h ****     myArgs->a2=(uint64)start_routine;
 232              		.loc 1 86 5 is_stmt 1
 233              		.loc 1 86 15 is_stmt 0
 234 0108 23382501 		sd	s2,16(a0)
  87:src/../h/syscall_c.h ****     myArgs->a3=(uint64)arg;
 235              		.loc 1 87 5 is_stmt 1
 236              		.loc 1 87 15 is_stmt 0
 237 010c 233C9500 		sd	s1,24(a0)
  88:src/../h/syscall_c.h **** 
  89:src/../h/syscall_c.h ****     syscall(myArgs);
 238              		.loc 1 89 5 is_stmt 1
 239              		.loc 1 89 12 is_stmt 0
 240 0110 97000000 		call	_Z7syscallP4args
 240      E7800000 
 241              	.LVL19:
  90:src/../h/syscall_c.h ****     uint64 ret;
 242              		.loc 1 90 5 is_stmt 1
  91:src/../h/syscall_c.h ****     __asm__ volatile("mv %0, a0" : "=r" (ret));
 243              		.loc 1 91 5
 244              		.loc 1 91 47 is_stmt 0
 245              	#APP
 246              	# 91 "src/../h/syscall_c.h" 1
  92              	    return (int)ret;
 247              		mv a0, a0
 248              	# 0 "" 2
 249              	.LVL20:
 250              		.loc 1 92 5 is_stmt 1
  93:src/../h/syscall_c.h **** }
 251              		.loc 1 93 1 is_stmt 0
 252              	#NO_APP
GAS LISTING /tmp/cckmRDJM.s 			page 7


 253 011c 1B050500 		sext.w	a0,a0
 254              	.LVL21:
 255 0120 83308102 		ld	ra,40(sp)
 256              		.cfi_restore 1
 257 0124 03340102 		ld	s0,32(sp)
 258              		.cfi_restore 8
 259              		.cfi_def_cfa 2, 48
 260 0128 83348101 		ld	s1,24(sp)
 261              		.cfi_restore 9
 262              	.LVL22:
 263 012c 03390101 		ld	s2,16(sp)
 264              		.cfi_restore 18
 265              	.LVL23:
 266 0130 83398100 		ld	s3,8(sp)
 267              		.cfi_restore 19
 268              	.LVL24:
 269 0134 13010103 		addi	sp,sp,48
 270              		.cfi_def_cfa_offset 0
 271 0138 67800000 		jr	ra
 272              		.cfi_endproc
 273              	.LFE31:
 275              		.section	.rodata.str1.8,"aMS",@progbits,1
 276              		.align	3
 277              	.LC0:
 278 0000 616C6C6F 		.string	"allocated \n"
 278      63617465 
 278      64200A00 
 279 000c 00000000 		.align	3
 280              	.LC1:
 281 0010 73756363 		.string	"successfully freed \n"
 281      65737366 
 281      756C6C79 
 281      20667265 
 281      6564200A 
 282 0025 000000   		.align	3
 283              	.LC2:
 284 0028 6E6F7420 		.string	"not freed \n"
 284      66726565 
 284      64200A00 
 285              		.text
 286              		.align	2
 287              		.globl	main
 289              	main:
 290              	.LFB32:
 291              		.file 2 "src/Main.cpp"
   1:src/Main.cpp  **** //
   2:src/Main.cpp  **** // Created by os on 6/18/22.
   3:src/Main.cpp  **** //
   4:src/Main.cpp  **** 
   5:src/Main.cpp  **** #include "../h/Riscv.hpp"
   6:src/Main.cpp  **** #include "../h/List.hpp"
   7:src/Main.cpp  **** #include "../h/syscall_c.h"
   8:src/Main.cpp  **** #include "../h/Print.hpp"
   9:src/Main.cpp  **** 
  10:src/Main.cpp  **** 
  11:src/Main.cpp  **** 
  12:src/Main.cpp  **** int main(){
GAS LISTING /tmp/cckmRDJM.s 			page 8


 292              		.loc 2 12 11 is_stmt 1
 293              		.cfi_startproc
 294 013c 130101FE 		addi	sp,sp,-32
 295              		.cfi_def_cfa_offset 32
 296 0140 233C1100 		sd	ra,24(sp)
 297 0144 23388100 		sd	s0,16(sp)
 298 0148 23349100 		sd	s1,8(sp)
 299              		.cfi_offset 1, -8
 300              		.cfi_offset 8, -16
 301              		.cfi_offset 9, -24
 302 014c 13040102 		addi	s0,sp,32
 303              		.cfi_def_cfa 8, 0
  13:src/Main.cpp  **** 
  14:src/Main.cpp  **** //    Riscv::w_stvec((uint64)&supervisorTrap);
  15:src/Main.cpp  **** //    Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  16:src/Main.cpp  **** //    __asm__ volatile ("ecall");
  17:src/Main.cpp  ****     Riscv::w_stvec((uint64)&Riscv::supervisorTrap);
 304              		.loc 2 17 5
 305              		.loc 2 17 19 is_stmt 0
 306 0150 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 306      83B70700 
 307              	.LVL25:
 308              	.LBB4:
 309              	.LBB5:
 310              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 6/17/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/Riscv.hpp ****     static void popSppSpie();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     // read register scause
  19:src/../h/Riscv.hpp ****     static uint64 r_scause();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     // write register scause
  22:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     // read register sepc
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     // write register sepc
  28:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     // read register stvec
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckmRDJM.s 			page 9


  33:src/../h/Riscv.hpp ****     // write register stvec
  34:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     // read register stval
  37:src/../h/Riscv.hpp ****     static uint64 r_stval();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     // write register stval
  40:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     enum BitMaskSip
  43:src/../h/Riscv.hpp ****     {
  44:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  45:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  46:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  47:src/../h/Riscv.hpp ****     };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     // mask set register sip
  50:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp ****     // mask clear register sip
  53:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp ****     // read register sip
  56:src/../h/Riscv.hpp ****     static uint64 r_sip();
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     // write register sip
  59:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  62:src/../h/Riscv.hpp ****     {
  63:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  64:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  66:src/../h/Riscv.hpp ****     };
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp ****     // mask set register sstatus
  69:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // mask clear register sstatus
  72:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     // read register sstatus
  75:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     // write register sstatus
  78:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     // supervisor trap
  81:src/../h/Riscv.hpp ****     static void supervisorTrap();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** private:
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp ****     // supervisor trap handler
  86:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void syscallHandler();
  89:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckmRDJM.s 			page 10


  90:src/../h/Riscv.hpp **** };
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause()
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     uint64 volatile scause;
  95:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  96:src/../h/Riscv.hpp ****     return scause;
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 100:src/../h/Riscv.hpp **** {
 101:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc()
 105:src/../h/Riscv.hpp **** {
 106:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 107:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 108:src/../h/Riscv.hpp ****     return sepc;
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 112:src/../h/Riscv.hpp **** {
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec()
 117:src/../h/Riscv.hpp **** {
 118:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 119:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 120:src/../h/Riscv.hpp ****     return stvec;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 124:src/../h/Riscv.hpp **** {
 125:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 311              		.loc 3 125 5 is_stmt 1
 312              		.loc 3 125 69 is_stmt 0
 313              	#APP
 314              	# 125 "src/../h/Riscv.hpp" 1
 126              	}
 315              		csrw stvec, a5
 316              	# 0 "" 2
 317              	.LVL26:
 318              	#NO_APP
 319              	.LBE5:
 320              	.LBE4:
  18:src/Main.cpp  **** 
  19:src/Main.cpp  ****     void* ptr;
 321              		.loc 2 19 5 is_stmt 1
  20:src/Main.cpp  ****     ptr = mem_alloc(300);
 322              		.loc 2 20 5
 323              		.loc 2 20 20 is_stmt 0
 324 015c 1305C012 		li	a0,300
 325 0160 97000000 		call	_Z9mem_allocm
 325      E7800000 
 326              	.LVL27:
GAS LISTING /tmp/cckmRDJM.s 			page 11


 327 0168 93040500 		mv	s1,a0
 328              	.LVL28:
  21:src/Main.cpp  ****     if(ptr!=nullptr){
 329              		.loc 2 21 5 is_stmt 1
 330 016c 630A0500 		beqz	a0,.L11
  22:src/Main.cpp  ****         printString("allocated \n");
 331              		.loc 2 22 9
 332              		.loc 2 22 20 is_stmt 0
 333 0170 17050000 		lla	a0,.LC0
 333      13050500 
 334 0178 97000000 		call	_Z11printStringPKc@plt
 334      E7800000 
 335              	.LVL29:
 336              	.L11:
  23:src/Main.cpp  ****     }
  24:src/Main.cpp  ****     if(!mem_free(ptr)){
 337              		.loc 2 24 5 is_stmt 1
 338              		.loc 2 24 17 is_stmt 0
 339 0180 13850400 		mv	a0,s1
 340 0184 97000000 		call	_Z8mem_freePv
 340      E7800000 
 341              	.LVL30:
 342              		.loc 2 24 5
 343 018c 63160502 		bnez	a0,.L12
  25:src/Main.cpp  ****         printString("successfully freed \n");
 344              		.loc 2 25 9 is_stmt 1
 345              		.loc 2 25 20 is_stmt 0
 346 0190 17050000 		lla	a0,.LC1
 346      13050500 
 347 0198 97000000 		call	_Z11printStringPKc@plt
 347      E7800000 
 348              	.LVL31:
 349              	.L13:
  26:src/Main.cpp  ****     }
  27:src/Main.cpp  ****     else{
  28:src/Main.cpp  ****         printString("not freed \n");
  29:src/Main.cpp  ****     }
  30:src/Main.cpp  **** 
  31:src/Main.cpp  ****     return 0;
 350              		.loc 2 31 5 is_stmt 1
  32:src/Main.cpp  **** }
 351              		.loc 2 32 1 is_stmt 0
 352 01a0 13050000 		li	a0,0
 353 01a4 83308101 		ld	ra,24(sp)
 354              		.cfi_remember_state
 355              		.cfi_restore 1
 356 01a8 03340101 		ld	s0,16(sp)
 357              		.cfi_restore 8
 358              		.cfi_def_cfa 2, 32
 359 01ac 83348100 		ld	s1,8(sp)
 360              		.cfi_restore 9
 361              	.LVL32:
 362 01b0 13010102 		addi	sp,sp,32
 363              		.cfi_def_cfa_offset 0
 364 01b4 67800000 		jr	ra
 365              	.LVL33:
 366              	.L12:
GAS LISTING /tmp/cckmRDJM.s 			page 12


 367              		.cfi_restore_state
  28:src/Main.cpp  ****     }
 368              		.loc 2 28 9 is_stmt 1
  28:src/Main.cpp  ****     }
 369              		.loc 2 28 20 is_stmt 0
 370 01b8 17050000 		lla	a0,.LC2
 370      13050500 
 371 01c0 97000000 		call	_Z11printStringPKc@plt
 371      E7800000 
 372              	.LVL34:
 373 01c8 6FF09FFD 		j	.L13
 374              		.cfi_endproc
 375              	.LFE32:
 377              	.Letext0:
 378              		.file 4 "src/../h/../lib/hw.h"
 379              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 380              		.file 6 "src/../h/Print.hpp"
GAS LISTING /tmp/cckmRDJM.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Main.cpp
     /tmp/cckmRDJM.s:9      .text:0000000000000000 _Z7syscallP4args
     /tmp/cckmRDJM.s:13     .text:0000000000000000 .L0 
     /tmp/cckmRDJM.s:15     .text:0000000000000000 .L0 
     /tmp/cckmRDJM.s:16     .text:0000000000000004 .L0 
     /tmp/cckmRDJM.s:18     .text:0000000000000008 .L0 
     /tmp/cckmRDJM.s:20     .text:000000000000000c .L0 
     /tmp/cckmRDJM.s:22     .text:000000000000000c .L0 
     /tmp/cckmRDJM.s:23     .text:000000000000000c .L0 
     /tmp/cckmRDJM.s:26     .text:0000000000000010 .L0 
     /tmp/cckmRDJM.s:27     .text:0000000000000010 .L0 
     /tmp/cckmRDJM.s:30     .text:0000000000000014 .L0 
     /tmp/cckmRDJM.s:31     .text:0000000000000014 .L0 
     /tmp/cckmRDJM.s:34     .text:0000000000000018 .L0 
     /tmp/cckmRDJM.s:35     .text:0000000000000018 .L0 
     /tmp/cckmRDJM.s:38     .text:000000000000001c .L0 
src/../h/syscall_c.h:34     .text:000000000000001c .L0 
     /tmp/cckmRDJM.s:44     .text:0000000000000020 .L0 
src/../h/syscall_c.h:35     .text:0000000000000020 .L0 
     /tmp/cckmRDJM.s:49     .text:0000000000000024 .L0 
src/../h/syscall_c.h:36     .text:0000000000000024 .L0 
     /tmp/cckmRDJM.s:54     .text:0000000000000028 .L0 
src/../h/syscall_c.h:37     .text:0000000000000028 .L0 
     /tmp/cckmRDJM.s:59     .text:000000000000002c .L0 
src/../h/syscall_c.h:42     .text:000000000000002c .L0 
     /tmp/cckmRDJM.s:65     .text:0000000000000030 .L0 
     /tmp/cckmRDJM.s:66     .text:0000000000000034 .L0 
     /tmp/cckmRDJM.s:67     .text:0000000000000034 .L0 
     /tmp/cckmRDJM.s:69     .text:0000000000000038 .L0 
     /tmp/cckmRDJM.s:71     .text:000000000000003c .L0 
     /tmp/cckmRDJM.s:77     .text:000000000000003c _Z9mem_allocm
     /tmp/cckmRDJM.s:80     .text:000000000000003c .L0 
     /tmp/cckmRDJM.s:82     .text:000000000000003c .L0 
     /tmp/cckmRDJM.s:83     .text:0000000000000040 .L0 
     /tmp/cckmRDJM.s:86     .text:0000000000000048 .L0 
     /tmp/cckmRDJM.s:87     .text:0000000000000048 .L0 
     /tmp/cckmRDJM.s:89     .text:000000000000004c .L0 
     /tmp/cckmRDJM.s:91     .text:000000000000004c .L0 
     /tmp/cckmRDJM.s:92     .text:000000000000004c .L0 
     /tmp/cckmRDJM.s:93     .text:000000000000004c .L0 
     /tmp/cckmRDJM.s:96     .text:0000000000000054 .L0 
     /tmp/cckmRDJM.s:97     .text:0000000000000054 .L0 
     /tmp/cckmRDJM.s:100    .text:0000000000000058 .L0 
     /tmp/cckmRDJM.s:101    .text:0000000000000058 .L0 
     /tmp/cckmRDJM.s:104    .text:000000000000005c .L0 
     /tmp/cckmRDJM.s:106    .text:0000000000000060 .L0 
     /tmp/cckmRDJM.s:107    .text:0000000000000060 .L0 
     /tmp/cckmRDJM.s:111    .text:0000000000000064 .L0 
     /tmp/cckmRDJM.s:112    .text:0000000000000064 .L0 
     /tmp/cckmRDJM.s:114    .text:0000000000000068 .L0 
     /tmp/cckmRDJM.s:115    .text:0000000000000068 .L0 
     /tmp/cckmRDJM.s:119    .text:0000000000000074 .L0 
     /tmp/cckmRDJM.s:120    .text:0000000000000074 .L0 
src/../h/syscall_c.h:60     .text:0000000000000074 .L0 
     /tmp/cckmRDJM.s:127    .text:0000000000000078 .L0 
     /tmp/cckmRDJM.s:129    .text:0000000000000078 .L0 
GAS LISTING /tmp/cckmRDJM.s 			page 14


     /tmp/cckmRDJM.s:130    .text:000000000000007c .L0 
     /tmp/cckmRDJM.s:132    .text:0000000000000080 .L0 
     /tmp/cckmRDJM.s:133    .text:0000000000000080 .L0 
     /tmp/cckmRDJM.s:135    .text:0000000000000084 .L0 
     /tmp/cckmRDJM.s:137    .text:0000000000000088 .L0 
     /tmp/cckmRDJM.s:143    .text:0000000000000088 _Z8mem_freePv
     /tmp/cckmRDJM.s:146    .text:0000000000000088 .L0 
     /tmp/cckmRDJM.s:148    .text:0000000000000088 .L0 
     /tmp/cckmRDJM.s:149    .text:000000000000008c .L0 
     /tmp/cckmRDJM.s:152    .text:0000000000000094 .L0 
     /tmp/cckmRDJM.s:153    .text:0000000000000094 .L0 
     /tmp/cckmRDJM.s:155    .text:0000000000000098 .L0 
     /tmp/cckmRDJM.s:157    .text:0000000000000098 .L0 
     /tmp/cckmRDJM.s:158    .text:0000000000000098 .L0 
     /tmp/cckmRDJM.s:159    .text:0000000000000098 .L0 
     /tmp/cckmRDJM.s:162    .text:00000000000000a0 .L0 
     /tmp/cckmRDJM.s:163    .text:00000000000000a0 .L0 
     /tmp/cckmRDJM.s:165    .text:00000000000000a4 .L0 
     /tmp/cckmRDJM.s:166    .text:00000000000000a4 .L0 
     /tmp/cckmRDJM.s:171    .text:00000000000000b0 .L0 
     /tmp/cckmRDJM.s:172    .text:00000000000000b0 .L0 
src/../h/syscall_c.h:72     .text:00000000000000b0 .L0 
     /tmp/cckmRDJM.s:179    .text:00000000000000b4 .L0 
     /tmp/cckmRDJM.s:181    .text:00000000000000b4 .L0 
     /tmp/cckmRDJM.s:184    .text:00000000000000bc .L0 
     /tmp/cckmRDJM.s:186    .text:00000000000000c0 .L0 
     /tmp/cckmRDJM.s:187    .text:00000000000000c0 .L0 
     /tmp/cckmRDJM.s:189    .text:00000000000000c4 .L0 
     /tmp/cckmRDJM.s:191    .text:00000000000000c8 .L0 
     /tmp/cckmRDJM.s:197    .text:00000000000000c8 _Z13thread_createPP7_threadPFvPvES2_
     /tmp/cckmRDJM.s:200    .text:00000000000000c8 .L0 
     /tmp/cckmRDJM.s:202    .text:00000000000000c8 .L0 
     /tmp/cckmRDJM.s:203    .text:00000000000000cc .L0 
     /tmp/cckmRDJM.s:209    .text:00000000000000e0 .L0 
     /tmp/cckmRDJM.s:210    .text:00000000000000e0 .L0 
     /tmp/cckmRDJM.s:211    .text:00000000000000e0 .L0 
     /tmp/cckmRDJM.s:212    .text:00000000000000e0 .L0 
     /tmp/cckmRDJM.s:213    .text:00000000000000e0 .L0 
     /tmp/cckmRDJM.s:215    .text:00000000000000e4 .L0 
     /tmp/cckmRDJM.s:220    .text:00000000000000f0 .L0 
     /tmp/cckmRDJM.s:221    .text:00000000000000f0 .L0 
     /tmp/cckmRDJM.s:226    .text:00000000000000fc .L0 
     /tmp/cckmRDJM.s:227    .text:00000000000000fc .L0 
     /tmp/cckmRDJM.s:230    .text:0000000000000104 .L0 
     /tmp/cckmRDJM.s:231    .text:0000000000000104 .L0 
     /tmp/cckmRDJM.s:233    .text:0000000000000108 .L0 
     /tmp/cckmRDJM.s:234    .text:0000000000000108 .L0 
     /tmp/cckmRDJM.s:236    .text:000000000000010c .L0 
     /tmp/cckmRDJM.s:237    .text:000000000000010c .L0 
     /tmp/cckmRDJM.s:239    .text:0000000000000110 .L0 
     /tmp/cckmRDJM.s:240    .text:0000000000000110 .L0 
     /tmp/cckmRDJM.s:243    .text:0000000000000118 .L0 
     /tmp/cckmRDJM.s:244    .text:0000000000000118 .L0 
src/../h/syscall_c.h:91     .text:0000000000000118 .L0 
     /tmp/cckmRDJM.s:251    .text:000000000000011c .L0 
     /tmp/cckmRDJM.s:253    .text:000000000000011c .L0 
     /tmp/cckmRDJM.s:256    .text:0000000000000124 .L0 
GAS LISTING /tmp/cckmRDJM.s 			page 15


     /tmp/cckmRDJM.s:258    .text:0000000000000128 .L0 
     /tmp/cckmRDJM.s:259    .text:0000000000000128 .L0 
     /tmp/cckmRDJM.s:261    .text:000000000000012c .L0 
     /tmp/cckmRDJM.s:264    .text:0000000000000130 .L0 
     /tmp/cckmRDJM.s:267    .text:0000000000000134 .L0 
     /tmp/cckmRDJM.s:270    .text:0000000000000138 .L0 
     /tmp/cckmRDJM.s:272    .text:000000000000013c .L0 
     /tmp/cckmRDJM.s:289    .text:000000000000013c main
     /tmp/cckmRDJM.s:293    .text:000000000000013c .L0 
     /tmp/cckmRDJM.s:294    .text:000000000000013c .L0 
     /tmp/cckmRDJM.s:295    .text:0000000000000140 .L0 
     /tmp/cckmRDJM.s:299    .text:000000000000014c .L0 
     /tmp/cckmRDJM.s:300    .text:000000000000014c .L0 
     /tmp/cckmRDJM.s:301    .text:000000000000014c .L0 
     /tmp/cckmRDJM.s:303    .text:0000000000000150 .L0 
     /tmp/cckmRDJM.s:305    .text:0000000000000150 .L0 
     /tmp/cckmRDJM.s:306    .text:0000000000000150 .L0 
     /tmp/cckmRDJM.s:312    .text:0000000000000158 .L0 
  src/../h/Riscv.hpp:125    .text:0000000000000158 .L0 
     /tmp/cckmRDJM.s:322    .text:000000000000015c .L0 
     /tmp/cckmRDJM.s:323    .text:000000000000015c .L0 
     /tmp/cckmRDJM.s:324    .text:000000000000015c .L0 
     /tmp/cckmRDJM.s:330    .text:000000000000016c .L0 
     /tmp/cckmRDJM.s:332    .text:0000000000000170 .L0 
     /tmp/cckmRDJM.s:333    .text:0000000000000170 .L0 
     /tmp/cckmRDJM.s:338    .text:0000000000000180 .L0 
     /tmp/cckmRDJM.s:339    .text:0000000000000180 .L0 
     /tmp/cckmRDJM.s:343    .text:000000000000018c .L0 
     /tmp/cckmRDJM.s:345    .text:0000000000000190 .L0 
     /tmp/cckmRDJM.s:346    .text:0000000000000190 .L0 
     /tmp/cckmRDJM.s:351    .text:00000000000001a0 .L0 
     /tmp/cckmRDJM.s:352    .text:00000000000001a0 .L0 
     /tmp/cckmRDJM.s:354    .text:00000000000001a8 .L0 
     /tmp/cckmRDJM.s:355    .text:00000000000001a8 .L0 
     /tmp/cckmRDJM.s:357    .text:00000000000001ac .L0 
     /tmp/cckmRDJM.s:358    .text:00000000000001ac .L0 
     /tmp/cckmRDJM.s:360    .text:00000000000001b0 .L0 
     /tmp/cckmRDJM.s:363    .text:00000000000001b4 .L0 
     /tmp/cckmRDJM.s:367    .text:00000000000001b8 .L0 
     /tmp/cckmRDJM.s:369    .text:00000000000001b8 .L0 
     /tmp/cckmRDJM.s:370    .text:00000000000001b8 .L0 
     /tmp/cckmRDJM.s:374    .text:00000000000001cc .L0 
     /tmp/cckmRDJM.s:381    .text:00000000000001cc .L0 
     /tmp/cckmRDJM.s:306    .text:0000000000000150 .L0 
     /tmp/cckmRDJM.s:277    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cckmRDJM.s:333    .text:0000000000000170 .L0 
     /tmp/cckmRDJM.s:280    .rodata.str1.8:0000000000000010 .LC1
     /tmp/cckmRDJM.s:346    .text:0000000000000190 .L0 
     /tmp/cckmRDJM.s:283    .rodata.str1.8:0000000000000028 .LC2
     /tmp/cckmRDJM.s:370    .text:00000000000001b8 .L0 
     /tmp/cckmRDJM.s:109    .text:0000000000000064 .L4
     /tmp/cckmRDJM.s:336    .text:0000000000000180 .L11
     /tmp/cckmRDJM.s:366    .text:00000000000001b8 .L12
     /tmp/cckmRDJM.s:349    .text:00000000000001a0 .L13
     /tmp/cckmRDJM.s:1170   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckmRDJM.s:2174   .debug_str:00000000000004ad .LASF87
     /tmp/cckmRDJM.s:2098   .debug_str:00000000000002a2 .LASF88
GAS LISTING /tmp/cckmRDJM.s 			page 16


     /tmp/cckmRDJM.s:2030   .debug_str:000000000000006f .LASF89
     /tmp/cckmRDJM.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckmRDJM.s:377    .text:00000000000001cc .Letext0
     /tmp/cckmRDJM.s:2016   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckmRDJM.s:2114   .debug_str:00000000000002ff .LASF0
     /tmp/cckmRDJM.s:2126   .debug_str:000000000000034b .LASF1
     /tmp/cckmRDJM.s:2106   .debug_str:00000000000002ca .LASF2
     /tmp/cckmRDJM.s:2090   .debug_str:0000000000000262 .LASF4
     /tmp/cckmRDJM.s:2152   .debug_str:00000000000003fa .LASF3
     /tmp/cckmRDJM.s:2036   .debug_str:00000000000000ca .LASF5
     /tmp/cckmRDJM.s:2130   .debug_str:0000000000000365 .LASF6
     /tmp/cckmRDJM.s:2112   .debug_str:00000000000002ec .LASF7
     /tmp/cckmRDJM.s:2188   .debug_str:00000000000005cb .LASF8
     /tmp/cckmRDJM.s:2080   .debug_str:000000000000020c .LASF9
     /tmp/cckmRDJM.s:2138   .debug_str:0000000000000391 .LASF10
     /tmp/cckmRDJM.s:2178   .debug_str:000000000000057d .LASF11
     /tmp/cckmRDJM.s:2038   .debug_str:00000000000000d1 .LASF12
     /tmp/cckmRDJM.s:2024   .debug_str:0000000000000034 .LASF13
     /tmp/cckmRDJM.s:2046   .debug_str:000000000000011b .LASF14
     /tmp/cckmRDJM.s:2148   .debug_str:00000000000003cc .LASF15
     /tmp/cckmRDJM.s:2050   .debug_str:0000000000000135 .LASF16
     /tmp/cckmRDJM.s:2124   .debug_str:0000000000000345 .LASF57
     /tmp/cckmRDJM.s:2146   .debug_str:00000000000003c1 .LASF49
     /tmp/cckmRDJM.s:2202   .debug_str:0000000000000638 .LASF51
     /tmp/cckmRDJM.s:2026   .debug_str:0000000000000044 .LASF17
     /tmp/cckmRDJM.s:2160   .debug_str:0000000000000431 .LASF19
     /tmp/cckmRDJM.s:2062   .debug_str:00000000000001ae .LASF21
     /tmp/cckmRDJM.s:2060   .debug_str:0000000000000199 .LASF23
     /tmp/cckmRDJM.s:2156   .debug_str:000000000000041b .LASF18
     /tmp/cckmRDJM.s:2142   .debug_str:00000000000003a9 .LASF20
     /tmp/cckmRDJM.s:2172   .debug_str:00000000000004a6 .LASF22
     /tmp/cckmRDJM.s:2166   .debug_str:0000000000000465 .LASF24
     /tmp/cckmRDJM.s:2070   .debug_str:00000000000001e6 .LASF25
     /tmp/cckmRDJM.s:2052   .debug_str:000000000000014b .LASF26
     /tmp/cckmRDJM.s:2020   .debug_str:0000000000000009 .LASF27
     /tmp/cckmRDJM.s:2084   .debug_str:0000000000000230 .LASF28
     /tmp/cckmRDJM.s:2064   .debug_str:00000000000001b7 .LASF29
     /tmp/cckmRDJM.s:2040   .debug_str:00000000000000e1 .LASF30
     /tmp/cckmRDJM.s:2206   .debug_str:000000000000065b .LASF31
     /tmp/cckmRDJM.s:2066   .debug_str:00000000000001bf .LASF32
     /tmp/cckmRDJM.s:2116   .debug_str:000000000000030c .LASF33
     /tmp/cckmRDJM.s:2200   .debug_str:0000000000000625 .LASF34
     /tmp/cckmRDJM.s:2032   .debug_str:000000000000009f .LASF35
     /tmp/cckmRDJM.s:2068   .debug_str:00000000000001d3 .LASF36
     /tmp/cckmRDJM.s:2078   .debug_str:0000000000000206 .LASF37
     /tmp/cckmRDJM.s:2170   .debug_str:0000000000000494 .LASF38
     /tmp/cckmRDJM.s:2100   .debug_str:00000000000002af .LASF39
     /tmp/cckmRDJM.s:2208   .debug_str:0000000000000663 .LASF40
     /tmp/cckmRDJM.s:2204   .debug_str:0000000000000650 .LASF41
     /tmp/cckmRDJM.s:2150   .debug_str:00000000000003e2 .LASF42
     /tmp/cckmRDJM.s:2092   .debug_str:0000000000000269 .LASF43
     /tmp/cckmRDJM.s:2162   .debug_str:0000000000000446 .LASF44
     /tmp/cckmRDJM.s:2044   .debug_str:0000000000000111 .LASF45
     /tmp/cckmRDJM.s:2086   .debug_str:0000000000000244 .LASF46
     /tmp/cckmRDJM.s:2108   .debug_str:00000000000002d8 .LASF47
     /tmp/cckmRDJM.s:2082   .debug_str:000000000000021a .LASF48
     /tmp/cckmRDJM.s:2158   .debug_str:0000000000000422 .LASF50
GAS LISTING /tmp/cckmRDJM.s 			page 17


     /tmp/cckmRDJM.s:2042   .debug_str:00000000000000f5 .LASF52
     /tmp/cckmRDJM.s:2196   .debug_str:00000000000005f4 .LASF53
     /tmp/cckmRDJM.s:2096   .debug_str:0000000000000280 .LASF55
     /tmp/cckmRDJM.s:2154   .debug_str:000000000000040c .LASF54
     /tmp/cckmRDJM.s:2168   .debug_str:0000000000000478 .LASF56
     /tmp/cckmRDJM.s:2104   .debug_str:00000000000002ba .LASF58
     /tmp/cckmRDJM.s:2176   .debug_str:0000000000000571 .LASF59
     /tmp/cckmRDJM.s:2034   .debug_str:00000000000000a6 .LASF60
     /tmp/cckmRDJM.s:2184   .debug_str:00000000000005a4 .LASF61
     /tmp/cckmRDJM.s:2022   .debug_str:0000000000000011 .LASF63
     /tmp/cckmRDJM.s:2194   .debug_str:00000000000005ea .LASF62
     /tmp/cckmRDJM.s:2028   .debug_str:000000000000004d .LASF64
     /tmp/cckmRDJM.s:2186   .debug_str:00000000000005af .LASF66
     /tmp/cckmRDJM.s:2110   .debug_str:00000000000002e2 .LASF65
     /tmp/cckmRDJM.s:2198   .debug_str:0000000000000609 .LASF67
     /tmp/cckmRDJM.s:2058   .debug_str:0000000000000180 .LASF90
     /tmp/cckmRDJM.s:2120   .debug_str:0000000000000338 .LASF91
     /tmp/cckmRDJM.s:2018   .debug_str:0000000000000000 .LASF68
     /tmp/cckmRDJM.s:2088   .debug_str:000000000000025a .LASF92
     /tmp/cckmRDJM.s:2134   .debug_str:000000000000037e .LASF69
     /tmp/cckmRDJM.s:290    .text:000000000000013c .LFB32
     /tmp/cckmRDJM.s:375    .text:00000000000001cc .LFE32
     /tmp/cckmRDJM.s:1877   .debug_loc:0000000000000000 .LLST9
     /tmp/cckmRDJM.s:308    .text:0000000000000158 .LBB4
     /tmp/cckmRDJM.s:320    .text:000000000000015c .LBE4
     /tmp/cckmRDJM.s:326    .text:0000000000000168 .LVL27
     /tmp/cckmRDJM.s:335    .text:0000000000000180 .LVL29
     /tmp/cckmRDJM.s:341    .text:000000000000018c .LVL30
     /tmp/cckmRDJM.s:348    .text:00000000000001a0 .LVL31
     /tmp/cckmRDJM.s:372    .text:00000000000001c8 .LVL34
     /tmp/cckmRDJM.s:2054   .debug_str:000000000000015f .LASF73
     /tmp/cckmRDJM.s:2118   .debug_str:0000000000000313 .LASF75
     /tmp/cckmRDJM.s:198    .text:00000000000000c8 .LFB31
     /tmp/cckmRDJM.s:273    .text:000000000000013c .LFE31
     /tmp/cckmRDJM.s:2164   .debug_str:000000000000045e .LASF70
     /tmp/cckmRDJM.s:1888   .debug_loc:0000000000000036 .LLST4
     /tmp/cckmRDJM.s:2072   .debug_str:00000000000001ee .LASF71
     /tmp/cckmRDJM.s:1906   .debug_loc:0000000000000082 .LLST5
     /tmp/cckmRDJM.s:1924   .debug_loc:00000000000000ce .LLST6
     /tmp/cckmRDJM.s:2128   .debug_str:000000000000035e .LASF72
     /tmp/cckmRDJM.s:1942   .debug_loc:000000000000011a .LLST7
     /tmp/cckmRDJM.s:1949   .debug_loc:000000000000013d .LLST8
     /tmp/cckmRDJM.s:224    .text:00000000000000fc .LVL18
     /tmp/cckmRDJM.s:241    .text:0000000000000118 .LVL19
     /tmp/cckmRDJM.s:2140   .debug_str:00000000000003a0 .LASF74
     /tmp/cckmRDJM.s:2136   .debug_str:0000000000000383 .LASF76
     /tmp/cckmRDJM.s:144    .text:0000000000000088 .LFB30
     /tmp/cckmRDJM.s:192    .text:00000000000000c8 .LFE30
     /tmp/cckmRDJM.s:1956   .debug_loc:0000000000000160 .LLST2
     /tmp/cckmRDJM.s:1975   .debug_loc:00000000000001ad .LLST3
     /tmp/cckmRDJM.s:169    .text:00000000000000b0 .LVL13
     /tmp/cckmRDJM.s:2190   .debug_str:00000000000005db .LASF77
     /tmp/cckmRDJM.s:2048   .debug_str:0000000000000127 .LASF78
     /tmp/cckmRDJM.s:78     .text:000000000000003c .LFB29
     /tmp/cckmRDJM.s:138    .text:0000000000000088 .LFE29
     /tmp/cckmRDJM.s:2144   .debug_str:00000000000003bc .LASF79
     /tmp/cckmRDJM.s:1982   .debug_loc:00000000000001d0 .LLST0
GAS LISTING /tmp/cckmRDJM.s 			page 18


     /tmp/cckmRDJM.s:2182   .debug_str:000000000000059d .LASF80
     /tmp/cckmRDJM.s:1996   .debug_loc:0000000000000209 .LLST1
     /tmp/cckmRDJM.s:117    .text:0000000000000074 .LVL9
     /tmp/cckmRDJM.s:2122   .debug_str:000000000000033d .LASF81
     /tmp/cckmRDJM.s:2180   .debug_str:000000000000058c .LASF82
     /tmp/cckmRDJM.s:10     .text:0000000000000000 .LFB28
     /tmp/cckmRDJM.s:72     .text:000000000000003c .LFE28
     /tmp/cckmRDJM.s:2102   .debug_str:00000000000002b5 .LASF83
     /tmp/cckmRDJM.s:2192   .debug_str:00000000000005e5 .LASF84
     /tmp/cckmRDJM.s:2074   .debug_str:00000000000001fc .LASF85
     /tmp/cckmRDJM.s:2076   .debug_str:0000000000000201 .LASF86
     /tmp/cckmRDJM.s:2132   .debug_str:0000000000000378 .LASF93
     /tmp/cckmRDJM.s:2056   .debug_str:000000000000016d .LASF94
     /tmp/cckmRDJM.s:2094   .debug_str:0000000000000274 .LASF95
     /tmp/cckmRDJM.s:328    .text:000000000000016c .LVL28
     /tmp/cckmRDJM.s:361    .text:00000000000001b0 .LVL32
     /tmp/cckmRDJM.s:365    .text:00000000000001b8 .LVL33
     /tmp/cckmRDJM.s:201    .text:00000000000000c8 .LVL16
     /tmp/cckmRDJM.s:222    .text:00000000000000f4 .LVL17
     /tmp/cckmRDJM.s:268    .text:0000000000000134 .LVL24
     /tmp/cckmRDJM.s:265    .text:0000000000000130 .LVL23
     /tmp/cckmRDJM.s:262    .text:000000000000012c .LVL22
     /tmp/cckmRDJM.s:249    .text:000000000000011c .LVL20
     /tmp/cckmRDJM.s:254    .text:0000000000000120 .LVL21
     /tmp/cckmRDJM.s:147    .text:0000000000000088 .LVL11
     /tmp/cckmRDJM.s:167    .text:00000000000000a8 .LVL12
     /tmp/cckmRDJM.s:177    .text:00000000000000b4 .LVL14
     /tmp/cckmRDJM.s:182    .text:00000000000000b8 .LVL15
     /tmp/cckmRDJM.s:81     .text:000000000000003c .LVL5
     /tmp/cckmRDJM.s:102    .text:000000000000005c .LVL7
     /tmp/cckmRDJM.s:98     .text:0000000000000058 .LVL6
     /tmp/cckmRDJM.s:382    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator10kmem_allocEm
_ZN5Riscv14supervisorTrapEv
_Z11printStringPKc
