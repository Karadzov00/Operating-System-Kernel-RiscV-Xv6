GAS LISTING /tmp/ccBHGUuG.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10kmem_allocEm
   9              	_ZN15MemoryAllocator10kmem_allocEm:
  10              	.LFB8:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 6/20/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** 
  10:src/MemoryAllocator.cpp **** MemoryAllocator* MemoryAllocator::instance= nullptr;
  11:src/MemoryAllocator.cpp **** 
  12:src/MemoryAllocator.cpp **** 
  13:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmem_alloc(size_t size){
  12              		.loc 1 13 47
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21 000c 93070500 		mv	a5,a0
  14:src/MemoryAllocator.cpp ****     MemoryAllocator* ma = getInstance();
  22              		.loc 1 14 5
  23              	.LBB13:
  24              	.LBB14:
  25              		.file 2 "src/../h/MemoryAllocator.hpp"
   1:src/../h/MemoryAllocator.hpp **** //
   2:src/../h/MemoryAllocator.hpp **** // Created by os on 6/20/22.
   3:src/../h/MemoryAllocator.hpp **** //
   4:src/../h/MemoryAllocator.hpp **** 
   5:src/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   6:src/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   7:src/../h/MemoryAllocator.hpp **** 
   8:src/../h/MemoryAllocator.hpp **** #include "../lib/mem.h"
   9:src/../h/MemoryAllocator.hpp **** #include "DoublyLinkedList.hpp"
  10:src/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
  11:src/../h/MemoryAllocator.hpp **** 
  12:src/../h/MemoryAllocator.hpp **** 
  13:src/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  14:src/../h/MemoryAllocator.hpp **** public:
  15:src/../h/MemoryAllocator.hpp ****     typedef DoublyLinkedList<size_t>::Node FreeMem;
  16:src/../h/MemoryAllocator.hpp **** 
  17:src/../h/MemoryAllocator.hpp ****     static MemoryAllocator* getInstance(){
  18:src/../h/MemoryAllocator.hpp ****         if(instance == nullptr){
  26              		.loc 2 18 9
GAS LISTING /tmp/ccBHGUuG.s 			page 2


  27              		.loc 2 18 21 is_stmt 0
  28 0010 17070000 		ld	a4,.LANCHOR0
  28      03370700 
  29              		.loc 2 18 9
  30 0018 630E0706 		beqz	a4,.L18
  31              	.LVL1:
  32              	.L2:
  19:src/../h/MemoryAllocator.hpp ****             instance = (MemoryAllocator*)HEAP_START_ADDR;
  20:src/../h/MemoryAllocator.hpp **** 
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head=(FreeMem*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator));
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
  25:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
  26:src/../h/MemoryAllocator.hpp **** 
  27:src/../h/MemoryAllocator.hpp ****             instance->pcbList.head= nullptr;
  28:src/../h/MemoryAllocator.hpp ****         }
  29:src/../h/MemoryAllocator.hpp ****         return instance;
  33              		.loc 2 29 9 is_stmt 1
  34              		.loc 2 29 16 is_stmt 0
  35 001c 97060000 		ld	a3,.LANCHOR0
  35      83B60600 
  36              	.LVL2:
  37              	.LBE14:
  38              	.LBE13:
  15:src/MemoryAllocator.cpp ****     for(FreeMem* cur = ma->freeList.head; cur!=nullptr; cur=cur->next){
  39              		.loc 1 15 5 is_stmt 1
  40              	.LBB16:
  41              		.loc 1 15 18 is_stmt 0
  42 0024 03B50600 		ld	a0,0(a3)
  43              	.LVL3:
  44              	.L5:
  45              		.loc 1 15 46 is_stmt 1 discriminator 1
  46 0028 63000506 		beqz	a0,.L1
  47              	.LBB17:
  16:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
  48              		.loc 1 16 9
  49              		.loc 1 16 17 is_stmt 0
  50 002c 03370500 		ld	a4,0(a0)
  51              		.loc 1 16 9
  52 0030 6368F70C 		bltu	a4,a5,.L19
  17:src/MemoryAllocator.cpp ****         //Found
  18:src/MemoryAllocator.cpp **** 
  19:src/MemoryAllocator.cpp ****         if(cur->size-size<=sizeof(FreeMem)){
  53              		.loc 1 19 9 is_stmt 1
  54              	.LBB18:
  55              		.loc 1 19 21 is_stmt 0
  56 0034 3307F740 		sub	a4,a4,a5
  57              		.loc 1 19 9
  58 0038 13060002 		li	a2,32
  59 003c 6360E60E 		bgtu	a4,a2,.L6
  60              	.LBB19:
  20:src/MemoryAllocator.cpp ****             //No remaining fragment
  21:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = cur->next;
  61              		.loc 1 21 13 is_stmt 1
  62              		.loc 1 21 21 is_stmt 0
  63 0040 03378501 		ld	a4,24(a0)
GAS LISTING /tmp/ccBHGUuG.s 			page 3


  64              		.loc 1 21 13
  65 0044 6302070C 		beqz	a4,.L7
  66              		.loc 1 21 26 is_stmt 1 discriminator 1
  67              		.loc 1 21 49 is_stmt 0 discriminator 1
  68 0048 03360501 		ld	a2,16(a0)
  69              		.loc 1 21 42 discriminator 1
  70 004c 2338C700 		sd	a2,16(a4)
  71              	.L8:
  22:src/MemoryAllocator.cpp ****             else ma->freeList.head = cur->next;
  23:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
  72              		.loc 1 23 13 is_stmt 1
  73              		.loc 1 23 21 is_stmt 0
  74 0050 03370501 		ld	a4,16(a0)
  75              		.loc 1 23 13
  76 0054 63060700 		beqz	a4,.L9
  77              		.loc 1 23 26 is_stmt 1 discriminator 1
  78              		.loc 1 23 49 is_stmt 0 discriminator 1
  79 0058 03368501 		ld	a2,24(a0)
  80              		.loc 1 23 42 discriminator 1
  81 005c 233CC700 		sd	a2,24(a4)
  82              	.L9:
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp ****             //add process to the end of pcb list
  26:src/MemoryAllocator.cpp ****             FreeMem* proc = cur;
  83              		.loc 1 26 13 is_stmt 1
  84              	.LVL4:
  27:src/MemoryAllocator.cpp ****             proc->size=size;
  85              		.loc 1 27 13
  86              		.loc 1 27 23 is_stmt 0
  87 0060 2330F500 		sd	a5,0(a0)
  28:src/MemoryAllocator.cpp ****             proc->address=cur;
  88              		.loc 1 28 13 is_stmt 1
  89              		.loc 1 28 26 is_stmt 0
  90 0064 2334A500 		sd	a0,8(a0)
  29:src/MemoryAllocator.cpp ****             proc->next= nullptr;
  91              		.loc 1 29 13 is_stmt 1
  92              		.loc 1 29 23 is_stmt 0
  93 0068 23380500 		sd	zero,16(a0)
  30:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
  94              		.loc 1 30 13 is_stmt 1
  95              	.LBB20:
  96              		.loc 1 30 29 is_stmt 0
  97 006c 83B70601 		ld	a5,16(a3)
  98              	.LVL5:
  99              		.loc 1 30 13
 100 0070 6382070A 		beqz	a5,.L20
 101              	.L10:
 102              	.LVL6:
 103              	.LBB21:
  31:src/MemoryAllocator.cpp ****             {
  32:src/MemoryAllocator.cpp ****                 ma->pcbList.head = cur;
  33:src/MemoryAllocator.cpp **** 
  34:src/MemoryAllocator.cpp ****             } else
  35:src/MemoryAllocator.cpp ****             {
  36:src/MemoryAllocator.cpp ****                 FreeMem* temp;
  37:src/MemoryAllocator.cpp ****                 for( temp = ma->pcbList.head; temp->next!=nullptr; temp=temp->next);
 104              		.loc 1 37 57 is_stmt 1 discriminator 3
GAS LISTING /tmp/ccBHGUuG.s 			page 4


 105 0074 13870700 		mv	a4,a5
 106              		.loc 1 37 53 is_stmt 0 discriminator 3
 107 0078 83B70701 		ld	a5,16(a5)
 108              	.LVL7:
 109              		.loc 1 37 57 discriminator 3
 110 007c E39C07FE 		bnez	a5,.L10
  38:src/MemoryAllocator.cpp ****                 temp->next=cur;
 111              		.loc 1 38 17 is_stmt 1
 112              		.loc 1 38 27 is_stmt 0
 113 0080 2338A700 		sd	a0,16(a4)
 114              	.LVL8:
 115              	.L11:
 116              	.LBE21:
 117              	.LBE20:
  39:src/MemoryAllocator.cpp ****             }
  40:src/MemoryAllocator.cpp **** 
  41:src/MemoryAllocator.cpp ****             return cur->address;
 118              		.loc 1 41 13 is_stmt 1
 119              		.loc 1 41 25 is_stmt 0
 120 0084 03358500 		ld	a0,8(a0)
 121              	.LVL9:
 122              	.L1:
 123              	.LBE19:
 124              	.LBE18:
 125              	.LBE17:
 126              	.LBE16:
  42:src/MemoryAllocator.cpp **** 
  43:src/MemoryAllocator.cpp ****         }
  44:src/MemoryAllocator.cpp ****         else{
  45:src/MemoryAllocator.cpp ****             FreeMem * newfrgm = (FreeMem *)((size_t)cur + size + sizeof(FreeMem));
  46:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
  47:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
  48:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
  49:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
  50:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
  51:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
  52:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
  53:src/MemoryAllocator.cpp **** 
  54:src/MemoryAllocator.cpp ****             //add process to the end of pcb list
  55:src/MemoryAllocator.cpp ****             FreeMem* proc = cur;
  56:src/MemoryAllocator.cpp ****             proc->size=size;
  57:src/MemoryAllocator.cpp ****             proc->address=cur;
  58:src/MemoryAllocator.cpp ****             proc->next= nullptr;
  59:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
  60:src/MemoryAllocator.cpp ****             {
  61:src/MemoryAllocator.cpp ****                 ma->pcbList.head = cur;
  62:src/MemoryAllocator.cpp **** 
  63:src/MemoryAllocator.cpp ****             } else
  64:src/MemoryAllocator.cpp ****             {
  65:src/MemoryAllocator.cpp ****                 FreeMem* temp;
  66:src/MemoryAllocator.cpp ****                 for( temp = ma->pcbList.head; temp->next!=nullptr; temp=temp->next);
  67:src/MemoryAllocator.cpp ****                 temp->next=cur;
  68:src/MemoryAllocator.cpp ****             }
  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp ****             return cur->address;
  71:src/MemoryAllocator.cpp ****         }
  72:src/MemoryAllocator.cpp ****     }
GAS LISTING /tmp/ccBHGUuG.s 			page 5


  73:src/MemoryAllocator.cpp ****     return nullptr;
  74:src/MemoryAllocator.cpp **** 
  75:src/MemoryAllocator.cpp ****     //initialize address at HEAP_START_ADRESS at the beginning
  76:src/MemoryAllocator.cpp ****     //ubaciti prvi element u listu i postaviti mu adresu na heap start adress + sizeof(freeMem)
  77:src/MemoryAllocator.cpp **** }
 127              		.loc 1 77 1
 128 0088 03348100 		ld	s0,8(sp)
 129              		.cfi_remember_state
 130              		.cfi_restore 8
 131              		.cfi_def_cfa 2, 16
 132 008c 13010101 		addi	sp,sp,16
 133              		.cfi_def_cfa_offset 0
 134 0090 67800000 		jr	ra
 135              	.LVL10:
 136              	.L18:
 137              		.cfi_restore_state
 138              	.LBB31:
 139              	.LBB15:
  19:src/../h/MemoryAllocator.hpp **** 
 140              		.loc 2 19 13 is_stmt 1
  19:src/../h/MemoryAllocator.hpp **** 
 141              		.loc 2 19 22 is_stmt 0
 142 0094 17060000 		la	a2,HEAP_START_ADDR
 142      03360600 
 143 009c 03370600 		ld	a4,0(a2)
 144 00a0 97060000 		lla	a3,.LANCHOR0
 144      93860600 
 145 00a8 23B0E600 		sd	a4,0(a3)
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 146              		.loc 2 21 13 is_stmt 1
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 147              		.loc 2 21 71 is_stmt 0
 148 00ac 93050702 		addi	a1,a4,32
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 149              		.loc 2 21 36
 150 00b0 2330B700 		sd	a1,0(a4)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 151              		.loc 2 22 13 is_stmt 1
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 152              		.loc 2 22 77 is_stmt 0
 153 00b4 03360600 		ld	a2,0(a2)
 154 00b8 13050602 		addi	a0,a2,32
 155              	.LVL11:
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 156              		.loc 2 22 32
 157 00bc 03B70600 		ld	a4,0(a3)
 158 00c0 83350700 		ld	a1,0(a4)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 159              		.loc 2 22 45
 160 00c4 23B4A500 		sd	a0,8(a1)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 161              		.loc 2 23 13 is_stmt 1
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 162              		.loc 2 23 32 is_stmt 0
 163 00c8 83350700 		ld	a1,0(a4)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 164              		.loc 2 23 66
GAS LISTING /tmp/ccBHGUuG.s 			page 6


 165 00cc 17070000 		la	a4,HEAP_END_ADDR
 165      03370700 
 166 00d4 03370700 		ld	a4,0(a4)
 167 00d8 3307C740 		sub	a4,a4,a2
 168 00dc 130707FE 		addi	a4,a4,-32
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 169              		.loc 2 23 43
 170 00e0 23B0E500 		sd	a4,0(a1)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 171              		.loc 2 24 13 is_stmt 1
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 172              		.loc 2 24 32 is_stmt 0
 173 00e4 03B70600 		ld	a4,0(a3)
 174 00e8 83360700 		ld	a3,0(a4)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 175              		.loc 2 24 42
 176 00ec 23B80600 		sd	zero,16(a3)
  25:src/../h/MemoryAllocator.hpp **** 
 177              		.loc 2 25 13 is_stmt 1
  25:src/../h/MemoryAllocator.hpp **** 
 178              		.loc 2 25 32 is_stmt 0
 179 00f0 83360700 		ld	a3,0(a4)
  25:src/../h/MemoryAllocator.hpp **** 
 180              		.loc 2 25 42
 181 00f4 23BC0600 		sd	zero,24(a3)
  27:src/../h/MemoryAllocator.hpp ****         }
 182              		.loc 2 27 13 is_stmt 1
  27:src/../h/MemoryAllocator.hpp ****         }
 183              		.loc 2 27 35 is_stmt 0
 184 00f8 23380700 		sd	zero,16(a4)
 185 00fc 6FF01FF2 		j	.L2
 186              	.LVL12:
 187              	.L19:
 188              	.LBE15:
 189              	.LBE31:
 190              	.LBB32:
 191              	.LBB29:
  16:src/MemoryAllocator.cpp ****         //Found
 192              		.loc 1 16 28 is_stmt 1 discriminator 1
 193              	.LBE29:
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 194              		.loc 1 15 5 discriminator 1
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 195              		.loc 1 15 60 is_stmt 0 discriminator 1
 196 0100 03350501 		ld	a0,16(a0)
 197              	.LVL13:
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 198              		.loc 1 15 5 discriminator 1
 199 0104 6FF05FF2 		j	.L5
 200              	.L7:
 201              	.LBB30:
 202              	.LBB28:
 203              	.LBB23:
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 204              		.loc 1 22 18 is_stmt 1
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 205              		.loc 1 22 43 is_stmt 0
GAS LISTING /tmp/ccBHGUuG.s 			page 7


 206 0108 03370501 		ld	a4,16(a0)
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 207              		.loc 1 22 36
 208 010c 23B0E600 		sd	a4,0(a3)
 209 0110 6FF01FF4 		j	.L8
 210              	.LVL14:
 211              	.L20:
 212              	.LBB22:
  32:src/MemoryAllocator.cpp **** 
 213              		.loc 1 32 17 is_stmt 1
  32:src/MemoryAllocator.cpp **** 
 214              		.loc 1 32 34 is_stmt 0
 215 0114 23B8A600 		sd	a0,16(a3)
 216              	.LVL15:
 217 0118 6FF0DFF6 		j	.L11
 218              	.LVL16:
 219              	.L6:
 220              	.LBE22:
 221              	.LBE23:
 222              	.LBB24:
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 223              		.loc 1 45 13 is_stmt 1
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 224              		.loc 1 45 57 is_stmt 0
 225 011c B305F500 		add	a1,a0,a5
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 226              		.loc 1 45 64
 227 0120 13870502 		addi	a4,a1,32
 228              	.LVL17:
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 229              		.loc 1 46 13 is_stmt 1
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 230              		.loc 1 46 21 is_stmt 0
 231 0124 03368501 		ld	a2,24(a0)
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 232              		.loc 1 46 13
 233 0128 63000606 		beqz	a2,.L12
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 234              		.loc 1 46 26 is_stmt 1 discriminator 1
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 235              		.loc 1 46 42 is_stmt 0 discriminator 1
 236 012c 2338E600 		sd	a4,16(a2)
 237              	.L13:
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 238              		.loc 1 48 13 is_stmt 1
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 239              		.loc 1 48 21 is_stmt 0
 240 0130 03360501 		ld	a2,16(a0)
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 241              		.loc 1 48 13
 242 0134 63040600 		beqz	a2,.L14
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 243              		.loc 1 48 27 is_stmt 1 discriminator 1
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 244              		.loc 1 48 43 is_stmt 0 discriminator 1
 245 0138 233CE600 		sd	a4,24(a2)
 246              	.L14:
GAS LISTING /tmp/ccBHGUuG.s 			page 8


  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 247              		.loc 1 49 13 is_stmt 1
  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 248              		.loc 1 49 34 is_stmt 0
 249 013c 03368501 		ld	a2,24(a0)
  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 250              		.loc 1 49 27
 251 0140 233CC700 		sd	a2,24(a4)
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 252              		.loc 1 50 13 is_stmt 1
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 253              		.loc 1 50 32 is_stmt 0
 254 0144 03360501 		ld	a2,16(a0)
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 255              		.loc 1 50 26
 256 0148 2338C700 		sd	a2,16(a4)
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 257              		.loc 1 51 13 is_stmt 1
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 258              		.loc 1 51 32 is_stmt 0
 259 014c 03360500 		ld	a2,0(a0)
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 260              		.loc 1 51 36
 261 0150 3306F640 		sub	a2,a2,a5
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 262              		.loc 1 51 26
 263 0154 23B0C502 		sd	a2,32(a1)
  52:src/MemoryAllocator.cpp **** 
 264              		.loc 1 52 13 is_stmt 1
  52:src/MemoryAllocator.cpp **** 
 265              		.loc 1 52 29 is_stmt 0
 266 0158 2334E700 		sd	a4,8(a4)
  55:src/MemoryAllocator.cpp ****             proc->size=size;
 267              		.loc 1 55 13 is_stmt 1
 268              	.LVL18:
  56:src/MemoryAllocator.cpp ****             proc->address=cur;
 269              		.loc 1 56 13
  56:src/MemoryAllocator.cpp ****             proc->address=cur;
 270              		.loc 1 56 23 is_stmt 0
 271 015c 2330F500 		sd	a5,0(a0)
  57:src/MemoryAllocator.cpp ****             proc->next= nullptr;
 272              		.loc 1 57 13 is_stmt 1
  57:src/MemoryAllocator.cpp ****             proc->next= nullptr;
 273              		.loc 1 57 26 is_stmt 0
 274 0160 2334A500 		sd	a0,8(a0)
  58:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
 275              		.loc 1 58 13 is_stmt 1
  58:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
 276              		.loc 1 58 23 is_stmt 0
 277 0164 23380500 		sd	zero,16(a0)
  59:src/MemoryAllocator.cpp ****             {
 278              		.loc 1 59 13 is_stmt 1
 279              	.LBB25:
  59:src/MemoryAllocator.cpp ****             {
 280              		.loc 1 59 29 is_stmt 0
 281 0168 83B70601 		ld	a5,16(a3)
 282              	.LVL19:
GAS LISTING /tmp/ccBHGUuG.s 			page 9


  59:src/MemoryAllocator.cpp ****             {
 283              		.loc 1 59 13
 284 016c 63820702 		beqz	a5,.L21
 285              	.LVL20:
 286              	.L15:
 287              	.LBB26:
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 288              		.loc 1 66 57 is_stmt 1 discriminator 3
 289 0170 13870700 		mv	a4,a5
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 290              		.loc 1 66 53 is_stmt 0 discriminator 3
 291 0174 83B70701 		ld	a5,16(a5)
 292              	.LVL21:
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 293              		.loc 1 66 57 discriminator 3
 294 0178 E39C07FE 		bnez	a5,.L15
  67:src/MemoryAllocator.cpp ****             }
 295              		.loc 1 67 17 is_stmt 1
  67:src/MemoryAllocator.cpp ****             }
 296              		.loc 1 67 27 is_stmt 0
 297 017c 2338A700 		sd	a0,16(a4)
 298              	.LVL22:
 299              	.L16:
 300              	.LBE26:
 301              	.LBE25:
  70:src/MemoryAllocator.cpp ****         }
 302              		.loc 1 70 13 is_stmt 1
  70:src/MemoryAllocator.cpp ****         }
 303              		.loc 1 70 25 is_stmt 0
 304 0180 03358500 		ld	a0,8(a0)
 305              	.LVL23:
 306 0184 6FF05FF0 		j	.L1
 307              	.LVL24:
 308              	.L12:
  47:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
 309              		.loc 1 47 18 is_stmt 1
  47:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
 310              		.loc 1 47 36 is_stmt 0
 311 0188 23B0E600 		sd	a4,0(a3)
 312 018c 6FF05FFA 		j	.L13
 313              	.LVL25:
 314              	.L21:
 315              	.LBB27:
  61:src/MemoryAllocator.cpp **** 
 316              		.loc 1 61 17 is_stmt 1
  61:src/MemoryAllocator.cpp **** 
 317              		.loc 1 61 34 is_stmt 0
 318 0190 23B8A600 		sd	a0,16(a3)
 319              	.LVL26:
 320 0194 6FF0DFFE 		j	.L16
 321              	.LBE27:
 322              	.LBE24:
 323              	.LBE28:
 324              	.LBE30:
 325              	.LBE32:
 326              		.cfi_endproc
 327              	.LFE8:
GAS LISTING /tmp/ccBHGUuG.s 			page 10


 329              		.align	2
 330              		.globl	_ZN15MemoryAllocator9kmem_freeEPv
 332              	_ZN15MemoryAllocator9kmem_freeEPv:
 333              	.LFB9:
  78:src/MemoryAllocator.cpp **** 
  79:src/MemoryAllocator.cpp **** int MemoryAllocator::kmem_free(void* arg){
 334              		.loc 1 79 42 is_stmt 1
 335              		.cfi_startproc
 336              	.LVL27:
 337 0198 130101FF 		addi	sp,sp,-16
 338              		.cfi_def_cfa_offset 16
 339 019c 23341100 		sd	ra,8(sp)
 340 01a0 23308100 		sd	s0,0(sp)
 341              		.cfi_offset 1, -8
 342              		.cfi_offset 8, -16
 343 01a4 13040101 		addi	s0,sp,16
 344              		.cfi_def_cfa 8, 0
  80:src/MemoryAllocator.cpp ****     return __mem_free(arg);
 345              		.loc 1 80 5
 346              		.loc 1 80 22 is_stmt 0
 347 01a8 97000000 		call	__mem_free@plt
 347      E7800000 
 348              	.LVL28:
  81:src/MemoryAllocator.cpp **** }...
 349              		.loc 1 81 1
 350 01b0 83308100 		ld	ra,8(sp)
 351              		.cfi_restore 1
 352 01b4 03340100 		ld	s0,0(sp)
 353              		.cfi_restore 8
 354              		.cfi_def_cfa 2, 16
 355 01b8 13010101 		addi	sp,sp,16
 356              		.cfi_def_cfa_offset 0
 357 01bc 67800000 		jr	ra
 358              		.cfi_endproc
 359              	.LFE9:
 361              		.globl	_ZN15MemoryAllocator8instanceE
 362              		.bss
 363              		.align	3
 364              		.set	.LANCHOR0,. + 0
 367              	_ZN15MemoryAllocator8instanceE:
 368 0000 00000000 		.zero	8
 368      00000000 
 369              		.text
 370              	.Letext0:
 371              		.file 3 "src/../h/../lib/hw.h"
 372              		.file 4 "src/../h/DoublyLinkedList.hpp"
 373              		.file 5 "src/../h/../lib/mem.h"
GAS LISTING /tmp/ccBHGUuG.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccBHGUuG.s:9      .text:0000000000000000 _ZN15MemoryAllocator10kmem_allocEm
     /tmp/ccBHGUuG.s:13     .text:0000000000000000 .L0 
     /tmp/ccBHGUuG.s:15     .text:0000000000000000 .L0 
     /tmp/ccBHGUuG.s:16     .text:0000000000000004 .L0 
     /tmp/ccBHGUuG.s:18     .text:0000000000000008 .L0 
     /tmp/ccBHGUuG.s:20     .text:000000000000000c .L0 
     /tmp/ccBHGUuG.s:26     .text:0000000000000010 .L0 
     /tmp/ccBHGUuG.s:27     .text:0000000000000010 .L0 
     /tmp/ccBHGUuG.s:28     .text:0000000000000010 .L0 
     /tmp/ccBHGUuG.s:30     .text:0000000000000018 .L0 
     /tmp/ccBHGUuG.s:34     .text:000000000000001c .L0 
     /tmp/ccBHGUuG.s:35     .text:000000000000001c .L0 
     /tmp/ccBHGUuG.s:41     .text:0000000000000024 .L0 
     /tmp/ccBHGUuG.s:42     .text:0000000000000024 .L0 
     /tmp/ccBHGUuG.s:46     .text:0000000000000028 .L0 
     /tmp/ccBHGUuG.s:49     .text:000000000000002c .L0 
     /tmp/ccBHGUuG.s:50     .text:000000000000002c .L0 
     /tmp/ccBHGUuG.s:52     .text:0000000000000030 .L0 
     /tmp/ccBHGUuG.s:55     .text:0000000000000034 .L0 
     /tmp/ccBHGUuG.s:56     .text:0000000000000034 .L0 
     /tmp/ccBHGUuG.s:58     .text:0000000000000038 .L0 
     /tmp/ccBHGUuG.s:62     .text:0000000000000040 .L0 
     /tmp/ccBHGUuG.s:63     .text:0000000000000040 .L0 
     /tmp/ccBHGUuG.s:65     .text:0000000000000044 .L0 
     /tmp/ccBHGUuG.s:67     .text:0000000000000048 .L0 
     /tmp/ccBHGUuG.s:68     .text:0000000000000048 .L0 
     /tmp/ccBHGUuG.s:70     .text:000000000000004c .L0 
     /tmp/ccBHGUuG.s:73     .text:0000000000000050 .L0 
     /tmp/ccBHGUuG.s:74     .text:0000000000000050 .L0 
     /tmp/ccBHGUuG.s:76     .text:0000000000000054 .L0 
     /tmp/ccBHGUuG.s:78     .text:0000000000000058 .L0 
     /tmp/ccBHGUuG.s:79     .text:0000000000000058 .L0 
     /tmp/ccBHGUuG.s:81     .text:000000000000005c .L0 
     /tmp/ccBHGUuG.s:85     .text:0000000000000060 .L0 
     /tmp/ccBHGUuG.s:86     .text:0000000000000060 .L0 
     /tmp/ccBHGUuG.s:87     .text:0000000000000060 .L0 
     /tmp/ccBHGUuG.s:89     .text:0000000000000064 .L0 
     /tmp/ccBHGUuG.s:90     .text:0000000000000064 .L0 
     /tmp/ccBHGUuG.s:92     .text:0000000000000068 .L0 
     /tmp/ccBHGUuG.s:93     .text:0000000000000068 .L0 
     /tmp/ccBHGUuG.s:96     .text:000000000000006c .L0 
     /tmp/ccBHGUuG.s:97     .text:000000000000006c .L0 
     /tmp/ccBHGUuG.s:100    .text:0000000000000070 .L0 
     /tmp/ccBHGUuG.s:105    .text:0000000000000074 .L0 
     /tmp/ccBHGUuG.s:107    .text:0000000000000078 .L0 
     /tmp/ccBHGUuG.s:110    .text:000000000000007c .L0 
     /tmp/ccBHGUuG.s:112    .text:0000000000000080 .L0 
     /tmp/ccBHGUuG.s:113    .text:0000000000000080 .L0 
     /tmp/ccBHGUuG.s:119    .text:0000000000000084 .L0 
     /tmp/ccBHGUuG.s:120    .text:0000000000000084 .L0 
     /tmp/ccBHGUuG.s:128    .text:0000000000000088 .L0 
     /tmp/ccBHGUuG.s:129    .text:000000000000008c .L0 
     /tmp/ccBHGUuG.s:130    .text:000000000000008c .L0 
     /tmp/ccBHGUuG.s:131    .text:000000000000008c .L0 
     /tmp/ccBHGUuG.s:133    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccBHGUuG.s 			page 12


     /tmp/ccBHGUuG.s:137    .text:0000000000000094 .L0 
     /tmp/ccBHGUuG.s:141    .text:0000000000000094 .L0 
     /tmp/ccBHGUuG.s:142    .text:0000000000000094 .L0 
     /tmp/ccBHGUuG.s:147    .text:00000000000000ac .L0 
     /tmp/ccBHGUuG.s:148    .text:00000000000000ac .L0 
     /tmp/ccBHGUuG.s:150    .text:00000000000000b0 .L0 
     /tmp/ccBHGUuG.s:152    .text:00000000000000b4 .L0 
     /tmp/ccBHGUuG.s:153    .text:00000000000000b4 .L0 
     /tmp/ccBHGUuG.s:157    .text:00000000000000bc .L0 
     /tmp/ccBHGUuG.s:160    .text:00000000000000c4 .L0 
     /tmp/ccBHGUuG.s:162    .text:00000000000000c8 .L0 
     /tmp/ccBHGUuG.s:163    .text:00000000000000c8 .L0 
     /tmp/ccBHGUuG.s:165    .text:00000000000000cc .L0 
     /tmp/ccBHGUuG.s:170    .text:00000000000000e0 .L0 
     /tmp/ccBHGUuG.s:172    .text:00000000000000e4 .L0 
     /tmp/ccBHGUuG.s:173    .text:00000000000000e4 .L0 
     /tmp/ccBHGUuG.s:176    .text:00000000000000ec .L0 
     /tmp/ccBHGUuG.s:178    .text:00000000000000f0 .L0 
     /tmp/ccBHGUuG.s:179    .text:00000000000000f0 .L0 
     /tmp/ccBHGUuG.s:181    .text:00000000000000f4 .L0 
     /tmp/ccBHGUuG.s:183    .text:00000000000000f8 .L0 
     /tmp/ccBHGUuG.s:184    .text:00000000000000f8 .L0 
     /tmp/ccBHGUuG.s:194    .text:0000000000000100 .L0 
     /tmp/ccBHGUuG.s:195    .text:0000000000000100 .L0 
     /tmp/ccBHGUuG.s:196    .text:0000000000000100 .L0 
     /tmp/ccBHGUuG.s:199    .text:0000000000000104 .L0 
     /tmp/ccBHGUuG.s:205    .text:0000000000000108 .L0 
     /tmp/ccBHGUuG.s:206    .text:0000000000000108 .L0 
     /tmp/ccBHGUuG.s:208    .text:000000000000010c .L0 
     /tmp/ccBHGUuG.s:214    .text:0000000000000114 .L0 
     /tmp/ccBHGUuG.s:215    .text:0000000000000114 .L0 
     /tmp/ccBHGUuG.s:224    .text:000000000000011c .L0 
     /tmp/ccBHGUuG.s:225    .text:000000000000011c .L0 
     /tmp/ccBHGUuG.s:227    .text:0000000000000120 .L0 
     /tmp/ccBHGUuG.s:230    .text:0000000000000124 .L0 
     /tmp/ccBHGUuG.s:231    .text:0000000000000124 .L0 
     /tmp/ccBHGUuG.s:233    .text:0000000000000128 .L0 
     /tmp/ccBHGUuG.s:235    .text:000000000000012c .L0 
     /tmp/ccBHGUuG.s:236    .text:000000000000012c .L0 
     /tmp/ccBHGUuG.s:239    .text:0000000000000130 .L0 
     /tmp/ccBHGUuG.s:240    .text:0000000000000130 .L0 
     /tmp/ccBHGUuG.s:242    .text:0000000000000134 .L0 
     /tmp/ccBHGUuG.s:244    .text:0000000000000138 .L0 
     /tmp/ccBHGUuG.s:245    .text:0000000000000138 .L0 
     /tmp/ccBHGUuG.s:248    .text:000000000000013c .L0 
     /tmp/ccBHGUuG.s:249    .text:000000000000013c .L0 
     /tmp/ccBHGUuG.s:251    .text:0000000000000140 .L0 
     /tmp/ccBHGUuG.s:253    .text:0000000000000144 .L0 
     /tmp/ccBHGUuG.s:254    .text:0000000000000144 .L0 
     /tmp/ccBHGUuG.s:256    .text:0000000000000148 .L0 
     /tmp/ccBHGUuG.s:258    .text:000000000000014c .L0 
     /tmp/ccBHGUuG.s:259    .text:000000000000014c .L0 
     /tmp/ccBHGUuG.s:261    .text:0000000000000150 .L0 
     /tmp/ccBHGUuG.s:263    .text:0000000000000154 .L0 
     /tmp/ccBHGUuG.s:265    .text:0000000000000158 .L0 
     /tmp/ccBHGUuG.s:266    .text:0000000000000158 .L0 
     /tmp/ccBHGUuG.s:269    .text:000000000000015c .L0 
GAS LISTING /tmp/ccBHGUuG.s 			page 13


     /tmp/ccBHGUuG.s:270    .text:000000000000015c .L0 
     /tmp/ccBHGUuG.s:271    .text:000000000000015c .L0 
     /tmp/ccBHGUuG.s:273    .text:0000000000000160 .L0 
     /tmp/ccBHGUuG.s:274    .text:0000000000000160 .L0 
     /tmp/ccBHGUuG.s:276    .text:0000000000000164 .L0 
     /tmp/ccBHGUuG.s:277    .text:0000000000000164 .L0 
     /tmp/ccBHGUuG.s:280    .text:0000000000000168 .L0 
     /tmp/ccBHGUuG.s:281    .text:0000000000000168 .L0 
     /tmp/ccBHGUuG.s:284    .text:000000000000016c .L0 
     /tmp/ccBHGUuG.s:289    .text:0000000000000170 .L0 
     /tmp/ccBHGUuG.s:291    .text:0000000000000174 .L0 
     /tmp/ccBHGUuG.s:294    .text:0000000000000178 .L0 
     /tmp/ccBHGUuG.s:296    .text:000000000000017c .L0 
     /tmp/ccBHGUuG.s:297    .text:000000000000017c .L0 
     /tmp/ccBHGUuG.s:303    .text:0000000000000180 .L0 
     /tmp/ccBHGUuG.s:304    .text:0000000000000180 .L0 
     /tmp/ccBHGUuG.s:310    .text:0000000000000188 .L0 
     /tmp/ccBHGUuG.s:311    .text:0000000000000188 .L0 
     /tmp/ccBHGUuG.s:317    .text:0000000000000190 .L0 
     /tmp/ccBHGUuG.s:318    .text:0000000000000190 .L0 
     /tmp/ccBHGUuG.s:326    .text:0000000000000198 .L0 
     /tmp/ccBHGUuG.s:332    .text:0000000000000198 _ZN15MemoryAllocator9kmem_freeEPv
     /tmp/ccBHGUuG.s:335    .text:0000000000000198 .L0 
     /tmp/ccBHGUuG.s:337    .text:0000000000000198 .L0 
     /tmp/ccBHGUuG.s:338    .text:000000000000019c .L0 
     /tmp/ccBHGUuG.s:341    .text:00000000000001a4 .L0 
     /tmp/ccBHGUuG.s:342    .text:00000000000001a4 .L0 
     /tmp/ccBHGUuG.s:344    .text:00000000000001a8 .L0 
     /tmp/ccBHGUuG.s:346    .text:00000000000001a8 .L0 
     /tmp/ccBHGUuG.s:347    .text:00000000000001a8 .L0 
     /tmp/ccBHGUuG.s:350    .text:00000000000001b0 .L0 
     /tmp/ccBHGUuG.s:351    .text:00000000000001b4 .L0 
     /tmp/ccBHGUuG.s:353    .text:00000000000001b8 .L0 
     /tmp/ccBHGUuG.s:354    .text:00000000000001b8 .L0 
     /tmp/ccBHGUuG.s:356    .text:00000000000001bc .L0 
     /tmp/ccBHGUuG.s:358    .text:00000000000001c0 .L0 
     /tmp/ccBHGUuG.s:367    .bss:0000000000000000 _ZN15MemoryAllocator8instanceE
     /tmp/ccBHGUuG.s:364    .bss:0000000000000000 .LANCHOR0
     /tmp/ccBHGUuG.s:374    .text:00000000000001c0 .L0 
     /tmp/ccBHGUuG.s:28     .text:0000000000000010 .L0 
     /tmp/ccBHGUuG.s:35     .text:000000000000001c .L0 
     /tmp/ccBHGUuG.s:142    .text:0000000000000094 .L0 
     /tmp/ccBHGUuG.s:144    .text:00000000000000a0 .L0 
     /tmp/ccBHGUuG.s:165    .text:00000000000000cc .L0 
     /tmp/ccBHGUuG.s:136    .text:0000000000000094 .L18
     /tmp/ccBHGUuG.s:122    .text:0000000000000088 .L1
     /tmp/ccBHGUuG.s:187    .text:0000000000000100 .L19
     /tmp/ccBHGUuG.s:219    .text:000000000000011c .L6
     /tmp/ccBHGUuG.s:200    .text:0000000000000108 .L7
     /tmp/ccBHGUuG.s:82     .text:0000000000000060 .L9
     /tmp/ccBHGUuG.s:211    .text:0000000000000114 .L20
     /tmp/ccBHGUuG.s:101    .text:0000000000000074 .L10
     /tmp/ccBHGUuG.s:32     .text:000000000000001c .L2
     /tmp/ccBHGUuG.s:44     .text:0000000000000028 .L5
     /tmp/ccBHGUuG.s:71     .text:0000000000000050 .L8
     /tmp/ccBHGUuG.s:115    .text:0000000000000084 .L11
     /tmp/ccBHGUuG.s:308    .text:0000000000000188 .L12
GAS LISTING /tmp/ccBHGUuG.s 			page 14


     /tmp/ccBHGUuG.s:246    .text:000000000000013c .L14
     /tmp/ccBHGUuG.s:314    .text:0000000000000190 .L21
     /tmp/ccBHGUuG.s:286    .text:0000000000000170 .L15
     /tmp/ccBHGUuG.s:237    .text:0000000000000130 .L13
     /tmp/ccBHGUuG.s:299    .text:0000000000000180 .L16
     /tmp/ccBHGUuG.s:962    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBHGUuG.s:1903   .debug_str:0000000000000240 .LASF53
     /tmp/ccBHGUuG.s:1931   .debug_str:00000000000003f8 .LASF54
     /tmp/ccBHGUuG.s:1845   .debug_str:000000000000002a .LASF55
     /tmp/ccBHGUuG.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBHGUuG.s:370    .text:00000000000001c0 .Letext0
     /tmp/ccBHGUuG.s:1837   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBHGUuG.s:1911   .debug_str:0000000000000350 .LASF0
     /tmp/ccBHGUuG.s:1887   .debug_str:0000000000000190 .LASF1
     /tmp/ccBHGUuG.s:1873   .debug_str:0000000000000134 .LASF2
     /tmp/ccBHGUuG.s:1853   .debug_str:000000000000008e .LASF4
     /tmp/ccBHGUuG.s:1883   .debug_str:0000000000000179 .LASF3
     /tmp/ccBHGUuG.s:1843   .debug_str:0000000000000023 .LASF5
     /tmp/ccBHGUuG.s:1839   .debug_str:0000000000000000 .LASF6
     /tmp/ccBHGUuG.s:1867   .debug_str:000000000000010a .LASF7
     /tmp/ccBHGUuG.s:1923   .debug_str:00000000000003bd .LASF8
     /tmp/ccBHGUuG.s:1851   .debug_str:0000000000000080 .LASF9
     /tmp/ccBHGUuG.s:1963   .debug_str:0000000000000523 .LASF10
     /tmp/ccBHGUuG.s:1869   .debug_str:000000000000011d .LASF11
     /tmp/ccBHGUuG.s:1945   .debug_str:000000000000048b .LASF12
     /tmp/ccBHGUuG.s:1933   .debug_str:0000000000000410 .LASF13
     /tmp/ccBHGUuG.s:1891   .debug_str:00000000000001ca .LASF14
     /tmp/ccBHGUuG.s:1861   .debug_str:00000000000000e1 .LASF15
     /tmp/ccBHGUuG.s:1927   .debug_str:00000000000003d7 .LASF16
     /tmp/ccBHGUuG.s:1905   .debug_str:0000000000000304 .LASF37
     /tmp/ccBHGUuG.s:1943   .debug_str:0000000000000486 .LASF56
     /tmp/ccBHGUuG.s:1953   .debug_str:00000000000004cf .LASF17
     /tmp/ccBHGUuG.s:1913   .debug_str:000000000000035d .LASF18
     /tmp/ccBHGUuG.s:1951   .debug_str:00000000000004ca .LASF19
     /tmp/ccBHGUuG.s:1957   .debug_str:00000000000004f1 .LASF20
     /tmp/ccBHGUuG.s:1901   .debug_str:000000000000021e .LASF57
     /tmp/ccBHGUuG.s:1907   .debug_str:0000000000000328 .LASF21
     /tmp/ccBHGUuG.s:1939   .debug_str:000000000000045e .LASF22
     /tmp/ccBHGUuG.s:1893   .debug_str:00000000000001d6 .LASF23
     /tmp/ccBHGUuG.s:1937   .debug_str:0000000000000441 .LASF25
     /tmp/ccBHGUuG.s:1899   .debug_str:000000000000020c .LASF24
     /tmp/ccBHGUuG.s:1955   .debug_str:00000000000004d4 .LASF26
     /tmp/ccBHGUuG.s:1895   .debug_str:00000000000001e7 .LASF27
     /tmp/ccBHGUuG.s:1857   .debug_str:000000000000009d .LASF28
     /tmp/ccBHGUuG.s:1929   .debug_str:00000000000003ed .LASF29
     /tmp/ccBHGUuG.s:1889   .debug_str:00000000000001a3 .LASF30
     /tmp/ccBHGUuG.s:1865   .debug_str:0000000000000100 .LASF31
     /tmp/ccBHGUuG.s:1949   .debug_str:00000000000004a5 .LASF32
     /tmp/ccBHGUuG.s:1871   .debug_str:000000000000012c .LASF33
     /tmp/ccBHGUuG.s:1941   .debug_str:0000000000000463 .LASF34
     /tmp/ccBHGUuG.s:1935   .debug_str:0000000000000420 .LASF45
     /tmp/ccBHGUuG.s:1947   .debug_str:000000000000049b .LASF35
     /tmp/ccBHGUuG.s:1847   .debug_str:000000000000005a .LASF36
     /tmp/ccBHGUuG.s:1841   .debug_str:0000000000000013 .LASF38
     /tmp/ccBHGUuG.s:1919   .debug_str:000000000000038d .LASF58
     /tmp/ccBHGUuG.s:1921   .debug_str:0000000000000399 .LASF59
     /tmp/ccBHGUuG.s:1959   .debug_str:00000000000004f6 .LASF39
GAS LISTING /tmp/ccBHGUuG.s 			page 15


     /tmp/ccBHGUuG.s:1909   .debug_str:000000000000032d .LASF40
     /tmp/ccBHGUuG.s:1925   .debug_str:00000000000003cd .LASF41
     /tmp/ccBHGUuG.s:1961   .debug_str:0000000000000501 .LASF42
     /tmp/ccBHGUuG.s:1859   .debug_str:00000000000000c5 .LASF43
     /tmp/ccBHGUuG.s:1877   .debug_str:000000000000014a .LASF44
     /tmp/ccBHGUuG.s:1897   .debug_str:00000000000001f3 .LASF46
     /tmp/ccBHGUuG.s:1915   .debug_str:0000000000000365 .LASF47
     /tmp/ccBHGUuG.s:1863   .debug_str:00000000000000f7 .LASF48
     /tmp/ccBHGUuG.s:1881   .debug_str:0000000000000171 .LASF49
     /tmp/ccBHGUuG.s:1875   .debug_str:0000000000000142 .LASF60
     /tmp/ccBHGUuG.s:1917   .debug_str:000000000000036e .LASF61
     /tmp/ccBHGUuG.s:333    .text:0000000000000198 .LFB9
     /tmp/ccBHGUuG.s:359    .text:00000000000001c0 .LFE9
     /tmp/ccBHGUuG.s:1628   .debug_loc:0000000000000000 .LLST8
     /tmp/ccBHGUuG.s:348    .text:00000000000001b0 .LVL28
     /tmp/ccBHGUuG.s:10     .text:0000000000000000 .LFB8
     /tmp/ccBHGUuG.s:327    .text:0000000000000198 .LFE8
     /tmp/ccBHGUuG.s:1642   .debug_loc:0000000000000039 .LLST0
     /tmp/ccBHGUuG.s:1717   .debug_loc:0000000000000163 .LLST1
     /tmp/ccBHGUuG.s:1817   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBHGUuG.s:1728   .debug_loc:0000000000000199 .LLST2
     /tmp/ccBHGUuG.s:1849   .debug_str:000000000000007b .LASF50
     /tmp/ccBHGUuG.s:1743   .debug_loc:00000000000001e2 .LLST3
     /tmp/ccBHGUuG.s:103    .text:0000000000000074 .LBB21
     /tmp/ccBHGUuG.s:116    .text:0000000000000084 .LBE21
     /tmp/ccBHGUuG.s:1885   .debug_str:000000000000018b .LASF51
     /tmp/ccBHGUuG.s:1754   .debug_loc:0000000000000218 .LLST4
     /tmp/ccBHGUuG.s:222    .text:000000000000011c .LBB24
     /tmp/ccBHGUuG.s:322    .text:0000000000000198 .LBE24
     /tmp/ccBHGUuG.s:1855   .debug_str:0000000000000095 .LASF52
     /tmp/ccBHGUuG.s:1765   .debug_loc:000000000000024e .LLST5
     /tmp/ccBHGUuG.s:1782   .debug_loc:0000000000000299 .LLST6
     /tmp/ccBHGUuG.s:287    .text:0000000000000170 .LBB26
     /tmp/ccBHGUuG.s:300    .text:0000000000000180 .LBE26
     /tmp/ccBHGUuG.s:1793   .debug_loc:00000000000002cf .LLST7
     /tmp/ccBHGUuG.s:23     .text:0000000000000010 .LBB13
     /tmp/ccBHGUuG.s:1879   .debug_str:0000000000000166 .LASF62
     /tmp/ccBHGUuG.s:336    .text:0000000000000198 .LVL27
     /tmp/ccBHGUuG.s:14     .text:0000000000000000 .LVL0
     /tmp/ccBHGUuG.s:31     .text:000000000000001c .LVL1
     /tmp/ccBHGUuG.s:98     .text:0000000000000070 .LVL5
     /tmp/ccBHGUuG.s:114    .text:0000000000000084 .LVL8
     /tmp/ccBHGUuG.s:135    .text:0000000000000094 .LVL10
     /tmp/ccBHGUuG.s:155    .text:00000000000000bc .LVL11
     /tmp/ccBHGUuG.s:210    .text:0000000000000114 .LVL14
     /tmp/ccBHGUuG.s:216    .text:0000000000000118 .LVL15
     /tmp/ccBHGUuG.s:218    .text:000000000000011c .LVL16
     /tmp/ccBHGUuG.s:282    .text:000000000000016c .LVL19
     /tmp/ccBHGUuG.s:298    .text:0000000000000180 .LVL22
     /tmp/ccBHGUuG.s:307    .text:0000000000000188 .LVL24
     /tmp/ccBHGUuG.s:313    .text:0000000000000190 .LVL25
     /tmp/ccBHGUuG.s:319    .text:0000000000000194 .LVL26
     /tmp/ccBHGUuG.s:36     .text:0000000000000024 .LVL2
     /tmp/ccBHGUuG.s:186    .text:0000000000000100 .LVL12
     /tmp/ccBHGUuG.s:43     .text:0000000000000028 .LVL3
     /tmp/ccBHGUuG.s:121    .text:0000000000000088 .LVL9
     /tmp/ccBHGUuG.s:305    .text:0000000000000184 .LVL23
GAS LISTING /tmp/ccBHGUuG.s 			page 16


     /tmp/ccBHGUuG.s:84     .text:0000000000000060 .LVL4
     /tmp/ccBHGUuG.s:102    .text:0000000000000074 .LVL6
     /tmp/ccBHGUuG.s:108    .text:000000000000007c .LVL7
     /tmp/ccBHGUuG.s:228    .text:0000000000000124 .LVL17
     /tmp/ccBHGUuG.s:285    .text:0000000000000170 .LVL20
     /tmp/ccBHGUuG.s:268    .text:000000000000015c .LVL18
     /tmp/ccBHGUuG.s:292    .text:0000000000000178 .LVL21
     /tmp/ccBHGUuG.s:375    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBHGUuG.s:38     .text:0000000000000024 .LBE13
     /tmp/ccBHGUuG.s:138    .text:0000000000000094 .LBB31
     /tmp/ccBHGUuG.s:189    .text:0000000000000100 .LBE31
     /tmp/ccBHGUuG.s:40     .text:0000000000000024 .LBB16
     /tmp/ccBHGUuG.s:126    .text:0000000000000088 .LBE16
     /tmp/ccBHGUuG.s:190    .text:0000000000000100 .LBB32
     /tmp/ccBHGUuG.s:325    .text:0000000000000198 .LBE32
     /tmp/ccBHGUuG.s:60     .text:0000000000000040 .LBB19
     /tmp/ccBHGUuG.s:123    .text:0000000000000088 .LBE19
     /tmp/ccBHGUuG.s:203    .text:0000000000000108 .LBB23
     /tmp/ccBHGUuG.s:221    .text:000000000000011c .LBE23

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
__mem_free
