GAS LISTING /tmp/cc2G774b.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10kmem_allocEm
   9              	_ZN15MemoryAllocator10kmem_allocEm:
  10              	.LFB8:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 6/20/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** 
  10:src/MemoryAllocator.cpp **** MemoryAllocator* MemoryAllocator::instance= nullptr;
  11:src/MemoryAllocator.cpp **** 
  12:src/MemoryAllocator.cpp **** 
  13:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmem_alloc(size_t size){
  12              		.loc 1 13 47
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21 000c 93070500 		mv	a5,a0
  14:src/MemoryAllocator.cpp ****     MemoryAllocator* ma = getInstance();
  22              		.loc 1 14 5
  23              	.LBB13:
  24              	.LBB14:
  25              		.file 2 "src/../h/MemoryAllocator.hpp"
   1:src/../h/MemoryAllocator.hpp **** //
   2:src/../h/MemoryAllocator.hpp **** // Created by os on 6/20/22.
   3:src/../h/MemoryAllocator.hpp **** //
   4:src/../h/MemoryAllocator.hpp **** 
   5:src/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   6:src/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   7:src/../h/MemoryAllocator.hpp **** 
   8:src/../h/MemoryAllocator.hpp **** #include "../lib/mem.h"
   9:src/../h/MemoryAllocator.hpp **** #include "DoublyLinkedList.hpp"
  10:src/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
  11:src/../h/MemoryAllocator.hpp **** 
  12:src/../h/MemoryAllocator.hpp **** 
  13:src/../h/MemoryAllocator.hpp **** class MemoryAllocator {
  14:src/../h/MemoryAllocator.hpp **** public:
  15:src/../h/MemoryAllocator.hpp ****     typedef DoublyLinkedList<size_t>::Node FreeMem;
  16:src/../h/MemoryAllocator.hpp **** 
  17:src/../h/MemoryAllocator.hpp ****     static MemoryAllocator* getInstance(){
  18:src/../h/MemoryAllocator.hpp ****         if(instance == nullptr){
  26              		.loc 2 18 9
GAS LISTING /tmp/cc2G774b.s 			page 2


  27              		.loc 2 18 21 is_stmt 0
  28 0010 17070000 		ld	a4,.LANCHOR0
  28      03370700 
  29              		.loc 2 18 9
  30 0018 630E0706 		beqz	a4,.L18
  31              	.LVL1:
  32              	.L2:
  19:src/../h/MemoryAllocator.hpp ****             instance = (MemoryAllocator*)HEAP_START_ADDR;
  20:src/../h/MemoryAllocator.hpp **** 
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head=(FreeMem*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator));
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
  25:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
  26:src/../h/MemoryAllocator.hpp **** 
  27:src/../h/MemoryAllocator.hpp ****             instance->pcbList.head= nullptr;
  28:src/../h/MemoryAllocator.hpp ****         }
  29:src/../h/MemoryAllocator.hpp ****         return instance;
  33              		.loc 2 29 9 is_stmt 1
  34              		.loc 2 29 16 is_stmt 0
  35 001c 97060000 		ld	a3,.LANCHOR0
  35      83B60600 
  36              	.LVL2:
  37              	.LBE14:
  38              	.LBE13:
  15:src/MemoryAllocator.cpp ****     for(FreeMem* cur = ma->freeList.head; cur!=nullptr; cur=cur->next){
  39              		.loc 1 15 5 is_stmt 1
  40              	.LBB16:
  41              		.loc 1 15 18 is_stmt 0
  42 0024 03B50600 		ld	a0,0(a3)
  43              	.LVL3:
  44              	.L5:
  45              		.loc 1 15 46 is_stmt 1 discriminator 1
  46 0028 63000506 		beqz	a0,.L1
  47              	.LBB17:
  16:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
  48              		.loc 1 16 9
  49              		.loc 1 16 17 is_stmt 0
  50 002c 03370500 		ld	a4,0(a0)
  51              		.loc 1 16 9
  52 0030 6368F70C 		bltu	a4,a5,.L19
  17:src/MemoryAllocator.cpp ****         //Found
  18:src/MemoryAllocator.cpp **** 
  19:src/MemoryAllocator.cpp ****         if(cur->size-size<=sizeof(FreeMem)){
  53              		.loc 1 19 9 is_stmt 1
  54              	.LBB18:
  55              		.loc 1 19 21 is_stmt 0
  56 0034 3307F740 		sub	a4,a4,a5
  57              		.loc 1 19 9
  58 0038 13060002 		li	a2,32
  59 003c 6360E60E 		bgtu	a4,a2,.L6
  60              	.LBB19:
  20:src/MemoryAllocator.cpp ****             //No remaining fragment
  21:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = cur->next;
  61              		.loc 1 21 13 is_stmt 1
  62              		.loc 1 21 21 is_stmt 0
  63 0040 03378501 		ld	a4,24(a0)
GAS LISTING /tmp/cc2G774b.s 			page 3


  64              		.loc 1 21 13
  65 0044 6302070C 		beqz	a4,.L7
  66              		.loc 1 21 26 is_stmt 1 discriminator 1
  67              		.loc 1 21 49 is_stmt 0 discriminator 1
  68 0048 03360501 		ld	a2,16(a0)
  69              		.loc 1 21 42 discriminator 1
  70 004c 2338C700 		sd	a2,16(a4)
  71              	.L8:
  22:src/MemoryAllocator.cpp ****             else ma->freeList.head = cur->next;
  23:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
  72              		.loc 1 23 13 is_stmt 1
  73              		.loc 1 23 21 is_stmt 0
  74 0050 03370501 		ld	a4,16(a0)
  75              		.loc 1 23 13
  76 0054 63060700 		beqz	a4,.L9
  77              		.loc 1 23 26 is_stmt 1 discriminator 1
  78              		.loc 1 23 49 is_stmt 0 discriminator 1
  79 0058 03368501 		ld	a2,24(a0)
  80              		.loc 1 23 42 discriminator 1
  81 005c 233CC700 		sd	a2,24(a4)
  82              	.L9:
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp ****             //add process to the end of pcb list
  26:src/MemoryAllocator.cpp ****             FreeMem* proc = cur;
  83              		.loc 1 26 13 is_stmt 1
  84              	.LVL4:
  27:src/MemoryAllocator.cpp ****             proc->size=size;
  85              		.loc 1 27 13
  86              		.loc 1 27 23 is_stmt 0
  87 0060 2330F500 		sd	a5,0(a0)
  28:src/MemoryAllocator.cpp ****             proc->address=cur;
  88              		.loc 1 28 13 is_stmt 1
  89              		.loc 1 28 26 is_stmt 0
  90 0064 2334A500 		sd	a0,8(a0)
  29:src/MemoryAllocator.cpp ****             proc->next= nullptr;
  91              		.loc 1 29 13 is_stmt 1
  92              		.loc 1 29 23 is_stmt 0
  93 0068 23380500 		sd	zero,16(a0)
  30:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
  94              		.loc 1 30 13 is_stmt 1
  95              	.LBB20:
  96              		.loc 1 30 29 is_stmt 0
  97 006c 83B70601 		ld	a5,16(a3)
  98              	.LVL5:
  99              		.loc 1 30 13
 100 0070 6382070A 		beqz	a5,.L20
 101              	.L10:
 102              	.LVL6:
 103              	.LBB21:
  31:src/MemoryAllocator.cpp ****             {
  32:src/MemoryAllocator.cpp ****                 ma->pcbList.head = cur;
  33:src/MemoryAllocator.cpp **** 
  34:src/MemoryAllocator.cpp ****             } else
  35:src/MemoryAllocator.cpp ****             {
  36:src/MemoryAllocator.cpp ****                 FreeMem* temp;
  37:src/MemoryAllocator.cpp ****                 for( temp = ma->pcbList.head; temp->next!=nullptr; temp=temp->next);
 104              		.loc 1 37 57 is_stmt 1 discriminator 3
GAS LISTING /tmp/cc2G774b.s 			page 4


 105 0074 13870700 		mv	a4,a5
 106              		.loc 1 37 53 is_stmt 0 discriminator 3
 107 0078 83B70701 		ld	a5,16(a5)
 108              	.LVL7:
 109              		.loc 1 37 57 discriminator 3
 110 007c E39C07FE 		bnez	a5,.L10
  38:src/MemoryAllocator.cpp ****                 temp->next=cur;
 111              		.loc 1 38 17 is_stmt 1
 112              		.loc 1 38 27 is_stmt 0
 113 0080 2338A700 		sd	a0,16(a4)
 114              	.LVL8:
 115              	.L11:
 116              	.LBE21:
 117              	.LBE20:
  39:src/MemoryAllocator.cpp ****             }
  40:src/MemoryAllocator.cpp **** 
  41:src/MemoryAllocator.cpp ****             return cur->address;
 118              		.loc 1 41 13 is_stmt 1
 119              		.loc 1 41 25 is_stmt 0
 120 0084 03358500 		ld	a0,8(a0)
 121              	.LVL9:
 122              	.L1:
 123              	.LBE19:
 124              	.LBE18:
 125              	.LBE17:
 126              	.LBE16:
  42:src/MemoryAllocator.cpp **** 
  43:src/MemoryAllocator.cpp ****         }
  44:src/MemoryAllocator.cpp ****         else{
  45:src/MemoryAllocator.cpp ****             FreeMem * newfrgm = (FreeMem *)((size_t)cur + size + sizeof(FreeMem));
  46:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
  47:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
  48:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
  49:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
  50:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
  51:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
  52:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
  53:src/MemoryAllocator.cpp **** 
  54:src/MemoryAllocator.cpp ****             //add process to the end of pcb list
  55:src/MemoryAllocator.cpp ****             FreeMem* proc = cur;
  56:src/MemoryAllocator.cpp ****             proc->size=size;
  57:src/MemoryAllocator.cpp ****             proc->address=cur;
  58:src/MemoryAllocator.cpp ****             proc->next= nullptr;
  59:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
  60:src/MemoryAllocator.cpp ****             {
  61:src/MemoryAllocator.cpp ****                 ma->pcbList.head = cur;
  62:src/MemoryAllocator.cpp **** 
  63:src/MemoryAllocator.cpp ****             } else
  64:src/MemoryAllocator.cpp ****             {
  65:src/MemoryAllocator.cpp ****                 FreeMem* temp;
  66:src/MemoryAllocator.cpp ****                 for( temp = ma->pcbList.head; temp->next!=nullptr; temp=temp->next);
  67:src/MemoryAllocator.cpp ****                 temp->next=cur;
  68:src/MemoryAllocator.cpp ****             }
  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp ****             return cur->address;
  71:src/MemoryAllocator.cpp ****         }
  72:src/MemoryAllocator.cpp ****     }
GAS LISTING /tmp/cc2G774b.s 			page 5


  73:src/MemoryAllocator.cpp ****     return nullptr;
  74:src/MemoryAllocator.cpp **** 
  75:src/MemoryAllocator.cpp ****     //initialize address at HEAP_START_ADRESS at the beginning
  76:src/MemoryAllocator.cpp ****     //ubaciti prvi element u listu i postaviti mu adresu na heap start adress + sizeof(freeMem)
  77:src/MemoryAllocator.cpp **** }
 127              		.loc 1 77 1
 128 0088 03348100 		ld	s0,8(sp)
 129              		.cfi_remember_state
 130              		.cfi_restore 8
 131              		.cfi_def_cfa 2, 16
 132 008c 13010101 		addi	sp,sp,16
 133              		.cfi_def_cfa_offset 0
 134 0090 67800000 		jr	ra
 135              	.LVL10:
 136              	.L18:
 137              		.cfi_restore_state
 138              	.LBB31:
 139              	.LBB15:
  19:src/../h/MemoryAllocator.hpp **** 
 140              		.loc 2 19 13 is_stmt 1
  19:src/../h/MemoryAllocator.hpp **** 
 141              		.loc 2 19 22 is_stmt 0
 142 0094 17060000 		la	a2,HEAP_START_ADDR
 142      03360600 
 143 009c 03370600 		ld	a4,0(a2)
 144 00a0 97060000 		lla	a3,.LANCHOR0
 144      93860600 
 145 00a8 23B0E600 		sd	a4,0(a3)
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 146              		.loc 2 21 13 is_stmt 1
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 147              		.loc 2 21 71 is_stmt 0
 148 00ac 93050702 		addi	a1,a4,32
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 149              		.loc 2 21 36
 150 00b0 2330B700 		sd	a1,0(a4)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 151              		.loc 2 22 13 is_stmt 1
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 152              		.loc 2 22 77 is_stmt 0
 153 00b4 03360600 		ld	a2,0(a2)
 154 00b8 13050602 		addi	a0,a2,32
 155              	.LVL11:
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 156              		.loc 2 22 32
 157 00bc 03B70600 		ld	a4,0(a3)
 158 00c0 83350700 		ld	a1,0(a4)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 159              		.loc 2 22 45
 160 00c4 23B4A500 		sd	a0,8(a1)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 161              		.loc 2 23 13 is_stmt 1
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 162              		.loc 2 23 32 is_stmt 0
 163 00c8 83350700 		ld	a1,0(a4)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 164              		.loc 2 23 66
GAS LISTING /tmp/cc2G774b.s 			page 6


 165 00cc 17070000 		la	a4,HEAP_END_ADDR
 165      03370700 
 166 00d4 03370700 		ld	a4,0(a4)
 167 00d8 3307C740 		sub	a4,a4,a2
 168 00dc 130707FE 		addi	a4,a4,-32
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 169              		.loc 2 23 43
 170 00e0 23B0E500 		sd	a4,0(a1)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 171              		.loc 2 24 13 is_stmt 1
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 172              		.loc 2 24 32 is_stmt 0
 173 00e4 03B70600 		ld	a4,0(a3)
 174 00e8 83360700 		ld	a3,0(a4)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 175              		.loc 2 24 42
 176 00ec 23B80600 		sd	zero,16(a3)
  25:src/../h/MemoryAllocator.hpp **** 
 177              		.loc 2 25 13 is_stmt 1
  25:src/../h/MemoryAllocator.hpp **** 
 178              		.loc 2 25 32 is_stmt 0
 179 00f0 83360700 		ld	a3,0(a4)
  25:src/../h/MemoryAllocator.hpp **** 
 180              		.loc 2 25 42
 181 00f4 23BC0600 		sd	zero,24(a3)
  27:src/../h/MemoryAllocator.hpp ****         }
 182              		.loc 2 27 13 is_stmt 1
  27:src/../h/MemoryAllocator.hpp ****         }
 183              		.loc 2 27 35 is_stmt 0
 184 00f8 23380700 		sd	zero,16(a4)
 185 00fc 6FF01FF2 		j	.L2
 186              	.LVL12:
 187              	.L19:
 188              	.LBE15:
 189              	.LBE31:
 190              	.LBB32:
 191              	.LBB29:
  16:src/MemoryAllocator.cpp ****         //Found
 192              		.loc 1 16 28 is_stmt 1 discriminator 1
 193              	.LBE29:
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 194              		.loc 1 15 5 discriminator 1
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 195              		.loc 1 15 60 is_stmt 0 discriminator 1
 196 0100 03350501 		ld	a0,16(a0)
 197              	.LVL13:
  15:src/MemoryAllocator.cpp ****         if(cur->size<size) continue;
 198              		.loc 1 15 5 discriminator 1
 199 0104 6FF05FF2 		j	.L5
 200              	.L7:
 201              	.LBB30:
 202              	.LBB28:
 203              	.LBB23:
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 204              		.loc 1 22 18 is_stmt 1
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 205              		.loc 1 22 43 is_stmt 0
GAS LISTING /tmp/cc2G774b.s 			page 7


 206 0108 03370501 		ld	a4,16(a0)
  22:src/MemoryAllocator.cpp ****             if(cur->next)cur->next->prev = cur->prev;
 207              		.loc 1 22 36
 208 010c 23B0E600 		sd	a4,0(a3)
 209 0110 6FF01FF4 		j	.L8
 210              	.LVL14:
 211              	.L20:
 212              	.LBB22:
  32:src/MemoryAllocator.cpp **** 
 213              		.loc 1 32 17 is_stmt 1
  32:src/MemoryAllocator.cpp **** 
 214              		.loc 1 32 34 is_stmt 0
 215 0114 23B8A600 		sd	a0,16(a3)
 216              	.LVL15:
 217 0118 6FF0DFF6 		j	.L11
 218              	.LVL16:
 219              	.L6:
 220              	.LBE22:
 221              	.LBE23:
 222              	.LBB24:
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 223              		.loc 1 45 13 is_stmt 1
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 224              		.loc 1 45 57 is_stmt 0
 225 011c B305F500 		add	a1,a0,a5
  45:src/MemoryAllocator.cpp ****             if(cur->prev)cur->prev->next = newfrgm;
 226              		.loc 1 45 64
 227 0120 13870502 		addi	a4,a1,32
 228              	.LVL17:
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 229              		.loc 1 46 13 is_stmt 1
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 230              		.loc 1 46 21 is_stmt 0
 231 0124 03368501 		ld	a2,24(a0)
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 232              		.loc 1 46 13
 233 0128 63000606 		beqz	a2,.L12
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 234              		.loc 1 46 26 is_stmt 1 discriminator 1
  46:src/MemoryAllocator.cpp ****             else ma->freeList.head = newfrgm;
 235              		.loc 1 46 42 is_stmt 0 discriminator 1
 236 012c 2338E600 		sd	a4,16(a2)
 237              	.L13:
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 238              		.loc 1 48 13 is_stmt 1
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 239              		.loc 1 48 21 is_stmt 0
 240 0130 03360501 		ld	a2,16(a0)
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 241              		.loc 1 48 13
 242 0134 63040600 		beqz	a2,.L14
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 243              		.loc 1 48 27 is_stmt 1 discriminator 1
  48:src/MemoryAllocator.cpp ****             newfrgm->prev = cur->prev;
 244              		.loc 1 48 43 is_stmt 0 discriminator 1
 245 0138 233CE600 		sd	a4,24(a2)
 246              	.L14:
GAS LISTING /tmp/cc2G774b.s 			page 8


  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 247              		.loc 1 49 13 is_stmt 1
  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 248              		.loc 1 49 34 is_stmt 0
 249 013c 03368501 		ld	a2,24(a0)
  49:src/MemoryAllocator.cpp ****             newfrgm->next=cur->next;
 250              		.loc 1 49 27
 251 0140 233CC700 		sd	a2,24(a4)
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 252              		.loc 1 50 13 is_stmt 1
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 253              		.loc 1 50 32 is_stmt 0
 254 0144 03360501 		ld	a2,16(a0)
  50:src/MemoryAllocator.cpp ****             newfrgm->size=cur->size-size;
 255              		.loc 1 50 26
 256 0148 2338C700 		sd	a2,16(a4)
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 257              		.loc 1 51 13 is_stmt 1
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 258              		.loc 1 51 32 is_stmt 0
 259 014c 03360500 		ld	a2,0(a0)
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 260              		.loc 1 51 36
 261 0150 3306F640 		sub	a2,a2,a5
  51:src/MemoryAllocator.cpp ****             newfrgm->address= (void*)((size_t)cur + size + sizeof(FreeMem));
 262              		.loc 1 51 26
 263 0154 23B0C502 		sd	a2,32(a1)
  52:src/MemoryAllocator.cpp **** 
 264              		.loc 1 52 13 is_stmt 1
  52:src/MemoryAllocator.cpp **** 
 265              		.loc 1 52 29 is_stmt 0
 266 0158 2334E700 		sd	a4,8(a4)
  55:src/MemoryAllocator.cpp ****             proc->size=size;
 267              		.loc 1 55 13 is_stmt 1
 268              	.LVL18:
  56:src/MemoryAllocator.cpp ****             proc->address=cur;
 269              		.loc 1 56 13
  56:src/MemoryAllocator.cpp ****             proc->address=cur;
 270              		.loc 1 56 23 is_stmt 0
 271 015c 2330F500 		sd	a5,0(a0)
  57:src/MemoryAllocator.cpp ****             proc->next= nullptr;
 272              		.loc 1 57 13 is_stmt 1
  57:src/MemoryAllocator.cpp ****             proc->next= nullptr;
 273              		.loc 1 57 26 is_stmt 0
 274 0160 2334A500 		sd	a0,8(a0)
  58:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
 275              		.loc 1 58 13 is_stmt 1
  58:src/MemoryAllocator.cpp ****             if (ma->pcbList.head == nullptr)
 276              		.loc 1 58 23 is_stmt 0
 277 0164 23380500 		sd	zero,16(a0)
  59:src/MemoryAllocator.cpp ****             {
 278              		.loc 1 59 13 is_stmt 1
 279              	.LBB25:
  59:src/MemoryAllocator.cpp ****             {
 280              		.loc 1 59 29 is_stmt 0
 281 0168 83B70601 		ld	a5,16(a3)
 282              	.LVL19:
GAS LISTING /tmp/cc2G774b.s 			page 9


  59:src/MemoryAllocator.cpp ****             {
 283              		.loc 1 59 13
 284 016c 63820702 		beqz	a5,.L21
 285              	.LVL20:
 286              	.L15:
 287              	.LBB26:
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 288              		.loc 1 66 57 is_stmt 1 discriminator 3
 289 0170 13870700 		mv	a4,a5
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 290              		.loc 1 66 53 is_stmt 0 discriminator 3
 291 0174 83B70701 		ld	a5,16(a5)
 292              	.LVL21:
  66:src/MemoryAllocator.cpp ****                 temp->next=cur;
 293              		.loc 1 66 57 discriminator 3
 294 0178 E39C07FE 		bnez	a5,.L15
  67:src/MemoryAllocator.cpp ****             }
 295              		.loc 1 67 17 is_stmt 1
  67:src/MemoryAllocator.cpp ****             }
 296              		.loc 1 67 27 is_stmt 0
 297 017c 2338A700 		sd	a0,16(a4)
 298              	.LVL22:
 299              	.L16:
 300              	.LBE26:
 301              	.LBE25:
  70:src/MemoryAllocator.cpp ****         }
 302              		.loc 1 70 13 is_stmt 1
  70:src/MemoryAllocator.cpp ****         }
 303              		.loc 1 70 25 is_stmt 0
 304 0180 03358500 		ld	a0,8(a0)
 305              	.LVL23:
 306 0184 6FF05FF0 		j	.L1
 307              	.LVL24:
 308              	.L12:
  47:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
 309              		.loc 1 47 18 is_stmt 1
  47:src/MemoryAllocator.cpp ****             if(cur->next) cur->next->prev = newfrgm;
 310              		.loc 1 47 36 is_stmt 0
 311 0188 23B0E600 		sd	a4,0(a3)
 312 018c 6FF05FFA 		j	.L13
 313              	.LVL25:
 314              	.L21:
 315              	.LBB27:
  61:src/MemoryAllocator.cpp **** 
 316              		.loc 1 61 17 is_stmt 1
  61:src/MemoryAllocator.cpp **** 
 317              		.loc 1 61 34 is_stmt 0
 318 0190 23B8A600 		sd	a0,16(a3)
 319              	.LVL26:
 320 0194 6FF0DFFE 		j	.L16
 321              	.LBE27:
 322              	.LBE24:
 323              	.LBE28:
 324              	.LBE30:
 325              	.LBE32:
 326              		.cfi_endproc
 327              	.LFE8:
GAS LISTING /tmp/cc2G774b.s 			page 10


 329              		.align	2
 330              		.globl	_ZN15MemoryAllocator9tryToJoinEPN16DoublyLinkedListImE4NodeE
 332              	_ZN15MemoryAllocator9tryToJoinEPN16DoublyLinkedListImE4NodeE:
 333              	.LFB9:
  78:src/MemoryAllocator.cpp **** 
  79:src/MemoryAllocator.cpp **** //try to join cur with cur->next segment
  80:src/MemoryAllocator.cpp **** int MemoryAllocator::tryToJoin(FreeMem *cur) {
 334              		.loc 1 80 46 is_stmt 1
 335              		.cfi_startproc
 336              	.LVL27:
 337 0198 130101FF 		addi	sp,sp,-16
 338              		.cfi_def_cfa_offset 16
 339 019c 23348100 		sd	s0,8(sp)
 340              		.cfi_offset 8, -8
 341 01a0 13040101 		addi	s0,sp,16
 342              		.cfi_def_cfa 8, 0
  81:src/MemoryAllocator.cpp ****     if(cur== nullptr)return 0;
 343              		.loc 1 81 5
 344 01a4 63060504 		beqz	a0,.L25
  82:src/MemoryAllocator.cpp ****     if(cur->next && (char*)cur+cur->size==(char*)(cur->next)){
 345              		.loc 1 82 5
 346              		.loc 1 82 13 is_stmt 0
 347 01a8 83370501 		ld	a5,16(a0)
 348              		.loc 1 82 5
 349 01ac 63860704 		beqz	a5,.L26
 350              		.loc 1 82 37 discriminator 1
 351 01b0 03370500 		ld	a4,0(a0)
 352              		.loc 1 82 31 discriminator 1
 353 01b4 B306E500 		add	a3,a0,a4
 354              		.loc 1 82 18 discriminator 1
 355 01b8 638AD700 		beq	a5,a3,.L29
  83:src/MemoryAllocator.cpp ****         //remove the cur->next segment
  84:src/MemoryAllocator.cpp ****         cur->size+=cur->next->size;
  85:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
  86:src/MemoryAllocator.cpp ****         if(cur->next)cur->next->prev=cur;
  87:src/MemoryAllocator.cpp ****         return 1;
  88:src/MemoryAllocator.cpp ****     }
  89:src/MemoryAllocator.cpp ****     else return 0;
 356              		.loc 1 89 17
 357 01bc 13050000 		li	a0,0
 358              	.LVL28:
 359              	.L23:
  90:src/MemoryAllocator.cpp **** }
 360              		.loc 1 90 1
 361 01c0 03348100 		ld	s0,8(sp)
 362              		.cfi_remember_state
 363              		.cfi_restore 8
 364              		.cfi_def_cfa 2, 16
 365 01c4 13010101 		addi	sp,sp,16
 366              		.cfi_def_cfa_offset 0
 367 01c8 67800000 		jr	ra
 368              	.LVL29:
 369              	.L29:
 370              		.cfi_restore_state
  84:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 371              		.loc 1 84 9 is_stmt 1
  84:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
GAS LISTING /tmp/cc2G774b.s 			page 11


 372              		.loc 1 84 31 is_stmt 0
 373 01cc 83B60700 		ld	a3,0(a5)
  84:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 374              		.loc 1 84 18
 375 01d0 3307D700 		add	a4,a4,a3
 376 01d4 2330E500 		sd	a4,0(a0)
  85:src/MemoryAllocator.cpp ****         if(cur->next)cur->next->prev=cur;
 377              		.loc 1 85 9 is_stmt 1
  85:src/MemoryAllocator.cpp ****         if(cur->next)cur->next->prev=cur;
 378              		.loc 1 85 32 is_stmt 0
 379 01d8 83B70701 		ld	a5,16(a5)
  85:src/MemoryAllocator.cpp ****         if(cur->next)cur->next->prev=cur;
 380              		.loc 1 85 19
 381 01dc 2338F500 		sd	a5,16(a0)
  86:src/MemoryAllocator.cpp ****         return 1;
 382              		.loc 1 86 9 is_stmt 1
 383 01e0 63840700 		beqz	a5,.L24
  86:src/MemoryAllocator.cpp ****         return 1;
 384              		.loc 1 86 22 discriminator 1
  86:src/MemoryAllocator.cpp ****         return 1;
 385              		.loc 1 86 37 is_stmt 0 discriminator 1
 386 01e4 23BCA700 		sd	a0,24(a5)
 387              	.L24:
  87:src/MemoryAllocator.cpp ****     }
 388              		.loc 1 87 9 is_stmt 1
  87:src/MemoryAllocator.cpp ****     }
 389              		.loc 1 87 16 is_stmt 0
 390 01e8 13051000 		li	a0,1
 391              	.LVL30:
 392 01ec 6FF05FFD 		j	.L23
 393              	.LVL31:
 394              	.L25:
  81:src/MemoryAllocator.cpp ****     if(cur->next && (char*)cur+cur->size==(char*)(cur->next)){
 395              		.loc 1 81 29
 396 01f0 13050000 		li	a0,0
 397              	.LVL32:
 398 01f4 6FF0DFFC 		j	.L23
 399              	.LVL33:
 400              	.L26:
  89:src/MemoryAllocator.cpp **** }
 401              		.loc 1 89 17
 402 01f8 13050000 		li	a0,0
 403              	.LVL34:
 404 01fc 6FF05FFC 		j	.L23
 405              		.cfi_endproc
 406              	.LFE9:
 408              		.align	2
 409              		.globl	_ZN15MemoryAllocator9kmem_freeEPv
 411              	_ZN15MemoryAllocator9kmem_freeEPv:
 412              	.LFB10:
  91:src/MemoryAllocator.cpp **** 
  92:src/MemoryAllocator.cpp **** int MemoryAllocator::kmem_free(void* addr){
 413              		.loc 1 92 43 is_stmt 1
 414              		.cfi_startproc
 415              	.LVL35:
  93:src/MemoryAllocator.cpp ****     //find size of the process for deallocation
  94:src/MemoryAllocator.cpp ****     MemoryAllocator* ma = getInstance();
GAS LISTING /tmp/cc2G774b.s 			page 12


 416              		.loc 1 94 5
 417              	.LBB36:
 418              	.LBB37:
  18:src/../h/MemoryAllocator.hpp ****             instance = (MemoryAllocator*)HEAP_START_ADDR;
 419              		.loc 2 18 9
  18:src/../h/MemoryAllocator.hpp ****             instance = (MemoryAllocator*)HEAP_START_ADDR;
 420              		.loc 2 18 21 is_stmt 0
 421 0200 97070000 		ld	a5,.LANCHOR0
 421      83B70700 
  18:src/../h/MemoryAllocator.hpp ****             instance = (MemoryAllocator*)HEAP_START_ADDR;
 422              		.loc 2 18 9
 423 0208 63860702 		beqz	a5,.L51
 424              	.L31:
 425              		.loc 2 29 9 is_stmt 1
 426              		.loc 2 29 16 is_stmt 0
 427 020c 17060000 		ld	a2,.LANCHOR0
 427      03360600 
 428              	.LVL36:
 429              	.LBE37:
 430              	.LBE36:
  95:src/MemoryAllocator.cpp **** 
  96:src/MemoryAllocator.cpp ****     size_t size = -1;
 431              		.loc 1 96 5 is_stmt 1
  97:src/MemoryAllocator.cpp ****     bool found = false;
 432              		.loc 1 97 5
  98:src/MemoryAllocator.cpp ****     FreeMem* prev=nullptr;
 433              		.loc 1 98 5
  99:src/MemoryAllocator.cpp ****     for( FreeMem *temp = ma->pcbList.head; temp!=nullptr; temp=temp->next){
 434              		.loc 1 99 5
 435              	.LBB39:
 436              		.loc 1 99 19 is_stmt 0
 437 0214 83370601 		ld	a5,16(a2)
 438              	.LVL37:
 439              	.LBE39:
  98:src/MemoryAllocator.cpp ****     FreeMem* prev=nullptr;
 440              		.loc 1 98 14
 441 0218 93060000 		li	a3,0
 442              	.LVL38:
 443              	.L36:
 444              	.LBB40:
 445              		.loc 1 99 48 is_stmt 1 discriminator 1
 446 021c 638C0714 		beqz	a5,.L44
 100:src/MemoryAllocator.cpp ****         if(temp->address==addr) {
 447              		.loc 1 100 9
 448              		.loc 1 100 18 is_stmt 0
 449 0220 03B78700 		ld	a4,8(a5)
 450              		.loc 1 100 9
 451 0224 630EA706 		beq	a4,a0,.L52
 101:src/MemoryAllocator.cpp ****             size = temp->size;
 102:src/MemoryAllocator.cpp ****             //delete pointer from pcb list
 103:src/MemoryAllocator.cpp ****             if(prev== nullptr) {
 104:src/MemoryAllocator.cpp ****                 ma->pcbList.head = temp->next;
 105:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 106:src/MemoryAllocator.cpp ****                 found=true;
 107:src/MemoryAllocator.cpp ****                 break;
 108:src/MemoryAllocator.cpp ****             }
 109:src/MemoryAllocator.cpp ****             else {
GAS LISTING /tmp/cc2G774b.s 			page 13


 110:src/MemoryAllocator.cpp ****                 prev->next = temp->next;
 111:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 112:src/MemoryAllocator.cpp ****                 found=true;
 113:src/MemoryAllocator.cpp ****                 break;
 114:src/MemoryAllocator.cpp ****             }
 115:src/MemoryAllocator.cpp ****         }
 116:src/MemoryAllocator.cpp ****         prev = temp;
 452              		.loc 1 116 9 is_stmt 1 discriminator 2
 453              	.LVL39:
  99:src/MemoryAllocator.cpp ****         if(temp->address==addr) {
 454              		.loc 1 99 5 discriminator 2
 455              		.loc 1 116 14 is_stmt 0 discriminator 2
 456 0228 93860700 		mv	a3,a5
  99:src/MemoryAllocator.cpp ****         if(temp->address==addr) {
 457              		.loc 1 99 63 discriminator 2
 458 022c 83B70701 		ld	a5,16(a5)
 459              	.LVL40:
  99:src/MemoryAllocator.cpp ****         if(temp->address==addr) {
 460              		.loc 1 99 5 discriminator 2
 461 0230 6FF0DFFE 		j	.L36
 462              	.LVL41:
 463              	.L51:
 464              	.LBE40:
 465              	.LBB41:
 466              	.LBB38:
  19:src/../h/MemoryAllocator.hpp **** 
 467              		.loc 2 19 13 is_stmt 1
  19:src/../h/MemoryAllocator.hpp **** 
 468              		.loc 2 19 22 is_stmt 0
 469 0234 97060000 		la	a3,HEAP_START_ADDR
 469      83B60600 
 470 023c 83B70600 		ld	a5,0(a3)
 471 0240 17070000 		lla	a4,.LANCHOR0
 471      13070700 
 472 0248 2330F700 		sd	a5,0(a4)
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 473              		.loc 2 21 13 is_stmt 1
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 474              		.loc 2 21 71 is_stmt 0
 475 024c 13860702 		addi	a2,a5,32
  21:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->address=(void*)((size_t)HEAP_START_ADDR+sizeof(MemoryAllocator
 476              		.loc 2 21 36
 477 0250 23B0C700 		sd	a2,0(a5)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 478              		.loc 2 22 13 is_stmt 1
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 479              		.loc 2 22 77 is_stmt 0
 480 0254 83B60600 		ld	a3,0(a3)
 481 0258 93850602 		addi	a1,a3,32
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 482              		.loc 2 22 32
 483 025c 83370700 		ld	a5,0(a4)
 484 0260 03B60700 		ld	a2,0(a5)
  22:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->size = (size_t)HEAP_END_ADDR-((size_t)HEAP_START_ADDR+sizeof(M
 485              		.loc 2 22 45
 486 0264 2334B600 		sd	a1,8(a2)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
GAS LISTING /tmp/cc2G774b.s 			page 14


 487              		.loc 2 23 13 is_stmt 1
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 488              		.loc 2 23 32 is_stmt 0
 489 0268 03B60700 		ld	a2,0(a5)
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 490              		.loc 2 23 66
 491 026c 97070000 		la	a5,HEAP_END_ADDR
 491      83B70700 
 492 0274 83B70700 		ld	a5,0(a5)
 493 0278 B387D740 		sub	a5,a5,a3
 494 027c 938707FE 		addi	a5,a5,-32
  23:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->next= nullptr;
 495              		.loc 2 23 43
 496 0280 2330F600 		sd	a5,0(a2)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 497              		.loc 2 24 13 is_stmt 1
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 498              		.loc 2 24 32 is_stmt 0
 499 0284 83370700 		ld	a5,0(a4)
 500 0288 03B70700 		ld	a4,0(a5)
  24:src/../h/MemoryAllocator.hpp ****             instance->freeList.head->prev= nullptr;
 501              		.loc 2 24 42
 502 028c 23380700 		sd	zero,16(a4)
  25:src/../h/MemoryAllocator.hpp **** 
 503              		.loc 2 25 13 is_stmt 1
  25:src/../h/MemoryAllocator.hpp **** 
 504              		.loc 2 25 32 is_stmt 0
 505 0290 03B70700 		ld	a4,0(a5)
  25:src/../h/MemoryAllocator.hpp **** 
 506              		.loc 2 25 42
 507 0294 233C0700 		sd	zero,24(a4)
  27:src/../h/MemoryAllocator.hpp ****         }
 508              		.loc 2 27 13 is_stmt 1
  27:src/../h/MemoryAllocator.hpp ****         }
 509              		.loc 2 27 35 is_stmt 0
 510 0298 23B80700 		sd	zero,16(a5)
 511 029c 6FF01FF7 		j	.L31
 512              	.LVL42:
 513              	.L52:
 514              	.LBE38:
 515              	.LBE41:
  92:src/MemoryAllocator.cpp ****     //find size of the process for deallocation
 516              		.loc 1 92 43
 517 02a0 130101FE 		addi	sp,sp,-32
 518              		.cfi_def_cfa_offset 32
 519 02a4 233C1100 		sd	ra,24(sp)
 520 02a8 23388100 		sd	s0,16(sp)
 521 02ac 23349100 		sd	s1,8(sp)
 522              		.cfi_offset 1, -8
 523              		.cfi_offset 8, -16
 524              		.cfi_offset 9, -24
 525 02b0 13040102 		addi	s0,sp,32
 526              		.cfi_def_cfa 8, 0
 527              	.LBB42:
 101:src/MemoryAllocator.cpp ****             //delete pointer from pcb list
 528              		.loc 1 101 13 is_stmt 1
 101:src/MemoryAllocator.cpp ****             //delete pointer from pcb list
GAS LISTING /tmp/cc2G774b.s 			page 15


 529              		.loc 1 101 18 is_stmt 0
 530 02b4 03B70700 		ld	a4,0(a5)
 531              	.LVL43:
 103:src/MemoryAllocator.cpp ****                 ma->pcbList.head = temp->next;
 532              		.loc 1 103 13 is_stmt 1
 533 02b8 638A0602 		beqz	a3,.L53
 110:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 534              		.loc 1 110 17
 110:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 535              		.loc 1 110 36 is_stmt 0
 536 02bc 83B50701 		ld	a1,16(a5)
 110:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 537              		.loc 1 110 28
 538 02c0 23B8B600 		sd	a1,16(a3)
 111:src/MemoryAllocator.cpp ****                 found=true;
 539              		.loc 1 111 17 is_stmt 1
 111:src/MemoryAllocator.cpp ****                 found=true;
 540              		.loc 1 111 27 is_stmt 0
 541 02c4 23B80700 		sd	zero,16(a5)
 112:src/MemoryAllocator.cpp ****                 break;
 542              		.loc 1 112 17 is_stmt 1
 543              	.LVL44:
 113:src/MemoryAllocator.cpp ****             }
 544              		.loc 1 113 17
 545              	.LBE42:
 117:src/MemoryAllocator.cpp ****     }
 118:src/MemoryAllocator.cpp ****     //size not found
 119:src/MemoryAllocator.cpp ****     if(found==false)return -1;
 546              		.loc 1 119 5
 547              	.L35:
 120:src/MemoryAllocator.cpp **** 
 121:src/MemoryAllocator.cpp ****     //find the place where to insert the new free segment (just after cur)
 122:src/MemoryAllocator.cpp ****     FreeMem* cur=0;
 548              		.loc 1 122 5
 123:src/MemoryAllocator.cpp ****     if(ma->freeList.head== nullptr || addr<(char*)ma->freeList.head->address)
 549              		.loc 1 123 5
 550              		.loc 1 123 21 is_stmt 0
 551 02c8 83370600 		ld	a5,0(a2)
 552              	.LVL45:
 553              		.loc 1 123 5
 554 02cc 63880702 		beqz	a5,.L45
 555              		.loc 1 123 70 discriminator 1
 556 02d0 83B68700 		ld	a3,8(a5)
 557              		.loc 1 123 36 discriminator 1
 558 02d4 6368D502 		bgtu	a3,a0,.L46
 559              	.LVL46:
 560              	.L38:
 124:src/MemoryAllocator.cpp ****         cur= nullptr;   //insert as first
 125:src/MemoryAllocator.cpp ****     else
 126:src/MemoryAllocator.cpp ****         for(cur=ma->freeList.head; cur->next!= nullptr && addr>(char*)(cur->next); cur=cur->next);
 561              		.loc 1 126 56 is_stmt 1 discriminator 4
 562 02d8 93840700 		mv	s1,a5
 563              		.loc 1 126 41 is_stmt 0 discriminator 4
 564 02dc 83B70701 		ld	a5,16(a5)
 565              	.LVL47:
 566              		.loc 1 126 56 discriminator 4
 567 02e0 63840702 		beqz	a5,.L37
GAS LISTING /tmp/cc2G774b.s 			page 16


 568              		.loc 1 126 56 discriminator 2
 569 02e4 E3EAA7FE 		bltu	a5,a0,.L38
 570 02e8 6F000002 		j	.L37
 571              	.LVL48:
 572              	.L53:
 573              	.LBB43:
 104:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 574              		.loc 1 104 17 is_stmt 1
 104:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 575              		.loc 1 104 42 is_stmt 0
 576 02ec 83B60701 		ld	a3,16(a5)
 577              	.LVL49:
 104:src/MemoryAllocator.cpp ****                 temp->next= nullptr;
 578              		.loc 1 104 34
 579 02f0 2338D600 		sd	a3,16(a2)
 105:src/MemoryAllocator.cpp ****                 found=true;
 580              		.loc 1 105 17 is_stmt 1
 105:src/MemoryAllocator.cpp ****                 found=true;
 581              		.loc 1 105 27 is_stmt 0
 582 02f4 23B80700 		sd	zero,16(a5)
 106:src/MemoryAllocator.cpp ****                 break;
 583              		.loc 1 106 17 is_stmt 1
 584              	.LVL50:
 107:src/MemoryAllocator.cpp ****             }
 585              		.loc 1 107 17
 586              	.LBE43:
 119:src/MemoryAllocator.cpp **** 
 587              		.loc 1 119 5
 588 02f8 6FF01FFD 		j	.L35
 589              	.LVL51:
 590              	.L45:
 124:src/MemoryAllocator.cpp ****     else
 591              		.loc 1 124 12 is_stmt 0
 592 02fc 93840700 		mv	s1,a5
 593 0300 6F008000 		j	.L37
 594              	.L46:
 595 0304 93040000 		li	s1,0
 596              	.LVL52:
 597              	.L37:
 127:src/MemoryAllocator.cpp **** 
 128:src/MemoryAllocator.cpp ****     //insert seg after cur
 129:src/MemoryAllocator.cpp ****     FreeMem* newSeg = (FreeMem*)addr;
 598              		.loc 1 129 5 is_stmt 1
 130:src/MemoryAllocator.cpp ****     newSeg->size = size;
 599              		.loc 1 130 5
 600              		.loc 1 130 18 is_stmt 0
 601 0308 2330E500 		sd	a4,0(a0)
 131:src/MemoryAllocator.cpp ****     newSeg->prev= cur;
 602              		.loc 1 131 5 is_stmt 1
 603              		.loc 1 131 17 is_stmt 0
 604 030c 233C9500 		sd	s1,24(a0)
 132:src/MemoryAllocator.cpp ****     newSeg->address=addr;
 605              		.loc 1 132 5 is_stmt 1
 606              		.loc 1 132 20 is_stmt 0
 607 0310 2334A500 		sd	a0,8(a0)
 133:src/MemoryAllocator.cpp ****     if(cur)newSeg->next = cur->next;//link to next
 608              		.loc 1 133 5 is_stmt 1
GAS LISTING /tmp/cc2G774b.s 			page 17


 609 0314 63860404 		beqz	s1,.L39
 610              		.loc 1 133 12 discriminator 1
 611              		.loc 1 133 32 is_stmt 0 discriminator 1
 612 0318 83B70401 		ld	a5,16(s1)
 613              		.loc 1 133 25 discriminator 1
 614 031c 2338F500 		sd	a5,16(a0)
 615              	.L40:
 134:src/MemoryAllocator.cpp ****     else newSeg->next=ma->freeList.head;
 135:src/MemoryAllocator.cpp ****     if(newSeg->next)newSeg->next->prev=newSeg;
 616              		.loc 1 135 5 is_stmt 1
 617              		.loc 1 135 16 is_stmt 0
 618 0320 83370501 		ld	a5,16(a0)
 619              		.loc 1 135 5
 620 0324 63840700 		beqz	a5,.L41
 621              		.loc 1 135 21 is_stmt 1 discriminator 1
 622              		.loc 1 135 39 is_stmt 0 discriminator 1
 623 0328 23BCA700 		sd	a0,24(a5)
 624              	.L41:
 136:src/MemoryAllocator.cpp ****     if(cur)cur->next=newSeg; //link previous
 625              		.loc 1 136 5 is_stmt 1
 626 032c 63800404 		beqz	s1,.L42
 627              		.loc 1 136 12 discriminator 1
 628              		.loc 1 136 21 is_stmt 0 discriminator 1
 629 0330 23B8A400 		sd	a0,16(s1)
 630              	.L43:
 137:src/MemoryAllocator.cpp ****     else ma->freeList.head = newSeg;
 138:src/MemoryAllocator.cpp **** 
 139:src/MemoryAllocator.cpp **** 
 140:src/MemoryAllocator.cpp **** 
 141:src/MemoryAllocator.cpp ****     tryToJoin(newSeg);
 631              		.loc 1 141 5 is_stmt 1
 632              		.loc 1 141 14 is_stmt 0
 633 0334 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPN16DoublyLinkedListImE4NodeE
 633      E7800000 
 634              	.LVL53:
 142:src/MemoryAllocator.cpp ****     tryToJoin(cur);
 635              		.loc 1 142 5 is_stmt 1
 636              		.loc 1 142 14 is_stmt 0
 637 033c 13850400 		mv	a0,s1
 638 0340 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPN16DoublyLinkedListImE4NodeE
 638      E7800000 
 639              	.LVL54:
 143:src/MemoryAllocator.cpp **** 
 144:src/MemoryAllocator.cpp **** 
 145:src/MemoryAllocator.cpp **** 
 146:src/MemoryAllocator.cpp **** 
 147:src/MemoryAllocator.cpp ****     return 0;
 640              		.loc 1 147 5 is_stmt 1
 641              		.loc 1 147 12 is_stmt 0
 642 0348 13050000 		li	a0,0
 643              	.LVL55:
 148:src/MemoryAllocator.cpp **** 
 149:src/MemoryAllocator.cpp **** }...
 644              		.loc 1 149 1
 645 034c 83308101 		ld	ra,24(sp)
 646              		.cfi_remember_state
 647              		.cfi_restore 1
GAS LISTING /tmp/cc2G774b.s 			page 18


 648 0350 03340101 		ld	s0,16(sp)
 649              		.cfi_restore 8
 650              		.cfi_def_cfa 2, 32
 651 0354 83348100 		ld	s1,8(sp)
 652              		.cfi_restore 9
 653              	.LVL56:
 654 0358 13010102 		addi	sp,sp,32
 655              		.cfi_def_cfa_offset 0
 656 035c 67800000 		jr	ra
 657              	.LVL57:
 658              	.L39:
 659              		.cfi_restore_state
 134:src/MemoryAllocator.cpp ****     else newSeg->next=ma->freeList.head;
 660              		.loc 1 134 10 is_stmt 1
 134:src/MemoryAllocator.cpp ****     else newSeg->next=ma->freeList.head;
 661              		.loc 1 134 36 is_stmt 0
 662 0360 83370600 		ld	a5,0(a2)
 134:src/MemoryAllocator.cpp ****     else newSeg->next=ma->freeList.head;
 663              		.loc 1 134 22
 664 0364 2338F500 		sd	a5,16(a0)
 665 0368 6FF09FFB 		j	.L40
 666              	.L42:
 137:src/MemoryAllocator.cpp ****     else ma->freeList.head = newSeg;
 667              		.loc 1 137 10 is_stmt 1
 137:src/MemoryAllocator.cpp ****     else ma->freeList.head = newSeg;
 668              		.loc 1 137 28 is_stmt 0
 669 036c 2330A600 		sd	a0,0(a2)
 670 0370 6FF05FFC 		j	.L43
 671              	.LVL58:
 672              	.L44:
 673              		.cfi_def_cfa_register 2
 674              		.cfi_restore 1
 675              		.cfi_restore 8
 676              		.cfi_restore 9
 119:src/MemoryAllocator.cpp ****     if(found==false)return -1;
 677              		.loc 1 119 29
 678 0374 1305F0FF 		li	a0,-1
 679              	.LVL59:
 680              		.loc 1 149 1
 681 0378 67800000 		ret
 682              		.cfi_endproc
 683              	.LFE10:
 685              		.globl	_ZN15MemoryAllocator8instanceE
 686              		.bss
 687              		.align	3
 688              		.set	.LANCHOR0,. + 0
 691              	_ZN15MemoryAllocator8instanceE:
 692 0000 00000000 		.zero	8
 692      00000000 
 693              		.text
 694              	.Letext0:
 695              		.file 3 "src/../h/../lib/hw.h"
 696              		.file 4 "src/../h/DoublyLinkedList.hpp"
GAS LISTING /tmp/cc2G774b.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/cc2G774b.s:9      .text:0000000000000000 _ZN15MemoryAllocator10kmem_allocEm
     /tmp/cc2G774b.s:13     .text:0000000000000000 .L0 
     /tmp/cc2G774b.s:15     .text:0000000000000000 .L0 
     /tmp/cc2G774b.s:16     .text:0000000000000004 .L0 
     /tmp/cc2G774b.s:18     .text:0000000000000008 .L0 
     /tmp/cc2G774b.s:20     .text:000000000000000c .L0 
     /tmp/cc2G774b.s:26     .text:0000000000000010 .L0 
     /tmp/cc2G774b.s:27     .text:0000000000000010 .L0 
     /tmp/cc2G774b.s:28     .text:0000000000000010 .L0 
     /tmp/cc2G774b.s:30     .text:0000000000000018 .L0 
     /tmp/cc2G774b.s:34     .text:000000000000001c .L0 
     /tmp/cc2G774b.s:35     .text:000000000000001c .L0 
     /tmp/cc2G774b.s:41     .text:0000000000000024 .L0 
     /tmp/cc2G774b.s:42     .text:0000000000000024 .L0 
     /tmp/cc2G774b.s:46     .text:0000000000000028 .L0 
     /tmp/cc2G774b.s:49     .text:000000000000002c .L0 
     /tmp/cc2G774b.s:50     .text:000000000000002c .L0 
     /tmp/cc2G774b.s:52     .text:0000000000000030 .L0 
     /tmp/cc2G774b.s:55     .text:0000000000000034 .L0 
     /tmp/cc2G774b.s:56     .text:0000000000000034 .L0 
     /tmp/cc2G774b.s:58     .text:0000000000000038 .L0 
     /tmp/cc2G774b.s:62     .text:0000000000000040 .L0 
     /tmp/cc2G774b.s:63     .text:0000000000000040 .L0 
     /tmp/cc2G774b.s:65     .text:0000000000000044 .L0 
     /tmp/cc2G774b.s:67     .text:0000000000000048 .L0 
     /tmp/cc2G774b.s:68     .text:0000000000000048 .L0 
     /tmp/cc2G774b.s:70     .text:000000000000004c .L0 
     /tmp/cc2G774b.s:73     .text:0000000000000050 .L0 
     /tmp/cc2G774b.s:74     .text:0000000000000050 .L0 
     /tmp/cc2G774b.s:76     .text:0000000000000054 .L0 
     /tmp/cc2G774b.s:78     .text:0000000000000058 .L0 
     /tmp/cc2G774b.s:79     .text:0000000000000058 .L0 
     /tmp/cc2G774b.s:81     .text:000000000000005c .L0 
     /tmp/cc2G774b.s:85     .text:0000000000000060 .L0 
     /tmp/cc2G774b.s:86     .text:0000000000000060 .L0 
     /tmp/cc2G774b.s:87     .text:0000000000000060 .L0 
     /tmp/cc2G774b.s:89     .text:0000000000000064 .L0 
     /tmp/cc2G774b.s:90     .text:0000000000000064 .L0 
     /tmp/cc2G774b.s:92     .text:0000000000000068 .L0 
     /tmp/cc2G774b.s:93     .text:0000000000000068 .L0 
     /tmp/cc2G774b.s:96     .text:000000000000006c .L0 
     /tmp/cc2G774b.s:97     .text:000000000000006c .L0 
     /tmp/cc2G774b.s:100    .text:0000000000000070 .L0 
     /tmp/cc2G774b.s:105    .text:0000000000000074 .L0 
     /tmp/cc2G774b.s:107    .text:0000000000000078 .L0 
     /tmp/cc2G774b.s:110    .text:000000000000007c .L0 
     /tmp/cc2G774b.s:112    .text:0000000000000080 .L0 
     /tmp/cc2G774b.s:113    .text:0000000000000080 .L0 
     /tmp/cc2G774b.s:119    .text:0000000000000084 .L0 
     /tmp/cc2G774b.s:120    .text:0000000000000084 .L0 
     /tmp/cc2G774b.s:128    .text:0000000000000088 .L0 
     /tmp/cc2G774b.s:129    .text:000000000000008c .L0 
     /tmp/cc2G774b.s:130    .text:000000000000008c .L0 
     /tmp/cc2G774b.s:131    .text:000000000000008c .L0 
     /tmp/cc2G774b.s:133    .text:0000000000000090 .L0 
GAS LISTING /tmp/cc2G774b.s 			page 20


     /tmp/cc2G774b.s:137    .text:0000000000000094 .L0 
     /tmp/cc2G774b.s:141    .text:0000000000000094 .L0 
     /tmp/cc2G774b.s:142    .text:0000000000000094 .L0 
     /tmp/cc2G774b.s:147    .text:00000000000000ac .L0 
     /tmp/cc2G774b.s:148    .text:00000000000000ac .L0 
     /tmp/cc2G774b.s:150    .text:00000000000000b0 .L0 
     /tmp/cc2G774b.s:152    .text:00000000000000b4 .L0 
     /tmp/cc2G774b.s:153    .text:00000000000000b4 .L0 
     /tmp/cc2G774b.s:157    .text:00000000000000bc .L0 
     /tmp/cc2G774b.s:160    .text:00000000000000c4 .L0 
     /tmp/cc2G774b.s:162    .text:00000000000000c8 .L0 
     /tmp/cc2G774b.s:163    .text:00000000000000c8 .L0 
     /tmp/cc2G774b.s:165    .text:00000000000000cc .L0 
     /tmp/cc2G774b.s:170    .text:00000000000000e0 .L0 
     /tmp/cc2G774b.s:172    .text:00000000000000e4 .L0 
     /tmp/cc2G774b.s:173    .text:00000000000000e4 .L0 
     /tmp/cc2G774b.s:176    .text:00000000000000ec .L0 
     /tmp/cc2G774b.s:178    .text:00000000000000f0 .L0 
     /tmp/cc2G774b.s:179    .text:00000000000000f0 .L0 
     /tmp/cc2G774b.s:181    .text:00000000000000f4 .L0 
     /tmp/cc2G774b.s:183    .text:00000000000000f8 .L0 
     /tmp/cc2G774b.s:184    .text:00000000000000f8 .L0 
     /tmp/cc2G774b.s:194    .text:0000000000000100 .L0 
     /tmp/cc2G774b.s:195    .text:0000000000000100 .L0 
     /tmp/cc2G774b.s:196    .text:0000000000000100 .L0 
     /tmp/cc2G774b.s:199    .text:0000000000000104 .L0 
     /tmp/cc2G774b.s:205    .text:0000000000000108 .L0 
     /tmp/cc2G774b.s:206    .text:0000000000000108 .L0 
     /tmp/cc2G774b.s:208    .text:000000000000010c .L0 
     /tmp/cc2G774b.s:214    .text:0000000000000114 .L0 
     /tmp/cc2G774b.s:215    .text:0000000000000114 .L0 
     /tmp/cc2G774b.s:224    .text:000000000000011c .L0 
     /tmp/cc2G774b.s:225    .text:000000000000011c .L0 
     /tmp/cc2G774b.s:227    .text:0000000000000120 .L0 
     /tmp/cc2G774b.s:230    .text:0000000000000124 .L0 
     /tmp/cc2G774b.s:231    .text:0000000000000124 .L0 
     /tmp/cc2G774b.s:233    .text:0000000000000128 .L0 
     /tmp/cc2G774b.s:235    .text:000000000000012c .L0 
     /tmp/cc2G774b.s:236    .text:000000000000012c .L0 
     /tmp/cc2G774b.s:239    .text:0000000000000130 .L0 
     /tmp/cc2G774b.s:240    .text:0000000000000130 .L0 
     /tmp/cc2G774b.s:242    .text:0000000000000134 .L0 
     /tmp/cc2G774b.s:244    .text:0000000000000138 .L0 
     /tmp/cc2G774b.s:245    .text:0000000000000138 .L0 
     /tmp/cc2G774b.s:248    .text:000000000000013c .L0 
     /tmp/cc2G774b.s:249    .text:000000000000013c .L0 
     /tmp/cc2G774b.s:251    .text:0000000000000140 .L0 
     /tmp/cc2G774b.s:253    .text:0000000000000144 .L0 
     /tmp/cc2G774b.s:254    .text:0000000000000144 .L0 
     /tmp/cc2G774b.s:256    .text:0000000000000148 .L0 
     /tmp/cc2G774b.s:258    .text:000000000000014c .L0 
     /tmp/cc2G774b.s:259    .text:000000000000014c .L0 
     /tmp/cc2G774b.s:261    .text:0000000000000150 .L0 
     /tmp/cc2G774b.s:263    .text:0000000000000154 .L0 
     /tmp/cc2G774b.s:265    .text:0000000000000158 .L0 
     /tmp/cc2G774b.s:266    .text:0000000000000158 .L0 
     /tmp/cc2G774b.s:269    .text:000000000000015c .L0 
GAS LISTING /tmp/cc2G774b.s 			page 21


     /tmp/cc2G774b.s:270    .text:000000000000015c .L0 
     /tmp/cc2G774b.s:271    .text:000000000000015c .L0 
     /tmp/cc2G774b.s:273    .text:0000000000000160 .L0 
     /tmp/cc2G774b.s:274    .text:0000000000000160 .L0 
     /tmp/cc2G774b.s:276    .text:0000000000000164 .L0 
     /tmp/cc2G774b.s:277    .text:0000000000000164 .L0 
     /tmp/cc2G774b.s:280    .text:0000000000000168 .L0 
     /tmp/cc2G774b.s:281    .text:0000000000000168 .L0 
     /tmp/cc2G774b.s:284    .text:000000000000016c .L0 
     /tmp/cc2G774b.s:289    .text:0000000000000170 .L0 
     /tmp/cc2G774b.s:291    .text:0000000000000174 .L0 
     /tmp/cc2G774b.s:294    .text:0000000000000178 .L0 
     /tmp/cc2G774b.s:296    .text:000000000000017c .L0 
     /tmp/cc2G774b.s:297    .text:000000000000017c .L0 
     /tmp/cc2G774b.s:303    .text:0000000000000180 .L0 
     /tmp/cc2G774b.s:304    .text:0000000000000180 .L0 
     /tmp/cc2G774b.s:310    .text:0000000000000188 .L0 
     /tmp/cc2G774b.s:311    .text:0000000000000188 .L0 
     /tmp/cc2G774b.s:317    .text:0000000000000190 .L0 
     /tmp/cc2G774b.s:318    .text:0000000000000190 .L0 
     /tmp/cc2G774b.s:326    .text:0000000000000198 .L0 
     /tmp/cc2G774b.s:332    .text:0000000000000198 _ZN15MemoryAllocator9tryToJoinEPN16DoublyLinkedListImE4NodeE
     /tmp/cc2G774b.s:335    .text:0000000000000198 .L0 
     /tmp/cc2G774b.s:337    .text:0000000000000198 .L0 
     /tmp/cc2G774b.s:338    .text:000000000000019c .L0 
     /tmp/cc2G774b.s:340    .text:00000000000001a0 .L0 
     /tmp/cc2G774b.s:342    .text:00000000000001a4 .L0 
     /tmp/cc2G774b.s:344    .text:00000000000001a4 .L0 
     /tmp/cc2G774b.s:346    .text:00000000000001a8 .L0 
     /tmp/cc2G774b.s:347    .text:00000000000001a8 .L0 
     /tmp/cc2G774b.s:349    .text:00000000000001ac .L0 
     /tmp/cc2G774b.s:351    .text:00000000000001b0 .L0 
     /tmp/cc2G774b.s:353    .text:00000000000001b4 .L0 
     /tmp/cc2G774b.s:355    .text:00000000000001b8 .L0 
     /tmp/cc2G774b.s:357    .text:00000000000001bc .L0 
     /tmp/cc2G774b.s:361    .text:00000000000001c0 .L0 
     /tmp/cc2G774b.s:362    .text:00000000000001c4 .L0 
     /tmp/cc2G774b.s:363    .text:00000000000001c4 .L0 
     /tmp/cc2G774b.s:364    .text:00000000000001c4 .L0 
     /tmp/cc2G774b.s:366    .text:00000000000001c8 .L0 
     /tmp/cc2G774b.s:370    .text:00000000000001cc .L0 
     /tmp/cc2G774b.s:372    .text:00000000000001cc .L0 
     /tmp/cc2G774b.s:373    .text:00000000000001cc .L0 
     /tmp/cc2G774b.s:375    .text:00000000000001d0 .L0 
     /tmp/cc2G774b.s:378    .text:00000000000001d8 .L0 
     /tmp/cc2G774b.s:379    .text:00000000000001d8 .L0 
     /tmp/cc2G774b.s:381    .text:00000000000001dc .L0 
     /tmp/cc2G774b.s:383    .text:00000000000001e0 .L0 
     /tmp/cc2G774b.s:385    .text:00000000000001e4 .L0 
     /tmp/cc2G774b.s:386    .text:00000000000001e4 .L0 
     /tmp/cc2G774b.s:389    .text:00000000000001e8 .L0 
     /tmp/cc2G774b.s:390    .text:00000000000001e8 .L0 
     /tmp/cc2G774b.s:396    .text:00000000000001f0 .L0 
     /tmp/cc2G774b.s:402    .text:00000000000001f8 .L0 
     /tmp/cc2G774b.s:405    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:411    .text:0000000000000200 _ZN15MemoryAllocator9kmem_freeEPv
     /tmp/cc2G774b.s:414    .text:0000000000000200 .L0 
GAS LISTING /tmp/cc2G774b.s 			page 22


     /tmp/cc2G774b.s:416    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:419    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:420    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:421    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:423    .text:0000000000000208 .L0 
     /tmp/cc2G774b.s:426    .text:000000000000020c .L0 
     /tmp/cc2G774b.s:427    .text:000000000000020c .L0 
     /tmp/cc2G774b.s:432    .text:0000000000000214 .L0 
     /tmp/cc2G774b.s:433    .text:0000000000000214 .L0 
     /tmp/cc2G774b.s:434    .text:0000000000000214 .L0 
     /tmp/cc2G774b.s:436    .text:0000000000000214 .L0 
     /tmp/cc2G774b.s:437    .text:0000000000000214 .L0 
     /tmp/cc2G774b.s:441    .text:0000000000000218 .L0 
     /tmp/cc2G774b.s:446    .text:000000000000021c .L0 
     /tmp/cc2G774b.s:448    .text:0000000000000220 .L0 
     /tmp/cc2G774b.s:449    .text:0000000000000220 .L0 
     /tmp/cc2G774b.s:451    .text:0000000000000224 .L0 
     /tmp/cc2G774b.s:454    .text:0000000000000228 .L0 
     /tmp/cc2G774b.s:455    .text:0000000000000228 .L0 
     /tmp/cc2G774b.s:456    .text:0000000000000228 .L0 
     /tmp/cc2G774b.s:458    .text:000000000000022c .L0 
     /tmp/cc2G774b.s:461    .text:0000000000000230 .L0 
     /tmp/cc2G774b.s:468    .text:0000000000000234 .L0 
     /tmp/cc2G774b.s:469    .text:0000000000000234 .L0 
     /tmp/cc2G774b.s:474    .text:000000000000024c .L0 
     /tmp/cc2G774b.s:475    .text:000000000000024c .L0 
     /tmp/cc2G774b.s:477    .text:0000000000000250 .L0 
     /tmp/cc2G774b.s:479    .text:0000000000000254 .L0 
     /tmp/cc2G774b.s:480    .text:0000000000000254 .L0 
     /tmp/cc2G774b.s:483    .text:000000000000025c .L0 
     /tmp/cc2G774b.s:486    .text:0000000000000264 .L0 
     /tmp/cc2G774b.s:488    .text:0000000000000268 .L0 
     /tmp/cc2G774b.s:489    .text:0000000000000268 .L0 
     /tmp/cc2G774b.s:491    .text:000000000000026c .L0 
     /tmp/cc2G774b.s:496    .text:0000000000000280 .L0 
     /tmp/cc2G774b.s:498    .text:0000000000000284 .L0 
     /tmp/cc2G774b.s:499    .text:0000000000000284 .L0 
     /tmp/cc2G774b.s:502    .text:000000000000028c .L0 
     /tmp/cc2G774b.s:504    .text:0000000000000290 .L0 
     /tmp/cc2G774b.s:505    .text:0000000000000290 .L0 
     /tmp/cc2G774b.s:507    .text:0000000000000294 .L0 
     /tmp/cc2G774b.s:509    .text:0000000000000298 .L0 
     /tmp/cc2G774b.s:510    .text:0000000000000298 .L0 
     /tmp/cc2G774b.s:517    .text:00000000000002a0 .L0 
     /tmp/cc2G774b.s:518    .text:00000000000002a4 .L0 
     /tmp/cc2G774b.s:522    .text:00000000000002b0 .L0 
     /tmp/cc2G774b.s:523    .text:00000000000002b0 .L0 
     /tmp/cc2G774b.s:524    .text:00000000000002b0 .L0 
     /tmp/cc2G774b.s:526    .text:00000000000002b4 .L0 
     /tmp/cc2G774b.s:529    .text:00000000000002b4 .L0 
     /tmp/cc2G774b.s:530    .text:00000000000002b4 .L0 
     /tmp/cc2G774b.s:533    .text:00000000000002b8 .L0 
     /tmp/cc2G774b.s:535    .text:00000000000002bc .L0 
     /tmp/cc2G774b.s:536    .text:00000000000002bc .L0 
     /tmp/cc2G774b.s:538    .text:00000000000002c0 .L0 
     /tmp/cc2G774b.s:540    .text:00000000000002c4 .L0 
     /tmp/cc2G774b.s:541    .text:00000000000002c4 .L0 
GAS LISTING /tmp/cc2G774b.s 			page 23


     /tmp/cc2G774b.s:544    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:546    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:548    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:549    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:550    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:551    .text:00000000000002c8 .L0 
     /tmp/cc2G774b.s:554    .text:00000000000002cc .L0 
     /tmp/cc2G774b.s:556    .text:00000000000002d0 .L0 
     /tmp/cc2G774b.s:558    .text:00000000000002d4 .L0 
     /tmp/cc2G774b.s:562    .text:00000000000002d8 .L0 
     /tmp/cc2G774b.s:564    .text:00000000000002dc .L0 
     /tmp/cc2G774b.s:567    .text:00000000000002e0 .L0 
     /tmp/cc2G774b.s:569    .text:00000000000002e4 .L0 
     /tmp/cc2G774b.s:575    .text:00000000000002ec .L0 
     /tmp/cc2G774b.s:576    .text:00000000000002ec .L0 
     /tmp/cc2G774b.s:579    .text:00000000000002f0 .L0 
     /tmp/cc2G774b.s:581    .text:00000000000002f4 .L0 
     /tmp/cc2G774b.s:582    .text:00000000000002f4 .L0 
     /tmp/cc2G774b.s:585    .text:00000000000002f8 .L0 
     /tmp/cc2G774b.s:587    .text:00000000000002f8 .L0 
     /tmp/cc2G774b.s:588    .text:00000000000002f8 .L0 
     /tmp/cc2G774b.s:592    .text:00000000000002fc .L0 
     /tmp/cc2G774b.s:599    .text:0000000000000308 .L0 
     /tmp/cc2G774b.s:600    .text:0000000000000308 .L0 
     /tmp/cc2G774b.s:601    .text:0000000000000308 .L0 
     /tmp/cc2G774b.s:603    .text:000000000000030c .L0 
     /tmp/cc2G774b.s:604    .text:000000000000030c .L0 
     /tmp/cc2G774b.s:606    .text:0000000000000310 .L0 
     /tmp/cc2G774b.s:607    .text:0000000000000310 .L0 
     /tmp/cc2G774b.s:609    .text:0000000000000314 .L0 
     /tmp/cc2G774b.s:611    .text:0000000000000318 .L0 
     /tmp/cc2G774b.s:612    .text:0000000000000318 .L0 
     /tmp/cc2G774b.s:614    .text:000000000000031c .L0 
     /tmp/cc2G774b.s:617    .text:0000000000000320 .L0 
     /tmp/cc2G774b.s:618    .text:0000000000000320 .L0 
     /tmp/cc2G774b.s:620    .text:0000000000000324 .L0 
     /tmp/cc2G774b.s:622    .text:0000000000000328 .L0 
     /tmp/cc2G774b.s:623    .text:0000000000000328 .L0 
     /tmp/cc2G774b.s:626    .text:000000000000032c .L0 
     /tmp/cc2G774b.s:628    .text:0000000000000330 .L0 
     /tmp/cc2G774b.s:629    .text:0000000000000330 .L0 
     /tmp/cc2G774b.s:632    .text:0000000000000334 .L0 
     /tmp/cc2G774b.s:633    .text:0000000000000334 .L0 
     /tmp/cc2G774b.s:636    .text:000000000000033c .L0 
     /tmp/cc2G774b.s:637    .text:000000000000033c .L0 
     /tmp/cc2G774b.s:641    .text:0000000000000348 .L0 
     /tmp/cc2G774b.s:642    .text:0000000000000348 .L0 
     /tmp/cc2G774b.s:645    .text:000000000000034c .L0 
     /tmp/cc2G774b.s:646    .text:0000000000000350 .L0 
     /tmp/cc2G774b.s:647    .text:0000000000000350 .L0 
     /tmp/cc2G774b.s:649    .text:0000000000000354 .L0 
     /tmp/cc2G774b.s:650    .text:0000000000000354 .L0 
     /tmp/cc2G774b.s:652    .text:0000000000000358 .L0 
     /tmp/cc2G774b.s:655    .text:000000000000035c .L0 
     /tmp/cc2G774b.s:659    .text:0000000000000360 .L0 
     /tmp/cc2G774b.s:661    .text:0000000000000360 .L0 
     /tmp/cc2G774b.s:662    .text:0000000000000360 .L0 
GAS LISTING /tmp/cc2G774b.s 			page 24


     /tmp/cc2G774b.s:664    .text:0000000000000364 .L0 
     /tmp/cc2G774b.s:668    .text:000000000000036c .L0 
     /tmp/cc2G774b.s:669    .text:000000000000036c .L0 
     /tmp/cc2G774b.s:673    .text:0000000000000374 .L0 
     /tmp/cc2G774b.s:674    .text:0000000000000374 .L0 
     /tmp/cc2G774b.s:675    .text:0000000000000374 .L0 
     /tmp/cc2G774b.s:676    .text:0000000000000374 .L0 
     /tmp/cc2G774b.s:678    .text:0000000000000374 .L0 
     /tmp/cc2G774b.s:681    .text:0000000000000378 .L0 
     /tmp/cc2G774b.s:682    .text:000000000000037c .L0 
     /tmp/cc2G774b.s:691    .bss:0000000000000000 _ZN15MemoryAllocator8instanceE
     /tmp/cc2G774b.s:688    .bss:0000000000000000 .LANCHOR0
     /tmp/cc2G774b.s:697    .text:000000000000037c .L0 
     /tmp/cc2G774b.s:28     .text:0000000000000010 .L0 
     /tmp/cc2G774b.s:35     .text:000000000000001c .L0 
     /tmp/cc2G774b.s:142    .text:0000000000000094 .L0 
     /tmp/cc2G774b.s:144    .text:00000000000000a0 .L0 
     /tmp/cc2G774b.s:165    .text:00000000000000cc .L0 
     /tmp/cc2G774b.s:421    .text:0000000000000200 .L0 
     /tmp/cc2G774b.s:427    .text:000000000000020c .L0 
     /tmp/cc2G774b.s:469    .text:0000000000000234 .L0 
     /tmp/cc2G774b.s:471    .text:0000000000000240 .L0 
     /tmp/cc2G774b.s:491    .text:000000000000026c .L0 
     /tmp/cc2G774b.s:136    .text:0000000000000094 .L18
     /tmp/cc2G774b.s:122    .text:0000000000000088 .L1
     /tmp/cc2G774b.s:187    .text:0000000000000100 .L19
     /tmp/cc2G774b.s:219    .text:000000000000011c .L6
     /tmp/cc2G774b.s:200    .text:0000000000000108 .L7
     /tmp/cc2G774b.s:82     .text:0000000000000060 .L9
     /tmp/cc2G774b.s:211    .text:0000000000000114 .L20
     /tmp/cc2G774b.s:101    .text:0000000000000074 .L10
     /tmp/cc2G774b.s:32     .text:000000000000001c .L2
     /tmp/cc2G774b.s:44     .text:0000000000000028 .L5
     /tmp/cc2G774b.s:71     .text:0000000000000050 .L8
     /tmp/cc2G774b.s:115    .text:0000000000000084 .L11
     /tmp/cc2G774b.s:308    .text:0000000000000188 .L12
     /tmp/cc2G774b.s:246    .text:000000000000013c .L14
     /tmp/cc2G774b.s:314    .text:0000000000000190 .L21
     /tmp/cc2G774b.s:286    .text:0000000000000170 .L15
     /tmp/cc2G774b.s:237    .text:0000000000000130 .L13
     /tmp/cc2G774b.s:299    .text:0000000000000180 .L16
     /tmp/cc2G774b.s:394    .text:00000000000001f0 .L25
     /tmp/cc2G774b.s:400    .text:00000000000001f8 .L26
     /tmp/cc2G774b.s:369    .text:00000000000001cc .L29
     /tmp/cc2G774b.s:387    .text:00000000000001e8 .L24
     /tmp/cc2G774b.s:359    .text:00000000000001c0 .L23
     /tmp/cc2G774b.s:463    .text:0000000000000234 .L51
     /tmp/cc2G774b.s:672    .text:0000000000000374 .L44
     /tmp/cc2G774b.s:513    .text:00000000000002a0 .L52
     /tmp/cc2G774b.s:443    .text:000000000000021c .L36
     /tmp/cc2G774b.s:424    .text:000000000000020c .L31
     /tmp/cc2G774b.s:572    .text:00000000000002ec .L53
     /tmp/cc2G774b.s:590    .text:00000000000002fc .L45
     /tmp/cc2G774b.s:594    .text:0000000000000304 .L46
     /tmp/cc2G774b.s:597    .text:0000000000000308 .L37
     /tmp/cc2G774b.s:560    .text:00000000000002d8 .L38
     /tmp/cc2G774b.s:547    .text:00000000000002c8 .L35
GAS LISTING /tmp/cc2G774b.s 			page 25


     /tmp/cc2G774b.s:658    .text:0000000000000360 .L39
     /tmp/cc2G774b.s:624    .text:000000000000032c .L41
     /tmp/cc2G774b.s:666    .text:000000000000036c .L42
     /tmp/cc2G774b.s:615    .text:0000000000000320 .L40
     /tmp/cc2G774b.s:630    .text:0000000000000334 .L43
     /tmp/cc2G774b.s:1375   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc2G774b.s:2571   .debug_str:0000000000000277 .LASF59
     /tmp/cc2G774b.s:2601   .debug_str:0000000000000436 .LASF60
     /tmp/cc2G774b.s:2511   .debug_str:000000000000002a .LASF61
     /tmp/cc2G774b.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc2G774b.s:694    .text:000000000000037c .Letext0
     /tmp/cc2G774b.s:2503   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc2G774b.s:2581   .debug_str:000000000000038e .LASF0
     /tmp/cc2G774b.s:2555   .debug_str:00000000000001c7 .LASF1
     /tmp/cc2G774b.s:2543   .debug_str:0000000000000176 .LASF2
     /tmp/cc2G774b.s:2519   .debug_str:000000000000008e .LASF4
     /tmp/cc2G774b.s:2551   .debug_str:00000000000001b0 .LASF3
     /tmp/cc2G774b.s:2509   .debug_str:0000000000000023 .LASF5
     /tmp/cc2G774b.s:2505   .debug_str:0000000000000000 .LASF6
     /tmp/cc2G774b.s:2537   .debug_str:000000000000014c .LASF7
     /tmp/cc2G774b.s:2593   .debug_str:00000000000003fb .LASF8
     /tmp/cc2G774b.s:2517   .debug_str:0000000000000080 .LASF9
     /tmp/cc2G774b.s:2639   .debug_str:0000000000000576 .LASF10
     /tmp/cc2G774b.s:2539   .debug_str:000000000000015f .LASF11
     /tmp/cc2G774b.s:2621   .debug_str:00000000000004de .LASF12
     /tmp/cc2G774b.s:2603   .debug_str:000000000000044e .LASF13
     /tmp/cc2G774b.s:2559   .debug_str:0000000000000201 .LASF14
     /tmp/cc2G774b.s:2529   .debug_str:00000000000000e6 .LASF15
     /tmp/cc2G774b.s:2597   .debug_str:0000000000000415 .LASF16
     /tmp/cc2G774b.s:2573   .debug_str:000000000000033b .LASF37
     /tmp/cc2G774b.s:2617   .debug_str:00000000000004cf .LASF62
     /tmp/cc2G774b.s:2629   .debug_str:0000000000000522 .LASF17
     /tmp/cc2G774b.s:2583   .debug_str:000000000000039b .LASF18
     /tmp/cc2G774b.s:2627   .debug_str:000000000000051d .LASF19
     /tmp/cc2G774b.s:2633   .debug_str:0000000000000544 .LASF20
     /tmp/cc2G774b.s:2569   .debug_str:0000000000000255 .LASF63
     /tmp/cc2G774b.s:2575   .debug_str:000000000000035f .LASF21
     /tmp/cc2G774b.s:2613   .debug_str:00000000000004a7 .LASF22
     /tmp/cc2G774b.s:2561   .debug_str:000000000000020d .LASF23
     /tmp/cc2G774b.s:2609   .debug_str:0000000000000485 .LASF25
     /tmp/cc2G774b.s:2567   .debug_str:0000000000000243 .LASF24
     /tmp/cc2G774b.s:2631   .debug_str:0000000000000527 .LASF26
     /tmp/cc2G774b.s:2563   .debug_str:000000000000021e .LASF27
     /tmp/cc2G774b.s:2525   .debug_str:00000000000000a2 .LASF28
     /tmp/cc2G774b.s:2599   .debug_str:000000000000042b .LASF29
     /tmp/cc2G774b.s:2557   .debug_str:00000000000001da .LASF30
     /tmp/cc2G774b.s:2535   .debug_str:0000000000000142 .LASF31
     /tmp/cc2G774b.s:2625   .debug_str:00000000000004f8 .LASF32
     /tmp/cc2G774b.s:2541   .debug_str:000000000000016e .LASF33
     /tmp/cc2G774b.s:2615   .debug_str:00000000000004ac .LASF34
     /tmp/cc2G774b.s:2605   .debug_str:000000000000045e .LASF47
     /tmp/cc2G774b.s:2623   .debug_str:00000000000004ee .LASF35
     /tmp/cc2G774b.s:2513   .debug_str:000000000000005a .LASF36
     /tmp/cc2G774b.s:2507   .debug_str:0000000000000013 .LASF38
     /tmp/cc2G774b.s:2589   .debug_str:00000000000003cb .LASF64
     /tmp/cc2G774b.s:2591   .debug_str:00000000000003d7 .LASF65
     /tmp/cc2G774b.s:2635   .debug_str:0000000000000549 .LASF39
GAS LISTING /tmp/cc2G774b.s 			page 26


     /tmp/cc2G774b.s:2579   .debug_str:000000000000036b .LASF40
     /tmp/cc2G774b.s:2595   .debug_str:000000000000040b .LASF41
     /tmp/cc2G774b.s:2637   .debug_str:0000000000000554 .LASF42
     /tmp/cc2G774b.s:2619   .debug_str:00000000000004d4 .LASF43
     /tmp/cc2G774b.s:2533   .debug_str:0000000000000105 .LASF44
     /tmp/cc2G774b.s:2545   .debug_str:0000000000000184 .LASF66
     /tmp/cc2G774b.s:2527   .debug_str:00000000000000ca .LASF45
     /tmp/cc2G774b.s:2547   .debug_str:000000000000018c .LASF46
     /tmp/cc2G774b.s:2565   .debug_str:000000000000022a .LASF48
     /tmp/cc2G774b.s:2585   .debug_str:00000000000003a3 .LASF49
     /tmp/cc2G774b.s:2531   .debug_str:00000000000000fc .LASF50
     /tmp/cc2G774b.s:2549   .debug_str:00000000000001a8 .LASF51
     /tmp/cc2G774b.s:2587   .debug_str:00000000000003ac .LASF67
     /tmp/cc2G774b.s:412    .text:0000000000000200 .LFB10
     /tmp/cc2G774b.s:683    .text:000000000000037c .LFE10
     /tmp/cc2G774b.s:2611   .debug_str:00000000000004a2 .LASF56
     /tmp/cc2G774b.s:2031   .debug_loc:0000000000000000 .LLST9
     /tmp/cc2G774b.s:2056   .debug_loc:0000000000000062 .LLST10
     /tmp/cc2G774b.s:2071   .debug_loc:00000000000000ab .LLST11
     /tmp/cc2G774b.s:2607   .debug_str:000000000000047f .LASF52
     /tmp/cc2G774b.s:2100   .debug_loc:0000000000000120 .LLST12
     /tmp/cc2G774b.s:2138   .debug_loc:00000000000001bc .LLST13
     /tmp/cc2G774b.s:2170   .debug_loc:0000000000000252 .LLST14
     /tmp/cc2G774b.s:2577   .debug_str:0000000000000364 .LASF53
     /tmp/cc2G774b.s:2199   .debug_loc:00000000000002d6 .LLST15
     /tmp/cc2G774b.s:2467   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc2G774b.s:2553   .debug_str:00000000000001c2 .LASF54
     /tmp/cc2G774b.s:2217   .debug_loc:0000000000000322 .LLST16
     /tmp/cc2G774b.s:417    .text:0000000000000200 .LBB36
     /tmp/cc2G774b.s:634    .text:000000000000033c .LVL53
     /tmp/cc2G774b.s:639    .text:0000000000000348 .LVL54
     /tmp/cc2G774b.s:2521   .debug_str:0000000000000095 .LASF55
     /tmp/cc2G774b.s:333    .text:0000000000000198 .LFB9
     /tmp/cc2G774b.s:406    .text:0000000000000200 .LFE9
     /tmp/cc2G774b.s:2245   .debug_loc:00000000000003a5 .LLST8
     /tmp/cc2G774b.s:10     .text:0000000000000000 .LFB8
     /tmp/cc2G774b.s:327    .text:0000000000000198 .LFE8
     /tmp/cc2G774b.s:2292   .debug_loc:0000000000000459 .LLST0
     /tmp/cc2G774b.s:2367   .debug_loc:0000000000000583 .LLST1
     /tmp/cc2G774b.s:2378   .debug_loc:00000000000005b9 .LLST2
     /tmp/cc2G774b.s:2515   .debug_str:000000000000007b .LASF57
     /tmp/cc2G774b.s:2393   .debug_loc:0000000000000602 .LLST3
     /tmp/cc2G774b.s:103    .text:0000000000000074 .LBB21
     /tmp/cc2G774b.s:116    .text:0000000000000084 .LBE21
     /tmp/cc2G774b.s:2404   .debug_loc:0000000000000638 .LLST4
     /tmp/cc2G774b.s:222    .text:000000000000011c .LBB24
     /tmp/cc2G774b.s:322    .text:0000000000000198 .LBE24
     /tmp/cc2G774b.s:2523   .debug_str:000000000000009a .LASF58
     /tmp/cc2G774b.s:2415   .debug_loc:000000000000066e .LLST5
     /tmp/cc2G774b.s:2432   .debug_loc:00000000000006b9 .LLST6
     /tmp/cc2G774b.s:287    .text:0000000000000170 .LBB26
     /tmp/cc2G774b.s:300    .text:0000000000000180 .LBE26
     /tmp/cc2G774b.s:2443   .debug_loc:00000000000006ef .LLST7
     /tmp/cc2G774b.s:23     .text:0000000000000010 .LBB13
     /tmp/cc2G774b.s:415    .text:0000000000000200 .LVL35
     /tmp/cc2G774b.s:657    .text:0000000000000360 .LVL57
     /tmp/cc2G774b.s:679    .text:0000000000000378 .LVL59
GAS LISTING /tmp/cc2G774b.s 			page 27


     /tmp/cc2G774b.s:428    .text:0000000000000214 .LVL36
     /tmp/cc2G774b.s:462    .text:0000000000000234 .LVL41
     /tmp/cc2G774b.s:512    .text:00000000000002a0 .LVL42
     /tmp/cc2G774b.s:531    .text:00000000000002b8 .LVL43
     /tmp/cc2G774b.s:671    .text:0000000000000374 .LVL58
     /tmp/cc2G774b.s:543    .text:00000000000002c8 .LVL44
     /tmp/cc2G774b.s:571    .text:00000000000002ec .LVL48
     /tmp/cc2G774b.s:584    .text:00000000000002f8 .LVL50
     /tmp/cc2G774b.s:643    .text:000000000000034c .LVL55
     /tmp/cc2G774b.s:442    .text:000000000000021c .LVL38
     /tmp/cc2G774b.s:453    .text:0000000000000228 .LVL39
     /tmp/cc2G774b.s:459    .text:0000000000000230 .LVL40
     /tmp/cc2G774b.s:577    .text:00000000000002f0 .LVL49
     /tmp/cc2G774b.s:559    .text:00000000000002d8 .LVL46
     /tmp/cc2G774b.s:565    .text:00000000000002e0 .LVL47
     /tmp/cc2G774b.s:589    .text:00000000000002fc .LVL51
     /tmp/cc2G774b.s:596    .text:0000000000000308 .LVL52
     /tmp/cc2G774b.s:653    .text:0000000000000358 .LVL56
     /tmp/cc2G774b.s:438    .text:0000000000000218 .LVL37
     /tmp/cc2G774b.s:552    .text:00000000000002cc .LVL45
     /tmp/cc2G774b.s:336    .text:0000000000000198 .LVL27
     /tmp/cc2G774b.s:358    .text:00000000000001c0 .LVL28
     /tmp/cc2G774b.s:368    .text:00000000000001cc .LVL29
     /tmp/cc2G774b.s:391    .text:00000000000001ec .LVL30
     /tmp/cc2G774b.s:393    .text:00000000000001f0 .LVL31
     /tmp/cc2G774b.s:397    .text:00000000000001f4 .LVL32
     /tmp/cc2G774b.s:399    .text:00000000000001f8 .LVL33
     /tmp/cc2G774b.s:403    .text:00000000000001fc .LVL34
     /tmp/cc2G774b.s:14     .text:0000000000000000 .LVL0
     /tmp/cc2G774b.s:31     .text:000000000000001c .LVL1
     /tmp/cc2G774b.s:98     .text:0000000000000070 .LVL5
     /tmp/cc2G774b.s:114    .text:0000000000000084 .LVL8
     /tmp/cc2G774b.s:135    .text:0000000000000094 .LVL10
     /tmp/cc2G774b.s:155    .text:00000000000000bc .LVL11
     /tmp/cc2G774b.s:210    .text:0000000000000114 .LVL14
     /tmp/cc2G774b.s:216    .text:0000000000000118 .LVL15
     /tmp/cc2G774b.s:218    .text:000000000000011c .LVL16
     /tmp/cc2G774b.s:282    .text:000000000000016c .LVL19
     /tmp/cc2G774b.s:298    .text:0000000000000180 .LVL22
     /tmp/cc2G774b.s:307    .text:0000000000000188 .LVL24
     /tmp/cc2G774b.s:313    .text:0000000000000190 .LVL25
     /tmp/cc2G774b.s:319    .text:0000000000000194 .LVL26
     /tmp/cc2G774b.s:36     .text:0000000000000024 .LVL2
     /tmp/cc2G774b.s:186    .text:0000000000000100 .LVL12
     /tmp/cc2G774b.s:43     .text:0000000000000028 .LVL3
     /tmp/cc2G774b.s:121    .text:0000000000000088 .LVL9
     /tmp/cc2G774b.s:305    .text:0000000000000184 .LVL23
     /tmp/cc2G774b.s:84     .text:0000000000000060 .LVL4
     /tmp/cc2G774b.s:102    .text:0000000000000074 .LVL6
     /tmp/cc2G774b.s:108    .text:000000000000007c .LVL7
     /tmp/cc2G774b.s:228    .text:0000000000000124 .LVL17
     /tmp/cc2G774b.s:285    .text:0000000000000170 .LVL20
     /tmp/cc2G774b.s:268    .text:000000000000015c .LVL18
     /tmp/cc2G774b.s:292    .text:0000000000000178 .LVL21
     /tmp/cc2G774b.s:698    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc2G774b.s:38     .text:0000000000000024 .LBE13
     /tmp/cc2G774b.s:138    .text:0000000000000094 .LBB31
GAS LISTING /tmp/cc2G774b.s 			page 28


     /tmp/cc2G774b.s:189    .text:0000000000000100 .LBE31
     /tmp/cc2G774b.s:40     .text:0000000000000024 .LBB16
     /tmp/cc2G774b.s:126    .text:0000000000000088 .LBE16
     /tmp/cc2G774b.s:190    .text:0000000000000100 .LBB32
     /tmp/cc2G774b.s:325    .text:0000000000000198 .LBE32
     /tmp/cc2G774b.s:60     .text:0000000000000040 .LBB19
     /tmp/cc2G774b.s:123    .text:0000000000000088 .LBE19
     /tmp/cc2G774b.s:203    .text:0000000000000108 .LBB23
     /tmp/cc2G774b.s:221    .text:000000000000011c .LBE23
     /tmp/cc2G774b.s:430    .text:0000000000000214 .LBE36
     /tmp/cc2G774b.s:465    .text:0000000000000234 .LBB41
     /tmp/cc2G774b.s:515    .text:00000000000002a0 .LBE41
     /tmp/cc2G774b.s:435    .text:0000000000000214 .LBB39
     /tmp/cc2G774b.s:439    .text:0000000000000218 .LBE39
     /tmp/cc2G774b.s:444    .text:000000000000021c .LBB40
     /tmp/cc2G774b.s:464    .text:0000000000000234 .LBE40
     /tmp/cc2G774b.s:527    .text:00000000000002b4 .LBB42
     /tmp/cc2G774b.s:545    .text:00000000000002c8 .LBE42
     /tmp/cc2G774b.s:573    .text:00000000000002ec .LBB43
     /tmp/cc2G774b.s:586    .text:00000000000002f8 .LBE43

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
